{"sha": "f2da9e26f5c0f04d48872938eff130e2028e75d3", "node_id": "C_kwDOANBUbNoAKGYyZGE5ZTI2ZjVjMGYwNGQ0ODg3MjkzOGVmZjEzMGUyMDI4ZTc1ZDM", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2022-01-04T20:45:36Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2022-01-05T12:04:01Z"}, "message": "Fix diagnostic recursion ICE\n\nThe [with T = $TYPE] diagnostic machinery must not cause recursion. So let's\nnot unilaterally warn about new alignment.  (template extracted from Open3D.)\n\n\tgcc/cp/\n\t* init.c (build_new_1): Check complain before alignment warning.\n\tgcc/testsuite/\n\t* g++.dg/diagnostic/recur-align.C: New.", "tree": {"sha": "21c2313a06f78ad1d13a54720a6fc7ef52d4ef81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21c2313a06f78ad1d13a54720a6fc7ef52d4ef81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2da9e26f5c0f04d48872938eff130e2028e75d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2da9e26f5c0f04d48872938eff130e2028e75d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2da9e26f5c0f04d48872938eff130e2028e75d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2da9e26f5c0f04d48872938eff130e2028e75d3/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77e71619532c7cd27e907bb22af157b8e56dca58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77e71619532c7cd27e907bb22af157b8e56dca58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77e71619532c7cd27e907bb22af157b8e56dca58"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "9d616f3f5e96bf8d9845baf4feb71a8470379ea8", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2da9e26f5c0f04d48872938eff130e2028e75d3/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2da9e26f5c0f04d48872938eff130e2028e75d3/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=f2da9e26f5c0f04d48872938eff130e2028e75d3", "patch": "@@ -3408,7 +3408,8 @@ build_new_1 (vec<tree, va_gc> **placement, tree type, tree nelts,\n     = (type_num_arguments (TREE_TYPE (alloc_fn)) > 1\n        || varargs_function_p (alloc_fn));\n \n-  if (warn_aligned_new\n+  if (complain & tf_warning_or_error\n+      && warn_aligned_new\n       && !placement_allocation_fn_p\n       && TYPE_ALIGN (elt_type) > malloc_alignment ()\n       && (warn_aligned_new > 1"}, {"sha": "e7d4b9a17cca2486c4ada16bd8aa52edb239ef37", "filename": "gcc/testsuite/g++.dg/diagnostic/recur-align.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2da9e26f5c0f04d48872938eff130e2028e75d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Frecur-align.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2da9e26f5c0f04d48872938eff130e2028e75d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Frecur-align.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Frecur-align.C?ref=f2da9e26f5c0f04d48872938eff130e2028e75d3", "patch": "@@ -0,0 +1,19 @@\n+// ICE with diagnostic recursion\n+// { dg-do compile { target { c++11_only || c++14_only } } }\n+// { dg-options -Waligned-new }\n+\n+struct __attribute__ ((aligned(256))) Aligned\n+{\n+  int b;\n+};\n+\n+template<typename T>\n+auto Foo (const T* x) -> decltype (new T (*x))\n+{\n+  return new T (*x); // { dg-warning \"with extended alignment\" }\n+}\n+\n+void Bar () {\n+  Aligned y;\n+  Foo (&y);\n+}"}]}