{"sha": "21c51f53f0145dd812b2231e03116f49fadcd004", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjNTFmNTNmMDE0NWRkODEyYjIyMzFlMDMxMTZmNDlmYWRjZDAwNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-08-01T09:48:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T09:48:28Z"}, "message": "a-numaux-vxworks.ads, [...]: Fix bad package header comments.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* a-numaux-vxworks.ads, a-numaux-x86.adb, a-numaux-x86.ads,\n\ta-numaux-darwin.adb, a-numaux-darwin.ads, a-numaux.ads,\n\ta-numaux-libc-x86.ads: Fix bad package header comments.\n\t* elists.ads, elists.adb (Append_New_Elmt): New procedure.\n\t* gnat_rm.texi, a-calend.adb, gnatcmd.adb, einfo.adb, einfo.ads,\n\tchecks.adb, sem_prag.adb, sem_prag.ads, rtsfind.ads, freeze.adb,\n\tsem_util.adb, sem_attr.adb, exp_dbug.adb, exp_dbug.ads, gnat1drv.adb,\n\ttargparm.adb, targparm.ads, exp_ch6.adb, switch-b.adb, s-shasto.ads,\n\tstand.ads, s-auxdec.ads, opt.adb, opt.ads, mlib-tgt.ads, s-fatgen.adb,\n\ts-fatgen.ads, system.ads, snames.ads-tmpl, s-stalib.ads,\n\ts-os_lib.adb: Remove VMS-specific code.\n\nFrom-SVN: r213437", "tree": {"sha": "7c810264a3539640bd067d4d280ad030675b8833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c810264a3539640bd067d4d280ad030675b8833"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21c51f53f0145dd812b2231e03116f49fadcd004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c51f53f0145dd812b2231e03116f49fadcd004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c51f53f0145dd812b2231e03116f49fadcd004", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c51f53f0145dd812b2231e03116f49fadcd004/comments", "author": null, "committer": null, "parents": [{"sha": "78433fec9a19c808d0b442741ad9ebb7b84389ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78433fec9a19c808d0b442741ad9ebb7b84389ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78433fec9a19c808d0b442741ad9ebb7b84389ef"}], "stats": {"total": 911, "additions": 145, "deletions": 766}, "files": [{"sha": "4e5bbb5bf8406ec7e54143bdb15dfff1c41b378e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -1,3 +1,17 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-numaux-vxworks.ads, a-numaux-x86.adb, a-numaux-x86.ads,\n+\ta-numaux-darwin.adb, a-numaux-darwin.ads, a-numaux.ads,\n+\ta-numaux-libc-x86.ads: Fix bad package header comments.\n+\t* elists.ads, elists.adb (Append_New_Elmt): New procedure.\n+\t* gnat_rm.texi, a-calend.adb, gnatcmd.adb, einfo.adb, einfo.ads,\n+\tchecks.adb, sem_prag.adb, sem_prag.ads, rtsfind.ads, freeze.adb,\n+\tsem_util.adb, sem_attr.adb, exp_dbug.adb, exp_dbug.ads, gnat1drv.adb,\n+\ttargparm.adb, targparm.ads, exp_ch6.adb, switch-b.adb, s-shasto.ads,\n+\tstand.ads, s-auxdec.ads, opt.adb, opt.ads, mlib-tgt.ads, s-fatgen.adb,\n+\ts-fatgen.ads, system.ads, snames.ads-tmpl, s-stalib.ads,\n+\ts-os_lib.adb: Remove VMS-specific code.\n+\n 2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_attr.adb (Is_Inline_Floating_Point_Attribute): Revert to"}, {"sha": "7c582ade3a0263cd5a800cc7fe281922fea81bc4", "filename": "gcc/ada/a-calend.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -69,7 +69,7 @@ package body Ada.Calendar is\n    --  by Integer in various routines. One ramification of this model is that\n    --  the caller site must perform validity checks on returned results.\n    --  The end result of this model is the lack of target specific files per\n-   --  child of Ada.Calendar (a-calfor, a-calfor-vms, a-calfor-vxwors, etc).\n+   --  child of Ada.Calendar (e.g. a-calfor).\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "2e9ffd91c118440d41fd98bbd778fbbd6cbd9681", "filename": "gcc/ada/a-numaux-darwin.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-darwin.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                          (Apple OS X Version)                            --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,8 +30,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  File a-numaux.adb <- a-numaux-darwin.adb\n-\n package body Ada.Numerics.Aux is\n \n    -----------------------"}, {"sha": "011ae592ce4fdebfa1e1f8d338122204fd56719b", "filename": "gcc/ada/a-numaux-darwin.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-darwin.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -30,12 +30,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This version is for use with normal Unix math functions, except for\n---  sine/cosine which have been implemented directly in Ada to get the required\n---  accuracy in OS X. Alternative packages are used on VxWorks (no need for the\n---  -lm Linker_Options), and on the x86 (where we have two versions one using\n---  inline ASM, and one importing from the C long routines that take 80-bit\n---  arguments).\n+--  This version is for use on OS X. It uses the normal Unix math functions,\n+--  except for sine/cosine which have been implemented directly in Ada to get\n+--  the required accuracy.\n \n package Ada.Numerics.Aux is\n    pragma Pure;"}, {"sha": "3b793c6240ecf14d577232fd01c05e651125ba7f", "filename": "gcc/ada/a-numaux-libc-x86.ads", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-libc-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-libc-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-libc-x86.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (C Library Version for x86)                        --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,16 +30,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides the basic computational interface for the generic\n---  elementary functions. The C library version interfaces with the routines\n---  in the C mathematical library, and is thus quite portable, although it may\n---  not necessarily meet the requirements for accuracy in the numerics annex.\n---  One advantage of using this package is that it will interface directly to\n---  hardware instructions, such as the those provided on the Intel x86.\n-\n---  Note: there are two versions of this package. One using the 80-bit x86\n---  long double format (which is this version), and one using 64-bit IEEE\n---  double (see file a-numaux.ads).\n+--  This version is for the x86 using the 80-bit x86 long double format\n \n package Ada.Numerics.Aux is\n    pragma Pure;"}, {"sha": "5fdf778b345777de43ffa2f513f9860d7a178358", "filename": "gcc/ada/a-numaux-vxworks.ads", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-vxworks.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                       (C Library Version, VxWorks)                       --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,23 +30,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides the basic computational interface for the generic\n---  elementary functions. The C library version interfaces with the routines\n---  in the C mathematical library, and is thus quite portable, although it may\n---  not necessarily meet the requirements for accuracy in the numerics annex.\n---  One advantage of using this package is that it will interface directly to\n---  hardware instructions, such as the those provided on the Intel x86.\n-\n---  Note: there are two versions of this package. One using the normal IEEE\n---  64-bit double format (which is this version), and one using 80-bit x86\n---  long double (see file 4onumaux.ads).\n+--  Version for use on VxWorks (where we have no libm.a library), so the pragma\n+--  Linker_Options (\"-lm\") is omitted in this version.\n \n package Ada.Numerics.Aux is\n    pragma Pure;\n \n-   --  This version omits the pragma linker_options (\"-lm\") since there is\n-   --  no libm.a library for VxWorks.\n-\n    type Double is digits 15;\n    --  Type Double is the type used to call the C routines\n "}, {"sha": "5f245a2c37b27e1f9090587c5b14beaeb41c53ad", "filename": "gcc/ada/a-numaux-x86.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-x86.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                        (Machine Version for x86)                         --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,11 +30,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  File a-numaux.adb <- 86numaux.adb\n-\n---  This version of Numerics.Aux is for the IEEE Double Extended floating\n---  point format on x86.\n-\n with System.Machine_Code; use System.Machine_Code;\n \n package body Ada.Numerics.Aux is"}, {"sha": "bf8b49c02ef355d486c25b4441e4c7a3685661b4", "filename": "gcc/ada/a-numaux-x86.ads", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-x86.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                        (Machine Version for x86)                         --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,14 +30,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides the basic computational interface for the generic\n---  elementary functions. This implementation is based on the glibc assembly\n---  sources for the x86 glibc math library.\n-\n---  Note: there are two versions of this package. One using the 80-bit x86\n---  long double format (which is this version), and one using 64-bit IEEE\n---  double (see file a-numaux.ads). The latter version imports the C\n---  routines directly.\n+--  Version for the x86, using 64-bit IEEE format with inline asm statements\n \n package Ada.Numerics.Aux is\n    pragma Pure;"}, {"sha": "f69fdc10da1ae5ec18449b74a0f878d31155b94f", "filename": "gcc/ada/a-numaux.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fa-numaux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -38,9 +38,12 @@\n --  hardware instructions, such as the those provided on the Intel x86.\n \n --  This version here is for use with normal Unix math functions. Alternative\n---  packages are used VxWorks (no need for the -lm Linker_Options), and on the\n---  x86 (where we have two versions one using inline ASM, and one importing\n---  from the C long routines that take 80-bit arguments).\n+--  versions are provided for special situations:\n+\n+--    a-numaux-darwin    For OS/X (special handling of sin/cos for accuracy)\n+--    a-numaux-libc-x86  For the x86, using 80-bit long double format\n+--    a-numaux-x86       For the x86, using 64-bit IEEE (inline asm statements)\n+--    a-numaux-vxworks   For use on VxWorks (where we have no libm.a library)\n \n package Ada.Numerics.Aux is\n    pragma Pure;"}, {"sha": "bf27d4ef3a2f2b4272052f7979ad59d4d8f244f8", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -8524,14 +8524,7 @@ package body Checks is\n    function Range_Checks_Suppressed (E : Entity_Id) return Boolean is\n    begin\n       if Present (E) then\n-\n-         --  Note: for now we always suppress range checks on Vax float types,\n-         --  since Gigi does not know how to generate these checks.\n-\n-         if Vax_Float (E) then\n-            return True;\n-\n-         elsif Kill_Range_Checks (E) then\n+         if Kill_Range_Checks (E) then\n             return True;\n \n          elsif Checks_May_Be_Suppressed (E) then\n@@ -8576,9 +8569,7 @@ package body Checks is\n       declare\n          Typ : constant Entity_Id := Etype (Expr);\n       begin\n-         if Vax_Float (Typ) then\n-            return True;\n-         elsif Checks_May_Be_Suppressed (Typ)\n+         if Checks_May_Be_Suppressed (Typ)\n            and then (Is_Check_Suppressed (Typ, Range_Check)\n                        or else\n                      Is_Check_Suppressed (Typ, Validity_Check))"}, {"sha": "7e0eaaaf0fe9404104b9087fa9de4d1d720377fd", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -115,7 +115,6 @@ package body Einfo is\n    --    RM_Size                         Uint13\n \n    --    Alignment                       Uint14\n-   --    First_Optional_Parameter        Node14\n    --    Normalized_Position             Uint14\n    --    Shadow_Entities                 List14\n \n@@ -1266,12 +1265,6 @@ package body Einfo is\n       return Node17 (Id);\n    end First_Literal;\n \n-   function First_Optional_Parameter (Id : E) return E is\n-   begin\n-      pragma Assert (Ekind_In (Id, E_Function, E_Procedure));\n-      return Node14 (Id);\n-   end First_Optional_Parameter;\n-\n    function First_Private_Entity (Id : E) return E is\n    begin\n       pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package)\n@@ -4004,12 +3997,6 @@ package body Einfo is\n       Set_Node17 (Id, V);\n    end Set_First_Literal;\n \n-   procedure Set_First_Optional_Parameter (Id : E; V : E) is\n-   begin\n-      pragma Assert (Ekind_In (Id, E_Function, E_Procedure));\n-      Set_Node14 (Id, V);\n-   end Set_First_Optional_Parameter;\n-\n    procedure Set_First_Private_Entity (Id : E; V : E) is\n    begin\n       pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package)\n@@ -8178,18 +8165,6 @@ package body Einfo is\n       end if;\n    end Underlying_Type;\n \n-   ---------------\n-   -- Vax_Float --\n-   ---------------\n-\n-   --  To be removed ???\n-\n-   function Vax_Float (Id : E) return B is\n-      pragma Unreferenced (Id);\n-   begin\n-      return False;\n-   end Vax_Float;\n-\n    ------------------------\n    -- Write_Entity_Flags --\n    ------------------------\n@@ -8891,10 +8866,6 @@ package body Einfo is\n               E_Loop_Parameter                             =>\n             Write_Str (\"Alignment\");\n \n-         when E_Function                                   |\n-              E_Procedure                                  =>\n-            Write_Str (\"First_Optional_Parameter\");\n-\n          when E_Component                                  |\n               E_Discriminant                               =>\n             Write_Str (\"Normalized_Position\");"}, {"sha": "11f61222883bc8f3e5cdddbf60aa02aa2f17a41a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -1278,13 +1278,6 @@ package Einfo is\n --       Note that this field is set in enumeration subtypes, but it still\n --       points to the first literal of the base type in this case.\n \n---    First_Optional_Parameter (Node14)\n---       Defined in (non-generic) function and procedure entities. Set to a\n---       non-null value only if a pragma Import_Function, Import_Procedure\n---       or Import_Valued_Procedure specifies a First_Optional_Parameter\n---       argument, in which case this field points to the parameter entity\n---       corresponding to the specified parameter.\n-\n --    First_Private_Entity (Node16)\n --       Defined in all entities containing private parts (packages, protected\n --       types and subtypes, task types and subtypes). The entities on the\n@@ -5615,7 +5608,6 @@ package Einfo is\n    --    Safe_Last_Value                     (synth)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n-   --    Vax_Float                           (synth)\n    --    (plus type attributes)\n \n    --  E_Function\n@@ -5626,7 +5618,6 @@ package Einfo is\n    --    Protected_Body_Subprogram           (Node11)\n    --    Next_Inlined_Subprogram             (Node12)\n    --    Elaboration_Entity                  (Node13)   (not implicit /=)\n-   --    First_Optional_Parameter            (Node14)   (non-generic case only)\n    --    DT_Position                         (Uint15)\n    --    DTC_Entity                          (Node16)\n    --    First_Entity                        (Node17)\n@@ -5926,7 +5917,6 @@ package Einfo is\n    --    Protected_Body_Subprogram           (Node11)\n    --    Next_Inlined_Subprogram             (Node12)\n    --    Elaboration_Entity                  (Node13)\n-   --    First_Optional_Parameter            (Node14)   (non-generic case only)\n    --    DT_Position                         (Uint15)\n    --    DTC_Entity                          (Node16)\n    --    First_Entity                        (Node17)\n@@ -6537,7 +6527,6 @@ package Einfo is\n    function First_Exit_Statement                (Id : E) return N;\n    function First_Index                         (Id : E) return N;\n    function First_Literal                       (Id : E) return E;\n-   function First_Optional_Parameter            (Id : E) return E;\n    function First_Private_Entity                (Id : E) return E;\n    function First_Rep_Item                      (Id : E) return N;\n    function Float_Rep                           (Id : E) return F;\n@@ -6866,7 +6855,6 @@ package Einfo is\n    function Used_As_Generic_Actual              (Id : E) return B;\n    function Uses_Lock_Free                      (Id : E) return B;\n    function Uses_Sec_Stack                      (Id : E) return B;\n-   function Vax_Float                           (Id : E) return B;\n    function Warnings_Off                        (Id : E) return B;\n    function Warnings_Off_Used                   (Id : E) return B;\n    function Warnings_Off_Used_Unmodified        (Id : E) return B;\n@@ -7172,7 +7160,6 @@ package Einfo is\n    procedure Set_First_Exit_Statement            (Id : E; V : N);\n    procedure Set_First_Index                     (Id : E; V : N);\n    procedure Set_First_Literal                   (Id : E; V : E);\n-   procedure Set_First_Optional_Parameter        (Id : E; V : E);\n    procedure Set_First_Private_Entity            (Id : E; V : E);\n    procedure Set_First_Rep_Item                  (Id : E; V : N);\n    procedure Set_Float_Rep                       (Id : E; V : F);\n@@ -7921,7 +7908,6 @@ package Einfo is\n    pragma Inline (First_Exit_Statement);\n    pragma Inline (First_Index);\n    pragma Inline (First_Literal);\n-   pragma Inline (First_Optional_Parameter);\n    pragma Inline (First_Private_Entity);\n    pragma Inline (First_Rep_Item);\n    pragma Inline (Freeze_Node);\n@@ -8402,7 +8388,6 @@ package Einfo is\n    pragma Inline (Set_First_Exit_Statement);\n    pragma Inline (Set_First_Index);\n    pragma Inline (Set_First_Literal);\n-   pragma Inline (Set_First_Optional_Parameter);\n    pragma Inline (Set_First_Private_Entity);\n    pragma Inline (Set_First_Rep_Item);\n    pragma Inline (Set_Freeze_Node);"}, {"sha": "fbfb9e7b46b57ec16142e221ae928d5c7e27b516", "filename": "gcc/ada/elists.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Felists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Felists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -138,6 +138,19 @@ package body Elists is\n       end if;\n    end Append_Elmt;\n \n+   ---------------------\n+   -- Append_New_Elmt --\n+   ---------------------\n+\n+   procedure Append_New_Elmt (N : Node_Or_Entity_Id; To : in out Elist_Id) is\n+   begin\n+      if To = No_Elist then\n+         To := New_Elmt_List;\n+      end if;\n+\n+      Append_Elmt (N, To);\n+   end Append_New_Elmt;\n+\n    ------------------------\n    -- Append_Unique_Elmt --\n    ------------------------"}, {"sha": "3353b9cd17fa5445eccecb684d3c29a5acb92ae2", "filename": "gcc/ada/elists.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Felists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Felists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -126,6 +126,11 @@ package Elists is\n    --  Appends N at the end of To, allocating a new element. N must be a\n    --  non-empty node or entity Id, and To must be an Elist (not No_Elist).\n \n+   procedure Append_New_Elmt (N : Node_Or_Entity_Id; To : in out Elist_Id);\n+   pragma Inline (Append_New_Elmt);\n+   --  Like Append_Elmt if Elist_Id is not No_List, but if Elist_Id is No_List,\n+   --  then first assigns it an empty element list and then does the append.\n+\n    procedure Append_Unique_Elmt (N : Node_Or_Entity_Id; To : Elist_Id);\n    --  Like Append_Elmt, except that a check is made to see if To already\n    --  contains N and if so the call has no effect."}, {"sha": "50bc11a5546da91f7120ae0d8f524ab26057e8da", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 0, "deletions": 145, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -1976,7 +1976,6 @@ package body Exp_Ch6 is\n    --    Rewrite call to predefined operator as operator\n    --    Replace actuals to in-out parameters that are numeric conversions,\n    --     with explicit assignment to temporaries before and after the call.\n-   --    Remove optional actuals if First_Optional_Parameter specified.\n \n    --   Note that the list of actuals has been filled with default expressions\n    --   during semantic analysis of the call. Only the extra actuals required\n@@ -4022,150 +4021,6 @@ package body Exp_Ch6 is\n             Establish_Transient_Scope (Call_Node, Sec_Stack => True);\n          end if;\n       end if;\n-\n-      --  Test for First_Optional_Parameter, and if so, truncate parameter list\n-      --  if there are optional parameters at the trailing end.\n-      --  Note: we never delete procedures for call via a pointer.\n-\n-      if (Ekind (Subp) = E_Procedure or else Ekind (Subp) = E_Function)\n-        and then Present (First_Optional_Parameter (Subp))\n-      then\n-         declare\n-            Last_Keep_Arg : Node_Id;\n-\n-         begin\n-            --  Last_Keep_Arg will hold the last actual that should be kept.\n-            --  If it remains empty at the end, it means that all parameters\n-            --  are optional.\n-\n-            Last_Keep_Arg := Empty;\n-\n-            --  Find first optional parameter, must be present since we checked\n-            --  the validity of the parameter before setting it.\n-\n-            Formal := First_Formal (Subp);\n-            Actual := First_Actual (Call_Node);\n-            while Formal /= First_Optional_Parameter (Subp) loop\n-               Last_Keep_Arg := Actual;\n-               Next_Formal (Formal);\n-               Next_Actual (Actual);\n-            end loop;\n-\n-            --  We have Formal and Actual pointing to the first potentially\n-            --  droppable argument. We can drop all the trailing arguments\n-            --  whose actual matches the default. Note that we know that all\n-            --  remaining formals have defaults, because we checked that this\n-            --  requirement was met before setting First_Optional_Parameter.\n-\n-            --  We use Fully_Conformant_Expressions to check for identity\n-            --  between formals and actuals, which may miss some cases, but\n-            --  on the other hand, this is only an optimization (if we fail\n-            --  to truncate a parameter it does not affect functionality).\n-            --  So if the default is 3 and the actual is 1+2, we consider\n-            --  them unequal, which hardly seems worrisome.\n-\n-            while Present (Formal) loop\n-               if not Fully_Conformant_Expressions\n-                    (Actual, Default_Value (Formal))\n-               then\n-                  Last_Keep_Arg := Actual;\n-               end if;\n-\n-               Next_Formal (Formal);\n-               Next_Actual (Actual);\n-            end loop;\n-\n-            --  If no arguments, delete entire list, this is the easy case\n-\n-            if No (Last_Keep_Arg) then\n-               Set_Parameter_Associations (Call_Node, No_List);\n-               Set_First_Named_Actual (Call_Node, Empty);\n-\n-            --  Case where at the last retained argument is positional. This\n-            --  is also an easy case, since the retained arguments are already\n-            --  in the right form, and we don't need to worry about the order\n-            --  of arguments that get eliminated.\n-\n-            elsif Is_List_Member (Last_Keep_Arg) then\n-               while Present (Next (Last_Keep_Arg)) loop\n-                  Discard_Node (Remove_Next (Last_Keep_Arg));\n-               end loop;\n-\n-               Set_First_Named_Actual (Call_Node, Empty);\n-\n-            --  This is the annoying case where the last retained argument\n-            --  is a named parameter. Since the original arguments are not\n-            --  in declaration order, we may have to delete some fairly\n-            --  random collection of arguments.\n-\n-            else\n-               declare\n-                  Temp   : Node_Id;\n-                  Passoc : Node_Id;\n-\n-               begin\n-                  --  First step, remove all the named parameters from the\n-                  --  list (they are still chained using First_Named_Actual\n-                  --  and Next_Named_Actual, so we have not lost them).\n-\n-                  Temp := First (Parameter_Associations (Call_Node));\n-\n-                  --  Case of all parameters named, remove them all\n-\n-                  if Nkind (Temp) = N_Parameter_Association then\n-                     --  Suppress warnings to avoid warning on possible\n-                     --  infinite loop (because Call_Node is not modified).\n-\n-                     pragma Warnings (Off);\n-                     while Is_Non_Empty_List\n-                             (Parameter_Associations (Call_Node))\n-                     loop\n-                        Temp :=\n-                          Remove_Head (Parameter_Associations (Call_Node));\n-                     end loop;\n-                     pragma Warnings (On);\n-\n-                  --  Case of mixed positional/named, remove named parameters\n-\n-                  else\n-                     while Nkind (Next (Temp)) /= N_Parameter_Association loop\n-                        Next (Temp);\n-                     end loop;\n-\n-                     while Present (Next (Temp)) loop\n-                        Remove (Next (Temp));\n-                     end loop;\n-                  end if;\n-\n-                  --  Now we loop through the named parameters, till we get\n-                  --  to the last one to be retained, adding them to the list.\n-                  --  Note that the Next_Named_Actual list does not need to be\n-                  --  touched since we are only reordering them on the actual\n-                  --  parameter association list.\n-\n-                  Passoc := Parent (First_Named_Actual (Call_Node));\n-                  loop\n-                     Temp := Relocate_Node (Passoc);\n-                     Append_To\n-                       (Parameter_Associations (Call_Node), Temp);\n-                     exit when\n-                       Last_Keep_Arg = Explicit_Actual_Parameter (Passoc);\n-                     Passoc := Parent (Next_Named_Actual (Passoc));\n-                  end loop;\n-\n-                  Set_Next_Named_Actual (Temp, Empty);\n-\n-                  loop\n-                     Temp := Next_Named_Actual (Passoc);\n-                     exit when No (Temp);\n-                     Set_Next_Named_Actual\n-                       (Passoc, Next_Named_Actual (Parent (Temp)));\n-                  end loop;\n-               end;\n-\n-            end if;\n-         end;\n-      end if;\n    end Expand_Call;\n \n    -------------------------------"}, {"sha": "c025f05f3784a6922cf5c911ff44eee0a256b2b0", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -604,20 +604,6 @@ package body Exp_Dbug is\n             Add_Real_To_Buffer (Small_Value (E));\n          end if;\n \n-      --  Vax floating-point case\n-\n-      elsif Vax_Float (E) then\n-         if Digits_Value (Base_Type (E)) = 6 then\n-            Get_External_Name (E, True, \"XFF\");\n-\n-         elsif Digits_Value (Base_Type (E)) = 9 then\n-            Get_External_Name (E, True, \"XFF\");\n-\n-         else\n-            pragma Assert (Digits_Value (Base_Type (E)) = 15);\n-            Get_External_Name (E, True, \"XFG\");\n-         end if;\n-\n       --  Discrete case where bounds do not match size\n \n       elsif Is_Discrete_Type (E)"}, {"sha": "eefc9c9c637b47d462963c2d13e2a28454411d45", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -540,31 +540,6 @@ package Exp_Dbug is\n       --   delta. In this case, the first nn/dd rational value is for delta,\n       --   and the second value is for small.\n \n-      ------------------------------\n-      -- VAX Floating-Point Types --\n-      ------------------------------\n-\n-      --   Vax floating-point types are represented at run time as integer\n-      --   types, which are treated specially by the code generator. Their\n-      --   type names are encoded with the following suffix:\n-\n-      --     typ___XFF\n-      --     typ___XFD\n-      --     typ___XFG\n-\n-      --   representing the Vax F Float, D Float, and G Float types. The\n-      --   debugger must treat these specially. In particular, printing these\n-      --   values can be achieved using the debug procedures that are provided\n-      --   in package System.Vax_Float_Operations:\n-\n-      --     procedure Debug_Output_D (Arg : D);\n-      --     procedure Debug_Output_F (Arg : F);\n-      --     procedure Debug_Output_G (Arg : G);\n-\n-      --   These three procedures take a Vax floating-point argument, and\n-      --   output a corresponding decimal representation to standard output\n-      --   with no terminating line return.\n-\n       --------------------\n       -- Discrete Types --\n       --------------------"}, {"sha": "387b32f71ea366b6697da3de3ff91fb22b608f13", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -212,17 +212,9 @@ package body Exp_Smem is\n \n       --  Mark object as locked in the current (transient) scope\n \n-      declare\n-         Locked_Shared_Objects : Elist_Id renames\n-           Scope_Stack.Table (Scope_Stack.Last).Locked_Shared_Objects;\n-\n-      begin\n-         if Locked_Shared_Objects = No_Elist then\n-            Locked_Shared_Objects := New_Elmt_List;\n-         end if;\n-\n-         Append_Elmt (Obj, To => Locked_Shared_Objects);\n-      end;\n+      Append_New_Elmt\n+        (Obj,\n+         To => Scope_Stack.Table (Scope_Stack.Last).Locked_Shared_Objects);\n \n       --  First insert the Lock call before\n "}, {"sha": "e499701a3424ffac9e5753beda1f427197b0d6f8", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -7233,9 +7233,8 @@ package body Freeze is\n               or else Nkind_In (Dcopy, N_Expanded_Name,\n                                        N_Integer_Literal,\n                                        N_Character_Literal,\n-                                       N_String_Literal)\n-              or else (Nkind (Dcopy) = N_Real_Literal\n-                        and then not Vax_Float (Etype (Dcopy)))\n+                                       N_String_Literal,\n+                                       N_Real_Literal)\n               or else (Nkind (Dcopy) = N_Attribute_Reference\n                         and then Attribute_Name (Dcopy) = Name_Null_Parameter)\n               or else Known_Null (Dcopy)"}, {"sha": "6e6b5c5343031de470272c3a408eab0c17e01fc3", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -475,11 +475,6 @@ procedure Gnat1drv is\n          Ttypes.Bytes_Big_Endian := not Ttypes.Bytes_Big_Endian;\n       end if;\n \n-      --  Temporarily set True_VMS_Target to OpenVMS_On_Target. This is just\n-      --  temporary, we no longer deal with the debug flag -gnatdm here.\n-\n-      Opt.True_VMS_Target := Targparm.OpenVMS_On_Target;\n-\n       --  Activate front end layout if debug flag -gnatdF is set\n \n       if Debug_Flag_FF then"}, {"sha": "24db2f2cd26eca3fe43b2fd99b10f605952ac3cd", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 8, "deletions": 53, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -2883,13 +2883,7 @@ MECHANISM ::=\n MECHANISM_ASSOCIATION ::=\n   [formal_parameter_NAME =>] MECHANISM_NAME\n \n-MECHANISM_NAME ::=\n-  Value\n-| Reference\n-| Descriptor [([Class =>] CLASS_NAME)]\n-| Short_Descriptor [([Class =>] CLASS_NAME)]\n-\n-CLASS_NAME ::= ubs | ubsb | uba | s | sb | a\n+MECHANISM_NAME ::= Value | Reference\n @end smallexample\n \n @noindent\n@@ -2917,13 +2911,6 @@ using positional notation to match parameters with subtype marks.\n The form with an @code{'Access} attribute can be used to match an\n anonymous access parameter.\n \n-@cindex OpenVMS\n-@cindex Passing by descriptor\n-Passing by descriptor is supported only on the OpenVMS ports of GNAT@.\n-The default behavior for Export_Function is to accept either 64bit or\n-32bit descriptors unless short_descriptor is specified, then only 32bit\n-descriptors are accepted.\n-\n @cindex Suppressing external name\n Special treatment is given if the EXTERNAL is an explicit null\n string or a static string expressions that evaluates to the null\n@@ -2988,13 +2975,7 @@ MECHANISM ::=\n MECHANISM_ASSOCIATION ::=\n   [formal_parameter_NAME =>] MECHANISM_NAME\n \n-MECHANISM_NAME ::=\n-  Value\n-| Reference\n-| Descriptor [([Class =>] CLASS_NAME)]\n-| Short_Descriptor [([Class =>] CLASS_NAME)]\n-\n-CLASS_NAME ::= ubs | ubsb | uba | s | sb | a\n+MECHANISM_NAME ::= Value | Reference\n @end smallexample\n \n @noindent\n@@ -3007,13 +2988,6 @@ not what is wanted, so it is usually appropriate to use this\n pragma in conjunction with a @code{Export} or @code{Convention}\n pragma that specifies the desired foreign convention.\n \n-@cindex OpenVMS\n-@cindex Passing by descriptor\n-Passing by descriptor is supported only on the OpenVMS ports of GNAT@.\n-The default behavior for Export_Procedure is to accept either 64bit or\n-32bit descriptors unless short_descriptor is specified, then only 32bit\n-descriptors are accepted.\n-\n @cindex Suppressing external name\n Special treatment is given if the EXTERNAL is an explicit null\n string or a static string expressions that evaluates to the null\n@@ -3074,13 +3048,7 @@ MECHANISM ::=\n MECHANISM_ASSOCIATION ::=\n   [formal_parameter_NAME =>] MECHANISM_NAME\n \n-MECHANISM_NAME ::=\n-  Value\n-| Reference\n-| Descriptor [([Class =>] CLASS_NAME)]\n-| Short_Descriptor [([Class =>] CLASS_NAME)]\n-\n-CLASS_NAME ::= ubs | ubsb | uba | s | sb | a\n+MECHANISM_NAME ::= Value | Reference\n @end smallexample\n \n @noindent\n@@ -3098,13 +3066,6 @@ with foreign language functions, so it is usually appropriate to use this\n pragma in conjunction with a @code{Export} or @code{Convention}\n pragma that specifies the desired foreign convention.\n \n-@cindex OpenVMS\n-@cindex Passing by descriptor\n-Passing by descriptor is supported only on the OpenVMS ports of GNAT@.\n-The default behavior for Export_Valued_Procedure is to accept either 64bit or\n-32bit descriptors unless short_descriptor is specified, then only 32bit\n-descriptors are accepted.\n-\n @cindex Suppressing external name\n Special treatment is given if the EXTERNAL is an explicit null\n string or a static string expressions that evaluates to the null\n@@ -3608,8 +3569,7 @@ pragma Import_Function (\n   [, [Parameter_Types          =>] PARAMETER_TYPES]\n   [, [Result_Type              =>] SUBTYPE_MARK]\n   [, [Mechanism                =>] MECHANISM]\n-  [, [Result_Mechanism         =>] MECHANISM_NAME]\n-  [, [First_Optional_Parameter =>] IDENTIFIER]);\n+  [, [Result_Mechanism         =>] MECHANISM_NAME]);\n \n EXTERNAL_SYMBOL ::=\n   IDENTIFIER\n@@ -3698,8 +3658,7 @@ pragma Import_Procedure (\n      [Internal                 =>] LOCAL_NAME\n   [, [External                 =>] EXTERNAL_SYMBOL]\n   [, [Parameter_Types          =>] PARAMETER_TYPES]\n-  [, [Mechanism                =>] MECHANISM]\n-  [, [First_Optional_Parameter =>] IDENTIFIER]);\n+  [, [Mechanism                =>] MECHANISM]);\n \n EXTERNAL_SYMBOL ::=\n   IDENTIFIER\n@@ -3739,8 +3698,7 @@ pragma Import_Valued_Procedure (\n      [Internal                 =>] LOCAL_NAME\n   [, [External                 =>] EXTERNAL_SYMBOL]\n   [, [Parameter_Types          =>] PARAMETER_TYPES]\n-  [, [Mechanism                =>] MECHANISM]\n-  [, [First_Optional_Parameter =>] IDENTIFIER]);\n+  [, [Mechanism                =>] MECHANISM]);\n \n EXTERNAL_SYMBOL ::=\n   IDENTIFIER\n@@ -6405,11 +6363,8 @@ pragma Short_Descriptors\n @end smallexample\n \n @noindent\n-In VMS versions of the compiler, this configuration pragma causes all\n-occurrences of the mechanism types Descriptor[_xxx] to be treated as\n-Short_Descriptor[_xxx]. This is helpful in porting legacy applications from a\n-32-bit environment to a 64-bit environment. This pragma is ignored for non-VMS\n-versions.\n+This pragma is provided for compatibility with other Ada implementations. It\n+is recognized but ignored by all current versions of GNAT.\n \n @node Pragma Simple_Storage_Pool_Type\n @unnumberedsec Pragma Simple_Storage_Pool_Type"}, {"sha": "354054f4b47e02a9f93461b2657b5ef79ca654b4", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -1180,7 +1180,7 @@ procedure GNATCmd is\n \n       for C in Command_List'Range loop\n \n-         --  No usage for VMS only command or for Sync\n+         --  No usage for Sync\n \n          if C /= Sync then\n             if Targparm.AAMP_On_Target then"}, {"sha": "6434159b4376fcfe3f92754eaa9ec10896a79344", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -518,11 +518,7 @@ package body Inline is\n \n       procedure Register_Backend_Inlined_Subprogram (Subp : Entity_Id) is\n       begin\n-         if Backend_Inlined_Subps = No_Elist then\n-            Backend_Inlined_Subps := New_Elmt_List;\n-         end if;\n-\n-         Append_Elmt (Subp, To => Backend_Inlined_Subps);\n+         Append_New_Elmt (Subp, To => Backend_Inlined_Subps);\n       end Register_Backend_Inlined_Subprogram;\n \n       ---------------------------------------------\n@@ -531,11 +527,7 @@ package body Inline is\n \n       procedure Register_Backend_Not_Inlined_Subprogram (Subp : Entity_Id) is\n       begin\n-         if Backend_Not_Inlined_Subps = No_Elist then\n-            Backend_Not_Inlined_Subps := New_Elmt_List;\n-         end if;\n-\n-         Append_Elmt (Subp, To => Backend_Not_Inlined_Subps);\n+         Append_New_Elmt (Subp, To => Backend_Not_Inlined_Subps);\n       end Register_Backend_Not_Inlined_Subprogram;\n \n    --  Start of processing for Add_Inlined_Subprogram\n@@ -2802,11 +2794,7 @@ package body Inline is\n \n       --  Register the call in the list of inlined calls\n \n-      if Inlined_Calls = No_Elist then\n-         Inlined_Calls := New_Elmt_List;\n-      end if;\n-\n-      Append_Elmt (N, To => Inlined_Calls);\n+      Append_New_Elmt (N, To => Inlined_Calls);\n \n       --  Use generic machinery to copy body of inlined subprogram, as if it\n       --  were an instantiation, resetting source locations appropriately, so\n@@ -4027,11 +4015,7 @@ package body Inline is\n \n    procedure Register_Backend_Call (N : Node_Id) is\n    begin\n-      if Backend_Calls = No_Elist then\n-         Backend_Calls := New_Elmt_List;\n-      end if;\n-\n-      Append_Elmt (N, To => Backend_Calls);\n+      Append_New_Elmt (N, To => Backend_Calls);\n    end Register_Backend_Call;\n \n    --------------------------"}, {"sha": "0260159bfebf90549a1f8813946db82ce50cdb73", "filename": "gcc/ada/mlib-tgt.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fmlib-tgt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fmlib-tgt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2009, AdaCore                     --\n+--                     Copyright (C) 2001-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -132,8 +132,8 @@ package MLib.Tgt is\n    --  \"libtoto.so\" will be a symbolic link to \"libtoto.so.2.1\" which\n    --  will be the actual library file.\n    --\n-   --  Symbol_Data is used for some platforms, including VMS, to generate\n-   --  the symbols to be exported by the library.\n+   --  Symbol_Data is used for some platforms, to generate the symbols to be\n+   --  exported by the library (not certain if it is currently in use or not).\n    --\n    --  Note: Depending on the OS, some of the parameters may not be taken into\n    --  account. For example, on Linux, Interfaces, Symbol_Data and Auto_Init"}, {"sha": "4144340c47a455dc9c22d49c3af6ac403603f985", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -63,7 +63,6 @@ package body Opt is\n       Optimize_Alignment_Config             := Optimize_Alignment;\n       Persistent_BSS_Mode_Config            := Persistent_BSS_Mode;\n       Polling_Required_Config               := Polling_Required;\n-      Short_Descriptors_Config              := Short_Descriptors;\n       SPARK_Mode_Config                     := SPARK_Mode;\n       SPARK_Mode_Pragma_Config              := SPARK_Mode_Pragma;\n       Uneval_Old_Config                     := Uneval_Old;\n@@ -103,7 +102,6 @@ package body Opt is\n       Optimize_Alignment_Local       := Save.Optimize_Alignment_Local;\n       Persistent_BSS_Mode            := Save.Persistent_BSS_Mode;\n       Polling_Required               := Save.Polling_Required;\n-      Short_Descriptors              := Save.Short_Descriptors;\n       SPARK_Mode                     := Save.SPARK_Mode;\n       SPARK_Mode_Pragma              := Save.SPARK_Mode_Pragma;\n       Uneval_Old                     := Save.Uneval_Old;\n@@ -144,7 +142,6 @@ package body Opt is\n       Save.Optimize_Alignment_Local       := Optimize_Alignment_Local;\n       Save.Persistent_BSS_Mode            := Persistent_BSS_Mode;\n       Save.Polling_Required               := Polling_Required;\n-      Save.Short_Descriptors              := Short_Descriptors;\n       Save.SPARK_Mode                     := SPARK_Mode;\n       Save.SPARK_Mode_Pragma              := SPARK_Mode_Pragma;\n       Save.Uneval_Old                     := Uneval_Old;\n@@ -244,7 +241,6 @@ package body Opt is\n       Fast_Math                      := Fast_Math_Config;\n       Optimize_Alignment             := Optimize_Alignment_Config;\n       Polling_Required               := Polling_Required_Config;\n-      Short_Descriptors              := Short_Descriptors_Config;\n    end Set_Opt_Config_Switches;\n \n    ---------------"}, {"sha": "7993155402e712c6095a1def2f315de7a04302bc", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 2, "deletions": 29, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -418,12 +418,9 @@ package Opt is\n \n    subtype Debug_Level_Value is Nat range 0 .. 3;\n    Debugger_Level : Debug_Level_Value := 0;\n-   --  GNATBIND\n    --  The value given to the -g parameter. The default value for -g with\n-   --  no value is 2. This is usually ignored by GNATBIND, except in the\n-   --  VMS version where it is passed as an argument to __gnat_initialize\n-   --  to trigger the activation of the remote debugging interface.\n-   --  Is this still true ???\n+   --  no value is 2. This is not currently used but is retained for possible\n+   --  future use.\n \n    Default_Exit_Status : Int := 0;\n    --  GNATBIND\n@@ -709,11 +706,6 @@ package Opt is\n    --  GNAT\n    --  True if compiling in GNAT system mode (-gnatg switch)\n \n-   Heap_Size : Nat := 0;\n-   --  GNATBIND\n-   --  Heap size for memory allocations. Valid values are 32 and 64. Only\n-   --  available on VMS.\n-\n    Identifier_Character_Set : Character;\n    --  GNAT\n    --  This variable indicates the character set to be used for identifiers.\n@@ -1291,10 +1283,6 @@ package Opt is\n    --  GNAT\n    --  Set True if a pragma Short_Circuit_And_Or applies to the current unit.\n \n-   Short_Descriptors : Boolean := False;\n-   --  GNAT\n-   --  Set True if a pragma Short_Descriptors applies to the current unit.\n-\n    type SPARK_Mode_Type is (None, Off, On);\n    --  Possible legal modes that can be set by aspect/pragma SPARK_Mode, as\n    --  well as the value None, which indicates no such pragma/aspect applies.\n@@ -1463,12 +1451,6 @@ package Opt is\n    --  GNAT\n    --  Set to True (-gnatt) to generate output tree file\n \n-   True_VMS_Target : Boolean := False;\n-   --  Set True if we are on a VMS target. The setting of this flag reflects\n-   --  the true state of the compile, unlike Targparm.OpenVMS_On_Target which\n-   --  can also be true when debug flag m is set (-gnatdm). This is used in the\n-   --  few cases where we do NOT want -gnatdm to trigger the VMS behavior.\n-\n    Try_Semantics : Boolean := False;\n    --  GNAT\n    --  Flag set to force attempt at semantic analysis, even if parser errors\n@@ -1955,14 +1937,6 @@ package Opt is\n    --  flag is used to set the initial value for Polling_Required at the start\n    --  of analyzing each unit.\n \n-   Short_Descriptors_Config : Boolean;\n-   --  GNAT\n-   --  This is the value of the configuration switch that controls the use of\n-   --  Short_Descriptors for setting descriptor default sizes. It can be set\n-   --  True by the use of the pragma Short_Descriptors in the gnat.adc file.\n-   --  This flag is used to set the initial value for Short_Descriptors at the\n-   --  start of analyzing each unit.\n-\n    SPARK_Mode_Config : SPARK_Mode_Type := None;\n    --  GNAT\n    --  The setting of SPARK_Mode from configuration pragmas\n@@ -2143,7 +2117,6 @@ private\n       Optimize_Alignment_Local       : Boolean;\n       Persistent_BSS_Mode            : Boolean;\n       Polling_Required               : Boolean;\n-      Short_Descriptors              : Boolean;\n       SPARK_Mode                     : SPARK_Mode_Type;\n       SPARK_Mode_Pragma              : Node_Id;\n       Uneval_Old                     : Character;"}, {"sha": "f1a40821dd871ae9d67920cd34ef02c8af651b29", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -374,7 +374,6 @@ package Rtsfind is\n       System_Val_Real,\n       System_Val_Uns,\n       System_Val_WChar,\n-      System_Vax_Float_Operations,\n       System_Version_Control,\n       System_WCh_StW,\n       System_WCh_WtS,\n@@ -1636,56 +1635,6 @@ package Rtsfind is\n      RE_Value_Wide_Character,            -- System.Val_WChar\n      RE_Value_Wide_Wide_Character,       -- System.Val_WChar\n \n-     RE_D,                               -- System.Vax_Float_Operations\n-     RE_F,                               -- System.Vax_Float_Operations\n-     RE_G,                               -- System.Vax_Float_Operations\n-     RE_Q,                               -- System.Vax_Float_Operations\n-     RE_S,                               -- System.Vax_Float_Operations\n-     RE_T,                               -- System.Vax_Float_Operations\n-\n-     RE_D_To_G,                          -- System.Vax_Float_Operations\n-     RE_F_To_G,                          -- System.Vax_Float_Operations\n-     RE_F_To_Q,                          -- System.Vax_Float_Operations\n-     RE_F_To_S,                          -- System.Vax_Float_Operations\n-     RE_G_To_D,                          -- System.Vax_Float_Operations\n-     RE_G_To_F,                          -- System.Vax_Float_Operations\n-     RE_G_To_Q,                          -- System.Vax_Float_Operations\n-     RE_G_To_T,                          -- System.Vax_Float_Operations\n-     RE_Q_To_F,                          -- System.Vax_Float_Operations\n-     RE_Q_To_G,                          -- System.Vax_Float_Operations\n-     RE_S_To_F,                          -- System.Vax_Float_Operations\n-     RE_T_To_D,                          -- System.Vax_Float_Operations\n-     RE_T_To_G,                          -- System.Vax_Float_Operations\n-\n-     RE_Abs_F,                           -- System.Vax_Float_Operations\n-     RE_Abs_G,                           -- System.Vax_Float_Operations\n-     RE_Add_F,                           -- System.Vax_Float_Operations\n-     RE_Add_G,                           -- System.Vax_Float_Operations\n-     RE_Div_F,                           -- System.Vax_Float_Operations\n-     RE_Div_G,                           -- System.Vax_Float_Operations\n-     RE_Mul_F,                           -- System.Vax_Float_Operations\n-     RE_Mul_G,                           -- System.Vax_Float_Operations\n-     RE_Neg_F,                           -- System.Vax_Float_Operations\n-     RE_Neg_G,                           -- System.Vax_Float_Operations\n-     RE_Return_D,                        -- System.Vax_Float_Operations\n-     RE_Return_F,                        -- System.Vax_Float_Operations\n-     RE_Return_G,                        -- System.Vax_Float_Operations\n-     RE_Sub_F,                           -- System.Vax_Float_Operations\n-     RE_Sub_G,                           -- System.Vax_Float_Operations\n-\n-     RE_Eq_F,                            -- System.Vax_Float_Operations\n-     RE_Eq_G,                            -- System.Vax_Float_Operations\n-     RE_Le_F,                            -- System.Vax_Float_Operations\n-     RE_Le_G,                            -- System.Vax_Float_Operations\n-     RE_Lt_F,                            -- System.Vax_Float_Operations\n-     RE_Lt_G,                            -- System.Vax_Float_Operations\n-     RE_Ne_F,                            -- System.Vax_Float_Operations\n-     RE_Ne_G,                            -- System.Vax_Float_Operations\n-\n-     RE_Valid_D,                         -- System.Vax_Float_Operations\n-     RE_Valid_F,                         -- System.Vax_Float_Operations\n-     RE_Valid_G,                         -- System.Vax_Float_Operations\n-\n      RE_Version_String,                  -- System.Version_Control\n      RE_Get_Version_String,              -- System.Version_Control\n \n@@ -2921,56 +2870,6 @@ package Rtsfind is\n      RE_Value_Wide_Character             => System_Val_WChar,\n      RE_Value_Wide_Wide_Character        => System_Val_WChar,\n \n-     RE_D                                => System_Vax_Float_Operations,\n-     RE_F                                => System_Vax_Float_Operations,\n-     RE_G                                => System_Vax_Float_Operations,\n-     RE_Q                                => System_Vax_Float_Operations,\n-     RE_S                                => System_Vax_Float_Operations,\n-     RE_T                                => System_Vax_Float_Operations,\n-\n-     RE_D_To_G                           => System_Vax_Float_Operations,\n-     RE_F_To_G                           => System_Vax_Float_Operations,\n-     RE_F_To_Q                           => System_Vax_Float_Operations,\n-     RE_F_To_S                           => System_Vax_Float_Operations,\n-     RE_G_To_D                           => System_Vax_Float_Operations,\n-     RE_G_To_F                           => System_Vax_Float_Operations,\n-     RE_G_To_Q                           => System_Vax_Float_Operations,\n-     RE_G_To_T                           => System_Vax_Float_Operations,\n-     RE_Q_To_F                           => System_Vax_Float_Operations,\n-     RE_Q_To_G                           => System_Vax_Float_Operations,\n-     RE_S_To_F                           => System_Vax_Float_Operations,\n-     RE_T_To_D                           => System_Vax_Float_Operations,\n-     RE_T_To_G                           => System_Vax_Float_Operations,\n-\n-     RE_Abs_F                            => System_Vax_Float_Operations,\n-     RE_Abs_G                            => System_Vax_Float_Operations,\n-     RE_Add_F                            => System_Vax_Float_Operations,\n-     RE_Add_G                            => System_Vax_Float_Operations,\n-     RE_Div_F                            => System_Vax_Float_Operations,\n-     RE_Div_G                            => System_Vax_Float_Operations,\n-     RE_Mul_F                            => System_Vax_Float_Operations,\n-     RE_Mul_G                            => System_Vax_Float_Operations,\n-     RE_Neg_F                            => System_Vax_Float_Operations,\n-     RE_Neg_G                            => System_Vax_Float_Operations,\n-     RE_Return_D                         => System_Vax_Float_Operations,\n-     RE_Return_F                         => System_Vax_Float_Operations,\n-     RE_Return_G                         => System_Vax_Float_Operations,\n-     RE_Sub_F                            => System_Vax_Float_Operations,\n-     RE_Sub_G                            => System_Vax_Float_Operations,\n-\n-     RE_Eq_F                             => System_Vax_Float_Operations,\n-     RE_Eq_G                             => System_Vax_Float_Operations,\n-     RE_Le_F                             => System_Vax_Float_Operations,\n-     RE_Le_G                             => System_Vax_Float_Operations,\n-     RE_Lt_F                             => System_Vax_Float_Operations,\n-     RE_Lt_G                             => System_Vax_Float_Operations,\n-     RE_Ne_F                             => System_Vax_Float_Operations,\n-     RE_Ne_G                             => System_Vax_Float_Operations,\n-\n-     RE_Valid_D                          => System_Vax_Float_Operations,\n-     RE_Valid_F                          => System_Vax_Float_Operations,\n-     RE_Valid_G                          => System_Vax_Float_Operations,\n-\n      RE_Version_String                   => System_Version_Control,\n      RE_Get_Version_String               => System_Version_Control,\n "}, {"sha": "6ce87bd7f911212029dfac379d3222e71c18a238", "filename": "gcc/ada/s-auxdec.ads", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-auxdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-auxdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -39,13 +39,7 @@ package System.Aux_DEC is\n    pragma Preelaborate;\n \n    subtype Short_Address is Address;\n-   --  In some versions of System.Aux_DEC, notably that for VMS on IA64, there\n-   --  are two address types (64-bit and 32-bit), and the name Short_Address\n-   --  is used for the short address form. To avoid difficulties (in regression\n-   --  tests and elsewhere) with units that reference Short_Address, it is\n-   --  provided for other targets as a synonym for the normal Address type,\n-   --  and, as in the case where the lengths are different, Address and\n-   --  Short_Address can be freely inter-converted.\n+   --  For compatibility with systems having short and long addresses\n \n    type Integer_8  is range -2 **  (8 - 1) .. +2 **  (8 - 1) - 1;\n    for Integer_8'Size  use  8;\n@@ -112,7 +106,7 @@ package System.Aux_DEC is\n    type F_Float is digits 6;\n    type D_Float is digits 9;\n    type G_Float is digits 15;\n-   --  We provide the type names, but these will be IEEE, not VMS format\n+   --  We provide the type names, but these will be IEEE format, not VAX format\n \n    --  Floating point type declarations for IEEE floating point data types\n "}, {"sha": "01bb2b44a973207dad0ffb45a339c163108d8411", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -756,12 +756,7 @@ package body System.Fat_Gen is\n    -- Valid --\n    -----------\n \n-   --  Note: this routine does not work for VAX float. We compensate for this\n-   --  in Exp_Attr by using the Valid functions in Vax_Float_Operations rather\n-   --  than the corresponding instantiation of this function.\n-\n    function Valid (X : not null access T) return Boolean is\n-\n       IEEE_Emin : constant Integer := T'Machine_Emin - 1;\n       IEEE_Emax : constant Integer := T'Machine_Emax - 1;\n "}, {"sha": "6c4e6f7b508de64a5ca8c9c39efefa036b282a63", "filename": "gcc/ada/s-fatgen.ads", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-fatgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-fatgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -95,8 +95,6 @@ package System.Fat_Gen is\n    --  register, and the whole point of 'Valid is to prevent exceptions.\n    --  Note that the object of type T must have the natural alignment\n    --  for type T. See Unaligned_Valid for further discussion.\n-   --\n-   --  Note: this routine does not work for Vax_Float ???\n \n    function Unaligned_Valid (A : System.Address) return Boolean;\n    --  This version of Valid is used if the floating-point value to\n@@ -114,8 +112,6 @@ package System.Fat_Gen is\n    --  not require strict alignment (e.g. the ia32/x86), since on a\n    --  target not requiring strict alignment, it is fine to pass a\n    --  non-aligned value to the standard Valid routine.\n-   --\n-   --  Note: this routine does not work for Vax_Float ???\n \n private\n    pragma Inline (Machine);"}, {"sha": "8ea87f2699a9b9f11fd8cf84c0ccf78c1444eb21", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -1851,6 +1851,7 @@ package body System.OS_Lib is\n         (Host_File : System.Address) return System.Address;\n       pragma Import\n         (C, To_Canonical_File_Spec, \"__gnat_to_canonical_file_spec\");\n+      --  Convert possible foreign file syntax to canonical form\n \n       The_Name : String (1 .. Name'Length + 1);\n       Canonical_File_Addr : System.Address;\n@@ -1978,19 +1979,19 @@ package body System.OS_Lib is\n          return \"\";\n       end if;\n \n-      --  First, convert VMS file spec to Unix file spec.\n-      --  If Name is not in VMS syntax, then this is equivalent\n-      --  to put Name at the beginning of Path_Buffer.\n+      --  First, convert possible foreign file spec to Unix file spec. If no\n+      --  conversion is required, all this does is put Name at the beginning\n+      --  of Path_Buffer unchanged.\n \n-      VMS_Conversion : begin\n+      File_Name_Conversion : begin\n          The_Name (1 .. Name'Length) := Name;\n          The_Name (The_Name'Last) := ASCII.NUL;\n \n          Canonical_File_Addr := To_Canonical_File_Spec (The_Name'Address);\n          Canonical_File_Len  := Integer (CRTL.strlen (Canonical_File_Addr));\n \n-         --  If VMS syntax conversion has failed, return an empty string\n-         --  to indicate the failure.\n+         --  If syntax conversion has failed, return an empty string to\n+         --  indicate the failure.\n \n          if Canonical_File_Len = 0 then\n             return \"\";\n@@ -2007,7 +2008,7 @@ package body System.OS_Lib is\n             End_Path := Canonical_File_Len;\n             Last := 1;\n          end;\n-      end VMS_Conversion;\n+      end File_Name_Conversion;\n \n       --  Replace all '/' by Directory Separators (this is for Windows)\n "}, {"sha": "51e49e8b543ebbd2c8bf3e24b11ff68b12784d1f", "filename": "gcc/ada/s-shasto.ads", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-shasto.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-shasto.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-shasto.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,10 +36,6 @@\n --  provides a more general implementation not dedicated to file\n --  storage.\n \n---  This unit (and shared passive partitions) are supported on all\n---  GNAT implementations except on OpenVMS (where problems arise from\n---  trying to share files, and with version numbers of files)\n-\n --  --------------------------\n --  -- Shared Storage Model --\n --  --------------------------"}, {"sha": "c7f28fe1355f92ca79cbffe8a048bf43979ac9a2", "filename": "gcc/ada/s-stalib.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-stalib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fs-stalib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -106,7 +106,6 @@ package System.Standard_Library is\n       Lang : Character;\n       --  A character indicating the language raising the exception.\n       --  Set to \"A\" for exceptions defined by an Ada program.\n-      --  Set to \"V\" for imported VMS exceptions.\n       --  Set to \"C\" for imported C++ exceptions.\n \n       Name_Length : Natural;\n@@ -122,9 +121,8 @@ package System.Standard_Library is\n       --  identities and names.\n \n       Foreign_Data : Address;\n-      --  Data for imported exceptions. This represents the exception code\n-      --  for the handling of Import/Export_Exception for the VMS case.\n-      --  This represents the address of the RTTI for the C++ case.\n+      --  Data for imported exceptions. Not used in the Ada case. This\n+      --  represents the address of the RTTI for the C++ case.\n \n       Raise_Hook : Raise_Action;\n       --  This field can be used to place a \"hook\" on an exception. If the"}, {"sha": "eb3501ed3a61d82a9186fdfa0eb67d9faaf65069", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -1482,13 +1482,7 @@ package body Sem is\n             null;\n \n          else\n-            --  Initialize if first time\n-\n-            if No (Comp_Unit_List) then\n-               Comp_Unit_List := New_Elmt_List;\n-            end if;\n-\n-            Append_Elmt (Comp_Unit, Comp_Unit_List);\n+            Append_New_Elmt (Comp_Unit, To => Comp_Unit_List);\n \n             if Debug_Unit_Walk then\n                Write_Str (\"Appending \");"}, {"sha": "599212facb0ca20e162ad52bd76f9cfe9d909c8c", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -6264,11 +6264,7 @@ package body Sem_Attr is\n                   --  Mark this component as processed\n \n                   else\n-                     if No (Comps) then\n-                        Comps := New_Elmt_List;\n-                     end if;\n-\n-                     Append_Elmt (Comp_Or_Discr, Comps);\n+                     Append_New_Elmt (Comp_Or_Discr, Comps);\n                   end if;\n                end if;\n \n@@ -6787,9 +6783,6 @@ package body Sem_Attr is\n       --  Computes the Fore value for the current attribute prefix, which is\n       --  known to be a static fixed-point type. Used by Fore and Width.\n \n-      function Is_VAX_Float (Typ : Entity_Id) return Boolean;\n-      --  Determine whether Typ denotes a VAX floating point type\n-\n       function Mantissa return Uint;\n       --  Returns the Mantissa value for the prefix type\n \n@@ -6921,16 +6914,6 @@ package body Sem_Attr is\n          return R;\n       end Fore_Value;\n \n-      ------------------\n-      -- Is_VAX_Float --\n-      ------------------\n-\n-      function Is_VAX_Float (Typ : Entity_Id) return Boolean is\n-         pragma Unreferenced (Typ);\n-      begin\n-         return False;\n-      end Is_VAX_Float;\n-\n       --------------\n       -- Mantissa --\n       --------------\n@@ -7953,16 +7936,6 @@ package body Sem_Attr is\n                Fold_Uint  (N, Expr_Value (Lo_Bound), Static);\n             end if;\n \n-         --  Replace VAX Float_Type'First with a reference to the temporary\n-         --  which represents the low bound of the type. This transformation\n-         --  is needed since the back end cannot evaluate 'First on VAX.\n-\n-         elsif Is_VAX_Float (P_Type)\n-           and then Nkind (Lo_Bound) = N_Identifier\n-         then\n-            Rewrite (N, New_Occurrence_Of (Entity (Lo_Bound), Sloc (N)));\n-            Analyze (N);\n-\n          else\n             Check_Concurrent_Discriminant (Lo_Bound);\n          end if;\n@@ -8206,16 +8179,6 @@ package body Sem_Attr is\n                Fold_Uint  (N, Expr_Value (Hi_Bound), Static);\n             end if;\n \n-         --  Replace VAX Float_Type'Last with a reference to the temporary\n-         --  which represents the high bound of the type. This transformation\n-         --  is needed since the back end cannot evaluate 'Last on VAX.\n-\n-         elsif Is_VAX_Float (P_Type)\n-           and then Nkind (Hi_Bound) = N_Identifier\n-         then\n-            Rewrite (N, New_Occurrence_Of (Entity (Hi_Bound), Sloc (N)));\n-            Analyze (N);\n-\n          else\n             Check_Concurrent_Discriminant (Hi_Bound);\n          end if;"}, {"sha": "a776894aeac441b6502227643b606a142d902f2c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -1751,9 +1751,7 @@ package body Sem_Ch12 is\n                   --  If this is a nested generic, preserve default for later\n                   --  instantiations.\n \n-                  if No (Match)\n-                    and then Box_Present (Formal)\n-                  then\n+                  if No (Match) and then Box_Present (Formal) then\n                      Append_Elmt\n                        (Defining_Unit_Name (Specification (Last (Assoc))),\n                         Default_Actuals);\n@@ -8919,12 +8917,7 @@ package body Sem_Ch12 is\n            and then Remove_Suffix (Prim_A, 'P') = Chars (Prim_G)\n          then\n             Set_Chars (Prim_A, Chars (Prim_G));\n-\n-            if List = No_Elist then\n-               List := New_Elmt_List;\n-            end if;\n-\n-            Append_Elmt (Prim_A, List);\n+            Append_New_Elmt (Prim_A, To => List);\n          end if;\n \n          Next_Elmt (Prim_A_Elmt);"}, {"sha": "586a84e1e5eef83a0e2f2c682f767afa8c6c8111", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 29, "deletions": 94, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -326,11 +326,7 @@ package body Sem_Prag is\n \n    procedure Add_Item (Item : Entity_Id; To_List : in out Elist_Id) is\n    begin\n-      if No (To_List) then\n-         To_List := New_Elmt_List;\n-      end if;\n-\n-      Append_Elmt (Item, To_List);\n+      Append_New_Elmt (Item, To => To_List);\n    end Add_Item;\n \n    -------------------------------\n@@ -3248,8 +3244,7 @@ package body Sem_Prag is\n          Arg_Parameter_Types          : Node_Id;\n          Arg_Result_Type              : Node_Id := Empty;\n          Arg_Mechanism                : Node_Id;\n-         Arg_Result_Mechanism         : Node_Id := Empty;\n-         Arg_First_Optional_Parameter : Node_Id := Empty);\n+         Arg_Result_Mechanism         : Node_Id := Empty);\n       --  Common processing for all extended Import and Export pragmas applying\n       --  to subprograms. The caller omits any arguments that do not apply to\n       --  the pragma in question (for example, Arg_Result_Type can be non-Empty\n@@ -7309,13 +7304,8 @@ package body Sem_Prag is\n          Arg_Parameter_Types          : Node_Id;\n          Arg_Result_Type              : Node_Id := Empty;\n          Arg_Mechanism                : Node_Id;\n-         Arg_Result_Mechanism         : Node_Id := Empty;\n-         Arg_First_Optional_Parameter : Node_Id := Empty)\n+         Arg_Result_Mechanism         : Node_Id := Empty)\n       is\n-         pragma Unreferenced (Arg_First_Optional_Parameter);\n-         --  We ignore the First_Optional_Parameter argument. It was only\n-         --  relevant for VMS anyway, and otherwise ignored.\n-\n          Ent       : Entity_Id;\n          Def_Id    : Entity_Id;\n          Hom_Id    : Entity_Id;\n@@ -9317,9 +9307,9 @@ package body Sem_Prag is\n                if Warn_On_Export_Import\n \n                  --  Only do this for something that was in the source. Not\n-                 --  clear if this can be False now (there used for sure to\n-                 --  be cases on VMS where it was False), but anyway the test\n-                 --  is harmless if not needed, so it is retained.\n+                 --  clear if this can be False now (there used for sure to be\n+                 --  cases on some systems where it was False), but anyway the\n+                 --  test is harmless if not needed, so it is retained.\n \n                  and then Comes_From_Source (Arg)\n                then\n@@ -13535,9 +13525,6 @@ package body Sem_Prag is\n          --  MECHANISM_NAME ::=\n          --    Value\n          --  | Reference\n-         --  | Descriptor [([Class =>] CLASS_NAME)]\n-\n-         --  CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n \n          when Pragma_Export_Function => Export_Function : declare\n             Args  : Args_List (1 .. 6);\n@@ -13599,9 +13586,6 @@ package body Sem_Prag is\n          --  MECHANISM_NAME ::=\n          --    Value\n          --  | Reference\n-         --  | Descriptor [([Class =>] CLASS_NAME)]\n-\n-         --  CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n \n          when Pragma_Export_Object => Export_Object : declare\n             Args  : Args_List (1 .. 3);\n@@ -13655,9 +13639,6 @@ package body Sem_Prag is\n          --  MECHANISM_NAME ::=\n          --    Value\n          --  | Reference\n-         --  | Descriptor [([Class =>] CLASS_NAME)]\n-\n-         --  CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n \n          when Pragma_Export_Procedure => Export_Procedure : declare\n             Args  : Args_List (1 .. 4);\n@@ -13733,9 +13714,6 @@ package body Sem_Prag is\n          --  MECHANISM_NAME ::=\n          --    Value\n          --  | Reference\n-         --  | Descriptor [([Class =>] CLASS_NAME)]\n-\n-         --  CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n \n          when Pragma_Export_Valued_Procedure =>\n          Export_Valued_Procedure : declare\n@@ -14071,10 +14049,8 @@ package body Sem_Prag is\n \n          --  pragma Ident (static_string_EXPRESSION)\n \n-         --  Note: pragma Comment shares this processing. Pragma Comment is\n-         --  identical to Ident, except that the restriction of the argument to\n-         --  31 characters and the placement restrictions are not enforced for\n-         --  pragma Comment.\n+         --  Note: pragma Comment shares this processing. Pragma Ident is\n+         --  identical in effect to pragma Commment.\n \n          when Pragma_Ident | Pragma_Comment => Ident : declare\n             Str : Node_Id;\n@@ -14086,13 +14062,6 @@ package body Sem_Prag is\n             Check_Arg_Is_OK_Static_Expression (Arg1, Standard_String);\n             Store_Note (N);\n \n-            --  For pragma Ident, preserve DEC compatibility by requiring the\n-            --  pragma to appear in a declarative part or package spec.\n-\n-            if Prag_Id = Pragma_Ident then\n-               Check_Is_In_Decl_Part_Or_Package_Spec;\n-            end if;\n-\n             Str := Expr_Value_S (Get_Pragma_Arg (Arg1));\n \n             declare\n@@ -14116,15 +14085,10 @@ package body Sem_Prag is\n \n                   if Present (CS) then\n \n-                     --  For Ident, we do not permit multiple instances\n-\n-                     if Prag_Id = Pragma_Ident then\n-                        Error_Pragma (\"duplicate% pragma not permitted\");\n-\n-                     --  For Comment, we concatenate the string, unless we want\n-                     --  to preserve the tree structure for ASIS.\n+                     --  If we have multiple instances, concatenate them, but\n+                     --  not in ASIS, where we want the original tree.\n \n-                     elsif not ASIS_Mode then\n+                     if not ASIS_Mode then\n                         Start_String (Strval (CS));\n                         Store_String_Char (' ');\n                         Store_String_Chars (Strval (Str));\n@@ -14141,15 +14105,6 @@ package body Sem_Prag is\n \n                elsif Nkind (GP) = N_Subunit then\n                   null;\n-\n-               --  Otherwise we have a misplaced pragma Ident, but we ignore\n-               --  this if we are in an instantiation, since it comes from\n-               --  a generic, and has no relevance to the instantiation.\n-\n-               elsif Prag_Id = Pragma_Ident then\n-                  if Instantiation_Location (Loc) = No_Location then\n-                     Error_Pragma (\"pragma% only allowed at outer level\");\n-                  end if;\n                end if;\n             end;\n          end Ident;\n@@ -14338,8 +14293,7 @@ package body Sem_Prag is\n          --     [, [Parameter_Types          =>] (PARAMETER_TYPES)]\n          --     [, [Result_Type              =>] SUBTYPE_MARK]\n          --     [, [Mechanism                =>] MECHANISM]\n-         --     [, [Result_Mechanism         =>] MECHANISM_NAME]\n-         --     [, [First_Optional_Parameter =>] IDENTIFIER]);\n+         --     [, [Result_Mechanism         =>] MECHANISM_NAME]);\n \n          --  EXTERNAL_SYMBOL ::=\n          --    IDENTIFIER\n@@ -14363,28 +14317,23 @@ package body Sem_Prag is\n          --  MECHANISM_NAME ::=\n          --    Value\n          --  | Reference\n-         --  | Descriptor [([Class =>] CLASS_NAME)]\n-\n-         --  CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n \n          when Pragma_Import_Function => Import_Function : declare\n-            Args  : Args_List (1 .. 7);\n-            Names : constant Name_List (1 .. 7) := (\n+            Args  : Args_List (1 .. 6);\n+            Names : constant Name_List (1 .. 6) := (\n                       Name_Internal,\n                       Name_External,\n                       Name_Parameter_Types,\n                       Name_Result_Type,\n                       Name_Mechanism,\n-                      Name_Result_Mechanism,\n-                      Name_First_Optional_Parameter);\n+                      Name_Result_Mechanism);\n \n             Internal                 : Node_Id renames Args (1);\n             External                 : Node_Id renames Args (2);\n             Parameter_Types          : Node_Id renames Args (3);\n             Result_Type              : Node_Id renames Args (4);\n             Mechanism                : Node_Id renames Args (5);\n             Result_Mechanism         : Node_Id renames Args (6);\n-            First_Optional_Parameter : Node_Id renames Args (7);\n \n          begin\n             GNAT_Pragma;\n@@ -14395,8 +14344,7 @@ package body Sem_Prag is\n               Arg_Parameter_Types          => Parameter_Types,\n               Arg_Result_Type              => Result_Type,\n               Arg_Mechanism                => Mechanism,\n-              Arg_Result_Mechanism         => Result_Mechanism,\n-              Arg_First_Optional_Parameter => First_Optional_Parameter);\n+              Arg_Result_Mechanism         => Result_Mechanism);\n          end Import_Function;\n \n          -------------------\n@@ -14440,8 +14388,7 @@ package body Sem_Prag is\n          --        [Internal                 =>] LOCAL_NAME\n          --     [, [External                 =>] EXTERNAL_SYMBOL]\n          --     [, [Parameter_Types          =>] (PARAMETER_TYPES)]\n-         --     [, [Mechanism                =>] MECHANISM]\n-         --     [, [First_Optional_Parameter =>] IDENTIFIER]);\n+         --     [, [Mechanism                =>] MECHANISM]);\n \n          --  EXTERNAL_SYMBOL ::=\n          --    IDENTIFIER\n@@ -14465,24 +14412,19 @@ package body Sem_Prag is\n          --  MECHANISM_NAME ::=\n          --    Value\n          --  | Reference\n-         --  | Descriptor [([Class =>] CLASS_NAME)]\n-\n-         --  CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n \n          when Pragma_Import_Procedure => Import_Procedure : declare\n-            Args  : Args_List (1 .. 5);\n-            Names : constant Name_List (1 .. 5) := (\n+            Args  : Args_List (1 .. 4);\n+            Names : constant Name_List (1 .. 4) := (\n                       Name_Internal,\n                       Name_External,\n                       Name_Parameter_Types,\n-                      Name_Mechanism,\n-                      Name_First_Optional_Parameter);\n+                      Name_Mechanism);\n \n             Internal                 : Node_Id renames Args (1);\n             External                 : Node_Id renames Args (2);\n             Parameter_Types          : Node_Id renames Args (3);\n             Mechanism                : Node_Id renames Args (4);\n-            First_Optional_Parameter : Node_Id renames Args (5);\n \n          begin\n             GNAT_Pragma;\n@@ -14491,8 +14433,7 @@ package body Sem_Prag is\n               Arg_Internal                 => Internal,\n               Arg_External                 => External,\n               Arg_Parameter_Types          => Parameter_Types,\n-              Arg_Mechanism                => Mechanism,\n-              Arg_First_Optional_Parameter => First_Optional_Parameter);\n+              Arg_Mechanism                => Mechanism);\n          end Import_Procedure;\n \n          -----------------------------\n@@ -14503,8 +14444,7 @@ package body Sem_Prag is\n          --        [Internal                 =>] LOCAL_NAME\n          --     [, [External                 =>] EXTERNAL_SYMBOL]\n          --     [, [Parameter_Types          =>] (PARAMETER_TYPES)]\n-         --     [, [Mechanism                =>] MECHANISM]\n-         --     [, [First_Optional_Parameter =>] IDENTIFIER]);\n+         --     [, [Mechanism                =>] MECHANISM]);\n \n          --  EXTERNAL_SYMBOL ::=\n          --    IDENTIFIER\n@@ -14528,25 +14468,20 @@ package body Sem_Prag is\n          --  MECHANISM_NAME ::=\n          --    Value\n          --  | Reference\n-         --  | Descriptor [([Class =>] CLASS_NAME)]\n-\n-         --  CLASS_NAME ::= ubs | ubsb | uba | s | sb | a | nca\n \n          when Pragma_Import_Valued_Procedure =>\n          Import_Valued_Procedure : declare\n-            Args  : Args_List (1 .. 5);\n-            Names : constant Name_List (1 .. 5) := (\n+            Args  : Args_List (1 .. 4);\n+            Names : constant Name_List (1 .. 4) := (\n                       Name_Internal,\n                       Name_External,\n                       Name_Parameter_Types,\n-                      Name_Mechanism,\n-                      Name_First_Optional_Parameter);\n+                      Name_Mechanism);\n \n             Internal                 : Node_Id renames Args (1);\n             External                 : Node_Id renames Args (2);\n             Parameter_Types          : Node_Id renames Args (3);\n             Mechanism                : Node_Id renames Args (4);\n-            First_Optional_Parameter : Node_Id renames Args (5);\n \n          begin\n             GNAT_Pragma;\n@@ -14555,8 +14490,7 @@ package body Sem_Prag is\n               Arg_Internal                 => Internal,\n               Arg_External                 => External,\n               Arg_Parameter_Types          => Parameter_Types,\n-              Arg_Mechanism                => Mechanism,\n-              Arg_First_Optional_Parameter => First_Optional_Parameter);\n+              Arg_Mechanism                => Mechanism);\n          end Import_Valued_Procedure;\n \n          -----------------\n@@ -18910,11 +18844,12 @@ package body Sem_Prag is\n \n          --  pragma Short_Descriptors;\n \n+         --  Recognize and validate, but otherwise ignore\n+\n          when Pragma_Short_Descriptors =>\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n             Check_Valid_Configuration_Pragma;\n-            Short_Descriptors := True;\n \n          ------------------------------\n          -- Simple_Storage_Pool_Type --\n@@ -25354,7 +25289,7 @@ package body Sem_Prag is\n                   Set_Body_References (State_Id, New_Elmt_List);\n                end if;\n \n-               Append_Elmt (Ref, Body_References (State_Id));\n+               Append_Elmt (Ref, To => Body_References (State_Id));\n                exit;\n             end if;\n          end if;"}, {"sha": "4d6b1c0407e9b0e5c81796263c6f218c95786be2", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -262,13 +262,11 @@ package Sem_Prag is\n    --  dealing with subprogram body stubs or expression functions.\n \n    procedure Set_Encoded_Interface_Name (E : Entity_Id; S : Node_Id);\n-   --  This routine is used to set an encoded interface name. The node S is an\n-   --  N_String_Literal node for the external name to be set, and E is an\n+   --  This routine is used to set an encoded interface name. The node S is\n+   --  an N_String_Literal node for the external name to be set, and E is an\n    --  entity whose Interface_Name field is to be set. In the normal case where\n    --  S contains a name that is a valid C identifier, then S is simply set as\n-   --  the value of the Interface_Name. Otherwise it is encoded. See the body\n-   --  for details of the encoding. This encoding is only done on VMS systems,\n-   --  since it seems pretty silly, but is needed to pass some dubious tests in\n-   --  the test suite.\n+   --  the value of the Interface_Name. Otherwise it is encoded as needed by\n+   --  particular operating systems. See the body for details of the encoding.\n \n end Sem_Prag;"}, {"sha": "44435ca0812bf055f95ce380cd3dde3251fd3323", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -1875,11 +1875,7 @@ package body Sem_Util is\n                      return Abandon;\n                   end if;\n \n-                  if Writable_Actuals_List = No_Elist then\n-                     Writable_Actuals_List := New_Elmt_List;\n-                  end if;\n-\n-                  Append_Elmt (N, Writable_Actuals_List);\n+                  Append_New_Elmt (N, To => Writable_Actuals_List);\n \n                else\n                   if Identifiers_List = No_Elist then\n@@ -6128,9 +6124,7 @@ package body Sem_Util is\n             declare\n                Comp : constant Entity_Id := Defining_Identifier (Comp_Item);\n             begin\n-               if not Is_Tag (Comp)\n-                 and then Chars (Comp) /= Name_uParent\n-               then\n+               if not Is_Tag (Comp) and then Chars (Comp) /= Name_uParent then\n                   Append_Elmt (Comp, Into);\n                end if;\n             end;\n@@ -7410,9 +7404,7 @@ package body Sem_Util is\n \n    function Has_Denormals (E : Entity_Id) return Boolean is\n    begin\n-      return Is_Floating_Point_Type (E)\n-        and then Denorm_On_Target\n-        and then not Vax_Float (E);\n+      return Is_Floating_Point_Type (E) and then Denorm_On_Target;\n    end Has_Denormals;\n \n    -------------------------------------------\n@@ -8369,9 +8361,7 @@ package body Sem_Util is\n \n    function Has_Signed_Zeros (E : Entity_Id) return Boolean is\n    begin\n-      return Is_Floating_Point_Type (E)\n-        and then Signed_Zeros_On_Target\n-        and then not Vax_Float (E);\n+      return Is_Floating_Point_Type (E) and then Signed_Zeros_On_Target;\n    end Has_Signed_Zeros;\n \n    -----------------------------"}, {"sha": "14cf1e265c42a2217c073d7ce5b154ab0136d0a4", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -342,10 +342,6 @@ package Snames is\n    --  Ada 83, Ada 95, and Ada 2005 mode as well, where they are technically\n    --  considered to be implementation dependent pragmas.\n \n-   --  The entries marked VMS are VMS specific pragmas that are recognized only\n-   --  in OpenVMS versions of GNAT. They are ignored in other versions with an\n-   --  appropriate warning.\n-\n    --  The entries marked AAMP are AAMP specific pragmas that are recognized\n    --  only in GNAT for the AAMP. They are ignored in other versions with\n    --  appropriate warnings.\n@@ -579,7 +575,7 @@ package Snames is\n    --  pragma.\n \n    Name_Provide_Shift_Operators        : constant Name_Id := N + $; -- GNAT\n-   Name_Psect_Object                   : constant Name_Id := N + $; -- VMS\n+   Name_Psect_Object                   : constant Name_Id := N + $; -- GNAT\n    Name_Pure                           : constant Name_Id := N + $;\n    Name_Pure_Function                  : constant Name_Id := N + $; -- GNAT\n    Name_Refined_Depends                : constant Name_Id := N + $; -- GNAT\n@@ -614,7 +610,7 @@ package Snames is\n    Name_Test_Case                      : constant Name_Id := N + $; -- GNAT\n    Name_Task_Info                      : constant Name_Id := N + $; -- GNAT\n    Name_Task_Name                      : constant Name_Id := N + $; -- GNAT\n-   Name_Task_Storage                   : constant Name_Id := N + $; -- VMS\n+   Name_Task_Storage                   : constant Name_Id := N + $; -- GNAT\n    Name_Thread_Local_Storage           : constant Name_Id := N + $; -- GNAT\n    Name_Time_Slice                     : constant Name_Id := N + $; -- GNAT\n    Name_Title                          : constant Name_Id := N + $; -- GNAT"}, {"sha": "e93e9b4b89b1d6c710eb7623d05ab7a0d2399971", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -443,8 +443,7 @@ package Stand is\n    --  Entity for universal real type. The bounds of this type correspond to\n    --  to the largest supported real type (i.e. Long_Long_Float). It is the\n    --  type used for runtime calculations in type universal real. Note that\n-   --  this type is always IEEE format, even if Long_Long_Float is Vax_Float\n-   --  (and in that case the bounds don't correspond exactly).\n+   --  this type is always IEEE format.\n \n    Universal_Fixed : Entity_Id;\n    --  Entity for universal fixed type. This is a type with  arbitrary"}, {"sha": "880540eca3e00a6ecdac7db480020bf3aecfe393", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -262,20 +262,6 @@ package body Switch.B is\n             Ptr := Ptr + 1;\n             Usage_Requested := True;\n \n-         --  Processing for H switch\n-\n-         when 'H' =>\n-            if Ptr = Max then\n-               Bad_Switch (Switch_Chars);\n-            end if;\n-\n-            Ptr := Ptr + 1;\n-            Scan_Nat (Switch_Chars, Max, Ptr, Heap_Size, C);\n-\n-            if Heap_Size /= 32 and then Heap_Size /= 64 then\n-               Bad_Switch (Switch_Chars);\n-            end if;\n-\n          --  Processing for i switch\n \n          when 'i' =>"}, {"sha": "9206c1f685d507265c53505768c15c052f01d9d8", "filename": "gcc/ada/system.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Fsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                            (Compiler Version)                            --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -148,7 +148,6 @@ private\n    Frontend_Layout           : constant Boolean := False;\n    Machine_Overflows         : constant Boolean := False;\n    Machine_Rounds            : constant Boolean := True;\n-   OpenVMS                   : constant Boolean := False;\n    Preallocated_Stacks       : constant Boolean := False;\n    Signed_Zeros              : constant Boolean := True;\n    Stack_Check_Default       : constant Boolean := False;"}, {"sha": "84ed2028d6eba330cbbfa1cb05005e2a80ec786d", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -67,8 +67,6 @@ package body Targparm is\n       SNZ,  --   Signed_Zeros\n       SSL,  --   Suppress_Standard_Library\n       UAM,  --   Use_Ada_Main_Program_Name\n-      VMS,  --   OpenVMS\n-      VXF,  --   VAX Float\n       ZCD); --   ZCX_By_Default\n \n    Targparm_Flags : array (Targparm_Tags) of Boolean := (others => False);\n@@ -105,8 +103,6 @@ package body Targparm is\n    SNZ_Str : aliased constant Source_Buffer := \"Signed_Zeros\";\n    SSL_Str : aliased constant Source_Buffer := \"Suppress_Standard_Library\";\n    UAM_Str : aliased constant Source_Buffer := \"Use_Ada_Main_Program_Name\";\n-   VMS_Str : aliased constant Source_Buffer := \"OpenVMS\";\n-   VXF_Str : aliased constant Source_Buffer := \"VAX_Float\";\n    ZCD_Str : aliased constant Source_Buffer := \"ZCX_By_Default\";\n \n    --  The following defines a set of pointers to the above strings,\n@@ -143,8 +139,6 @@ package body Targparm is\n       SNZ_Str'Access,\n       SSL_Str'Access,\n       UAM_Str'Access,\n-      VMS_Str'Access,\n-      VXF_Str'Access,\n       ZCD_Str'Access);\n \n    -----------------------\n@@ -678,8 +672,6 @@ package body Targparm is\n                      when SSL => Suppress_Standard_Library_On_Target := Result;\n                      when SNZ => Signed_Zeros_On_Target              := Result;\n                      when UAM => Use_Ada_Main_Program_Name_On_Target := Result;\n-                     when VMS => OpenVMS_On_Target                   := Result;\n-                     when VXF => VAX_Float_On_Target                 := Result;\n                      when ZCD => ZCX_By_Default_On_Target            := Result;\n \n                      goto Line_Loop_Continue;"}, {"sha": "2fcc9a36005fd9fed4a0acd747108f2f2fb79f53", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c51f53f0145dd812b2231e03116f49fadcd004/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=21c51f53f0145dd812b2231e03116f49fadcd004", "patch": "@@ -179,13 +179,13 @@ package Targparm is\n \n    --  The default values here are used if no value is found in system.ads.\n    --  This should normally happen if the special version of system.ads used\n-   --  by the compiler itself is in use or if the value is only relevant to\n-   --  a particular target (e.g. OpenVMS, AAMP). The default values are\n-   --  suitable for use in normal environments. This approach allows the\n-   --  possibility of new versions of the compiler (possibly with new system\n-   --  parameters added) being used to compile older versions of the compiler\n-   --  sources, as well as avoiding duplicating values in all system-*.ads\n-   --  files for flags that are used on a few platforms only.\n+   --  by the compiler itself is in use or if the value is only relevant to a\n+   --  particular target (e.g. AAMP). The default values are suitable for use\n+   --  in normal environments. This approach allows the possibility of new\n+   --  versions of the compiler (possibly with new system parameters added)\n+   --  being used to compile older versions of the compiler sources, as well as\n+   --  avoiding duplicating values in all system-*.ads files for flags that are\n+   --  used on a few platforms only.\n \n    --  All these parameters should be regarded as read only by all clients\n    --  of the package. The only way they get modified is by calling the"}]}