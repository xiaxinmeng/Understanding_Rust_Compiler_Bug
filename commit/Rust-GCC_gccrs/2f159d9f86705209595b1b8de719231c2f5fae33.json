{"sha": "2f159d9f86705209595b1b8de719231c2f5fae33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYxNTlkOWY4NjcwNTIwOTU5NWIxYjhkZTcxOTIzMWMyZjVmYWUzMw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-03-03T11:54:49Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-03-03T11:54:49Z"}, "message": "re PR tree-optimization/65241 (ICE (in remove_local_expressions_from_table, at tree-ssa-dom.c:1081))\n\n\tPR tree-optimization/65241\n\t* tree-ssa-dom.c (lookup_avail_expr): Only modify the avail_expr\n\thash table if INSERT is true.\n\n\tPR tree-optimization/65241\n\t* gcc.c-torture/compile/pr65241.c: New test.\n\nFrom-SVN: r221145", "tree": {"sha": "5171a8e85f5a8f6e5aa6b698ed2026c29c5e2b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5171a8e85f5a8f6e5aa6b698ed2026c29c5e2b5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f159d9f86705209595b1b8de719231c2f5fae33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f159d9f86705209595b1b8de719231c2f5fae33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f159d9f86705209595b1b8de719231c2f5fae33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f159d9f86705209595b1b8de719231c2f5fae33/comments", "author": null, "committer": null, "parents": [{"sha": "5cb8b86edef7b3334f7a6ec620dfd4e80b9b1300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb8b86edef7b3334f7a6ec620dfd4e80b9b1300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb8b86edef7b3334f7a6ec620dfd4e80b9b1300"}], "stats": {"total": 64, "additions": 52, "deletions": 12}, "files": [{"sha": "cb42917f6104aa86179b1f886a23d1ab614d5f46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f159d9f86705209595b1b8de719231c2f5fae33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f159d9f86705209595b1b8de719231c2f5fae33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f159d9f86705209595b1b8de719231c2f5fae33", "patch": "@@ -1,3 +1,9 @@\n+2015-03-23  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/65241\n+\t* tree-ssa-dom.c (lookup_avail_expr): Only modify the avail_expr\n+\thash table if INSERT is true.\n+\n 2015-03-03  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/65296"}, {"sha": "824d2561fea38bfbf1afd357ab275a5dc3b46305", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f159d9f86705209595b1b8de719231c2f5fae33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f159d9f86705209595b1b8de719231c2f5fae33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f159d9f86705209595b1b8de719231c2f5fae33", "patch": "@@ -1,3 +1,8 @@\n+2015-03-13  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/65241\n+\t* gcc.c-torture/compile/pr65241.c: New test.\n+\n 2015-03-03  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/64331"}, {"sha": "dd76ac5309859817b89b753c267f643e1ef4c912", "filename": "gcc/testsuite/gcc.c-torture/compile/pr65241.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f159d9f86705209595b1b8de719231c2f5fae33/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65241.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f159d9f86705209595b1b8de719231c2f5fae33/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65241.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65241.c?ref=2f159d9f86705209595b1b8de719231c2f5fae33", "patch": "@@ -0,0 +1,26 @@\n+enum E { A, B, C, D };\n+void fn4 (void);\n+\n+int\n+fn1 (enum E p1)\n+{\n+  static int w[D];\n+  if (w[p1])\n+    switch (p1)\n+      case C:\n+      w[p1] = 0;\n+}\n+\n+void\n+fn2 (p1)\n+{\n+  fn1 (p1);\n+}\n+\n+void\n+fn3 (enum E p1)\n+{\n+  fn2 (p1);\n+  fn4 ();\n+  fn2 (p1);\n+}"}, {"sha": "d230ce1c7b38637ce539a86f9c3f46206a04b501", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f159d9f86705209595b1b8de719231c2f5fae33/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f159d9f86705209595b1b8de719231c2f5fae33/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=2f159d9f86705209595b1b8de719231c2f5fae33", "patch": "@@ -2649,19 +2649,22 @@ lookup_avail_expr (gimple stmt, bool insert)\n \t    && walk_non_aliased_vuses (&ref, vuse2,\n \t\t\t\t       vuse_eq, NULL, NULL, vuse1) != NULL))\n \t{\n-\t  struct expr_hash_elt *element2 = XNEW (struct expr_hash_elt);\n-\t  *element2 = element;\n-\t  element2->stamp = element2;\n-\n-\t  /* Insert the expr into the hash by replacing the current\n-\t     entry and recording the value to restore in the\n-\t     aval_exprs_stack.  */\n-\t  avail_exprs_stack.safe_push (std::make_pair (element2, *slot));\n-\t  *slot = element2;\n-\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t  if (insert)\n \t    {\n-\t      fprintf (dump_file, \"2>>> \");\n-\t      print_expr_hash_elt (dump_file, *slot);\n+\t      struct expr_hash_elt *element2 = XNEW (struct expr_hash_elt);\n+\t      *element2 = element;\n+\t      element2->stamp = element2;\n+\n+\t      /* Insert the expr into the hash by replacing the current\n+\t\t entry and recording the value to restore in the\n+\t\t avail_exprs_stack.  */\n+\t      avail_exprs_stack.safe_push (std::make_pair (element2, *slot));\n+\t      *slot = element2;\n+\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t{\n+\t\t  fprintf (dump_file, \"2>>> \");\n+\t\t  print_expr_hash_elt (dump_file, *slot);\n+\t\t}\n \t    }\n \t  return NULL_TREE;\n \t}"}]}