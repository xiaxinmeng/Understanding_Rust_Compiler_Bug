{"sha": "0b91defe9422d1f0931b46beff4d22e7b4e37fd8", "node_id": "C_kwDOANBUbNoAKDBiOTFkZWZlOTQyMmQxZjA5MzFiNDZiZWZmNGQyMmU3YjRlMzdmZDg", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-25T20:33:09Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-28T13:15:05Z"}, "message": "ast: resolve: Add source for ResolverBase", "tree": {"sha": "0ee923a37bbb7a7987b26df4fc116303667b775b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ee923a37bbb7a7987b26df4fc116303667b775b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b91defe9422d1f0931b46beff4d22e7b4e37fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b91defe9422d1f0931b46beff4d22e7b4e37fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b91defe9422d1f0931b46beff4d22e7b4e37fd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b91defe9422d1f0931b46beff4d22e7b4e37fd8/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d462ec452a1e6558ddaf071a10d2fb3729f5af73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d462ec452a1e6558ddaf071a10d2fb3729f5af73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d462ec452a1e6558ddaf071a10d2fb3729f5af73"}], "stats": {"total": 978, "additions": 813, "deletions": 165}, "files": [{"sha": "ae385e0bec9cc8d605c585153857b0e26aa35d69", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b91defe9422d1f0931b46beff4d22e7b4e37fd8/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b91defe9422d1f0931b46beff4d22e7b4e37fd8/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=0b91defe9422d1f0931b46beff4d22e7b4e37fd8", "patch": "@@ -87,6 +87,7 @@ GRS_OBJS = \\\n     rust/rust-ast-lower-pattern.o \\\n     rust/rust-name-resolver.o \\\n     rust/rust-ast-resolve.o \\\n+    rust/rust-ast-resolve-base.o \\\n     rust/rust-ast-resolve-item.o \\\n     rust/rust-ast-resolve-pattern.o \\\n     rust/rust-ast-resolve-expr.o \\"}, {"sha": "d1b3885837b9434d291f32ac5a1f954f389dcc3e", "filename": "gcc/rust/resolve/rust-ast-resolve-base.cc", "status": "added", "additions": 642, "deletions": 0, "changes": 642, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b91defe9422d1f0931b46beff4d22e7b4e37fd8/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b91defe9422d1f0931b46beff4d22e7b4e37fd8/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.cc?ref=0b91defe9422d1f0931b46beff4d22e7b4e37fd8", "patch": "@@ -0,0 +1,642 @@\n+// Copyright (C) 2020-2022 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"rust-ast-resolve-base.h\"\n+\n+namespace Rust {\n+namespace Resolver {\n+\n+bool\n+resolve_visibility (const AST::Visibility &vis)\n+{\n+  gcc_unreachable ();\n+  return false;\n+}\n+\n+// Default visitors implementations\n+\n+void\n+ResolverBase::visit (AST::Token &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::DelimTokenTree &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::AttrInputMetaItemContainer &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IdentifierExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::Lifetime &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::LifetimeParam &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::PathInExpression &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TypePathSegment &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TypePathSegmentGeneric &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TypePathSegmentFunction &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TypePath &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::QualifiedPathInExpression &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::QualifiedPathInType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::LiteralExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::AttrInputLiteral &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MetaItemLitExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MetaItemPathLit &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::BorrowExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::DereferenceExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ErrorPropagationExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::NegationExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ArithmeticOrLogicalExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ComparisonExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::LazyBooleanExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TypeCastExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::AssignmentExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::CompoundAssignmentExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::GroupedExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ArrayElemsValues &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ArrayElemsCopied &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ArrayExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ArrayIndexExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TupleExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TupleIndexExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructExprStruct &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructExprFieldIdentifier &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructExprFieldIdentifierValue &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructExprFieldIndexValue &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructExprStructFields &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructExprStructBase &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::CallExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MethodCallExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::FieldAccessExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ClosureExprInner &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::BlockExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ClosureExprInnerTyped &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ContinueExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::BreakExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangeFromToExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangeFromExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangeToExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangeFullExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangeFromToInclExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangeToInclExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ReturnExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::UnsafeBlockExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::LoopExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::WhileLoopExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::WhileLetLoopExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ForLoopExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IfExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IfExprConseqElse &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IfExprConseqIf &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IfExprConseqIfLet &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IfLetExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IfLetExprConseqElse &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IfLetExprConseqIf &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IfLetExprConseqIfLet &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MatchExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::AwaitExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::AsyncBlockExpr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TypeParam &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::LifetimeWhereClauseItem &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TypeBoundWhereClauseItem &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::Method &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::Module &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ExternCrate &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::UseTreeGlob &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::UseTreeList &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::UseTreeRebind &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::UseDeclaration &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::Function &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TypeAlias &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructStruct &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TupleStruct &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::EnumItem &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::EnumItemTuple &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::EnumItemStruct &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::EnumItemDiscriminant &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::Enum &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::Union &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ConstantItem &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StaticItem &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TraitItemFunc &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TraitItemMethod &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TraitItemConst &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TraitItemType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::Trait &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::InherentImpl &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TraitImpl &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ExternalStaticItem &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ExternalFunctionItem &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ExternBlock &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MacroMatchFragment &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MacroMatchRepetition &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MacroMatcher &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MacroRulesDefinition &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MacroInvocation &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MetaItemPath &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MetaItemSeq &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MetaWord &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MetaNameValueStr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MetaListPaths &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::MetaListNameValueStr &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::LiteralPattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::IdentifierPattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::WildcardPattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangePatternBoundLiteral &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangePatternBoundPath &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangePatternBoundQualPath &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RangePattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ReferencePattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructPatternFieldTuplePat &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructPatternFieldIdentPat &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructPatternFieldIdent &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::StructPattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TupleStructItemsNoRange &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TupleStructItemsRange &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TupleStructPattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TuplePatternItemsMultiple &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TuplePatternItemsRanged &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TuplePattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::GroupedPattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::SlicePattern &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::EmptyStmt &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::LetStmt &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ExprStmtWithoutBlock &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ExprStmtWithBlock &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TraitBound &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ImplTraitType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TraitObjectType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ParenthesisedType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ImplTraitTypeOneBound &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TraitObjectTypeOneBound &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::TupleType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::NeverType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::RawPointerType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ReferenceType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::ArrayType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::SliceType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::InferredType &)\n+{}\n+\n+void\n+ResolverBase::visit (AST::BareFunctionType &)\n+{}\n+\n+} // namespace Resolver\n+} // namespace Rust"}, {"sha": "17d05c38cf2932c006134c00627d11eccac43443", "filename": "gcc/rust/resolve/rust-ast-resolve-base.h", "status": "modified", "additions": 170, "deletions": 165, "changes": 335, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b91defe9422d1f0931b46beff4d22e7b4e37fd8/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b91defe9422d1f0931b46beff4d22e7b4e37fd8/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-base.h?ref=0b91defe9422d1f0931b46beff4d22e7b4e37fd8", "patch": "@@ -32,171 +32,171 @@ class ResolverBase : public AST::ASTVisitor\n public:\n   virtual ~ResolverBase () {}\n \n-  void visit (AST::Token &) {}\n-  void visit (AST::DelimTokenTree &) {}\n-  void visit (AST::AttrInputMetaItemContainer &) {}\n-  void visit (AST::IdentifierExpr &) {}\n-  void visit (AST::Lifetime &) {}\n-  void visit (AST::LifetimeParam &) {}\n-  void visit (AST::PathInExpression &) {}\n-  void visit (AST::TypePathSegment &) {}\n-  void visit (AST::TypePathSegmentGeneric &) {}\n-  void visit (AST::TypePathSegmentFunction &) {}\n-  void visit (AST::TypePath &) {}\n-  void visit (AST::QualifiedPathInExpression &) {}\n-  void visit (AST::QualifiedPathInType &) {}\n-  void visit (AST::LiteralExpr &) {}\n-  void visit (AST::AttrInputLiteral &) {}\n-  void visit (AST::MetaItemLitExpr &) {}\n-  void visit (AST::MetaItemPathLit &) {}\n-  void visit (AST::BorrowExpr &) {}\n-  void visit (AST::DereferenceExpr &) {}\n-  void visit (AST::ErrorPropagationExpr &) {}\n-  void visit (AST::NegationExpr &) {}\n-  void visit (AST::ArithmeticOrLogicalExpr &) {}\n-  void visit (AST::ComparisonExpr &) {}\n-  void visit (AST::LazyBooleanExpr &) {}\n-  void visit (AST::TypeCastExpr &) {}\n-  void visit (AST::AssignmentExpr &) {}\n-  void visit (AST::CompoundAssignmentExpr &) {}\n-  void visit (AST::GroupedExpr &) {}\n-  void visit (AST::ArrayElemsValues &) {}\n-  void visit (AST::ArrayElemsCopied &) {}\n-  void visit (AST::ArrayExpr &) {}\n-  void visit (AST::ArrayIndexExpr &) {}\n-  void visit (AST::TupleExpr &) {}\n-  void visit (AST::TupleIndexExpr &) {}\n-  void visit (AST::StructExprStruct &) {}\n-  void visit (AST::StructExprFieldIdentifier &) {}\n-  void visit (AST::StructExprFieldIdentifierValue &) {}\n-  void visit (AST::StructExprFieldIndexValue &) {}\n-  void visit (AST::StructExprStructFields &) {}\n-  void visit (AST::StructExprStructBase &) {}\n-  void visit (AST::CallExpr &) {}\n-  void visit (AST::MethodCallExpr &) {}\n-  void visit (AST::FieldAccessExpr &) {}\n-  void visit (AST::ClosureExprInner &) {}\n-  void visit (AST::BlockExpr &) {}\n-  void visit (AST::ClosureExprInnerTyped &) {}\n-  void visit (AST::ContinueExpr &) {}\n-  void visit (AST::BreakExpr &) {}\n-  void visit (AST::RangeFromToExpr &) {}\n-  void visit (AST::RangeFromExpr &) {}\n-  void visit (AST::RangeToExpr &) {}\n-  void visit (AST::RangeFullExpr &) {}\n-  void visit (AST::RangeFromToInclExpr &) {}\n-  void visit (AST::RangeToInclExpr &) {}\n-  void visit (AST::ReturnExpr &) {}\n-  void visit (AST::UnsafeBlockExpr &) {}\n-  void visit (AST::LoopExpr &) {}\n-  void visit (AST::WhileLoopExpr &) {}\n-  void visit (AST::WhileLetLoopExpr &) {}\n-  void visit (AST::ForLoopExpr &) {}\n-  void visit (AST::IfExpr &) {}\n-  void visit (AST::IfExprConseqElse &) {}\n-  void visit (AST::IfExprConseqIf &) {}\n-  void visit (AST::IfExprConseqIfLet &) {}\n-  void visit (AST::IfLetExpr &) {}\n-  void visit (AST::IfLetExprConseqElse &) {}\n-  void visit (AST::IfLetExprConseqIf &) {}\n-  void visit (AST::IfLetExprConseqIfLet &) {}\n-\n-  void visit (AST::MatchExpr &) {}\n-  void visit (AST::AwaitExpr &) {}\n-  void visit (AST::AsyncBlockExpr &) {}\n-\n-  void visit (AST::TypeParam &) {}\n-\n-  void visit (AST::LifetimeWhereClauseItem &) {}\n-  void visit (AST::TypeBoundWhereClauseItem &) {}\n-  void visit (AST::Method &) {}\n-  void visit (AST::Module &) {}\n-  void visit (AST::ExternCrate &) {}\n-\n-  void visit (AST::UseTreeGlob &) {}\n-  void visit (AST::UseTreeList &) {}\n-  void visit (AST::UseTreeRebind &) {}\n-  void visit (AST::UseDeclaration &) {}\n-  void visit (AST::Function &) {}\n-  void visit (AST::TypeAlias &) {}\n-  void visit (AST::StructStruct &) {}\n-  void visit (AST::TupleStruct &) {}\n-  void visit (AST::EnumItem &) {}\n-  void visit (AST::EnumItemTuple &) {}\n-  void visit (AST::EnumItemStruct &) {}\n-  void visit (AST::EnumItemDiscriminant &) {}\n-  void visit (AST::Enum &) {}\n-  void visit (AST::Union &) {}\n-  void visit (AST::ConstantItem &) {}\n-  void visit (AST::StaticItem &) {}\n-  void visit (AST::TraitItemFunc &) {}\n-  void visit (AST::TraitItemMethod &) {}\n-  void visit (AST::TraitItemConst &) {}\n-  void visit (AST::TraitItemType &) {}\n-  void visit (AST::Trait &) {}\n-  void visit (AST::InherentImpl &) {}\n-  void visit (AST::TraitImpl &) {}\n-\n-  void visit (AST::ExternalStaticItem &) {}\n-  void visit (AST::ExternalFunctionItem &) {}\n-  void visit (AST::ExternBlock &) {}\n-\n-  void visit (AST::MacroMatchFragment &) {}\n-  void visit (AST::MacroMatchRepetition &) {}\n-  void visit (AST::MacroMatcher &) {}\n-  void visit (AST::MacroRulesDefinition &) {}\n-  void visit (AST::MacroInvocation &) {}\n-  void visit (AST::MetaItemPath &) {}\n-  void visit (AST::MetaItemSeq &) {}\n-  void visit (AST::MetaWord &) {}\n-  void visit (AST::MetaNameValueStr &) {}\n-  void visit (AST::MetaListPaths &) {}\n-  void visit (AST::MetaListNameValueStr &) {}\n-\n-  void visit (AST::LiteralPattern &) {}\n-  void visit (AST::IdentifierPattern &) {}\n-  void visit (AST::WildcardPattern &) {}\n-\n-  void visit (AST::RangePatternBoundLiteral &) {}\n-  void visit (AST::RangePatternBoundPath &) {}\n-  void visit (AST::RangePatternBoundQualPath &) {}\n-  void visit (AST::RangePattern &) {}\n-  void visit (AST::ReferencePattern &) {}\n-\n-  void visit (AST::StructPatternFieldTuplePat &) {}\n-  void visit (AST::StructPatternFieldIdentPat &) {}\n-  void visit (AST::StructPatternFieldIdent &) {}\n-  void visit (AST::StructPattern &) {}\n-\n-  void visit (AST::TupleStructItemsNoRange &) {}\n-  void visit (AST::TupleStructItemsRange &) {}\n-  void visit (AST::TupleStructPattern &) {}\n-\n-  void visit (AST::TuplePatternItemsMultiple &) {}\n-  void visit (AST::TuplePatternItemsRanged &) {}\n-  void visit (AST::TuplePattern &) {}\n-  void visit (AST::GroupedPattern &) {}\n-  void visit (AST::SlicePattern &) {}\n-\n-  void visit (AST::EmptyStmt &) {}\n-  void visit (AST::LetStmt &) {}\n-  void visit (AST::ExprStmtWithoutBlock &) {}\n-  void visit (AST::ExprStmtWithBlock &) {}\n-\n-  void visit (AST::TraitBound &) {}\n-  void visit (AST::ImplTraitType &) {}\n-  void visit (AST::TraitObjectType &) {}\n-  void visit (AST::ParenthesisedType &) {}\n-  void visit (AST::ImplTraitTypeOneBound &) {}\n-  void visit (AST::TraitObjectTypeOneBound &) {}\n-  void visit (AST::TupleType &) {}\n-  void visit (AST::NeverType &) {}\n-  void visit (AST::RawPointerType &) {}\n-  void visit (AST::ReferenceType &) {}\n-  void visit (AST::ArrayType &) {}\n-  void visit (AST::SliceType &) {}\n-  void visit (AST::InferredType &) {}\n-  void visit (AST::BareFunctionType &) {}\n+  void visit (AST::Token &);\n+  void visit (AST::DelimTokenTree &);\n+  void visit (AST::AttrInputMetaItemContainer &);\n+  void visit (AST::IdentifierExpr &);\n+  void visit (AST::Lifetime &);\n+  void visit (AST::LifetimeParam &);\n+  void visit (AST::PathInExpression &);\n+  void visit (AST::TypePathSegment &);\n+  void visit (AST::TypePathSegmentGeneric &);\n+  void visit (AST::TypePathSegmentFunction &);\n+  void visit (AST::TypePath &);\n+  void visit (AST::QualifiedPathInExpression &);\n+  void visit (AST::QualifiedPathInType &);\n+  void visit (AST::LiteralExpr &);\n+  void visit (AST::AttrInputLiteral &);\n+  void visit (AST::MetaItemLitExpr &);\n+  void visit (AST::MetaItemPathLit &);\n+  void visit (AST::BorrowExpr &);\n+  void visit (AST::DereferenceExpr &);\n+  void visit (AST::ErrorPropagationExpr &);\n+  void visit (AST::NegationExpr &);\n+  void visit (AST::ArithmeticOrLogicalExpr &);\n+  void visit (AST::ComparisonExpr &);\n+  void visit (AST::LazyBooleanExpr &);\n+  void visit (AST::TypeCastExpr &);\n+  void visit (AST::AssignmentExpr &);\n+  void visit (AST::CompoundAssignmentExpr &);\n+  void visit (AST::GroupedExpr &);\n+  void visit (AST::ArrayElemsValues &);\n+  void visit (AST::ArrayElemsCopied &);\n+  void visit (AST::ArrayExpr &);\n+  void visit (AST::ArrayIndexExpr &);\n+  void visit (AST::TupleExpr &);\n+  void visit (AST::TupleIndexExpr &);\n+  void visit (AST::StructExprStruct &);\n+  void visit (AST::StructExprFieldIdentifier &);\n+  void visit (AST::StructExprFieldIdentifierValue &);\n+  void visit (AST::StructExprFieldIndexValue &);\n+  void visit (AST::StructExprStructFields &);\n+  void visit (AST::StructExprStructBase &);\n+  void visit (AST::CallExpr &);\n+  void visit (AST::MethodCallExpr &);\n+  void visit (AST::FieldAccessExpr &);\n+  void visit (AST::ClosureExprInner &);\n+  void visit (AST::BlockExpr &);\n+  void visit (AST::ClosureExprInnerTyped &);\n+  void visit (AST::ContinueExpr &);\n+  void visit (AST::BreakExpr &);\n+  void visit (AST::RangeFromToExpr &);\n+  void visit (AST::RangeFromExpr &);\n+  void visit (AST::RangeToExpr &);\n+  void visit (AST::RangeFullExpr &);\n+  void visit (AST::RangeFromToInclExpr &);\n+  void visit (AST::RangeToInclExpr &);\n+  void visit (AST::ReturnExpr &);\n+  void visit (AST::UnsafeBlockExpr &);\n+  void visit (AST::LoopExpr &);\n+  void visit (AST::WhileLoopExpr &);\n+  void visit (AST::WhileLetLoopExpr &);\n+  void visit (AST::ForLoopExpr &);\n+  void visit (AST::IfExpr &);\n+  void visit (AST::IfExprConseqElse &);\n+  void visit (AST::IfExprConseqIf &);\n+  void visit (AST::IfExprConseqIfLet &);\n+  void visit (AST::IfLetExpr &);\n+  void visit (AST::IfLetExprConseqElse &);\n+  void visit (AST::IfLetExprConseqIf &);\n+  void visit (AST::IfLetExprConseqIfLet &);\n+\n+  void visit (AST::MatchExpr &);\n+  void visit (AST::AwaitExpr &);\n+  void visit (AST::AsyncBlockExpr &);\n+\n+  void visit (AST::TypeParam &);\n+\n+  void visit (AST::LifetimeWhereClauseItem &);\n+  void visit (AST::TypeBoundWhereClauseItem &);\n+  void visit (AST::Method &);\n+  void visit (AST::Module &);\n+  void visit (AST::ExternCrate &);\n+\n+  void visit (AST::UseTreeGlob &);\n+  void visit (AST::UseTreeList &);\n+  void visit (AST::UseTreeRebind &);\n+  void visit (AST::UseDeclaration &);\n+  void visit (AST::Function &);\n+  void visit (AST::TypeAlias &);\n+  void visit (AST::StructStruct &);\n+  void visit (AST::TupleStruct &);\n+  void visit (AST::EnumItem &);\n+  void visit (AST::EnumItemTuple &);\n+  void visit (AST::EnumItemStruct &);\n+  void visit (AST::EnumItemDiscriminant &);\n+  void visit (AST::Enum &);\n+  void visit (AST::Union &);\n+  void visit (AST::ConstantItem &);\n+  void visit (AST::StaticItem &);\n+  void visit (AST::TraitItemFunc &);\n+  void visit (AST::TraitItemMethod &);\n+  void visit (AST::TraitItemConst &);\n+  void visit (AST::TraitItemType &);\n+  void visit (AST::Trait &);\n+  void visit (AST::InherentImpl &);\n+  void visit (AST::TraitImpl &);\n+\n+  void visit (AST::ExternalStaticItem &);\n+  void visit (AST::ExternalFunctionItem &);\n+  void visit (AST::ExternBlock &);\n+\n+  void visit (AST::MacroMatchFragment &);\n+  void visit (AST::MacroMatchRepetition &);\n+  void visit (AST::MacroMatcher &);\n+  void visit (AST::MacroRulesDefinition &);\n+  void visit (AST::MacroInvocation &);\n+  void visit (AST::MetaItemPath &);\n+  void visit (AST::MetaItemSeq &);\n+  void visit (AST::MetaWord &);\n+  void visit (AST::MetaNameValueStr &);\n+  void visit (AST::MetaListPaths &);\n+  void visit (AST::MetaListNameValueStr &);\n+\n+  void visit (AST::LiteralPattern &);\n+  void visit (AST::IdentifierPattern &);\n+  void visit (AST::WildcardPattern &);\n+\n+  void visit (AST::RangePatternBoundLiteral &);\n+  void visit (AST::RangePatternBoundPath &);\n+  void visit (AST::RangePatternBoundQualPath &);\n+  void visit (AST::RangePattern &);\n+  void visit (AST::ReferencePattern &);\n+\n+  void visit (AST::StructPatternFieldTuplePat &);\n+  void visit (AST::StructPatternFieldIdentPat &);\n+  void visit (AST::StructPatternFieldIdent &);\n+  void visit (AST::StructPattern &);\n+\n+  void visit (AST::TupleStructItemsNoRange &);\n+  void visit (AST::TupleStructItemsRange &);\n+  void visit (AST::TupleStructPattern &);\n+\n+  void visit (AST::TuplePatternItemsMultiple &);\n+  void visit (AST::TuplePatternItemsRanged &);\n+  void visit (AST::TuplePattern &);\n+  void visit (AST::GroupedPattern &);\n+  void visit (AST::SlicePattern &);\n+\n+  void visit (AST::EmptyStmt &);\n+  void visit (AST::LetStmt &);\n+  void visit (AST::ExprStmtWithoutBlock &);\n+  void visit (AST::ExprStmtWithBlock &);\n+\n+  void visit (AST::TraitBound &);\n+  void visit (AST::ImplTraitType &);\n+  void visit (AST::TraitObjectType &);\n+  void visit (AST::ParenthesisedType &);\n+  void visit (AST::ImplTraitTypeOneBound &);\n+  void visit (AST::TraitObjectTypeOneBound &);\n+  void visit (AST::TupleType &);\n+  void visit (AST::NeverType &);\n+  void visit (AST::RawPointerType &);\n+  void visit (AST::ReferenceType &);\n+  void visit (AST::ArrayType &);\n+  void visit (AST::SliceType &);\n+  void visit (AST::InferredType &);\n+  void visit (AST::BareFunctionType &);\n \n protected:\n   ResolverBase (NodeId parent)\n@@ -206,6 +206,11 @@ class ResolverBase : public AST::ASTVisitor\n \n   bool resolved () const { return resolved_node != UNKNOWN_NODEID; }\n \n+  /**\n+   * Resolve a visibility's path through the name resolver\n+   */\n+  bool resolve_visibility (const AST::Visibility &vis);\n+\n   Resolver *resolver;\n   Analysis::Mappings *mappings;\n   NodeId resolved_node;"}]}