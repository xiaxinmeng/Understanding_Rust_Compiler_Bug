{"sha": "047550e9f62c57511d6e88da4e4f4f8031929b2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ3NTUwZTlmNjJjNTc1MTFkNmU4OGRhNGU0ZjRmODAzMTkyOWIyZQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2010-03-22T16:28:51Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2010-03-22T16:28:51Z"}, "message": "re PR middle-end/43475 (ICE in form_sum, at reload.c:5348)\n\n\tPR middle-end/43475\n\t* recog.c (validate_replace_rtx_group): Replace also in\n\tREG_EQUAL and REG_EQUIV notes.\n\ntestsuite/\n\t* gfortran.dg/pr43475.f90: New testcase.\n\nFrom-SVN: r157640", "tree": {"sha": "f48c85db6997d5824270980a9eab9e75be570a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f48c85db6997d5824270980a9eab9e75be570a0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/047550e9f62c57511d6e88da4e4f4f8031929b2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047550e9f62c57511d6e88da4e4f4f8031929b2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047550e9f62c57511d6e88da4e4f4f8031929b2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047550e9f62c57511d6e88da4e4f4f8031929b2e/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80f046ccedcffce37a508800f7e552338257f620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f046ccedcffce37a508800f7e552338257f620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80f046ccedcffce37a508800f7e552338257f620"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "6b87dd11d8c94a4d8d96d126e8ec4a27ba4f803d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047550e9f62c57511d6e88da4e4f4f8031929b2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047550e9f62c57511d6e88da4e4f4f8031929b2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=047550e9f62c57511d6e88da4e4f4f8031929b2e", "patch": "@@ -1,3 +1,9 @@\n+2010-03-22  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/43475\n+\t* recog.c (validate_replace_rtx_group): Replace also in\n+\tREG_EQUAL and REG_EQUIV notes.\n+\n 2010-03-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43390"}, {"sha": "bc0b2782d386491687c8471bd404db09218cc4bc", "filename": "gcc/recog.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047550e9f62c57511d6e88da4e4f4f8031929b2e/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047550e9f62c57511d6e88da4e4f4f8031929b2e/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=047550e9f62c57511d6e88da4e4f4f8031929b2e", "patch": "@@ -787,12 +787,18 @@ validate_replace_rtx_part_nosimplify (rtx from, rtx to, rtx *where,\n \n }\n \n-/* Try replacing every occurrence of FROM in INSN with TO.  */\n+/* Try replacing every occurrence of FROM in INSN with TO.  This also\n+   will replace in REG_EQUAL and REG_EQUIV notes.  */\n \n void\n validate_replace_rtx_group (rtx from, rtx to, rtx insn)\n {\n+  rtx note;\n   validate_replace_rtx_1 (&PATTERN (insn), from, to, insn, true);\n+  for (note = REG_NOTES (insn); note; note = XEXP (note, 1))\n+    if (REG_NOTE_KIND (note) == REG_EQUAL\n+\t|| REG_NOTE_KIND (note) == REG_EQUIV)\n+      validate_replace_rtx_1 (&XEXP (note, 0), from, to, insn, true);\n }\n \n /* Function called by note_uses to replace used subexpressions.  */"}, {"sha": "e29c4c9ca43826405463e691c6e41378b7d76526", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047550e9f62c57511d6e88da4e4f4f8031929b2e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047550e9f62c57511d6e88da4e4f4f8031929b2e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=047550e9f62c57511d6e88da4e4f4f8031929b2e", "patch": "@@ -1,3 +1,8 @@\n+2010-03-22  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/43475\n+\t* gfortran.dg/pr43475.f90: New testcase.\n+\n 2010-03-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43390"}, {"sha": "72c0d18348befed749bb09221fde2a8d4856d371", "filename": "gcc/testsuite/gfortran.dg/pr43475.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047550e9f62c57511d6e88da4e4f4f8031929b2e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr43475.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047550e9f62c57511d6e88da4e4f4f8031929b2e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr43475.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr43475.f90?ref=047550e9f62c57511d6e88da4e4f4f8031929b2e", "patch": "@@ -0,0 +1,14 @@\n+! PR middle-end/43475\n+! { dg-do compile }\n+! { dg-options \"-O2\" }\n+subroutine ss(w)\n+  implicit none\n+  integer :: w(:)\n+  integer :: b,c,d\n+  b = w(8)\n+  c = 5\n+  d = 3\n+  call s1(c)\n+  call s2(b+c)\n+  call s3(w(b))\n+end subroutine ss"}]}