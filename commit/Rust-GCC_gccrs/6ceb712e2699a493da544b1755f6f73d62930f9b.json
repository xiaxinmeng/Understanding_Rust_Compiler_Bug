{"sha": "6ceb712e2699a493da544b1755f6f73d62930f9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNlYjcxMmUyNjk5YTQ5M2RhNTQ0YjE3NTVmNmY3M2Q2MjkzMGY5Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-03-10T10:57:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-03-10T12:13:51Z"}, "message": "tree-optimization/99510 - fix type reuse of build_aligned_type\n\nThe fix for PR94775 added more strict checking for type reuse\nto check_aligned_type, specifically matching TYPE_USER_ALIGN.\nBut then build_aligned_type sets TYPE_USER_ALIGN on the built\nvariant so if the type we build an aligned variant for does not\nhave TYPE_USER_ALIGN we'll never re-use the newly created aligned\nvariant.  This results in ~35000 identical variants being created\nfor polyhedron doduc.\n\nThe following instead checks that the candidate has TYPE_USER_ALIGN set.\n\n2021-03-10  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/99510\n\t* tree.c (check_aligned_type): Check that the candidate\n\thas TYPE_USER_ALIGN set instead of matching with the\n\toriginal type.", "tree": {"sha": "dd644d7adad5218cb7716ac4fec701133acd3404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd644d7adad5218cb7716ac4fec701133acd3404"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ceb712e2699a493da544b1755f6f73d62930f9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ceb712e2699a493da544b1755f6f73d62930f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ceb712e2699a493da544b1755f6f73d62930f9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ceb712e2699a493da544b1755f6f73d62930f9b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47403a0eefac52636db768dc46c3c88a2cd4b28e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47403a0eefac52636db768dc46c3c88a2cd4b28e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47403a0eefac52636db768dc46c3c88a2cd4b28e"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "7c44c226a332e56295c5a15b8f281204f0644e6f", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ceb712e2699a493da544b1755f6f73d62930f9b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ceb712e2699a493da544b1755f6f73d62930f9b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6ceb712e2699a493da544b1755f6f73d62930f9b", "patch": "@@ -6609,7 +6609,9 @@ check_aligned_type (const_tree cand, const_tree base, unsigned int align)\n \t  && TYPE_CONTEXT (cand) == TYPE_CONTEXT (base)\n \t  /* Check alignment.  */\n \t  && TYPE_ALIGN (cand) == align\n-\t  && TYPE_USER_ALIGN (cand) == TYPE_USER_ALIGN (base)\n+\t  /* Check this is a user-aligned type as build_aligned_type\n+\t     would create.  */\n+\t  && TYPE_USER_ALIGN (cand)\n \t  && attribute_list_equal (TYPE_ATTRIBUTES (cand),\n \t\t\t\t   TYPE_ATTRIBUTES (base))\n \t  && check_lang_type (cand, base));"}]}