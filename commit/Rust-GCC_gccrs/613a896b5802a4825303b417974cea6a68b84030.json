{"sha": "613a896b5802a4825303b417974cea6a68b84030", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzYTg5NmI1ODAyYTQ4MjUzMDNiNDE3OTc0Y2VhNmE2OGI4NDAzMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2009-04-18T11:47:22Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2009-04-18T11:47:22Z"}, "message": "tree-iterator.c (expr_only): Remove.\n\n\t* tree-iterator.c (expr_only): Remove.\n\t* tree.h: Remove the prototype for expr_only.\n\nFrom-SVN: r146311", "tree": {"sha": "b54d02e1729a75296bb73b1b56e05abe8f1be98e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b54d02e1729a75296bb73b1b56e05abe8f1be98e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/613a896b5802a4825303b417974cea6a68b84030", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613a896b5802a4825303b417974cea6a68b84030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/613a896b5802a4825303b417974cea6a68b84030", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613a896b5802a4825303b417974cea6a68b84030/comments", "author": null, "committer": null, "parents": [{"sha": "579e694c111bf8fec6ceb3485bca23e3372d04bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579e694c111bf8fec6ceb3485bca23e3372d04bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/579e694c111bf8fec6ceb3485bca23e3372d04bf"}], "stats": {"total": 31, "additions": 5, "deletions": 26}, "files": [{"sha": "2ee3685e9d0e50c1d4adee2aa1795263a4439e2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613a896b5802a4825303b417974cea6a68b84030/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613a896b5802a4825303b417974cea6a68b84030/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=613a896b5802a4825303b417974cea6a68b84030", "patch": "@@ -1,3 +1,8 @@\n+2009-04-18  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* tree-iterator.c (expr_only): Remove.\n+\t* tree.h: Remove the prototype for expr_only.\n+\n 2009-04-18  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* reginfo.c (cannot_change_mode_set_regs): Remove."}, {"sha": "43218f6b754a51e63c4831f584b5b9af6effbdc1", "filename": "gcc/tree-iterator.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613a896b5802a4825303b417974cea6a68b84030/gcc%2Ftree-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613a896b5802a4825303b417974cea6a68b84030/gcc%2Ftree-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-iterator.c?ref=613a896b5802a4825303b417974cea6a68b84030", "patch": "@@ -280,29 +280,4 @@ expr_last (tree expr)\n   return expr;\n }\n \n-/* If EXPR is a single statement return it.  If EXPR is a\n-   STATEMENT_LIST containing exactly one statement S, return S.\n-   Otherwise, return NULL.  */\n-\n-tree \n-expr_only (tree expr)\n-{\n-  if (expr == NULL_TREE)\n-    return NULL_TREE;\n-\n-  if (TREE_CODE (expr) == STATEMENT_LIST)\n-    {\n-      struct tree_statement_list_node *n = STATEMENT_LIST_TAIL (expr);\n-      if (n && STATEMENT_LIST_HEAD (expr) == n)\n-\treturn n->stmt;\n-      else\n-\treturn NULL_TREE;\n-    }\n-\n-  if (TREE_CODE (expr) == COMPOUND_EXPR)\n-    return NULL_TREE;\n-\n-  return expr;\n-}\n-\n #include \"gt-tree-iterator.h\""}, {"sha": "a83151dfc2ed7f53dde8d754f6ef0cb22e3a1215", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613a896b5802a4825303b417974cea6a68b84030/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613a896b5802a4825303b417974cea6a68b84030/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=613a896b5802a4825303b417974cea6a68b84030", "patch": "@@ -4261,7 +4261,6 @@ extern tree convert (tree, tree);\n extern unsigned int expr_align (const_tree);\n extern tree expr_first (tree);\n extern tree expr_last (tree);\n-extern tree expr_only (tree);\n extern tree size_in_bytes (const_tree);\n extern HOST_WIDE_INT int_size_in_bytes (const_tree);\n extern HOST_WIDE_INT max_int_size_in_bytes (const_tree);"}]}