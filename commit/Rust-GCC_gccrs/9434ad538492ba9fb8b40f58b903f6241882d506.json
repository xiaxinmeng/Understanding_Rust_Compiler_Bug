{"sha": "9434ad538492ba9fb8b40f58b903f6241882d506", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzNGFkNTM4NDkyYmE5ZmI4YjQwZjU4YjkwM2Y2MjQxODgyZDUwNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2009-04-16T02:04:15Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2009-04-16T02:04:15Z"}, "message": "html: Regenerate, remove un-needed.\n\n2009-04-15  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* doc/html: Regenerate, remove un-needed.\n\nFrom-SVN: r146145", "tree": {"sha": "27fda33f57052d84a422d0f8757bdc89820fd310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27fda33f57052d84a422d0f8757bdc89820fd310"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9434ad538492ba9fb8b40f58b903f6241882d506", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9434ad538492ba9fb8b40f58b903f6241882d506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9434ad538492ba9fb8b40f58b903f6241882d506", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9434ad538492ba9fb8b40f58b903f6241882d506/comments", "author": null, "committer": null, "parents": [{"sha": "26113de4fcd7d569cc72274cd29dc36cfd560267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26113de4fcd7d569cc72274cd29dc36cfd560267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26113de4fcd7d569cc72274cd29dc36cfd560267"}], "stats": {"total": 11913, "additions": 0, "deletions": 11913}, "files": [{"sha": "26f6eb724794f01d6fb119845b83723c16af5599", "filename": "libstdc++-v3/doc/html/manual/bk01apas02.html", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas02.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,91 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Directory Layout and Source Conventions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0Contributing\" /><link rel=\"prev\" href=\"appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0Contributing\" /><link rel=\"next\" href=\"bk01apas03.html\" title=\"Coding Style\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Directory Layout and Source Conventions</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_contributing.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Appendix\u00a0A.\u00a0Contributing</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apas03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"contrib.organization\"></a>Directory Layout and Source Conventions</h2></div></div></div><p>\n-    The unpacked source directory of libstdc++ contains the files\n-    needed to create the GNU C++ Library.\n-  </p><div class=\"literallayout\"><p><br />\n-It\u00a0has\u00a0subdirectories:<br />\n-<br />\n-\u00a0\u00a0doc<br />\n-\u00a0\u00a0\u00a0\u00a0Files\u00a0in\u00a0HTML\u00a0and\u00a0text\u00a0format\u00a0that\u00a0document\u00a0usage,\u00a0quirks\u00a0of\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0implementation,\u00a0and\u00a0contributor\u00a0checklists.<br />\n-<br />\n-\u00a0\u00a0include<br />\n-\u00a0\u00a0\u00a0\u00a0All\u00a0header\u00a0files\u00a0for\u00a0the\u00a0C++\u00a0library\u00a0are\u00a0within\u00a0this\u00a0directory,<br />\n-\u00a0\u00a0\u00a0\u00a0modulo\u00a0specific\u00a0runtime-related\u00a0files\u00a0that\u00a0are\u00a0in\u00a0the\u00a0libsupc++<br />\n-\u00a0\u00a0\u00a0\u00a0directory.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0include/std<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Files\u00a0meant\u00a0to\u00a0be\u00a0found\u00a0by\u00a0#include\u00a0&lt;name&gt;\u00a0directives\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0standard-conforming\u00a0user\u00a0programs.\u00a0\u00a0<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0include/c<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0intended\u00a0to\u00a0directly\u00a0include\u00a0standard\u00a0C\u00a0headers.\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[NB:\u00a0this\u00a0can\u00a0be\u00a0enabled\u00a0via\u00a0--enable-cheaders=c]<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0include/c_global\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0intended\u00a0to\u00a0include\u00a0standard\u00a0C\u00a0headers\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0global\u00a0namespace,\u00a0and\u00a0put\u00a0select\u00a0names\u00a0into\u00a0the\u00a0std::<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace.\u00a0\u00a0[NB:\u00a0this\u00a0is\u00a0the\u00a0default,\u00a0and\u00a0is\u00a0the\u00a0same\u00a0as<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--enable-cheaders=c_global]<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0include/c_std\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0intended\u00a0to\u00a0include\u00a0standard\u00a0C\u00a0headers<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0already\u00a0in\u00a0namespace\u00a0std,\u00a0and\u00a0put\u00a0select\u00a0names\u00a0into\u00a0the\u00a0std::<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace.\u00a0\u00a0[NB:\u00a0this\u00a0is\u00a0the\u00a0same\u00a0as\u00a0--enable-cheaders=c_std]<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0include/bits<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Files\u00a0included\u00a0by\u00a0standard\u00a0headers\u00a0and\u00a0by\u00a0other\u00a0files\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0bits\u00a0directory.\u00a0<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0include/backward<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0provided\u00a0for\u00a0backward\u00a0compatibility,\u00a0such\u00a0as\u00a0&lt;iostream.h&gt;.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0They\u00a0are\u00a0not\u00a0used\u00a0in\u00a0this\u00a0library.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0include/ext<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Headers\u00a0that\u00a0define\u00a0extensions\u00a0to\u00a0the\u00a0standard\u00a0library.\u00a0\u00a0No<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0standard\u00a0header\u00a0refers\u00a0to\u00a0any\u00a0of\u00a0them.<br />\n-<br />\n-\u00a0\u00a0scripts<br />\n-\u00a0\u00a0\u00a0\u00a0Scripts\u00a0that\u00a0are\u00a0used\u00a0during\u00a0the\u00a0configure,\u00a0build,\u00a0make,\u00a0or\u00a0test<br />\n-\u00a0\u00a0\u00a0\u00a0process.<br />\n-<br />\n-\u00a0\u00a0src<br />\n-\u00a0\u00a0\u00a0\u00a0Files\u00a0that\u00a0are\u00a0used\u00a0in\u00a0constructing\u00a0the\u00a0library,\u00a0but\u00a0are\u00a0not<br />\n-\u00a0\u00a0\u00a0\u00a0installed.<br />\n-<br />\n-\u00a0\u00a0testsuites/[backward,\u00a0demangle,\u00a0ext,\u00a0performance,\u00a0thread,\u00a017_*\u00a0to\u00a027_*]<br />\n-\u00a0\u00a0\u00a0\u00a0Test\u00a0programs\u00a0are\u00a0here,\u00a0and\u00a0may\u00a0be\u00a0used\u00a0to\u00a0begin\u00a0to\u00a0exercise\u00a0the\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0library.\u00a0\u00a0Support\u00a0for\u00a0\"make\u00a0check\"\u00a0and\u00a0\"make\u00a0check-install\"\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0complete,\u00a0and\u00a0runs\u00a0through\u00a0all\u00a0the\u00a0subdirectories\u00a0here\u00a0when\u00a0this<br />\n-\u00a0\u00a0\u00a0\u00a0command\u00a0is\u00a0issued\u00a0from\u00a0the\u00a0build\u00a0directory.\u00a0\u00a0Please\u00a0note\u00a0that<br />\n-\u00a0\u00a0\u00a0\u00a0\"make\u00a0check\"\u00a0requires\u00a0DejaGNU\u00a01.4\u00a0or\u00a0later\u00a0to\u00a0be\u00a0installed.\u00a0\u00a0Please<br />\n-\u00a0\u00a0\u00a0\u00a0note\u00a0that\u00a0\"make\u00a0check-script\"\u00a0calls\u00a0the\u00a0script\u00a0mkcheck,\u00a0which<br />\n-\u00a0\u00a0\u00a0\u00a0requires\u00a0bash,\u00a0and\u00a0which\u00a0may\u00a0need\u00a0the\u00a0paths\u00a0to\u00a0bash\u00a0adjusted\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0work\u00a0properly,\u00a0as\u00a0/bin/bash\u00a0is\u00a0assumed.<br />\n-<br />\n-Other\u00a0subdirectories\u00a0contain\u00a0variant\u00a0versions\u00a0of\u00a0certain\u00a0files<br />\n-that\u00a0are\u00a0meant\u00a0to\u00a0be\u00a0copied\u00a0or\u00a0linked\u00a0by\u00a0the\u00a0configure\u00a0script.<br />\n-Currently\u00a0these\u00a0are:<br />\n-<br />\n-\u00a0\u00a0config/abi<br />\n-\u00a0\u00a0config/cpu<br />\n-\u00a0\u00a0config/io<br />\n-\u00a0\u00a0config/locale<br />\n-\u00a0\u00a0config/os<br />\n-<br />\n-In\u00a0addition,\u00a0a\u00a0subdirectory\u00a0holds\u00a0the\u00a0convenience\u00a0library\u00a0libsupc++.<br />\n-<br />\n-\u00a0\u00a0libsupc++<br />\n-\u00a0\u00a0\u00a0\u00a0Contains\u00a0the\u00a0runtime\u00a0library\u00a0for\u00a0C++,\u00a0including\u00a0exception<br />\n-\u00a0\u00a0\u00a0\u00a0handling\u00a0and\u00a0memory\u00a0allocation\u00a0and\u00a0deallocation,\u00a0RTTI,\u00a0terminate<br />\n-\u00a0\u00a0\u00a0\u00a0handlers,\u00a0etc.<br />\n-<br />\n-Note\u00a0that\u00a0glibc\u00a0also\u00a0has\u00a0a\u00a0bits/\u00a0subdirectory.\u00a0\u00a0We\u00a0will\u00a0either<br />\n-need\u00a0to\u00a0be\u00a0careful\u00a0not\u00a0to\u00a0collide\u00a0with\u00a0names\u00a0in\u00a0its\u00a0bits/<br />\n-directory;\u00a0or\u00a0rename\u00a0bits\u00a0to\u00a0(e.g.)\u00a0cppbits/.<br />\n-<br />\n-In\u00a0files\u00a0throughout\u00a0the\u00a0system,\u00a0lines\u00a0marked\u00a0with\u00a0an\u00a0\"XXX\"\u00a0indicate<br />\n-a\u00a0bug\u00a0or\u00a0incompletely-implemented\u00a0feature.\u00a0\u00a0Lines\u00a0marked\u00a0\"XXX\u00a0MT\"<br />\n-indicate\u00a0a\u00a0place\u00a0that\u00a0may\u00a0require\u00a0attention\u00a0for\u00a0multi-thread\u00a0safety.<br />\n-\u00a0\u00a0</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_contributing.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_contributing.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apas03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0A.\u00a0Contributing\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Coding Style</td></tr></table></div></body></html>"}, {"sha": "947c9648912d9d0290423ecdb1b9d620aa48b87c", "filename": "libstdc++-v3/doc/html/manual/bk01apas03.html", "status": "removed", "additions": 0, "deletions": 585, "changes": 585, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas03.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,585 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Coding Style</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0Contributing\" /><link rel=\"prev\" href=\"bk01apas02.html\" title=\"Directory Layout and Source Conventions\" /><link rel=\"next\" href=\"bk01apas04.html\" title=\"Documentation Style\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Coding Style</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apas02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Appendix\u00a0A.\u00a0Contributing</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apas04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"contrib.coding_style\"></a>Coding Style</h2></div></div></div><p>\n-  </p><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"coding_style.bad_identifiers\"></a>Bad Identifiers</h3></div></div></div><p>\n-      Identifiers that conflict and should be avoided.\n-    </p><div class=\"literallayout\"><p><br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0This\u00a0is\u00a0the\u00a0list\u00a0of\u00a0names\u00a0\u201c<span class=\"quote\">reserved\u00a0to\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0implementation</span>\u201d\u00a0that\u00a0have\u00a0been\u00a0claimed\u00a0by\u00a0certain<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compilers\u00a0and\u00a0system\u00a0headers\u00a0of\u00a0interest,\u00a0and\u00a0should\u00a0not\u00a0be\u00a0used<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0in\u00a0the\u00a0library.\u00a0It\u00a0will\u00a0grow,\u00a0of\u00a0course.\u00a0\u00a0We\u00a0generally\u00a0are<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0interested\u00a0in\u00a0names\u00a0that\u00a0are\u00a0not\u00a0all-caps,\u00a0except\u00a0for\u00a0those\u00a0like<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"_T\"<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0For\u00a0Solaris:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_B<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_C<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_L<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_N<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_P<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_U<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_X<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_E1<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0..<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_E24<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Irix\u00a0adds:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_A<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_G<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0MS\u00a0adds:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_T<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0BSD\u00a0adds:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__used<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__unused<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__inline<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_Complex<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__istype<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__maskrune<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__tolower<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__toupper<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__wchar_t<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__wint_t<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_res<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_res_ext<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__tg_*<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SPU\u00a0adds:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__ea<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0For\u00a0GCC:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[Note\u00a0that\u00a0this\u00a0list\u00a0is\u00a0out\u00a0of\u00a0date.\u00a0It\u00a0applies\u00a0to\u00a0the\u00a0old<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name-mangling;\u00a0in\u00a0G++\u00a03.0\u00a0and\u00a0higher\u00a0a\u00a0different\u00a0name-mangling\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0used.\u00a0In\u00a0addition,\u00a0many\u00a0of\u00a0the\u00a0bugs\u00a0relating\u00a0to\u00a0G++\u00a0interpreting<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0these\u00a0names\u00a0as\u00a0operators\u00a0have\u00a0been\u00a0fixed.]<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0The\u00a0full\u00a0set\u00a0of\u00a0__*\u00a0identifiers\u00a0(combined\u00a0from\u00a0gcc/cp/lex.c\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gcc/cplus-dem.c)\u00a0that\u00a0are\u00a0either\u00a0old\u00a0or\u00a0new,\u00a0but\u00a0are\u00a0definitely\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recognized\u00a0by\u00a0the\u00a0demangler,\u00a0is:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__aa<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__aad<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__ad<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__addr<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__adv<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__aer<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__als<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__alshift<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__amd<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__ami<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__aml<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__amu<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__aor<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__apl<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__array<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__ars<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__arshift<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__as<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__bit_and<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__bit_ior<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__bit_not<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__bit_xor<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__call<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__cl<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__cm<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__cn<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__co<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__component<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__compound<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__cond<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__convert<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__delete<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__dl<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__dv<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__eq<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__er<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__ge<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__gt<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__indirect<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__le<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__ls<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__lt<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__max<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__md<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__method_call<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__mi<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__min<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__minus<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__ml<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__mm<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__mn<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__mult<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__mx<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__ne<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__negate<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__new<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__nop<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__nt<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__nw<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__oo<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__op<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__or<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__pl<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__plus<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__postdecrement<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__postincrement<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__pp<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__pt<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__rf<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__rm<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__rs<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__sz<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__trunc_div<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__trunc_mod<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__truth_andif<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__truth_not<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__truth_orif<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__vc<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__vd<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__vn<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SGI\u00a0badnames:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_alloca<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_fsqrt<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_sqrt<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_fabs<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_dabs<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_cast_f2i<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_cast_i2f<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_cast_d2ll<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_cast_ll2d<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_copy_dhi2i<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_copy_i2dhi<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_copy_dlo2i<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__builtin_copy_i2dlo<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__add_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__sub_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__or_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__xor_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__and_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__nand_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__mpy_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__min_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__max_and_fetch<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_add<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_sub<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_or<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_xor<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_and<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_nand<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_mpy<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_min<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__fetch_and_max<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__lock_test_and_set<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__lock_release<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__lock_acquire<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__compare_and_swap<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__synchronize<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__high_multiply<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__unix<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__sgi<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__linux__<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__i386__<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__i486__<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__cplusplus<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__embedded_cplusplus<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0long\u00a0double\u00a0conversion\u00a0members\u00a0mangled\u00a0as\u00a0__opr<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0http://gcc.gnu.org/ml/libstdc++/1999-q4/msg00060.html<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_opr<br />\n-\u00a0\u00a0\u00a0\u00a0</p></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"coding_style.example\"></a>By Example</h3></div></div></div><div class=\"literallayout\"><p><br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0This\u00a0library\u00a0is\u00a0written\u00a0to\u00a0appropriate\u00a0C++\u00a0coding\u00a0standards.\u00a0As\u00a0such,<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it\u00a0is\u00a0intended\u00a0to\u00a0precede\u00a0the\u00a0recommendations\u00a0of\u00a0the\u00a0GNU\u00a0Coding<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Standard,\u00a0which\u00a0can\u00a0be\u00a0referenced\u00a0in\u00a0full\u00a0here:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0http://www.gnu.org/prep/standards/standards.html#Formatting<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0The\u00a0rest\u00a0of\u00a0this\u00a0is\u00a0also\u00a0interesting\u00a0reading,\u00a0but\u00a0skip\u00a0the\u00a0\"Design<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Advice\"\u00a0part.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0The\u00a0GCC\u00a0coding\u00a0conventions\u00a0are\u00a0here,\u00a0and\u00a0are\u00a0also\u00a0useful:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0http://gcc.gnu.org/codingconventions.html<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0In\u00a0addition,\u00a0because\u00a0it\u00a0doesn't\u00a0seem\u00a0to\u00a0be\u00a0stated\u00a0explicitly\u00a0anywhere<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else,\u00a0there\u00a0is\u00a0an\u00a080\u00a0column\u00a0source\u00a0limit.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ChangeLog\u00a0entries\u00a0for\u00a0member\u00a0functions\u00a0should\u00a0use\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0classname::member\u00a0function\u00a0name\u00a0syntax\u00a0as\u00a0follows:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01999-04-15\u00a0\u00a0Dennis\u00a0Ritchie\u00a0\u00a0&lt;dr@att.com&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*\u00a0src/basic_file.cc\u00a0(__basic_file::open):\u00a0Fix\u00a0thinko\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_G_HAVE_IO_FILE_OPEN\u00a0bits.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Notable\u00a0areas\u00a0of\u00a0divergence\u00a0from\u00a0what\u00a0may\u00a0be\u00a0previous\u00a0local\u00a0practice<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(particularly\u00a0for\u00a0GNU\u00a0C)\u00a0include:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a001.\u00a0Pointers\u00a0and\u00a0references<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char*\u00a0p\u00a0=\u00a0\"flop\";<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char&amp;\u00a0c\u00a0=\u00a0*p;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0*p\u00a0=\u00a0\"flop\";\u00a0\u00a0//\u00a0wrong<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0&amp;c\u00a0=\u00a0*p;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0wrong<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0In\u00a0C++,\u00a0definitions\u00a0are\u00a0mixed\u00a0with\u00a0executable\u00a0code.\u00a0Here,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0p\u00a0is\u00a0being\u00a0initialized,\u00a0not\u00a0*p.\u00a0This\u00a0is\u00a0near-universal<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0practice\u00a0among\u00a0C++\u00a0programmers;\u00a0it\u00a0is\u00a0normal\u00a0for\u00a0C\u00a0hackers<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to\u00a0switch\u00a0spontaneously\u00a0as\u00a0they\u00a0gain\u00a0experience.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a002.\u00a0Operator\u00a0names\u00a0and\u00a0parentheses<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0operator==(type)<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0operator\u00a0==\u00a0(type)\u00a0\u00a0//\u00a0wrong<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0The\u00a0==\u00a0is\u00a0part\u00a0of\u00a0the\u00a0function\u00a0name.\u00a0Separating<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it\u00a0makes\u00a0the\u00a0declaration\u00a0look\u00a0like\u00a0an\u00a0expression.\u00a0<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a003.\u00a0Function\u00a0names\u00a0and\u00a0parentheses<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0mangle()<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0mangle\u00a0()\u00a0\u00a0//\u00a0wrong<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0no\u00a0space\u00a0before\u00a0parentheses\u00a0(except\u00a0after\u00a0a\u00a0control-flow<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0keyword)\u00a0is\u00a0near-universal\u00a0practice\u00a0for\u00a0C++.\u00a0It\u00a0identifies\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parentheses\u00a0as\u00a0the\u00a0function-call\u00a0operator\u00a0or\u00a0declarator,\u00a0as\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0opposed\u00a0to\u00a0an\u00a0expression\u00a0or\u00a0other\u00a0overloaded\u00a0use\u00a0of\u00a0parentheses.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a004.\u00a0Template\u00a0function\u00a0indentation<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0T&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template_function(args)<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;class\u00a0T&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0template_function(args)\u00a0{};<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0In\u00a0class\u00a0definitions,\u00a0without\u00a0indentation\u00a0whitespace\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0needed\u00a0both\u00a0above\u00a0and\u00a0below\u00a0the\u00a0declaration\u00a0to\u00a0distinguish<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0it\u00a0visually\u00a0from\u00a0other\u00a0members.\u00a0(Also,\u00a0re:\u00a0\"typename\"<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rather\u00a0than\u00a0\"class\".)\u00a0\u00a0T\u00a0often\u00a0could\u00a0be\u00a0int,\u00a0which\u00a0is\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0not\u00a0a\u00a0class.\u00a0(\"class\",\u00a0here,\u00a0is\u00a0an\u00a0anachronism.)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a005.\u00a0Template\u00a0class\u00a0indentation<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0_CharT,\u00a0typename\u00a0_Traits&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class\u00a0basic_ios\u00a0:\u00a0public\u00a0ios_base<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Types:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;class\u00a0_CharT,\u00a0class\u00a0_Traits&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class\u00a0basic_ios\u00a0:\u00a0public\u00a0ios_base<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Types:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;class\u00a0_CharT,\u00a0class\u00a0_Traits&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class\u00a0basic_ios\u00a0:\u00a0public\u00a0ios_base<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Types:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a006.\u00a0Enumerators<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enum<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0space\u00a0=\u00a0_ISspace,<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print\u00a0=\u00a0_ISprint,<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cntrl\u00a0=\u00a0_IScntrl<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enum\u00a0{\u00a0space\u00a0=\u00a0_ISspace,\u00a0print\u00a0=\u00a0_ISprint,\u00a0cntrl\u00a0=\u00a0_IScntrl\u00a0};<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a007.\u00a0Member\u00a0initialization\u00a0lists<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All\u00a0one\u00a0line,\u00a0separate\u00a0from\u00a0class\u00a0name.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::gribble()\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0_M_private_data(0),\u00a0_M_more_stuff(0),\u00a0_M_helper(0);<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::gribble()\u00a0:\u00a0_M_private_data(0),\u00a0_M_more_stuff(0),\u00a0_M_helper(0);<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0}<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a008.\u00a0Try/Catch\u00a0blocks<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0catch\u00a0(...)<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0catch(...)\u00a0{\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a009.\u00a0Member\u00a0functions\u00a0declarations\u00a0and\u00a0definitions<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Keywords\u00a0such\u00a0as\u00a0extern,\u00a0static,\u00a0export,\u00a0explicit,\u00a0inline,\u00a0etc<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0go\u00a0on\u00a0the\u00a0line\u00a0above\u00a0the\u00a0function\u00a0name.\u00a0Thus<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual\u00a0int\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foo()<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual\u00a0int\u00a0foo()<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0GNU\u00a0coding\u00a0conventions\u00a0dictate\u00a0return\u00a0types\u00a0for\u00a0functions<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0are\u00a0on\u00a0a\u00a0separate\u00a0line\u00a0than\u00a0the\u00a0function\u00a0name\u00a0and\u00a0parameter\u00a0list<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for\u00a0definitions.\u00a0For\u00a0C++,\u00a0where\u00a0we\u00a0have\u00a0member\u00a0functions\u00a0that\u00a0can<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0be\u00a0either\u00a0inline\u00a0definitions\u00a0or\u00a0declarations,\u00a0keeping\u00a0to\u00a0this<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0standard\u00a0allows\u00a0all\u00a0member\u00a0function\u00a0names\u00a0for\u00a0a\u00a0given\u00a0class\u00a0to\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0aligned\u00a0to\u00a0the\u00a0same\u00a0margin,\u00a0increasing\u00a0readability.<br />\n-<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a010.\u00a0Invocation\u00a0of\u00a0member\u00a0functions\u00a0with\u00a0\"this-&gt;\"<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0For\u00a0non-uglified\u00a0names,\u00a0use\u00a0this-&gt;name\u00a0to\u00a0call\u00a0the\u00a0function.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this-&gt;sync()<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sync()<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0Koenig\u00a0lookup.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a011.\u00a0Namespaces<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace\u00a0std<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0blah\u00a0blah\u00a0blah;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0//\u00a0namespace\u00a0std<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace\u00a0std\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0blah\u00a0blah\u00a0blah;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0//\u00a0namespace\u00a0std<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a012.\u00a0Spacing\u00a0under\u00a0protected\u00a0and\u00a0private\u00a0in\u00a0class\u00a0declarations:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0space\u00a0above,\u00a0none\u00a0below<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i.e.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0foo;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0foo;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a013.\u00a0Spacing\u00a0WRT\u00a0return\u00a0statements.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0no\u00a0extra\u00a0spacing\u00a0before\u00a0returns,\u00a0no\u00a0parenthesis<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i.e.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0__ret;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0__ret;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-NOT-<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(__ret);<br />\n-<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a014.\u00a0Location\u00a0of\u00a0global\u00a0variables.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All\u00a0global\u00a0variables\u00a0of\u00a0class\u00a0type,\u00a0whether\u00a0in\u00a0the\u00a0\"user\u00a0visible\"<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0space\u00a0(e.g.,\u00a0cin)\u00a0or\u00a0the\u00a0implementation\u00a0namespace,\u00a0must\u00a0be\u00a0defined<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0as\u00a0a\u00a0character\u00a0array\u00a0with\u00a0the\u00a0appropriate\u00a0alignment\u00a0and\u00a0then\u00a0later<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0re-initialized\u00a0to\u00a0the\u00a0correct\u00a0value.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0This\u00a0is\u00a0due\u00a0to\u00a0startup\u00a0issues\u00a0on\u00a0certain\u00a0platforms,\u00a0such\u00a0as\u00a0AIX.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0For\u00a0more\u00a0explanation\u00a0and\u00a0examples,\u00a0see\u00a0src/globals.cc.\u00a0All\u00a0such<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0variables\u00a0should\u00a0be\u00a0contained\u00a0in\u00a0that\u00a0file,\u00a0for\u00a0simplicity.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a015.\u00a0Exception\u00a0abstractions<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Use\u00a0the\u00a0exception\u00a0abstractions\u00a0found\u00a0in\u00a0functexcept.h,\u00a0which\u00a0allow<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C++\u00a0programmers\u00a0to\u00a0use\u00a0this\u00a0library\u00a0with\u00a0-fno-exceptions.\u00a0(Even\u00a0if<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0that\u00a0is\u00a0rarely\u00a0advisable,\u00a0it's\u00a0a\u00a0necessary\u00a0evil\u00a0for\u00a0backwards<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0compatibility.)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a016.\u00a0Exception\u00a0error\u00a0messages<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All\u00a0start\u00a0with\u00a0the\u00a0name\u00a0of\u00a0the\u00a0function\u00a0where\u00a0the\u00a0exception\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0thrown,\u00a0and\u00a0then\u00a0(optional)\u00a0descriptive\u00a0text\u00a0is\u00a0added.\u00a0Example:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0__throw_logic_error(__N(\"basic_string::_S_construct\u00a0NULL\u00a0not\u00a0valid\"));<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Reason:\u00a0The\u00a0verbose\u00a0terminate\u00a0handler\u00a0prints\u00a0out\u00a0exception::what(),<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0as\u00a0well\u00a0as\u00a0the\u00a0typeinfo\u00a0for\u00a0the\u00a0thrown\u00a0exception.\u00a0As\u00a0this\u00a0is\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0default\u00a0terminate\u00a0handler,\u00a0by\u00a0putting\u00a0location\u00a0info\u00a0into\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0exception\u00a0string,\u00a0a\u00a0very\u00a0useful\u00a0error\u00a0message\u00a0is\u00a0printed\u00a0out\u00a0for<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0uncaught\u00a0exceptions.\u00a0So\u00a0useful,\u00a0in\u00a0fact,\u00a0that\u00a0non-programmers\u00a0can<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0give\u00a0useful\u00a0error\u00a0messages,\u00a0and\u00a0programmers\u00a0can\u00a0intelligently<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0speculate\u00a0what\u00a0went\u00a0wrong\u00a0without\u00a0even\u00a0using\u00a0a\u00a0debugger.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a017.\u00a0The\u00a0doxygen\u00a0style\u00a0guide\u00a0to\u00a0comments\u00a0is\u00a0a\u00a0separate\u00a0document,<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0see\u00a0index.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0The\u00a0library\u00a0currently\u00a0has\u00a0a\u00a0mixture\u00a0of\u00a0GNU-C\u00a0and\u00a0modern\u00a0C++\u00a0coding<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0styles.\u00a0The\u00a0GNU\u00a0C\u00a0usages\u00a0will\u00a0be\u00a0combed\u00a0out\u00a0gradually.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Name\u00a0patterns:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0For\u00a0nonstandard\u00a0names\u00a0appearing\u00a0in\u00a0Standard\u00a0headers,\u00a0we\u00a0are\u00a0constrained\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to\u00a0use\u00a0names\u00a0that\u00a0begin\u00a0with\u00a0underscores.\u00a0This\u00a0is\u00a0called\u00a0\"uglification\".<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0The\u00a0convention\u00a0is:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Local\u00a0and\u00a0argument\u00a0names:\u00a0\u00a0__[a-z].*<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0\u00a0__count\u00a0\u00a0__ix\u00a0\u00a0__s1\u00a0\u00a0<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Type\u00a0names\u00a0and\u00a0template\u00a0formal-argument\u00a0names:\u00a0_[A-Z][^_].*<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0\u00a0_Helper\u00a0\u00a0_CharT\u00a0\u00a0_N\u00a0<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Member\u00a0data\u00a0and\u00a0function\u00a0names:\u00a0_M_.*<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0\u00a0_M_num_elements\u00a0\u00a0_M_initialize\u00a0()<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Static\u00a0data\u00a0members,\u00a0constants,\u00a0and\u00a0enumerations:\u00a0_S_.*<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Examples:\u00a0_S_max_elements\u00a0\u00a0_S_default_value<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Don't\u00a0use\u00a0names\u00a0in\u00a0the\u00a0same\u00a0scope\u00a0that\u00a0differ\u00a0only\u00a0in\u00a0the\u00a0prefix,\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0e.g.\u00a0_S_top\u00a0and\u00a0_M_top.\u00a0See\u00a0BADNAMES\u00a0for\u00a0a\u00a0list\u00a0of\u00a0forbidden\u00a0names.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(The\u00a0most\u00a0tempting\u00a0of\u00a0these\u00a0seem\u00a0to\u00a0be\u00a0and\u00a0\"_T\"\u00a0and\u00a0\"__sz\".)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Names\u00a0must\u00a0never\u00a0have\u00a0\"__\"\u00a0internally;\u00a0it\u00a0would\u00a0confuse\u00a0name<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unmanglers\u00a0on\u00a0some\u00a0targets.\u00a0Also,\u00a0never\u00a0use\u00a0\"__[0-9]\",\u00a0same\u00a0reason.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--------------------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[BY\u00a0EXAMPLE]<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#ifndef\u00a0\u00a0_HEADER_<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#define\u00a0\u00a0_HEADER_\u00a01<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace\u00a0std<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class\u00a0gribble<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble()\u00a0throw();<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble(const\u00a0gribble&amp;);<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0explicit\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble(int\u00a0__howmany);<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble&amp;\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0operator=(const\u00a0gribble&amp;);<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0virtual\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0~gribble()\u00a0throw\u00a0();<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Start\u00a0with\u00a0a\u00a0capital\u00a0letter,\u00a0end\u00a0with\u00a0a\u00a0period.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0void\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public_member(const\u00a0char*\u00a0__arg)\u00a0const;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0In-class\u00a0function\u00a0definitions\u00a0should\u00a0be\u00a0restricted\u00a0to\u00a0one-liners.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0one_line()\u00a0{\u00a0return\u00a00\u00a0}<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0two_lines(const\u00a0char*\u00a0arg)\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0return\u00a0strchr(arg,\u00a0'a');\u00a0}<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0int\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0three_lines();\u00a0\u00a0//\u00a0inline,\u00a0but\u00a0defined\u00a0below.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Note\u00a0indentation.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0_Formal_argument&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public_template()\u00a0const\u00a0throw();<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0_Iterator&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0other_template();<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class\u00a0_Helper;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0_M_private_data;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0_M_more_stuff;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_Helper*\u00a0_M_helper;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0_M_private_function();<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0enum\u00a0_Enum\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S_one,\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S_two\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static\u00a0void\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_S_initialize_library();<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0More-or-less-standard\u00a0language\u00a0features\u00a0described\u00a0by\u00a0lack,\u00a0not\u00a0presence.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#\u00a0ifndef\u00a0_G_NO_LONGLONG<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0extern\u00a0long\u00a0long\u00a0_G_global_with_a_good_long_name;\u00a0\u00a0//\u00a0avoid\u00a0globals!<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#\u00a0endif<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Avoid\u00a0in-class\u00a0inline\u00a0definitions,\u00a0define\u00a0separately;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0likewise\u00a0for\u00a0member\u00a0class\u00a0definitions:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0int<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::public_member()\u00a0const<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0int\u00a0__local\u00a0=\u00a00;\u00a0return\u00a0__local;\u00a0}<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class\u00a0gribble::_Helper<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0_M_stuff;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0friend\u00a0class\u00a0gribble;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Names\u00a0beginning\u00a0with\u00a0\"__\":\u00a0only\u00a0for\u00a0arguments\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0\u00a0\u00a0local\u00a0variables;\u00a0never\u00a0use\u00a0\"__\"\u00a0in\u00a0a\u00a0type\u00a0name,\u00a0or<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0\u00a0\u00a0within\u00a0any\u00a0name;\u00a0never\u00a0use\u00a0\"__[0-9]\".<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#endif\u00a0/*\u00a0_HEADER_\u00a0*/<br />\n-<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0namespace\u00a0std\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0template&lt;typename\u00a0T&gt;\u00a0\u00a0//\u00a0notice:\u00a0\"typename\",\u00a0not\u00a0\"class\",\u00a0no\u00a0space<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0long_return_value_type&lt;with_many,\u00a0args&gt;\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0function_name(char*\u00a0pointer,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0\"char\u00a0*pointer\"\u00a0is\u00a0wrong.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char*\u00a0argument,\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const\u00a0Reference&amp;\u00a0ref)<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0int\u00a0a_local;\u00a0\u00a0/*\u00a0wrong;\u00a0see\u00a0below.\u00a0*/<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(test)\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0nested\u00a0code\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0a_local\u00a0=\u00a00;\u00a0\u00a0//\u00a0declare\u00a0variable\u00a0at\u00a0first\u00a0use.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0\u00a0char\u00a0a,\u00a0b,\u00a0*p;\u00a0\u00a0\u00a0/*\u00a0wrong\u00a0*/<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0a\u00a0=\u00a0'a';<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0b\u00a0=\u00a0a\u00a0+\u00a01;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char*\u00a0c\u00a0=\u00a0\"abc\";\u00a0\u00a0//\u00a0each\u00a0variable\u00a0goes\u00a0on\u00a0its\u00a0own\u00a0line,\u00a0always.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0except\u00a0maybe\u00a0here...<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for\u00a0(unsigned\u00a0i\u00a0=\u00a00,\u00a0mask\u00a0=\u00a01;\u00a0mask;\u00a0++i,\u00a0mask\u00a0&lt;&lt;=\u00a01)\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0...<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::gribble()<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0_M_private_data(0),\u00a0_M_more_stuff(0),\u00a0_M_helper(0);<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0}<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inline\u00a0int\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0gribble::three_lines()<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0doesn't\u00a0fit\u00a0in\u00a0one\u00a0line.<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0//\u00a0namespace\u00a0std<br />\n-\u00a0\u00a0\u00a0\u00a0</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apas02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_contributing.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apas04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Directory Layout and Source Conventions\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Documentation Style</td></tr></table></div></body></html>"}, {"sha": "09a6f978d54d09366763b64327e905a5e7035d7b", "filename": "libstdc++-v3/doc/html/manual/bk01apas04.html", "status": "removed", "additions": 0, "deletions": 227, "changes": 227, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas04.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas04.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas04.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,227 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Documentation Style</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0Contributing\" /><link rel=\"prev\" href=\"bk01apas03.html\" title=\"Coding Style\" /><link rel=\"next\" href=\"bk01apas05.html\" title=\"Design Notes\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Documentation Style</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apas03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Appendix\u00a0A.\u00a0Contributing</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apas05.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"contrib.doc_style\"></a>Documentation Style</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"doc_style.doxygen\"></a>Doxygen</h3></div></div></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"doxygen.prereq\"></a>Prerequisites</h4></div></div></div><p>\n-\tPrerequisite tools are Bash 2.x,\n-\t<a class=\"ulink\" href=\"http://www.doxygen.org/\" target=\"_top\">Doxygen</a>, and\n-\tthe <a class=\"ulink\" href=\"http://www.gnu.org/software/coreutils/\" target=\"_top\">GNU\n-\tcoreutils</a>. (GNU versions of find, xargs, and possibly\n-\tsed and grep are used, just because the GNU versions make\n-\tthings very easy.)\n-      </p><p>\n-\tTo generate the pretty pictures and hierarchy\n-\tgraphs, the\n-\t<a class=\"ulink\" href=\"http://www.research.att.com/sw/tools/graphviz/download.html\" target=\"_top\">Graphviz</a>\n-\tpackage will need to be installed. \n-      </p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"doxygen.rules\"></a>Generating the Doxygen Files</h4></div></div></div><p>\n-\tThe following Makefile rules run Doxygen to generate HTML\n-\tdocs, XML docs, and the man pages.\n-      </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-html-doxygen</code></strong></pre><p>\n-      </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-xml-doxygen</code></strong></pre><p>\n-      </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-man-doxygen</code></strong></pre><p>\n-      </p><p>\n-\tCareful observers will see that the Makefile rules simply call\n-\ta script from the source tree, <code class=\"filename\">run_doxygen</code>, which\n-\tdoes the actual work of running Doxygen and then (most\n-\timportantly) massaging the output files. If for some reason\n-\tyou prefer to not go through the Makefile, you can call this\n-\tscript directly. (Start by passing <code class=\"literal\">--help</code>.)\n-      </p><p>\n-\tIf you wish to tweak the Doxygen settings, do so by editing\n-\t<code class=\"filename\">doc/doxygen/user.cfg.in</code>. Notes to fellow\n-\tlibrary hackers are written in triple-# comments.\n-      </p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"doxygen.markup\"></a>Markup</h4></div></div></div><p>\n-\tIn general, libstdc++ files should be formatted according to\n-\tthe rules found in the\n-\t<a class=\"link\" href=\"bk01apas03.html\" title=\"Coding Style\">Coding Standard</a>. Before\n-\tany doxygen-specific formatting tweaks are made, please try to\n-\tmake sure that the initial formatting is sound.\n-      </p><p>\n-\tAdding Doxygen markup to a file (informally called\n-\t\u201c<span class=\"quote\">doxygenating</span>\u201d) is very simple. The Doxygen manual can be\n-\tfound\n-\t<a class=\"ulink\" href=\"http://www.stack.nl/~dimitri/doxygen/download.html#latestman\" target=\"_top\">here</a>.\n-\tWe try to use a very-recent version of Doxygen.\n-      </p><p>\n-\tFor classes, use\n-\t<code class=\"classname\">deque</code>/<code class=\"classname\">vector</code>/<code class=\"classname\">list</code>\n-\tand <code class=\"classname\">std::pair</code> as examples.  For\n-\tfunctions, see their member functions, and the free functions\n-\tin <code class=\"filename\">stl_algobase.h</code>. Member functions of\n-\tother container-like types should read similarly to these\n-\tmember functions.\n-      </p><p>\n-\tThese points accompany the first list in section 3.1 of the\n-\tDoxygen manual:\n-      </p><div class=\"orderedlist\"><ol type=\"1\"><li><p>Use the Javadoc style...</p></li><li><p>\n-\t    ...not the Qt style. The intermediate *'s are preferred.\n-\t  </p></li><li><p>\n-\t    Use the triple-slash style only for one-line comments (the\n-\t    \u201c<span class=\"quote\">brief</span>\u201d mode).  Very recent versions of Doxygen permit\n-\t    full-mode comments in triple-slash blocks, but the\n-\t    formatting still comes out wonky.\n-\t  </p></li><li><p>\n-\t    This is disgusting. Don't do this.\n-\t  </p></li></ol></div><p>\n-\tUse the @-style of commands, not the !-style. Please be\n-\tcareful about whitespace in your markup comments. Most of the\n-\ttime it doesn't matter; doxygen absorbs most whitespace, and\n-\tboth HTML and *roff are agnostic about whitespace. However,\n-\tin &lt;pre&gt; blocks and @code/@endcode sections, spacing can\n-\thave \u201c<span class=\"quote\">interesting</span>\u201d effects.\n-      </p><p>\n-\tUse either kind of grouping, as\n-\tappropriate. <code class=\"filename\">doxygroups.cc</code> exists for this\n-\tpurpose. See <code class=\"filename\">stl_iterator.h</code> for a good example\n-\tof the \u201c<span class=\"quote\">other</span>\u201d kind of grouping.\n-      </p><p>\n-\tPlease use markup tags like @p and @a when referring to things\n-\tsuch as the names of function parameters. Use @e for emphasis\n-\twhen necessary. Use @c to refer to other standard names.\n-\t(Examples of all these abound in the present code.)\n-      </p></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"doc_style.docbook\"></a>Docbook</h3></div></div></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.prereq\"></a>Prerequisites</h4></div></div></div><p>\n-\tEditing the DocBook sources requires an XML editor. Many\n-\texist: some notable options\n-\tinclude <span class=\"command\"><strong>emacs</strong></span>, <span class=\"application\">Kate</span>,\n-\tor <span class=\"application\">Conglomerate</span>.\n-      </p><p>\n-\tSome editors support special \u201c<span class=\"quote\">XML Validation</span>\u201d\n-\tmodes that can validate the file as it is\n-\tproduced. Recommended is the <span class=\"command\"><strong>nXML Mode</strong></span>\n-\tfor <span class=\"command\"><strong>emacs</strong></span>.\n-      </p><p>\n-\tBesides an editor, additional DocBook files and XML tools are\n-\talso required.\n-      </p><p>\n-\tAccess to the DocBook stylesheets and DTD is required. The\n-\tstylesheets are usually packaged by vendor, in something\n-\tlike <code class=\"filename\">docbook-style-xsl</code>. To exactly match\n-\tgenerated output, please use a version of the stylesheets\n-\tequivalent\n-\tto <code class=\"filename\">docbook-style-xsl-1.74.0-5</code>. The\n-\tinstallation directory for this package corresponds to\n-\tthe <code class=\"literal\">XSL_STYLE_DIR</code>\n-\tin <code class=\"filename\">doc/Makefile.am</code> and defaults\n-\tto <code class=\"filename\">/usr/share/sgml/docbook/xsl-stylesheets</code>.\n-      </p><p>\n-\tFor processing XML, an XML processor and some style\n-\tsheets are necessary. Defaults are <span class=\"command\"><strong>xsltproc</strong></span>\n-\tprovided by <code class=\"filename\">libxslt</code>.\n-      </p><p>\n-\tFor validating the XML document, you'll need\n-\tsomething like <span class=\"command\"><strong>xmllint</strong></span> and access to the\n-\tDocBook DTD. These are provided\n-\tby a vendor package like <code class=\"filename\">lixml2</code>.\n-      </p><p>\n-\tFor PDF output, something that transforms valid XML to PDF is\n-\trequired. Possible solutions include <span class=\"command\"><strong>xmlto</strong></span>,\n-\t<a class=\"ulink\" href=\"http://xmlgraphics.apache.org/fop/\" target=\"_top\">Apache\n-\tFOP</a>, or <span class=\"command\"><strong>prince</strong></span>. Other options are\n-\tlisted on the DocBook web <a class=\"ulink\" href=\"http://wiki.docbook.org/topic/DocBookPublishingTools\" target=\"_top\">pages</a>. Please\n-\tconsult the <code class=\"email\">&lt;<a class=\"email\" href=\"mailto:libstdc++@gcc.gnu.org\">libstdc++@gcc.gnu.org</a>&gt;</code> list when\n-\tpreparing printed manuals for current best practice and suggestions.\n-      </p><p>\n-\tMake sure that the XML documentation and markup is valid for\n-\tany change. This can be done easily, with the validation rules\n-\tin the <code class=\"filename\">Makefile</code>, which is equivalent to doing: \n-      </p><pre class=\"screen\">\n-\t  <strong class=\"userinput\"><code>\n-xmllint --noout --valid <code class=\"filename\">xml/index.xml</code>\n-\t  </code></strong>\n-\t</pre></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.rules\"></a>Generating the DocBook Files</h4></div></div></div><p>\n-\tThe following Makefile rules generate (in order): an HTML\n-\tversion of all the documentation, a PDF version of the same, a\n-\tsingle XML document, and the result of validating the entire XML\n-\tdocument.\n-      </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-html</code></strong></pre><p>\n-      </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-pdf</code></strong></pre><p>\n-      </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-xml-single</code></strong></pre><p>\n-      </p><p>\n-      </p><pre class=\"screen\"><strong class=\"userinput\"><code>make doc-xml-validate</code></strong></pre><p>\n-      </p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.examples\"></a>File Organization and Basics</h4></div></div></div><div class=\"literallayout\"><p><br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span class=\"emphasis\"><em>Which\u00a0files\u00a0are\u00a0important</em></span><br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All\u00a0Docbook\u00a0files\u00a0are\u00a0in\u00a0the\u00a0directory<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libstdc++-v3/doc/xml<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Inside\u00a0this\u00a0directory,\u00a0the\u00a0files\u00a0of\u00a0importance:<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0spine.xml\u00a0\u00a0\t-\u00a0index\u00a0to\u00a0documentation\u00a0set<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0manual/spine.xml\u00a0\u00a0-\u00a0index\u00a0to\u00a0manual<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0manual/*.xml\u00a0\u00a0\t-\u00a0individual\u00a0chapters\u00a0and\u00a0sections\u00a0of\u00a0the\u00a0manual<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0faq.xml\u00a0\u00a0\t\t-\u00a0index\u00a0to\u00a0FAQ<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0api.xml\u00a0\u00a0\t\t-\u00a0index\u00a0to\u00a0source\u00a0level\u00a0/\u00a0API\u00a0<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All\u00a0*.txml\u00a0files\u00a0are\u00a0template\u00a0xml\u00a0files,\u00a0i.e.,\u00a0otherwise\u00a0empty\u00a0files\u00a0with<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0correct\u00a0structure,\u00a0suitable\u00a0for\u00a0filling\u00a0in\u00a0with\u00a0new\u00a0information.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span class=\"emphasis\"><em>Canonical\u00a0Writing\u00a0Style</em></span><br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class\u00a0template<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0function\u00a0template<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0member\u00a0function\u00a0template<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(via\u00a0C++\u00a0Templates,\u00a0Vandevoorde)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0class\u00a0in\u00a0namespace\u00a0std:\u00a0allocator,\u00a0not\u00a0std::allocator<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0header\u00a0file:\u00a0iostream,\u00a0not\u00a0&lt;iostream&gt;<br />\n-<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<span class=\"emphasis\"><em>General\u00a0structure</em></span><br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;set&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;book&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/book&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;book&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;chapter&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/chapter&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/book&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;book&gt;\t<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;part&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;chapter&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;section&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/section&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;sect1&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/sect1&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;sect1&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;sect2&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/sect2&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/sect1&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/chapter&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;chapter&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/chapter&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/part&gt;\u00a0\u00a0<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/book&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0&lt;/set&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0</p></div></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"docbook.markup\"></a>Markup By Example</h4></div></div></div><p>\n-Complete details on Docbook markup can be found in the DocBook Element\n-Reference, <a class=\"ulink\" href=\"http://www.docbook.org/tdg/en/html/part2.html\" target=\"_top\">online</a>. An\n-incomplete reference for HTML to Docbook conversion is detailed in the\n-table below.\n-</p><div class=\"table\"><a id=\"id552441\"></a><p class=\"title\"><b>Table\u00a0A.1.\u00a0HTML to Docbook XML markup comparison</b></p><div class=\"table-contents\"><table summary=\"HTML to Docbook XML markup comparison\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">HTML</th><th align=\"left\">XML</th></tr></thead><tbody><tr><td align=\"left\">&lt;p&gt;</td><td align=\"left\">&lt;para&gt;</td></tr><tr><td align=\"left\">&lt;pre&gt;</td><td align=\"left\">&lt;computeroutput&gt;, &lt;programlisting&gt;, \n-\t&lt;literallayout&gt;</td></tr><tr><td align=\"left\">&lt;ul&gt;</td><td align=\"left\">&lt;itemizedlist&gt;</td></tr><tr><td align=\"left\">&lt;ol&gt;</td><td align=\"left\">&lt;orderedlist&gt;</td></tr><tr><td align=\"left\">&lt;il&gt;</td><td align=\"left\">&lt;listitem&gt;</td></tr><tr><td align=\"left\">&lt;dl&gt;</td><td align=\"left\">&lt;variablelist&gt;</td></tr><tr><td align=\"left\">&lt;dt&gt;</td><td align=\"left\">&lt;term&gt;</td></tr><tr><td align=\"left\">&lt;dd&gt;</td><td align=\"left\">&lt;listitem&gt;</td></tr><tr><td align=\"left\">&lt;a href=\"\"&gt;</td><td align=\"left\">&lt;ulink url=\"\"&gt;</td></tr><tr><td align=\"left\">&lt;code&gt;</td><td align=\"left\">&lt;literal&gt;, &lt;programlisting&gt;</td></tr><tr><td align=\"left\">&lt;strong&gt;</td><td align=\"left\">&lt;emphasis&gt;</td></tr><tr><td align=\"left\">&lt;em&gt;</td><td align=\"left\">&lt;emphasis&gt;</td></tr><tr><td align=\"left\">\"</td><td align=\"left\">&lt;quote&gt;</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n-  And examples of detailed markup for which there are no real HTML\n-  equivalents are listed in the table below.\n-</p><div class=\"table\"><a id=\"id554436\"></a><p class=\"title\"><b>Table\u00a0A.2.\u00a0Docbook XML Element Use</b></p><div class=\"table-contents\"><table summary=\"Docbook XML Element Use\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><thead><tr><th align=\"left\">Element</th><th align=\"left\">Use</th></tr></thead><tbody><tr><td align=\"left\">&lt;structname&gt;</td><td align=\"left\">&lt;structname&gt;char_traits&lt;/structname&gt;</td></tr><tr><td align=\"left\">&lt;classname&gt;</td><td align=\"left\">&lt;classname&gt;string&lt;/classname&gt;</td></tr><tr><td align=\"left\">&lt;function&gt;</td><td align=\"left\">\n-\t<p>&lt;function&gt;clear()&lt;/function&gt;</p>\n-\t<p>&lt;function&gt;fs.clear()&lt;/function&gt;</p>\n-      </td></tr><tr><td align=\"left\">&lt;type&gt;</td><td align=\"left\">&lt;type&gt;long long&lt;/type&gt;</td></tr><tr><td align=\"left\">&lt;varname&gt;</td><td align=\"left\">&lt;varname&gt;fs&lt;/varname&gt;</td></tr><tr><td align=\"left\">&lt;literal&gt;</td><td align=\"left\">\n-\t<p>&lt;literal&gt;-Weffc++&lt;/literal&gt;</p>\n-\t<p>&lt;literal&gt;rel_ops&lt;/literal&gt;</p>\n-      </td></tr><tr><td align=\"left\">&lt;constant&gt;</td><td align=\"left\">\n-\t<p>&lt;constant&gt;_GNU_SOURCE&lt;/constant&gt;</p>\n-\t<p>&lt;constant&gt;3.0&lt;/constant&gt;</p>\n-      </td></tr><tr><td align=\"left\">&lt;command&gt;</td><td align=\"left\">&lt;command&gt;g++&lt;/command&gt;</td></tr><tr><td align=\"left\">&lt;errortext&gt;</td><td align=\"left\">&lt;errortext&gt;In instantiation of&lt;/errortext&gt;</td></tr><tr><td align=\"left\">&lt;filename&gt;</td><td align=\"left\">\n-\t<p>&lt;filename class=\"headerfile\"&gt;ctype.h&lt;/filename&gt;</p>\n-\t<p>&lt;filename class=\"directory\"&gt;/home/gcc/build&lt;/filename&gt;</p>\n-      </td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apas03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_contributing.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apas05.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Coding Style\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Design Notes</td></tr></table></div></body></html>"}, {"sha": "635b39cde7c87bf4552e6ea7ab519b0845df8a11", "filename": "libstdc++-v3/doc/html/manual/bk01apas05.html", "status": "removed", "additions": 0, "deletions": 857, "changes": 857, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas05.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas05.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apas05.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,857 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Design Notes</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"appendix_contributing.html\" title=\"Appendix\u00a0A.\u00a0Contributing\" /><link rel=\"prev\" href=\"bk01apas04.html\" title=\"Documentation Style\" /><link rel=\"next\" href=\"appendix_porting.html\" title=\"Appendix\u00a0B.\u00a0Porting and Maintenance\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Design Notes</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apas04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Appendix\u00a0A.\u00a0Contributing</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_porting.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"contrib.design_notes\"></a>Design Notes</h2></div></div></div><p>\n-  </p><div class=\"literallayout\"><p><br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0Library<br />\n-\u00a0\u00a0\u00a0\u00a0-----------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0This\u00a0paper\u00a0is\u00a0covers\u00a0two\u00a0major\u00a0areas:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0Features\u00a0and\u00a0policies\u00a0not\u00a0mentioned\u00a0in\u00a0the\u00a0standard\u00a0that<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0quality\u00a0of\u00a0the\u00a0library\u00a0implementation\u00a0depends\u00a0on,\u00a0including<br />\n-\u00a0\u00a0\u00a0\u00a0extensions\u00a0and\u00a0\"implementation-defined\"\u00a0features;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0Plans\u00a0for\u00a0required\u00a0but\u00a0unimplemented\u00a0library\u00a0features\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0optimizations\u00a0to\u00a0them.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Overhead<br />\n-\u00a0\u00a0\u00a0\u00a0--------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0standard\u00a0defines\u00a0a\u00a0large\u00a0library,\u00a0much\u00a0larger\u00a0than\u00a0the\u00a0standard<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0library.\u00a0A\u00a0naive\u00a0implementation\u00a0would\u00a0suffer\u00a0substantial\u00a0overhead<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0compile\u00a0time,\u00a0executable\u00a0size,\u00a0and\u00a0speed,\u00a0rendering\u00a0it\u00a0unusable<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0many\u00a0(particularly\u00a0embedded)\u00a0applications.\u00a0The\u00a0alternative\u00a0demands<br />\n-\u00a0\u00a0\u00a0\u00a0care\u00a0in\u00a0construction,\u00a0and\u00a0some\u00a0compiler\u00a0support,\u00a0but\u00a0there\u00a0is\u00a0no<br />\n-\u00a0\u00a0\u00a0\u00a0need\u00a0for\u00a0library\u00a0subsets.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0What\u00a0are\u00a0the\u00a0sources\u00a0of\u00a0this\u00a0overhead?\u00a0\u00a0There\u00a0are\u00a0four\u00a0main\u00a0causes:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0The\u00a0library\u00a0is\u00a0specified\u00a0almost\u00a0entirely\u00a0as\u00a0templates,\u00a0which<br />\n-\u00a0\u00a0\u00a0\u00a0with\u00a0current\u00a0compilers\u00a0must\u00a0be\u00a0included\u00a0in-line,\u00a0resulting\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0very\u00a0slow\u00a0builds\u00a0as\u00a0tens\u00a0or\u00a0hundreds\u00a0of\u00a0thousands\u00a0of\u00a0lines<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0function\u00a0definitions\u00a0are\u00a0read\u00a0for\u00a0each\u00a0user\u00a0source\u00a0file.<br />\n-\u00a0\u00a0\u00a0\u00a0Indeed,\u00a0the\u00a0entire\u00a0SGI\u00a0STL,\u00a0as\u00a0well\u00a0as\u00a0the\u00a0dos\u00a0Reis\u00a0valarray,<br />\n-\u00a0\u00a0\u00a0\u00a0are\u00a0provided\u00a0purely\u00a0as\u00a0header\u00a0files,\u00a0largely\u00a0for\u00a0simplicity\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0porting.\u00a0Iostream/locale\u00a0is\u00a0(or\u00a0will\u00a0be)\u00a0as\u00a0large\u00a0again.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0The\u00a0library\u00a0is\u00a0very\u00a0flexible,\u00a0specifying\u00a0a\u00a0multitude\u00a0of\u00a0hooks<br />\n-\u00a0\u00a0\u00a0\u00a0where\u00a0users\u00a0can\u00a0insert\u00a0their\u00a0own\u00a0code\u00a0in\u00a0place\u00a0of\u00a0defaults.<br />\n-\u00a0\u00a0\u00a0\u00a0When\u00a0these\u00a0hooks\u00a0are\u00a0not\u00a0used,\u00a0any\u00a0time\u00a0and\u00a0code\u00a0expended\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0support\u00a0that\u00a0flexibility\u00a0is\u00a0wasted.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0Templates\u00a0are\u00a0often\u00a0described\u00a0as\u00a0causing\u00a0to\u00a0\"code\u00a0bloat\".\u00a0In<br />\n-\u00a0\u00a0\u00a0\u00a0practice,\u00a0this\u00a0refers\u00a0(when\u00a0it\u00a0refers\u00a0to\u00a0anything\u00a0real)\u00a0to\u00a0several<br />\n-\u00a0\u00a0\u00a0\u00a0independent\u00a0processes.\u00a0First,\u00a0when\u00a0a\u00a0class\u00a0template\u00a0is\u00a0manually<br />\n-\u00a0\u00a0\u00a0\u00a0instantiated\u00a0in\u00a0its\u00a0entirely,\u00a0current\u00a0compilers\u00a0place\u00a0the\u00a0definitions<br />\n-\u00a0\u00a0\u00a0\u00a0for\u00a0all\u00a0members\u00a0in\u00a0a\u00a0single\u00a0object\u00a0file,\u00a0so\u00a0that\u00a0a\u00a0program\u00a0linking<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0one\u00a0member\u00a0gets\u00a0definitions\u00a0of\u00a0all.\u00a0Second,\u00a0template\u00a0functions<br />\n-\u00a0\u00a0\u00a0\u00a0which\u00a0do\u00a0not\u00a0actually\u00a0depend\u00a0on\u00a0the\u00a0template\u00a0argument\u00a0are,\u00a0under<br />\n-\u00a0\u00a0\u00a0\u00a0current\u00a0compilers,\u00a0generated\u00a0anew\u00a0for\u00a0each\u00a0instantiation,\u00a0rather<br />\n-\u00a0\u00a0\u00a0\u00a0than\u00a0being\u00a0shared\u00a0with\u00a0other\u00a0instantiations.\u00a0Third,\u00a0some\u00a0of\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0flexibility\u00a0mentioned\u00a0above\u00a0comes\u00a0from\u00a0virtual\u00a0functions\u00a0(both\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0regular\u00a0classes\u00a0and\u00a0template\u00a0classes)\u00a0which\u00a0current\u00a0linkers\u00a0add<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0the\u00a0executable\u00a0file\u00a0even\u00a0when\u00a0they\u00a0manifestly\u00a0cannot\u00a0be\u00a0called.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0The\u00a0library\u00a0is\u00a0specified\u00a0to\u00a0use\u00a0a\u00a0language\u00a0feature,\u00a0exceptions,<br />\n-\u00a0\u00a0\u00a0\u00a0which\u00a0in\u00a0the\u00a0current\u00a0gcc\u00a0compiler\u00a0ABI\u00a0imposes\u00a0a\u00a0run\u00a0time\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0code\u00a0space\u00a0cost\u00a0to\u00a0handle\u00a0the\u00a0possibility\u00a0of\u00a0exceptions\u00a0even\u00a0when<br />\n-\u00a0\u00a0\u00a0\u00a0they\u00a0are\u00a0not\u00a0used.\u00a0Under\u00a0the\u00a0new\u00a0ABI\u00a0(accessed\u00a0with\u00a0-fnew-abi),<br />\n-\u00a0\u00a0\u00a0\u00a0there\u00a0is\u00a0a\u00a0space\u00a0overhead\u00a0and\u00a0a\u00a0small\u00a0reduction\u00a0in\u00a0code\u00a0efficiency<br />\n-\u00a0\u00a0\u00a0\u00a0resulting\u00a0from\u00a0lost\u00a0optimization\u00a0opportunities\u00a0associated\u00a0with<br />\n-\u00a0\u00a0\u00a0\u00a0non-local\u00a0branches\u00a0associated\u00a0with\u00a0exceptions.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0What\u00a0can\u00a0be\u00a0done\u00a0to\u00a0eliminate\u00a0this\u00a0overhead?\u00a0\u00a0A\u00a0variety\u00a0of\u00a0coding<br />\n-\u00a0\u00a0\u00a0\u00a0techniques,\u00a0and\u00a0compiler,\u00a0linker\u00a0and\u00a0library\u00a0improvements\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0extensions\u00a0may\u00a0be\u00a0used,\u00a0as\u00a0covered\u00a0below.\u00a0Most\u00a0are\u00a0not\u00a0difficult,<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0some\u00a0are\u00a0already\u00a0implemented\u00a0in\u00a0varying\u00a0degrees.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Overhead:\u00a0Compilation\u00a0Time<br />\n-\u00a0\u00a0\u00a0\u00a0--------------------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Providing\u00a0\"ready-instantiated\"\u00a0template\u00a0code\u00a0in\u00a0object\u00a0code\u00a0archives<br />\n-\u00a0\u00a0\u00a0\u00a0allows\u00a0us\u00a0to\u00a0avoid\u00a0generating\u00a0and\u00a0optimizing\u00a0template\u00a0instantiations<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0each\u00a0compilation\u00a0unit\u00a0which\u00a0uses\u00a0them.\u00a0However,\u00a0the\u00a0number\u00a0of\u00a0such<br />\n-\u00a0\u00a0\u00a0\u00a0instantiations\u00a0that\u00a0are\u00a0useful\u00a0to\u00a0provide\u00a0is\u00a0limited,\u00a0and\u00a0anyway\u00a0this<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0not\u00a0enough,\u00a0by\u00a0itself,\u00a0to\u00a0minimize\u00a0compilation\u00a0time.\u00a0In\u00a0particular,<br />\n-\u00a0\u00a0\u00a0\u00a0it\u00a0does\u00a0not\u00a0reduce\u00a0time\u00a0spent\u00a0parsing\u00a0conforming\u00a0headers.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Quicker\u00a0header\u00a0parsing\u00a0will\u00a0depend\u00a0on\u00a0library\u00a0extensions\u00a0and\u00a0compiler<br />\n-\u00a0\u00a0\u00a0\u00a0improvements.\u00a0\u00a0One\u00a0approach\u00a0is\u00a0some\u00a0variation\u00a0on\u00a0the\u00a0techniques<br />\n-\u00a0\u00a0\u00a0\u00a0previously\u00a0marketed\u00a0as\u00a0\"pre-compiled\u00a0headers\",\u00a0now\u00a0standardized\u00a0as<br />\n-\u00a0\u00a0\u00a0\u00a0support\u00a0for\u00a0the\u00a0\"export\"\u00a0keyword.\u00a0\"Exported\"\u00a0template\u00a0definitions<br />\n-\u00a0\u00a0\u00a0\u00a0can\u00a0be\u00a0placed\u00a0(once)\u00a0in\u00a0a\u00a0\"repository\"\u00a0--\u00a0really\u00a0just\u00a0a\u00a0library,\u00a0but<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0template\u00a0definitions\u00a0rather\u00a0than\u00a0object\u00a0code\u00a0--\u00a0to\u00a0be\u00a0drawn\u00a0upon<br />\n-\u00a0\u00a0\u00a0\u00a0at\u00a0link\u00a0time\u00a0when\u00a0an\u00a0instantiation\u00a0is\u00a0needed,\u00a0rather\u00a0than\u00a0placed\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0header\u00a0files\u00a0to\u00a0be\u00a0parsed\u00a0along\u00a0with\u00a0every\u00a0compilation\u00a0unit.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Until\u00a0\"export\"\u00a0is\u00a0implemented\u00a0we\u00a0can\u00a0put\u00a0some\u00a0of\u00a0the\u00a0lengthy\u00a0template<br />\n-\u00a0\u00a0\u00a0\u00a0definitions\u00a0in\u00a0#if\u00a0guards\u00a0or\u00a0alternative\u00a0headers\u00a0so\u00a0that\u00a0users\u00a0can\u00a0skip<br />\n-\u00a0\u00a0\u00a0\u00a0over\u00a0the\u00a0full\u00a0definitions\u00a0when\u00a0they\u00a0need\u00a0only\u00a0the\u00a0ready-instantiated<br />\n-\u00a0\u00a0\u00a0\u00a0specializations.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0To\u00a0be\u00a0precise,\u00a0this\u00a0means\u00a0that\u00a0certain\u00a0headers\u00a0which\u00a0define<br />\n-\u00a0\u00a0\u00a0\u00a0templates\u00a0which\u00a0users\u00a0normally\u00a0use\u00a0only\u00a0for\u00a0certain\u00a0arguments<br />\n-\u00a0\u00a0\u00a0\u00a0can\u00a0be\u00a0instrumented\u00a0to\u00a0avoid\u00a0exposing\u00a0the\u00a0template\u00a0definitions<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0the\u00a0compiler\u00a0unless\u00a0a\u00a0macro\u00a0is\u00a0defined.\u00a0For\u00a0example,\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;string&gt;,\u00a0we\u00a0might\u00a0have:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0template\u00a0&lt;class\u00a0_CharT,\u00a0...\u00a0&gt;\u00a0class\u00a0basic_string\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0...\u00a0//\u00a0member\u00a0declarations<br />\n-\u00a0\u00a0\u00a0\u00a0};<br />\n-\u00a0\u00a0\u00a0\u00a0...\u00a0//\u00a0operator\u00a0declarations<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0#ifdef\u00a0_STRICT_ISO_<br />\n-\u00a0\u00a0\u00a0\u00a0#\u00a0if\u00a0_G_NO_TEMPLATE_EXPORT<br />\n-\u00a0\u00a0\u00a0\u00a0#\u00a0\u00a0\u00a0include\u00a0&lt;bits/std_locale.h&gt;\u00a0\u00a0//\u00a0headers\u00a0needed\u00a0by\u00a0definitions<br />\n-\u00a0\u00a0\u00a0\u00a0#\u00a0\u00a0\u00a0...<br />\n-\u00a0\u00a0\u00a0\u00a0#\u00a0\u00a0\u00a0include\u00a0&lt;bits/string.tcc&gt;\u00a0\u00a0//\u00a0member\u00a0and\u00a0global\u00a0template\u00a0definitions.<br />\n-\u00a0\u00a0\u00a0\u00a0#\u00a0endif<br />\n-\u00a0\u00a0\u00a0\u00a0#endif<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Users\u00a0who\u00a0compile\u00a0without\u00a0specifying\u00a0a\u00a0strict-ISO-conforming\u00a0flag<br />\n-\u00a0\u00a0\u00a0\u00a0would\u00a0not\u00a0see\u00a0many\u00a0of\u00a0the\u00a0template\u00a0definitions\u00a0they\u00a0now\u00a0see,\u00a0and\u00a0rely<br />\n-\u00a0\u00a0\u00a0\u00a0instead\u00a0on\u00a0ready-instantiated\u00a0specializations\u00a0in\u00a0the\u00a0library.\u00a0This<br />\n-\u00a0\u00a0\u00a0\u00a0technique\u00a0would\u00a0be\u00a0useful\u00a0for\u00a0the\u00a0following\u00a0substantial\u00a0components:<br />\n-\u00a0\u00a0\u00a0\u00a0string,\u00a0locale/iostreams,\u00a0valarray.\u00a0It\u00a0would\u00a0*not*\u00a0be\u00a0useful\u00a0or<br />\n-\u00a0\u00a0\u00a0\u00a0usable\u00a0with\u00a0the\u00a0following:\u00a0containers,\u00a0algorithms,\u00a0iterators,<br />\n-\u00a0\u00a0\u00a0\u00a0allocator.\u00a0Since\u00a0these\u00a0constitute\u00a0a\u00a0large\u00a0(though\u00a0decreasing)<br />\n-\u00a0\u00a0\u00a0\u00a0fraction\u00a0of\u00a0the\u00a0library,\u00a0the\u00a0benefit\u00a0the\u00a0technique\u00a0offers\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0limited.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0language\u00a0specifies\u00a0the\u00a0semantics\u00a0of\u00a0the\u00a0\"export\"\u00a0keyword,\u00a0but<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0gcc\u00a0compiler\u00a0does\u00a0not\u00a0yet\u00a0support\u00a0it.\u00a0When\u00a0it\u00a0does,\u00a0problems<br />\n-\u00a0\u00a0\u00a0\u00a0with\u00a0large\u00a0template\u00a0inclusions\u00a0can\u00a0largely\u00a0disappear,\u00a0given\u00a0some<br />\n-\u00a0\u00a0\u00a0\u00a0minor\u00a0library\u00a0reorganization,\u00a0along\u00a0with\u00a0the\u00a0need\u00a0for\u00a0the\u00a0apparatus<br />\n-\u00a0\u00a0\u00a0\u00a0described\u00a0above.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Overhead:\u00a0Flexibility\u00a0Cost<br />\n-\u00a0\u00a0\u00a0\u00a0--------------------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0library\u00a0offers\u00a0many\u00a0places\u00a0where\u00a0users\u00a0can\u00a0specify\u00a0operations<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0be\u00a0performed\u00a0by\u00a0the\u00a0library\u00a0in\u00a0place\u00a0of\u00a0defaults.\u00a0Sometimes<br />\n-\u00a0\u00a0\u00a0\u00a0this\u00a0seems\u00a0to\u00a0require\u00a0that\u00a0the\u00a0library\u00a0use\u00a0a\u00a0more-roundabout,\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0possibly\u00a0slower,\u00a0way\u00a0to\u00a0accomplish\u00a0the\u00a0default\u00a0requirements\u00a0than<br />\n-\u00a0\u00a0\u00a0\u00a0would\u00a0be\u00a0used\u00a0otherwise.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0primary\u00a0protection\u00a0against\u00a0this\u00a0overhead\u00a0is\u00a0thorough\u00a0compiler<br />\n-\u00a0\u00a0\u00a0\u00a0optimization,\u00a0to\u00a0crush\u00a0out\u00a0layers\u00a0of\u00a0inline\u00a0function\u00a0interfaces.<br />\n-\u00a0\u00a0\u00a0\u00a0Kuck\u00a0&amp;\u00a0Associates\u00a0has\u00a0demonstrated\u00a0the\u00a0practicality\u00a0of\u00a0this\u00a0kind<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0optimization.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0second\u00a0line\u00a0of\u00a0defense\u00a0against\u00a0this\u00a0overhead\u00a0is\u00a0explicit<br />\n-\u00a0\u00a0\u00a0\u00a0specialization.\u00a0By\u00a0defining\u00a0helper\u00a0function\u00a0templates,\u00a0and\u00a0writing<br />\n-\u00a0\u00a0\u00a0\u00a0specialized\u00a0code\u00a0for\u00a0the\u00a0default\u00a0case,\u00a0overhead\u00a0can\u00a0be\u00a0eliminated<br />\n-\u00a0\u00a0\u00a0\u00a0for\u00a0that\u00a0case\u00a0without\u00a0sacrificing\u00a0flexibility.\u00a0This\u00a0takes\u00a0full<br />\n-\u00a0\u00a0\u00a0\u00a0advantage\u00a0of\u00a0any\u00a0ability\u00a0of\u00a0the\u00a0optimizer\u00a0to\u00a0crush\u00a0out\u00a0degenerate<br />\n-\u00a0\u00a0\u00a0\u00a0code.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0library\u00a0specifies\u00a0many\u00a0virtual\u00a0functions\u00a0which\u00a0current\u00a0linkers<br />\n-\u00a0\u00a0\u00a0\u00a0load\u00a0even\u00a0when\u00a0they\u00a0cannot\u00a0be\u00a0called.\u00a0Some\u00a0minor\u00a0improvements\u00a0to\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0compiler\u00a0and\u00a0to\u00a0ld\u00a0would\u00a0eliminate\u00a0any\u00a0such\u00a0overhead\u00a0by\u00a0simply<br />\n-\u00a0\u00a0\u00a0\u00a0omitting\u00a0virtual\u00a0functions\u00a0that\u00a0the\u00a0complete\u00a0program\u00a0does\u00a0not\u00a0call.<br />\n-\u00a0\u00a0\u00a0\u00a0A\u00a0prototype\u00a0of\u00a0this\u00a0work\u00a0has\u00a0already\u00a0been\u00a0done.\u00a0For\u00a0targets\u00a0where<br />\n-\u00a0\u00a0\u00a0\u00a0GNU\u00a0ld\u00a0is\u00a0not\u00a0used,\u00a0a\u00a0\"pre-linker\"\u00a0could\u00a0do\u00a0the\u00a0same\u00a0job.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0main\u00a0areas\u00a0in\u00a0the\u00a0standard\u00a0interface\u00a0where\u00a0user\u00a0flexibility<br />\n-\u00a0\u00a0\u00a0\u00a0can\u00a0result\u00a0in\u00a0overhead\u00a0are:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0Allocators:\u00a0\u00a0Containers\u00a0are\u00a0specified\u00a0to\u00a0use\u00a0user-definable<br />\n-\u00a0\u00a0\u00a0\u00a0allocator\u00a0types\u00a0and\u00a0objects,\u00a0making\u00a0tuning\u00a0for\u00a0the\u00a0container<br />\n-\u00a0\u00a0\u00a0\u00a0characteristics\u00a0tricky.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0Locales:\u00a0the\u00a0standard\u00a0specifies\u00a0locale\u00a0objects\u00a0used\u00a0to\u00a0implement<br />\n-\u00a0\u00a0\u00a0\u00a0iostream\u00a0operations,\u00a0involving\u00a0many\u00a0virtual\u00a0functions\u00a0which\u00a0use<br />\n-\u00a0\u00a0\u00a0\u00a0streambuf\u00a0iterators.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0Algorithms\u00a0and\u00a0containers:\u00a0these\u00a0may\u00a0be\u00a0instantiated\u00a0on\u00a0any\u00a0type,<br />\n-\u00a0\u00a0\u00a0\u00a0frequently\u00a0duplicating\u00a0code\u00a0for\u00a0identical\u00a0operations.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-\u00a0Iostreams\u00a0and\u00a0strings:\u00a0users\u00a0are\u00a0permitted\u00a0to\u00a0use\u00a0these\u00a0on\u00a0their<br />\n-\u00a0\u00a0\u00a0\u00a0own\u00a0types,\u00a0and\u00a0specify\u00a0the\u00a0operations\u00a0the\u00a0stream\u00a0must\u00a0use\u00a0on\u00a0these<br />\n-\u00a0\u00a0\u00a0\u00a0types.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Note\u00a0that\u00a0these\u00a0sources\u00a0of\u00a0overhead\u00a0are\u00a0_avoidable_.\u00a0The\u00a0techniques<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0avoid\u00a0them\u00a0are\u00a0covered\u00a0below.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Code\u00a0Bloat<br />\n-\u00a0\u00a0\u00a0\u00a0----------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0In\u00a0the\u00a0SGI\u00a0STL,\u00a0and\u00a0in\u00a0some\u00a0other\u00a0headers,\u00a0many\u00a0of\u00a0the\u00a0templates<br />\n-\u00a0\u00a0\u00a0\u00a0are\u00a0defined\u00a0\"inline\"\u00a0--\u00a0either\u00a0explicitly\u00a0or\u00a0by\u00a0their\u00a0placement<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0class\u00a0definitions\u00a0--\u00a0which\u00a0should\u00a0not\u00a0be\u00a0inline.\u00a0This\u00a0is\u00a0a<br />\n-\u00a0\u00a0\u00a0\u00a0source\u00a0of\u00a0code\u00a0bloat.\u00a0Matt\u00a0had\u00a0remarked\u00a0that\u00a0he\u00a0was\u00a0relying\u00a0on<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0compiler\u00a0to\u00a0recognize\u00a0what\u00a0was\u00a0too\u00a0big\u00a0to\u00a0benefit\u00a0from\u00a0inlining,<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0generate\u00a0it\u00a0out-of-line\u00a0automatically.\u00a0However,\u00a0this\u00a0also\u00a0can<br />\n-\u00a0\u00a0\u00a0\u00a0result\u00a0in\u00a0code\u00a0bloat\u00a0except\u00a0where\u00a0the\u00a0linker\u00a0can\u00a0eliminate\u00a0the\u00a0extra<br />\n-\u00a0\u00a0\u00a0\u00a0copies.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Fixing\u00a0these\u00a0cases\u00a0will\u00a0require\u00a0an\u00a0audit\u00a0of\u00a0all\u00a0inline\u00a0functions<br />\n-\u00a0\u00a0\u00a0\u00a0defined\u00a0in\u00a0the\u00a0library\u00a0to\u00a0determine\u00a0which\u00a0merit\u00a0inlining,\u00a0and\u00a0moving<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0rest\u00a0out\u00a0of\u00a0line.\u00a0This\u00a0is\u00a0an\u00a0issue\u00a0mainly\u00a0in\u00a0chapters\u00a023,\u00a025,\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a027.\u00a0Of\u00a0course\u00a0it\u00a0can\u00a0be\u00a0done\u00a0incrementally,\u00a0and\u00a0we\u00a0should\u00a0generally<br />\n-\u00a0\u00a0\u00a0\u00a0accept\u00a0patches\u00a0that\u00a0move\u00a0large\u00a0functions\u00a0out\u00a0of\u00a0line\u00a0and\u00a0into\u00a0\".tcc\"<br />\n-\u00a0\u00a0\u00a0\u00a0files,\u00a0which\u00a0can\u00a0later\u00a0be\u00a0pulled\u00a0into\u00a0a\u00a0repository.\u00a0Compiler/linker<br />\n-\u00a0\u00a0\u00a0\u00a0improvements\u00a0to\u00a0recognize\u00a0very\u00a0large\u00a0inline\u00a0functions\u00a0and\u00a0move\u00a0them<br />\n-\u00a0\u00a0\u00a0\u00a0out-of-line,\u00a0but\u00a0shared\u00a0among\u00a0compilation\u00a0units,\u00a0could\u00a0make\u00a0this<br />\n-\u00a0\u00a0\u00a0\u00a0work\u00a0unnecessary.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Pre-instantiating\u00a0template\u00a0specializations\u00a0currently\u00a0produces\u00a0large<br />\n-\u00a0\u00a0\u00a0\u00a0amounts\u00a0of\u00a0dead\u00a0code\u00a0which\u00a0bloats\u00a0statically\u00a0linked\u00a0programs.\u00a0The<br />\n-\u00a0\u00a0\u00a0\u00a0current\u00a0state\u00a0of\u00a0the\u00a0static\u00a0library,\u00a0libstdc++.a,\u00a0is\u00a0intolerable\u00a0on<br />\n-\u00a0\u00a0\u00a0\u00a0this\u00a0account,\u00a0and\u00a0will\u00a0fuel\u00a0further\u00a0confused\u00a0speculation\u00a0about\u00a0a\u00a0need<br />\n-\u00a0\u00a0\u00a0\u00a0for\u00a0a\u00a0library\u00a0\"subset\".\u00a0A\u00a0compiler\u00a0improvement\u00a0that\u00a0treats\u00a0each<br />\n-\u00a0\u00a0\u00a0\u00a0instantiated\u00a0function\u00a0as\u00a0a\u00a0separate\u00a0object\u00a0file,\u00a0for\u00a0linking\u00a0purposes,<br />\n-\u00a0\u00a0\u00a0\u00a0would\u00a0be\u00a0one\u00a0solution\u00a0to\u00a0this\u00a0problem.\u00a0An\u00a0alternative\u00a0would\u00a0be\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0split\u00a0up\u00a0the\u00a0manual\u00a0instantiation\u00a0files\u00a0into\u00a0dozens\u00a0upon\u00a0dozens\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0little\u00a0files,\u00a0each\u00a0compiled\u00a0separately,\u00a0but\u00a0an\u00a0abortive\u00a0attempt\u00a0at<br />\n-\u00a0\u00a0\u00a0\u00a0this\u00a0was\u00a0done\u00a0for\u00a0&lt;string&gt;\u00a0and,\u00a0though\u00a0it\u00a0is\u00a0far\u00a0from\u00a0complete,\u00a0it<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0already\u00a0a\u00a0nuisance.\u00a0A\u00a0better\u00a0interim\u00a0solution\u00a0(just\u00a0until\u00a0we\u00a0have<br />\n-\u00a0\u00a0\u00a0\u00a0\"export\")\u00a0is\u00a0badly\u00a0needed.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0When\u00a0building\u00a0a\u00a0shared\u00a0library,\u00a0the\u00a0current\u00a0compiler/linker\u00a0cannot<br />\n-\u00a0\u00a0\u00a0\u00a0automatically\u00a0generate\u00a0the\u00a0instantiations\u00a0needed.\u00a0This\u00a0creates\u00a0a<br />\n-\u00a0\u00a0\u00a0\u00a0miserable\u00a0situation;\u00a0it\u00a0means\u00a0any\u00a0time\u00a0something\u00a0is\u00a0changed\u00a0in\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0library,\u00a0before\u00a0a\u00a0shared\u00a0library\u00a0can\u00a0be\u00a0built\u00a0someone\u00a0must\u00a0manually<br />\n-\u00a0\u00a0\u00a0\u00a0copy\u00a0the\u00a0declarations\u00a0of\u00a0all\u00a0templates\u00a0that\u00a0are\u00a0needed\u00a0by\u00a0other\u00a0parts<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0the\u00a0library\u00a0to\u00a0an\u00a0\"instantiation\"\u00a0file,\u00a0and\u00a0add\u00a0it\u00a0to\u00a0the\u00a0build<br />\n-\u00a0\u00a0\u00a0\u00a0system\u00a0to\u00a0be\u00a0compiled\u00a0and\u00a0linked\u00a0to\u00a0the\u00a0library.\u00a0This\u00a0process\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0readily\u00a0automated,\u00a0and\u00a0should\u00a0be\u00a0automated\u00a0as\u00a0soon\u00a0as\u00a0possible.<br />\n-\u00a0\u00a0\u00a0\u00a0Users\u00a0building\u00a0their\u00a0own\u00a0shared\u00a0libraries\u00a0experience\u00a0identical<br />\n-\u00a0\u00a0\u00a0\u00a0frustrations.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Sharing\u00a0common\u00a0aspects\u00a0of\u00a0template\u00a0definitions\u00a0among\u00a0instantiations<br />\n-\u00a0\u00a0\u00a0\u00a0can\u00a0radically\u00a0reduce\u00a0code\u00a0bloat.\u00a0The\u00a0compiler\u00a0could\u00a0help\u00a0a\u00a0great<br />\n-\u00a0\u00a0\u00a0\u00a0deal\u00a0here\u00a0by\u00a0recognizing\u00a0when\u00a0a\u00a0function\u00a0depends\u00a0on\u00a0nothing\u00a0about<br />\n-\u00a0\u00a0\u00a0\u00a0a\u00a0template\u00a0parameter,\u00a0or\u00a0only\u00a0on\u00a0its\u00a0size,\u00a0and\u00a0giving\u00a0the\u00a0resulting<br />\n-\u00a0\u00a0\u00a0\u00a0function\u00a0a\u00a0link-name\u00a0\"equate\"\u00a0that\u00a0allows\u00a0it\u00a0to\u00a0be\u00a0shared\u00a0with\u00a0other<br />\n-\u00a0\u00a0\u00a0\u00a0instantiations.\u00a0Implementation\u00a0code\u00a0could\u00a0take\u00a0advantage\u00a0of\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0capability\u00a0by\u00a0factoring\u00a0out\u00a0code\u00a0that\u00a0does\u00a0not\u00a0depend\u00a0on\u00a0the\u00a0template<br />\n-\u00a0\u00a0\u00a0\u00a0argument\u00a0into\u00a0separate\u00a0functions\u00a0to\u00a0be\u00a0merged\u00a0by\u00a0the\u00a0compiler.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Until\u00a0such\u00a0a\u00a0compiler\u00a0optimization\u00a0is\u00a0implemented,\u00a0much\u00a0can\u00a0be\u00a0done<br />\n-\u00a0\u00a0\u00a0\u00a0manually\u00a0(if\u00a0tediously)\u00a0in\u00a0this\u00a0direction.\u00a0One\u00a0such\u00a0optimization\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0derive\u00a0class\u00a0templates\u00a0from\u00a0non-template\u00a0classes,\u00a0and\u00a0move\u00a0as\u00a0much<br />\n-\u00a0\u00a0\u00a0\u00a0implementation\u00a0as\u00a0possible\u00a0into\u00a0the\u00a0base\u00a0class.\u00a0Another\u00a0is\u00a0to\u00a0partial-<br />\n-\u00a0\u00a0\u00a0\u00a0specialize\u00a0certain\u00a0common\u00a0instantiations,\u00a0such\u00a0as\u00a0vector&lt;T*&gt;,\u00a0to\u00a0share<br />\n-\u00a0\u00a0\u00a0\u00a0code\u00a0for\u00a0instantiations\u00a0on\u00a0all\u00a0types\u00a0T.\u00a0While\u00a0these\u00a0techniques\u00a0work,<br />\n-\u00a0\u00a0\u00a0\u00a0they\u00a0are\u00a0far\u00a0from\u00a0the\u00a0complete\u00a0solution\u00a0that\u00a0a\u00a0compiler\u00a0improvement<br />\n-\u00a0\u00a0\u00a0\u00a0would\u00a0afford.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Overhead:\u00a0Expensive\u00a0Language\u00a0Features<br />\n-\u00a0\u00a0\u00a0\u00a0-------------------------------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0main\u00a0\"expensive\"\u00a0language\u00a0feature\u00a0used\u00a0in\u00a0the\u00a0standard\u00a0library<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0exception\u00a0support,\u00a0which\u00a0requires\u00a0compiling\u00a0in\u00a0cleanup\u00a0code\u00a0with<br />\n-\u00a0\u00a0\u00a0\u00a0static\u00a0table\u00a0data\u00a0to\u00a0locate\u00a0it,\u00a0and\u00a0linking\u00a0in\u00a0library\u00a0code\u00a0to\u00a0use<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0table.\u00a0For\u00a0small\u00a0embedded\u00a0programs\u00a0the\u00a0amount\u00a0of\u00a0such\u00a0library<br />\n-\u00a0\u00a0\u00a0\u00a0code\u00a0and\u00a0table\u00a0data\u00a0is\u00a0assumed\u00a0by\u00a0some\u00a0to\u00a0be\u00a0excessive.\u00a0Under\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0\"new\"\u00a0ABI\u00a0this\u00a0perception\u00a0is\u00a0generally\u00a0exaggerated,\u00a0although\u00a0in\u00a0some<br />\n-\u00a0\u00a0\u00a0\u00a0cases\u00a0it\u00a0may\u00a0actually\u00a0be\u00a0excessive.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0To\u00a0implement\u00a0a\u00a0library\u00a0which\u00a0does\u00a0not\u00a0use\u00a0exceptions\u00a0directly\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0not\u00a0difficult\u00a0given\u00a0minor\u00a0compiler\u00a0support\u00a0(to\u00a0\"turn\u00a0off\"\u00a0exceptions<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0ignore\u00a0exception\u00a0constructs),\u00a0and\u00a0results\u00a0in\u00a0no\u00a0great\u00a0library<br />\n-\u00a0\u00a0\u00a0\u00a0maintenance\u00a0difficulties.\u00a0To\u00a0be\u00a0precise,\u00a0given\u00a0\"-fno-exceptions\",<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0compiler\u00a0should\u00a0treat\u00a0\"try\"\u00a0blocks\u00a0as\u00a0ordinary\u00a0blocks,\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0\"catch\"\u00a0blocks\u00a0as\u00a0dead\u00a0code\u00a0to\u00a0ignore\u00a0or\u00a0eliminate.\u00a0Compiler<br />\n-\u00a0\u00a0\u00a0\u00a0support\u00a0is\u00a0not\u00a0strictly\u00a0necessary,\u00a0except\u00a0in\u00a0the\u00a0case\u00a0of\u00a0\"function<br />\n-\u00a0\u00a0\u00a0\u00a0try\u00a0blocks\";\u00a0otherwise\u00a0the\u00a0following\u00a0macros\u00a0almost\u00a0suffice:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0#define\u00a0throw(X)<br />\n-\u00a0\u00a0\u00a0\u00a0#define\u00a0try\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(true)<br />\n-\u00a0\u00a0\u00a0\u00a0#define\u00a0catch(X)\u00a0else\u00a0if\u00a0(false)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0However,\u00a0there\u00a0may\u00a0be\u00a0a\u00a0need\u00a0to\u00a0use\u00a0function\u00a0try\u00a0blocks\u00a0in\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0library\u00a0implementation,\u00a0and\u00a0use\u00a0of\u00a0macros\u00a0in\u00a0this\u00a0way\u00a0can\u00a0make<br />\n-\u00a0\u00a0\u00a0\u00a0correct\u00a0diagnostics\u00a0impossible.\u00a0Furthermore,\u00a0use\u00a0of\u00a0this\u00a0scheme<br />\n-\u00a0\u00a0\u00a0\u00a0would\u00a0require\u00a0the\u00a0library\u00a0to\u00a0call\u00a0a\u00a0function\u00a0to\u00a0re-throw\u00a0exceptions<br />\n-\u00a0\u00a0\u00a0\u00a0from\u00a0a\u00a0try\u00a0block.\u00a0Implementing\u00a0the\u00a0above\u00a0semantics\u00a0in\u00a0the\u00a0compiler<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0preferable.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Given\u00a0the\u00a0support\u00a0above\u00a0(however\u00a0implemented)\u00a0it\u00a0only\u00a0remains\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0replace\u00a0code\u00a0that\u00a0\"throws\"\u00a0with\u00a0a\u00a0call\u00a0to\u00a0a\u00a0well-documented\u00a0\"handler\"<br />\n-\u00a0\u00a0\u00a0\u00a0function\u00a0in\u00a0a\u00a0separate\u00a0compilation\u00a0unit\u00a0which\u00a0may\u00a0be\u00a0replaced\u00a0by<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0user.\u00a0The\u00a0main\u00a0source\u00a0of\u00a0exceptions\u00a0that\u00a0would\u00a0be\u00a0difficult<br />\n-\u00a0\u00a0\u00a0\u00a0for\u00a0users\u00a0to\u00a0avoid\u00a0is\u00a0memory\u00a0allocation\u00a0failures,\u00a0but\u00a0users\u00a0can<br />\n-\u00a0\u00a0\u00a0\u00a0define\u00a0their\u00a0own\u00a0memory\u00a0allocation\u00a0primitives\u00a0that\u00a0never\u00a0throw.<br />\n-\u00a0\u00a0\u00a0\u00a0Otherwise,\u00a0the\u00a0complete\u00a0list\u00a0of\u00a0such\u00a0handlers,\u00a0and\u00a0which\u00a0library<br />\n-\u00a0\u00a0\u00a0\u00a0functions\u00a0may\u00a0call\u00a0them,\u00a0would\u00a0be\u00a0needed\u00a0for\u00a0users\u00a0to\u00a0be\u00a0able\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0implement\u00a0the\u00a0necessary\u00a0substitutes.\u00a0(Fortunately,\u00a0they\u00a0have\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0source\u00a0code.)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Opportunities<br />\n-\u00a0\u00a0\u00a0\u00a0-------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0template\u00a0capabilities\u00a0of\u00a0C++\u00a0offer\u00a0enormous\u00a0opportunities\u00a0for<br />\n-\u00a0\u00a0\u00a0\u00a0optimizing\u00a0common\u00a0library\u00a0operations,\u00a0well\u00a0beyond\u00a0what\u00a0would\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0considered\u00a0\"eliminating\u00a0overhead\".\u00a0In\u00a0particular,\u00a0many\u00a0operations<br />\n-\u00a0\u00a0\u00a0\u00a0done\u00a0in\u00a0Glibc\u00a0with\u00a0macros\u00a0that\u00a0depend\u00a0on\u00a0proprietary\u00a0language<br />\n-\u00a0\u00a0\u00a0\u00a0extensions\u00a0can\u00a0be\u00a0implemented\u00a0in\u00a0pristine\u00a0Standard\u00a0C++.\u00a0For\u00a0example,<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0chapter\u00a025\u00a0algorithms,\u00a0and\u00a0even\u00a0C\u00a0library\u00a0functions\u00a0such\u00a0as\u00a0strchr,<br />\n-\u00a0\u00a0\u00a0\u00a0can\u00a0be\u00a0specialized\u00a0for\u00a0the\u00a0case\u00a0of\u00a0static\u00a0arrays\u00a0of\u00a0known\u00a0(small)\u00a0size.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Detailed\u00a0optimization\u00a0opportunities\u00a0are\u00a0identified\u00a0below\u00a0where<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0component\u00a0where\u00a0they\u00a0would\u00a0appear\u00a0is\u00a0discussed.\u00a0Of\u00a0course\u00a0new<br />\n-\u00a0\u00a0\u00a0\u00a0opportunities\u00a0will\u00a0be\u00a0identified\u00a0during\u00a0implementation.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Unimplemented\u00a0Required\u00a0Library\u00a0Features<br />\n-\u00a0\u00a0\u00a0\u00a0---------------------------------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0standard\u00a0specifies\u00a0hundreds\u00a0of\u00a0components,\u00a0grouped\u00a0broadly\u00a0by<br />\n-\u00a0\u00a0\u00a0\u00a0chapter.\u00a0These\u00a0are\u00a0listed\u00a0in\u00a0excruciating\u00a0detail\u00a0in\u00a0the\u00a0CHECKLIST<br />\n-\u00a0\u00a0\u00a0\u00a0file.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a017\u00a0general<br />\n-\u00a0\u00a0\u00a0\u00a018\u00a0support<br />\n-\u00a0\u00a0\u00a0\u00a019\u00a0diagnostics<br />\n-\u00a0\u00a0\u00a0\u00a020\u00a0utilities<br />\n-\u00a0\u00a0\u00a0\u00a021\u00a0string<br />\n-\u00a0\u00a0\u00a0\u00a022\u00a0locale<br />\n-\u00a0\u00a0\u00a0\u00a023\u00a0containers<br />\n-\u00a0\u00a0\u00a0\u00a024\u00a0iterators<br />\n-\u00a0\u00a0\u00a0\u00a025\u00a0algorithms<br />\n-\u00a0\u00a0\u00a0\u00a026\u00a0numerics<br />\n-\u00a0\u00a0\u00a0\u00a027\u00a0iostreams<br />\n-\u00a0\u00a0\u00a0\u00a0Annex\u00a0D\u00a0\u00a0backward\u00a0compatibility<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Anyone\u00a0participating\u00a0in\u00a0implementation\u00a0of\u00a0the\u00a0library\u00a0should\u00a0obtain<br />\n-\u00a0\u00a0\u00a0\u00a0a\u00a0copy\u00a0of\u00a0the\u00a0standard,\u00a0ISO\u00a014882.\u00a0\u00a0People\u00a0in\u00a0the\u00a0U.S.\u00a0can\u00a0obtain\u00a0an<br />\n-\u00a0\u00a0\u00a0\u00a0electronic\u00a0copy\u00a0for\u00a0US$18\u00a0from\u00a0ANSI's\u00a0web\u00a0site.\u00a0Those\u00a0from\u00a0other<br />\n-\u00a0\u00a0\u00a0\u00a0countries\u00a0should\u00a0visit\u00a0http://www.iso.ch/\u00a0to\u00a0find\u00a0out\u00a0the\u00a0location<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0their\u00a0country's\u00a0representation\u00a0in\u00a0ISO,\u00a0in\u00a0order\u00a0to\u00a0know\u00a0who\u00a0can<br />\n-\u00a0\u00a0\u00a0\u00a0sell\u00a0them\u00a0a\u00a0copy.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0emphasis\u00a0in\u00a0the\u00a0following\u00a0sections\u00a0is\u00a0on\u00a0unimplemented\u00a0features<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0optimization\u00a0opportunities.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a017\u00a0\u00a0General<br />\n-\u00a0\u00a0\u00a0\u00a0-------------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a017\u00a0concerns\u00a0overall\u00a0library\u00a0requirements.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0standard\u00a0doesn't\u00a0mention\u00a0threads.\u00a0A\u00a0multi-thread\u00a0(MT)\u00a0extension<br />\n-\u00a0\u00a0\u00a0\u00a0primarily\u00a0affects\u00a0operators\u00a0new\u00a0and\u00a0delete\u00a0(18),\u00a0allocator\u00a0(20),<br />\n-\u00a0\u00a0\u00a0\u00a0string\u00a0(21),\u00a0locale\u00a0(22),\u00a0and\u00a0iostreams\u00a0(27).\u00a0The\u00a0common\u00a0underlying<br />\n-\u00a0\u00a0\u00a0\u00a0support\u00a0needed\u00a0for\u00a0this\u00a0is\u00a0discussed\u00a0under\u00a0chapter\u00a020.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0standard\u00a0requirements\u00a0on\u00a0names\u00a0from\u00a0the\u00a0C\u00a0headers\u00a0create\u00a0a<br />\n-\u00a0\u00a0\u00a0\u00a0lot\u00a0of\u00a0work,\u00a0mostly\u00a0done.\u00a0Names\u00a0in\u00a0the\u00a0C\u00a0headers\u00a0must\u00a0be\u00a0visible<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0the\u00a0std::\u00a0and\u00a0sometimes\u00a0the\u00a0global\u00a0namespace;\u00a0the\u00a0names\u00a0in\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0two\u00a0scopes\u00a0must\u00a0refer\u00a0to\u00a0the\u00a0same\u00a0object.\u00a0More\u00a0stringent\u00a0is\u00a0that<br />\n-\u00a0\u00a0\u00a0\u00a0Koenig\u00a0lookup\u00a0implies\u00a0that\u00a0any\u00a0types\u00a0specified\u00a0as\u00a0defined\u00a0in\u00a0std::<br />\n-\u00a0\u00a0\u00a0\u00a0really\u00a0are\u00a0defined\u00a0in\u00a0std::.\u00a0Names\u00a0optionally\u00a0implemented\u00a0as<br />\n-\u00a0\u00a0\u00a0\u00a0macros\u00a0in\u00a0C\u00a0cannot\u00a0be\u00a0macros\u00a0in\u00a0C++.\u00a0(An\u00a0overview\u00a0may\u00a0be\u00a0read\u00a0at<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;http://www.cantrip.org/cheaders.html&gt;).\u00a0The\u00a0scripts\u00a0\"inclosure\"<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0\"mkcshadow\",\u00a0and\u00a0the\u00a0directories\u00a0shadow/\u00a0and\u00a0cshadow/,\u00a0are\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0beginning\u00a0of\u00a0an\u00a0effort\u00a0to\u00a0conform\u00a0in\u00a0this\u00a0area.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0A\u00a0correct\u00a0conforming\u00a0definition\u00a0of\u00a0C\u00a0header\u00a0names\u00a0based\u00a0on\u00a0underlying<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0library\u00a0headers,\u00a0and\u00a0practical\u00a0linking\u00a0of\u00a0conforming\u00a0namespaced<br />\n-\u00a0\u00a0\u00a0\u00a0customer\u00a0code\u00a0with\u00a0third-party\u00a0C\u00a0libraries\u00a0depends\u00a0ultimately\u00a0on<br />\n-\u00a0\u00a0\u00a0\u00a0an\u00a0ABI\u00a0change,\u00a0allowing\u00a0namespaced\u00a0C\u00a0type\u00a0names\u00a0to\u00a0be\u00a0mangled\u00a0into<br />\n-\u00a0\u00a0\u00a0\u00a0type\u00a0names\u00a0as\u00a0if\u00a0they\u00a0were\u00a0global,\u00a0somewhat\u00a0as\u00a0C\u00a0function\u00a0names\u00a0in\u00a0a<br />\n-\u00a0\u00a0\u00a0\u00a0namespace,\u00a0or\u00a0C++\u00a0global\u00a0variable\u00a0names,\u00a0are\u00a0left\u00a0unmangled.\u00a0Perhaps<br />\n-\u00a0\u00a0\u00a0\u00a0another\u00a0\"extern\"\u00a0mode,\u00a0such\u00a0as\u00a0'extern\u00a0\"C-global\"'\u00a0would\u00a0be\u00a0an<br />\n-\u00a0\u00a0\u00a0\u00a0appropriate\u00a0place\u00a0for\u00a0such\u00a0type\u00a0definitions.\u00a0Such\u00a0a\u00a0type\u00a0would<br />\n-\u00a0\u00a0\u00a0\u00a0affect\u00a0mangling\u00a0as\u00a0follows:<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0namespace\u00a0A\u00a0{<br />\n-\u00a0\u00a0\u00a0\u00a0struct\u00a0X\u00a0{};<br />\n-\u00a0\u00a0\u00a0\u00a0extern\u00a0\"C-global\"\u00a0{\u00a0\u00a0//\u00a0or\u00a0maybe\u00a0just\u00a0'extern\u00a0\"C\"'<br />\n-\u00a0\u00a0\u00a0\u00a0struct\u00a0Y\u00a0{};<br />\n-\u00a0\u00a0\u00a0\u00a0};<br />\n-\u00a0\u00a0\u00a0\u00a0}<br />\n-\u00a0\u00a0\u00a0\u00a0void\u00a0f(A::X*);\u00a0\u00a0//\u00a0mangles\u00a0to\u00a0f__FPQ21A1X<br />\n-\u00a0\u00a0\u00a0\u00a0void\u00a0f(A::Y*);\u00a0\u00a0//\u00a0mangles\u00a0to\u00a0f__FP1Y<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0(It\u00a0may\u00a0be\u00a0that\u00a0this\u00a0is\u00a0really\u00a0the\u00a0appropriate\u00a0semantics\u00a0for\u00a0regular<br />\n-\u00a0\u00a0\u00a0\u00a0'extern\u00a0\"C\"',\u00a0and\u00a0'extern\u00a0\"C-global\"',\u00a0as\u00a0an\u00a0extension,\u00a0would\u00a0not\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0necessary.)\u00a0This\u00a0would\u00a0allow\u00a0functions\u00a0declared\u00a0in\u00a0non-standard\u00a0C\u00a0headers<br />\n-\u00a0\u00a0\u00a0\u00a0(and\u00a0thus\u00a0fixable\u00a0by\u00a0neither\u00a0us\u00a0nor\u00a0users)\u00a0to\u00a0link\u00a0properly\u00a0with\u00a0functions<br />\n-\u00a0\u00a0\u00a0\u00a0declared\u00a0using\u00a0C\u00a0types\u00a0defined\u00a0in\u00a0properly-namespaced\u00a0headers.\u00a0The<br />\n-\u00a0\u00a0\u00a0\u00a0problem\u00a0this\u00a0solves\u00a0is\u00a0that\u00a0C\u00a0headers\u00a0(which\u00a0C++\u00a0programmers\u00a0do\u00a0persist<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0using)\u00a0frequently\u00a0forward-declare\u00a0C\u00a0struct\u00a0tags\u00a0without\u00a0including<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0header\u00a0where\u00a0the\u00a0type\u00a0is\u00a0defined,\u00a0as\u00a0in<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0struct\u00a0tm;<br />\n-\u00a0\u00a0\u00a0\u00a0void\u00a0munge(tm*);<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Without\u00a0some\u00a0compiler\u00a0accommodation,\u00a0munge\u00a0cannot\u00a0be\u00a0called\u00a0by\u00a0correct<br />\n-\u00a0\u00a0\u00a0\u00a0C++\u00a0code\u00a0using\u00a0a\u00a0pointer\u00a0to\u00a0a\u00a0correctly-scoped\u00a0tm*\u00a0value.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0current\u00a0C\u00a0headers\u00a0use\u00a0the\u00a0preprocessor\u00a0extension\u00a0\"#include_next\",<br />\n-\u00a0\u00a0\u00a0\u00a0which\u00a0the\u00a0compiler\u00a0complains\u00a0about\u00a0when\u00a0run\u00a0\"-pedantic\".<br />\n-\u00a0\u00a0\u00a0\u00a0(Incidentally,\u00a0it\u00a0appears\u00a0that\u00a0\"-fpedantic\"\u00a0is\u00a0currently\u00a0ignored,<br />\n-\u00a0\u00a0\u00a0\u00a0probably\u00a0a\u00a0bug.)\u00a0\u00a0The\u00a0solution\u00a0in\u00a0the\u00a0C\u00a0compiler\u00a0is\u00a0to\u00a0use<br />\n-\u00a0\u00a0\u00a0\u00a0\"-isystem\"\u00a0rather\u00a0than\u00a0\"-I\",\u00a0but\u00a0unfortunately\u00a0in\u00a0g++\u00a0this\u00a0seems<br />\n-\u00a0\u00a0\u00a0\u00a0also\u00a0to\u00a0wrap\u00a0the\u00a0whole\u00a0header\u00a0in\u00a0an\u00a0'extern\u00a0\"C\"'\u00a0block,\u00a0so\u00a0it's<br />\n-\u00a0\u00a0\u00a0\u00a0unusable\u00a0for\u00a0C++\u00a0headers.\u00a0The\u00a0correct\u00a0solution\u00a0appears\u00a0to\u00a0be\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0allow\u00a0the\u00a0various\u00a0special\u00a0include-directory\u00a0options,\u00a0if\u00a0not\u00a0given<br />\n-\u00a0\u00a0\u00a0\u00a0an\u00a0argument,\u00a0to\u00a0affect\u00a0subsequent\u00a0include-directory\u00a0options\u00a0additively,<br />\n-\u00a0\u00a0\u00a0\u00a0so\u00a0that\u00a0if\u00a0one\u00a0said<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0-pedantic\u00a0-iprefix\u00a0$(prefix)\u00a0\\<br />\n-\u00a0\u00a0\u00a0\u00a0-idirafter\u00a0-ino-pedantic\u00a0-ino-extern-c\u00a0-iwithprefix\u00a0-I\u00a0g++-v3\u00a0\\<br />\n-\u00a0\u00a0\u00a0\u00a0-iwithprefix\u00a0-I\u00a0g++-v3/ext<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0compiler\u00a0would\u00a0search\u00a0$(prefix)/g++-v3\u00a0and\u00a0not\u00a0report<br />\n-\u00a0\u00a0\u00a0\u00a0pedantic\u00a0warnings\u00a0for\u00a0files\u00a0found\u00a0there,\u00a0but\u00a0treat\u00a0files\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0$(prefix)/g++-v3/ext\u00a0pedantically.\u00a0(The\u00a0undocumented\u00a0semantics<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0\"-isystem\"\u00a0in\u00a0g++\u00a0stink.\u00a0Can\u00a0they\u00a0be\u00a0rescinded?\u00a0\u00a0If\u00a0not\u00a0it<br />\n-\u00a0\u00a0\u00a0\u00a0must\u00a0be\u00a0replaced\u00a0with\u00a0something\u00a0more\u00a0rationally\u00a0behaved.)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0All\u00a0the\u00a0C\u00a0headers\u00a0need\u00a0the\u00a0treatment\u00a0above;\u00a0in\u00a0the\u00a0standard\u00a0these<br />\n-\u00a0\u00a0\u00a0\u00a0headers\u00a0are\u00a0mentioned\u00a0in\u00a0various\u00a0chapters.\u00a0Below,\u00a0I\u00a0have\u00a0only<br />\n-\u00a0\u00a0\u00a0\u00a0mentioned\u00a0those\u00a0that\u00a0present\u00a0interesting\u00a0implementation\u00a0issues.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0components\u00a0identified\u00a0as\u00a0\"mostly\u00a0complete\",\u00a0below,\u00a0have\u00a0not\u00a0been<br />\n-\u00a0\u00a0\u00a0\u00a0audited\u00a0for\u00a0conformance.\u00a0In\u00a0many\u00a0cases\u00a0where\u00a0the\u00a0library\u00a0passes<br />\n-\u00a0\u00a0\u00a0\u00a0conformance\u00a0tests\u00a0we\u00a0have\u00a0non-conforming\u00a0extensions\u00a0that\u00a0must\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0wrapped\u00a0in\u00a0#if\u00a0guards\u00a0for\u00a0\"pedantic\"\u00a0use,\u00a0and\u00a0in\u00a0some\u00a0cases\u00a0renamed<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0a\u00a0conforming\u00a0way\u00a0for\u00a0continued\u00a0use\u00a0in\u00a0the\u00a0implementation\u00a0regardless<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0conformance\u00a0flags.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0STL\u00a0portion\u00a0of\u00a0the\u00a0library\u00a0still\u00a0depends\u00a0on\u00a0a\u00a0header<br />\n-\u00a0\u00a0\u00a0\u00a0stl/bits/stl_config.h\u00a0full\u00a0of\u00a0#ifdef\u00a0clauses.\u00a0This\u00a0apparatus<br />\n-\u00a0\u00a0\u00a0\u00a0should\u00a0be\u00a0replaced\u00a0with\u00a0autoconf/automake\u00a0machinery.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0SGI\u00a0STL\u00a0defines\u00a0a\u00a0type_traits&lt;&gt;\u00a0template,\u00a0specialized\u00a0for<br />\n-\u00a0\u00a0\u00a0\u00a0many\u00a0types\u00a0in\u00a0their\u00a0code\u00a0including\u00a0the\u00a0built-in\u00a0numeric\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0pointer\u00a0types\u00a0and\u00a0some\u00a0library\u00a0types,\u00a0to\u00a0direct\u00a0optimizations\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0standard\u00a0functions.\u00a0The\u00a0SGI\u00a0compiler\u00a0has\u00a0been\u00a0extended\u00a0to\u00a0generate<br />\n-\u00a0\u00a0\u00a0\u00a0specializations\u00a0of\u00a0this\u00a0template\u00a0automatically\u00a0for\u00a0user\u00a0types,<br />\n-\u00a0\u00a0\u00a0\u00a0so\u00a0that\u00a0use\u00a0of\u00a0STL\u00a0templates\u00a0on\u00a0user\u00a0types\u00a0can\u00a0take\u00a0advantage\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0these\u00a0optimizations.\u00a0Specializations\u00a0for\u00a0other,\u00a0non-STL,\u00a0types<br />\n-\u00a0\u00a0\u00a0\u00a0would\u00a0make\u00a0more\u00a0optimizations\u00a0possible,\u00a0but\u00a0extending\u00a0the\u00a0gcc<br />\n-\u00a0\u00a0\u00a0\u00a0compiler\u00a0in\u00a0the\u00a0same\u00a0way\u00a0would\u00a0be\u00a0much\u00a0better.\u00a0Probably\u00a0the\u00a0next<br />\n-\u00a0\u00a0\u00a0\u00a0round\u00a0of\u00a0standardization\u00a0will\u00a0ratify\u00a0this,\u00a0but\u00a0probably\u00a0with<br />\n-\u00a0\u00a0\u00a0\u00a0changes,\u00a0so\u00a0it\u00a0probably\u00a0should\u00a0be\u00a0renamed\u00a0to\u00a0place\u00a0it\u00a0in\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0implementation\u00a0namespace.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0SGI\u00a0STL\u00a0also\u00a0defines\u00a0a\u00a0large\u00a0number\u00a0of\u00a0extensions\u00a0visible\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0standard\u00a0headers.\u00a0(Other\u00a0extensions\u00a0that\u00a0appear\u00a0in\u00a0separate\u00a0headers<br />\n-\u00a0\u00a0\u00a0\u00a0have\u00a0been\u00a0sequestered\u00a0in\u00a0subdirectories\u00a0ext/\u00a0and\u00a0backward/.)\u00a0\u00a0All<br />\n-\u00a0\u00a0\u00a0\u00a0these\u00a0extensions\u00a0should\u00a0be\u00a0moved\u00a0to\u00a0other\u00a0headers\u00a0where\u00a0possible,<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0in\u00a0any\u00a0case\u00a0wrapped\u00a0in\u00a0a\u00a0namespace\u00a0(not\u00a0std!),\u00a0and\u00a0(where\u00a0kept<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0a\u00a0standard\u00a0header)\u00a0girded\u00a0about\u00a0with\u00a0macro\u00a0guards.\u00a0Some\u00a0cannot\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0moved\u00a0out\u00a0of\u00a0standard\u00a0headers\u00a0because\u00a0they\u00a0are\u00a0used\u00a0to\u00a0implement<br />\n-\u00a0\u00a0\u00a0\u00a0standard\u00a0features.\u00a0\u00a0The\u00a0canonical\u00a0method\u00a0for\u00a0accommodating\u00a0these<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0to\u00a0use\u00a0a\u00a0protected\u00a0name,\u00a0aliased\u00a0in\u00a0macro\u00a0guards\u00a0to\u00a0a\u00a0user-space<br />\n-\u00a0\u00a0\u00a0\u00a0name.\u00a0Unfortunately\u00a0C++\u00a0offers\u00a0no\u00a0satisfactory\u00a0template\u00a0typedef<br />\n-\u00a0\u00a0\u00a0\u00a0mechanism,\u00a0so\u00a0very\u00a0ad-hoc\u00a0and\u00a0unsatisfactory\u00a0aliasing\u00a0must\u00a0be\u00a0used<br />\n-\u00a0\u00a0\u00a0\u00a0instead.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Implementation\u00a0of\u00a0a\u00a0template\u00a0typedef\u00a0mechanism\u00a0should\u00a0have\u00a0the\u00a0highest<br />\n-\u00a0\u00a0\u00a0\u00a0priority\u00a0among\u00a0possible\u00a0extensions,\u00a0on\u00a0the\u00a0same\u00a0level\u00a0as\u00a0implementation<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0the\u00a0template\u00a0\"export\"\u00a0feature.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a018\u00a0\u00a0Language\u00a0support<br />\n-\u00a0\u00a0\u00a0\u00a0----------------------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;limits&gt;\u00a0&lt;new&gt;\u00a0&lt;typeinfo&gt;\u00a0&lt;exception&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0headers:\u00a0&lt;cstddef&gt;\u00a0&lt;climits&gt;\u00a0&lt;cfloat&gt;\u00a0\u00a0&lt;cstdarg&gt;\u00a0&lt;csetjmp&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;ctime&gt;\u00a0\u00a0\u00a0&lt;csignal&gt;\u00a0&lt;cstdlib&gt;\u00a0(also\u00a021,\u00a025,\u00a026)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0This\u00a0defines\u00a0the\u00a0built-in\u00a0exceptions,\u00a0rtti,\u00a0numeric_limits&lt;&gt;,<br />\n-\u00a0\u00a0\u00a0\u00a0operator\u00a0new\u00a0and\u00a0delete.\u00a0Much\u00a0of\u00a0this\u00a0is\u00a0provided\u00a0by\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0compiler\u00a0in\u00a0its\u00a0static\u00a0runtime\u00a0library.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Work\u00a0to\u00a0do\u00a0includes\u00a0defining\u00a0numeric_limits&lt;&gt;\u00a0specializations\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0separate\u00a0files\u00a0for\u00a0all\u00a0target\u00a0architectures.\u00a0Values\u00a0for\u00a0integer\u00a0types<br />\n-\u00a0\u00a0\u00a0\u00a0except\u00a0for\u00a0bool\u00a0and\u00a0wchar_t\u00a0are\u00a0readily\u00a0obtained\u00a0from\u00a0the\u00a0C\u00a0header<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;limits.h&gt;,\u00a0but\u00a0values\u00a0for\u00a0the\u00a0remaining\u00a0numeric\u00a0types\u00a0(bool,\u00a0wchar_t,<br />\n-\u00a0\u00a0\u00a0\u00a0float,\u00a0double,\u00a0long\u00a0double)\u00a0must\u00a0be\u00a0entered\u00a0manually.\u00a0This\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0largely\u00a0dog\u00a0work\u00a0except\u00a0for\u00a0those\u00a0members\u00a0whose\u00a0values\u00a0are\u00a0not<br />\n-\u00a0\u00a0\u00a0\u00a0easily\u00a0deduced\u00a0from\u00a0available\u00a0documentation.\u00a0Also,\u00a0this\u00a0involves<br />\n-\u00a0\u00a0\u00a0\u00a0some\u00a0work\u00a0in\u00a0target\u00a0configuration\u00a0to\u00a0identify\u00a0the\u00a0correct\u00a0choice\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0file\u00a0to\u00a0build\u00a0against\u00a0and\u00a0to\u00a0install.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0definitions\u00a0of\u00a0the\u00a0various\u00a0operators\u00a0new\u00a0and\u00a0delete\u00a0must\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0made\u00a0thread-safe,\u00a0which\u00a0depends\u00a0on\u00a0a\u00a0portable\u00a0exclusion\u00a0mechanism,<br />\n-\u00a0\u00a0\u00a0\u00a0discussed\u00a0under\u00a0chapter\u00a020.\u00a0\u00a0Of\u00a0course\u00a0there\u00a0is\u00a0always\u00a0plenty\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0room\u00a0for\u00a0improvements\u00a0to\u00a0the\u00a0speed\u00a0of\u00a0operators\u00a0new\u00a0and\u00a0delete.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;cstdarg&gt;,\u00a0in\u00a0Glibc,\u00a0defines\u00a0some\u00a0macros\u00a0that\u00a0gcc\u00a0does\u00a0not\u00a0allow\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0be\u00a0wrapped\u00a0into\u00a0an\u00a0inline\u00a0function.\u00a0Probably\u00a0this\u00a0header\u00a0will\u00a0demand<br />\n-\u00a0\u00a0\u00a0\u00a0attention\u00a0whenever\u00a0a\u00a0new\u00a0target\u00a0is\u00a0chosen.\u00a0The\u00a0functions\u00a0atexit(),<br />\n-\u00a0\u00a0\u00a0\u00a0exit(),\u00a0and\u00a0abort()\u00a0in\u00a0cstdlib\u00a0have\u00a0different\u00a0semantics\u00a0in\u00a0C++,\u00a0so<br />\n-\u00a0\u00a0\u00a0\u00a0must\u00a0be\u00a0re-implemented\u00a0for\u00a0C++.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a019\u00a0\u00a0Diagnostics<br />\n-\u00a0\u00a0\u00a0\u00a0-----------------------<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;stdexcept&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0headers:\u00a0&lt;cassert&gt;\u00a0&lt;cerrno&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0This\u00a0defines\u00a0the\u00a0standard\u00a0exception\u00a0objects,\u00a0which\u00a0are\u00a0\"mostly\u00a0complete\".<br />\n-\u00a0\u00a0\u00a0\u00a0Cygnus\u00a0has\u00a0a\u00a0version,\u00a0and\u00a0now\u00a0SGI\u00a0provides\u00a0a\u00a0slightly\u00a0different\u00a0one.<br />\n-\u00a0\u00a0\u00a0\u00a0It\u00a0makes\u00a0little\u00a0difference\u00a0which\u00a0we\u00a0use.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0C\u00a0global\u00a0name\u00a0\"errno\",\u00a0which\u00a0C\u00a0allows\u00a0to\u00a0be\u00a0a\u00a0variable\u00a0or\u00a0a\u00a0macro,<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0required\u00a0in\u00a0C++\u00a0to\u00a0be\u00a0a\u00a0macro.\u00a0For\u00a0MT\u00a0it\u00a0must\u00a0typically\u00a0result\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0a\u00a0function\u00a0call.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a020\u00a0\u00a0Utilities<br />\n-\u00a0\u00a0\u00a0\u00a0---------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;utility&gt;\u00a0&lt;functional&gt;\u00a0&lt;memory&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0header:\u00a0&lt;ctime&gt;\u00a0(also\u00a0in\u00a018)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0SGI\u00a0STL\u00a0provides\u00a0\"mostly\u00a0complete\"\u00a0versions\u00a0of\u00a0all\u00a0the\u00a0components<br />\n-\u00a0\u00a0\u00a0\u00a0defined\u00a0in\u00a0this\u00a0chapter.\u00a0However,\u00a0the\u00a0auto_ptr&lt;&gt;\u00a0implementation<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0known\u00a0to\u00a0be\u00a0wrong.\u00a0Furthermore,\u00a0the\u00a0standard\u00a0definition\u00a0of\u00a0it<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0known\u00a0to\u00a0be\u00a0unimplementable\u00a0as\u00a0written.\u00a0A\u00a0minor\u00a0change\u00a0to\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0standard\u00a0would\u00a0fix\u00a0it,\u00a0and\u00a0auto_ptr&lt;&gt;\u00a0should\u00a0be\u00a0adjusted\u00a0to\u00a0match.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Multi-threading\u00a0affects\u00a0the\u00a0allocator\u00a0implementation,\u00a0and\u00a0there\u00a0must<br />\n-\u00a0\u00a0\u00a0\u00a0be\u00a0configuration/installation\u00a0choices\u00a0for\u00a0different\u00a0users'\u00a0MT<br />\n-\u00a0\u00a0\u00a0\u00a0requirements.\u00a0Anyway,\u00a0users\u00a0will\u00a0want\u00a0to\u00a0tune\u00a0allocator\u00a0options<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0support\u00a0different\u00a0target\u00a0conditions,\u00a0MT\u00a0or\u00a0no.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0primitives\u00a0used\u00a0for\u00a0MT\u00a0implementation\u00a0should\u00a0be\u00a0exposed,\u00a0as\u00a0an<br />\n-\u00a0\u00a0\u00a0\u00a0extension,\u00a0for\u00a0users'\u00a0own\u00a0work.\u00a0We\u00a0need\u00a0cross-CPU\u00a0\"mutex\"\u00a0support,<br />\n-\u00a0\u00a0\u00a0\u00a0multi-processor\u00a0shared-memory\u00a0atomic\u00a0integer\u00a0operations,\u00a0and\u00a0single-<br />\n-\u00a0\u00a0\u00a0\u00a0processor\u00a0uninterruptible\u00a0integer\u00a0operations,\u00a0and\u00a0all\u00a0three\u00a0configurable<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0be\u00a0stubbed\u00a0out\u00a0for\u00a0non-MT\u00a0use,\u00a0or\u00a0to\u00a0use\u00a0an\u00a0appropriately-loaded<br />\n-\u00a0\u00a0\u00a0\u00a0dynamic\u00a0library\u00a0for\u00a0the\u00a0actual\u00a0runtime\u00a0environment,\u00a0or\u00a0statically<br />\n-\u00a0\u00a0\u00a0\u00a0compiled\u00a0in\u00a0for\u00a0cases\u00a0where\u00a0the\u00a0target\u00a0architecture\u00a0is\u00a0known.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a021\u00a0\u00a0String<br />\n-\u00a0\u00a0\u00a0\u00a0------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;string&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0headers:\u00a0&lt;cctype&gt;\u00a0&lt;cwctype&gt;\u00a0&lt;cstring&gt;\u00a0&lt;cwchar&gt;\u00a0(also\u00a0in\u00a027)<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;cstdlib&gt;\u00a0(also\u00a0in\u00a018,\u00a025,\u00a026)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0We\u00a0have\u00a0\"mostly-complete\"\u00a0char_traits&lt;&gt;\u00a0implementations.\u00a0Many\u00a0of\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0char_traits&lt;char&gt;\u00a0operations\u00a0might\u00a0be\u00a0optimized\u00a0further\u00a0using\u00a0existing<br />\n-\u00a0\u00a0\u00a0\u00a0proprietary\u00a0language\u00a0extensions.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0We\u00a0have\u00a0a\u00a0\"mostly-complete\"\u00a0basic_string&lt;&gt;\u00a0implementation.\u00a0The\u00a0work<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0manually\u00a0instantiate\u00a0char\u00a0and\u00a0wchar_t\u00a0specializations\u00a0in\u00a0object<br />\n-\u00a0\u00a0\u00a0\u00a0files\u00a0to\u00a0improve\u00a0link-time\u00a0behavior\u00a0is\u00a0extremely\u00a0unsatisfactory,<br />\n-\u00a0\u00a0\u00a0\u00a0literally\u00a0tripling\u00a0library-build\u00a0time\u00a0with\u00a0no\u00a0commensurate\u00a0improvement<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0static\u00a0program\u00a0link\u00a0sizes.\u00a0It\u00a0must\u00a0be\u00a0redone.\u00a0(Similar\u00a0work\u00a0is<br />\n-\u00a0\u00a0\u00a0\u00a0needed\u00a0for\u00a0some\u00a0components\u00a0in\u00a0chapters\u00a022\u00a0and\u00a027.)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Other\u00a0work\u00a0needed\u00a0for\u00a0strings\u00a0is\u00a0MT-safety,\u00a0as\u00a0discussed\u00a0under\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0chapter\u00a020\u00a0heading.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0standard\u00a0C\u00a0type\u00a0mbstate_t\u00a0from\u00a0&lt;cwchar&gt;\u00a0and\u00a0used\u00a0in\u00a0char_traits&lt;&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0must\u00a0be\u00a0different\u00a0in\u00a0C++\u00a0than\u00a0in\u00a0C,\u00a0because\u00a0in\u00a0C++\u00a0the\u00a0default\u00a0constructor<br />\n-\u00a0\u00a0\u00a0\u00a0value\u00a0mbstate_t()\u00a0must\u00a0be\u00a0the\u00a0\"base\"\u00a0or\u00a0\"ground\"\u00a0sequence\u00a0state.<br />\n-\u00a0\u00a0\u00a0\u00a0(According\u00a0to\u00a0the\u00a0likely\u00a0resolution\u00a0of\u00a0a\u00a0recently\u00a0raised\u00a0Core\u00a0issue,<br />\n-\u00a0\u00a0\u00a0\u00a0this\u00a0may\u00a0become\u00a0unnecessary.\u00a0However,\u00a0there\u00a0are\u00a0other\u00a0reasons\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0use\u00a0a\u00a0state\u00a0type\u00a0not\u00a0as\u00a0limited\u00a0as\u00a0whatever\u00a0the\u00a0C\u00a0library\u00a0provides.)<br />\n-\u00a0\u00a0\u00a0\u00a0If\u00a0we\u00a0might\u00a0want\u00a0to\u00a0provide\u00a0conversions\u00a0from\u00a0(e.g.)\u00a0internally-<br />\n-\u00a0\u00a0\u00a0\u00a0represented\u00a0EUC-wide\u00a0to\u00a0externally-represented\u00a0Unicode,\u00a0or\u00a0vice-<br />\n-\u00a0\u00a0\u00a0\u00a0versa,\u00a0the\u00a0mbstate_t\u00a0we\u00a0choose\u00a0will\u00a0need\u00a0to\u00a0be\u00a0more\u00a0accommodating<br />\n-\u00a0\u00a0\u00a0\u00a0than\u00a0what\u00a0might\u00a0be\u00a0provided\u00a0by\u00a0an\u00a0underlying\u00a0C\u00a0library.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0There\u00a0remain\u00a0some\u00a0basic_string\u00a0template-member\u00a0functions\u00a0which\u00a0do<br />\n-\u00a0\u00a0\u00a0\u00a0not\u00a0overload\u00a0properly\u00a0with\u00a0their\u00a0non-template\u00a0brethren.\u00a0The\u00a0infamous<br />\n-\u00a0\u00a0\u00a0\u00a0hack\u00a0akin\u00a0to\u00a0what\u00a0was\u00a0done\u00a0in\u00a0vector&lt;&gt;\u00a0is\u00a0needed,\u00a0to\u00a0conform\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a023.1.1\u00a0para\u00a010.\u00a0The\u00a0CHECKLIST\u00a0items\u00a0for\u00a0basic_string\u00a0marked\u00a0'X',<br />\n-\u00a0\u00a0\u00a0\u00a0or\u00a0incomplete,\u00a0are\u00a0so\u00a0marked\u00a0for\u00a0this\u00a0reason.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Replacing\u00a0the\u00a0string\u00a0iterators,\u00a0which\u00a0currently\u00a0are\u00a0simple\u00a0character<br />\n-\u00a0\u00a0\u00a0\u00a0pointers,\u00a0with\u00a0class\u00a0objects\u00a0would\u00a0greatly\u00a0increase\u00a0the\u00a0safety\u00a0of\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0client\u00a0interface,\u00a0and\u00a0also\u00a0permit\u00a0a\u00a0\"debug\"\u00a0mode\u00a0in\u00a0which\u00a0range,<br />\n-\u00a0\u00a0\u00a0\u00a0ownership,\u00a0and\u00a0validity\u00a0are\u00a0rigorously\u00a0checked.\u00a0The\u00a0current\u00a0use\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0raw\u00a0pointers\u00a0as\u00a0string\u00a0iterators\u00a0is\u00a0evil.\u00a0vector&lt;&gt;\u00a0iterators\u00a0need\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0same\u00a0treatment.\u00a0Note\u00a0that\u00a0the\u00a0current\u00a0implementation\u00a0freely\u00a0mixes<br />\n-\u00a0\u00a0\u00a0\u00a0pointers\u00a0and\u00a0iterators,\u00a0and\u00a0that\u00a0must\u00a0be\u00a0fixed\u00a0before\u00a0safer\u00a0iterators<br />\n-\u00a0\u00a0\u00a0\u00a0can\u00a0be\u00a0introduced.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Some\u00a0of\u00a0the\u00a0functions\u00a0in\u00a0&lt;cstring&gt;\u00a0are\u00a0different\u00a0from\u00a0the\u00a0C\u00a0version.<br />\n-\u00a0\u00a0\u00a0\u00a0generally\u00a0overloaded\u00a0on\u00a0const\u00a0and\u00a0non-const\u00a0argument\u00a0pointers.\u00a0For<br />\n-\u00a0\u00a0\u00a0\u00a0example,\u00a0in\u00a0&lt;cstring&gt;\u00a0strchr\u00a0is\u00a0overloaded.\u00a0The\u00a0functions\u00a0isupper<br />\n-\u00a0\u00a0\u00a0\u00a0etc.\u00a0in\u00a0&lt;cctype&gt;\u00a0typically\u00a0implemented\u00a0as\u00a0macros\u00a0in\u00a0C\u00a0are\u00a0functions<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0C++,\u00a0because\u00a0they\u00a0are\u00a0overloaded\u00a0with\u00a0others\u00a0of\u00a0the\u00a0same\u00a0name<br />\n-\u00a0\u00a0\u00a0\u00a0defined\u00a0in\u00a0&lt;locale&gt;.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Many\u00a0of\u00a0the\u00a0functions\u00a0required\u00a0in\u00a0&lt;cwctype&gt;\u00a0and\u00a0&lt;cwchar&gt;\u00a0cannot\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0implemented\u00a0using\u00a0underlying\u00a0C\u00a0facilities\u00a0on\u00a0intended\u00a0targets\u00a0because<br />\n-\u00a0\u00a0\u00a0\u00a0such\u00a0facilities\u00a0only\u00a0partly\u00a0exist.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a022\u00a0\u00a0Locale<br />\n-\u00a0\u00a0\u00a0\u00a0------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;locale&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0headers:\u00a0&lt;clocale&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0We\u00a0have\u00a0a\u00a0\"mostly\u00a0complete\"\u00a0class\u00a0locale,\u00a0with\u00a0the\u00a0exception\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0code\u00a0for\u00a0constructing,\u00a0and\u00a0handling\u00a0the\u00a0names\u00a0of,\u00a0named\u00a0locales.<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0ways\u00a0that\u00a0locales\u00a0are\u00a0named\u00a0(particularly\u00a0when\u00a0categories<br />\n-\u00a0\u00a0\u00a0\u00a0(e.g.\u00a0LC_TIME,\u00a0LC_COLLATE)\u00a0are\u00a0different)\u00a0varies\u00a0among\u00a0all\u00a0target<br />\n-\u00a0\u00a0\u00a0\u00a0environments.\u00a0This\u00a0code\u00a0must\u00a0be\u00a0written\u00a0in\u00a0various\u00a0versions\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0chosen\u00a0by\u00a0configuration\u00a0parameters.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Members\u00a0of\u00a0many\u00a0of\u00a0the\u00a0facets\u00a0defined\u00a0in\u00a0&lt;locale&gt;\u00a0are\u00a0stubs.\u00a0Generally,<br />\n-\u00a0\u00a0\u00a0\u00a0there\u00a0are\u00a0two\u00a0sets\u00a0of\u00a0facets:\u00a0the\u00a0base\u00a0class\u00a0facets\u00a0(which\u00a0are\u00a0supposed<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0implement\u00a0the\u00a0\"C\"\u00a0locale)\u00a0and\u00a0the\u00a0\"byname\"\u00a0facets,\u00a0which\u00a0are\u00a0supposed<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0read\u00a0files\u00a0to\u00a0determine\u00a0their\u00a0behavior.\u00a0The\u00a0base\u00a0ctype&lt;&gt;,\u00a0collate&lt;&gt;,<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0numpunct&lt;&gt;\u00a0facets\u00a0are\u00a0\"mostly\u00a0complete\",\u00a0except\u00a0that\u00a0the\u00a0table\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0bitmask\u00a0values\u00a0used\u00a0for\u00a0\"is\"\u00a0operations,\u00a0and\u00a0corresponding\u00a0mask\u00a0values,<br />\n-\u00a0\u00a0\u00a0\u00a0are\u00a0still\u00a0defined\u00a0in\u00a0libio\u00a0and\u00a0just\u00a0included/linked.\u00a0(We\u00a0will\u00a0need\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0implement\u00a0these\u00a0tables\u00a0independently,\u00a0soon,\u00a0but\u00a0should\u00a0take\u00a0advantage<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0libio\u00a0where\u00a0possible.)\u00a0\u00a0The\u00a0num_put&lt;&gt;::put\u00a0members\u00a0for\u00a0integer\u00a0types<br />\n-\u00a0\u00a0\u00a0\u00a0are\u00a0\"mostly\u00a0complete\".<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0A\u00a0complete\u00a0list\u00a0of\u00a0what\u00a0has\u00a0and\u00a0has\u00a0not\u00a0been\u00a0implemented\u00a0may\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0found\u00a0in\u00a0CHECKLIST.\u00a0However,\u00a0note\u00a0that\u00a0the\u00a0current\u00a0definition\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0codecvt&lt;wchar_t,char,mbstate_t&gt;\u00a0is\u00a0wrong.\u00a0It\u00a0should\u00a0simply\u00a0write<br />\n-\u00a0\u00a0\u00a0\u00a0out\u00a0the\u00a0raw\u00a0bytes\u00a0representing\u00a0the\u00a0wide\u00a0characters,\u00a0rather\u00a0than<br />\n-\u00a0\u00a0\u00a0\u00a0trying\u00a0to\u00a0convert\u00a0each\u00a0to\u00a0a\u00a0corresponding\u00a0single\u00a0\"char\"\u00a0value.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Some\u00a0of\u00a0the\u00a0facets\u00a0are\u00a0more\u00a0important\u00a0than\u00a0others.\u00a0Specifically,<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0members\u00a0of\u00a0ctype&lt;&gt;,\u00a0numpunct&lt;&gt;,\u00a0num_put&lt;&gt;,\u00a0and\u00a0num_get&lt;&gt;\u00a0facets<br />\n-\u00a0\u00a0\u00a0\u00a0are\u00a0used\u00a0by\u00a0other\u00a0library\u00a0facilities\u00a0defined\u00a0in\u00a0&lt;string&gt;,\u00a0&lt;istream&gt;,<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0&lt;ostream&gt;,\u00a0and\u00a0the\u00a0codecvt&lt;&gt;\u00a0facet\u00a0is\u00a0used\u00a0by\u00a0basic_filebuf&lt;&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0&lt;fstream&gt;,\u00a0so\u00a0a\u00a0conforming\u00a0iostream\u00a0implementation\u00a0depends\u00a0on<br />\n-\u00a0\u00a0\u00a0\u00a0these.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0\"long\u00a0long\"\u00a0type\u00a0eventually\u00a0must\u00a0be\u00a0supported,\u00a0but\u00a0code\u00a0mentioning<br />\n-\u00a0\u00a0\u00a0\u00a0it\u00a0should\u00a0be\u00a0wrapped\u00a0in\u00a0#if\u00a0guards\u00a0to\u00a0allow\u00a0pedantic-mode\u00a0compiling.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Performance\u00a0of\u00a0num_put&lt;&gt;\u00a0and\u00a0num_get&lt;&gt;\u00a0depend\u00a0critically\u00a0on<br />\n-\u00a0\u00a0\u00a0\u00a0caching\u00a0computed\u00a0values\u00a0in\u00a0ios_base\u00a0objects,\u00a0and\u00a0on\u00a0extensions<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0the\u00a0interface\u00a0with\u00a0streambufs.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Specifically:\u00a0retrieving\u00a0a\u00a0copy\u00a0of\u00a0the\u00a0locale\u00a0object,\u00a0extracting<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0needed\u00a0facets,\u00a0and\u00a0gathering\u00a0data\u00a0from\u00a0them,\u00a0for\u00a0each\u00a0call\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0(e.g.)\u00a0operator&lt;&lt;\u00a0would\u00a0be\u00a0prohibitively\u00a0slow.\u00a0\u00a0To\u00a0cache\u00a0format<br />\n-\u00a0\u00a0\u00a0\u00a0data\u00a0for\u00a0use\u00a0by\u00a0num_put&lt;&gt;\u00a0and\u00a0num_get&lt;&gt;\u00a0we\u00a0have\u00a0a\u00a0_Format_cache&lt;&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0object\u00a0stored\u00a0in\u00a0the\u00a0ios_base::pword()\u00a0array.\u00a0This\u00a0is\u00a0constructed<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0initialized\u00a0lazily,\u00a0and\u00a0is\u00a0organized\u00a0purely\u00a0for\u00a0utility.\u00a0It<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0discarded\u00a0when\u00a0a\u00a0new\u00a0locale\u00a0with\u00a0different\u00a0facets\u00a0is\u00a0imbued.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Using\u00a0only\u00a0the\u00a0public\u00a0interfaces\u00a0of\u00a0the\u00a0iterator\u00a0arguments\u00a0to\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0facet\u00a0functions\u00a0would\u00a0limit\u00a0performance\u00a0by\u00a0forbidding\u00a0\"vector-style\"<br />\n-\u00a0\u00a0\u00a0\u00a0character\u00a0operations.\u00a0The\u00a0streambuf\u00a0iterator\u00a0optimizations\u00a0are<br />\n-\u00a0\u00a0\u00a0\u00a0described\u00a0under\u00a0chapter\u00a024,\u00a0but\u00a0facets\u00a0can\u00a0also\u00a0bypass\u00a0the\u00a0streambuf<br />\n-\u00a0\u00a0\u00a0\u00a0iterators\u00a0via\u00a0explicit\u00a0specializations\u00a0and\u00a0operate\u00a0directly\u00a0on\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0streambufs,\u00a0and\u00a0use\u00a0extended\u00a0interfaces\u00a0to\u00a0get\u00a0direct\u00a0access\u00a0to\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0streambuf\u00a0internal\u00a0buffer\u00a0arrays.\u00a0These\u00a0extensions\u00a0are\u00a0mentioned<br />\n-\u00a0\u00a0\u00a0\u00a0under\u00a0chapter\u00a027.\u00a0These\u00a0optimizations\u00a0are\u00a0particularly\u00a0important<br />\n-\u00a0\u00a0\u00a0\u00a0for\u00a0input\u00a0parsing.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Unused\u00a0virtual\u00a0members\u00a0of\u00a0locale\u00a0facets\u00a0can\u00a0be\u00a0omitted,\u00a0as\u00a0mentioned<br />\n-\u00a0\u00a0\u00a0\u00a0above,\u00a0by\u00a0a\u00a0smart\u00a0linker.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a023\u00a0\u00a0Containers<br />\n-\u00a0\u00a0\u00a0\u00a0----------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;deque&gt;\u00a0&lt;list&gt;\u00a0&lt;queue&gt;\u00a0&lt;stack&gt;\u00a0&lt;vector&gt;\u00a0&lt;map&gt;\u00a0&lt;set&gt;\u00a0&lt;bitset&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0All\u00a0the\u00a0components\u00a0in\u00a0chapter\u00a023\u00a0are\u00a0implemented\u00a0in\u00a0the\u00a0SGI\u00a0STL.<br />\n-\u00a0\u00a0\u00a0\u00a0They\u00a0are\u00a0\"mostly\u00a0complete\";\u00a0they\u00a0include\u00a0a\u00a0large\u00a0number\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0nonconforming\u00a0extensions\u00a0which\u00a0must\u00a0be\u00a0wrapped.\u00a0Some\u00a0of\u00a0these<br />\n-\u00a0\u00a0\u00a0\u00a0are\u00a0used\u00a0internally\u00a0and\u00a0must\u00a0be\u00a0renamed\u00a0or\u00a0duplicated.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0SGI\u00a0components\u00a0are\u00a0optimized\u00a0for\u00a0large-memory\u00a0environments.\u00a0For<br />\n-\u00a0\u00a0\u00a0\u00a0embedded\u00a0targets,\u00a0different\u00a0criteria\u00a0might\u00a0be\u00a0more\u00a0appropriate.\u00a0Users<br />\n-\u00a0\u00a0\u00a0\u00a0will\u00a0want\u00a0to\u00a0be\u00a0able\u00a0to\u00a0tune\u00a0this\u00a0behavior.\u00a0We\u00a0should\u00a0provide<br />\n-\u00a0\u00a0\u00a0\u00a0ways\u00a0for\u00a0users\u00a0to\u00a0compile\u00a0the\u00a0library\u00a0with\u00a0different\u00a0memory\u00a0usage<br />\n-\u00a0\u00a0\u00a0\u00a0characteristics.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0A\u00a0lot\u00a0more\u00a0work\u00a0is\u00a0needed\u00a0on\u00a0factoring\u00a0out\u00a0common\u00a0code\u00a0from\u00a0different<br />\n-\u00a0\u00a0\u00a0\u00a0specializations\u00a0to\u00a0reduce\u00a0code\u00a0size\u00a0here\u00a0and\u00a0in\u00a0chapter\u00a025.\u00a0The<br />\n-\u00a0\u00a0\u00a0\u00a0easiest\u00a0fix\u00a0for\u00a0this\u00a0would\u00a0be\u00a0a\u00a0compiler/ABI\u00a0improvement\u00a0that\u00a0allows<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0compiler\u00a0to\u00a0recognize\u00a0when\u00a0a\u00a0specialization\u00a0depends\u00a0only\u00a0on\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0size\u00a0(or\u00a0other\u00a0gross\u00a0quality)\u00a0of\u00a0a\u00a0template\u00a0argument,\u00a0and\u00a0allow\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0linker\u00a0to\u00a0share\u00a0the\u00a0code\u00a0with\u00a0similar\u00a0specializations.\u00a0In\u00a0its<br />\n-\u00a0\u00a0\u00a0\u00a0absence,\u00a0many\u00a0of\u00a0the\u00a0algorithms\u00a0and\u00a0containers\u00a0can\u00a0be\u00a0partial-<br />\n-\u00a0\u00a0\u00a0\u00a0specialized,\u00a0at\u00a0least\u00a0for\u00a0the\u00a0case\u00a0of\u00a0pointers,\u00a0but\u00a0this\u00a0only\u00a0solves<br />\n-\u00a0\u00a0\u00a0\u00a0a\u00a0small\u00a0part\u00a0of\u00a0the\u00a0problem.\u00a0Use\u00a0of\u00a0a\u00a0type_traits-style\u00a0template<br />\n-\u00a0\u00a0\u00a0\u00a0allows\u00a0a\u00a0few\u00a0more\u00a0optimization\u00a0opportunities,\u00a0more\u00a0if\u00a0the\u00a0compiler<br />\n-\u00a0\u00a0\u00a0\u00a0can\u00a0generate\u00a0the\u00a0specializations\u00a0automatically.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0As\u00a0an\u00a0optimization,\u00a0containers\u00a0can\u00a0specialize\u00a0on\u00a0the\u00a0default\u00a0allocator<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0bypass\u00a0it,\u00a0or\u00a0take\u00a0advantage\u00a0of\u00a0details\u00a0of\u00a0its\u00a0implementation<br />\n-\u00a0\u00a0\u00a0\u00a0after\u00a0it\u00a0has\u00a0been\u00a0improved\u00a0upon.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Replacing\u00a0the\u00a0vector\u00a0iterators,\u00a0which\u00a0currently\u00a0are\u00a0simple\u00a0element<br />\n-\u00a0\u00a0\u00a0\u00a0pointers,\u00a0with\u00a0class\u00a0objects\u00a0would\u00a0greatly\u00a0increase\u00a0the\u00a0safety\u00a0of\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0client\u00a0interface,\u00a0and\u00a0also\u00a0permit\u00a0a\u00a0\"debug\"\u00a0mode\u00a0in\u00a0which\u00a0range,<br />\n-\u00a0\u00a0\u00a0\u00a0ownership,\u00a0and\u00a0validity\u00a0are\u00a0rigorously\u00a0checked.\u00a0The\u00a0current\u00a0use\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0pointers\u00a0for\u00a0iterators\u00a0is\u00a0evil.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0As\u00a0mentioned\u00a0for\u00a0chapter\u00a024,\u00a0the\u00a0deque\u00a0iterator\u00a0is\u00a0a\u00a0good\u00a0example\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0an\u00a0opportunity\u00a0to\u00a0implement\u00a0a\u00a0\"staged\"\u00a0iterator\u00a0that\u00a0would\u00a0benefit<br />\n-\u00a0\u00a0\u00a0\u00a0from\u00a0specializations\u00a0of\u00a0some\u00a0algorithms.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a024\u00a0\u00a0Iterators<br />\n-\u00a0\u00a0\u00a0\u00a0---------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;iterator&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Standard\u00a0iterators\u00a0are\u00a0\"mostly\u00a0complete\",\u00a0with\u00a0the\u00a0exception\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0stream\u00a0iterators,\u00a0which\u00a0are\u00a0not\u00a0yet\u00a0templatized\u00a0on\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0stream\u00a0type.\u00a0Also,\u00a0the\u00a0base\u00a0class\u00a0template\u00a0iterator&lt;&gt;\u00a0appears<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0be\u00a0wrong,\u00a0so\u00a0everything\u00a0derived\u00a0from\u00a0it\u00a0must\u00a0also\u00a0be\u00a0wrong,<br />\n-\u00a0\u00a0\u00a0\u00a0currently.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0streambuf\u00a0iterators\u00a0(currently\u00a0located\u00a0in\u00a0stl/bits/std_iterator.h,<br />\n-\u00a0\u00a0\u00a0\u00a0but\u00a0should\u00a0be\u00a0under\u00a0bits/)\u00a0can\u00a0be\u00a0rewritten\u00a0to\u00a0take\u00a0advantage\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0friendship\u00a0with\u00a0the\u00a0streambuf\u00a0implementation.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Matt\u00a0Austern\u00a0has\u00a0identified\u00a0opportunities\u00a0where\u00a0certain\u00a0iterator<br />\n-\u00a0\u00a0\u00a0\u00a0types,\u00a0particularly\u00a0including\u00a0streambuf\u00a0iterators\u00a0and\u00a0deque<br />\n-\u00a0\u00a0\u00a0\u00a0iterators,\u00a0have\u00a0a\u00a0\"two-stage\"\u00a0quality,\u00a0such\u00a0that\u00a0an\u00a0intermediate<br />\n-\u00a0\u00a0\u00a0\u00a0limit\u00a0can\u00a0be\u00a0checked\u00a0much\u00a0more\u00a0quickly\u00a0than\u00a0the\u00a0true\u00a0limit\u00a0on<br />\n-\u00a0\u00a0\u00a0\u00a0range\u00a0operations.\u00a0If\u00a0identified\u00a0with\u00a0a\u00a0member\u00a0of\u00a0iterator_traits,<br />\n-\u00a0\u00a0\u00a0\u00a0algorithms\u00a0may\u00a0be\u00a0specialized\u00a0for\u00a0this\u00a0case.\u00a0Of\u00a0course\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0iterators\u00a0that\u00a0have\u00a0this\u00a0quality\u00a0can\u00a0be\u00a0identified\u00a0by\u00a0specializing<br />\n-\u00a0\u00a0\u00a0\u00a0a\u00a0traits\u00a0class.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Many\u00a0of\u00a0the\u00a0algorithms\u00a0must\u00a0be\u00a0specialized\u00a0for\u00a0the\u00a0streambuf<br />\n-\u00a0\u00a0\u00a0\u00a0iterators,\u00a0to\u00a0take\u00a0advantage\u00a0of\u00a0block-mode\u00a0operations,\u00a0in\u00a0order<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0allow\u00a0iostream/locale\u00a0operations'\u00a0performance\u00a0not\u00a0to\u00a0suffer.<br />\n-\u00a0\u00a0\u00a0\u00a0It\u00a0may\u00a0be\u00a0that\u00a0they\u00a0could\u00a0be\u00a0treated\u00a0as\u00a0staged\u00a0iterators\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0take\u00a0advantage\u00a0of\u00a0those\u00a0optimizations.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a025\u00a0\u00a0Algorithms<br />\n-\u00a0\u00a0\u00a0\u00a0----------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;algorithm&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0headers:\u00a0&lt;cstdlib&gt;\u00a0(also\u00a0in\u00a018,\u00a021,\u00a026))<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0algorithms\u00a0are\u00a0\"mostly\u00a0complete\".\u00a0As\u00a0mentioned\u00a0above,\u00a0they<br />\n-\u00a0\u00a0\u00a0\u00a0are\u00a0optimized\u00a0for\u00a0speed\u00a0at\u00a0the\u00a0expense\u00a0of\u00a0code\u00a0and\u00a0data\u00a0size.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Specializations\u00a0of\u00a0many\u00a0of\u00a0the\u00a0algorithms\u00a0for\u00a0non-STL\u00a0types\u00a0would<br />\n-\u00a0\u00a0\u00a0\u00a0give\u00a0performance\u00a0improvements,\u00a0but\u00a0we\u00a0must\u00a0use\u00a0great\u00a0care\u00a0not\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0interfere\u00a0with\u00a0fragile\u00a0template\u00a0overloading\u00a0semantics\u00a0for\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0standard\u00a0interfaces.\u00a0Conventionally\u00a0the\u00a0standard\u00a0function\u00a0template<br />\n-\u00a0\u00a0\u00a0\u00a0interface\u00a0is\u00a0an\u00a0inline\u00a0which\u00a0delegates\u00a0to\u00a0a\u00a0non-standard\u00a0function<br />\n-\u00a0\u00a0\u00a0\u00a0which\u00a0is\u00a0then\u00a0overloaded\u00a0(this\u00a0is\u00a0already\u00a0done\u00a0in\u00a0many\u00a0places\u00a0in<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0library).\u00a0Particularly\u00a0appealing\u00a0opportunities\u00a0for\u00a0the\u00a0sake\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0iostream\u00a0performance\u00a0are\u00a0for\u00a0copy\u00a0and\u00a0find\u00a0applied\u00a0to\u00a0streambuf<br />\n-\u00a0\u00a0\u00a0\u00a0iterators\u00a0or\u00a0(as\u00a0noted\u00a0elsewhere)\u00a0for\u00a0staged\u00a0iterators,\u00a0of\u00a0which<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0streambuf\u00a0iterators\u00a0are\u00a0a\u00a0good\u00a0example.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0bsearch\u00a0and\u00a0qsort\u00a0functions\u00a0cannot\u00a0be\u00a0overloaded\u00a0properly\u00a0as<br />\n-\u00a0\u00a0\u00a0\u00a0required\u00a0by\u00a0the\u00a0standard\u00a0because\u00a0gcc\u00a0does\u00a0not\u00a0yet\u00a0allow\u00a0overloading<br />\n-\u00a0\u00a0\u00a0\u00a0on\u00a0the\u00a0extern-\"C\"-ness\u00a0of\u00a0a\u00a0function\u00a0pointer.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a026\u00a0\u00a0Numerics<br />\n-\u00a0\u00a0\u00a0\u00a0--------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;complex&gt;\u00a0&lt;valarray&gt;\u00a0&lt;numeric&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0headers:\u00a0&lt;cmath&gt;,\u00a0&lt;cstdlib&gt;\u00a0(also\u00a018,\u00a021,\u00a025)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Numeric\u00a0components:\u00a0Gabriel\u00a0dos\u00a0Reis's\u00a0valarray,\u00a0Drepper's\u00a0complex,<br />\n-\u00a0\u00a0\u00a0\u00a0and\u00a0the\u00a0few\u00a0algorithms\u00a0from\u00a0the\u00a0STL\u00a0are\u00a0\"mostly\u00a0done\".\u00a0\u00a0Of\u00a0course<br />\n-\u00a0\u00a0\u00a0\u00a0optimization\u00a0opportunities\u00a0abound\u00a0for\u00a0the\u00a0numerically\u00a0literate.\u00a0It<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0not\u00a0clear\u00a0whether\u00a0the\u00a0valarray\u00a0implementation\u00a0really\u00a0conforms<br />\n-\u00a0\u00a0\u00a0\u00a0fully,\u00a0in\u00a0the\u00a0assumptions\u00a0it\u00a0makes\u00a0about\u00a0aliasing\u00a0(and\u00a0lack\u00a0thereof)<br />\n-\u00a0\u00a0\u00a0\u00a0in\u00a0its\u00a0arguments.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0C\u00a0div()\u00a0and\u00a0ldiv()\u00a0functions\u00a0are\u00a0interesting,\u00a0because\u00a0they\u00a0are\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0only\u00a0case\u00a0where\u00a0a\u00a0C\u00a0library\u00a0function\u00a0returns\u00a0a\u00a0class\u00a0object\u00a0by\u00a0value.<br />\n-\u00a0\u00a0\u00a0\u00a0Since\u00a0the\u00a0C++\u00a0type\u00a0div_t\u00a0must\u00a0be\u00a0different\u00a0from\u00a0the\u00a0underlying\u00a0C\u00a0type<br />\n-\u00a0\u00a0\u00a0\u00a0(which\u00a0is\u00a0in\u00a0the\u00a0wrong\u00a0namespace)\u00a0the\u00a0underlying\u00a0functions\u00a0div()\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0ldiv()\u00a0cannot\u00a0be\u00a0re-used\u00a0efficiently.\u00a0Fortunately\u00a0they\u00a0are\u00a0trivial\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0re-implement.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Chapter\u00a027\u00a0\u00a0Iostreams<br />\n-\u00a0\u00a0\u00a0\u00a0---------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;iosfwd&gt;\u00a0&lt;streambuf&gt;\u00a0&lt;ios&gt;\u00a0&lt;ostream&gt;\u00a0&lt;istream&gt;\u00a0&lt;iostream&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;iomanip&gt;\u00a0&lt;sstream&gt;\u00a0&lt;fstream&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0C\u00a0headers:\u00a0&lt;cstdio&gt;\u00a0&lt;cwchar&gt;\u00a0(also\u00a0in\u00a021)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Iostream\u00a0is\u00a0currently\u00a0in\u00a0a\u00a0very\u00a0incomplete\u00a0state.\u00a0&lt;iosfwd&gt;,\u00a0&lt;iomanip&gt;,<br />\n-\u00a0\u00a0\u00a0\u00a0ios_base,\u00a0and\u00a0basic_ios&lt;&gt;\u00a0are\u00a0\"mostly\u00a0complete\".\u00a0basic_streambuf&lt;&gt;\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0basic_ostream&lt;&gt;\u00a0are\u00a0well\u00a0along,\u00a0but\u00a0basic_istream&lt;&gt;\u00a0has\u00a0had\u00a0little\u00a0work<br />\n-\u00a0\u00a0\u00a0\u00a0done.\u00a0The\u00a0standard\u00a0stream\u00a0objects,\u00a0&lt;sstream&gt;\u00a0and\u00a0&lt;fstream&gt;\u00a0have\u00a0been<br />\n-\u00a0\u00a0\u00a0\u00a0started;\u00a0basic_filebuf&lt;&gt;\u00a0\"write\"\u00a0functions\u00a0have\u00a0been\u00a0implemented\u00a0just<br />\n-\u00a0\u00a0\u00a0\u00a0enough\u00a0to\u00a0do\u00a0\"hello,\u00a0world\".<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Most\u00a0of\u00a0the\u00a0istream\u00a0and\u00a0ostream\u00a0operators\u00a0&lt;&lt;\u00a0and\u00a0&gt;&gt;\u00a0(with\u00a0the\u00a0exception<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0the\u00a0op&lt;&lt;(integer)\u00a0ones)\u00a0have\u00a0not\u00a0been\u00a0changed\u00a0to\u00a0use\u00a0locale\u00a0primitives,<br />\n-\u00a0\u00a0\u00a0\u00a0sentry\u00a0objects,\u00a0or\u00a0char_traits\u00a0members.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0All\u00a0these\u00a0templates\u00a0should\u00a0be\u00a0manually\u00a0instantiated\u00a0for\u00a0char\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0wchar_t\u00a0in\u00a0a\u00a0way\u00a0that\u00a0links\u00a0only\u00a0used\u00a0members\u00a0into\u00a0user\u00a0programs.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Streambuf\u00a0is\u00a0fertile\u00a0ground\u00a0for\u00a0optimization\u00a0extensions.\u00a0An\u00a0extended<br />\n-\u00a0\u00a0\u00a0\u00a0interface\u00a0giving\u00a0iterator\u00a0access\u00a0to\u00a0its\u00a0internal\u00a0buffer\u00a0would\u00a0be\u00a0very<br />\n-\u00a0\u00a0\u00a0\u00a0useful\u00a0for\u00a0other\u00a0library\u00a0components.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Iostream\u00a0operations\u00a0(primarily\u00a0operators\u00a0&lt;&lt;\u00a0and\u00a0&gt;&gt;)\u00a0can\u00a0take\u00a0advantage<br />\n-\u00a0\u00a0\u00a0\u00a0of\u00a0the\u00a0case\u00a0where\u00a0user\u00a0code\u00a0has\u00a0not\u00a0specified\u00a0a\u00a0locale,\u00a0and\u00a0bypass\u00a0locale<br />\n-\u00a0\u00a0\u00a0\u00a0operations\u00a0entirely.\u00a0The\u00a0current\u00a0implementation\u00a0of\u00a0op&lt;&lt;/num_put&lt;&gt;::put,<br />\n-\u00a0\u00a0\u00a0\u00a0for\u00a0the\u00a0integer\u00a0types,\u00a0demonstrates\u00a0how\u00a0they\u00a0can\u00a0cache\u00a0encoding\u00a0details<br />\n-\u00a0\u00a0\u00a0\u00a0from\u00a0the\u00a0locale\u00a0on\u00a0each\u00a0operation.\u00a0There\u00a0is\u00a0lots\u00a0more\u00a0room\u00a0for<br />\n-\u00a0\u00a0\u00a0\u00a0optimization\u00a0in\u00a0this\u00a0area.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0definition\u00a0of\u00a0the\u00a0relationship\u00a0between\u00a0the\u00a0standard\u00a0streams<br />\n-\u00a0\u00a0\u00a0\u00a0cout\u00a0et\u00a0al.\u00a0and\u00a0stdout\u00a0et\u00a0al.\u00a0requires\u00a0something\u00a0like\u00a0a\u00a0\"stdiobuf\".<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0SGI\u00a0solution\u00a0of\u00a0using\u00a0double-indirection\u00a0to\u00a0actually\u00a0use\u00a0a<br />\n-\u00a0\u00a0\u00a0\u00a0stdio\u00a0FILE\u00a0object\u00a0for\u00a0buffering\u00a0is\u00a0unsatisfactory,\u00a0because\u00a0it<br />\n-\u00a0\u00a0\u00a0\u00a0interferes\u00a0with\u00a0peephole\u00a0loop\u00a0optimizations.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0&lt;sstream&gt;\u00a0header\u00a0work\u00a0has\u00a0begun.\u00a0stringbuf\u00a0can\u00a0benefit\u00a0from<br />\n-\u00a0\u00a0\u00a0\u00a0friendship\u00a0with\u00a0basic_string&lt;&gt;\u00a0and\u00a0basic_string&lt;&gt;::_Rep\u00a0to\u00a0use<br />\n-\u00a0\u00a0\u00a0\u00a0those\u00a0objects\u00a0directly\u00a0as\u00a0buffers,\u00a0and\u00a0avoid\u00a0allocating\u00a0and\u00a0making<br />\n-\u00a0\u00a0\u00a0\u00a0copies.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0basic_filebuf&lt;&gt;\u00a0template\u00a0is\u00a0a\u00a0complex\u00a0beast.\u00a0It\u00a0is\u00a0specified\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0use\u00a0the\u00a0locale\u00a0facet\u00a0codecvt&lt;&gt;\u00a0to\u00a0translate\u00a0characters\u00a0between\u00a0native<br />\n-\u00a0\u00a0\u00a0\u00a0files\u00a0and\u00a0the\u00a0locale\u00a0character\u00a0encoding.\u00a0In\u00a0general\u00a0this\u00a0involves<br />\n-\u00a0\u00a0\u00a0\u00a0two\u00a0buffers,\u00a0one\u00a0of\u00a0\"char\"\u00a0representing\u00a0the\u00a0file\u00a0and\u00a0another\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0\"char_type\",\u00a0for\u00a0the\u00a0stream,\u00a0with\u00a0codecvt&lt;&gt;\u00a0translating.\u00a0The\u00a0process<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0complicated\u00a0by\u00a0the\u00a0variable-length\u00a0nature\u00a0of\u00a0the\u00a0translation,\u00a0and<br />\n-\u00a0\u00a0\u00a0\u00a0the\u00a0need\u00a0to\u00a0seek\u00a0to\u00a0corresponding\u00a0places\u00a0in\u00a0the\u00a0two\u00a0representations.<br />\n-\u00a0\u00a0\u00a0\u00a0For\u00a0the\u00a0case\u00a0of\u00a0basic_filebuf&lt;char&gt;,\u00a0when\u00a0no\u00a0translation\u00a0is\u00a0needed,<br />\n-\u00a0\u00a0\u00a0\u00a0a\u00a0single\u00a0buffer\u00a0suffices.\u00a0A\u00a0specialized\u00a0filebuf\u00a0can\u00a0be\u00a0used\u00a0to\u00a0reduce<br />\n-\u00a0\u00a0\u00a0\u00a0code\u00a0space\u00a0overhead\u00a0when\u00a0no\u00a0locale\u00a0has\u00a0been\u00a0imbued.\u00a0Matt\u00a0Austern's<br />\n-\u00a0\u00a0\u00a0\u00a0work\u00a0at\u00a0SGI\u00a0will\u00a0be\u00a0useful,\u00a0perhaps\u00a0directly\u00a0as\u00a0a\u00a0source\u00a0of\u00a0code,\u00a0or<br />\n-\u00a0\u00a0\u00a0\u00a0at\u00a0least\u00a0as\u00a0an\u00a0example\u00a0to\u00a0draw\u00a0on.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Filebuf,\u00a0almost\u00a0uniquely\u00a0(cf.\u00a0operator\u00a0new),\u00a0depends\u00a0heavily\u00a0on<br />\n-\u00a0\u00a0\u00a0\u00a0underlying\u00a0environmental\u00a0facilities.\u00a0In\u00a0current\u00a0releases\u00a0iostream<br />\n-\u00a0\u00a0\u00a0\u00a0depends\u00a0fairly\u00a0heavily\u00a0on\u00a0libio\u00a0constant\u00a0definitions,\u00a0but\u00a0it\u00a0should<br />\n-\u00a0\u00a0\u00a0\u00a0be\u00a0made\u00a0independent.\u00a0\u00a0It\u00a0also\u00a0depends\u00a0on\u00a0operating\u00a0system\u00a0primitives<br />\n-\u00a0\u00a0\u00a0\u00a0for\u00a0file\u00a0operations.\u00a0There\u00a0is\u00a0immense\u00a0room\u00a0for\u00a0optimizations\u00a0using<br />\n-\u00a0\u00a0\u00a0\u00a0(e.g.)\u00a0mmap\u00a0for\u00a0reading.\u00a0The\u00a0shadow/\u00a0directory\u00a0wraps,\u00a0besides\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0standard\u00a0C\u00a0headers,\u00a0the\u00a0libio.h\u00a0and\u00a0unistd.h\u00a0headers,\u00a0for\u00a0use\u00a0mainly<br />\n-\u00a0\u00a0\u00a0\u00a0by\u00a0filebuf.\u00a0These\u00a0wrappings\u00a0have\u00a0not\u00a0been\u00a0completed,\u00a0though\u00a0there<br />\n-\u00a0\u00a0\u00a0\u00a0is\u00a0scaffolding\u00a0in\u00a0place.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0The\u00a0encapsulation\u00a0of\u00a0certain\u00a0C\u00a0header\u00a0&lt;cstdio&gt;\u00a0names\u00a0presents\u00a0an<br />\n-\u00a0\u00a0\u00a0\u00a0interesting\u00a0problem.\u00a0It\u00a0is\u00a0possible\u00a0to\u00a0define\u00a0an\u00a0inline\u00a0std::fprintf()<br />\n-\u00a0\u00a0\u00a0\u00a0implemented\u00a0in\u00a0terms\u00a0of\u00a0the\u00a0'extern\u00a0\"C\"'\u00a0vfprintf(),\u00a0but\u00a0there\u00a0is\u00a0no<br />\n-\u00a0\u00a0\u00a0\u00a0standard\u00a0vfscanf()\u00a0to\u00a0use\u00a0to\u00a0implement\u00a0std::fscanf().\u00a0It\u00a0appears\u00a0that<br />\n-\u00a0\u00a0\u00a0\u00a0vfscanf\u00a0but\u00a0be\u00a0re-implemented\u00a0in\u00a0C++\u00a0for\u00a0targets\u00a0where\u00a0no\u00a0vfscanf<br />\n-\u00a0\u00a0\u00a0\u00a0extension\u00a0has\u00a0been\u00a0defined.\u00a0This\u00a0is\u00a0interesting\u00a0in\u00a0that\u00a0it\u00a0seems<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0be\u00a0the\u00a0only\u00a0significant\u00a0case\u00a0in\u00a0the\u00a0C\u00a0library\u00a0where\u00a0this\u00a0kind\u00a0of<br />\n-\u00a0\u00a0\u00a0\u00a0rewriting\u00a0is\u00a0necessary.\u00a0(Of\u00a0course\u00a0Glibc\u00a0provides\u00a0the\u00a0vfscanf()<br />\n-\u00a0\u00a0\u00a0\u00a0extension.)\u00a0\u00a0(The\u00a0functions\u00a0related\u00a0to\u00a0exit()\u00a0must\u00a0be\u00a0rewritten<br />\n-\u00a0\u00a0\u00a0\u00a0for\u00a0other\u00a0reasons.)<br />\n-<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Annex\u00a0D<br />\n-\u00a0\u00a0\u00a0\u00a0-------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;strstream&gt;<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Annex\u00a0D\u00a0defines\u00a0many\u00a0non-library\u00a0features,\u00a0and\u00a0many\u00a0minor<br />\n-\u00a0\u00a0\u00a0\u00a0modifications\u00a0to\u00a0various\u00a0headers,\u00a0and\u00a0a\u00a0complete\u00a0header.<br />\n-\u00a0\u00a0\u00a0\u00a0It\u00a0is\u00a0\"mostly\u00a0done\",\u00a0except\u00a0that\u00a0the\u00a0libstdc++-2\u00a0&lt;strstream&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0header\u00a0has\u00a0not\u00a0been\u00a0adopted\u00a0into\u00a0the\u00a0library,\u00a0or\u00a0checked\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0verify\u00a0that\u00a0it\u00a0matches\u00a0the\u00a0draft\u00a0in\u00a0those\u00a0details\u00a0that\u00a0were<br />\n-\u00a0\u00a0\u00a0\u00a0clarified\u00a0by\u00a0the\u00a0committee.\u00a0Certainly\u00a0it\u00a0must\u00a0at\u00a0least\u00a0be<br />\n-\u00a0\u00a0\u00a0\u00a0moved\u00a0into\u00a0the\u00a0std\u00a0namespace.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0We\u00a0still\u00a0need\u00a0to\u00a0wrap\u00a0all\u00a0the\u00a0deprecated\u00a0features\u00a0in\u00a0#if\u00a0guards<br />\n-\u00a0\u00a0\u00a0\u00a0so\u00a0that\u00a0pedantic\u00a0compile\u00a0modes\u00a0can\u00a0detect\u00a0their\u00a0use.<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0Nonstandard\u00a0Extensions<br />\n-\u00a0\u00a0\u00a0\u00a0----------------------<br />\n-\u00a0\u00a0\u00a0\u00a0Headers:\u00a0&lt;iostream.h&gt;\u00a0&lt;strstream.h&gt;\u00a0&lt;hash&gt;\u00a0&lt;rbtree&gt;<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;pthread_alloc&gt;\u00a0&lt;stdiobuf&gt;\u00a0(etc.)<br />\n-<br />\n-\u00a0\u00a0\u00a0\u00a0User\u00a0code\u00a0has\u00a0come\u00a0to\u00a0depend\u00a0on\u00a0a\u00a0variety\u00a0of\u00a0nonstandard\u00a0components<br />\n-\u00a0\u00a0\u00a0\u00a0that\u00a0we\u00a0must\u00a0not\u00a0omit.\u00a0Much\u00a0of\u00a0this\u00a0code\u00a0can\u00a0be\u00a0adopted\u00a0from<br />\n-\u00a0\u00a0\u00a0\u00a0libstdc++-v2\u00a0or\u00a0from\u00a0the\u00a0SGI\u00a0STL.\u00a0This\u00a0particularly\u00a0includes<br />\n-\u00a0\u00a0\u00a0\u00a0&lt;iostream.h&gt;,\u00a0&lt;strstream.h&gt;,\u00a0and\u00a0various\u00a0SGI\u00a0extensions\u00a0such<br />\n-\u00a0\u00a0\u00a0\u00a0as\u00a0&lt;hash_map.h&gt;.\u00a0Many\u00a0of\u00a0these\u00a0are\u00a0already\u00a0placed\u00a0in\u00a0the<br />\n-\u00a0\u00a0\u00a0\u00a0subdirectories\u00a0ext/\u00a0and\u00a0backward/.\u00a0(Note\u00a0that\u00a0it\u00a0is\u00a0better\u00a0to<br />\n-\u00a0\u00a0\u00a0\u00a0include\u00a0them\u00a0via\u00a0\"&lt;backward/hash_map.h&gt;\"\u00a0or\u00a0\"&lt;ext/hash_map&gt;\"\u00a0than<br />\n-\u00a0\u00a0\u00a0\u00a0to\u00a0search\u00a0the\u00a0subdirectory\u00a0itself\u00a0via\u00a0a\u00a0\"-I\"\u00a0directive.<br />\n-\u00a0\u00a0</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apas04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"appendix_contributing.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"appendix_porting.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Documentation Style\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Appendix\u00a0B.\u00a0Porting and Maintenance</td></tr></table></div></body></html>"}, {"sha": "72f1d7e8d4b601e29c69eadfb543a7971fd6e5dc", "filename": "libstdc++-v3/doc/html/manual/bk01apd.html", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apd.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apd.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apd.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,41 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0D.\u00a0GNU General Public License</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"appendix_free.html\" title=\"Appendix\u00a0C.\u00a0Free Software Needs Free Documentation\" /><link rel=\"next\" href=\"bk01apds02.html\" title=\"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0D.\u00a0GNU General Public License</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_free.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apds02.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.gpl-2.0\"></a>Appendix\u00a0D.\u00a0GNU General Public License</h2></div><div><p class=\"releaseinfo\">Version 2, June 1991</p></div><div><p class=\"copyright\">Copyright \u00a9 1989, 1991 Free Software Foundation, Inc.</p></div><div><div class=\"legalnotice\"><a id=\"gpl-legalnotice\"></a><p>\n-\t</p><div class=\"address\"><p>Free\u00a0Software\u00a0Foundation,\u00a0Inc.\u00a0<br />\n-\t\u00a0\u00a0<span class=\"street\">51\u00a0Franklin\u00a0Street,\u00a0Fifth\u00a0Floor</span>,\u00a0<br />\n-\t\u00a0\u00a0<span class=\"city\">Boston</span>,\u00a0<span class=\"state\">MA</span>\u00a0<span class=\"postcode\">02110-1301</span><br />\n-\t\u00a0\u00a0<span class=\"country\">USA</span><br />\n-\t</p></div><p>\n-      </p><p>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p></div></div><div><p class=\"pubdate\">Version 2, June 1991</p></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"section\"><a href=\"bk01apd.html#gpl-1\">Preamble</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html\">TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-0\">Section 0</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-1\">Section 1</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-2\">Section 2</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-3\">Section 3</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-4\">Section 4</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-5\">Section 5</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-6\">Section 6</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-7\">Section 7</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-8\">Section 8</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-9\">Section 9</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-10\">Section 10</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-11\">NO WARRANTY Section 11</a></span></dt><dt><span class=\"section\"><a href=\"bk01apds02.html#gpl-2-12\">Section 12</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"bk01apds03.html\">How to Apply These Terms to Your New Programs</a></span></dt></dl></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"gpl-1\"></a>Preamble</h2></div></div></div><p>The licenses for most software are designed to take away your \n-      freedom to share and change it. By contrast, the GNU General Public License is \n-      intended to guarantee your freedom to share and change \n-      free software - to make sure the software is free for all its users. \n-      This General Public License applies to most of the Free Software \n-      Foundation's software and to any other program whose authors commit \n-      to using it. (Some other Free Software Foundation software is covered \n-      by the GNU Library General Public License instead.) You can apply it \n-      to your programs, too.</p><p>When we speak of free software, we are referring to freedom, not price. \n-      Our General Public Licenses are designed to make sure that you have the \n-      freedom to distribute copies of free software (and charge for this \n-      service if you wish), that you receive source code or can get it if you \n-      want it, that you can change the software or use pieces of it in new free \n-      programs; and that you know you can do these things.</p><p>To protect your rights, we need to make restrictions that forbid anyone \n-      to deny you these rights or to ask you to surrender the rights. These \n-      restrictions translate to certain responsibilities for you if you distribute \n-      copies of the software, or if you modify it.</p><p>For example, if you distribute copies of such a program, whether gratis or \n-      for a fee, you must give the recipients all the rights that you have. You \n-      must make sure that they, too, receive or can get the source code. And you \n-      must show them these terms so they know their rights.</p><p>We protect your rights with two steps:\n-      </p><div class=\"orderedlist\"><ol type=\"1\"><li><p>copyright the software, and</p></li><li><p>offer you this license which gives you legal permission to copy, \n-\t    distribute and/or modify the software.</p></li></ol></div><p>\n-    </p><p>Also, for each author's protection and ours, we want to make certain that \n-      everyone understands that there is no warranty for this free software. If \n-      the software is modified by someone else and passed on, we want its \n-      recipients to know that what they have is not the original, so that any \n-      problems introduced by others will not reflect on the original authors' \n-      reputations.</p><p>Finally, any free program is threatened constantly by software patents. \n-      We wish to avoid the danger that redistributors of a free program will \n-      individually obtain patent licenses, in effect making the program \n-      proprietary. To prevent this, we have made it clear that any patent must be \n-      licensed for everyone's free use or not licensed at all.</p><p>The precise terms and conditions for copying, distribution and modification \n-      follow.</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"appendix_free.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apds02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0C.\u00a0Free Software Needs Free Documentation\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION</td></tr></table></div></body></html>"}, {"sha": "2a0af92067c29084880395473ff735cca64122ba", "filename": "libstdc++-v3/doc/html/manual/bk01apds02.html", "status": "removed", "additions": 0, "deletions": 129, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apds02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apds02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apds02.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,129 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01apd.html\" title=\"Appendix\u00a0D.\u00a0GNU General Public License\" /><link rel=\"prev\" href=\"bk01apd.html\" title=\"Appendix\u00a0D.\u00a0GNU General Public License\" /><link rel=\"next\" href=\"bk01apds03.html\" title=\"How to Apply These Terms to Your New Programs\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apd.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Appendix\u00a0D.\u00a0GNU General Public License</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apds03.html\">Next</a></td></tr></table><hr /></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"gpl-2\"></a>TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION</h2></div></div></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-0\"></a>Section 0</h3></div></div></div><p>This License applies to any program or other work which contains a notice \n-\tplaced by the copyright holder saying it may be distributed under the terms \n-\tof this General Public License. The \u201c<span class=\"quote\">Program</span>\u201d, below, refers to any such \n-\tprogram or work, and a \n-\t\u201c<span class=\"quote\">work based on the Program</span>\u201d means either \n-\tthe Program or any derivative work under copyright law: that is to say, a \n-\twork containing the Program or a portion of it, either verbatim or with \n-\tmodifications and/or translated into another language. (Hereinafter, translation \n-\tis included without limitation in the term \n-\t\u201c<span class=\"quote\">modification</span>\u201d.) Each licensee is addressed as \u201c<span class=\"quote\">you</span>\u201d.</p><p>Activities other than copying, distribution and modification are not covered by \n-\tthis License; they are outside its scope. The act of running the Program is not \n-\trestricted, and the output from the Program is covered only if its contents \n-\tconstitute a work based on the Program (independent of having been made by running \n-\tthe Program). Whether that is true depends on what the Program does.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-1\"></a>Section 1</h3></div></div></div><p>You may copy and distribute verbatim copies of the Program's source code as you \n-\treceive it, in any medium, provided that you conspicuously and appropriately \n-\tpublish on each copy an appropriate copyright notice and disclaimer of warranty; \n-\tkeep intact all the notices that refer to this License and to the absence of any \n-\twarranty; and give any other recipients of the Program a copy of this License \n-\talong with the Program.</p><p>You may charge a fee for the physical act of transferring a copy, and you may at \n-\tyour option offer warranty protection in exchange for a fee.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-2\"></a>Section 2</h3></div></div></div><p>You may modify your copy or copies of the Program or any portion of it, thus \n-\tforming a work based on the Program, and copy and distribute such modifications \n-\tor work under the terms of \n-\t<a class=\"link\" href=\"bk01apds02.html#gpl-2-1\" title=\"Section 1\">Section 1</a> above, provided \n-\tthat you also meet all of these conditions:\n-\t</p><div class=\"orderedlist\"><ol type=\"a\"><li><p>You must cause the modified files to carry prominent notices stating that \n-\t      you changed the files and the date of any change.</p></li><li><p>You must cause any work that you distribute or publish, that in whole or \n-\t      in part contains or is derived from the Program or any part thereof, to be \n-\t      licensed as a whole at no charge to all third parties under the terms of \n-\t      this License.</p></li><li><p>If the modified program normally reads commands interactively when run, you \n-\t      must cause it, when started running for such interactive use in the most \n-\t      ordinary way, to print or display an announcement including an appropriate \n-\t      copyright notice and a notice that there is no warranty (or else, saying \n-\t      that you provide a warranty) and that users may redistribute the program \n-\t      under these conditions, and telling the user how to view a copy of this \n-\t      License. (Exception: If the Program itself is interactive but does not \n-              normally print such an announcement, your work based on the Program is not \n-              required to print an   announcement.)</p></li></ol></div><p>\n-      </p><p>These requirements apply to the modified work as a whole. If identifiable sections \n-\tof that work are not derived from the Program, and can be reasonably considered \n-\tindependent and separate works in themselves, then this License, and its terms, \n-\tdo not apply to those sections when you distribute them as separate works. But when \n-\tyou distribute the same sections as part of a whole which is a work based on the \n-\tProgram, the distribution of the whole must be on the terms of this License, whose \n-\tpermissions for other licensees extend to the entire whole, and thus to each and \n-\tevery part regardless of who wrote it.</p><p>Thus, it is not the intent of this section to claim rights or contest your rights \n-\tto work written entirely by you; rather, the intent is to exercise the right to control \n-\tthe distribution of derivative or collective works based on the Program.</p><p>In addition, mere aggregation of another work not based on the Program with the Program \n-\t(or with a work based on the Program) on a volume of a storage or distribution medium \n-\tdoes not bring the other work under the scope of this License.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-3\"></a>Section 3</h3></div></div></div><p>You may copy and distribute the Program (or a work based on it, under \n-\t<a class=\"link\" href=\"bk01apds02.html#gpl-2-2\" title=\"Section 2\">Section 2</a> in object code or executable form under the terms of \n-\t<a class=\"link\" href=\"bk01apds02.html#gpl-2-1\" title=\"Section 1\">Sections 1</a> and \n-\t<a class=\"link\" href=\"bk01apds02.html#gpl-2-2\" title=\"Section 2\">2</a> above provided that you also do one of the following:\n-\t</p><div class=\"orderedlist\"><ol type=\"a\"><li><p>Accompany it with the complete corresponding machine-readable source code, which \n-\t      must be distributed under the terms of Sections 1 and 2 above on a medium \n-\t      customarily used for software interchange; or,</p></li><li><p>Accompany it with a written offer, valid for at least three years, to give any \n-\t      third party, for a charge no more than your cost of physically performing source \n-\t      distribution, a complete machine-readable copy of the corresponding source code, \n-\t      to be distributed under the terms of Sections 1 and 2 above on a medium customarily \n-\t      used for software interchange; or,</p></li><li><p>Accompany it with the information you received as to the offer to distribute \n-\t      corresponding source code. (This alternative is allowed only for noncommercial \n-\t      distribution and only if you received the program in object code or executable form \n-\t      with such an offer, in accord with Subsection b above.)</p></li></ol></div><p>\n-      </p><p>The source code for a work means the preferred form of the work for making modifications \n-\tto it. For an executable work, complete source code means all the source code for all modules \n-\tit contains, plus any associated interface definition files, plus the scripts used to control \n-\tcompilation and installation of the executable. However, as a special exception, the source \n-\tcode distributed need not include anything that is normally distributed (in either source or \n-\tbinary form) with the major components (compiler, kernel, and so on) of the operating system \n-\ton which the executable runs, unless that component itself accompanies the executable.</p><p>If distribution of executable or object code is made by offering access to copy from a \n-\tdesignated place, then offering equivalent access to copy the source code from the same place \n-\tcounts as distribution of the source code, even though third parties are not compelled to \n-\tcopy the source along with the object code.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-4\"></a>Section 4</h3></div></div></div><p>You may not copy, modify, sublicense, or distribute the Program except as expressly provided \n-\tunder this License. Any attempt otherwise to copy, modify, sublicense or distribute the \n-\tProgram is void, and will automatically terminate your rights under this License. However, \n-\tparties who have received copies, or rights, from you under this License will not have their \n-\tlicenses terminated so long as such parties remain in full compliance.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-5\"></a>Section 5</h3></div></div></div><p>You are not required to accept this License, since you have not signed it. However, nothing \n-\telse grants you permission to modify or distribute the Program or its derivative works. \n-\tThese actions are prohibited by law if you do not accept this License. Therefore, by modifying \n-\tor distributing the Program (or any work based on the Program), you indicate your acceptance \n-\tof this License to do so, and all its terms and conditions for copying, distributing or \n-\tmodifying the Program or works based on it.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-6\"></a>Section 6</h3></div></div></div><p>Each time you redistribute the Program (or any work based on the Program), the recipient \n-\tautomatically receives a license from the original licensor to copy, distribute or modify \n-\tthe Program subject to these terms and conditions. You may not impose any further restrictions \n-\ton the recipients' exercise of the rights granted herein. You are not responsible for enforcing \n-\tcompliance by third parties to this License.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-7\"></a>Section 7</h3></div></div></div><p>If, as a consequence of a court judgment or allegation of patent infringement or for any other \n-\treason (not limited to patent issues), conditions are imposed on you (whether by court order, \n-\tagreement or otherwise) that contradict the conditions of this License, they do not excuse you \n-\tfrom the conditions of this License. If you cannot distribute so as to satisfy simultaneously \n-\tyour obligations under this License and any other pertinent obligations, then as a consequence \n-\tyou may not distribute the Program at all. For example, if a patent license would not permit \n-\troyalty-free redistribution of the Program by all those who receive copies directly or \n-\tindirectly through you, then the only way you could satisfy both it and this License would be \n-\tto refrain entirely from distribution of the Program.</p><p>If any portion of this section is held invalid or unenforceable under any particular circumstance, \n-\tthe balance of the section is intended to apply and the section as a whole is intended to apply \n-\tin other circumstances.</p><p>It is not the purpose of this section to induce you to infringe any patents or other property \n-\tright claims or to contest validity of any such claims; this section has the sole purpose of \n-\tprotecting the integrity of the free software distribution system, which is implemented by public \n-\tlicense practices. Many people have made generous contributions to the wide range of software \n-\tdistributed through that system in reliance on consistent application of that system; it is up \n-\tto the author/donor to decide if he or she is willing to distribute software through any other \n-\tsystem and a licensee cannot impose that choice.</p><p>This section is intended to make thoroughly clear what is believed to be a consequence of the \n-\trest of this License.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-8\"></a>Section 8</h3></div></div></div><p>If the distribution and/or use of the Program is restricted in certain countries either by patents \n-\tor by copyrighted interfaces, the original copyright holder who places the Program under this License \n-\tmay add an explicit geographical distribution limitation excluding those countries, so that \n-\tdistribution is permitted only in or among countries not thus excluded. In such case, this License \n-\tincorporates the limitation as if written in the body of this License.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-9\"></a>Section 9</h3></div></div></div><p>The Free Software Foundation may publish revised and/or new versions of the General Public License \n-\tfrom time to time. Such new versions will be similar in spirit to the present version, but may differ \n-\tin detail to address new problems or concerns.</p><p>Each version is given a distinguishing version number. If the Program specifies a version number of \n-\tthis License which applies to it and \u201c<span class=\"quote\">any later version</span>\u201d, you have the option of following the terms \n-\tand conditions either of that version or of any later version published by the Free Software \n-\tFoundation. If the Program does not specify a version number of this License, you may choose any \n-\tversion ever published by the Free Software Foundation.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-10\"></a>Section 10</h3></div></div></div><p>If you wish to incorporate parts of the Program into other free programs whose distribution \n-\tconditions are different, write to the author to ask for permission. For software which is copyrighted \n-\tby the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions \n-\tfor this. Our decision will be guided by the two goals of preserving the free status of all \n-\tderivatives of our free software and of promoting the sharing and reuse of software generally.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-11\"></a>NO WARRANTY Section 11</h3></div></div></div><p>BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT \n-\tPERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR \n-\tOTHER PARTIES PROVIDE THE PROGRAM \u201c<span class=\"quote\">AS IS</span>\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, \n-\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR \n-\tPURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE \n-\tPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"gpl-2-12\"></a>Section 12</h3></div></div></div><p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR \n-\tANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU \n-\tFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE \n-\tUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED \n-\tINACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH \n-\tANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH \n-\tDAMAGES.</p><p>END OF TERMS AND CONDITIONS</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apd.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01apd.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01apds03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Appendix\u00a0D.\u00a0GNU General Public License\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0How to Apply These Terms to Your New Programs</td></tr></table></div></body></html>"}, {"sha": "d95dfd7a6869f6d9f5ac5ef77aa3275dcc723cb2", "filename": "libstdc++-v3/doc/html/manual/bk01apds03.html", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apds03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apds03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01apds03.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,32 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>How to Apply These Terms to Your New Programs</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01apd.html\" title=\"Appendix\u00a0D.\u00a0GNU General Public License\" /><link rel=\"prev\" href=\"bk01apds02.html\" title=\"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\" /><link rel=\"next\" href=\"bk01ape.html\" title=\"Appendix\u00a0E.\u00a0GNU Free Documentation License\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">How to Apply These Terms to Your New Programs</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apds02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Appendix\u00a0D.\u00a0GNU General Public License</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01ape.html\">Next</a></td></tr></table><hr /></div><div class=\"section\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"gpl-3\"></a>How to Apply These Terms to Your New Programs</h2></div></div></div><p>If you develop a new program, and you want it to be of the greatest\n-      possible use to the public, the best way to achieve this is to make it\n-      free software which everyone can redistribute and change under these terms.</p><p>To do so, attach the following notices to the program.  It is safest\n-      to attach them to the start of each source file to most effectively\n-      convey the exclusion of warranty; and each file should have at least\n-      the \u201c<span class=\"quote\">copyright</span>\u201d line and a pointer to where the full notice is found.</p><p>&lt;one line to give the program's name and a brief idea of what it does.&gt;\n-      Copyright (C) &lt;year&gt;    &lt;name of author&gt;</p><p>This program is free software; you can redistribute it and/or modify\n-      it under the terms of the GNU General Public License as published by\n-      the Free Software Foundation; either version 2 of the License, or\n-      (at your option) any later version.</p><p>This program is distributed in the hope that it will be useful,\n-      but WITHOUT ANY WARRANTY; without even the implied warranty of\n-      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-      GNU General Public License for more details.</p><p>You should have received a copy of the GNU General Public License\n-      along with this program; if not, write to the Free Software\n-      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA</p><p>Also add information on how to contact you by electronic and paper mail.</p><p>If the program is interactive, make it output a short notice like this\n-      when it starts in an interactive mode:</p><p>Gnomovision version 69, Copyright (C) year name of author\n-      Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type \u201c<span class=\"quote\">show w</span>\u201d.\n-      This is free software, and you are welcome to redistribute it\n-      under certain conditions; type \u201c<span class=\"quote\">show c</span>\u201d for details.</p><p>The hypothetical commands \u201c<span class=\"quote\">show w</span>\u201d and \u201c<span class=\"quote\">show c</span>\u201d should \n-      show the appropriate parts of the General Public License.  Of course, the commands you \n-      use may be called something other than \u201c<span class=\"quote\">show w</span>\u201d and \u201c<span class=\"quote\">show c</span>\u201d; \n-      they could even be mouse-clicks or menu items--whatever suits your program.</p><p>You should also get your employer (if you work as a programmer) or your\n-      school, if any, to sign a \u201c<span class=\"quote\">copyright disclaimer</span>\u201d for the program, if\n-      necessary.  Here is a sample; alter the names:</p><p>Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n-      \u201c<span class=\"quote\">Gnomovision</span>\u201d (which makes passes at compilers) written by James Hacker.</p><p>&lt;signature of Ty Coon&gt;, 1 April 1989\n-      Ty Coon, President of Vice</p><p>This General Public License does not permit incorporating your program into\n-      proprietary programs.  If your program is a subroutine library, you may\n-      consider it more useful to permit linking proprietary applications with the\n-      library.  If this is what you want to do, use the GNU Library General\n-      Public License instead of this License.</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apds02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01apd.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01ape.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Appendix\u00a0E.\u00a0GNU Free Documentation License</td></tr></table></div></body></html>"}, {"sha": "6b3403b9bb8aac904391cdbe9c5b0a68bd89b673", "filename": "libstdc++-v3/doc/html/manual/bk01ape.html", "status": "removed", "additions": 0, "deletions": 393, "changes": 393, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01ape.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01ape.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01ape.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,393 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Appendix\u00a0E.\u00a0GNU Free Documentation License</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"spine.html\" title=\"The GNU C++ Library\" /><link rel=\"prev\" href=\"bk01apds03.html\" title=\"How to Apply These Terms to Your New Programs\" /><link rel=\"next\" href=\"../bk02.html\" title=\"\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Appendix\u00a0E.\u00a0GNU Free Documentation License</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apds03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">The GNU C++ Library</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"../bk02.html\">Next</a></td></tr></table><hr /></div><div class=\"appendix\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"appendix.gfdl-1.2\"></a>Appendix\u00a0E.\u00a0GNU Free Documentation License</h2></div></div></div><p>\n-    Copyright (C) 2000, 2001, 2002 Free Software Foundation,\n-    <abbr class=\"abbrev\">Inc.</abbr> 51 Franklin <abbr class=\"abbrev\">St</abbr>, Fifth Floor,\n-    Boston, <abbr class=\"abbrev\">MA</abbr> 02110-1301 <abbr class=\"abbrev\">USA</abbr>.  Everyone is permitted to copy and\n-    distribute verbatim copies of this license document, but changing it is\n-    not allowed.\n-  </p><h2><a id=\"Preamble\"></a>\n-    0. PREAMBLE\n-  </h2><p>\n-    The purpose of this License is to make a manual, textbook, or other\n-    functional and useful document \"free\" in the sense of freedom: to assure\n-    everyone the effective freedom to copy and redistribute it, with or\n-    without modifying it, either commercially or noncommercially.\n-    Secondarily, this License preserves for the author and publisher a way to\n-    get credit for their work, while not being considered responsible for\n-    modifications made by others.\n-  </p><p>\n-    This License is a kind of \"copyleft\", which means that derivative works of\n-    the document must themselves be free in the same sense.  It complements\n-    the GNU General Public License, which is a copyleft license designed for\n-    free software.\n-  </p><p>\n-    We have designed this License in order to use it for manuals for free\n-    software, because free software needs free documentation: a free program\n-    should come with manuals providing the same freedoms that the software\n-    does.  But this License is not limited to software manuals; it can be used\n-    for any textual work, regardless of subject matter or whether it is\n-    published as a printed book.  We recommend this License principally for\n-    works whose purpose is instruction or reference.</p><h2><a id=\"Definitions\"></a>\n-    1. APPLICABILITY AND DEFINITIONS\n-  </h2><p>\n-    This License applies to any manual or other work, in any medium, that\n-    contains a notice placed by the copyright holder saying it can be\n-    distributed under the terms of this License.  Such a notice grants a\n-    world-wide, royalty-free license, unlimited in duration, to use that work\n-    under the conditions stated herein.  The \"Document\", below, refers to any\n-    such manual or work.  Any member of the public is a licensee, and is\n-    addressed as \"you\".  You accept the license if you copy, modify or\n-    distribute the work in a way requiring permission under copyright\n-    law.\n-  </p><p>\n-    A \"Modified Version\" of the Document means any work containing the\n-    Document or a portion of it, either copied verbatim, or with modifications\n-    and/or translated into another language.\n-  </p><p>\n-    A \"Secondary Section\" is a named appendix or a front-matter section of the\n-    Document that deals exclusively with the relationship of the publishers or\n-    authors of the Document to the Document's overall subject (or to related\n-    matters) and contains nothing that could fall directly within that overall\n-    subject.  (Thus, if the Document is in part a textbook of mathematics, a\n-    Secondary Section may not explain any mathematics.)  The relationship\n-    could be a matter of historical connection with the subject or with\n-    related matters, or of legal, commercial, philosophical, ethical or\n-    political position regarding them.\n-  </p><p>\n-    The \"Invariant Sections\" are certain Secondary Sections whose titles are\n-    designated, as being those of Invariant Sections, in the notice that says\n-    that the Document is released under this License.  If a section does not\n-    fit the above definition of Secondary then it is not allowed to be\n-    designated as Invariant.  The Document may contain zero Invariant\n-    Sections.  If the Document does not identify any Invariant Sections then\n-    there are none.\n-  </p><p>\n-    The \"Cover Texts\" are certain short passages of text that are listed, as\n-    Front-Cover Texts or Back-Cover Texts, in the notice that says that the\n-    Document is released under this License.  A Front-Cover Text may be at\n-    most 5 words, and a Back-Cover Text may be at most 25 words.\n-  </p><p>\n-    A \"Transparent\" copy of the Document means a machine-readable copy,\n-    represented in a format whose specification is available to the general\n-    public, that is suitable for revising the document straightforwardly with\n-    generic text editors or (for images composed of pixels) generic paint\n-    programs or (for drawings) some widely available drawing editor, and that\n-    is suitable for input to text formatters or for automatic translation to a\n-    variety of formats suitable for input to text formatters.  A copy made in\n-    an otherwise Transparent file format whose markup, or absence of markup,\n-    has been arranged to thwart or discourage subsequent modification by\n-    readers is not Transparent.  An image format is not Transparent if used\n-    for any substantial amount of text.  A copy that is not \"Transparent\" is\n-    called \"Opaque\".\n-  </p><p>\n-    Examples of suitable formats for Transparent copies include plain ASCII\n-    without markup, Texinfo input format, LaTeX input format, SGML or XML\n-    using a publicly available DTD, and standard-conforming simple HTML,\n-    PostScript or PDF designed for human modification.  Examples of\n-    transparent image formats include PNG, XCF and JPG.  Opaque formats\n-    include proprietary formats that can be read and edited only by\n-    proprietary word processors, SGML or XML for which the DTD and/or\n-    processing tools are not generally available, and the machine-generated\n-    HTML, PostScript or PDF produced by some word processors for output\n-    purposes only.\n-  </p><p>\n-    The \"Title Page\" means, for a printed book, the title page itself, plus\n-    such following pages as are needed to hold, legibly, the material this\n-    License requires to appear in the title page.  For works in formats which\n-    do not have any title page as such, \"Title Page\" means the text near the\n-    most prominent appearance of the work's title, preceding the beginning of\n-    the body of the text.\n-  </p><p>\n-    A section \"Entitled XYZ\" means a named subunit of the Document whose title\n-    either is precisely XYZ or contains XYZ in parentheses following text that\n-    translates XYZ in another language.  (Here XYZ stands for a specific\n-    section name mentioned below, such as \"Acknowledgements\", \"Dedications\",\n-    \"Endorsements\", or \"History\".)  To \"Preserve the Title\" of such a section\n-    when you modify the Document means that it remains a section \"Entitled\n-    XYZ\" according to this definition.\n-  </p><p>\n-    The Document may include Warranty Disclaimers next to the notice which\n-    states that this License applies to the Document.  These Warranty\n-    Disclaimers are considered to be included by reference in this License,\n-    but only as regards disclaiming warranties: any other implication that\n-    these Warranty Disclaimers may have is void and has no effect on the\n-    meaning of this License.\n-  </p><h2><a id=\"VerbatimCopying\"></a>\n-    2. VERBATIM COPYING\n-  </h2><p>\n-    You may copy and distribute the Document in any medium, either\n-    commercially or noncommercially, provided that this License, the copyright\n-    notices, and the license notice saying this License applies to the\n-    Document are reproduced in all copies, and that you add no other\n-    conditions whatsoever to those of this License.  You may not use technical\n-    measures to obstruct or control the reading or further copying of the\n-    copies you make or distribute.  However, you may accept compensation in\n-    exchange for copies.  If you distribute a large enough number of copies\n-    you must also follow the conditions in section 3.\n-  </p><p>\n-    You may also lend copies, under the same conditions stated above, and you\n-    may publicly display copies.\n-  </p><h2><a id=\"QuantityCopying\"></a>\n-    3. COPYING IN QUANTITY\n-  </h2><p>\n-    If you publish printed copies (or copies in media that commonly have\n-    printed covers) of the Document, numbering more than 100, and the\n-    Document's license notice requires Cover Texts, you must enclose the\n-    copies in covers that carry, clearly and legibly, all these Cover Texts:\n-    Front-Cover Texts on the front cover, and Back-Cover Texts on the back\n-    cover.  Both covers must also clearly and legibly identify you as the\n-    publisher of these copies.  The front cover must present the full title\n-    with all words of the title equally prominent and visible.  You may add\n-    other material on the covers in addition.  Copying with changes limited to\n-    the covers, as long as they preserve the title of the Document and satisfy\n-    these conditions, can be treated as verbatim copying in other\n-    respects.\n-  </p><p>\n-    If the required texts for either cover are too voluminous to fit legibly,\n-    you should put the first ones listed (as many as fit reasonably) on the\n-    actual cover, and continue the rest onto adjacent pages.\n-  </p><p>\n-    If you publish or distribute Opaque copies of the Document numbering more\n-    than 100, you must either include a machine-readable Transparent copy\n-    along with each Opaque copy, or state in or with each Opaque copy a\n-    computer-network location from which the general network-using public has\n-    access to download using public-standard network protocols a complete\n-    Transparent copy of the Document, free of added material.  If you use the\n-    latter option, you must take reasonably prudent steps, when you begin\n-    distribution of Opaque copies in quantity, to ensure that this Transparent\n-    copy will remain thus accessible at the stated location until at least one\n-    year after the last time you distribute an Opaque copy (directly or\n-    through your agents or retailers) of that edition to the public.\n-  </p><p>\n-    It is requested, but not required, that you contact the authors of the\n-    Document well before redistributing any large number of copies, to give\n-    them a chance to provide you with an updated version of the\n-    Document.\n-  </p><h2><a id=\"Modifications\"></a>\n-    4. MODIFICATIONS\n-  </h2><p>\n-    You may copy and distribute a Modified Version of the Document under the\n-    conditions of sections 2 and 3 above, provided that you release the\n-    Modified Version under precisely this License, with the Modified Version\n-    filling the role of the Document, thus licensing distribution and\n-    modification of the Modified Version to whoever possesses a copy of it.\n-    In addition, you must do these things in the Modified Version:\n-  </p><div class=\"orderedlist\"><ol type=\"A\"><li>\n-        Use in the Title Page (and on the covers, if any) a title distinct\n-        from that of the Document, and from those of previous versions (which\n-        should, if there were any, be listed in the History section of the\n-        Document).  You may use the same title as a previous version if the\n-        original publisher of that version gives permission.\n-        </li><li>\n-        List on the Title Page, as authors, one or more persons or entities\n-        responsible for authorship of the modifications in the Modified\n-        Version, together with at least five of the principal authors of the\n-        Document (all of its principal authors, if it has fewer than five),\n-        unless they release you from this requirement.\n-      </li><li>\n-        State on the Title page the name of the publisher of the Modified\n-        Version, as the publisher.\n-      </li><li>\n-        Preserve all the copyright notices of the Document.\n-      </li><li>\n-        Add an appropriate copyright notice for your modifications adjacent to\n-        the other copyright notices.\n-      </li><li>\n-        Include, immediately after the copyright notices, a license notice\n-        giving the public permission to use the Modified Version under the\n-        terms of this License, in the form shown in the Addendum below.\n-      </li><li>\n-        Preserve in that license notice the full lists of Invariant Sections\n-        and required Cover Texts given in the Document's license notice.\n-      </li><li>\n-        Include an unaltered copy of this License.\n-      </li><li>\n-        Preserve the section Entitled \"History\", Preserve its Title, and add\n-        to it an item stating at least the title, year, new authors, and\n-        publisher of the Modified Version as given on the Title Page.  If\n-        there is no section Entitled \"History\" in the Document, create one\n-        stating the title, year, authors, and publisher of the Document as\n-        given on its Title Page, then add an item describing the Modified\n-        Version as stated in the previous sentence.\n-      </li><li>\n-        Preserve the network location, if any, given in the Document for\n-        public access to a Transparent copy of the Document, and likewise the\n-        network locations given in the Document for previous versions it was\n-        based on.  These may be placed in the \"History\" section.  You may omit\n-        a network location for a work that was published at least four years\n-        before the Document itself, or if the original publisher of the\n-        version it refers to gives permission.\n-      </li><li>\n-        For any section Entitled \"Acknowledgements\" or \"Dedications\", Preserve\n-        the Title of the section, and preserve in the section all the\n-        substance and tone of each of the contributor acknowledgements and/or\n-        dedications given therein.\n-      </li><li>\n-        Preserve all the Invariant Sections of the Document, unaltered in\n-        their text and in their titles.  Section numbers or the equivalent are\n-        not considered part of the section titles.\n-      </li><li>\n-        Delete any section Entitled \"Endorsements\".  Such a section may not be\n-        included in the Modified Version.\n-      </li><li>\n-        Do not retitle any existing section to be Entitled \"Endorsements\" or\n-        to conflict in title with any Invariant Section.\n-      </li><li>\n-        Preserve any Warranty Disclaimers.\n-      </li></ol></div><p>\n-    If the Modified Version includes new front-matter sections or appendices\n-    that qualify as Secondary Sections and contain no material copied from the\n-    Document, you may at your option designate some or all of these sections\n-    as invariant.  To do this, add their titles to the list of Invariant\n-    Sections in the Modified Version's license notice.  These titles must be\n-    distinct from any other section titles.\n-  </p><p>\n-    You may add a section Entitled \"Endorsements\", provided it contains\n-    nothing but endorsements of your Modified Version by various parties--for\n-    example, statements of peer review or that the text has been approved by\n-    an organization as the authoritative definition of a standard.\n-  </p><p>\n-    You may add a passage of up to five words as a Front-Cover Text, and a\n-    passage of up to 25 words as a Back-Cover Text, to the end of the list of\n-    Cover Texts in the Modified Version.  Only one passage of Front-Cover Text\n-    and one of Back-Cover Text may be added by (or through arrangements made\n-    by) any one entity.  If the Document already includes a cover text for the\n-    same cover, previously added by you or by arrangement made by the same\n-    entity you are acting on behalf of, you may not add another; but you may\n-    replace the old one, on explicit permission from the previous publisher\n-    that added the old one.\n-  </p><p>\n-    The author(s) and publisher(s) of the Document do not by this License give\n-    permission to use their names for publicity for or to assert or imply\n-    endorsement of any Modified Version.\n-  </p><h2><a id=\"Combining\"></a>\n-    5. COMBINING DOCUMENTS\n-  </h2><p>\n-    You may combine the Document with other documents released under this\n-    License, under the terms defined in section 4 above for modified versions,\n-    provided that you include in the combination all of the Invariant Sections\n-    of all of the original documents, unmodified, and list them all as\n-    Invariant Sections of your combined work in its license notice, and that\n-    you preserve all their Warranty Disclaimers.\n-  </p><p>\n-    The combined work need only contain one copy of this License, and multiple\n-    identical Invariant Sections may be replaced with a single copy.  If there\n-    are multiple Invariant Sections with the same name but different contents,\n-    make the title of each such section unique by adding at the end of it, in\n-    parentheses, the name of the original author or publisher of that section\n-    if known, or else a unique number.  Make the same adjustment to the\n-    section titles in the list of Invariant Sections in the license notice of\n-    the combined work.\n-  </p><p>\n-    In the combination, you must combine any sections Entitled \"History\" in\n-    the various original documents, forming one section Entitled \"History\";\n-    likewise combine any sections Entitled \"Acknowledgements\", and any\n-    sections Entitled \"Dedications\".  You must delete all sections Entitled\n-    \"Endorsements\".\n-  </p><h2><a id=\"Collections\"></a>\n-    6. COLLECTIONS OF DOCUMENTS\n-  </h2><p>\n-    You may make a collection consisting of the Document and other documents\n-    released under this License, and replace the individual copies of this\n-    License in the various documents with a single copy that is included in\n-    the collection, provided that you follow the rules of this License for\n-    verbatim copying of each of the documents in all other respects.\n-  </p><p>\n-    You may extract a single document from such a collection, and distribute\n-    it individually under this License, provided you insert a copy of this\n-    License into the extracted document, and follow this License in all other\n-    respects regarding verbatim copying of that document.\n-  </p><h2><a id=\"Aggregation\"></a>\n-    7. AGGREGATION WITH INDEPENDENT WORKS\n-  </h2><p>\n-    A compilation of the Document or its derivatives with other separate and\n-    independent documents or works, in or on a volume of a storage or\n-    distribution medium, is called an \"aggregate\" if the copyright resulting\n-    from the compilation is not used to limit the legal rights of the\n-    compilation's users beyond what the individual works permit.  When the\n-    Document is included in an aggregate, this License does not apply to the\n-    other works in the aggregate which are not themselves derivative works of\n-    the Document.\n-  </p><p>\n-    If the Cover Text requirement of section 3 is applicable to these copies\n-    of the Document, then if the Document is less than one half of the entire\n-    aggregate, the Document's Cover Texts may be placed on covers that bracket\n-    the Document within the aggregate, or the electronic equivalent of covers\n-    if the Document is in electronic form.  Otherwise they must appear on\n-    printed covers that bracket the whole aggregate.\n-  </p><h2><a id=\"Translation\"></a>\n-    8. TRANSLATION\n-  </h2><p>\n-    Translation is considered a kind of modification, so you may distribute\n-    translations of the Document under the terms of section 4.  Replacing\n-    Invariant Sections with translations requires special permission from\n-    their copyright holders, but you may include translations of some or all\n-    Invariant Sections in addition to the original versions of these Invariant\n-    Sections.  You may include a translation of this License, and all the\n-    license notices in the Document, and any Warranty Disclaimers, provided\n-    that you also include the original English version of this License and the\n-    original versions of those notices and disclaimers.  In case of a\n-    disagreement between the translation and the original version of this\n-    License or a notice or disclaimer, the original version will prevail.\n-  </p><p>\n-    If a section in the Document is Entitled \"Acknowledgements\",\n-    \"Dedications\", or \"History\", the requirement (section 4) to Preserve its\n-    Title (section 1) will typically require changing the actual title.\n-  </p><h2><a id=\"Termination\"></a>\n-    9. TERMINATION\n-  </h2><p>\n-    You may not copy, modify, sublicense, or distribute the Document except as\n-    expressly provided for under this License.  Any other attempt to copy,\n-    modify, sublicense or distribute the Document is void, and will\n-    automatically terminate your rights under this License.  However, parties\n-    who have received copies, or rights, from you under this License will not\n-    have their licenses terminated so long as such parties remain in full\n-    compliance.\n-  </p><h2><a id=\"FutureRevisions\"></a>\n-    10. FUTURE REVISIONS OF THIS LICENSE\n-  </h2><p>\n-    The Free Software Foundation may publish new, revised versions of the GNU\n-    Free Documentation License from time to time.  Such new versions will be\n-    similar in spirit to the present version, but may differ in detail to\n-    address new problems or concerns.  See <a class=\"ulink\" href=\"http://www.gnu.org/copyleft/\" target=\"_top\">http://www.gnu.org/copyleft/</a>.\n-  </p><p>\n-    Each version of the License is given a distinguishing version number.  If\n-    the Document specifies that a particular numbered version of this License\n-    \"or any later version\" applies to it, you have the option of following the\n-    terms and conditions either of that specified version or of any later\n-    version that has been published (not as a draft) by the Free Software\n-    Foundation.  If the Document does not specify a version number of this\n-    License, you may choose any version ever published (not as a draft) by the\n-    Free Software Foundation.\n-  </p><h2><a id=\"HowToUse\"></a>\n-    ADDENDUM: How to use this License for your documents\n-  </h2><p>\n-    To use this License in a document you have written, include a copy of the\n-    License in the document and put the following copyright and license\n-    notices just after the title page:\n-  </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-      Copyright (C) YEAR YOUR NAME.\n-    </p><p>\n-      Permission is granted to copy, distribute and/or modify this document\n-      under the terms of the GNU Free Documentation License, Version 1.2 or\n-      any later version published by the Free Software Foundation; with no\n-      Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A\n-      copy of the license is included in the section entitled \"GNU Free\n-      Documentation License\".\n-    </p></blockquote></div><p>\n-    If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,\n-    replace the \"with...Texts.\" line with this:\n-  </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-      with the Invariant Sections being LIST THEIR TITLES, with the\n-      Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.\n-    </p></blockquote></div><p>\n-    If you have Invariant Sections without Cover Texts, or some other\n-    combination of the three, merge those two alternatives to suit the\n-    situation.\n-  </p><p>\n-    If your document contains nontrivial examples of program code, we\n-    recommend releasing these examples in parallel under your choice of free\n-    software license, such as the GNU General Public License, to permit their\n-    use in free software.\n-  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01apds03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"spine.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"../bk02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">How to Apply These Terms to Your New Programs\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>"}, {"sha": "60abfa4a7937408b30d7b00b14236cc153bd1793", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch01.html", "status": "removed", "additions": 0, "deletions": 6131, "changes": 6131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267"}, {"sha": "efdbda2cb17213da00b8af0c6ff6f66a181e2d17", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch01s02.html", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01s02.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,40 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>License</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt01ch01.html\" title=\"Chapter\u00a01.\u00a0Status\" /><link rel=\"prev\" href=\"bk01pt01ch01.html\" title=\"Chapter\u00a01.\u00a0Status\" /><link rel=\"next\" href=\"bk01pt01ch01s03.html\" title=\"Bugs\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">License</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch01.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a01.\u00a0Status</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch01s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.status.license\"></a>License</h2></div></div></div><p>\n-    There are two licenses affecting GNU libstdc++: one for the code,\n-    and one for the documentation.  \n-    </p><p>\n-      There is a license section in the FAQ regarding common <a class=\"link\" href=\"../faq.html#faq.license\" title=\"License\">questions</a>. If you have more\n-      questions, ask the FSF or the <a class=\"ulink\" href=\"http://gcc.gnu.org/lists.html\" target=\"_top\">gcc mailing list</a>.\n-    </p><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.status.license.gpl\"></a>The Code: GPL</h3></div></div></div><p>\n-      The source code is distributed under the <a class=\"link\" href=\"bk01apd.html\" title=\"Appendix\u00a0D.\u00a0GNU General Public License\">GNU General Public License version 2</a>,\n-      with the so-called \u201c<span class=\"quote\">Runtime Exception</span>\u201d\n-      as follows (or see any header or implementation file):\n-    </p><div class=\"literallayout\"><p><br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0As\u00a0a\u00a0special\u00a0exception,\u00a0you\u00a0may\u00a0use\u00a0this\u00a0file\u00a0as\u00a0part\u00a0of\u00a0a\u00a0free\u00a0software<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0library\u00a0without\u00a0restriction.\u00a0\u00a0Specifically,\u00a0if\u00a0other\u00a0files\u00a0instantiate<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0templates\u00a0or\u00a0use\u00a0macros\u00a0or\u00a0inline\u00a0functions\u00a0from\u00a0this\u00a0file,\u00a0or\u00a0you\u00a0compile<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this\u00a0file\u00a0and\u00a0link\u00a0it\u00a0with\u00a0other\u00a0files\u00a0to\u00a0produce\u00a0an\u00a0executable,\u00a0this<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0file\u00a0does\u00a0not\u00a0by\u00a0itself\u00a0cause\u00a0the\u00a0resulting\u00a0executable\u00a0to\u00a0be\u00a0covered\u00a0by<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0GNU\u00a0General\u00a0Public\u00a0License.\u00a0\u00a0This\u00a0exception\u00a0does\u00a0not\u00a0however<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0invalidate\u00a0any\u00a0other\u00a0reasons\u00a0why\u00a0the\u00a0executable\u00a0file\u00a0might\u00a0be\u00a0covered\u00a0by<br />\n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0GNU\u00a0General\u00a0Public\u00a0License.<br />\n-\u00a0\u00a0\u00a0\u00a0</p></div><p>\n-      Hopefully that text is self-explanatory.  If it isn't, you need to speak\n-      to your lawyer, or the Free Software Foundation.\n-    </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.status.license.fdl\"></a>The Documentation: GPL, FDL</h3></div></div></div><p>\n-      The documentation shipped with the library and made available over\n-      the web, excluding the pages generated from source comments, are\n-      copyrighted by the Free Software Foundation, and placed under the\n-      <a class=\"link\" href=\"bk01ape.html\" title=\"Appendix\u00a0E.\u00a0GNU Free Documentation License\"> GNU Free Documentation\n-      License version 1.2</a>.  There are no Front-Cover Texts, no\n-      Back-Cover Texts, and no Invariant Sections.\n-    </p><p> \n-      For documentation generated by doxygen or other automated tools\n-      via processing source code comments and markup, the original source\n-      code license applies to the generated files. Thus, the doxygen\n-      documents are licensed <a class=\"link\" href=\"bk01apd.html\" title=\"Appendix\u00a0D.\u00a0GNU General Public License\">GPL</a>.\n-    </p><p>\n-      If you plan on making copies of the documentation, please let us know.\n-      We can probably offer suggestions.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch01.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt01ch01.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch01s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a01.\u00a0Status\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Bugs</td></tr></table></div></body></html>"}, {"sha": "d8ecde5fd114000d4dfbe0774287aececa44c96d", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch01s03.html", "status": "removed", "additions": 0, "deletions": 330, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch01s03.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,330 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Bugs</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt01ch01.html\" title=\"Chapter\u00a01.\u00a0Status\" /><link rel=\"prev\" href=\"bk01pt01ch01s02.html\" title=\"License\" /><link rel=\"next\" href=\"bk01pt01ch02.html\" title=\"Chapter\u00a02.\u00a0Setup\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Bugs</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch01s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a01.\u00a0Status</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch02.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.status.bugs\"></a>Bugs</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.status.bugs.impl\"></a>Implementation Bugs</h3></div></div></div><p>\n-      Information on known bugs, details on efforts to fix them, and\n-      fixed bugs are all available as part of the GCC bug tracking\n-      system, <a class=\"ulink\" href=\"http://gcc.gnu.org/bugzilla\" target=\"_top\">bugzilla</a>, with the\n-      category set to <code class=\"literal\">libstdc++</code>.\n-    </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.status.bugs.iso\"></a>Standard Bugs</h3></div></div></div><p>\n-\tEverybody's got issues.  Even the C++ Standard Library.\n-      </p><p>\n-\tThe Library Working Group, or LWG, is the ISO subcommittee responsible\n-\tfor making changes to the library.  They periodically publish an\n-\tIssues List containing problems and possible solutions.  As they reach\n-\ta consensus on proposed solutions, we often incorporate the solution.\n-      </p><p>\n-\tHere are the issues which have resulted in code changes to the library.\n-\tThe links are to the specific defect reports from a <span class=\"emphasis\"><em>partial\n-\tcopy</em></span> of the Issues List.  You can read the full version online\n-\tat the <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/\" target=\"_top\">ISO C++\n-\tCommittee homepage</a>, linked to on the\n-\t<a class=\"ulink\" href=\"http://gcc.gnu.org/readings.html\" target=\"_top\">GCC \"Readings\"\n-\tpage</a>.  If\n-\tyou spend a lot of time reading the issues, we recommend downloading\n-\tthe ZIP file and reading them locally.\n-      </p><p>\n-\t(NB: <span class=\"emphasis\"><em>partial copy</em></span> means that not all\n-\tlinks within the lwg-*.html pages will work.  Specifically,\n-\tlinks to defect reports that have not been accorded full DR\n-\tstatus will probably break.  Rather than trying to mirror the\n-\tentire issues list on our overworked web server, we recommend\n-\tyou go to the LWG homepage instead.)\n-      </p><p>\n-\tIf a DR is not listed here, we may simply not have gotten to\n-\tit yet; feel free to submit a patch.  Search the include/bits\n-\tand src directories for appearances of\n-\t<code class=\"constant\">_GLIBCXX_RESOLVE_LIB_DEFECTS</code> for examples\n-\tof style.  Note that we usually do not make changes to the\n-\tcode until an issue has reached <a class=\"ulink\" href=\"lwg-active.html#DR\" target=\"_top\">DR</a> status.\n-      </p><div class=\"variablelist\"><dl><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#5\" target=\"_top\">5</a>:\n-        <span class=\"emphasis\"><em>string::compare specification questionable</em></span>\n-    </span></dt><dd><p>This should be two overloaded functions rather than a single function.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#17\" target=\"_top\">17</a>:\n-        <span class=\"emphasis\"><em>Bad bool parsing</em></span>\n-    </span></dt><dd><p>Apparently extracting Boolean values was messed up...\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#19\" target=\"_top\">19</a>:\n-        <span class=\"emphasis\"><em>\"Noconv\" definition too vague</em></span>\n-    </span></dt><dd><p>If <code class=\"code\">codecvt::do_in</code> returns <code class=\"code\">noconv</code> there are\n-        no changes to the values in <code class=\"code\">[to, to_limit)</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#22\" target=\"_top\">22</a>:\n-        <span class=\"emphasis\"><em>Member open vs flags</em></span>\n-    </span></dt><dd><p>Re-opening a file stream does <span class=\"emphasis\"><em>not</em></span> clear the state flags.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#23\" target=\"_top\">23</a>:\n-        <span class=\"emphasis\"><em>Num_get overflow result</em></span>\n-    </span></dt><dd><p>Implement the proposed resolution.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#25\" target=\"_top\">25</a>:\n-        <span class=\"emphasis\"><em>String operator&lt;&lt; uses width() value wrong</em></span>\n-    </span></dt><dd><p>Padding issues.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#48\" target=\"_top\">48</a>:\n-        <span class=\"emphasis\"><em>Use of non-existent exception constructor</em></span>\n-    </span></dt><dd><p>An instance of <code class=\"code\">ios_base::failure</code> is constructed instead.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#49\" target=\"_top\">49</a>:\n-        <span class=\"emphasis\"><em>Underspecification of ios_base::sync_with_stdio</em></span>\n-    </span></dt><dd><p>The return type is the <span class=\"emphasis\"><em>previous</em></span> state of synchronization.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#50\" target=\"_top\">50</a>:\n-        <span class=\"emphasis\"><em>Copy constructor and assignment operator of ios_base</em></span>\n-    </span></dt><dd><p>These members functions are declared <code class=\"code\">private</code> and are\n-        thus inaccessible.  Specifying the correct semantics of\n-        \"copying stream state\" was deemed too complicated.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#60\" target=\"_top\">60</a>:\n-        <span class=\"emphasis\"><em>What is a formatted input function?</em></span>\n-    </span></dt><dd><p>This DR made many widespread changes to <code class=\"code\">basic_istream</code>\n-        and <code class=\"code\">basic_ostream</code> all of which have been implemented.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#63\" target=\"_top\">63</a>:\n-        <span class=\"emphasis\"><em>Exception-handling policy for unformatted output</em></span>\n-    </span></dt><dd><p>Make the policy consistent with that of formatted input, unformatted\n-        input, and formatted output.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#68\" target=\"_top\">68</a>:\n-        <span class=\"emphasis\"><em>Extractors for char* should store null at end</em></span>\n-    </span></dt><dd><p>And they do now.  An editing glitch in the last item in the list of\n-        [27.6.1.2.3]/7.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#74\" target=\"_top\">74</a>:\n-        <span class=\"emphasis\"><em>Garbled text for codecvt::do_max_length</em></span>\n-    </span></dt><dd><p>The text of the standard was gibberish.  Typos gone rampant.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#75\" target=\"_top\">75</a>:\n-        <span class=\"emphasis\"><em>Contradiction in codecvt::length's argument types</em></span>\n-    </span></dt><dd><p>Change the first parameter to <code class=\"code\">stateT&amp;</code> and implement\n-        the new effects paragraph.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"lwg-defects.html#83\" target=\"_top\">83</a>:\n-        <span class=\"emphasis\"><em>string::npos vs. string::max_size()</em></span>\n-    </span></dt><dd><p>Safety checks on the size of the string should test against\n-        <code class=\"code\">max_size()</code> rather than <code class=\"code\">npos</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#90\" target=\"_top\">90</a>:\n-        <span class=\"emphasis\"><em>Incorrect description of operator&gt;&gt; for strings</em></span>\n-    </span></dt><dd><p>The effect contain <code class=\"code\">isspace(c,getloc())</code> which must be\n-        replaced by <code class=\"code\">isspace(c,is.getloc())</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#91\" target=\"_top\">91</a>:\n-        <span class=\"emphasis\"><em>Description of operator&gt;&gt; and getline() for string&lt;&gt;\n-\t    might cause endless loop</em></span>\n-    </span></dt><dd><p>They behave as a formatted input function and as an unformatted\n-        input function, respectively (except that <code class=\"code\">getline</code> is\n-\tnot required to set <code class=\"code\">gcount</code>).\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#103\" target=\"_top\">103</a>:\n-        <span class=\"emphasis\"><em>set::iterator is required to be modifiable, but this allows\n-\t    modification of keys.</em></span>\n-    </span></dt><dd><p>For associative containers where the value type is the same as\n-        the key type, both <code class=\"code\">iterator</code> and <code class=\"code\">const_iterator\n-\t</code> are constant iterators.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#109\" target=\"_top\">109</a>:\n-        <span class=\"emphasis\"><em>Missing binders for non-const sequence elements</em></span>\n-    </span></dt><dd><p>The <code class=\"code\">binder1st</code> and <code class=\"code\">binder2nd</code> didn't have an\n-        <code class=\"code\">operator()</code> taking a non-const parameter.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#110\" target=\"_top\">110</a>:\n-        <span class=\"emphasis\"><em>istreambuf_iterator::equal not const</em></span>\n-    </span></dt><dd><p>This was not a const member function.  Note that the DR says to\n-        replace the function with a const one; we have instead provided an\n-        overloaded version with identical contents.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#117\" target=\"_top\">117</a>:\n-        <span class=\"emphasis\"><em>basic_ostream uses nonexistent num_put member functions</em></span>\n-    </span></dt><dd><p><code class=\"code\">num_put::put()</code> was overloaded on the wrong types.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#118\" target=\"_top\">118</a>:\n-        <span class=\"emphasis\"><em>basic_istream uses nonexistent num_get member functions</em></span>\n-    </span></dt><dd><p>Same as 117, but for <code class=\"code\">num_get::get()</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#129\" target=\"_top\">129</a>:\n-        <span class=\"emphasis\"><em>Need error indication from seekp() and seekg()</em></span>\n-    </span></dt><dd><p>These functions set <code class=\"code\">failbit</code> on error now.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#136\" target=\"_top\">136</a>:\n-        <span class=\"emphasis\"><em>seekp, seekg setting wrong streams?</em></span>\n-    </span></dt><dd><p><code class=\"code\">seekp</code> should only set the output stream, and\n-        <code class=\"code\">seekg</code> should only set the input stream.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#167\" target=\"_top\">167</a>:\n-        <span class=\"emphasis\"><em>Improper use of traits_type::length()</em></span>\n-    </span></dt><dd><p><code class=\"code\">op&lt;&lt;</code> with a <code class=\"code\">const char*</code> was\n-        calculating an incorrect number of characters to write.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#169\" target=\"_top\">169</a>:\n-        <span class=\"emphasis\"><em>Bad efficiency of overflow() mandated</em></span>\n-    </span></dt><dd><p>Grow efficiently the internal array object.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#171\" target=\"_top\">171</a>:\n-        <span class=\"emphasis\"><em>Strange seekpos() semantics due to joint position</em></span>\n-    </span></dt><dd><p>Quite complex to summarize...\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#181\" target=\"_top\">181</a>:\n-        <span class=\"emphasis\"><em>make_pair() unintended behavior</em></span>\n-    </span></dt><dd><p>This function used to take its arguments as reference-to-const, now\n-        it copies them (pass by value).\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#195\" target=\"_top\">195</a>:\n-        <span class=\"emphasis\"><em>Should basic_istream::sentry's constructor ever set eofbit?</em></span>\n-    </span></dt><dd><p>Yes, it can, specifically if EOF is reached while skipping whitespace.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#211\" target=\"_top\">211</a>:\n-        <span class=\"emphasis\"><em>operator&gt;&gt;(istream&amp;, string&amp;) doesn't set failbit</em></span>\n-    </span></dt><dd><p>If nothing is extracted into the string, <code class=\"code\">op&gt;&gt;</code> now\n-        sets <code class=\"code\">failbit</code> (which can cause an exception, etc., etc.).\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#214\" target=\"_top\">214</a>:\n-        <span class=\"emphasis\"><em>set::find() missing const overload</em></span>\n-    </span></dt><dd><p>Both <code class=\"code\">set</code> and <code class=\"code\">multiset</code> were missing\n-        overloaded find, lower_bound, upper_bound, and equal_range functions\n-        for const instances.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#231\" target=\"_top\">231</a>:\n-        <span class=\"emphasis\"><em>Precision in iostream?</em></span>\n-    </span></dt><dd><p>For conversion from a floating-point type, <code class=\"code\">str.precision()</code>\n-        is specified in the conversion specification.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#233\" target=\"_top\">233</a>:\n-        <span class=\"emphasis\"><em>Insertion hints in associative containers</em></span>\n-    </span></dt><dd><p>Implement N1780, first check before then check after, insert as close\n-        to hint as possible.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#235\" target=\"_top\">235</a>:\n-        <span class=\"emphasis\"><em>No specification of default ctor for reverse_iterator</em></span>\n-    </span></dt><dd><p>The declaration of <code class=\"code\">reverse_iterator</code> lists a default constructor.\n-        However, no specification is given what this constructor should do.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#241\" target=\"_top\">241</a>:\n-        <span class=\"emphasis\"><em>Does unique_copy() require CopyConstructible and Assignable?</em></span>\n-    </span></dt><dd><p>Add a helper for forward_iterator/output_iterator, fix the existing\n-        one for input_iterator/output_iterator to not rely on Assignability.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#243\" target=\"_top\">243</a>:\n-        <span class=\"emphasis\"><em>get and getline when sentry reports failure</em></span>\n-    </span></dt><dd><p>Store a null character only if the character array has a non-zero size.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#251\" target=\"_top\">251</a>:\n-        <span class=\"emphasis\"><em>basic_stringbuf missing allocator_type</em></span>\n-    </span></dt><dd><p>This nested typedef was originally not specified.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#253\" target=\"_top\">253</a>:\n-        <span class=\"emphasis\"><em>valarray helper functions are almost entirely useless</em></span>\n-    </span></dt><dd><p>Make the copy constructor and copy-assignment operator declarations\n-        public in gslice_array, indirect_array, mask_array, slice_array; provide\n-\tdefinitions.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#265\" target=\"_top\">265</a>:\n-        <span class=\"emphasis\"><em>std::pair::pair() effects overly restrictive</em></span>\n-    </span></dt><dd><p>The default ctor would build its members from copies of temporaries;\n-        now it simply uses their respective default ctors.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#266\" target=\"_top\">266</a>:\n-        <span class=\"emphasis\"><em>bad_exception::~bad_exception() missing Effects clause</em></span>\n-    </span></dt><dd><p>The <code class=\"code\">bad_</code>* classes no longer have destructors (they\n-        are trivial), since no description of them was ever given.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#271\" target=\"_top\">271</a>:\n-        <span class=\"emphasis\"><em>basic_iostream missing typedefs</em></span>\n-    </span></dt><dd><p>The typedefs it inherits from its base classes can't be used, since\n-        (for example) <code class=\"code\">basic_iostream&lt;T&gt;::traits_type</code> is ambiguous.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#275\" target=\"_top\">275</a>:\n-        <span class=\"emphasis\"><em>Wrong type in num_get::get() overloads</em></span>\n-    </span></dt><dd><p>Similar to 118.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#280\" target=\"_top\">280</a>:\n-        <span class=\"emphasis\"><em>Comparison of reverse_iterator to const reverse_iterator</em></span>\n-    </span></dt><dd><p>Add global functions with two template parameters.\n-        (NB: not added for now a templated assignment operator) \n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#292\" target=\"_top\">292</a>:\n-        <span class=\"emphasis\"><em>Effects of a.copyfmt (a)</em></span>\n-    </span></dt><dd><p>If <code class=\"code\">(this == &amp;rhs)</code> do nothing.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#300\" target=\"_top\">300</a>:\n-        <span class=\"emphasis\"><em>List::merge() specification incomplete</em></span>\n-    </span></dt><dd><p>If <code class=\"code\">(this == &amp;x)</code> do nothing.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#303\" target=\"_top\">303</a>:\n-        <span class=\"emphasis\"><em>Bitset input operator underspecified</em></span>\n-    </span></dt><dd><p>Basically, compare the input character to \n-                    <code class=\"code\">is.widen(0)</code> and <code class=\"code\">is.widen(1)</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#305\" target=\"_top\">305</a>:\n-        <span class=\"emphasis\"><em>Default behavior of codecvt&lt;wchar_t, char, \n-                  mbstate_t&gt;::length()</em></span>\n-    </span></dt><dd><p>Do not specify what <code class=\"code\">codecvt&lt;wchar_t, char, \n-                    mbstate_t&gt;::do_length</code> must return.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#328\" target=\"_top\">328</a>:\n-        <span class=\"emphasis\"><em>Bad sprintf format modifier in \n-                  money_put&lt;&gt;::do_put()</em></span>\n-    </span></dt><dd><p>Change the format string to \"%.0Lf\".\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#365\" target=\"_top\">365</a>:\n-        <span class=\"emphasis\"><em>Lack of const-qualification in clause 27</em></span>\n-    </span></dt><dd><p>Add const overloads of <code class=\"code\">is_open</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#387\" target=\"_top\">387</a>:\n-        <span class=\"emphasis\"><em>std::complex over-encapsulated</em></span>\n-    </span></dt><dd><p>Add the <code class=\"code\">real(T)</code> and <code class=\"code\">imag(T)</code>\n-                    members;  in C++0x mode, also adjust the existing \n-                    <code class=\"code\">real()</code> and <code class=\"code\">imag()</code> members and \n-                    free functions.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#389\" target=\"_top\">389</a>:\n-        <span class=\"emphasis\"><em>Const overload of valarray::operator[] returns \n-                  by value</em></span>\n-    </span></dt><dd><p>Change it to return a <code class=\"code\">const T&amp;</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#396\" target=\"_top\">396</a>:\n-        <span class=\"emphasis\"><em>what are characters zero and one</em></span>\n-    </span></dt><dd><p>Implement the proposed resolution.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#402\" target=\"_top\">402</a>:\n-        <span class=\"emphasis\"><em>Wrong new expression in [some_]allocator::construct</em></span>\n-    </span></dt><dd><p>Replace \"new\" with \"::new\".\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#409\" target=\"_top\">409</a>:\n-        <span class=\"emphasis\"><em>Closing an fstream should clear the error state</em></span>\n-    </span></dt><dd><p>Have <code class=\"code\">open</code> clear the error flags.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#431\" target=\"_top\">431</a>:\n-        <span class=\"emphasis\"><em>Swapping containers with unequal allocators</em></span>\n-    </span></dt><dd><p>Implement Option 3, as per N1599.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#432\" target=\"_top\">432</a>:\n-        <span class=\"emphasis\"><em>stringbuf::overflow() makes only one write position\n-\t    available</em></span>\n-    </span></dt><dd><p>Implement the resolution, beyond DR 169.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#434\" target=\"_top\">434</a>:\n-        <span class=\"emphasis\"><em>bitset::to_string() hard to use</em></span>\n-    </span></dt><dd><p>Add three overloads, taking fewer template arguments.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#438\" target=\"_top\">438</a>:\n-        <span class=\"emphasis\"><em>Ambiguity in the \"do the right thing\" clause</em></span>\n-    </span></dt><dd><p>Implement the resolution, basically cast less.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#453\" target=\"_top\">453</a>:\n-        <span class=\"emphasis\"><em>basic_stringbuf::seekoff need not always fail for an empty stream</em></span>\n-    </span></dt><dd><p>Don't fail if the next pointer is null and newoff is zero.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#455\" target=\"_top\">455</a>:\n-        <span class=\"emphasis\"><em>cerr::tie() and wcerr::tie() are overspecified</em></span>\n-    </span></dt><dd><p>Initialize cerr tied to cout and wcerr tied to wcout.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#464\" target=\"_top\">464</a>:\n-        <span class=\"emphasis\"><em>Suggestion for new member functions in standard containers</em></span>\n-    </span></dt><dd><p>Add <code class=\"code\">data()</code> to <code class=\"code\">std::vector</code> and\n-        <code class=\"code\">at(const key_type&amp;)</code> to <code class=\"code\">std::map</code>.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#508\" target=\"_top\">508</a>:\n-        <span class=\"emphasis\"><em>Bad parameters for ranlux64_base_01</em></span>\n-    </span></dt><dd><p>Fix the parameters.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-closed.html#512\" target=\"_top\">512</a>:\n-        <span class=\"emphasis\"><em>Seeding subtract_with_carry_01 from a single unsigned long</em></span>\n-    </span></dt><dd><p>Construct a <code class=\"code\">linear_congruential</code> engine and seed with it.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-closed.html#526\" target=\"_top\">526</a>:\n-        <span class=\"emphasis\"><em>Is it undefined if a function in the standard changes in\n-\t    parameters?</em></span>\n-    </span></dt><dd><p>Use &amp;value.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#538\" target=\"_top\">538</a>:\n-        <span class=\"emphasis\"><em>241 again: Does unique_copy() require CopyConstructible\n-\t    and Assignable?</em></span>\n-    </span></dt><dd><p>In case of input_iterator/output_iterator rely on Assignability of\n-        input_iterator' value_type.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#541\" target=\"_top\">541</a>:\n-        <span class=\"emphasis\"><em>shared_ptr template assignment and void</em></span>\n-    </span></dt><dd><p>Add an auto_ptr&lt;void&gt; specialization.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#543\" target=\"_top\">543</a>:\n-        <span class=\"emphasis\"><em>valarray slice default constructor</em></span>\n-    </span></dt><dd><p>Follow the straightforward proposed resolution.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#550\" target=\"_top\">550</a>:\n-        <span class=\"emphasis\"><em>What should the return type of pow(float,int) be?</em></span>\n-    </span></dt><dd><p>In C++0x mode, remove the pow(float,int), etc., signatures.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#586\" target=\"_top\">586</a>:\n-        <span class=\"emphasis\"><em>string inserter not a formatted function</em></span>\n-    </span></dt><dd><p>Change it to be a formatted output function (i.e. catch exceptions).\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#596\" target=\"_top\">596</a>:\n-        <span class=\"emphasis\"><em>27.8.1.3 Table 112 omits \"a+\" and \"a+b\" modes</em></span>\n-    </span></dt><dd><p>Add the missing modes to fopen_mode.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#660\" target=\"_top\">660</a>:\n-        <span class=\"emphasis\"><em>Missing bitwise operations</em></span>\n-    </span></dt><dd><p>Add the missing operations.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#691\" target=\"_top\">691</a>:\n-        <span class=\"emphasis\"><em>const_local_iterator cbegin, cend missing from TR1</em></span>\n-    </span></dt><dd><p>In C++0x mode add cbegin(size_type) and cend(size_type)\n-\t            to the unordered containers.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#693\" target=\"_top\">693</a>:\n-        <span class=\"emphasis\"><em>std::bitset::all() missing</em></span>\n-    </span></dt><dd><p>Add it, consistently with the discussion.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#695\" target=\"_top\">695</a>:\n-        <span class=\"emphasis\"><em>ctype&lt;char&gt;::classic_table() not accessible</em></span>\n-    </span></dt><dd><p>Make the member functions table and classic_table public.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#761\" target=\"_top\">761</a>:\n-        <span class=\"emphasis\"><em>unordered_map needs an at() member function</em></span>\n-    </span></dt><dd><p>In C++0x mode, add at() and at() const.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#775\" target=\"_top\">775</a>:\n-        <span class=\"emphasis\"><em>Tuple indexing should be unsigned?</em></span>\n-    </span></dt><dd><p>Implement the int -&gt; size_t replacements.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#776\" target=\"_top\">776</a>:\n-        <span class=\"emphasis\"><em>Undescribed assign function of std::array</em></span>\n-    </span></dt><dd><p>In C++0x mode, remove assign, add fill.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-defects.html#781\" target=\"_top\">781</a>:\n-        <span class=\"emphasis\"><em>std::complex should add missing C99 functions</em></span>\n-    </span></dt><dd><p>In C++0x mode, add std::proj.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#809\" target=\"_top\">809</a>:\n-        <span class=\"emphasis\"><em>std::swap should be overloaded for array types</em></span>\n-    </span></dt><dd><p>Add the overload.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#844\" target=\"_top\">844</a>:\n-        <span class=\"emphasis\"><em>complex pow return type is ambiguous</em></span>\n-    </span></dt><dd><p>In C++0x mode, remove the pow(complex&lt;T&gt;, int) signature.\n-    </p></dd><dt><span class=\"term\"><a class=\"ulink\" href=\"../ext/lwg-active.html#853\" target=\"_top\">853</a>:\n-        <span class=\"emphasis\"><em>to_string needs updating with zero and one</em></span>\n-    </span></dt><dd><p>Update / add the signatures.\n-    </p></dd></dl></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch01s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt01ch01.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">License\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a02.\u00a0Setup</td></tr></table></div></body></html>"}, {"sha": "b6738731ea61cf1d8833c6f18fd8785518d5affe", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch02.html", "status": "removed", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch02.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,98 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a02.\u00a0Setup</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"intro.html\" title=\"Part\u00a0I.\u00a0Introduction\" /><link rel=\"prev\" href=\"bk01pt01ch01s03.html\" title=\"Bugs\" /><link rel=\"next\" href=\"configure.html\" title=\"Configure\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a02.\u00a0Setup</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch01s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0I.\u00a0Introduction</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"configure.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.intro.setup\"></a>Chapter\u00a02.\u00a0Setup</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt01ch02.html#manual.intro.setup.prereq\">Prerequisites</a></span></dt><dt><span class=\"sect1\"><a href=\"configure.html\">Configure</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt01ch02s03.html\">Make</a></span></dt><dt><span class=\"sect1\"><a href=\"test.html\">Test</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"test.html#test.organization\">Organization</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.run\">Running the Testsuite</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.new_tests\">Writing a new test case</a></span></dt><dt><span class=\"sect2\"><a href=\"test.html#test.harness\">Test Harness and Utilities</a></span></dt></dl></dd></dl></div><p>To transform libstdc++ sources into installed include files\n-   and properly built binaries useful for linking to other software is\n-   a multi-step process. Steps include getting the sources,\n-   configuring and building the sources, testing, and installation.\n-   </p><p>The general outline of commands is something like:\n-   </p><pre class=\"programlisting\">\n-   <span class=\"emphasis\"><em>get gcc sources</em></span>\n-   <span class=\"emphasis\"><em>extract into gccsrcdir</em></span>\n-   mkdir <span class=\"emphasis\"><em>gccbuilddir</em></span>\n-   cd <span class=\"emphasis\"><em>gccbuilddir</em></span>\n-   <span class=\"emphasis\"><em>gccsrcdir</em></span>/configure --prefix=<span class=\"emphasis\"><em>destdir</em></span> --other-opts...\n-   make\n-   make check\n-   make install\n-   </pre><p>\n-     Each step is described in more detail in the following sections.\n-   </p><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.setup.prereq\"></a>Prerequisites</h2></div></div></div><p>\n-  Because libstdc++ is part of GCC, the primary source for\n-   installation instructions is\n-   <a class=\"ulink\" href=\"http://gcc.gnu.org/install/\" target=\"_top\">the GCC install page</a>.\n-   In particular, list of prerequisite software needed to build the library \n-   <a class=\"ulink\" href=\"http://gcc.gnu.org/install/prerequisites.html\" target=\"_top\">\n-   starts with those requirements.</a> The same pages also list\n-   the tools you will need if you wish to modify the source.\n-</p><p>\n-   Additional data is given here only where it applies to libstdc++.\n-  </p><p>As of GCC 4.0.1 the minimum version of binutils required to build\n-      libstdc++ is <code class=\"code\">2.15.90.0.1.1</code>. You can get snapshots\n-      (as well as releases) of binutils from\n-      <a class=\"ulink\" href=\"ftp://sources.redhat.com/pub/binutils\" target=\"_top\">\n-      ftp://sources.redhat.com/pub/binutils</a>.\n-      Older releases of libstdc++ do not require such a recent version,\n-      but to take full advantage of useful space-saving features and\n-      bug-fixes you should use a recent binutils whenever possible.\n-      The configure process will automatically detect and use these\n-      features if the underlying support is present.\n-   </p><p>\n-   Finally, a few system-specific requirements: \n-   </p><div class=\"variablelist\"><dl><dt><span class=\"term\">linux</span></dt><dd><p>\n-\t  If gcc 3.1.0 or later on is being used on linux, an attempt\n-\t  will be made to use \"C\" library functionality necessary for\n-\t  C++ named locale support.  For gcc 3.2.1 and later, this\n-\t  means that glibc 2.2.5 or later is required and the \"C\"\n-\t  library de_DE locale information must be installed.\n-\t</p><p>\n-\t  Note however that the sanity checks involving the de_DE\n-\t  locale are skipped when an explicit --enable-clocale=gnu\n-\t  configure option is used: only the basic checks are carried\n-\t  out, defending against misconfigurations.\n-\t</p><p>\n-\t  If the 'gnu' locale model is being used, the following\n-\t  locales are used and tested in the libstdc++ testsuites.\n-\t  The first column is the name of the locale, the second is\n-\t  the character set it is expected to use.\n-\t</p><pre class=\"programlisting\">\n-de_DE               ISO-8859-1\n-de_DE@euro          ISO-8859-15\n-en_HK               ISO-8859-1\n-en_PH               ISO-8859-1\n-en_US               ISO-8859-1\n-en_US.ISO-8859-1    ISO-8859-1\n-en_US.ISO-8859-15   ISO-8859-15\n-en_US.UTF-8         UTF-8\n-es_ES               ISO-8859-1\n-es_MX               ISO-8859-1\n-fr_FR               ISO-8859-1\n-fr_FR@euro          ISO-8859-15\n-is_IS               UTF-8\n-it_IT               ISO-8859-1\n-ja_JP.eucjp         EUC-JP\n-se_NO.UTF-8         UTF-8\n-ta_IN               UTF-8\n-zh_TW               BIG5\n-</pre><p>Failure to have the underlying \"C\" library locale\n-      information installed will mean that C++ named locales for the\n-      above regions will not work: because of this, the libstdc++\n-      testsuite will skip the named locale tests. If this isn't an\n-      issue, don't worry about it. If named locales are needed, the\n-      underlying locale information must be installed. Note that\n-      rebuilding libstdc++ after the \"C\" locales are installed is not\n-      necessary.\n-      </p><p>\n-\tTo install support for locales, do only one of the following:\n-      </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>install all locales</p><div class=\"itemizedlist\"><ul type=\"circle\"><li><p>with RedHat Linux:\n-\t      </p><p> <code class=\"code\"> export LC_ALL=C </code> \n-\t      </p><p> <code class=\"code\"> rpm -e glibc-common --nodeps </code> \n-\t      </p><p> \n-\t\t<code class=\"code\"> rpm -i --define \"_install_langs all\"\n-\t\t glibc-common-2.2.5-34.i386.rpm \n-\t\t</code> \n-\t      </p></li><li><p>\n-\t       Instructions for other operating systems solicited.\n-\t     </p></li></ul></div></li><li><p>install just the necessary locales</p><div class=\"itemizedlist\"><ul type=\"circle\"><li><p>with Debian Linux:</p><p> Add the above list, as shown, to the file\n-\t      <code class=\"code\">/etc/locale.gen</code> </p><p> run <code class=\"code\">/usr/sbin/locale-gen</code> </p></li><li><p>on most Unix-like operating systems:</p><p><code class=\"code\"> localedef -i de_DE -f ISO-8859-1 de_DE </code></p><p>(repeat for each entry in the above list) </p></li><li><p>\n-\t       Instructions for other operating systems solicited.\n-\t    </p></li></ul></div></li></ul></div></dd></dl></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch01s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"intro.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"configure.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Bugs\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Configure</td></tr></table></div></body></html>"}, {"sha": "51d0c8c99d183bf2fc1fcc4fd9cc330ef57718bf", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch02s03.html", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch02s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch02s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch02s03.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,9 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Make</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt01ch02.html\" title=\"Chapter\u00a02.\u00a0Setup\" /><link rel=\"prev\" href=\"configure.html\" title=\"Configure\" /><link rel=\"next\" href=\"test.html\" title=\"Test\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Make</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"configure.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a02.\u00a0Setup</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"test.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.setup.make\"></a>Make</h2></div></div></div><p>If you have never done this before, you should read the basic\n-      <a class=\"ulink\" href=\"http://gcc.gnu.org/install/\" target=\"_top\">GCC Installation\n-      Instructions</a> first.  Read <span class=\"emphasis\"><em>all of them</em></span>.\n-      <span class=\"emphasis\"><em>Twice.</em></span>\n-   </p><p>Then type:<span class=\"command\"><strong>make</strong></span>, and congratulations, you're\n-started to build.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"configure.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt01ch02.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"test.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Configure\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Test</td></tr></table></div></body></html>"}, {"sha": "537a34b31710653f32d138bd1ea9df7636d3914f", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch03s02.html", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s02.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,101 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Headers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"using.html\" title=\"Chapter\u00a03.\u00a0Using\" /><link rel=\"prev\" href=\"using.html\" title=\"Chapter\u00a03.\u00a0Using\" /><link rel=\"next\" href=\"bk01pt01ch03s03.html\" title=\"Namespaces\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Headers</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"using.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a03.\u00a0Using</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch03s03.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.headers\"></a>Headers</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.headers.all\"></a>Header Files</h3></div></div></div><p>\n-     The C++ standard specifies the entire set of header files that\n-     must be available to all hosted implementations.  Actually, the\n-     word \"files\" is a misnomer, since the contents of the\n-     headers don't necessarily have to be in any kind of external\n-     file.  The only rule is that when one <code class=\"code\">#include</code>'s a\n-     header, the contents of that header become available, no matter\n-     how.\n-   </p><p>\n-   That said, in practice files are used.\n-   </p><p> \n-     There are two main types of include files: header files related\n-     to a specific version of the ISO C++ standard (called Standard\n-     Headers), and all others (TR1, C++ ABI, and Extensions).\n-   </p><p>\n-     Two dialects of standard headers are supported, corresponding to\n-     the 1998 standard as updated for 2003, and the draft of the\n-     upcoming 200x standard.\n-   </p><p>\n-     C++98/03 include files. These are available in the default compilation mode, i.e. <code class=\"code\">-std=c++98</code> or <code class=\"code\">-std=gnu++98</code>.\n-   </p><div class=\"table\"><a id=\"id516690\"></a><p class=\"title\"><b>Table\u00a03.1.\u00a0C++ 1998 Library Headers</b></p><div class=\"table-contents\"><table summary=\"C++ 1998 Library Headers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"filename\">bitset</code></td><td align=\"left\"><code class=\"filename\">complex</code></td><td align=\"left\"><code class=\"filename\">deque</code></td><td align=\"left\"><code class=\"filename\">exception</code></td></tr><tr><td align=\"left\"><code class=\"filename\">fstream</code></td><td align=\"left\"><code class=\"filename\">functional</code></td><td align=\"left\"><code class=\"filename\">iomanip</code></td><td align=\"left\"><code class=\"filename\">ios</code></td><td align=\"left\"><code class=\"filename\">iosfwd</code></td></tr><tr><td align=\"left\"><code class=\"filename\">iostream</code></td><td align=\"left\"><code class=\"filename\">istream</code></td><td align=\"left\"><code class=\"filename\">iterator</code></td><td align=\"left\"><code class=\"filename\">limits</code></td><td align=\"left\"><code class=\"filename\">list</code></td></tr><tr><td align=\"left\"><code class=\"filename\">locale</code></td><td align=\"left\"><code class=\"filename\">map</code></td><td align=\"left\"><code class=\"filename\">memory</code></td><td align=\"left\"><code class=\"filename\">new</code></td><td align=\"left\"><code class=\"filename\">numeric</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ostream</code></td><td align=\"left\"><code class=\"filename\">queue</code></td><td align=\"left\"><code class=\"filename\">set</code></td><td align=\"left\"><code class=\"filename\">sstream</code></td><td align=\"left\"><code class=\"filename\">stack</code></td></tr><tr><td align=\"left\"><code class=\"filename\">stdexcept</code></td><td align=\"left\"><code class=\"filename\">streambuf</code></td><td align=\"left\"><code class=\"filename\">string</code></td><td align=\"left\"><code class=\"filename\">utility</code></td><td align=\"left\"><code class=\"filename\">typeinfo</code></td></tr><tr><td align=\"left\"><code class=\"filename\">valarray</code></td><td align=\"left\"><code class=\"filename\">vector</code></td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"id508989\"></a><p class=\"title\"><b>Table\u00a03.2.\u00a0C++ 1998 Library Headers for C Library Facilities</b></p><div class=\"table-contents\"><table summary=\"C++ 1998 Library Headers for C Library Facilities\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">cassert</code></td><td align=\"left\"><code class=\"filename\">cerrno</code></td><td align=\"left\"><code class=\"filename\">cctype</code></td><td align=\"left\"><code class=\"filename\">cfloat</code></td><td align=\"left\"><code class=\"filename\">ciso646</code></td></tr><tr><td align=\"left\"><code class=\"filename\">climits</code></td><td align=\"left\"><code class=\"filename\">clocale</code></td><td align=\"left\"><code class=\"filename\">cmath</code></td><td align=\"left\"><code class=\"filename\">csetjmp</code></td><td align=\"left\"><code class=\"filename\">csignal</code></td></tr><tr><td align=\"left\"><code class=\"filename\">cstdarg</code></td><td align=\"left\"><code class=\"filename\">cstddef</code></td><td align=\"left\"><code class=\"filename\">cstdio</code></td><td align=\"left\"><code class=\"filename\">cstdlib</code></td><td align=\"left\"><code class=\"filename\">cstring</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ctime</code></td><td align=\"left\"><code class=\"filename\">cwchar</code></td><td align=\"left\"><code class=\"filename\">cwctype</code></td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n-C++0x include files. These are only available in C++0x compilation\n-mode, i.e. <code class=\"literal\">-std=c++0x</code> or <code class=\"literal\">-std=gnu++0x</code>.\n-</p><p></p><div class=\"table\"><a id=\"id506064\"></a><p class=\"title\"><b>Table\u00a03.3.\u00a0C++ 200x Library Headers</b></p><div class=\"table-contents\"><table summary=\"C++ 200x Library Headers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">algorithm</code></td><td align=\"left\"><code class=\"filename\">array</code></td><td align=\"left\"><code class=\"filename\">bitset</code></td><td align=\"left\"><code class=\"filename\">chrono</code></td><td align=\"left\"><code class=\"filename\">complex</code></td></tr><tr><td align=\"left\"><code class=\"filename\">condition_variable</code></td><td align=\"left\"><code class=\"filename\">deque</code></td><td align=\"left\"><code class=\"filename\">exception</code></td><td align=\"left\"><code class=\"filename\">forward_list</code></td><td align=\"left\"><code class=\"filename\">fstream</code></td></tr><tr><td align=\"left\"><code class=\"filename\">functional</code></td><td align=\"left\"><code class=\"filename\">initalizer_list</code></td><td align=\"left\"><code class=\"filename\">iomanip</code></td><td align=\"left\"><code class=\"filename\">ios</code></td><td align=\"left\"><code class=\"filename\">iosfwd</code></td></tr><tr><td align=\"left\"><code class=\"filename\">iostream</code></td><td align=\"left\"><code class=\"filename\">istream</code></td><td align=\"left\"><code class=\"filename\">iterator</code></td><td align=\"left\"><code class=\"filename\">limits</code></td><td align=\"left\"><code class=\"filename\">list</code></td></tr><tr><td align=\"left\"><code class=\"filename\">locale</code></td><td align=\"left\"><code class=\"filename\">map</code></td><td align=\"left\"><code class=\"filename\">memory</code></td><td align=\"left\"><code class=\"filename\">mutex</code></td><td align=\"left\"><code class=\"filename\">new</code></td></tr><tr><td align=\"left\"><code class=\"filename\">numeric</code></td><td align=\"left\"><code class=\"filename\">ostream</code></td><td align=\"left\"><code class=\"filename\">queue</code></td><td align=\"left\"><code class=\"filename\">random</code></td><td align=\"left\"><code class=\"filename\">ratio</code></td></tr><tr><td align=\"left\"><code class=\"filename\">regex</code></td><td align=\"left\"><code class=\"filename\">set</code></td><td align=\"left\"><code class=\"filename\">sstream</code></td><td align=\"left\"><code class=\"filename\">stack</code></td><td align=\"left\"><code class=\"filename\">stdexcept</code></td></tr><tr><td align=\"left\"><code class=\"filename\">streambuf</code></td><td align=\"left\"><code class=\"filename\">string</code></td><td align=\"left\"><code class=\"filename\">system_error</code></td><td align=\"left\"><code class=\"filename\">thread</code></td><td align=\"left\"><code class=\"filename\">tuple</code></td></tr><tr><td align=\"left\"><code class=\"filename\">type_traits</code></td><td align=\"left\"><code class=\"filename\">typeinfo</code></td><td align=\"left\"><code class=\"filename\">unordered_map</code></td><td align=\"left\"><code class=\"filename\">unordered_set</code></td><td align=\"left\"><code class=\"filename\">utility</code></td></tr><tr><td align=\"left\"><code class=\"filename\">valarray</code></td><td align=\"left\"><code class=\"filename\">vector</code></td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"id450972\"></a><p class=\"title\"><b>Table\u00a03.4.\u00a0C++ 200x Library Headers for C Library Facilities</b></p><div class=\"table-contents\"><table summary=\"C++ 200x Library Headers for C Library Facilities\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">cassert</code></td><td align=\"left\"><code class=\"filename\">ccomplex</code></td><td align=\"left\"><code class=\"filename\">cctype</code></td><td align=\"left\"><code class=\"filename\">cerrno</code></td><td align=\"left\"><code class=\"filename\">cfenv</code></td></tr><tr><td align=\"left\"><code class=\"filename\">cfloat</code></td><td align=\"left\"><code class=\"filename\">cinttypes</code></td><td align=\"left\"><code class=\"filename\">ciso646</code></td><td align=\"left\"><code class=\"filename\">climits</code></td><td align=\"left\"><code class=\"filename\">clocale</code></td></tr><tr><td align=\"left\"><code class=\"filename\">cmath</code></td><td align=\"left\"><code class=\"filename\">csetjmp</code></td><td align=\"left\"><code class=\"filename\">csignal</code></td><td align=\"left\"><code class=\"filename\">cstdarg</code></td><td align=\"left\"><code class=\"filename\">cstdatomic</code></td></tr><tr><td align=\"left\"><code class=\"filename\">cstdbool</code></td><td align=\"left\"><code class=\"filename\">cstddef</code></td><td align=\"left\"><code class=\"filename\">cstdint</code></td><td align=\"left\"><code class=\"filename\">cstdlib</code></td><td align=\"left\"><code class=\"filename\">cstdio</code></td></tr><tr><td align=\"left\"><code class=\"filename\">cstring</code></td><td align=\"left\"><code class=\"filename\">ctgmath</code></td><td align=\"left\"><code class=\"filename\">ctime</code></td><td align=\"left\"><code class=\"filename\">cuchar</code></td><td align=\"left\"><code class=\"filename\">cwchar</code></td></tr><tr><td align=\"left\"><code class=\"filename\">cwctype</code></td><td align=\"left\"><code class=\"filename\">stdatomic.h</code></td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n-  In addition, TR1 includes as:\n-</p><div class=\"table\"><a id=\"id474709\"></a><p class=\"title\"><b>Table\u00a03.5.\u00a0C++ TR1 Library Headers</b></p><div class=\"table-contents\"><table summary=\"C++ TR1 Library Headers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">tr1/array</code></td><td align=\"left\"><code class=\"filename\">tr1/complex</code></td><td align=\"left\"><code class=\"filename\">tr1/memory</code></td><td align=\"left\"><code class=\"filename\">tr1/functional</code></td><td align=\"left\"><code class=\"filename\">tr1/random</code></td></tr><tr><td align=\"left\"><code class=\"filename\">tr1/regex</code></td><td align=\"left\"><code class=\"filename\">tr1/tuple</code></td><td align=\"left\"><code class=\"filename\">tr1/type_traits</code></td><td align=\"left\"><code class=\"filename\">tr1/unordered_map</code></td><td align=\"left\"><code class=\"filename\">tr1/unordered_set</code></td></tr><tr><td align=\"left\"><code class=\"filename\">tr1/utility</code></td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"id474193\"></a><p class=\"title\"><b>Table\u00a03.6.\u00a0C++ TR1 Library Headers for C Library Facilities</b></p><div class=\"table-contents\"><table summary=\"C++ TR1 Library Headers for C Library Facilities\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">tr1/ccomplex</code></td><td align=\"left\"><code class=\"filename\">tr1/cfenv</code></td><td align=\"left\"><code class=\"filename\">tr1/cfloat</code></td><td align=\"left\"><code class=\"filename\">tr1/cmath</code></td><td align=\"left\"><code class=\"filename\">tr1/cinttypes</code></td></tr><tr><td align=\"left\"><code class=\"filename\">tr1/climits</code></td><td align=\"left\"><code class=\"filename\">tr1/cstdarg</code></td><td align=\"left\"><code class=\"filename\">tr1/cstdbool</code></td><td align=\"left\"><code class=\"filename\">tr1/cstdint</code></td><td align=\"left\"><code class=\"filename\">tr1/cstdio</code></td></tr><tr><td align=\"left\"><code class=\"filename\">tr1/cstdlib</code></td><td align=\"left\"><code class=\"filename\">tr1/ctgmath</code></td><td align=\"left\"><code class=\"filename\">tr1/ctime</code></td><td align=\"left\"><code class=\"filename\">tr1/cwchar</code></td><td align=\"left\"><code class=\"filename\">tr1/cwctype</code></td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n-  Also included are files for the C++ ABI interface:\n-</p><div class=\"table\"><a id=\"id466545\"></a><p class=\"title\"><b>Table\u00a03.7.\u00a0C++ ABI Headers</b></p><div class=\"table-contents\"><table summary=\"C++ ABI Headers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">cxxabi.h</code></td><td align=\"left\"><code class=\"filename\">cxxabi_forced.h</code></td></tr></tbody></table></div></div><br class=\"table-break\" /><p>\n-  And a large variety of extensions.\n-</p><div class=\"table\"><a id=\"id458800\"></a><p class=\"title\"><b>Table\u00a03.8.\u00a0Extension Headers</b></p><div class=\"table-contents\"><table summary=\"Extension Headers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">ext/algorithm</code></td><td align=\"left\"><code class=\"filename\">ext/atomicity.h</code></td><td align=\"left\"><code class=\"filename\">ext/array_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/bitmap_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/cast.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/codecvt_specializations.h</code></td><td align=\"left\"><code class=\"filename\">ext/concurrence.h</code></td><td align=\"left\"><code class=\"filename\">ext/debug_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/enc_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/extptr_allocator.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/functional</code></td><td align=\"left\"><code class=\"filename\">ext/iterator</code></td><td align=\"left\"><code class=\"filename\">ext/malloc_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/memory</code></td><td align=\"left\"><code class=\"filename\">ext/mt_allocator.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/new_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/numeric</code></td><td align=\"left\"><code class=\"filename\">ext/numeric_traits.h</code></td><td align=\"left\"><code class=\"filename\">ext/pb_ds/assoc_container.h</code></td><td align=\"left\"><code class=\"filename\">ext/pb_ds/priority_queue.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/pod_char_traits.h</code></td><td align=\"left\"><code class=\"filename\">ext/pool_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/rb_tree</code></td><td align=\"left\"><code class=\"filename\">ext/rope</code></td><td align=\"left\"><code class=\"filename\">ext/slist</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/stdio_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/stdio_sync_filebuf.h</code></td><td align=\"left\"><code class=\"filename\">ext/throw_allocator.h</code></td><td align=\"left\"><code class=\"filename\">ext/typelist.h</code></td><td align=\"left\"><code class=\"filename\">ext/type_traits.h</code></td></tr><tr><td align=\"left\"><code class=\"filename\">ext/vstring.h</code></td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td><td class=\"auto-generated\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"id471622\"></a><p class=\"title\"><b>Table\u00a03.9.\u00a0Extension Debug Headers</b></p><div class=\"table-contents\"><table summary=\"Extension Debug Headers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">debug/bitset</code></td><td align=\"left\"><code class=\"filename\">debug/deque</code></td><td align=\"left\"><code class=\"filename\">debug/list</code></td><td align=\"left\"><code class=\"filename\">debug/map</code></td><td align=\"left\"><code class=\"filename\">debug/set</code></td></tr><tr><td align=\"left\"><code class=\"filename\">debug/string</code></td><td align=\"left\"><code class=\"filename\">debug/unordered_map</code></td><td align=\"left\"><code class=\"filename\">debug/unordered_set</code></td><td align=\"left\"><code class=\"filename\">debug/vector</code></td><td class=\"auto-generated\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><p></p><div class=\"table\"><a id=\"id475105\"></a><p class=\"title\"><b>Table\u00a03.10.\u00a0Extension Parallel Headers</b></p><div class=\"table-contents\"><table summary=\"Extension Parallel Headers\" border=\"1\"><colgroup><col align=\"left\" /><col align=\"left\" /></colgroup><tbody><tr><td align=\"left\"><code class=\"filename\">parallel/algorithm</code></td><td align=\"left\"><code class=\"filename\">parallel/numeric</code></td></tr></tbody></table></div></div><br class=\"table-break\" /></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.headers.mixing\"></a>Mixing Headers</h3></div></div></div><p> A few simple rules.\n-</p><p>First, mixing different dialects of the standard headers is not\n-possible. It's an all-or-nothing affair. Thus, code like\n-</p><pre class=\"programlisting\">\n-#include &lt;array&gt;\n-#include &lt;functional&gt;\n-</pre><p>Implies C++0x mode. To use the entities in &lt;array&gt;, the C++0x\n-compilation mode must be used, which implies the C++0x functionality\n-(and deprecations) in &lt;functional&gt; will be present.\n-</p><p>Second, the other headers can be included with either dialect of\n-the standard headers, although features and types specific to C++0x\n-are still only enabled when in C++0x compilation mode. So, to use\n-rvalue references with <code class=\"code\">__gnu_cxx::vstring</code>, or to use the\n-debug-mode versions of <code class=\"code\">std::unordered_map</code>, one must use\n-the <code class=\"code\">std=gnu++0x</code> compiler flag. (Or <code class=\"code\">std=c++0x</code>, of course.)\n-</p><p>A special case of the second rule is the mixing of TR1 and C++0x\n-facilities. It is possible (although not especially prudent) to\n-include both the TR1 version and the C++0x version of header in the\n-same translation unit:\n-</p><pre class=\"programlisting\">\n-#include &lt;tr1/type_traits&gt;\n-#include &lt;type_traits&gt;\n-</pre><p> Several parts of C++0x diverge quite substantially from TR1 predecessors.\n-</p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.headers.cheaders\"></a>The C Headers and <code class=\"code\">namespace std</code></h3></div></div></div><p>\n-\tThe standard specifies that if one includes the C-style header\n-\t(&lt;math.h&gt; in this case), the symbols will be available\n-\tin the global namespace and perhaps in\n-\tnamespace <code class=\"code\">std::</code> (but this is no longer a firm\n-\trequirement.) One the other hand, including the C++-style\n-\theader (&lt;cmath&gt;) guarantees that the entities will be\n-\tfound in namespace std and perhaps in the global namespace.\n-      </p><p>\n-Usage of C++-style headers is recommended, as then\n-C-linkage names can be disambiguated by explicit qualification, such\n-as by <code class=\"code\">std::abort</code>. In addition, the C++-style headers can\n-use function overloading to provide a simpler interface to certain\n-families of C-functions. For instance in &lt;cmath&gt;, the\n-function <code class=\"code\">std::sin</code> has overloads for all the builtin\n-floating-point types. This means that <code class=\"code\">std::sin</code> can be\n-used uniformly, instead of a combination\n-of <code class=\"code\">std::sinf</code>, <code class=\"code\">std::sin</code>,\n-and <code class=\"code\">std::sinl</code>.\n-</p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.headers.pre\"></a>Precompiled Headers</h3></div></div></div><p>There are three base header files that are provided. They can be\n-used to precompile the standard headers and extensions into binary\n-files that may the be used to speed compiles that use these headers.\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>stdc++.h</p><p>Includes all standard headers. Actual content varies depending on\n-language dialect.\n-</p></li><li><p>stdtr1c++.h</p><p>Includes all of &lt;stdc++.h&gt;, and adds all the TR1 headers.\n-</p></li><li><p>extc++.h</p><p>Includes all of &lt;stdtr1c++.h&gt;, and adds all the Extension headers.\n-</p></li></ul></div><p>How to construct a .gch file from one of these base header files.</p><p>First, find the include directory for the compiler. One way to do\n-this is:</p><pre class=\"programlisting\">\n-g++ -v hello.cc\n-\n-#include &lt;...&gt; search starts here:\n- /mnt/share/bld/H-x86-gcc.20071201/include/c++/4.3.0\n-...\n-End of search list.\n-</pre><p>Then, create a precompiled header file with the same flags that\n-will be used to compile other projects.</p><pre class=\"programlisting\">\n-g++ -Winvalid-pch -x c++-header -g -O2 -o ./stdc++.h.gch /mnt/share/bld/H-x86-gcc.20071201/include/c++/4.3.0/x86_64-unknown-linux-gnu/bits/stdc++.h\n-</pre><p>The resulting file will be quite large: the current size is around\n-thirty megabytes. </p><p>How to use the resulting file.</p><pre class=\"programlisting\">\n-g++ -I. -include stdc++.h  -H -g -O2 hello.cc \n-</pre><p>Verification that the PCH file is being used is easy:</p><pre class=\"programlisting\">\n-g++ -Winvalid-pch -I. -include stdc++.h -H -g -O2 hello.cc -o test.exe\n-! ./stdc++.h.gch\n-. /mnt/share/bld/H-x86-gcc.20071201/include/c++/4.3.0/iostream\n-. /mnt/share/bld/H-x86-gcc.20071201include/c++/4.3.0/string\n-</pre><p>The exclamation point to the left of the <code class=\"code\">stdc++.h.gch</code> listing means that the generated PCH file was used, and thus the </p><p></p><p> Detailed information about creating precompiled header files can be found in the GCC <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/gcc/Precompiled-Headers.html\" target=\"_top\">documentation</a>.\n-</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"using.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch03s03.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a03.\u00a0Using\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Namespaces</td></tr></table></div></body></html>"}, {"sha": "2250ea69fec97570cb7876b2279fa0eb19170a08", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch03s03.html", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s03.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s03.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s03.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,61 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Namespaces</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"using.html\" title=\"Chapter\u00a03.\u00a0Using\" /><link rel=\"prev\" href=\"bk01pt01ch03s02.html\" title=\"Headers\" /><link rel=\"next\" href=\"bk01pt01ch03s04.html\" title=\"Macros\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Namespaces</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch03s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a03.\u00a0Using</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch03s04.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.namespaces\"></a>Namespaces</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.namespaces.all\"></a>Available Namespaces</h3></div></div></div><p> There are three main namespaces.\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>std</p><p>The ISO C++ standards specify that \"all library entities are defined\n-within namespace std.\" This includes namespaces nested\n-within <code class=\"code\">namespace std</code>, such as <code class=\"code\">namespace\n-std::tr1</code>.\n-</p></li><li><p>abi</p><p>Specified by the C++ ABI. This ABI specifies a number of type and\n-function APIs supplemental to those required by the ISO C++ Standard,\n-but necessary for interoperability.\n-</p></li><li><p>__gnu_</p><p>Indicating one of several GNU extensions. Choices\n-include <code class=\"code\">__gnu_cxx</code>, <code class=\"code\">__gnu_debug</code>, <code class=\"code\">__gnu_parallel</code>,\n-and <code class=\"code\">__gnu_pbds</code>.\n-</p></li></ul></div><p> A complete list of implementation namespaces (including namespace contents) is available in the generated source <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html\" target=\"_top\">documentation</a>. \n-</p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.namespaces.std\"></a>namespace std</h3></div></div></div><p>\n-      One standard requirement is that the library components are defined\n-      in <code class=\"code\">namespace std::</code>. Thus, in order to use these types or\n-      functions, one must do one of two things:\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>put a kind of <span class=\"emphasis\"><em>using-declaration</em></span> in your source\n-(either <code class=\"code\">using namespace std;</code> or i.e. <code class=\"code\">using\n-std::string;</code>) This approach works well for individual source files, but\n-should not be used in a global context, like header files.\n-\t  </p></li><li><p>use a <span class=\"emphasis\"><em>fully\n-qualified name</em></span>for each library symbol\n-(i.e. <code class=\"code\">std::string</code>, <code class=\"code\">std::cout</code>) Always can be\n-used, and usually enhanced, by strategic use of typedefs. (In the\n-cases where the qualified verbiage becomes unwieldy.)\n-\t  </p></li></ul></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.namespaces.comp\"></a>Using Namespace Composition</h3></div></div></div><p>\n-Best practice in programming suggests sequestering new data or\n-functionality in a sanely-named, unique namespace whenever\n-possible. This is considered an advantage over dumping everything in\n-the global namespace, as then name look-up can be explicitly enabled or\n-disabled as above, symbols are consistently mangled without repetitive\n-naming prefixes or macros, etc.\n-</p><p>For instance, consider a project that defines most of its classes in <code class=\"code\">namespace gtk</code>. It is possible to\n-\tadapt <code class=\"code\">namespace gtk</code> to <code class=\"code\">namespace std</code> by using a C++-feature called\n-\t<span class=\"emphasis\"><em>namespace composition</em></span>. This is what happens if\n-\ta <span class=\"emphasis\"><em>using</em></span>-declaration is put into a\n-\tnamespace-definition: the imported symbol(s) gets imported into the\n-\tcurrently active namespace(s). For example:\n-</p><pre class=\"programlisting\">\n-namespace gtk \n-{\n-  using std::string;\n-  using std::tr1::array;\n-\n-  class Window { ... };\n-}\n-</pre><p>\n-\tIn this example, <code class=\"code\">std::string</code> gets imported into\n-\t<code class=\"code\">namespace gtk</code>.  The result is that use of\n-\t<code class=\"code\">std::string</code> inside namespace gtk can just use <code class=\"code\">string</code>, without the explicit qualification. \n-\tAs an added bonus, \n-\t<code class=\"code\">std::string</code> does not get imported into\n-\tthe global namespace.  Additionally, a more elaborate arrangement can be made for backwards compatibility and portability, whereby the\n-\t<code class=\"code\">using</code>-declarations can wrapped in macros that\n-\tare set based on autoconf-tests to either \"\" or i.e. <code class=\"code\">using\n-\t  std::string;</code> (depending on whether the system has\n-\tlibstdc++ in <code class=\"code\">std::</code> or not).  (ideas from\n-\t<code class=\"email\">&lt;<a class=\"email\" href=\"mailto:llewelly@dbritsch.dsl.xmission.com\">llewelly@dbritsch.dsl.xmission.com</a>&gt;</code>, Karl Nelson <code class=\"email\">&lt;<a class=\"email\" href=\"mailto:kenelson@ece.ucdavis.edu\">kenelson@ece.ucdavis.edu</a>&gt;</code>)\n-</p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch03s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch03s04.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Headers\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Macros</td></tr></table></div></body></html>"}, {"sha": "3d839e9afe3f98d429999fb493b51b245c51176d", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch03s04.html", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s04.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s04.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s04.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,70 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Macros</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"using.html\" title=\"Chapter\u00a03.\u00a0Using\" /><link rel=\"prev\" href=\"bk01pt01ch03s03.html\" title=\"Namespaces\" /><link rel=\"next\" href=\"bk01pt01ch03s05.html\" title=\"Concurrency\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Macros</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch03s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a03.\u00a0Using</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch03s05.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.macros\"></a>Macros</h2></div></div></div><p>All pre-processor switches and configurations are all gathered\n-      in the file <code class=\"code\">c++config.h</code>, which is generated during\n-      the libstdc++ configuration and build process, and included by\n-      files part of the public libstdc++ API. Most of these macros\n-      should not be used by consumers of libstdc++, and are reserved\n-      for internal implementation use. <span class=\"emphasis\"><em>These macros cannot be\n-      redefined</em></span>. However, a select handful of these macro\n-      control libstdc++ extensions and extra features, or provide\n-      versioning information for the API, and are able to be used.\n-   </p><p>All library macros begin with <code class=\"code\">_GLIBCXX_</code> (except for\n-   versions 3.1.x to 3.3.x, which use <code class=\"code\">_GLIBCPP_</code>).\n-   </p><p>Below is the macro which users may check for library version\n-      information. </p><div class=\"variablelist\"><dl><dt><span class=\"term\"><code class=\"code\">__GLIBCXX__</code></span></dt><dd><p>The current version of\n-    libstdc++ in compressed ISO date format, form of an unsigned\n-    long. For details on the value of this particular macro for a\n-    particular release, please consult this <a class=\"ulink\" href=\"abi.html\" target=\"_top\">\n-    document</a>.\n-    </p></dd></dl></div><p>Below are the macros which users may change with #define/#undef or\n-      with -D/-U compiler flags.  The default state of the symbol is\n-      listed.</p><p>\u201c<span class=\"quote\">Configurable</span>\u201d (or \u201c<span class=\"quote\">Not configurable</span>\u201d) means\n-      that the symbol is initially chosen (or not) based on\n-      --enable/--disable options at library build and configure time\n-      (documented <a class=\"link\" href=\"configure.html\" title=\"Configure\">here</a>), with the\n-      various --enable/--disable choices being translated to\n-      #define/#undef).\n-   </p><p> <acronym class=\"acronym\">ABI</acronym> means that changing from the default value may\n-  mean changing the <acronym class=\"acronym\">ABI</acronym> of compiled code. In other words, these\n-  choices control code which has already been compiled (i.e., in a\n-  binary such as libstdc++.a/.so).  If you explicitly #define or\n-  #undef these macros, the <span class=\"emphasis\"><em>headers</em></span> may see different code\n-  paths, but the <span class=\"emphasis\"><em>libraries</em></span> which you link against will not.\n-  Experimenting with different values with the expectation of\n-  consistent linkage requires changing the config headers before\n-  building/installing the library.\n-   </p><div class=\"variablelist\"><dl><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_DEPRECATED</code></span></dt><dd><p>\n-\tDefined by default. Not configurable. ABI-changing. Turning this off\n-        removes older ARM-style iostreams code, and other anachronisms\n-        from the API.  This macro is dependent on the version of the\n-        standard being tracked, and as a result may give different results for\n-        <code class=\"code\">-std=c++98</code> and <code class=\"code\">-std=c++0x</code>. This may\n-        be useful in updating old C++ code which no longer meet the\n-        requirements of the language, or for checking current code\n-        against new language standards.  \n-    </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_FORCE_NEW</code></span></dt><dd><p>\n-\tUndefined by default. When defined, memory allocation and\n-\tallocators controlled by libstdc++ call operator new/delete\n-\twithout caching and pooling. Configurable via\n-\t<code class=\"code\">--enable-libstdcxx-allocator</code>. ABI-changing.\n-      </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_CONCEPT_CHECKS</code></span></dt><dd><p>\n-\tUndefined by default.  Configurable via\n-\t<code class=\"code\">--enable-concept-checks</code>.  When defined, performs\n-\tcompile-time checking on certain template instantiations to\n-\tdetect violations of the requirements of the standard.  This\n-\tis described in more detail <a class=\"ulink\" href=\"../19_diagnostics/howto.html#3\" target=\"_top\">here</a>.\n-      </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_DEBUG</code></span></dt><dd><p>\n-\tUndefined by default. When defined, compiles\n-    user code using the <a class=\"ulink\" href=\"../ext/debug.html#safe\" target=\"_top\">libstdc++ debug\n-    mode</a>.\n-      </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_DEBUG_PEDANTIC</code></span></dt><dd><p>\n-\tUndefined by default. When defined while\n-    compiling with the <a class=\"ulink\" href=\"../ext/debug.html#safe\" target=\"_top\">libstdc++ debug\n-    mode</a>, makes the debug mode extremely picky by making the use\n-    of libstdc++ extensions and libstdc++-specific behavior into\n-    errors.\n-      </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_PARALLEL</code></span></dt><dd><p>Undefined by default. When defined, compiles\n-    user code using the <a class=\"ulink\" href=\"../ext/parallel_mode.html\" target=\"_top\">libstdc++ parallel\n-    mode</a>.\n-      </p></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch03s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch03s05.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Namespaces\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Concurrency</td></tr></table></div></body></html>"}, {"sha": "d814ad6034eeecb972e8fe16452266799370739e", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch03s05.html", "status": "removed", "additions": 0, "deletions": 219, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s05.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s05.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s05.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,219 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Concurrency</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"using.html\" title=\"Chapter\u00a03.\u00a0Using\" /><link rel=\"prev\" href=\"bk01pt01ch03s04.html\" title=\"Macros\" /><link rel=\"next\" href=\"bk01pt01ch03s06.html\" title=\"Exceptions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Concurrency</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch03s04.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a03.\u00a0Using</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch03s06.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.concurrency\"></a>Concurrency</h2></div></div></div><p>This section discusses issues surrounding the proper compilation\n-      of multithreaded applications which use the Standard C++\n-      library.  This information is GCC-specific since the C++\n-      standard does not address matters of multithreaded applications.\n-   </p><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.concurrency.prereq\"></a>Prerequisites</h3></div></div></div><p>All normal disclaimers aside, multithreaded C++ application are\n-      only supported when libstdc++ and all user code was built with\n-      compilers which report (via <code class=\"code\"> gcc/g++ -v </code>) the same thread\n-      model and that model is not <span class=\"emphasis\"><em>single</em></span>.  As long as your\n-      final application is actually single-threaded, then it should be\n-      safe to mix user code built with a thread model of\n-      <span class=\"emphasis\"><em>single</em></span> with a libstdc++ and other C++ libraries built\n-      with another thread model useful on the platform.  Other mixes\n-      may or may not work but are not considered supported.  (Thus, if\n-      you distribute a shared C++ library in binary form only, it may\n-      be best to compile it with a GCC configured with\n-      --enable-threads for maximal interchangeability and usefulness\n-      with a user population that may have built GCC with either\n-      --enable-threads or --disable-threads.)\n-   </p><p>When you link a multithreaded application, you will probably\n-      need to add a library or flag to g++.  This is a very\n-      non-standardized area of GCC across ports.  Some ports support a\n-      special flag (the spelling isn't even standardized yet) to add\n-      all required macros to a compilation (if any such flags are\n-      required then you must provide the flag for all compilations not\n-      just linking) and link-library additions and/or replacements at\n-      link time.  The documentation is weak.  Here is a quick summary\n-      to display how ad hoc this is: On Solaris, both -pthreads and\n-      -threads (with subtly different meanings) are honored.  On OSF,\n-      -pthread and -threads (with subtly different meanings) are\n-      honored.  On Linux/i386, -pthread is honored.  On FreeBSD,\n-      -pthread is honored.  Some other ports use other switches.\n-      AFAIK, none of this is properly documented anywhere other than\n-      in ``gcc -dumpspecs'' (look at lib and cpp entries).\n-   </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.concurrency.thread_safety\"></a>Thread Safety</h3></div></div></div><p>\n-We currently use the <a class=\"ulink\" href=\"http://www.sgi.com/tech/stl/thread_safety.html\" target=\"_top\">SGI STL</a> definition of thread safety.\n-</p><p>The library strives to be thread-safe when all of the following\n-         conditions are met:\n-      </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>The system's libc is itself thread-safe,\n-       </p></li><li><p>\n-\t   The compiler in use reports a thread model other than\n-\t   'single'. This can be tested via output from <code class=\"code\">gcc\n-\t   -v</code>. Multi-thread capable versions of gcc output\n-\t   something like this:\n-\t </p><pre class=\"programlisting\">\n-%gcc -v\n-Using built-in specs.\n-...\n-Thread model: posix\n-gcc version 4.1.2 20070925 (Red Hat 4.1.2-33)\n-</pre><p>Look for \"Thread model\" lines that aren't equal to \"single.\"</p></li><li><p>\n-\t Requisite command-line flags are used for atomic operations\n-\t and threading. Examples of this include <code class=\"code\">-pthread</code>\n-\t and <code class=\"code\">-march=native</code>, although specifics vary\n-\t depending on the host environment. See <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html\" target=\"_top\">Machine\n-\t Dependent Options</a>.\n-       </p></li><li><p>\n-\t   An implementation of atomicity.h functions\n-           exists for the architecture in question. See the internals documentation for more <a class=\"ulink\" href=\"../ext/concurrence.html\" target=\"_top\">details</a>.\n-       </p></li></ul></div><p>The user-code must guard against concurrent method calls which may\n-         access any particular library object's state.  Typically, the\n-         application programmer may infer what object locks must be held\n-         based on the objects referenced in a method call.  Without getting\n-         into great detail, here is an example which requires user-level\n-         locks:\n-      </p><pre class=\"programlisting\">\n-     library_class_a shared_object_a;\n-\n-     thread_main () {\n-       library_class_b *object_b = new library_class_b;\n-       shared_object_a.add_b (object_b);   // must hold lock for shared_object_a\n-       shared_object_a.mutate ();          // must hold lock for shared_object_a\n-     }\n-\n-     // Multiple copies of thread_main() are started in independent threads.</pre><p>Under the assumption that object_a and object_b are never exposed to\n-         another thread, here is an example that should not require any\n-         user-level locks:\n-      </p><pre class=\"programlisting\">\n-     thread_main () {\n-       library_class_a object_a;\n-       library_class_b *object_b = new library_class_b;\n-       object_a.add_b (object_b);\n-       object_a.mutate ();\n-     } </pre><p>All library objects are safe to use in a multithreaded program as\n-         long as each thread carefully locks out access by any other\n-         thread while it uses any object visible to another thread, i.e.,\n-         treat library objects like any other shared resource.  In general,\n-         this requirement includes both read and write access to objects;\n-         unless otherwise documented as safe, do not assume that two threads\n-         may access a shared standard library object at the same time.\n-      </p><p>See chapters <a class=\"ulink\" href=\"../17_intro/howto.html#3\" target=\"_top\">17</a> (library\n-         introduction), <a class=\"ulink\" href=\"../23_containers/howto.html#3\" target=\"_top\">23</a>\n-         (containers), and <a class=\"ulink\" href=\"../27_io/howto.html#9\" target=\"_top\">27</a> (I/O) for\n-         more information.\n-      </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.concurrency.atomics\"></a>Atomics</h3></div></div></div><p>\n-    </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.concurrency.io\"></a>IO</h3></div></div></div><p>I'll assume that you have already read the\n-      <a class=\"ulink\" href=\"../17_intro/howto.html#3\" target=\"_top\">general notes on library threads</a>,\n-      and the\n-      <a class=\"ulink\" href=\"../23_containers/howto.html#3\" target=\"_top\">notes on threaded container\n-      access</a> (you might not think of an I/O stream as a container, but\n-      the points made there also hold here).  If you have not read them,\n-      please do so first.\n-   </p><p>This gets a bit tricky.  Please read carefully, and bear with me.\n-   </p><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"concurrency.io.structure\"></a>Structure</h4></div></div></div><p>A wrapper\n-      type called <code class=\"code\">__basic_file</code> provides our abstraction layer\n-      for the <code class=\"code\">std::filebuf</code> classes.  Nearly all decisions dealing\n-      with actual input and output must be made in <code class=\"code\">__basic_file</code>.\n-   </p><p>A generic locking mechanism is somewhat in place at the filebuf layer,\n-      but is not used in the current code.  Providing locking at any higher\n-      level is akin to providing locking within containers, and is not done\n-      for the same reasons (see the links above).\n-   </p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"concurrency.io.defaults\"></a>Defaults</h4></div></div></div><p>The __basic_file type is simply a collection of small wrappers around\n-      the C stdio layer (again, see the link under Structure).  We do no\n-      locking ourselves, but simply pass through to calls to <code class=\"code\">fopen</code>,\n-      <code class=\"code\">fwrite</code>, and so forth.\n-   </p><p>So, for 3.0, the question of \"is multithreading safe for I/O\" \n-      must be answered with, \"is your platform's C library threadsafe\n-      for I/O?\"  Some are by default, some are not; many offer multiple\n-      implementations of the C library with varying tradeoffs of threadsafety\n-      and efficiency.  You, the programmer, are always required to take care\n-      with multiple threads.\n-   </p><p>(As an example, the POSIX standard requires that C stdio FILE*\n-       operations are atomic.  POSIX-conforming C libraries (e.g, on Solaris\n-       and GNU/Linux) have an internal mutex to serialize operations on\n-       FILE*s.  However, you still need to not do stupid things like calling\n-       <code class=\"code\">fclose(fs)</code> in one thread followed by an access of\n-       <code class=\"code\">fs</code> in another.)\n-   </p><p>So, if your platform's C library is threadsafe, then your\n-      <code class=\"code\">fstream</code> I/O operations will be threadsafe at the lowest\n-      level.  For higher-level operations, such as manipulating the data\n-      contained in the stream formatting classes (e.g., setting up callbacks\n-      inside an <code class=\"code\">std::ofstream</code>), you need to guard such accesses\n-      like any other critical shared resource.\n-   </p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"concurrency.io.future\"></a>Future</h4></div></div></div><p> A\n-      second choice may be available for I/O implementations:  libio.  This is\n-      disabled by default, and in fact will not currently work due to other\n-      issues.  It will be revisited, however.\n-   </p><p>The libio code is a subset of the guts of the GNU libc (glibc) I/O\n-      implementation.  When libio is in use, the <code class=\"code\">__basic_file</code>\n-      type is basically derived from FILE.  (The real situation is more\n-      complex than that... it's derived from an internal type used to\n-      implement FILE.  See libio/libioP.h to see scary things done with\n-      vtbls.)  The result is that there is no \"layer\" of C stdio\n-      to go through; the filebuf makes calls directly into the same\n-      functions used to implement <code class=\"code\">fread</code>, <code class=\"code\">fwrite</code>,\n-      and so forth, using internal data structures.  (And when I say\n-      \"makes calls directly,\" I mean the function is literally\n-      replaced by a jump into an internal function.  Fast but frightening.\n-      *grin*)\n-   </p><p>Also, the libio internal locks are used.  This requires pulling in\n-      large chunks of glibc, such as a pthreads implementation, and is one\n-      of the issues preventing widespread use of libio as the libstdc++\n-      cstdio implementation.\n-   </p><p>But we plan to make this work, at least as an option if not a future\n-      default.  Platforms running a copy of glibc with a recent-enough\n-      version will see calls from libstdc++ directly into the glibc already\n-      installed.  For other platforms, a copy of the libio subsection will\n-      be built and included in libstdc++.\n-   </p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"concurrency.io.alt\"></a>Alternatives</h4></div></div></div><p>Don't forget that other cstdio implementations are possible.  You could\n-      easily write one to perform your own forms of locking, to solve your\n-      \"interesting\" problems.\n-   </p></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.concurrency.containers\"></a>Containers</h3></div></div></div><p>This section discusses issues surrounding the design of\n-      multithreaded applications which use Standard C++ containers.\n-      All information in this section is current as of the gcc 3.0\n-      release and all later point releases.  Although earlier gcc\n-      releases had a different approach to threading configuration and\n-      proper compilation, the basic code design rules presented here\n-      were similar.  For information on all other aspects of\n-      multithreading as it relates to libstdc++, including details on\n-      the proper compilation of threaded code (and compatibility between\n-      threaded and non-threaded code), see Chapter 17.\n-   </p><p>Two excellent pages to read when working with the Standard C++\n-      containers and threads are\n-      <a class=\"ulink\" href=\"http://www.sgi.com/tech/stl/thread_safety.html\" target=\"_top\">SGI's\n-      http://www.sgi.com/tech/stl/thread_safety.html</a> and\n-      <a class=\"ulink\" href=\"http://www.sgi.com/tech/stl/Allocators.html\" target=\"_top\">SGI's\n-      http://www.sgi.com/tech/stl/Allocators.html</a>.\n-   </p><p><span class=\"emphasis\"><em>However, please ignore all discussions about the user-level\n-      configuration of the lock implementation inside the STL\n-      container-memory allocator on those pages.  For the sake of this\n-      discussion, libstdc++ configures the SGI STL implementation,\n-      not you.  This is quite different from how gcc pre-3.0 worked.\n-      In particular, past advice was for people using g++ to\n-      explicitly define _PTHREADS or other macros or port-specific\n-      compilation options on the command line to get a thread-safe\n-      STL.  This is no longer required for any port and should no\n-      longer be done unless you really know what you are doing and\n-      assume all responsibility.</em></span>\n-   </p><p>Since the container implementation of libstdc++ uses the SGI\n-      code, we use the same definition of thread safety as SGI when\n-      discussing design.  A key point that beginners may miss is the\n-      fourth major paragraph of the first page mentioned above\n-      (\"For most clients,\"...), which points out that\n-      locking must nearly always be done outside the container, by\n-      client code (that'd be you, not us).  There is a notable\n-      exceptions to this rule.  Allocators called while a container or\n-      element is constructed uses an internal lock obtained and\n-      released solely within libstdc++ code (in fact, this is the\n-      reason STL requires any knowledge of the thread configuration).\n-   </p><p>For implementing a container which does its own locking, it is\n-      trivial to provide a wrapper class which obtains the lock (as\n-      SGI suggests), performs the container operation, and then\n-      releases the lock.  This could be templatized <span class=\"emphasis\"><em>to a certain\n-      extent</em></span>, on the underlying container and/or a locking\n-      mechanism.  Trying to provide a catch-all general template\n-      solution would probably be more trouble than it's worth.\n-   </p><p>The STL implementation is currently configured to use the\n-      high-speed caching memory allocator.  Some people like to\n-      test and/or normally run threaded programs with a different\n-      default.  For all details about how to globally override this\n-      at application run-time see <a class=\"ulink\" href=\"../ext/howto.html#3\" target=\"_top\">here</a>.\n-   </p><p>There is a better way (not standardized yet):  It is possible to\n-      force the malloc-based allocator on a per-case-basis for some\n-      application code.  The library team generally believes that this\n-      is a better way to tune an application for high-speed using this\n-      implementation of the STL.  There is\n-      <a class=\"ulink\" href=\"../ext/howto.html#3\" target=\"_top\">more information on allocators here</a>.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch03s04.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt01ch03s06.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Macros\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Exceptions</td></tr></table></div></body></html>"}, {"sha": "3fbe4e440d3c0e5dbcce38c247f66ac5ee31e8b5", "filename": "libstdc++-v3/doc/html/manual/bk01pt01ch03s06.html", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s06.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s06.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt01ch03s06.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Exceptions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"using.html\" title=\"Chapter\u00a03.\u00a0Using\" /><link rel=\"prev\" href=\"bk01pt01ch03s05.html\" title=\"Concurrency\" /><link rel=\"next\" href=\"debug.html\" title=\"Debugging Support\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Exceptions</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch03s05.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a03.\u00a0Using</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"debug.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.exception\"></a>Exceptions</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"intro.using.exception.propagating\"></a>Propagating Exceptions aka Exception Neutrality</h3></div></div></div><p> \n-  </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"intro.using.exception.safety\"></a>Exception Safety</h3></div></div></div><p> \n-  </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"intro.using.exception.no\"></a>Support for <code class=\"literal\">-fno-exceptions</code></h3></div></div></div><p> \n-  </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt01ch03s05.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"debug.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Concurrency\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Debugging Support</td></tr></table></div></body></html>"}, {"sha": "fd3c1ecc41b126e1d252c0c87e02270270ff5a3d", "filename": "libstdc++-v3/doc/html/manual/bk01pt02ch04.html", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch04.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,40 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a04.\u00a0Types</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"support.html\" title=\"Part\u00a0II.\u00a0Support\" /><link rel=\"prev\" href=\"bk01pt02pr01.html\" title=\"\" /><link rel=\"next\" href=\"bk01pt02ch04s02.html\" title=\"Numeric Properties\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a04.\u00a0Types</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02pr01.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0Support</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch04s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.support.types\"></a>Chapter\u00a04.\u00a0Types</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt02ch04.html#manual.support.types.fundamental\">Fundamental Types</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt02ch04s02.html\">Numeric Properties</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt02ch04s03.html\">NULL</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.support.types.fundamental\"></a>Fundamental Types</h2></div></div></div><p>\n-      C++ has the following builtin types:\n-    </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>\n-\tchar\n-      </p></li><li><p>\n-\tsigned char\n-      </p></li><li><p>\n-\tunsigned char\n-      </p></li><li><p>\n-\tsigned short\n-      </p></li><li><p>\n-\tsigned int\n-      </p></li><li><p>\n-\tsigned long\n-      </p></li><li><p>\n-\tunsigned short\n-      </p></li><li><p>\n-\tunsigned int\n-      </p></li><li><p>\n-\tunsigned long\n-      </p></li><li><p>\n-\tbool\n-      </p></li><li><p>\n-\twchar_t\n-      </p></li><li><p>\n-\tfloat\n-      </p></li><li><p>\n-\tdouble\n-      </p></li><li><p>\n-\tlong double\n-      </p></li></ul></div><p>\n-      These fundamental types are always available, without having to\n-      include a header file. These types are exactly the same in\n-      either C++ or in C.\n-    </p><p>\n-      Specializing parts of the library on these types is prohibited:\n-      instead, use a POD.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02pr01.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"support.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch04s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Numeric Properties</td></tr></table></div></body></html>"}, {"sha": "e48894d697faf2b7a1ff24411928249440a489aa", "filename": "libstdc++-v3/doc/html/manual/bk01pt02ch05.html", "status": "removed", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch05.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch05.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch05.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,66 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a05.\u00a0Dynamic Memory</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"support.html\" title=\"Part\u00a0II.\u00a0Support\" /><link rel=\"prev\" href=\"bk01pt02ch04s03.html\" title=\"NULL\" /><link rel=\"next\" href=\"bk01pt02ch06.html\" title=\"Chapter\u00a06.\u00a0Termination\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a05.\u00a0Dynamic Memory</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch04s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0Support</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch06.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.support.memory\"></a>Chapter\u00a05.\u00a0Dynamic Memory</h2></div></div></div><p>\n-    There are six flavors each of <code class=\"function\">new</code> and\n-    <code class=\"function\">delete</code>, so make certain that you're using the right\n-    ones. Here are quickie descriptions of <code class=\"function\">new</code>:\n-  </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>\n-\tsingle object form, throwing a\n-\t<code class=\"classname\">bad_alloc</code> on errors; this is what most\n-\tpeople are used to using\n-      </p></li><li><p>\n-\tSingle object \"nothrow\" form, returning NULL on errors\n-      </p></li><li><p>\n-\tArray <code class=\"function\">new</code>, throwing\n-\t<code class=\"classname\">bad_alloc</code> on errors\n-      </p></li><li><p>\n-\tArray nothrow <code class=\"function\">new</code>, returning\n-\t<code class=\"constant\">NULL</code> on errors\n-      </p></li><li><p>\n-\tPlacement <code class=\"function\">new</code>, which does nothing (like\n-\tit's supposed to)\n-      </p></li><li><p>\n-\tPlacement array <code class=\"function\">new</code>, which also does\n-\tnothing\n-      </p></li></ul></div><p>\n-     They are distinguished by the parameters that you pass to them, like\n-     any other overloaded function.  The six flavors of <code class=\"function\">delete</code>\n-     are distinguished the same way, but none of them are allowed to throw\n-     an exception under any circumstances anyhow.  (They match up for\n-     completeness' sake.)\n-   </p><p>\n-     Remember that it is perfectly okay to call <code class=\"function\">delete</code> on a\n-     NULL pointer!  Nothing happens, by definition.  That is not the\n-     same thing as deleting a pointer twice.\n-   </p><p>\n-     By default, if one of the \u201c<span class=\"quote\">throwing <code class=\"function\">new</code>s</span>\u201d can't\n-     allocate the memory requested, it tosses an instance of a\n-     <code class=\"classname\">bad_alloc</code> exception (or, technically, some class derived\n-     from it).  You can change this by writing your own function (called a\n-     new-handler) and then registering it with <code class=\"function\">set_new_handler()</code>:\n-   </p><pre class=\"programlisting\">\n-   typedef void (*PFV)(void);\n-\n-   static char*  safety;\n-   static PFV    old_handler;\n-\n-   void my_new_handler ()\n-   {\n-       delete[] safety;\n-       popup_window (\"Dude, you are running low on heap memory.  You\n-                      should, like, close some windows, or something.\n-                      The next time you run out, we're gonna burn!\");\n-       set_new_handler (old_handler);\n-       return;\n-   }\n-\n-   int main ()\n-   {\n-       safety = new char[500000];\n-       old_handler = set_new_handler (&amp;my_new_handler);\n-       ...\n-   }\n-   </pre><p>\n-     <code class=\"classname\">bad_alloc</code> is derived from the base <code class=\"classname\">exception</code>\n-     class defined in Chapter 19.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch04s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"support.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch06.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">NULL\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a06.\u00a0Termination</td></tr></table></div></body></html>"}, {"sha": "f3ec9218505615664a03a24067b2c7d2e95f34af", "filename": "libstdc++-v3/doc/html/manual/bk01pt02ch06.html", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch06.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch06.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch06.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,45 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a06.\u00a0Termination</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"support.html\" title=\"Part\u00a0II.\u00a0Support\" /><link rel=\"prev\" href=\"bk01pt02ch05.html\" title=\"Chapter\u00a05.\u00a0Dynamic Memory\" /><link rel=\"next\" href=\"bk01pt02ch06s02.html\" title=\"Verbose Terminate Handler\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a06.\u00a0Termination</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch05.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0II.\u00a0Support</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch06s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.support.termination\"></a>Chapter\u00a06.\u00a0Termination</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt02ch06.html#support.termination.handlers\">Termination Handlers</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt02ch06s02.html\">Verbose Terminate Handler</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"support.termination.handlers\"></a>Termination Handlers</h2></div></div></div><p>\n-      Not many changes here to <code class=\"filename\">cstdlib</code>.  You should note that the\n-      <code class=\"function\">abort()</code> function does not call the\n-      destructors of automatic nor static objects, so if you're\n-      depending on those to do cleanup, it isn't going to happen.\n-      (The functions registered with <code class=\"function\">atexit()</code>\n-      don't get called either, so you can forget about that\n-      possibility, too.)\n-    </p><p>\n-      The good old <code class=\"function\">exit()</code> function can be a bit\n-      funky, too, until you look closer.  Basically, three points to\n-      remember are:\n-    </p><div class=\"orderedlist\"><ol type=\"1\"><li><p>\n-\tStatic objects are destroyed in reverse order of their creation.\n-\t</p></li><li><p>\n-\tFunctions registered with <code class=\"function\">atexit()</code> are called in\n-        reverse order of registration, once per registration call.\n-        (This isn't actually new.)\n-\t</p></li><li><p>\n-\tThe previous two actions are \u201c<span class=\"quote\">interleaved,</span>\u201d that is,\n-        given this pseudocode:\n-\t</p><pre class=\"programlisting\">\n-  extern \"C or C++\" void  f1 (void);\n-  extern \"C or C++\" void  f2 (void);\n-  \n-  static Thing obj1;\n-  atexit(f1);\n-  static Thing obj2;\n-  atexit(f2);\n-</pre><p>\n-        then at a call of <code class=\"function\">exit()</code>,\n-        <code class=\"varname\">f2</code> will be called, then\n-        <code class=\"varname\">obj2</code> will be destroyed, then\n-        <code class=\"varname\">f1</code> will be called, and finally\n-        <code class=\"varname\">obj1</code> will be destroyed. If\n-        <code class=\"varname\">f1</code> or <code class=\"varname\">f2</code> allow an\n-        exception to propagate out of them, Bad Things happen.\n-\t</p></li></ol></div><p>\n-      Note also that <code class=\"function\">atexit()</code> is only required to store 32\n-      functions, and the compiler/library might already be using some of\n-      those slots.  If you think you may run out, we recommend using\n-      the <code class=\"function\">xatexit</code>/<code class=\"function\">xexit</code> combination from <code class=\"literal\">libiberty</code>, which has no such limit.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch05.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"support.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt02ch06s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a05.\u00a0Dynamic Memory\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Verbose Terminate Handler</td></tr></table></div></body></html>"}, {"sha": "9f3f4017e9100cfbf2659455bacc6db203ec14d0", "filename": "libstdc++-v3/doc/html/manual/bk01pt02ch06s02.html", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch06s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch06s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt02ch06s02.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,76 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Verbose Terminate Handler</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt02ch06.html\" title=\"Chapter\u00a06.\u00a0Termination\" /><link rel=\"prev\" href=\"bk01pt02ch06.html\" title=\"Chapter\u00a06.\u00a0Termination\" /><link rel=\"next\" href=\"diagnostics.html\" title=\"Part\u00a0III.\u00a0Diagnostics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Verbose Terminate Handler</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch06.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a06.\u00a0Termination</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"diagnostics.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"support.termination.verbose\"></a>Verbose Terminate Handler</h2></div></div></div><p>\n-      If you are having difficulty with uncaught exceptions and want a\n-      little bit of help debugging the causes of the core dumps, you can\n-      make use of a GNU extension, the verbose terminate handler.\n-    </p><pre class=\"programlisting\">\n-#include &lt;exception&gt;\n-  \n-int main()\n-{\n-  std::set_terminate(__gnu_cxx::__verbose_terminate_handler);\n-  ...\n-\n-  throw <em class=\"replaceable\"><code>anything</code></em>;\n-}\n-</pre><p>\n-     The <code class=\"function\">__verbose_terminate_handler</code> function\n-     obtains the name of the current exception, attempts to demangle\n-     it, and prints it to stderr.  If the exception is derived from\n-     <code class=\"classname\">exception</code> then the output from\n-     <code class=\"function\">what()</code> will be included.\n-   </p><p>\n-     Any replacement termination function is required to kill the\n-     program without returning; this one calls abort.\n-   </p><p>\n-     For example:\n-   </p><pre class=\"programlisting\">\n-#include &lt;exception&gt;\n-#include &lt;stdexcept&gt;\n-\n-struct argument_error : public std::runtime_error\n-{  \n-  argument_error(const std::string&amp; s): std::runtime_error(s) { }\n-};\n-\n-int main(int argc)\n-{\n-  std::set_terminate(__gnu_cxx::__verbose_terminate_handler);\n-  if (argc &gt; 5)\n-    throw argument_error(\u201c<span class=\"quote\">argc is greater than 5!</span>\u201d);\n-  else\n-    throw argc;\n-}\n-</pre><p>\n-     With the verbose terminate handler active, this gives:\n-   </p><pre class=\"screen\">\n-   <code class=\"computeroutput\">\n-   % ./a.out\n-   terminate called after throwing a `int'\n-   Aborted\n-   % ./a.out f f f f f f f f f f f\n-   terminate called after throwing an instance of `argument_error'\n-   what(): argc is greater than 5!\n-   Aborted\n-   </code>\n-   </pre><p>\n-     The 'Aborted' line comes from the call to\n-     <code class=\"function\">abort()</code>, of course.\n-   </p><p>\n-     This is the default termination handler; nothing need be done to\n-     use it.  To go back to the previous \u201c<span class=\"quote\">silent death</span>\u201d\n-     method, simply include <code class=\"filename\">exception</code> and\n-     <code class=\"filename\">cstdlib</code>, and call\n-   </p><pre class=\"programlisting\">\n-     std::set_terminate(std::abort);\n-   </pre><p> \n-     After this, all calls to <code class=\"function\">terminate</code> will use\n-     <code class=\"function\">abort</code> as the terminate handler.\n-   </p><p>\n-     Note: the verbose terminate handler will attempt to write to\n-     stderr.  If your application closes stderr or redirects it to an\n-     inappropriate location,\n-     <code class=\"function\">__verbose_terminate_handler</code> will behave in\n-     an unspecified manner.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt02ch06.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt02ch06.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"diagnostics.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a06.\u00a0Termination\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0III.\u00a0Diagnostics</td></tr></table></div></body></html>"}, {"sha": "c8d622ce223e917a74e80cc806d055497c91e0b9", "filename": "libstdc++-v3/doc/html/manual/bk01pt03ch07.html", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt03ch07.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a07.\u00a0Exceptions</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"diagnostics.html\" title=\"Part\u00a0III.\u00a0Diagnostics\" /><link rel=\"prev\" href=\"diagnostics.html\" title=\"Part\u00a0III.\u00a0Diagnostics\" /><link rel=\"next\" href=\"bk01pt03ch07s02.html\" title=\"Adding Data to Exceptions\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a07.\u00a0Exceptions</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"diagnostics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0Diagnostics</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch07s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.diagnostics.exceptions\"></a>Chapter\u00a07.\u00a0Exceptions</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt03ch07.html#manual.diagnostics.exceptions.hierarchy\">Exception Classes</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch07s02.html\">Adding Data to Exceptions</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt03ch07s03.html\">Cancellation</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.diagnostics.exceptions.hierarchy\"></a>Exception Classes</h2></div></div></div><p>\n-      All exception objects are defined in one of the standard header\n-      files: <code class=\"filename\">exception</code>,\n-      <code class=\"filename\">stdexcept</code>, <code class=\"filename\">new</code>, and\n-      <code class=\"filename\">typeinfo</code>.\n-    </p><p>\n-      The base exception object is <code class=\"classname\">exception</code>,\n-      located in <code class=\"filename\">exception</code>. This object has no\n-      <code class=\"classname\">string</code> member.\n-    </p><p>\n-      Derived from this are several classes that may have a\n-      <code class=\"classname\">string</code> member: a full hierarchy can be\n-      found in the <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/a00233.html\" target=\"_top\">source documentation</a>.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"diagnostics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"diagnostics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt03ch07s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0III.\u00a0Diagnostics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Adding Data to Exceptions</td></tr></table></div></body></html>"}, {"sha": "9182ef7ae8fb27c4bdc90292f27e0f8535c3f19e", "filename": "libstdc++-v3/doc/html/manual/bk01pt04ch09.html", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch09.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch09.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch09.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,9 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a09.\u00a0Functors</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0Utilities\" /><link rel=\"prev\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0Utilities\" /><link rel=\"next\" href=\"bk01pt04ch10.html\" title=\"Chapter\u00a010.\u00a0Pairs\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a09.\u00a0Functors</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"utilities.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0Utilities</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt04ch10.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.util.functors\"></a>Chapter\u00a09.\u00a0Functors</h2></div></div></div><p>If you don't know what functors are, you're not alone.  Many people\n-      get slightly the wrong idea.  In the interest of not reinventing\n-      the wheel, we will refer you to the introduction to the functor\n-      concept written by SGI as part of their STL, in\n-      <a class=\"ulink\" href=\"http://www.sgi.com/tech/stl/functors.html\" target=\"_top\">their\n-      http://www.sgi.com/tech/stl/functors.html</a>.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"utilities.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt04ch10.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0IV.\u00a0Utilities\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a010.\u00a0Pairs</td></tr></table></div></body></html>"}, {"sha": "84177cd3a4c267f04ec9e14c245ddda1049f5173", "filename": "libstdc++-v3/doc/html/manual/bk01pt04ch10.html", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch10.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch10.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch10.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,39 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a010.\u00a0Pairs</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0Utilities\" /><link rel=\"prev\" href=\"bk01pt04ch09.html\" title=\"Chapter\u00a09.\u00a0Functors\" /><link rel=\"next\" href=\"bk01pt04ch11.html\" title=\"Chapter\u00a011.\u00a0Memory\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a010.\u00a0Pairs</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt04ch09.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0Utilities</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt04ch11.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.util.pairs\"></a>Chapter\u00a010.\u00a0Pairs</h2></div></div></div><p>The <code class=\"code\">pair&lt;T1,T2&gt;</code> is a simple and handy way to\n-      carry around a pair of objects.  One is of type T1, and another of\n-      type T2; they may be the same type, but you don't get anything\n-      extra if they are.  The two members can be accessed directly, as\n-      <code class=\"code\">.first</code> and <code class=\"code\">.second</code>.\n-   </p><p>Construction is simple.  The default ctor initializes each member\n-      with its respective default ctor.  The other simple ctor,\n-   </p><pre class=\"programlisting\">\n-    pair (const T1&amp; x, const T2&amp; y);\n-   </pre><p>does what you think it does, <code class=\"code\">first</code> getting <code class=\"code\">x</code>\n-      and <code class=\"code\">second</code> getting <code class=\"code\">y</code>.\n-   </p><p>There is a copy constructor, but it requires that your compiler\n-      handle member function templates:\n-   </p><pre class=\"programlisting\">\n-    template &lt;class U, class V&gt; pair (const pair&lt;U,V&gt;&amp; p);\n-   </pre><p>The compiler will convert as necessary from U to T1 and from\n-      V to T2 in order to perform the respective initializations.\n-   </p><p>The comparison operators are done for you.  Equality\n-      of two <code class=\"code\">pair&lt;T1,T2&gt;</code>s is defined as both <code class=\"code\">first</code>\n-      members comparing equal and both <code class=\"code\">second</code> members comparing\n-      equal; this simply delegates responsibility to the respective\n-      <code class=\"code\">operator==</code> functions (for types like MyClass) or builtin\n-      comparisons (for types like int, char, etc).\n-   </p><p>\n-      The less-than operator is a bit odd the first time you see it.  It\n-      is defined as evaluating to:\n-   </p><pre class=\"programlisting\">\n-    x.first  &lt;  y.first  ||\n-        ( !(y.first  &lt;  x.first)  &amp;&amp;  x.second  &lt;  y.second )\n-   </pre><p>The other operators are not defined using the <code class=\"code\">rel_ops</code>\n-      functions above, but their semantics are the same.\n-   </p><p>Finally, there is a template function called <code class=\"function\">make_pair</code>\n-      that takes two references-to-const objects and returns an\n-      instance of a pair instantiated on their respective types:\n-   </p><pre class=\"programlisting\">\n-    pair&lt;int,MyClass&gt; p = make_pair(4,myobject);\n-   </pre></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt04ch09.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt04ch11.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a09.\u00a0Functors\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a011.\u00a0Memory</td></tr></table></div></body></html>"}, {"sha": "24d4a7f2ab03cb3d77ff22bd75d19e9776c2fbca", "filename": "libstdc++-v3/doc/html/manual/bk01pt04ch11.html", "status": "removed", "additions": 0, "deletions": 346, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch11.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch11.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch11.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,346 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a011.\u00a0Memory</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0Utilities\" /><link rel=\"prev\" href=\"bk01pt04ch10.html\" title=\"Chapter\u00a010.\u00a0Pairs\" /><link rel=\"next\" href=\"auto_ptr.html\" title=\"auto_ptr\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a011.\u00a0Memory</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt04ch10.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0Utilities</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"auto_ptr.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.util.memory\"></a>Chapter\u00a011.\u00a0Memory</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt04ch11.html#manual.util.memory.allocator\">Allocators</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt04ch11.html#allocator.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt04ch11.html#allocator.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt04ch11.html#allocator.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt04ch11.html#allocator.using\">Using a Specific Allocator</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt04ch11.html#allocator.custom\">Custom Allocators</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt04ch11.html#allocator.ext\">Extension Allocators</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"auto_ptr.html\">auto_ptr</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"auto_ptr.html#auto_ptr.limitations\">Limitations</a></span></dt><dt><span class=\"sect2\"><a href=\"auto_ptr.html#auto_ptr.using\">Use in Containers</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"shared_ptr.html\">shared_ptr</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.using\">Use</a></span></dt><dt><span class=\"sect2\"><a href=\"shared_ptr.html#shared_ptr.ack\">Acknowledgments</a></span></dt></dl></dd></dl></div><p>\n-    Memory contains three general areas. First, function and operator\n-    calls via <code class=\"function\">new</code> and <code class=\"function\">delete</code>\n-    operator or member function calls.  Second, allocation via\n-    <code class=\"classname\">allocator</code>. And finally, smart pointer and\n-    intelligent pointer abstractions.\n-  </p><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.util.memory.allocator\"></a>Allocators</h2></div></div></div><p>\n- Memory management for Standard Library entities is encapsulated in a\n- class template called <code class=\"classname\">allocator</code>. The\n- <code class=\"classname\">allocator</code> abstraction is used throughout the\n- library in <code class=\"classname\">string</code>, container classes,\n- algorithms, and parts of iostreams. This class, and base classes of\n- it, are the superset of available free store (\u201c<span class=\"quote\">heap</span>\u201d)\n- management classes.\n-</p><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.req\"></a>Requirements</h3></div></div></div><p>\n-    The C++ standard only gives a few directives in this area:\n-  </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>\n-       When you add elements to a container, and the container must\n-       allocate more memory to hold them, the container makes the\n-       request via its <span class=\"type\">Allocator</span> template\n-       parameter, which is usually aliased to\n-       <span class=\"type\">allocator_type</span>.  This includes adding chars\n-       to the string class, which acts as a regular STL container in\n-       this respect.\n-      </p></li><li><p>\n-       The default <span class=\"type\">Allocator</span> argument of every\n-       container-of-T is <code class=\"classname\">allocator&lt;T&gt;</code>.\n-       </p></li><li><p>\n-       The interface of the <code class=\"classname\">allocator&lt;T&gt;</code> class is\n-         extremely simple.  It has about 20 public declarations (nested\n-         typedefs, member functions, etc), but the two which concern us most\n-         are:\n-       </p><pre class=\"programlisting\">\n-\t T*    allocate   (size_type n, const void* hint = 0);\n-\t void  deallocate (T* p, size_type n);\n-       </pre><p>\n-\t The <code class=\"varname\">n</code> arguments in both those\n-\t functions is a <span class=\"emphasis\"><em>count</em></span> of the number of\n-\t <span class=\"type\">T</span>'s to allocate space for, <span class=\"emphasis\"><em>not their\n-\t total size</em></span>.\n-\t (This is a simplification; the real signatures use nested typedefs.)  \n-       </p></li><li><p>\n-\t The storage is obtained by calling <code class=\"function\">::operator\n-\t new</code>, but it is unspecified when or how\n-\t often this function is called.  The use of the \n-\t <code class=\"varname\">hint</code> is unspecified, but intended as an\n-\t aid to locality if an implementation so\n-\t desires. <code class=\"constant\">[20.4.1.1]/6</code>\n-       </p></li></ul></div><p> \n-     Complete details cam be found in the C++ standard, look in\n-     <code class=\"constant\">[20.4 Memory]</code>.\n-   </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.design_issues\"></a>Design Issues</h3></div></div></div><p>\n-    The easiest way of fulfilling the requirements is to call\n-    <code class=\"function\">operator new</code> each time a container needs\n-    memory, and to call <code class=\"function\">operator delete</code> each time\n-    the container releases memory. This method may be <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2001-05/msg00105.html\" target=\"_top\">slower</a>\n-    than caching the allocations and re-using previously-allocated\n-    memory, but has the advantage of working correctly across a wide\n-    variety of hardware and operating systems, including large\n-    clusters. The <code class=\"classname\">__gnu_cxx::new_allocator</code>\n-    implements the simple operator new and operator delete semantics,\n-    while <code class=\"classname\">__gnu_cxx::malloc_allocator</code>\n-    implements much the same thing, only with the C language functions\n-    <code class=\"function\">std::malloc</code> and <code class=\"function\">free</code>.\n-  </p><p> \n-    Another approach is to use intelligence within the allocator\n-    class to cache allocations. This extra machinery can take a variety\n-    of forms: a bitmap index, an index into an exponentially increasing\n-    power-of-two-sized buckets, or simpler fixed-size pooling cache.\n-    The cache is shared among all the containers in the program: when\n-    your program's <code class=\"classname\">std::vector&lt;int&gt;</code> gets\n-  cut in half and frees a bunch of its storage, that memory can be\n-  reused by the private\n-  <code class=\"classname\">std::list&lt;WonkyWidget&gt;</code> brought in from\n-  a KDE library that you linked against.  And operators\n-  <code class=\"function\">new</code> and <code class=\"function\">delete</code> are not\n-  always called to pass the memory on, either, which is a speed\n-  bonus. Examples of allocators that use these techniques are\n-  <code class=\"classname\">__gnu_cxx::bitmap_allocator</code>,\n-  <code class=\"classname\">__gnu_cxx::pool_allocator</code>, and\n-  <code class=\"classname\">__gnu_cxx::__mt_alloc</code>.\n-  </p><p>\n-    Depending on the implementation techniques used, the underlying\n-    operating system, and compilation environment, scaling caching\n-    allocators can be tricky. In particular, order-of-destruction and\n-    order-of-creation for memory pools may be difficult to pin down\n-    with certainty, which may create problems when used with plugins\n-    or loading and unloading shared objects in memory. As such, using\n-    caching allocators on systems that do not support\n-    <code class=\"function\">abi::__cxa_atexit</code> is not recommended.\n-  </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id495307\"></a>Interface Design</h4></div></div></div><p>\n-     The only allocator interface that\n-     is support is the standard C++ interface. As such, all STL\n-     containers have been adjusted, and all external allocators have\n-     been modified to support this change.   \n-   </p><p> \n-     The class <code class=\"classname\">allocator</code> just has typedef,\n-   constructor, and rebind members. It inherits from one of the\n-   high-speed extension allocators, covered below. Thus, all\n-   allocation and deallocation depends on the base class.\n-   </p><p> \n-     The base class that <code class=\"classname\">allocator</code> is derived from\n-     may not be user-configurable.\n-</p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id462480\"></a>Selecting Default Allocation Policy</h4></div></div></div><p> \n-     It's difficult to pick an allocation strategy that will provide\n-   maximum utility, without excessively penalizing some behavior. In\n-   fact, it's difficult just deciding which typical actions to measure\n-   for speed.\n-   </p><p> \n-     Three synthetic benchmarks have been created that provide data\n-     that is used to compare different C++ allocators. These tests are:\n-   </p><div class=\"orderedlist\"><ol type=\"1\"><li><p>\n-       Insertion. \n-       </p><p>\n-       Over multiple iterations, various STL container\n-     objects have elements inserted to some maximum amount. A variety\n-     of allocators are tested.  \n-     Test source for <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert/sequence.cc?view=markup\" target=\"_top\">sequence</a>\n-     and <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert/associative.cc?view=markup\" target=\"_top\">associative</a>\n-     containers.\n-       </p></li><li><p>\n-       Insertion and erasure in a multi-threaded environment.\n-       </p><p>\n-       This test shows the ability of the allocator to reclaim memory\n-     on a pre-thread basis, as well as measuring thread contention\n-     for memory resources. \n-     Test source \n-    <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert_erase/associative.cc?view=markup\" target=\"_top\">here</a>.\n-       </p></li><li><p>\n-\t A threaded producer/consumer model.\n-       </p><p>\n-       Test source for\n-     <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/producer_consumer/sequence.cc?view=markup\" target=\"_top\">sequence</a>\n-     and \n-     <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/producer_consumer/associative.cc?view=markup\" target=\"_top\">associative</a>\n-     containers.\n-     </p></li></ol></div><p>\n-     The current default choice for\n-     <code class=\"classname\">allocator</code> is\n-     <code class=\"classname\">__gnu_cxx::new_allocator</code>.\n-   </p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id531789\"></a>Disabling Memory Caching</h4></div></div></div><p> \n-      In use, <code class=\"classname\">allocator</code> may allocate and\n-      deallocate using implementation-specified strategies and\n-      heuristics. Because of this, every call to an allocator object's\n-      <code class=\"function\">allocate</code> member function may not actually\n-      call the global operator new. This situation is also duplicated\n-      for calls to the <code class=\"function\">deallocate</code> member\n-      function.\n-    </p><p> \n-     This can be confusing. \n-   </p><p> \n-     In particular, this can make debugging memory errors more\n-     difficult, especially when using third party tools like valgrind or\n-     debug versions of <code class=\"function\">new</code>.\n-   </p><p> \n-     There are various ways to solve this problem. One would be to use\n-     a custom allocator that just called operators\n-     <code class=\"function\">new</code> and <code class=\"function\">delete</code>\n-     directly, for every allocation. (See\n-     <code class=\"filename\">include/ext/new_allocator.h</code>, for instance.)\n-     However, that option would involve changing source code to use\n-     a non-default allocator. Another option is to force the\n-     default allocator to remove caching and pools, and to directly\n-     allocate with every call of <code class=\"function\">allocate</code> and\n-     directly deallocate with every call of\n-     <code class=\"function\">deallocate</code>, regardless of efficiency. As it\n-     turns out, this last option is also available.\n-   </p><p>\n-     To globally disable memory caching within the library for the\n-     default allocator, merely set\n-     <code class=\"constant\">GLIBCXX_FORCE_NEW</code> (with any value) in the\n-     system's environment before running the program. If your program\n-     crashes with <code class=\"constant\">GLIBCXX_FORCE_NEW</code> in the\n-     environment, it likely means that you linked against objects\n-     built against the older library (objects which might still using the\n-     cached allocations...).\n-  </p></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.using\"></a>Using a Specific Allocator</h3></div></div></div><p>\n-     You can specify different memory management schemes on a\n-     per-container basis, by overriding the default\n-     <span class=\"type\">Allocator</span> template parameter.  For example, an easy\n-      (but non-portable) method of specifying that only <code class=\"function\">malloc</code> or <code class=\"function\">free</code>\n-      should be used instead of the default node allocator is:\n-   </p><pre class=\"programlisting\">\n-    std::list &lt;int, __gnu_cxx::malloc_allocator&lt;int&gt; &gt;  malloc_list;</pre><p>\n-      Likewise, a debugging form of whichever allocator is currently in use:\n-    </p><pre class=\"programlisting\">\n-    std::deque &lt;int, __gnu_cxx::debug_allocator&lt;std::allocator&lt;int&gt; &gt; &gt;  debug_deque;\n-      </pre></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.custom\"></a>Custom Allocators</h3></div></div></div><p> \n-    Writing a portable C++ allocator would dictate that the interface\n-    would look much like the one specified for\n-    <code class=\"classname\">allocator</code>. Additional member functions, but\n-    not subtractions, would be permissible.\n-  </p><p> \n-     Probably the best place to start would be to copy one of the\n-   extension allocators: say a simple one like \n-   <code class=\"classname\">new_allocator</code>.\n-   </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.ext\"></a>Extension Allocators</h3></div></div></div><p> \n-    Several other allocators are provided as part of this\n-    implementation.  The location of the extension allocators and their\n-    names have changed, but in all cases, functionality is\n-    equivalent. Starting with gcc-3.4, all extension allocators are\n-    standard style. Before this point, SGI style was the norm. Because of\n-    this, the number of template arguments also changed. Here's a simple\n-    chart to track the changes.\n-  </p><p>\n-    More details on each of these extension allocators follows.\n-  </p><div class=\"orderedlist\"><ol type=\"1\"><li><p>\n-       <code class=\"classname\">new_allocator</code>\n-       </p><p>\n-\t Simply wraps <code class=\"function\">::operator new</code>\n-\t and <code class=\"function\">::operator delete</code>.\n-       </p></li><li><p>\n-       <code class=\"classname\">malloc_allocator</code>\n-       </p><p>\n-\t Simply wraps <code class=\"function\">malloc</code> and\n-\t <code class=\"function\">free</code>. There is also a hook for an\n-\t out-of-memory handler (for\n-\t <code class=\"function\">new</code>/<code class=\"function\">delete</code> this is\n-\t taken care of elsewhere).\n-       </p></li><li><p>\n-       <code class=\"classname\">array_allocator</code>\n-       </p><p>\n-\t Allows allocations of known and fixed sizes using existing\n-\t global or external storage allocated via construction of\n-\t <code class=\"classname\">std::tr1::array</code> objects. By using this\n-\t allocator, fixed size containers (including\n-\t <code class=\"classname\">std::string</code>) can be used without\n-\t instances calling <code class=\"function\">::operator new</code> and\n-\t <code class=\"function\">::operator delete</code>. This capability\n-\t allows the use of STL abstractions without runtime\n-\t complications or overhead, even in situations such as program\n-\t startup. For usage examples, please consult the testsuite.\n-       </p></li><li><p>\n-       <code class=\"classname\">debug_allocator</code>\n-       </p><p> \n-\t A wrapper around an arbitrary allocator A.  It passes on\n-\t slightly increased size requests to A, and uses the extra\n-\t memory to store size information.  When a pointer is passed\n-\t to <code class=\"function\">deallocate()</code>, the stored size is\n-\t checked, and <code class=\"function\">assert()</code> is used to\n-\t guarantee they match.\n-       </p></li><li><p>\n-\t<code class=\"classname\">throw_allocator</code>\n-\t</p><p> \n-\t  Includes memory tracking and marking abilities as well as hooks for\n-\t  throwing exceptions at configurable intervals (including random,\n-\t  all, none). \n-\t</p></li><li><p>\n-       <code class=\"classname\">__pool_alloc</code>\n-       </p><p> \n-\t A high-performance, single pool allocator.  The reusable\n-\t memory is shared among identical instantiations of this type.\n-\t It calls through <code class=\"function\">::operator new</code> to\n-\t obtain new memory when its lists run out.  If a client\n-\t container requests a block larger than a certain threshold\n-\t size, then the pool is bypassed, and the allocate/deallocate\n-\t request is passed to <code class=\"function\">::operator new</code>\n-\t directly.\n-       </p><p> \n-\t Older versions of this class take a boolean template\n-\t parameter, called <code class=\"varname\">thr</code>, and an integer template\n-\t parameter, called <code class=\"varname\">inst</code>.\n-       </p><p>\n-\t The <code class=\"varname\">inst</code> number is used to track additional memory\n-      pools.  The point of the number is to allow multiple\n-      instantiations of the classes without changing the semantics at\n-      all.  All three of\n-       </p><pre class=\"programlisting\">\n-    typedef  __pool_alloc&lt;true,0&gt;    normal;\n-    typedef  __pool_alloc&lt;true,1&gt;    private;\n-    typedef  __pool_alloc&lt;true,42&gt;   also_private;\n-   </pre><p>\n-     behave exactly the same way.  However, the memory pool for each type\n-      (and remember that different instantiations result in different types)\n-      remains separate.\n-   </p><p>\n-     The library uses <span class=\"emphasis\"><em>0</em></span> in all its instantiations.  If you\n-      wish to keep separate free lists for a particular purpose, use a\n-      different number.\n-   </p><p>The <code class=\"varname\">thr</code> boolean determines whether the\n-   pool should be manipulated atomically or not.  When\n-   <code class=\"varname\">thr</code> = <code class=\"constant\">true</code>, the allocator\n-   is is thread-safe, while <code class=\"varname\">thr</code> =\n-   <code class=\"constant\">false</code>, and is slightly faster but unsafe for\n-   multiple threads.\n-   </p><p>\n-     For thread-enabled configurations, the pool is locked with a\n-     single big lock. In some situations, this implementation detail\n-     may result in severe performance degradation.\n-   </p><p>\n-     (Note that the GCC thread abstraction layer allows us to provide\n-     safe zero-overhead stubs for the threading routines, if threads\n-     were disabled at configuration time.)\n-   </p></li><li><p>\n-       <code class=\"classname\">__mt_alloc</code>\n-       </p><p>\n-\t A high-performance fixed-size allocator with\n-\t exponentially-increasing allocations. It has its own\n-\t documentation, found <a class=\"link\" href=\"bk01pt12ch32.html#manual.ext.allocator.mt\" title=\"mt_allocator\">here</a>.\n-       </p></li><li><p>\n-       <code class=\"classname\">bitmap_allocator</code>\n-       </p><p>\n-\t A high-performance allocator that uses a bit-map to keep track\n-\t of the used and unused memory locations. It has its own\n-\t documentation, found <a class=\"link\" href=\"bitmap_allocator.html\" title=\"bitmap_allocator\">here</a>.\n-       </p></li></ol></div></div><div class=\"bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\"><a id=\"id505299\"></a><p><span class=\"title\"><i>\n-    ISO/IEC 14882:1998 Programming languages - C++  \n-    </i>. </span>\n-      isoc++_1998\n-    <span class=\"pagenums\">20.4 Memory. </span></p></div><div class=\"biblioentry\"><a id=\"id465950\"></a><p><span class=\"title\"><i>The Standard Librarian: What Are Allocators Good\n-    </i>. </span>\n-      austernm\n-    <span class=\"author\"><span class=\"firstname\">Matt</span> <span class=\"surname\">Austern</span>. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tC/C++ Users Journal\t\n-      . </span></span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.cuj.com/documents/s=8000/cujcexp1812austern/\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\"><a id=\"id515746\"></a><p><span class=\"title\"><i>The Hoard Memory Allocator</i>. </span>\n-      emeryb\n-    <span class=\"author\"><span class=\"firstname\">Emery</span> <span class=\"surname\">Berger</span>. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.cs.umass.edu/~emery/hoard/\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\"><a id=\"id507784\"></a><p><span class=\"title\"><i>Reconsidering Custom Memory Allocation</i>. </span>\n-      bergerzorn\n-    <span class=\"author\"><span class=\"firstname\">Emery</span> <span class=\"surname\">Berger</span>. </span><span class=\"author\"><span class=\"firstname\">Ben</span> <span class=\"surname\">Zorn</span>. </span><span class=\"author\"><span class=\"firstname\">Kathryn</span> <span class=\"surname\">McKinley</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 OOPSLA. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.cs.umass.edu/~emery/pubs/berger-oopsla2002.pdf\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\"><a id=\"id467782\"></a><p><span class=\"title\"><i>Allocator Types</i>. </span>\n-      kreftlanger\n-    <span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tC/C++ Users Journal\t\n-      . </span></span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.langer.camelot.de/Articles/C++Report/Allocators/Allocators.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\"><a id=\"id470766\"></a><p><span class=\"title\"><i>The C++ Programming Language</i>. </span>\n-      tcpl\n-    <span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 . </span><span class=\"pagenums\">19.4 Allocators. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley\n-      . </span></span></p></div><div class=\"biblioentry\"><a id=\"id468765\"></a><p><span class=\"title\"><i>Yalloc: A Recycling C++ Allocator</i>. </span>\n-      yenf\n-    <span class=\"author\"><span class=\"firstname\">Felix</span> <span class=\"surname\">Yen</span>. </span><span class=\"copyright\">Copyright \u00a9  . </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://home.earthlink.net/~brimar/yalloc/\" target=\"_top\">\n-      </a>\n-    . </span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt04ch10.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"auto_ptr.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a010.\u00a0Pairs\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0auto_ptr</td></tr></table></div></body></html>"}, {"sha": "b771aaf4d2a21b0e6d2a75f884796b63f04e9bfa", "filename": "libstdc++-v3/doc/html/manual/bk01pt04ch12.html", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch12.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch12.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt04ch12.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,4 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a012.\u00a0Traits</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"utilities.html\" title=\"Part\u00a0IV.\u00a0Utilities\" /><link rel=\"prev\" href=\"shared_ptr.html\" title=\"shared_ptr\" /><link rel=\"next\" href=\"strings.html\" title=\"Part\u00a0V.\u00a0Strings\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a012.\u00a0Traits</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"shared_ptr.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0IV.\u00a0Utilities</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"strings.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.util.traits\"></a>Chapter\u00a012.\u00a0Traits</h2></div></div></div><p>\n-  </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"shared_ptr.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"utilities.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"strings.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">shared_ptr\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0V.\u00a0Strings</td></tr></table></div></body></html>"}, {"sha": "c9886822aa879b27cf3cf97e33dbf229b2897a9b", "filename": "libstdc++-v3/doc/html/manual/bk01pt06ch14.html", "status": "removed", "additions": 0, "deletions": 422, "changes": 422, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt06ch14.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt06ch14.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt06ch14.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,422 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a014.\u00a0Locales</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"localization.html\" title=\"Part\u00a0VI.\u00a0Localization\" /><link rel=\"prev\" href=\"localization.html\" title=\"Part\u00a0VI.\u00a0Localization\" /><link rel=\"next\" href=\"bk01pt06ch15.html\" title=\"Chapter\u00a015.\u00a0Facets aka Categories\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a014.\u00a0Locales</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"localization.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VI.\u00a0Localization</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt06ch15.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.localization.locales\"></a>Chapter\u00a014.\u00a0Locales</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt06ch14.html#manual.localization.locales.locale\">locale</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt06ch14.html#locales.locale.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt06ch14.html#locales.locale.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt06ch14.html#locales.locale.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt06ch14.html#locales.locale.future\">Future</a></span></dt></dl></dd></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.localization.locales.locale\"></a>locale</h2></div></div></div><p>\n-Describes the basic locale object, including nested\n-classes id, facet, and the reference-counted implementation object,\n-class _Impl.\n-</p><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.req\"></a>Requirements</h3></div></div></div><p>\n-Class locale is non-templatized and has two distinct types nested\n-inside of it:\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n-class facet\n-22.1.1.1.2 Class locale::facet\n-</em></span>\n-</p></blockquote></div><p>\n-Facets actually implement locale functionality. For instance, a facet\n-called numpunct is the data objects that can be used to query for the\n-thousands separator is in the German locale.\n-</p><p>\n-Literally, a facet is strictly defined:\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>\n-      Containing the following public data member:\n-    </p><p>\n-      <code class=\"code\">static locale::id id;</code>\n-    </p></li><li><p>\n-      Derived from another facet:\n-    </p><p>\n-      <code class=\"code\">class gnu_codecvt: public std::ctype&lt;user-defined-type&gt;</code>\n-    </p></li></ul></div><p>\n-Of interest in this class are the memory management options explicitly\n-specified as an argument to facet's constructor. Each constructor of a\n-facet class takes a std::size_t __refs argument: if __refs == 0, the\n-facet is deleted when the locale containing it is destroyed. If __refs\n-== 1, the facet is not destroyed, even when it is no longer\n-referenced.\n-</p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-<span class=\"emphasis\"><em>\n-class id\n-22.1.1.1.3 - Class locale::id\n-</em></span>\n-</p></blockquote></div><p>\n-Provides an index for looking up specific facets.\n-</p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.design\"></a>Design</h3></div></div></div><p>\n-The major design challenge is fitting an object-orientated and\n-non-global locale design on top of POSIX and other relevant standards,\n-which include the Single Unix (nee X/Open.)\n-</p><p>\n-Because C and earlier versions of POSIX fall down so completely,\n-portability is an issue.\n-</p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"locale.impl.c\"></a>Interacting with \"C\" locales</h4></div></div></div><div class=\"itemizedlist\"><ul type=\"disc\"><li><p> \n-       <code class=\"code\">`locale -a`</code> displays available locales. \n-     </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><pre class=\"programlisting\">\n-af_ZA\n-ar_AE\n-ar_AE.utf8\n-ar_BH\n-ar_BH.utf8\n-ar_DZ\n-ar_DZ.utf8\n-ar_EG\n-ar_EG.utf8\n-ar_IN\n-ar_IQ\n-ar_IQ.utf8\n-ar_JO\n-ar_JO.utf8\n-ar_KW\n-ar_KW.utf8\n-ar_LB\n-ar_LB.utf8\n-ar_LY\n-ar_LY.utf8\n-ar_MA\n-ar_MA.utf8\n-ar_OM\n-ar_OM.utf8\n-ar_QA\n-ar_QA.utf8\n-ar_SA\n-ar_SA.utf8\n-ar_SD\n-ar_SD.utf8\n-ar_SY\n-ar_SY.utf8\n-ar_TN\n-ar_TN.utf8\n-ar_YE\n-ar_YE.utf8\n-be_BY\n-be_BY.utf8\n-bg_BG\n-bg_BG.utf8\n-br_FR\n-bs_BA\n-C\n-ca_ES\n-ca_ES@euro\n-ca_ES.utf8\n-ca_ES.utf8@euro\n-cs_CZ\n-cs_CZ.utf8\n-cy_GB\n-da_DK\n-da_DK.iso885915\n-da_DK.utf8\n-de_AT\n-de_AT@euro\n-de_AT.utf8\n-de_AT.utf8@euro\n-de_BE\n-de_BE@euro\n-de_BE.utf8\n-de_BE.utf8@euro\n-de_CH\n-de_CH.utf8\n-de_DE\n-de_DE@euro\n-de_DE.utf8\n-de_DE.utf8@euro\n-de_LU\n-de_LU@euro\n-de_LU.utf8\n-de_LU.utf8@euro\n-el_GR\n-el_GR.utf8\n-en_AU\n-en_AU.utf8\n-en_BW\n-en_BW.utf8\n-en_CA\n-en_CA.utf8\n-en_DK\n-en_DK.utf8\n-en_GB\n-en_GB.iso885915\n-en_GB.utf8\n-en_HK\n-en_HK.utf8\n-en_IE\n-en_IE@euro\n-en_IE.utf8\n-en_IE.utf8@euro\n-en_IN\n-en_NZ\n-en_NZ.utf8\n-en_PH\n-en_PH.utf8\n-en_SG\n-en_SG.utf8\n-en_US\n-en_US.iso885915\n-en_US.utf8\n-en_ZA\n-en_ZA.utf8\n-en_ZW\n-en_ZW.utf8\n-es_AR\n-es_AR.utf8\n-es_BO\n-es_BO.utf8\n-es_CL\n-es_CL.utf8\n-es_CO\n-es_CO.utf8\n-es_CR\n-es_CR.utf8\n-es_DO\n-es_DO.utf8\n-es_EC\n-es_EC.utf8\n-es_ES\n-es_ES@euro\n-es_ES.utf8\n-es_ES.utf8@euro\n-es_GT\n-es_GT.utf8\n-es_HN\n-es_HN.utf8\n-es_MX\n-es_MX.utf8\n-es_NI\n-es_NI.utf8\n-es_PA\n-es_PA.utf8\n-es_PE\n-es_PE.utf8\n-es_PR\n-es_PR.utf8\n-es_PY\n-es_PY.utf8\n-es_SV\n-es_SV.utf8\n-es_US\n-es_US.utf8\n-es_UY\n-es_UY.utf8\n-es_VE\n-es_VE.utf8\n-et_EE\n-et_EE.utf8\n-eu_ES\n-eu_ES@euro\n-eu_ES.utf8\n-eu_ES.utf8@euro\n-fa_IR\n-fi_FI\n-fi_FI@euro\n-fi_FI.utf8\n-fi_FI.utf8@euro\n-fo_FO\n-fo_FO.utf8\n-fr_BE\n-fr_BE@euro\n-fr_BE.utf8\n-fr_BE.utf8@euro\n-fr_CA\n-fr_CA.utf8\n-fr_CH\n-fr_CH.utf8\n-fr_FR\n-fr_FR@euro\n-fr_FR.utf8\n-fr_FR.utf8@euro\n-fr_LU\n-fr_LU@euro\n-fr_LU.utf8\n-fr_LU.utf8@euro\n-ga_IE\n-ga_IE@euro\n-ga_IE.utf8\n-ga_IE.utf8@euro\n-gl_ES\n-gl_ES@euro\n-gl_ES.utf8\n-gl_ES.utf8@euro\n-gv_GB\n-gv_GB.utf8\n-he_IL\n-he_IL.utf8\n-hi_IN\n-hr_HR\n-hr_HR.utf8\n-hu_HU\n-hu_HU.utf8\n-id_ID\n-id_ID.utf8\n-is_IS\n-is_IS.utf8\n-it_CH\n-it_CH.utf8\n-it_IT\n-it_IT@euro\n-it_IT.utf8\n-it_IT.utf8@euro\n-iw_IL\n-iw_IL.utf8\n-ja_JP.eucjp\n-ja_JP.utf8\n-ka_GE\n-kl_GL\n-kl_GL.utf8\n-ko_KR.euckr\n-ko_KR.utf8\n-kw_GB\n-kw_GB.utf8\n-lt_LT\n-lt_LT.utf8\n-lv_LV\n-lv_LV.utf8\n-mi_NZ\n-mk_MK\n-mk_MK.utf8\n-mr_IN\n-ms_MY\n-ms_MY.utf8\n-mt_MT\n-mt_MT.utf8\n-nl_BE\n-nl_BE@euro\n-nl_BE.utf8\n-nl_BE.utf8@euro\n-nl_NL\n-nl_NL@euro\n-nl_NL.utf8\n-nl_NL.utf8@euro\n-nn_NO\n-nn_NO.utf8\n-no_NO\n-no_NO.utf8\n-oc_FR\n-pl_PL\n-pl_PL.utf8\n-POSIX\n-pt_BR\n-pt_BR.utf8\n-pt_PT\n-pt_PT@euro\n-pt_PT.utf8\n-pt_PT.utf8@euro\n-ro_RO\n-ro_RO.utf8\n-ru_RU\n-ru_RU.koi8r\n-ru_RU.utf8\n-ru_UA\n-ru_UA.utf8\n-se_NO\n-sk_SK\n-sk_SK.utf8\n-sl_SI\n-sl_SI.utf8\n-sq_AL\n-sq_AL.utf8\n-sr_YU\n-sr_YU@cyrillic\n-sr_YU.utf8\n-sr_YU.utf8@cyrillic\n-sv_FI\n-sv_FI@euro\n-sv_FI.utf8\n-sv_FI.utf8@euro\n-sv_SE\n-sv_SE.iso885915\n-sv_SE.utf8\n-ta_IN\n-te_IN\n-tg_TJ\n-th_TH\n-th_TH.utf8\n-tl_PH\n-tr_TR\n-tr_TR.utf8\n-uk_UA\n-uk_UA.utf8\n-ur_PK\n-uz_UZ\n-vi_VN\n-vi_VN.tcvn\n-wa_BE\n-wa_BE@euro\n-yi_US\n-zh_CN\n-zh_CN.gb18030\n-zh_CN.gbk\n-zh_CN.utf8\n-zh_HK\n-zh_HK.utf8\n-zh_TW\n-zh_TW.euctw\n-zh_TW.utf8\n-</pre></blockquote></div></li><li><p> \n-       <code class=\"code\">`locale`</code> displays environmental variables that\n-       impact how locale(\"\") will be deduced.\n-     </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><pre class=\"programlisting\">\n-LANG=en_US\n-LC_CTYPE=\"en_US\"\n-LC_NUMERIC=\"en_US\"\n-LC_TIME=\"en_US\"\n-LC_COLLATE=\"en_US\"\n-LC_MONETARY=\"en_US\"\n-LC_MESSAGES=\"en_US\"\n-LC_PAPER=\"en_US\"\n-LC_NAME=\"en_US\"\n-LC_ADDRESS=\"en_US\"\n-LC_TELEPHONE=\"en_US\"\n-LC_MEASUREMENT=\"en_US\"\n-LC_IDENTIFICATION=\"en_US\"\n-LC_ALL=\n-</pre></blockquote></div></li></ul></div><p>\n-From Josuttis, p. 697-698, which says, that \"there is only *one*\n-relation (of the C++ locale mechanism) to the C locale mechanism: the\n-global C locale is modified if a named C++ locale object is set as the\n-global locale\" (emphasis Paolo), that is:\n-</p><pre class=\"programlisting\">std::locale::global(std::locale(\"\"));</pre><p>affects the C functions as if the following call was made:</p><pre class=\"programlisting\">std::setlocale(LC_ALL, \"\");</pre><p>\n-  On the other hand, there is *no* vice versa, that is, calling\n-  setlocale has *no* whatsoever on the C++ locale mechanism, in\n-  particular on the working of locale(\"\"), which constructs the locale\n-  object from the environment of the running program, that is, in\n-  practice, the set of LC_ALL, LANG, etc. variable of the shell.\n-</p></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.future\"></a>Future</h3></div></div></div><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>\n-       Locale initialization: at what point does _S_classic, _S_global\n-       get initialized? Can named locales assume this initialization\n-       has already taken place? \n-     </p></li><li><p> \n-       Document how named locales error check when filling data\n-       members. I.e., a fr_FR locale that doesn't have\n-       numpunct::truename(): does it use \"true\"? Or is it a blank\n-       string? What's the convention? \n-   </p></li><li><p> \n-       Explain how locale aliasing happens. When does \"de_DE\" use \"de\"\n-       information? What is the rule for locales composed of just an\n-       ISO language code (say, \"de\") and locales with both an ISO\n-       language code and ISO country code (say, \"de_DE\"). \n-     </p></li><li><p> \n-       What should non-required facet instantiations do?  If the\n-       generic implementation is provided, then how to end-users\n-       provide specializations? \n-   </p></li></ul></div></div><div class=\"bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"locales.locale.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\"><a id=\"id459942\"></a><p><span class=\"title\"><i>\n-      The GNU C Library\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">Chapters 6 Character Set Handling and 7 Locales and Internationalization. </span></p></div><div class=\"biblioentry\"><a id=\"id551010\"></a><p><span class=\"title\"><i>\n-      Correspondence\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\"><a id=\"id551039\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 14882:1998 Programming languages - C++\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\"><a id=\"id474312\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 9899:1999 Programming languages - C\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\"><a id=\"id474331\"></a><p><span class=\"title\"><i>\n-      System Interface Definitions, Issue 6 (IEEE Std. 1003.1-200x)\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 \n-      The Open Group/The Institute of Electrical and Electronics Engineers, Inc.. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.opennc.org/austin/docreg.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\"><a id=\"id516648\"></a><p><span class=\"title\"><i>\n-      The C++ Programming Language, Special Edition\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley\n-      . </span></span></p></div><div class=\"biblioentry\"><a id=\"id481148\"></a><p><span class=\"title\"><i>\n-      Standard C++ IOStreams and Locales\n-    </i>. </span><span class=\"subtitle\">\n-      Advanced Programmer's Guide and Reference\n-    . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley Longman\n-      . </span></span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"localization.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"localization.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt06ch15.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0VI.\u00a0Localization\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a015.\u00a0Facets aka Categories</td></tr></table></div></body></html>"}, {"sha": "fdb34a45aa8506daa3a565b76d5cbb1fcbb92a21", "filename": "libstdc++-v3/doc/html/manual/bk01pt06ch15.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt06ch15.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt06ch15.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt06ch15.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,74 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a015.\u00a0Facets aka Categories</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"localization.html\" title=\"Part\u00a0VI.\u00a0Localization\" /><link rel=\"prev\" href=\"bk01pt06ch14.html\" title=\"Chapter\u00a014.\u00a0Locales\" /><link rel=\"next\" href=\"codecvt.html\" title=\"codecvt\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a015.\u00a0Facets aka Categories</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt06ch14.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VI.\u00a0Localization</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"codecvt.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.localization.facet\"></a>Chapter\u00a015.\u00a0Facets aka Categories</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt06ch15.html#manual.localization.facet.ctype\">ctype</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt06ch15.html#facet.ctype.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt06ch15.html#facet.ctype.future\">Future</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"codecvt.html\">codecvt</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.use\">Use</a></span></dt><dt><span class=\"sect2\"><a href=\"codecvt.html#facet.codecvt.future\">Future</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"messages.html\">messages</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.req\">Requirements</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.use\">Use</a></span></dt><dt><span class=\"sect2\"><a href=\"messages.html#facet.messages.future\">Future</a></span></dt></dl></dd></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.localization.facet.ctype\"></a>ctype</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.ctype.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"id461922\"></a>Specializations</h4></div></div></div><p>\n-For the required specialization codecvt&lt;wchar_t, char, mbstate_t&gt; ,\n-conversions are made between the internal character set (always UCS4\n-on GNU/Linux) and whatever the currently selected locale for the\n-LC_CTYPE category implements.\n-</p><p>\n-The two required specializations are implemented as follows:\n-</p><p>\n-<code class=\"code\">\n-ctype&lt;char&gt;\n-</code>\n-</p><p>\n-This is simple specialization. Implementing this was a piece of cake.\n-</p><p>\n-<code class=\"code\">\n-ctype&lt;wchar_t&gt;\n-</code>\n-</p><p>\n-This specialization, by specifying all the template parameters, pretty\n-much ties the hands of implementors. As such, the implementation is\n-straightforward, involving mcsrtombs for the conversions between char\n-to wchar_t and wcsrtombs for conversions between wchar_t and char.\n-</p><p>\n-Neither of these two required specializations deals with Unicode\n-characters.\n-</p></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.ctype.future\"></a>Future</h3></div></div></div><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>\n-   How to deal with the global locale issue? \n-   </p></li><li><p> \n-   How to deal with different types than char, wchar_t? </p></li><li><p>\n-   Overlap between codecvt/ctype: narrow/widen \n-   </p></li><li><p> \n-       Mask typedef in codecvt_base, argument types in codecvt.  what\n-       is know about this type? \n-   </p></li><li><p> \n-   Why mask* argument in codecvt?\n-   </p></li><li><p>\n-       Can this be made (more) generic? is there a simple way to\n-       straighten out the configure-time mess that is a by-product of\n-       this class?  \n-   </p></li><li><p> \n-       Get the ctype&lt;wchar_t&gt;::mask stuff under control. Need to\n-       make some kind of static table, and not do lookup every time\n-       somebody hits the do_is... functions. Too bad we can't just\n-       redefine mask for ctype&lt;wchar_t&gt; \n-   </p></li><li><p> \n-       Rename abstract base class. See if just smash-overriding is a\n-       better approach. Clarify, add sanity to naming.\n-     </p></li></ul></div></div><div class=\"bibliography\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"facet.ctype.biblio\"></a>Bibliography</h3></div></div></div><div class=\"biblioentry\"><a id=\"id477855\"></a><p><span class=\"title\"><i>\n-      The GNU C Library\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Roland</span> <span class=\"surname\">McGrath</span>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 FSF. </span><span class=\"pagenums\">Chapters 6  Character Set Handling and 7 Locales and Internationalization. </span></p></div><div class=\"biblioentry\"><a id=\"id462336\"></a><p><span class=\"title\"><i>\n-      Correspondence\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Ulrich</span> <span class=\"surname\">Drepper</span>. </span><span class=\"copyright\">Copyright \u00a9 2002 . </span></p></div><div class=\"biblioentry\"><a id=\"id516995\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 14882:1998 Programming languages - C++\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1998 ISO. </span></p></div><div class=\"biblioentry\"><a id=\"id517013\"></a><p><span class=\"title\"><i>\n-      ISO/IEC 9899:1999 Programming languages - C\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 ISO. </span></p></div><div class=\"biblioentry\"><a id=\"id535750\"></a><p><span class=\"title\"><i>\n-      System Interface Definitions, Issue 6 (IEEE Std. 1003.1-200x)\n-    </i>. </span><span class=\"copyright\">Copyright \u00a9 1999 \n-      The Open Group/The Institute of Electrical and Electronics Engineers, Inc.. </span><span class=\"biblioid\">\n-      <a class=\"ulink\" href=\"http://www.opennc.org/austin/docreg.html\" target=\"_top\">\n-      </a>\n-    . </span></p></div><div class=\"biblioentry\"><a id=\"id535776\"></a><p><span class=\"title\"><i>\n-      The C++ Programming Language, Special Edition\n-    </i>. </span><span class=\"author\"><span class=\"firstname\">Bjarne</span> <span class=\"surname\">Stroustrup</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley, Inc.. </span><span class=\"pagenums\">Appendix D. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley\n-      . </span></span></p></div><div class=\"biblioentry\"><a id=\"id477745\"></a><p><span class=\"title\"><i>\n-      Standard C++ IOStreams and Locales\n-    </i>. </span><span class=\"subtitle\">\n-      Advanced Programmer's Guide and Reference\n-    . </span><span class=\"author\"><span class=\"firstname\">Angelika</span> <span class=\"surname\">Langer</span>. </span><span class=\"author\"><span class=\"firstname\">Klaus</span> <span class=\"surname\">Kreft</span>. </span><span class=\"copyright\">Copyright \u00a9 2000 Addison Wesley Longman, Inc.. </span><span class=\"publisher\"><span class=\"publishername\">\n-\tAddison Wesley Longman\n-      . </span></span></p></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt06ch14.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"localization.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"codecvt.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a014.\u00a0Locales\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0codecvt</td></tr></table></div></body></html>"}, {"sha": "3d1b251973a36e6145241abe57e4ce508e8f186c", "filename": "libstdc++-v3/doc/html/manual/bk01pt07ch16.html", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch16.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch16.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch16.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,37 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a016.\u00a0Sequences</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0Containers\" /><link rel=\"prev\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0Containers\" /><link rel=\"next\" href=\"bk01pt07ch16s02.html\" title=\"vector\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a016.\u00a0Sequences</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"containers.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VII.\u00a0Containers</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt07ch16s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.containers.sequences\"></a>Chapter\u00a016.\u00a0Sequences</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt07ch16.html#containers.sequences.list\">list</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt07ch16.html#sequences.list.size\">list::size() is O(n)</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt07ch16s02.html\">vector</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt07ch16s02.html#sequences.vector.management\">Space Overhead Management</a></span></dt></dl></dd></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.sequences.list\"></a>list</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"sequences.list.size\"></a>list::size() is O(n)</h3></div></div></div><p>\n-     Yes it is, and that's okay.  This is a decision that we preserved\n-     when we imported SGI's STL implementation.  The following is\n-     quoted from <a class=\"ulink\" href=\"http://www.sgi.com/tech/stl/FAQ.html\" target=\"_top\">their FAQ</a>:\n-   </p><div class=\"blockquote\"><blockquote class=\"blockquote\"><p>\n-       The size() member function, for list and slist, takes time\n-       proportional to the number of elements in the list.  This was a\n-       deliberate tradeoff.  The only way to get a constant-time\n-       size() for linked lists would be to maintain an extra member\n-       variable containing the list's size.  This would require taking\n-       extra time to update that variable (it would make splice() a\n-       linear time operation, for example), and it would also make the\n-       list larger.  Many list algorithms don't require that extra\n-       word (algorithms that do require it might do better with\n-       vectors than with lists), and, when it is necessary to maintain\n-       an explicit size count, it's something that users can do\n-       themselves.\n-     </p><p>\n-       This choice is permitted by the C++ standard. The standard says\n-       that size() \u201c<span class=\"quote\">should</span>\u201d be constant time, and\n-       \u201c<span class=\"quote\">should</span>\u201d does not mean the same thing as\n-       \u201c<span class=\"quote\">shall</span>\u201d.  This is the officially recommended ISO\n-       wording for saying that an implementation is supposed to do\n-       something unless there is a good reason not to.\n-      </p><p>\n-\tOne implication of linear time size(): you should never write\n-      </p><pre class=\"programlisting\">\n-         if (L.size() == 0)\n-             ...\n-\t </pre><p>\n-         Instead, you should write\n-\t </p><pre class=\"programlisting\">\n-         if (L.empty())\n-             ...\n-\t </pre></blockquote></div></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"containers.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt07ch16s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0VII.\u00a0Containers\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0vector</td></tr></table></div></body></html>"}, {"sha": "f1561554143cab71e33a837a06784aa92ab0e4df", "filename": "libstdc++-v3/doc/html/manual/bk01pt07ch16s02.html", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch16s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch16s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch16s02.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>vector</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt07ch16.html\" title=\"Chapter\u00a016.\u00a0Sequences\" /><link rel=\"prev\" href=\"bk01pt07ch16.html\" title=\"Chapter\u00a016.\u00a0Sequences\" /><link rel=\"next\" href=\"bk01pt07ch17.html\" title=\"Chapter\u00a017.\u00a0Associative\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">vector</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt07ch16.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a016.\u00a0Sequences</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt07ch17.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.sequences.vector\"></a>vector</h2></div></div></div><p>\n-  </p><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"sequences.vector.management\"></a>Space Overhead Management</h3></div></div></div><p>\n-     In <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-04/msg00105.html\" target=\"_top\">this\n-     message to the list</a>, Daniel Kostecky announced work on an\n-     alternate form of <code class=\"code\">std::vector</code> that would support\n-     hints on the number of elements to be over-allocated.  The design\n-     was also described, along with possible implementation choices.\n-   </p><p>\n-     The first two alpha releases were announced <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-07/msg00048.html\" target=\"_top\">here</a>\n-     and <a class=\"ulink\" href=\"http://gcc.gnu.org/ml/libstdc++/2002-07/msg00111.html\" target=\"_top\">here</a>.\n-     The releases themselves are available at\n-      <a class=\"ulink\" href=\"http://www.kotelna.sk/dk/sw/caphint/\" target=\"_top\">\n-      http://www.kotelna.sk/dk/sw/caphint/</a>.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt07ch16.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt07ch16.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt07ch17.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a016.\u00a0Sequences\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a017.\u00a0Associative</td></tr></table></div></body></html>"}, {"sha": "53259e143114dfbe69e9aa034f9dc6bced5c0eeb", "filename": "libstdc++-v3/doc/html/manual/bk01pt07ch17.html", "status": "removed", "additions": 0, "deletions": 84, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch17.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch17.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch17.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,84 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a017.\u00a0Associative</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0Containers\" /><link rel=\"prev\" href=\"bk01pt07ch16s02.html\" title=\"vector\" /><link rel=\"next\" href=\"bk01pt07ch17s02.html\" title=\"bitset\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a017.\u00a0Associative</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt07ch16s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VII.\u00a0Containers</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt07ch17s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.containers.associative\"></a>Chapter\u00a017.\u00a0Associative</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt07ch17.html#containers.associative.insert_hints\">Insertion Hints</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt07ch17s02.html\">bitset</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt07ch17s02.html#associative.bitset.size_variable\">Size Variable</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt07ch17s02.html#associative.bitset.type_string\">Type String</a></span></dt></dl></dd></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.associative.insert_hints\"></a>Insertion Hints</h2></div></div></div><p>\n-     Section [23.1.2], Table 69, of the C++ standard lists this\n-     function for all of the associative containers (map, set, etc):\n-   </p><pre class=\"programlisting\">\n-      a.insert(p,t);\n-   </pre><p>\n-     where 'p' is an iterator into the container 'a', and 't' is the\n-     item to insert.  The standard says that \u201c<span class=\"quote\"><code class=\"code\">t</code> is\n-     inserted as close as possible to the position just prior to\n-     <code class=\"code\">p</code>.</span>\u201d (Library DR #233 addresses this topic,\n-     referring to <a class=\"ulink\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1780.html\" target=\"_top\">N1780</a>.\n-     Since version 4.2 GCC implements the resolution to DR 233, so\n-     that insertions happen as close as possible to the hint. For\n-     earlier releases the hint was only used as described below.\n-   </p><p>\n-     Here we'll describe how the hinting works in the libstdc++\n-     implementation, and what you need to do in order to take\n-     advantage of it.  (Insertions can change from logarithmic\n-     complexity to amortized constant time, if the hint is properly\n-     used.)  Also, since the current implementation is based on the\n-     SGI STL one, these points may hold true for other library\n-     implementations also, since the HP/SGI code is used in a lot of\n-     places.\n-   </p><p>\n-     In the following text, the phrases <span class=\"emphasis\"><em>greater\n-     than</em></span> and <span class=\"emphasis\"><em>less than</em></span> refer to the\n-     results of the strict weak ordering imposed on the container by\n-     its comparison object, which defaults to (basically)\n-     \u201c<span class=\"quote\">&lt;</span>\u201d.  Using those phrases is semantically sloppy,\n-     but I didn't want to get bogged down in syntax.  I assume that if\n-     you are intelligent enough to use your own comparison objects,\n-     you are also intelligent enough to assign \u201c<span class=\"quote\">greater</span>\u201d\n-     and \u201c<span class=\"quote\">lesser</span>\u201d their new meanings in the next\n-     paragraph.  *grin*\n-   </p><p>\n-     If the <code class=\"code\">hint</code> parameter ('p' above) is equivalent to:\n-   </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>\n-\t  <code class=\"code\">begin()</code>, then the item being inserted should\n-\t  have a key less than all the other keys in the container.\n-\t  The item will be inserted at the beginning of the container,\n-\t  becoming the new entry at <code class=\"code\">begin()</code>.\n-      </p></li><li><p>\n-\t  <code class=\"code\">end()</code>, then the item being inserted should have\n-\t  a key greater than all the other keys in the container.  The\n-\t  item will be inserted at the end of the container, becoming\n-\t  the new entry at <code class=\"code\">end()</code>.  \n-      </p></li><li><p>\n-\t  neither <code class=\"code\">begin()</code> nor <code class=\"code\">end()</code>, then:\n-\t  Let <code class=\"code\">h</code> be the entry in the container pointed to\n-\t  by <code class=\"code\">hint</code>, that is, <code class=\"code\">h = *hint</code>.  Then\n-\t  the item being inserted should have a key less than that of\n-\t  <code class=\"code\">h</code>, and greater than that of the item preceding\n-\t  <code class=\"code\">h</code>.  The new item will be inserted between\n-\t  <code class=\"code\">h</code> and <code class=\"code\">h</code>'s predecessor.\n-\t  </p></li></ul></div><p>\n-     For <code class=\"code\">multimap</code> and <code class=\"code\">multiset</code>, the\n-     restrictions are slightly looser: \u201c<span class=\"quote\">greater than</span>\u201d\n-     should be replaced by \u201c<span class=\"quote\">not less than</span>\u201dand \u201c<span class=\"quote\">less\n-     than</span>\u201d should be replaced by \u201c<span class=\"quote\">not greater\n-     than.</span>\u201d (Why not replace greater with\n-     greater-than-or-equal-to?  You probably could in your head, but\n-     the mathematicians will tell you that it isn't the same thing.)\n-   </p><p>\n-     If the conditions are not met, then the hint is not used, and the\n-     insertion proceeds as if you had called <code class=\"code\"> a.insert(t)\n-     </code> instead.  (<span class=\"emphasis\"><em>Note </em></span> that GCC releases\n-     prior to 3.0.2 had a bug in the case with <code class=\"code\">hint ==\n-     begin()</code> for the <code class=\"code\">map</code> and <code class=\"code\">set</code>\n-     classes.  You should not use a hint argument in those releases.)\n-   </p><p>\n-     This behavior goes well with other containers'\n-     <code class=\"code\">insert()</code> functions which take an iterator: if used,\n-     the new item will be inserted before the iterator passed as an\n-     argument, same as the other containers.\n-   </p><p>\n-     <span class=\"emphasis\"><em>Note </em></span> also that the hint in this\n-     implementation is a one-shot.  The older insertion-with-hint\n-     routines check the immediately surrounding entries to ensure that\n-     the new item would in fact belong there.  If the hint does not\n-     point to the correct place, then no further local searching is\n-     done; the search begins from scratch in logarithmic time.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt07ch16s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt07ch17s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">vector\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0bitset</td></tr></table></div></body></html>"}, {"sha": "1d4e3f90403b24438e27dbe1df7e5c43854e56d0", "filename": "libstdc++-v3/doc/html/manual/bk01pt07ch17s02.html", "status": "removed", "additions": 0, "deletions": 105, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch17s02.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch17s02.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch17s02.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,105 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>bitset</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"bk01pt07ch17.html\" title=\"Chapter\u00a017.\u00a0Associative\" /><link rel=\"prev\" href=\"bk01pt07ch17.html\" title=\"Chapter\u00a017.\u00a0Associative\" /><link rel=\"next\" href=\"bk01pt07ch18.html\" title=\"Chapter\u00a018.\u00a0Interacting with C\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">bitset</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt07ch17.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a017.\u00a0Associative</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt07ch18.html\">Next</a></td></tr></table><hr /></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.associative.bitset\"></a>bitset</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"associative.bitset.size_variable\"></a>Size Variable</h3></div></div></div><p>\n-\tNo, you cannot write code of the form\n-      </p><pre class=\"programlisting\">\n-      #include &lt;bitset&gt;\n-\n-      void foo (size_t n)\n-      {\n-          std::bitset&lt;n&gt;   bits;\n-          ....\n-      } \n-   </pre><p>\n-     because <code class=\"code\">n</code> must be known at compile time.  Your\n-     compiler is correct; it is not a bug.  That's the way templates\n-     work.  (Yes, it <span class=\"emphasis\"><em>is</em></span> a feature.)\n-   </p><p>\n-     There are a couple of ways to handle this kind of thing.  Please\n-     consider all of them before passing judgement.  They include, in\n-     no particular order:\n-   </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>A very large N in <code class=\"code\">bitset&lt;N&gt;</code>.</p></li><li><p>A container&lt;bool&gt;.</p></li><li><p>Extremely weird solutions.</p></li></ul></div><p>\n-     <span class=\"emphasis\"><em>A very large N in\n-     <code class=\"code\">bitset&lt;N&gt;</code>.\u00a0\u00a0</em></span> It has been\n-     pointed out a few times in newsgroups that N bits only takes up\n-     (N/8) bytes on most systems, and division by a factor of eight is\n-     pretty impressive when speaking of memory.  Half a megabyte given\n-     over to a bitset (recall that there is zero space overhead for\n-     housekeeping info; it is known at compile time exactly how large\n-     the set is) will hold over four million bits.  If you're using\n-     those bits as status flags (e.g.,\n-     \u201c<span class=\"quote\">changed</span>\u201d/\u201c<span class=\"quote\">unchanged</span>\u201d flags), that's a\n-     <span class=\"emphasis\"><em>lot</em></span> of state.\n-   </p><p>\n-     You can then keep track of the \u201c<span class=\"quote\">maximum bit used</span>\u201d\n-     during some testing runs on representative data, make note of how\n-     many of those bits really need to be there, and then reduce N to\n-     a smaller number.  Leave some extra space, of course.  (If you\n-     plan to write code like the incorrect example above, where the\n-     bitset is a local variable, then you may have to talk your\n-     compiler into allowing that much stack space; there may be zero\n-     space overhead, but it's all allocated inside the object.)\n-   </p><p>\n-     <span class=\"emphasis\"><em>A container&lt;bool&gt;.\u00a0\u00a0</em></span> The\n-     Committee made provision for the space savings possible with that\n-     (N/8) usage previously mentioned, so that you don't have to do\n-     wasteful things like <code class=\"code\">Container&lt;char&gt;</code> or\n-     <code class=\"code\">Container&lt;short int&gt;</code>.  Specifically,\n-     <code class=\"code\">vector&lt;bool&gt;</code> is required to be specialized for\n-     that space savings.\n-   </p><p>\n-     The problem is that <code class=\"code\">vector&lt;bool&gt;</code> doesn't\n-     behave like a normal vector anymore.  There have been recent\n-     journal articles which discuss the problems (the ones by Herb\n-     Sutter in the May and July/August 1999 issues of C++ Report cover\n-     it well).  Future revisions of the ISO C++ Standard will change\n-     the requirement for <code class=\"code\">vector&lt;bool&gt;</code>\n-     specialization.  In the meantime, <code class=\"code\">deque&lt;bool&gt;</code>\n-     is recommended (although its behavior is sane, you probably will\n-     not get the space savings, but the allocation scheme is different\n-     than that of vector).\n-   </p><p>\n-     <span class=\"emphasis\"><em>Extremely weird solutions.\u00a0\u00a0</em></span> If\n-     you have access to the compiler and linker at runtime, you can do\n-     something insane, like figuring out just how many bits you need,\n-     then writing a temporary source code file.  That file contains an\n-     instantiation of <code class=\"code\">bitset</code> for the required number of\n-     bits, inside some wrapper functions with unchanging signatures.\n-     Have your program then call the compiler on that file using\n-     Position Independent Code, then open the newly-created object\n-     file and load those wrapper functions.  You'll have an\n-     instantiation of <code class=\"code\">bitset&lt;N&gt;</code> for the exact\n-     <code class=\"code\">N</code> that you need at the time.  Don't forget to delete\n-     the temporary files.  (Yes, this <span class=\"emphasis\"><em>can</em></span> be, and\n-     <span class=\"emphasis\"><em>has been</em></span>, done.)\n-   </p><p>\n-     This would be the approach of either a visionary genius or a\n-     raving lunatic, depending on your programming and management\n-     style.  Probably the latter.\n-   </p><p>\n-     Which of the above techniques you use, if any, are up to you and\n-     your intended application.  Some time/space profiling is\n-     indicated if it really matters (don't just guess).  And, if you\n-     manage to do anything along the lines of the third category, the\n-     author would love to hear from you...\n-   </p><p>\n-     Also note that the implementation of bitset used in libstdc++ has\n-     <a class=\"ulink\" href=\"../ext/sgiexts.html#ch23\" target=\"_top\">some extensions</a>.\n-   </p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"associative.bitset.type_string\"></a>Type String</h3></div></div></div><p>\n-      </p><p>\n-     Bitmasks do not take char* nor const char* arguments in their\n-     constructors.  This is something of an accident, but you can read\n-     about the problem: follow the library's \u201c<span class=\"quote\">Links</span>\u201d from\n-     the homepage, and from the C++ information \u201c<span class=\"quote\">defect\n-     reflector</span>\u201d link, select the library issues list.  Issue\n-     number 116 describes the problem.\n-   </p><p>\n-     For now you can simply make a temporary string object using the\n-     constructor expression:\n-   </p><pre class=\"programlisting\">\n-      std::bitset&lt;5&gt; b ( std::string(\u201c<span class=\"quote\">10110</span>\u201d) );\n-   </pre><p>\n-     instead of\n-   </p><pre class=\"programlisting\">\n-      std::bitset&lt;5&gt; b ( \u201c<span class=\"quote\">10110</span>\u201d );    // invalid\n-    </pre></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt07ch17.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"bk01pt07ch17.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt07ch18.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a017.\u00a0Associative\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a018.\u00a0Interacting with C</td></tr></table></div></body></html>"}, {"sha": "af7bb752411bd49a988e646f0fb124b646b6625c", "filename": "libstdc++-v3/doc/html/manual/bk01pt07ch18.html", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch18.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch18.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt07ch18.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,60 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a018.\u00a0Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"containers.html\" title=\"Part\u00a0VII.\u00a0Containers\" /><link rel=\"prev\" href=\"bk01pt07ch17s02.html\" title=\"bitset\" /><link rel=\"next\" href=\"iterators.html\" title=\"Part\u00a0VIII.\u00a0Iterators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a018.\u00a0Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt07ch17s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0VII.\u00a0Containers</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"iterators.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.containers.c\"></a>Chapter\u00a018.\u00a0Interacting with C</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt07ch18.html#containers.c.vs_array\">Containers vs. Arrays</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"containers.c.vs_array\"></a>Containers vs. Arrays</h2></div></div></div><p>\n-     You're writing some code and can't decide whether to use builtin\n-     arrays or some kind of container.  There are compelling reasons\n-     to use one of the container classes, but you're afraid that\n-     you'll eventually run into difficulties, change everything back\n-     to arrays, and then have to change all the code that uses those\n-     data types to keep up with the change.\n-   </p><p>\n-     If your code makes use of the standard algorithms, this isn't as\n-     scary as it sounds.  The algorithms don't know, nor care, about\n-     the kind of \u201c<span class=\"quote\">container</span>\u201d on which they work, since\n-     the algorithms are only given endpoints to work with.  For the\n-     container classes, these are iterators (usually\n-     <code class=\"code\">begin()</code> and <code class=\"code\">end()</code>, but not always).\n-     For builtin arrays, these are the address of the first element\n-     and the <a class=\"ulink\" href=\"../24_iterators/howto.html#2\" target=\"_top\">past-the-end</a> element.\n-   </p><p>\n-     Some very simple wrapper functions can hide all of that from the\n-     rest of the code.  For example, a pair of functions called\n-     <code class=\"code\">beginof</code> can be written, one that takes an array,\n-     another that takes a vector.  The first returns a pointer to the\n-     first element, and the second returns the vector's\n-     <code class=\"code\">begin()</code> iterator.\n-   </p><p>\n-     The functions should be made template functions, and should also\n-     be declared inline.  As pointed out in the comments in the code\n-     below, this can lead to <code class=\"code\">beginof</code> being optimized out\n-     of existence, so you pay absolutely nothing in terms of increased\n-     code size or execution time.\n-   </p><p>\n-     The result is that if all your algorithm calls look like\n-   </p><pre class=\"programlisting\">\n-   std::transform(beginof(foo), endof(foo), beginof(foo), SomeFunction);\n-   </pre><p>\n-     then the type of foo can change from an array of ints to a vector\n-     of ints to a deque of ints and back again, without ever changing\n-     any client code.\n-   </p><p>\n-     This author has a collection of such functions, called\n-     \u201c<span class=\"quote\">*of</span>\u201d because they all extend the builtin\n-     \u201c<span class=\"quote\">sizeof</span>\u201d.  It started with some Usenet discussions\n-     on a transparent way to find the length of an array.  A\n-     simplified and much-reduced version for easier reading is <a class=\"ulink\" href=\"wrappers_h.txt\" target=\"_top\">given here</a>.\n-   </p><p>\n-     Astute readers will notice two things at once: first, that the\n-     container class is still a <code class=\"code\">vector&lt;T&gt;</code> instead\n-     of a more general <code class=\"code\">Container&lt;T&gt;</code>.  This would\n-     mean that three functions for <code class=\"code\">deque</code> would have to be\n-     added, another three for <code class=\"code\">list</code>, and so on.  This is\n-     due to problems with getting template resolution correct; I find\n-     it easier just to give the extra three lines and avoid confusion.\n-   </p><p>\n-     Second, the line\n-   </p><pre class=\"programlisting\">\n-    inline unsigned int lengthof (T (&amp;)[sz]) { return sz; } \n-   </pre><p>\n-     looks just weird!  Hint:  unused parameters can be left nameless.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt07ch17s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"containers.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"iterators.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">bitset\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Part\u00a0VIII.\u00a0Iterators</td></tr></table></div></body></html>"}, {"sha": "f1c82056d39ba533bb67fe7606e578810ecf81e5", "filename": "libstdc++-v3/doc/html/manual/bk01pt10ch21.html", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch21.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch21.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch21.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a021.\u00a0Complex</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0Numerics\" /><link rel=\"prev\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0Numerics\" /><link rel=\"next\" href=\"bk01pt10ch22.html\" title=\"Chapter\u00a022.\u00a0Generalized Operations\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a021.\u00a0Complex</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"numerics.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0X.\u00a0Numerics</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt10ch22.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.numerics.complex\"></a>Chapter\u00a021.\u00a0Complex</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt10ch21.html#numerics.complex.processing\">complex Processing</a></span></dt></dl></div><p>\n-  </p><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"numerics.complex.processing\"></a>complex Processing</h2></div></div></div><p>\n-    </p><p>Using <code class=\"code\">complex&lt;&gt;</code> becomes even more comple- er, sorry,\n-      <span class=\"emphasis\"><em>complicated</em></span>, with the not-quite-gratuitously-incompatible\n-      addition of complex types to the C language.  David Tribble has\n-      compiled a list of C++98 and C99 conflict points; his description of\n-      C's new type versus those of C++ and how to get them playing together\n-      nicely is\n-<a class=\"ulink\" href=\"http://david.tribble.com/text/cdiffs.htm#C99-complex\" target=\"_top\">here</a>.\n-   </p><p><code class=\"code\">complex&lt;&gt;</code> is intended to be instantiated with a\n-      floating-point type.  As long as you meet that and some other basic\n-      requirements, then the resulting instantiation has all of the usual\n-      math operators defined, as well as definitions of <code class=\"code\">op&lt;&lt;</code>\n-      and <code class=\"code\">op&gt;&gt;</code> that work with iostreams: <code class=\"code\">op&lt;&lt;</code>\n-      prints <code class=\"code\">(u,v)</code> and <code class=\"code\">op&gt;&gt;</code> can read <code class=\"code\">u</code>,\n-      <code class=\"code\">(u)</code>, and <code class=\"code\">(u,v)</code>.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"numerics.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt10ch22.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0X.\u00a0Numerics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a022.\u00a0Generalized Operations</td></tr></table></div></body></html>"}, {"sha": "a278eccd573120914f5c256eb6c1c3a09f38b14d", "filename": "libstdc++-v3/doc/html/manual/bk01pt10ch22.html", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch22.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch22.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch22.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,26 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a022.\u00a0Generalized Operations</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0Numerics\" /><link rel=\"prev\" href=\"bk01pt10ch21.html\" title=\"Chapter\u00a021.\u00a0Complex\" /><link rel=\"next\" href=\"bk01pt10ch23.html\" title=\"Chapter\u00a023.\u00a0Interacting with C\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a022.\u00a0Generalized Operations</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt10ch21.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0X.\u00a0Numerics</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt10ch23.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.numerics.generalized_ops\"></a>Chapter\u00a022.\u00a0Generalized Operations</h2></div></div></div><p>\n-  </p><p>There are four generalized functions in the &lt;numeric&gt; header\n-      that follow the same conventions as those in &lt;algorithm&gt;.  Each\n-      of them is overloaded:  one signature for common default operations,\n-      and a second for fully general operations.  Their names are\n-      self-explanatory to anyone who works with numerics on a regular basis:\n-   </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p><code class=\"code\">accumulate</code></p></li><li><p><code class=\"code\">inner_product</code></p></li><li><p><code class=\"code\">partial_sum</code></p></li><li><p><code class=\"code\">adjacent_difference</code></p></li></ul></div><p>Here is a simple example of the two forms of <code class=\"code\">accumulate</code>.\n-   </p><pre class=\"programlisting\">\n-   int   ar[50];\n-   int   someval = somefunction();\n-\n-   // ...initialize members of ar to something...\n-\n-   int  sum       = std::accumulate(ar,ar+50,0);\n-   int  sum_stuff = std::accumulate(ar,ar+50,someval);\n-   int  product   = std::accumulate(ar,ar+50,1,std::multiplies&lt;int&gt;());\n-   </pre><p>The first call adds all the members of the array, using zero as an\n-      initial value for <code class=\"code\">sum</code>.  The second does the same, but uses\n-      <code class=\"code\">someval</code> as the starting value (thus, <code class=\"code\">sum_stuff == sum +\n-      someval</code>).  The final call uses the second of the two signatures,\n-      and multiplies all the members of the array; here we must obviously\n-      use 1 as a starting value instead of 0.\n-   </p><p>The other three functions have similar dual-signature forms.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt10ch21.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt10ch23.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a021.\u00a0Complex\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a023.\u00a0Interacting with C</td></tr></table></div></body></html>"}, {"sha": "a3902b3df290f03f4357da6544fd581dee113e27", "filename": "libstdc++-v3/doc/html/manual/bk01pt10ch23.html", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch23.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch23.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt10ch23.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,18 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a023.\u00a0Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"numerics.html\" title=\"Part\u00a0X.\u00a0Numerics\" /><link rel=\"prev\" href=\"bk01pt10ch22.html\" title=\"Chapter\u00a022.\u00a0Generalized Operations\" /><link rel=\"next\" href=\"bk01pt10ch23s02.html\" title=\"C99\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a023.\u00a0Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt10ch22.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0X.\u00a0Numerics</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt10ch23s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.numerics.c\"></a>Chapter\u00a023.\u00a0Interacting with C</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt10ch23.html#numerics.c.array\">Numerics vs. Arrays</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt10ch23s02.html\">C99</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"numerics.c.array\"></a>Numerics vs. Arrays</h2></div></div></div><p>One of the major reasons why FORTRAN can chew through numbers so well\n-      is that it is defined to be free of pointer aliasing, an assumption\n-      that C89 is not allowed to make, and neither is C++98.  C99 adds a new\n-      keyword, <code class=\"code\">restrict</code>, to apply to individual pointers.  The\n-      C++ solution is contained in the library rather than the language\n-      (although many vendors can be expected to add this to their compilers\n-      as an extension).\n-   </p><p>That library solution is a set of two classes, five template classes,\n-      and \"a whole bunch\" of functions.  The classes are required\n-      to be free of pointer aliasing, so compilers can optimize the\n-      daylights out of them the same way that they have been for FORTRAN.\n-      They are collectively called <code class=\"code\">valarray</code>, although strictly\n-      speaking this is only one of the five template classes, and they are\n-      designed to be familiar to people who have worked with the BLAS\n-      libraries before.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt10ch22.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"numerics.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt10ch23s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a022.\u00a0Generalized Operations\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0C99</td></tr></table></div></body></html>"}, {"sha": "1c8976e1dc11558cafcbfe166cbfd67e8e607641", "filename": "libstdc++-v3/doc/html/manual/bk01pt11ch24.html", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch24.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch24.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch24.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,113 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a024.\u00a0Iostream Objects</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0Input and Output\" /><link rel=\"prev\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0Input and Output\" /><link rel=\"next\" href=\"bk01pt11ch25.html\" title=\"Chapter\u00a025.\u00a0Stream Buffers\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a024.\u00a0Iostream Objects</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"io.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XI.\u00a0Input and Output</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch25.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.io.objects\"></a>Chapter\u00a024.\u00a0Iostream Objects</h2></div></div></div><p>To minimize the time you have to wait on the compiler, it's good to\n-      only include the headers you really need.  Many people simply include\n-      &lt;iostream&gt; when they don't need to -- and that can <span class=\"emphasis\"><em>penalize\n-      your runtime as well.</em></span>  Here are some tips on which header to use\n-      for which situations, starting with the simplest.\n-   </p><p><span class=\"emphasis\"><em>&lt;iosfwd&gt;</em></span> should be included whenever you simply\n-      need the <span class=\"emphasis\"><em>name</em></span> of an I/O-related class, such as\n-      \"ofstream\" or \"basic_streambuf\".  Like the name\n-      implies, these are forward declarations.  (A word to all you fellow\n-      old school programmers:  trying to forward declare classes like\n-      \"class istream;\" won't work.  Look in the iosfwd header if\n-      you'd like to know why.)  For example,\n-   </p><pre class=\"programlisting\">\n-    #include &lt;iosfwd&gt;\n-\n-    class MyClass\n-    {\n-        ....\n-        std::ifstream&amp;   input_file;\n-    };\n-\n-    extern std::ostream&amp; operator&lt;&lt; (std::ostream&amp;, MyClass&amp;);\n-   </pre><p><span class=\"emphasis\"><em>&lt;ios&gt;</em></span> declares the base classes for the entire\n-      I/O stream hierarchy, std::ios_base and std::basic_ios&lt;charT&gt;, the\n-      counting types std::streamoff and std::streamsize, the file\n-      positioning type std::fpos, and the various manipulators like\n-      std::hex, std::fixed, std::noshowbase, and so forth.\n-   </p><p>The ios_base class is what holds the format flags, the state flags,\n-      and the functions which change them (setf(), width(), precision(),\n-      etc).  You can also store extra data and register callback functions\n-      through ios_base, but that has been historically underused.  Anything\n-      which doesn't depend on the type of characters stored is consolidated\n-      here.\n-   </p><p>The template class basic_ios is the highest template class in the\n-      hierarchy; it is the first one depending on the character type, and\n-      holds all general state associated with that type:  the pointer to the\n-      polymorphic stream buffer, the facet information, etc.\n-   </p><p><span class=\"emphasis\"><em>&lt;streambuf&gt;</em></span> declares the template class\n-      basic_streambuf, and two standard instantiations, streambuf and\n-      wstreambuf.  If you need to work with the vastly useful and capable\n-      stream buffer classes, e.g., to create a new form of storage\n-      transport, this header is the one to include.\n-   </p><p><span class=\"emphasis\"><em>&lt;istream&gt;</em></span>/<span class=\"emphasis\"><em>&lt;ostream&gt;</em></span> are\n-      the headers to include when you are using the &gt;&gt;/&lt;&lt;\n-      interface, or any of the other abstract stream formatting functions.\n-      For example,\n-   </p><pre class=\"programlisting\">\n-    #include &lt;istream&gt;\n-\n-    std::ostream&amp; operator&lt;&lt; (std::ostream&amp; os, MyClass&amp; c)\n-    {\n-       return os &lt;&lt; c.data1() &lt;&lt; c.data2();\n-    }\n-   </pre><p>The std::istream and std::ostream classes are the abstract parents of\n-      the various concrete implementations.  If you are only using the\n-      interfaces, then you only need to use the appropriate interface header.\n-   </p><p><span class=\"emphasis\"><em>&lt;iomanip&gt;</em></span> provides \"extractors and inserters\n-      that alter information maintained by class ios_base and its derived\n-      classes,\" such as std::setprecision and std::setw.  If you need\n-      to write expressions like <code class=\"code\">os &lt;&lt; setw(3);</code> or\n-      <code class=\"code\">is &gt;&gt; setbase(8);</code>, you must include &lt;iomanip&gt;.\n-   </p><p><span class=\"emphasis\"><em>&lt;sstream&gt;</em></span>/<span class=\"emphasis\"><em>&lt;fstream&gt;</em></span>\n-      declare the six stringstream and fstream classes.  As they are the\n-      standard concrete descendants of istream and ostream, you will already\n-      know about them.\n-   </p><p>Finally, <span class=\"emphasis\"><em>&lt;iostream&gt;</em></span> provides the eight standard\n-      global objects (cin, cout, etc).  To do this correctly, this header\n-      also provides the contents of the &lt;istream&gt; and &lt;ostream&gt;\n-      headers, but nothing else.  The contents of this header look like\n-   </p><pre class=\"programlisting\">\n-    #include &lt;ostream&gt;\n-    #include &lt;istream&gt;\n-\n-    namespace std\n-    {\n-        extern istream cin;\n-        extern ostream cout;\n-        ....\n-\n-        // this is explained below\n-        <span class=\"emphasis\"><em>static ios_base::Init __foo;</em></span>    // not its real name\n-    }\n-   </pre><p>Now, the runtime penalty mentioned previously:  the global objects\n-      must be initialized before any of your own code uses them; this is\n-      guaranteed by the standard.  Like any other global object, they must\n-      be initialized once and only once.  This is typically done with a\n-      construct like the one above, and the nested class ios_base::Init is \n-      specified in the standard for just this reason.\n-   </p><p>How does it work?  Because the header is included before any of your\n-      code, the <span class=\"emphasis\"><em>__foo</em></span> object is constructed before any of\n-      your objects.  (Global objects are built in the order in which they\n-      are declared, and destroyed in reverse order.)  The first time the\n-      constructor runs, the eight stream objects are set up.\n-   </p><p>The <code class=\"code\">static</code> keyword means that each object file compiled\n-      from a source file containing &lt;iostream&gt; will have its own\n-      private copy of <span class=\"emphasis\"><em>__foo</em></span>.  There is no specified order\n-      of construction across object files (it's one of those pesky NP\n-      problems that make life so interesting), so one copy in each object\n-      file means that the stream objects are guaranteed to be set up before\n-      any of your code which uses them could run, thereby meeting the\n-      requirements of the standard.\n-   </p><p>The penalty, of course, is that after the first copy of\n-      <span class=\"emphasis\"><em>__foo</em></span> is constructed, all the others are just wasted\n-      processor time.  The time spent is merely for an increment-and-test\n-      inside a function call, but over several dozen or hundreds of object\n-      files, that time can add up.  (It's not in a tight loop, either.)\n-   </p><p>The lesson?  Only include &lt;iostream&gt; when you need to use one of\n-      the standard objects in that source file; you'll pay less startup\n-      time.  Only include the header files you need to in general; your\n-      compile times will go down when there's less parsing work to do.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"io.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch25.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0XI.\u00a0Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a025.\u00a0Stream Buffers</td></tr></table></div></body></html>"}, {"sha": "a3bbfded422591d142ca053185a4a07ed49e6ceb", "filename": "libstdc++-v3/doc/html/manual/bk01pt11ch25.html", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch25.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch25.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch25.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,57 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a025.\u00a0Stream Buffers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0Input and Output\" /><link rel=\"prev\" href=\"bk01pt11ch24.html\" title=\"Chapter\u00a024.\u00a0Iostream Objects\" /><link rel=\"next\" href=\"bk01pt11ch25s02.html\" title=\"Buffering\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a025.\u00a0Stream Buffers</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch24.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XI.\u00a0Input and Output</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch25s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.io.streambufs\"></a>Chapter\u00a025.\u00a0Stream Buffers</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt11ch25.html#io.streambuf.derived\">Derived streambuf Classes</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch25s02.html\">Buffering</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"io.streambuf.derived\"></a>Derived streambuf Classes</h2></div></div></div><p>\n-    </p><p>Creating your own stream buffers for I/O can be remarkably easy.\n-      If you are interested in doing so, we highly recommend two very\n-      excellent books:\n-      <a class=\"ulink\" href=\"http://www.langer.camelot.de/iostreams.html\" target=\"_top\">Standard C++\n-      IOStreams and Locales</a> by Langer and Kreft, ISBN 0-201-18395-1, and\n-      <a class=\"ulink\" href=\"http://www.josuttis.com/libbook/\" target=\"_top\">The C++ Standard Library</a>\n-      by Nicolai Josuttis, ISBN 0-201-37926-0.  Both are published by\n-      Addison-Wesley, who isn't paying us a cent for saying that, honest.\n-   </p><p>Here is a simple example, io/outbuf1, from the Josuttis text.  It\n-      transforms everything sent through it to uppercase.  This version\n-      assumes many things about the nature of the character type being\n-      used (for more information, read the books or the newsgroups):\n-   </p><pre class=\"programlisting\">\n-    #include &lt;iostream&gt;\n-    #include &lt;streambuf&gt;\n-    #include &lt;locale&gt;\n-    #include &lt;cstdio&gt;\n-\n-    class outbuf : public std::streambuf\n-    {\n-      protected:\n-\t/* central output function\n-\t * - print characters in uppercase mode\n-\t */\n-\tvirtual int_type overflow (int_type c) {\n-\t    if (c != EOF) {\n-\t\t// convert lowercase to uppercase\n-\t\tc = std::toupper(static_cast&lt;char&gt;(c),getloc());\n-\n-\t\t// and write the character to the standard output\n-\t\tif (putchar(c) == EOF) {\n-\t\t    return EOF;\n-\t\t}\n-\t    }\n-\t    return c;\n-\t}\n-    };\n-\n-    int main()\n-    {\n-\t// create special output buffer\n-\toutbuf ob;\n-\t// initialize output stream with that output buffer\n-\tstd::ostream out(&amp;ob);\n-\n-\tout &lt;&lt; \"31 hexadecimal: \"\n-\t    &lt;&lt; std::hex &lt;&lt; 31 &lt;&lt; std::endl;\n-\treturn 0;\n-    }\n-   </pre><p>Try it yourself!  More examples can be found in 3.1.x code, in\n-      <code class=\"code\">include/ext/*_filebuf.h</code>, and on\n-      <a class=\"ulink\" href=\"http://www.informatik.uni-konstanz.de/~kuehl/c++/iostream/\" target=\"_top\">Dietmar\n-      K\u00fchl's IOStreams page</a>.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch24.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch25s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a024.\u00a0Iostream Objects\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Buffering</td></tr></table></div></body></html>"}, {"sha": "23c5189868a420769e3bf02ce46c58e3a486b49d", "filename": "libstdc++-v3/doc/html/manual/bk01pt11ch26.html", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch26.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch26.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch26.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a026.\u00a0Memory Based Streams</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0Input and Output\" /><link rel=\"prev\" href=\"bk01pt11ch25s02.html\" title=\"Buffering\" /><link rel=\"next\" href=\"bk01pt11ch27.html\" title=\"Chapter\u00a027.\u00a0File Based Streams\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a026.\u00a0Memory Based Streams</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch25s02.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XI.\u00a0Input and Output</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch27.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.io.memstreams\"></a>Chapter\u00a026.\u00a0Memory Based Streams</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt11ch26.html#manual.io.memstreams.compat\">Compatibility With strstream</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.io.memstreams.compat\"></a>Compatibility With strstream</h2></div></div></div><p>\n-    </p><p>Stringstreams (defined in the header <code class=\"code\">&lt;sstream&gt;</code>)\n-      are in this author's opinion one of the coolest things since\n-      sliced time.  An example of their use is in the Received Wisdom\n-      section for Chapter 21 (Strings),\n-      <a class=\"ulink\" href=\"../21_strings/howto.html#1.1internal\" target=\"_top\"> describing how to\n-      format strings</a>.\n-   </p><p>The quick definition is:  they are siblings of ifstream and ofstream,\n-      and they do for <code class=\"code\">std::string</code> what their siblings do for\n-      files.  All that work you put into writing <code class=\"code\">&lt;&lt;</code> and\n-      <code class=\"code\">&gt;&gt;</code> functions for your classes now pays off\n-      <span class=\"emphasis\"><em>again!</em></span>  Need to format a string before passing the string\n-      to a function?  Send your stuff via <code class=\"code\">&lt;&lt;</code> to an\n-      ostringstream.  You've read a string as input and need to parse it?\n-      Initialize an istringstream with that string, and then pull pieces\n-      out of it with <code class=\"code\">&gt;&gt;</code>.  Have a stringstream and need to\n-      get a copy of the string inside?  Just call the <code class=\"code\">str()</code>\n-      member function.\n-   </p><p>This only works if you've written your\n-      <code class=\"code\">&lt;&lt;</code>/<code class=\"code\">&gt;&gt;</code> functions correctly, though,\n-      and correctly means that they take istreams and ostreams as\n-      parameters, not i<span class=\"emphasis\"><em>f</em></span>streams and o<span class=\"emphasis\"><em>f</em></span>streams.  If they\n-      take the latter, then your I/O operators will work fine with\n-      file streams, but with nothing else -- including stringstreams.\n-   </p><p>If you are a user of the strstream classes, you need to update\n-      your code.  You don't have to explicitly append <code class=\"code\">ends</code> to\n-      terminate the C-style character array, you don't have to mess with\n-      \"freezing\" functions, and you don't have to manage the\n-      memory yourself.  The strstreams have been officially deprecated,\n-      which means that 1) future revisions of the C++ Standard won't\n-      support them, and 2) if you use them, people will laugh at you.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch25s02.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch27.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Buffering\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a027.\u00a0File Based Streams</td></tr></table></div></body></html>"}, {"sha": "ac7cf9e2feb0fac7d27da1b8291e56e86396ed5f", "filename": "libstdc++-v3/doc/html/manual/bk01pt11ch27.html", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch27.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch27.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch27.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,49 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a027.\u00a0File Based Streams</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0Input and Output\" /><link rel=\"prev\" href=\"bk01pt11ch26.html\" title=\"Chapter\u00a026.\u00a0Memory Based Streams\" /><link rel=\"next\" href=\"bk01pt11ch27s02.html\" title=\"Binary Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a027.\u00a0File Based Streams</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch26.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XI.\u00a0Input and Output</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch27s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.io.filestreams\"></a>Chapter\u00a027.\u00a0File Based Streams</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt11ch27.html#manual.io.filestreams.copying_a_file\">Copying a File</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch27s02.html\">Binary Input and Output</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch27s03.html\">More Binary Input and Output</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.io.filestreams.copying_a_file\"></a>Copying a File</h2></div></div></div><p>\n-  </p><p>So you want to copy a file quickly and easily, and most important,\n-      completely portably.  And since this is C++, you have an open\n-      ifstream (call it IN) and an open ofstream (call it OUT):\n-   </p><pre class=\"programlisting\">\n-   #include &lt;fstream&gt;\n-\n-   std::ifstream  IN (\"input_file\");\n-   std::ofstream  OUT (\"output_file\"); </pre><p>Here's the easiest way to get it completely wrong:\n-   </p><pre class=\"programlisting\">\n-   OUT &lt;&lt; IN;</pre><p>For those of you who don't already know why this doesn't work\n-      (probably from having done it before), I invite you to quickly\n-      create a simple text file called \"input_file\" containing\n-      the sentence\n-   </p><pre class=\"programlisting\">\n-      The quick brown fox jumped over the lazy dog.</pre><p>surrounded by blank lines.  Code it up and try it.  The contents\n-      of \"output_file\" may surprise you.\n-   </p><p>Seriously, go do it.  Get surprised, then come back.  It's worth it.\n-   </p><p>The thing to remember is that the <code class=\"code\">basic_[io]stream</code> classes\n-      handle formatting, nothing else.  In particular, they break up on\n-      whitespace.  The actual reading, writing, and storing of data is\n-      handled by the <code class=\"code\">basic_streambuf</code> family.  Fortunately, the\n-      <code class=\"code\">operator&lt;&lt;</code> is overloaded to take an ostream and\n-      a pointer-to-streambuf, in order to help with just this kind of\n-      \"dump the data verbatim\" situation.\n-   </p><p>Why a <span class=\"emphasis\"><em>pointer</em></span> to streambuf and not just a streambuf?  Well,\n-      the [io]streams hold pointers (or references, depending on the\n-      implementation) to their buffers, not the actual\n-      buffers.  This allows polymorphic behavior on the part of the buffers\n-      as well as the streams themselves.  The pointer is easily retrieved\n-      using the <code class=\"code\">rdbuf()</code> member function.  Therefore, the easiest\n-      way to copy the file is:\n-   </p><pre class=\"programlisting\">\n-   OUT &lt;&lt; IN.rdbuf();</pre><p>So what <span class=\"emphasis\"><em>was</em></span> happening with OUT&lt;&lt;IN?  Undefined\n-      behavior, since that particular &lt;&lt; isn't defined by the Standard.\n-      I have seen instances where it is implemented, but the character\n-      extraction process removes all the whitespace, leaving you with no\n-      blank lines and only \"Thequickbrownfox...\".  With\n-      libraries that do not define that operator, IN (or one of IN's\n-      member pointers) sometimes gets converted to a void*, and the output\n-      file then contains a perfect text representation of a hexadecimal\n-      address (quite a big surprise).  Others don't compile at all.\n-   </p><p>Also note that none of this is specific to o<span class=\"emphasis\"><em>*f*</em></span>streams. \n-      The operators shown above are all defined in the parent \n-      basic_ostream class and are therefore available with all possible\n-      descendants.\n-   </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch26.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch27s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a026.\u00a0Memory Based Streams\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Binary Input and Output</td></tr></table></div></body></html>"}, {"sha": "8745a398e4ecfcd16702827a7ffc0e44b3feb706", "filename": "libstdc++-v3/doc/html/manual/bk01pt11ch28.html", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch28.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch28.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt11ch28.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a028.\u00a0Interacting with C</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"io.html\" title=\"Part\u00a0XI.\u00a0Input and Output\" /><link rel=\"prev\" href=\"bk01pt11ch27s03.html\" title=\"More Binary Input and Output\" /><link rel=\"next\" href=\"bk01pt11ch28s02.html\" title=\"Performance\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a028.\u00a0Interacting with C</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch27s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XI.\u00a0Input and Output</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch28s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.io.c\"></a>Chapter\u00a028.\u00a0Interacting with C</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt11ch28.html#manual.io.c.FILE\">Using FILE* and file descriptors</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt11ch28s02.html\">Performance</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.io.c.FILE\"></a>Using FILE* and file descriptors</h2></div></div></div><p>\n-      See the <a class=\"link\" href=\"bk01pt12ch38.html\" title=\"Chapter\u00a038.\u00a0Input and Output\">extensions</a> for using\n-      <span class=\"type\">FILE</span> and <span class=\"type\">file descriptors</span> with\n-      <code class=\"classname\">ofstream</code> and\n-      <code class=\"classname\">ifstream</code>.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt11ch27s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"io.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt11ch28s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">More Binary Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Performance</td></tr></table></div></body></html>"}, {"sha": "6766b33537e7a3f054f5d0984cd88f3af8241b0f", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch29.html", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch29.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch29.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch29.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,37 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a029.\u00a0Compile Time Checks</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12pr03.html\" title=\"\" /><link rel=\"next\" href=\"debug_mode.html\" title=\"Chapter\u00a030.\u00a0Debug Mode\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a029.\u00a0Compile Time Checks</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12pr03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"debug_mode.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.compile_checks\"></a>Chapter\u00a029.\u00a0Compile Time Checks</h2></div></div></div><p>\n-    Also known as concept checking.\n-  </p><p>In 1999, SGI added <span class=\"emphasis\"><em>concept checkers</em></span> to their implementation\n-      of the STL:  code which checked the template parameters of\n-      instantiated pieces of the STL, in order to insure that the parameters\n-      being used met the requirements of the standard.  For example,\n-      the Standard requires that types passed as template parameters to\n-      <code class=\"code\">vector</code> be \u201c<span class=\"quote\">Assignable</span>\u201d (which means what you think\n-      it means).  The checking was done during compilation, and none of\n-      the code was executed at runtime.\n-   </p><p>Unfortunately, the size of the compiler files grew significantly\n-      as a result.  The checking code itself was cumbersome.  And bugs\n-      were found in it on more than one occasion.\n-   </p><p>The primary author of the checking code, Jeremy Siek, had already\n-      started work on a replacement implementation.  The new code has been\n-      formally reviewed and accepted into\n-      <a class=\"ulink\" href=\"http://www.boost.org/libs/concept_check/concept_check.htm\" target=\"_top\">the\n-      Boost libraries</a>, and we are pleased to incorporate it into the\n-      GNU C++ library.\n-   </p><p>The new version imposes a much smaller space overhead on the generated\n-      object file.  The checks are also cleaner and easier to read and\n-      understand.\n-   </p><p>They are off by default for all versions of GCC from 3.0 to 3.4 (the\n-      latest release at the time of writing).\n-      They can be enabled at configure time with\n-      <a class=\"ulink\" href=\"../configopts.html\" target=\"_top\"><code class=\"literal\">--enable-concept-checks</code></a>.\n-      You can enable them on a per-translation-unit basis with\n-      <code class=\"code\">#define _GLIBCXX_CONCEPT_CHECKS</code> for GCC 3.4 and higher\n-      (or with <code class=\"code\">#define _GLIBCPP_CONCEPT_CHECKS</code> for versions\n-      3.1, 3.2 and 3.3).\n-   </p><p>Please note that the upcoming C++ standard has first-class\n-   support for template parameter constraints based on concepts in the core\n-   language. This will obviate the need for the library-simulated concept\n-   checking described above.\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12pr03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"debug_mode.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a030.\u00a0Debug Mode</td></tr></table></div></body></html>"}, {"sha": "ddc6e70793185f9fd9ce64adb201fe5c73b930ee", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch32.html", "status": "removed", "additions": 0, "deletions": 394, "changes": 394, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch32.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch32.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch32.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,394 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a032.\u00a0Allocators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch31s05.html\" title=\"Testing\" /><link rel=\"next\" href=\"bitmap_allocator.html\" title=\"bitmap_allocator\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a032.\u00a0Allocators</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s05.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.allocator\"></a>Chapter\u00a032.\u00a0Allocators</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt12ch32.html#manual.ext.allocator.mt\">mt_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch32.html#allocator.mt.intro\">Intro</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32.html#allocator.mt.design_issues\">Design Issues</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32.html#allocator.mt.impl\">Implementation</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32.html#allocator.mt.example_single\">Single Thread Example</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch32.html#allocator.mt.example_multi\">Multiple Thread Example</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bitmap_allocator.html\">bitmap_allocator</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.design\">Design</a></span></dt><dt><span class=\"sect2\"><a href=\"bitmap_allocator.html#allocator.bitmap.impl\">Implementation</a></span></dt></dl></dd></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.allocator.mt\"></a>mt_allocator</h2></div></div></div><p>\n-</p><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.intro\"></a>Intro</h3></div></div></div><p> \n-  The mt allocator [hereinafter referred to simply as \"the allocator\"]\n-  is a fixed size (power of two) allocator that was initially\n-  developed specifically to suit the needs of multi threaded\n-  applications [hereinafter referred to as an MT application]. Over\n-  time the allocator has evolved and been improved in many ways, in\n-  particular it now also does a good job in single threaded\n-  applications [hereinafter referred to as a ST application]. (Note:\n-  In this document, when referring to single threaded applications\n-  this also includes applications that are compiled with gcc without\n-  thread support enabled. This is accomplished using ifdef's on\n-  __GTHREADS). This allocator is tunable, very flexible, and capable\n-  of high-performance.\n-</p><p>\n-  The aim of this document is to describe - from an application point of\n-  view - the \"inner workings\" of the allocator.\n-</p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.design_issues\"></a>Design Issues</h3></div></div></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.mt.overview\"></a>Overview</h4></div></div></div><p> There are three general components to the allocator: a datum\n-describing the characteristics of the memory pool, a policy class\n-containing this pool that links instantiation types to common or\n-individual pools, and a class inheriting from the policy class that is\n-the actual allocator.\n-</p><p>The datum describing pools characteristics is \n-</p><pre class=\"programlisting\">\n-  template&lt;bool _Thread&gt;\n-    class __pool\n-</pre><p> This class is parametrized on thread support, and is explicitly\n-specialized for both multiple threads (with <code class=\"code\">bool==true</code>)\n-and single threads (via <code class=\"code\">bool==false</code>.) It is possible to\n-use a custom pool datum instead of the default class that is provided.\n-</p><p> There are two distinct policy classes, each of which can be used\n-with either type of underlying pool datum.\n-</p><pre class=\"programlisting\">\n-  template&lt;bool _Thread&gt;\n-    struct __common_pool_policy\n-\n-  template&lt;typename _Tp, bool _Thread&gt;\n-    struct __per_type_pool_policy\n-</pre><p> The first policy, <code class=\"code\">__common_pool_policy</code>, implements a\n-common pool. This means that allocators that are instantiated with\n-different types, say <code class=\"code\">char</code> and <code class=\"code\">long</code> will both\n-use the same pool. This is the default policy.\n-</p><p> The second policy, <code class=\"code\">__per_type_pool_policy</code>, implements\n-a separate pool for each instantiating type. Thus, <code class=\"code\">char</code>\n-and <code class=\"code\">long</code> will use separate pools. This allows per-type\n-tuning, for instance.\n-</p><p> Putting this all together, the actual allocator class is\n-</p><pre class=\"programlisting\">\n-  template&lt;typename _Tp, typename _Poolp = __default_policy&gt;\n-    class __mt_alloc : public __mt_alloc_base&lt;_Tp&gt;,  _Poolp\n-</pre><p> This class has the interface required for standard library allocator\n-classes, namely member functions <code class=\"code\">allocate</code> and\n-<code class=\"code\">deallocate</code>, plus others.\n-</p></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.impl\"></a>Implementation</h3></div></div></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.mt.tune\"></a>Tunable Parameters</h4></div></div></div><p>Certain allocation parameters can be modified, or tuned. There\n-exists a nested <code class=\"code\">struct __pool_base::_Tune</code> that contains all\n-these parameters, which include settings for\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>Alignment</p></li><li><p>Maximum bytes before calling <code class=\"code\">::operator new</code> directly</p></li><li><p>Minimum bytes</p></li><li><p>Size of underlying global allocations</p></li><li><p>Maximum number of supported threads</p></li><li><p>Migration of deallocations to the global free list</p></li><li><p>Shunt for global <code class=\"code\">new</code> and <code class=\"code\">delete</code></p></li></ul></div><p>Adjusting parameters for a given instance of an allocator can only\n-happen before any allocations take place, when the allocator itself is\n-initialized. For instance:\n-</p><pre class=\"programlisting\">\n-#include &lt;ext/mt_allocator.h&gt;\n-\n-struct pod\n-{\n-  int i;\n-  int j;\n-};\n-\n-int main()\n-{\n-  typedef pod value_type;\n-  typedef __gnu_cxx::__mt_alloc&lt;value_type&gt; allocator_type;\n-  typedef __gnu_cxx::__pool_base::_Tune tune_type;\n-\n-  tune_type t_default;\n-  tune_type t_opt(16, 5120, 32, 5120, 20, 10, false);\n-  tune_type t_single(16, 5120, 32, 5120, 1, 10, false);\n-\n-  tune_type t;\n-  t = allocator_type::_M_get_options();  \n-  allocator_type::_M_set_options(t_opt);\n-  t = allocator_type::_M_get_options();  \n-\n-  allocator_type a;\n-  allocator_type::pointer p1 = a.allocate(128);\n-  allocator_type::pointer p2 = a.allocate(5128);\n-\n-  a.deallocate(p1, 128);\n-  a.deallocate(p2, 5128);\n-\n-  return 0;\n-}\n-</pre></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.mt.init\"></a>Initialization</h4></div></div></div><p>\n-The static variables (pointers to freelists, tuning parameters etc)\n-are initialized as above, or are set to the global defaults.\n-</p><p>\n-The very first allocate() call will always call the\n-_S_initialize_once() function.  In order to make sure that this\n-function is called exactly once we make use of a __gthread_once call\n-in MT applications and check a static bool (_S_init) in ST\n-applications.\n-</p><p>\n-The _S_initialize() function:\n-- If the GLIBCXX_FORCE_NEW environment variable is set, it sets the bool\n-  _S_force_new to true and then returns. This will cause subsequent calls to\n-  allocate() to return memory directly from a new() call, and deallocate will\n-  only do a delete() call.\n-</p><p>\n-- If the GLIBCXX_FORCE_NEW environment variable is not set, both ST and MT \n-  applications will:\n-  - Calculate the number of bins needed. A bin is a specific power of two size\n-    of bytes. I.e., by default the allocator will deal with requests of up to \n-    128 bytes (or whatever the value of _S_max_bytes is when _S_init() is \n-    called). This means that there will be bins of the following sizes \n-    (in bytes): 1, 2, 4, 8, 16, 32, 64, 128. \n-\n-  - Create the _S_binmap array. All requests are rounded up to the next \n-    \"large enough\" bin. I.e., a request for 29 bytes will cause a block from \n-    the \"32 byte bin\" to be returned to the application. The purpose of \n-    _S_binmap is to speed up the process of finding out which bin to use. \n-    I.e., the value of _S_binmap[ 29 ] is initialized to 5 (bin 5 = 32 bytes).\n-</p><p>\n-  - Create the _S_bin array. This array consists of bin_records. There will be\n-    as many bin_records in this array as the number of bins that we calculated\n-    earlier. I.e., if _S_max_bytes = 128 there will be 8 entries.\n-    Each bin_record is then initialized:\n-    - bin_record-&gt;first = An array of pointers to block_records. There will be\n-      as many block_records pointers as there are maximum number of threads \n-      (in a ST application there is only 1 thread, in a MT application there \n-      are _S_max_threads).\n-      This holds the pointer to the first free block for each thread in this\n-      bin. I.e., if we would like to know where the first free block of size 32\n-      for thread number 3 is we would look this up by: _S_bin[ 5 ].first[ 3 ]\n-\n-    The above created block_record pointers members are now initialized to \n-    their initial values. I.e. _S_bin[ n ].first[ n ] = NULL;\n-</p><p>\n-- Additionally a MT application will:\n-  - Create a list of free thread id's. The pointer to the first entry\n-    is stored in _S_thread_freelist_first. The reason for this approach is \n-    that the __gthread_self() call will not return a value that corresponds to \n-    the maximum number of threads allowed but rather a process id number or\n-    something else. So what we do is that we create a list of thread_records.\n-    This list is _S_max_threads long and each entry holds a size_t thread_id\n-    which is initialized to 1, 2, 3, 4, 5 and so on up to _S_max_threads.\n-    Each time a thread calls allocate() or deallocate() we call \n-    _S_get_thread_id() which looks at the value of _S_thread_key which is a\n-    thread local storage pointer. If this is NULL we know that this is a newly\n-    created thread and we pop the first entry from this list and saves the\n-    pointer to this record in the _S_thread_key variable. The next time \n-    we will get the pointer to the thread_record back and we use the \n-    thread_record-&gt;thread_id as identification. I.e., the first thread that \n-    calls allocate will get the first record in this list and thus be thread\n-    number 1 and will then find the pointer to its first free 32 byte block\n-    in _S_bin[ 5 ].first[ 1 ]\n-    When we create the _S_thread_key we also define a destructor \n-    (_S_thread_key_destr) which means that when the thread dies, this\n-    thread_record is returned to the front of this list and the thread id\n-    can then be reused if a new thread is created.\n-    This list is protected by a mutex (_S_thread_freelist_mutex) which is only\n-    locked when records are removed or added to the list.\n-</p><p>\n-  - Initialize the free and used counters of each bin_record:\n-    - bin_record-&gt;free = An array of size_t. This keeps track of the number\n-      of blocks on a specific thread's freelist in each bin. I.e., if a thread\n-      has 12 32-byte blocks on it's freelists and allocates one of these, this\n-      counter would be decreased to 11.\n-\n-    - bin_record-&gt;used = An array of size_t. This keeps track of the number\n-      of blocks currently in use of this size by this thread. I.e., if a thread\n-      has made 678 requests (and no deallocations...) of 32-byte blocks this\n-      counter will read 678.\n-\n-    The above created arrays are now initialized with their initial values. \n-    I.e. _S_bin[ n ].free[ n ] = 0;\n-</p><p>\n-  - Initialize the mutex of each bin_record: The bin_record-&gt;mutex\n-    is used to protect the global freelist. This concept of a global\n-    freelist is explained in more detail in the section \"A multi\n-    threaded example\", but basically this mutex is locked whenever a\n-    block of memory is retrieved or returned to the global freelist\n-    for this specific bin. This only occurs when a number of blocks\n-    are grabbed from the global list to a thread specific list or when\n-    a thread decides to return some blocks to the global freelist.\n-</p></div><div class=\"sect3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h4 class=\"title\"><a id=\"allocator.mt.deallocation\"></a>Deallocation Notes</h4></div></div></div><p> Notes about deallocation. This allocator does not explicitly\n-release memory. Because of this, memory debugging programs like\n-valgrind or purify may notice leaks: sorry about this\n-inconvenience. Operating systems will reclaim allocated memory at\n-program termination anyway. If sidestepping this kind of noise is\n-desired, there are three options: use an allocator, like\n-<code class=\"code\">new_allocator</code> that releases memory while debugging, use\n-GLIBCXX_FORCE_NEW to bypass the allocator's internal pools, or use a\n-custom pool datum that releases resources on destruction.\n-</p><p>\n-  On systems with the function <code class=\"code\">__cxa_atexit</code>, the\n-allocator can be forced to free all memory allocated before program\n-termination with the member function\n-<code class=\"code\">__pool_type::_M_destroy</code>. However, because this member\n-function relies on the precise and exactly-conforming ordering of\n-static destructors, including those of a static local\n-<code class=\"code\">__pool</code> object, it should not be used, ever, on systems\n-that don't have the necessary underlying support. In addition, in\n-practice, forcing deallocation can be tricky, as it requires the\n-<code class=\"code\">__pool</code> object to be fully-constructed before the object\n-that uses it is fully constructed. For most (but not all) STL\n-containers, this works, as an instance of the allocator is constructed\n-as part of a container's constructor. However, this assumption is\n-implementation-specific, and subject to change. For an example of a\n-pool that frees memory, see the following\n-    <a class=\"ulink\" href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/ext/mt_allocator/deallocate_local-6.cc?view=markup\" target=\"_top\">\n-    example.</a>\n-</p></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.example_single\"></a>Single Thread Example</h3></div></div></div><p>\n-Let's start by describing how the data on a freelist is laid out in memory.\n-This is the first two blocks in freelist for thread id 3 in bin 3 (8 bytes):\n-</p><pre class=\"programlisting\">\n-+----------------+\n-| next* ---------|--+  (_S_bin[ 3 ].first[ 3 ] points here)\n-|                |  |\n-|                |  |\n-|                |  |\n-+----------------+  |\n-| thread_id = 3  |  |\n-|                |  |\n-|                |  |\n-|                |  |\n-+----------------+  |\n-| DATA           |  |  (A pointer to here is what is returned to the\n-|                |  |   the application when needed)\n-|                |  |\n-|                |  |\n-|                |  |\n-|                |  |\n-|                |  |\n-|                |  |\n-+----------------+  |\n-+----------------+  |\n-| next*          |&lt;-+  (If next == NULL it's the last one on the list)\n-|                |\n-|                |\n-|                |\n-+----------------+\n-| thread_id = 3  |\n-|                |\n-|                |\n-|                |\n-+----------------+\n-| DATA           |\n-|                |\n-|                |\n-|                |\n-|                |\n-|                |\n-|                |\n-|                |\n-+----------------+\n-</pre><p>\n-With this in mind we simplify things a bit for a while and say that there is\n-only one thread (a ST application). In this case all operations are made to \n-what is referred to as the global pool - thread id 0 (No thread may be\n-assigned this id since they span from 1 to _S_max_threads in a MT application).\n-</p><p>\n-When the application requests memory (calling allocate()) we first look at the\n-requested size and if this is &gt; _S_max_bytes we call new() directly and return.\n-</p><p>\n-If the requested size is within limits we start by finding out from which \n-bin we should serve this request by looking in _S_binmap.\n-</p><p>\n-A quick look at _S_bin[ bin ].first[ 0 ] tells us if there are any blocks of\n-this size on the freelist (0). If this is not NULL - fine, just remove the\n-block that _S_bin[ bin ].first[ 0 ] points to from the list, \n-update _S_bin[ bin ].first[ 0 ] and return a pointer to that blocks data.\n-</p><p>\n-If the freelist is empty (the pointer is NULL) we must get memory from the \n-system and build us a freelist within this memory. All requests for new memory\n-is made in chunks of _S_chunk_size. Knowing the size of a block_record and \n-the bytes that this bin stores we then calculate how many blocks we can create \n-within this chunk, build the list, remove the first block, update the pointer\n-(_S_bin[ bin ].first[ 0 ]) and return a pointer to that blocks data. \n-</p><p>\n-Deallocation is equally simple; the pointer is casted back to a block_record\n-pointer, lookup which bin to use based on the size, add the block to the front \n-of the global freelist and update the pointer as needed \n-(_S_bin[ bin ].first[ 0 ]).\n-</p><p>\n-The decision to add deallocated blocks to the front of the freelist was made\n-after a set of performance measurements that showed that this is roughly 10%\n-faster than maintaining a set of \"last pointers\" as well.\n-</p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"allocator.mt.example_multi\"></a>Multiple Thread Example</h3></div></div></div><p>\n-In the ST example we never used the thread_id variable present in each block. \n-Let's start by explaining the purpose of this in a MT application. \n-</p><p>\n-The concept of \"ownership\" was introduced since many MT applications\n-allocate and deallocate memory to shared containers from different\n-threads (such as a cache shared amongst all threads). This introduces\n-a problem if the allocator only returns memory to the current threads\n-freelist (I.e., there might be one thread doing all the allocation and\n-thus obtaining ever more memory from the system and another thread\n-that is getting a longer and longer freelist - this will in the end\n-consume all available memory).\n-</p><p>\n-Each time a block is moved from the global list (where ownership is\n-irrelevant), to a threads freelist (or when a new freelist is built\n-from a chunk directly onto a threads freelist or when a deallocation\n-occurs on a block which was not allocated by the same thread id as the\n-one doing the deallocation) the thread id is set to the current one.\n-</p><p>\n-What's the use? Well, when a deallocation occurs we can now look at\n-the thread id and find out if it was allocated by another thread id\n-and decrease the used counter of that thread instead, thus keeping the\n-free and used counters correct. And keeping the free and used counters\n-corrects is very important since the relationship between these two\n-variables decides if memory should be returned to the global pool or\n-not when a deallocation occurs.\n-</p><p>\n-When the application requests memory (calling allocate()) we first\n-look at the requested size and if this is &gt;_S_max_bytes we call new()\n-directly and return.\n-</p><p>\n-If the requested size is within limits we start by finding out from which \n-bin we should serve this request by looking in _S_binmap.\n-</p><p>\n-A call to _S_get_thread_id() returns the thread id for the calling thread \n-(and if no value has been set in _S_thread_key, a new id is assigned and\n-returned).\n-</p><p>\n-A quick look at _S_bin[ bin ].first[ thread_id ] tells us if there are\n-any blocks of this size on the current threads freelist. If this is\n-not NULL - fine, just remove the block that _S_bin[ bin ].first[\n-thread_id ] points to from the list, update _S_bin[ bin ].first[\n-thread_id ], update the free and used counters and return a pointer to\n-that blocks data.\n-</p><p>\n-If the freelist is empty (the pointer is NULL) we start by looking at\n-the global freelist (0). If there are blocks available on the global\n-freelist we lock this bins mutex and move up to block_count (the\n-number of blocks of this bins size that will fit into a _S_chunk_size)\n-or until end of list - whatever comes first - to the current threads\n-freelist and at the same time change the thread_id ownership and\n-update the counters and pointers. When the bins mutex has been\n-unlocked, we remove the block that _S_bin[ bin ].first[ thread_id ]\n-points to from the list, update _S_bin[ bin ].first[ thread_id ],\n-update the free and used counters, and return a pointer to that blocks\n-data.\n-</p><p>\n-The reason that the number of blocks moved to the current threads\n-freelist is limited to block_count is to minimize the chance that a\n-subsequent deallocate() call will return the excess blocks to the\n-global freelist (based on the _S_freelist_headroom calculation, see\n-below).\n-</p><p>\n-However if there isn't any memory on the global pool we need to get\n-memory from the system - this is done in exactly the same way as in a\n-single threaded application with one major difference; the list built\n-in the newly allocated memory (of _S_chunk_size size) is added to the\n-current threads freelist instead of to the global.\n-</p><p>\n-The basic process of a deallocation call is simple: always add the\n-block to the front of the current threads freelist and update the\n-counters and pointers (as described earlier with the specific check of\n-ownership that causes the used counter of the thread that originally\n-allocated the block to be decreased instead of the current threads\n-counter).\n-</p><p>\n-And here comes the free and used counters to service. Each time a\n-deallocation() call is made, the length of the current threads\n-freelist is compared to the amount memory in use by this thread.\n-</p><p>\n-Let's go back to the example of an application that has one thread\n-that does all the allocations and one that deallocates. Both these\n-threads use say 516 32-byte blocks that was allocated during thread\n-creation for example.  Their used counters will both say 516 at this\n-point. The allocation thread now grabs 1000 32-byte blocks and puts\n-them in a shared container. The used counter for this thread is now\n-1516.\n-</p><p>\n-The deallocation thread now deallocates 500 of these blocks. For each\n-deallocation made the used counter of the allocating thread is\n-decreased and the freelist of the deallocation thread gets longer and\n-longer. But the calculation made in deallocate() will limit the length\n-of the freelist in the deallocation thread to _S_freelist_headroom %\n-of it's used counter.  In this case, when the freelist (given that the\n-_S_freelist_headroom is at it's default value of 10%) exceeds 52\n-(516/10) blocks will be returned to the global pool where the\n-allocating thread may pick them up and reuse them.\n-</p><p>\n-In order to reduce lock contention (since this requires this bins\n-mutex to be locked) this operation is also made in chunks of blocks\n-(just like when chunks of blocks are moved from the global freelist to\n-a threads freelist mentioned above). The \"formula\" used can probably\n-be improved to further reduce the risk of blocks being \"bounced back\n-and forth\" between freelists.\n-</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch31s05.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bitmap_allocator.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Testing\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0bitmap_allocator</td></tr></table></div></body></html>"}, {"sha": "d2fb6a77f85d739a404e90d4a7df1e709a53486b", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch33.html", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch33.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch33.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch33.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a033.\u00a0Containers</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bitmap_allocator.html\" title=\"bitmap_allocator\" /><link rel=\"next\" href=\"bk01pt12ch33s02.html\" title=\"HP/SGI\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a033.\u00a0Containers</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch33s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.containers\"></a>Chapter\u00a033.\u00a0Containers</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt12ch33.html#manual.ext.containers.pbds\">Policy Based Data Structures</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch33s02.html\">HP/SGI</a></span></dt><dt><span class=\"sect1\"><a href=\"bk01pt12ch33s03.html\">Deprecated HP/SGI</a></span></dt></dl></div><p>\n-  </p><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.containers.pbds\"></a>Policy Based Data Structures</h2></div></div></div><p>\n-      <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/ext/pb_ds/index.html\" target=\"_top\">More details here</a>.\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bitmap_allocator.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch33s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">bitmap_allocator\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0HP/SGI</td></tr></table></div></body></html>"}, {"sha": "505d11f34a18174b5f36020abc535d297598cfd5", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch34.html", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch34.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch34.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch34.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,38 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a034.\u00a0Utilities</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch33s03.html\" title=\"Deprecated HP/SGI\" /><link rel=\"next\" href=\"bk01pt12ch35.html\" title=\"Chapter\u00a035.\u00a0Algorithms\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a034.\u00a0Utilities</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch33s03.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch35.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.util\"></a>Chapter\u00a034.\u00a0Utilities</h2></div></div></div><p>\n-    The &lt;functional&gt; header contains many additional functors\n-    and helper functions, extending section 20.3.  They are\n-    implemented in the file stl_function.h:\n-  </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p><code class=\"code\">identity_element</code> for addition and multiplication. * \n-  </p></li><li><p>The functor <code class=\"code\">identity</code>, whose <code class=\"code\">operator()</code>\n-      returns the argument unchanged. * \n-  </p></li><li><p>Composition functors <code class=\"code\">unary_function</code> and\n-      <code class=\"code\">binary_function</code>, and their helpers <code class=\"code\">compose1</code>\n-      and <code class=\"code\">compose2</code>. * \n-    </p></li><li><p><code class=\"code\">select1st</code> and <code class=\"code\">select2nd</code>, to strip pairs. * \n-  </p></li><li><p><code class=\"code\">project1st</code> and <code class=\"code\">project2nd</code>. * </p></li><li><p>A set of functors/functions which always return the same result.  They\n-      are <code class=\"code\">constant_void_fun</code>, <code class=\"code\">constant_binary_fun</code>,\n-      <code class=\"code\">constant_unary_fun</code>, <code class=\"code\">constant0</code>,\n-      <code class=\"code\">constant1</code>, and <code class=\"code\">constant2</code>. * </p></li><li><p>The class <code class=\"code\">subtractive_rng</code>. * </p></li><li><p>mem_fun adaptor helpers <code class=\"code\">mem_fun1</code> and\n-      <code class=\"code\">mem_fun1_ref</code> are provided for backwards compatibility. </p></li></ul></div><p>\n-  20.4.1 can use several different allocators; they are described on the\n-   main extensions page.\n-</p><p>\n-  20.4.3 is extended with a special version of\n-  <code class=\"code\">get_temporary_buffer</code> taking a second argument.  The\n-  argument is a pointer, which is ignored, but can be used to specify\n-  the template type (instead of using explicit function template\n-  arguments like the standard version does).  That is, in addition to\n-</p><pre class=\"programlisting\">\n-get_temporary_buffer&lt;int&gt;(5);\n-</pre><p>\n-you can also use\n-</p><pre class=\"programlisting\">\n-get_temporary_buffer(5, (int*)0);\n-</pre><p>\n-  A class <code class=\"code\">temporary_buffer</code> is given in stl_tempbuf.h. *\n-</p><p>\n-  The specialized algorithms of section 20.4.4 are extended with\n-  <code class=\"code\">uninitialized_copy_n</code>. *\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch33s03.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch35.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Deprecated HP/SGI\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a035.\u00a0Algorithms</td></tr></table></div></body></html>"}, {"sha": "2db6be689c5bd6f17f1bfe318aae88f75bcf5ca3", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch35.html", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch35.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch35.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch35.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,20 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a035.\u00a0Algorithms</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch34.html\" title=\"Chapter\u00a034.\u00a0Utilities\" /><link rel=\"next\" href=\"bk01pt12ch36.html\" title=\"Chapter\u00a036.\u00a0Numerics\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a035.\u00a0Algorithms</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch34.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch36.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.algorithms\"></a>Chapter\u00a035.\u00a0Algorithms</h2></div></div></div><p>25.1.6 (count, count_if) is extended with two more versions of count\n-   and count_if.  The standard versions return their results.  The\n-   additional signatures return void, but take a final parameter by\n-   reference to which they assign their results, e.g.,\n-</p><pre class=\"programlisting\">\n-   void count (first, last, value, n);</pre><p>25.2 (mutating algorithms) is extended with two families of signatures,\n-   random_sample and random_sample_n.\n-</p><p>25.2.1 (copy) is extended with\n-</p><pre class=\"programlisting\">\n-   copy_n (_InputIter first, _Size count, _OutputIter result);</pre><p>which copies the first 'count' elements at 'first' into 'result'.\n-</p><p>25.3 (sorting 'n' heaps 'n' stuff) is extended with some helper\n-   predicates.  Look in the doxygen-generated pages for notes on these.\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p><code class=\"code\">is_heap</code> tests whether or not a range is a heap.</p></li><li><p><code class=\"code\">is_sorted</code> tests whether or not a range is sorted in\n-        nondescending order.</p></li></ul></div><p>25.3.8 (lexicographical_compare) is extended with\n-</p><pre class=\"programlisting\">\n-   lexicographical_compare_3way(_InputIter1 first1, _InputIter1 last1,\n-                                 _InputIter2 first2, _InputIter2 last2)</pre><p>which does... what?\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch34.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch36.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a034.\u00a0Utilities\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a036.\u00a0Numerics</td></tr></table></div></body></html>"}, {"sha": "3f120ae6022c028307ccf6ff83d68fb51781c14c", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch36.html", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch36.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch36.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch36.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a036.\u00a0Numerics</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch35.html\" title=\"Chapter\u00a035.\u00a0Algorithms\" /><link rel=\"next\" href=\"bk01pt12ch37.html\" title=\"Chapter\u00a037.\u00a0Iterators\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a036.\u00a0Numerics</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch35.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch37.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.numerics\"></a>Chapter\u00a036.\u00a0Numerics</h2></div></div></div><p>26.4, the generalized numeric operations such as accumulate, are extended\n-   with the following functions:\n-</p><pre class=\"programlisting\">\n-   power (x, n);\n-   power (x, n, moniod_operation);</pre><p>Returns, in FORTRAN syntax, \"x ** n\" where n&gt;=0.  In the\n-   case of n == 0, returns the <a class=\"ulink\" href=\"#ch20\" target=\"_top\">identity element</a> for the\n-   monoid operation.  The two-argument signature uses multiplication (for\n-   a true \"power\" implementation), but addition is supported as well.\n-   The operation functor must be associative.\n-</p><p>The <code class=\"code\">iota</code> function wins the award for Extension With the\n-   Coolest Name.  It \"assigns sequentially increasing values to a range.\n-   That is, it assigns value to *first, value + 1 to *(first + 1) and so\n-   on.\"  Quoted from SGI documentation.\n-</p><pre class=\"programlisting\">\n-   void iota(_ForwardIter first, _ForwardIter last, _Tp value);</pre></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch35.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch37.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a035.\u00a0Algorithms\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a037.\u00a0Iterators</td></tr></table></div></body></html>"}, {"sha": "ea5e1fa7e79b1c4855f90985d7b9be105a479188", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch37.html", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch37.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch37.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch37.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,11 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a037.\u00a0Iterators</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch36.html\" title=\"Chapter\u00a036.\u00a0Numerics\" /><link rel=\"next\" href=\"bk01pt12ch38.html\" title=\"Chapter\u00a038.\u00a0Input and Output\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a037.\u00a0Iterators</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch36.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch38.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.iterators\"></a>Chapter\u00a037.\u00a0Iterators</h2></div></div></div><p>24.3.2 describes <code class=\"code\">struct iterator</code>, which didn't exist in the\n-   original HP STL implementation (the language wasn't rich enough at the\n-   time).  For backwards compatibility, base classes are provided which\n-   declare the same nested typedefs:\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>input_iterator</p></li><li><p>output_iterator</p></li><li><p>forward_iterator</p></li><li><p>bidirectional_iterator</p></li><li><p>random_access_iterator</p></li></ul></div><p>24.3.4 describes iterator operation <code class=\"code\">distance</code>, which takes\n-   two iterators and returns a result.  It is extended by another signature\n-   which takes two iterators and a reference to a result.  The result is\n-   modified, and the function returns nothing.\n-</p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch36.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch38.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a036.\u00a0Numerics\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a038.\u00a0Input and Output</td></tr></table></div></body></html>"}, {"sha": "84c110d3ad5c379dfb4d674eae130b66bc3802d4", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch38.html", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch38.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch38.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch38.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,48 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a038.\u00a0Input and Output</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch37.html\" title=\"Chapter\u00a037.\u00a0Iterators\" /><link rel=\"next\" href=\"bk01pt12ch39.html\" title=\"Chapter\u00a039.\u00a0Demangling\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a038.\u00a0Input and Output</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch37.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch39.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.io\"></a>Chapter\u00a038.\u00a0Input and Output</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"bk01pt12ch38.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></div><p>\n-    Extensions allowing <code class=\"code\">filebuf</code>s to be constructed from\n-    \"C\" types like  FILE*s and file descriptors.\n-  </p><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.io.filebuf_derived\"></a>Derived filebufs</h2></div></div></div><p>The v2 library included non-standard extensions to construct\n-      <code class=\"code\">std::filebuf</code>s from C stdio types such as\n-      <code class=\"code\">FILE*</code>s and POSIX file descriptors.\n-      Today the recommended way to use stdio types with libstdc++\n-      IOStreams is via the <code class=\"code\">stdio_filebuf</code> class (see below),\n-      but earlier releases provided slightly different mechanisms.\n-   </p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>3.0.x <code class=\"code\">filebuf</code>s have another ctor with this signature:\n-        <code class=\"code\">basic_filebuf(__c_file_type*, ios_base::openmode, int_type);\n-\t</code>\n-         This comes in very handy in a number of places, such as\n-         attaching Unix sockets, pipes, and anything else which uses file\n-         descriptors, into the IOStream buffering classes.  The three\n-         arguments are as follows:\n-         </p><div class=\"itemizedlist\"><ul type=\"circle\"><li><p><code class=\"code\">__c_file_type*      F   </code>\n-              // the __c_file_type typedef usually boils down to stdio's FILE\n-          </p></li><li><p><code class=\"code\">ios_base::openmode  M   </code>\n-              // same as all the other uses of openmode\n-          </p></li><li><p><code class=\"code\">int_type            B   </code>\n-              // buffer size, defaults to BUFSIZ if not specified\n-          </p></li></ul></div><p>\n-         For those wanting to use file descriptors instead of FILE*'s, I\n-         invite you to contemplate the mysteries of C's <code class=\"code\">fdopen()</code>.\n-     </p></li><li><p>In library snapshot 3.0.95 and later, <code class=\"code\">filebuf</code>s bring\n-         back an old extension:  the <code class=\"code\">fd()</code> member function.  The\n-         integer returned from this function can be used for whatever file\n-         descriptors can be used for on your platform.  Naturally, the\n-         library cannot track what you do on your own with a file descriptor,\n-         so if you perform any I/O directly, don't expect the library to be\n-         aware of it.\n-     </p></li><li><p>Beginning with 3.1, the extra <code class=\"code\">filebuf</code> constructor and\n-         the <code class=\"code\">fd()</code> function were removed from the standard\n-         filebuf.  Instead, <code class=\"code\">&lt;ext/stdio_filebuf.h&gt;</code> contains\n-         a derived class called\n-         <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/class____gnu__cxx_1_1stdio__filebuf.html\" target=\"_top\"><code class=\"code\">__gnu_cxx::stdio_filebuf</code></a>.\n-         This class can be constructed from a C <code class=\"code\">FILE*</code> or a file\n-         descriptor, and provides the <code class=\"code\">fd()</code> function.\n-     </p></li></ul></div><p>If you want to access a <code class=\"code\">filebuf</code>'s file descriptor to\n-      implement file locking (e.g. using the <code class=\"code\">fcntl()</code> system\n-      call) then you might be interested in Henry Suter's\n-      <a class=\"ulink\" href=\"http://suter.home.cern.ch/suter/RWLock.html\" target=\"_top\">RWLock</a>\n-      class.\n-   </p><p>\n-    </p></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch37.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch39.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a037.\u00a0Iterators\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a039.\u00a0Demangling</td></tr></table></div></body></html>"}, {"sha": "82a673f19ab651c62b7766317e7199306104368b", "filename": "libstdc++-v3/doc/html/manual/bk01pt12ch39.html", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch39.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch39.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbk01pt12ch39.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,71 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a039.\u00a0Demangling</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch38.html\" title=\"Chapter\u00a038.\u00a0Input and Output\" /><link rel=\"next\" href=\"concurrency.html\" title=\"Chapter\u00a040.\u00a0Concurrency\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a039.\u00a0Demangling</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch38.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"concurrency.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.demangle\"></a>Chapter\u00a039.\u00a0Demangling</h2></div></div></div><p>\n-    Transforming C++ ABI identifiers (like RTTI symbols) into the\n-    original C++ source identifiers is called\n-    \u201c<span class=\"quote\">demangling.</span>\u201d\n-  </p><p>\n-    If you have read the <a class=\"ulink\" href=\"http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaceabi.html\" target=\"_top\">source\n-    documentation for <code class=\"code\">namespace abi</code></a> then you are\n-    aware of the cross-vendor C++ ABI in use by GCC.  One of the\n-    exposed functions is used for demangling,\n-    <code class=\"code\">abi::__cxa_demangle</code>.\n-  </p><p>\n-    In programs like <span class=\"command\"><strong>c++filt</strong></span>, the linker, and other tools\n-    have the ability to decode C++ ABI names, and now so can you.\n-  </p><p>\n-    (The function itself might use different demanglers, but that's the\n-    whole point of abstract interfaces.  If we change the implementation,\n-    you won't notice.)\n-  </p><p>\n-    Probably the only times you'll be interested in demangling at runtime\n-    are when you're seeing <code class=\"code\">typeid</code> strings in RTTI, or when\n-    you're handling the runtime-support exception classes.  For example:\n-  </p><pre class=\"programlisting\">\n-#include &lt;exception&gt;\n-#include &lt;iostream&gt;\n-#include &lt;cxxabi.h&gt;\n-\n-struct empty { };\n-\n-template &lt;typename T, int N&gt;\n-  struct bar { };\n-\n-\n-int main()\n-{\n-  int     status;\n-  char   *realname;\n-\n-  // exception classes not in &lt;stdexcept&gt;, thrown by the implementation\n-  // instead of the user\n-  std::bad_exception  e;\n-  realname = abi::__cxa_demangle(e.what(), 0, 0, &amp;status);\n-  std::cout &lt;&lt; e.what() &lt;&lt; \"\\t=&gt; \" &lt;&lt; realname &lt;&lt; \"\\t: \" &lt;&lt; status &lt;&lt; '\\n';\n-  free(realname);\n-\n-\n-  // typeid\n-  bar&lt;empty,17&gt;          u;\n-  const std::type_info  &amp;ti = typeid(u);\n-\n-  realname = abi::__cxa_demangle(ti.name(), 0, 0, &amp;status);\n-  std::cout &lt;&lt; ti.name() &lt;&lt; \"\\t=&gt; \" &lt;&lt; realname &lt;&lt; \"\\t: \" &lt;&lt; status &lt;&lt; '\\n';\n-  free(realname);\n-\n-  return 0;\n-}\n-   </pre><p>\n-     This prints\n-   </p><pre class=\"screen\">\n-   <code class=\"computeroutput\">\n-      St13bad_exception       =&gt; std::bad_exception   : 0\n-      3barI5emptyLi17EE       =&gt; bar&lt;empty, 17&gt;       : 0 \n-   </code>\n-   </pre><p>\n-     The demangler interface is described in the source documentation\n-     linked to above.  It is actually written in C, so you don't need to\n-     be writing C++ in order to demangle C++.  (That also means we have to\n-     use crummy memory management facilities, so don't forget to free()\n-     the returned char array.)\n-   </p></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch38.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"concurrency.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a038.\u00a0Input and Output\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Chapter\u00a040.\u00a0Concurrency</td></tr></table></div></body></html>"}, {"sha": "b201c76393214f0bac980d362c197e6eb890e37c", "filename": "libstdc++-v3/doc/html/manual/concurrency.html", "status": "removed", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconcurrency.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26113de4fcd7d569cc72274cd29dc36cfd560267/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconcurrency.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fconcurrency.html?ref=26113de4fcd7d569cc72274cd29dc36cfd560267", "patch": "@@ -1,88 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a040.\u00a0Concurrency</title><meta name=\"generator\" content=\"DocBook XSL Stylesheets V1.74.0\" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><meta name=\"keywords\" content=\"&#10;      ISO C++&#10;    , &#10;      library&#10;    \" /><link rel=\"home\" href=\"../spine.html\" title=\"The GNU C++ Library Documentation\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0XII.\u00a0Extensions\" /><link rel=\"prev\" href=\"bk01pt12ch39.html\" title=\"Chapter\u00a039.\u00a0Demangling\" /><link rel=\"next\" href=\"bk01pt12ch40s02.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a040.\u00a0Concurrency</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch39.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0XII.\u00a0Extensions</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch40s02.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.concurrency\"></a>Chapter\u00a040.\u00a0Concurrency</h2></div></div></div><div class=\"toc\"><p><b>Table of Contents</b></p><dl><dt><span class=\"sect1\"><a href=\"concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"sect2\"><a href=\"concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch40s02.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"sect2\"><a href=\"bk01pt12ch40s02.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"sect2\"><a href=\"bk01pt12ch40s02.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"sect1\"><a href=\"bk01pt12ch40s03.html\">Use</a></span></dt></dl></div><div class=\"sect1\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.design\"></a>Design</h2></div></div></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.threads\"></a>Interface to Locks and Mutexes</h3></div></div></div><p>The file &lt;ext/concurrence.h&gt; contains all the higher-level\n-constructs for playing with threads. In contrast to the atomics layer,\n-the concurrence layer consists largely of types. All types are defined within <code class=\"code\">namespace __gnu_cxx</code>.\n-</p><p>\n-These types can be used in a portable manner, regardless of the\n-specific environment. They are carefully designed to provide optimum\n-efficiency and speed, abstracting out underlying thread calls and\n-accesses when compiling for single-threaded situations (even on hosts\n-that support multiple threads.)\n-</p><p>The enumerated type <code class=\"code\">_Lock_policy</code> details the set of\n-available locking\n-policies: <code class=\"code\">_S_single</code>, <code class=\"code\">_S_mutex</code>,\n-and <code class=\"code\">_S_atomic</code>.\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p><code class=\"code\">_S_single</code></p><p>Indicates single-threaded code that does not need locking.\n-</p></li><li><p><code class=\"code\">_S_mutex</code></p><p>Indicates multi-threaded code using thread-layer abstractions.\n-</p></li><li><p><code class=\"code\">_S_atomic</code></p><p>Indicates multi-threaded code using atomic operations.\n-</p></li></ul></div><p>The compile-time constant <code class=\"code\">__default_lock_policy</code> is set\n-to one of the three values above, depending on characteristics of the\n-host environment and the current compilation flags.\n-</p><p>Two more datatypes make up the rest of the\n-interface: <code class=\"code\">__mutex</code>, and <code class=\"code\">__scoped_lock</code>.\n-</p><p>\n-</p><p>The scoped lock idiom is well-discussed within the C++\n-community. This version takes a <code class=\"code\">__mutex</code> reference, and\n-locks it during construction of <code class=\"code\">__scoped_locke</code> and\n-unlocks it during destruction. This is an efficient way of locking\n-critical sections, while retaining exception-safety.\n-</p></div><div class=\"sect2\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.atomics\"></a>Interface to Atomic Functions</h3></div></div></div><p>\n-Two functions and one type form the base of atomic support. \n-</p><p>The type <code class=\"code\">_Atomic_word</code> is a signed integral type\n-supporting atomic operations.\n-</p><p>\n-The two functions functions are:\n-</p><pre class=\"programlisting\">\n-_Atomic_word\n-__exchange_and_add_dispatch(volatile _Atomic_word*, int);\n-\n-void\n-__atomic_add_dispatch(volatile _Atomic_word*, int);\n-</pre><p>Both of these functions are declared in the header file\n-&lt;ext/atomicity.h&gt;, and are in <code class=\"code\">namespace __gnu_cxx</code>.\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p>\n-<code class=\"code\">\n-__exchange_and_add_dispatch\n-</code>\n-</p><p>Adds the second argument's value to the first argument. Returns the old value.\n-</p></li><li><p>\n-<code class=\"code\">\n-__atomic_add_dispatch\n-</code>\n-</p><p>Adds the second argument's value to the first argument. Has no return value.\n-</p></li></ul></div><p>\n-These functions forward to one of several specialized helper\n-functions, depending on the circumstances. For instance, \n-</p><p>\n-<code class=\"code\">\n-__exchange_and_add_dispatch\n-</code>\n-</p><p>\n-Calls through to either of:\n-</p><div class=\"itemizedlist\"><ul type=\"disc\"><li><p><code class=\"code\">__exchange_and_add</code>\n-</p><p>Multi-thread version. Inlined if compiler-generated builtin atomics\n-can be used, otherwise resolved at link time to a non-builtin code\n-sequence.\n-</p></li><li><p><code class=\"code\">__exchange_and_add_single</code> \n-</p><p>Single threaded version. Inlined.</p></li></ul></div><p>However, only <code class=\"code\">__exchange_and_add_dispatch</code>\n-and <code class=\"code\">__atomic_add_dispatch</code> should be used. These functions\n-can be used in a portable manner, regardless of the specific\n-environment. They are carefully designed to provide optimum efficiency\n-and speed, abstracting out atomic accesses when they are not required\n-(even on hosts that support compiler intrinsics for atomic\n-operations.)\n-</p><p>\n-In addition, there are two macros\n-</p><p>\n-<code class=\"code\">\n-_GLIBCXX_READ_MEM_BARRIER \n-</code>\n-</p><p>\n-<code class=\"code\">\n-_GLIBCXX_WRITE_MEM_BARRIER \n-</code>\n-</p><p>\n-Which expand to the appropriate write and read barrier required by the\n-host hardware and operating system.\n-</p></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"bk01pt12ch39.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"extensions.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"bk01pt12ch40s02.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Chapter\u00a039.\u00a0Demangling\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../spine.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Implementation</td></tr></table></div></body></html>"}]}