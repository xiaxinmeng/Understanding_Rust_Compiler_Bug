{"sha": "adcfd4893cd6cc75b8a2467509324f940a31f2fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjZmQ0ODkzY2Q2Y2M3NWI4YTI0Njc1MDkzMjRmOTQwYTMxZjJmYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-10-12T16:17:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-10-12T16:17:24Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r203489", "tree": {"sha": "2f641aa27655f7496110a77296854e049be68353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f641aa27655f7496110a77296854e049be68353"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adcfd4893cd6cc75b8a2467509324f940a31f2fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcfd4893cd6cc75b8a2467509324f940a31f2fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adcfd4893cd6cc75b8a2467509324f940a31f2fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcfd4893cd6cc75b8a2467509324f940a31f2fa/comments", "author": null, "committer": null, "parents": [{"sha": "37d1c5db3a195a239888866c8ce089b4845fe100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37d1c5db3a195a239888866c8ce089b4845fe100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37d1c5db3a195a239888866c8ce089b4845fe100"}], "stats": {"total": 77, "additions": 34, "deletions": 43}, "files": [{"sha": "f4be2915d19adba617593c5fec5a8e4ad81fa547", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 35, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcfd4893cd6cc75b8a2467509324f940a31f2fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcfd4893cd6cc75b8a2467509324f940a31f2fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=adcfd4893cd6cc75b8a2467509324f940a31f2fa", "patch": "@@ -19,8 +19,8 @@\n 2013-10-11  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/58640\n-\t* tree-ssa-threadupdate.c (mark_threaded_blocks): Truncate jump threading\n-\tpaths that cross over two loop entry points.\n+\t* tree-ssa-threadupdate.c (mark_threaded_blocks): Truncate jump\n+\tthreading paths that cross over two loop entry points.\n \n 2013-10-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n@@ -350,16 +350,14 @@\n \t* gimple.c: GIMPLE statements have subcodes, not sub-codes.\n \t* gimple.h: Likewise.\n \n-\t* doc/generic.texi (OpenMP): OMP_CLAUSE_* are subcodes, not\n-\tsub-codes.\n+\t* doc/generic.texi (OpenMP): OMP_CLAUSE_* are subcodes, not sub-codes.\n \n \t* doc/generic.texi (Adding new DECL node types): Explain *_CHECK\n \tmacros.\n \n \t* doc/gimple.texi (is_gimple_omp): Move into the correct section.\n \n-\t* acinclude.m4 (gcc_GAS_FLAGS): Add more gcc_cv_as_flags\n-\toverrides.\n+\t* acinclude.m4 (gcc_GAS_FLAGS): Add more gcc_cv_as_flags overrides.\n \t* configure: Regenerate.\n \n 2013-10-11  Jakub Jelinek  <jakub@redhat.com>\n@@ -406,8 +404,7 @@\n \t(scan_sharing_clauses): Ignore shared clause on teams construct.\n \tHandle OMP_CLAUSE__LOOPTEMP_ and new OpenMP 4.0 clauses.\n \t(create_omp_child_function): If inside target or declare target\n-\tconstructs, set \"omp declare target\" attribute on the child\n-\tfunction.\n+\tconstructs, set \"omp declare target\" attribute on the child function.\n \t(find_combined_for): New function.\n \t(scan_omp_parallel): Handle combined loops.\n \t(scan_omp_target, scan_omp_teams): New functions.\n@@ -416,8 +413,7 @@\n \t(scan_omp_1_stmt): Call check_omp_nesting_restrictions also on\n \tselected builtin calls.  Handle GIMPLE_OMP_TASKGROUP,\n \tGIMPLE_OMP_TARGET, GIMPLE_OMP_TEAMS.\n-\t(build_omp_barrier): Add lhs argument, return gimple rather than\n-\ttree.\n+\t(build_omp_barrier): Add lhs argument, return gimple rather than tree.\n \t(omp_clause_aligned_alignment): New function.\n \t(lower_rec_simd_input_clauses): Only call SET_DECL_VALUE_EXPR\n \ton decls.\n@@ -592,8 +588,7 @@\n \tgimple_omp_teams_set_clauses): New inlines.\n \t(CASE_GIMPLE_OMP): Add GIMPLE_OMP_TARGET, GIMPLE_OMP_TEAMS\n \tand GIMPLE_OMP_TASKGROUP.\n-\t* tree-core.h (enum omp_clause_code): Add new OpenMP 4.0 clause\n-\tcodes.\n+\t* tree-core.h (enum omp_clause_code): Add new OpenMP 4.0 clause codes.\n \t(enum omp_clause_depend_kind, enum omp_clause_map_kind,\n \tenum omp_clause_proc_bind_kind): New.\n \t(union omp_clause_subcode): Add depend_kind, map_kind and\n@@ -648,8 +643,8 @@\n \n 2013-10-10  Andrew MacLeod  <amacleod@redhat.com>\n \n-\t* gimplify.c: Include expr.h and tm_p.h for targets with special va-arg\n-\tpadding requirements.\n+\t* gimplify.c: Include expr.h and tm_p.h for targets with special\n+\tva-arg padding requirements.\n \n 2013-10-10  Andrew MacLeod  <amacleod@redhat.com>\n \n@@ -694,7 +689,7 @@\n \n 2013-10-09  Andrew MacLeod  <amacleod@redhat.com>\n \n-\t* loop-doloop.c (doloop_modify, doloop_optimize): Use \n+\t* loop-doloop.c (doloop_modify, doloop_optimize): Use\n \tget_max_loop_iterations.\n \n 2013-10-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n@@ -716,7 +711,7 @@\n \t* gimple-pretty-print.h (gimple_dump_bb): Add prototype.\n \t* graphite.c (graphite_transform_loops): Make static.\n \t(graphite_transforms, gate_graphite_transforms, pass_data_graphite,\n-\tmake_pass_graphite, pass_data_graphite_transforms, \n+\tmake_pass_graphite, pass_data_graphite_transforms,\n \tmake_pass_graphite_transforms): Relocate here from tree-ssa-loop.c.\n \t* ipa-pure-const.c (warn_function_noreturn): Make static.\n \t(execute_warn_function_noreturn, gate_warn_function_noreturn,\n@@ -727,8 +722,8 @@\n \t(execute_warn_function_noreturn, gate_warn_function_noreturn,\n \tclass pass_warn_function_noreturn, make_pass_warn_function_noreturn):\n \tMove to ipa-pure-const.c.\n-\t(execute_fixup_cfg, class pass_fixup_cfg, make_pass_fixup_cfg): Relocate\n-\tfrom tree-optimize.c.\n+\t(execute_fixup_cfg, class pass_fixup_cfg, make_pass_fixup_cfg):\n+\tRelocate from tree-optimize.c.\n \t* tree-optimize.c (execute_fixup_cfg, class pass_fixup_cfg,\n \tmake_pass_fixup_cfg): Move to tree-cfg.c.\n \t* tree-chrec.h: (enum ev_direction): Relocate here from tree-flow.h.\n@@ -744,7 +739,7 @@\n \t* tree-predcom.c (run_tree_predictive_commoning,\n \tgate_tree_predictive_commoning, pass_data_predcom, make_pass_predcom):\n \tRelocate here from tree-ssa-loop.c.\n-\t* tree-ssa-dom.c (tree_ssa_dominator_optimize) Don't call \n+\t* tree-ssa-dom.c (tree_ssa_dominator_optimize) Don't call\n \tssa_name_values.release ().\n \t* tree-ssa-threadedge.h: New File.  Relocate prototypes here.\n \t(ssa_name_values): Relocate from tree-flow.h.\n@@ -776,7 +771,8 @@\n \t(struct int_tree_map): Relocate from tree-flow.h.\n \t* tree-sra.c (contains_view_convert_expr_p): Relocate from\n \ttree-flow-inline.h and make static.\n-\t* tree-ssa-alias.h (ranges_overlap_p): Relocate from tree-flow-inline.h.\n+\t* tree-ssa-alias.h (ranges_overlap_p): Relocate from\n+\ttree-flow-inline.h.\n \t* tree-ssa-operands.c (gimple_ssa_operands): Relocate from\n \ttree-flow-inline.h and make static.\n \t* tree.h (is_global_var, may_be_aliased): Relocate from\n@@ -802,9 +798,9 @@\n \t(lsm_tmp_name_add, gen_lsm_tmp_name, get_lsm_tmp_name): Move to\n \ttree-ssa-loop.c.\n \t(execute_sm_if_changed_flag_set): Change get_lsm_tmp_name call.\n-\t(tree_ssa_loop_im, gate_tree_ssa_loop_im, pass_data_lim, make_pass_lim):\n-\tRelocate here from tree-ssa-loop.c.\n-\t* tree-ssa-loop-ivcanon.c (tree_num_loop_insns): Move to \n+\t(tree_ssa_loop_im, gate_tree_ssa_loop_im, pass_data_lim,\n+\tmake_pass_lim): Relocate here from tree-ssa-loop.c.\n+\t* tree-ssa-loop-ivcanon.c (tree_num_loop_insns): Move to\n \ttree-ssa-loop.c.\n \t(loop_edge_to_cancel, unloop_loops): Make static.\n \t(tree_ssa_loop_ivcanon, gate_tree_ssa_loop_ivcanon, pass_data_iv_canon,\n@@ -852,10 +848,10 @@\n \t* tree-scalar-evolution.h (simple_iv): Don't use affive_iv typedef.\n \t* cfgloop.c (record_niter_bound, estimated_loop_iterations_int,\n \tmax_stmt_executions_int): Move from tree-ssa-loop-niter.c.\n-\t(get_estimated_loop_iterations): Factor out accessor from \n+\t(get_estimated_loop_iterations): Factor out accessor from\n \testimated_loop_iterations in tree-ssa-loop-niter.c.\n-\t(get_max_loop_iterations): Factor out accessor from _max_loop_iterations\n-\tin tree-ssa-niter.c.\n+\t(get_max_loop_iterations): Factor out accessor from\n+\t_max_loop_iterations in tree-ssa-niter.c.\n \t* loop-unroll.c (decide_unroll_constant_iterations,\n \tdecide_unroll_runtime_iterations, decide_peel_simple,\n \tdecide_unroll_stupid): Use new get_* accessors.\n@@ -930,9 +926,8 @@\n \t(cfun_save_arg_fprs_p, cfun_gpr_save_slot): New macros.\n \t(s390_reg_clobbered_rtx, s390_regs_ever_clobbered): Change type of\n \tregs_ever_clobbered to char*.\n-\t(s390_regs_ever_clobbered): Check crtl->saves_all_registers\n-\tinstead of cfun->has_nonlocal_label.  Ignore frame related restore\n-\tINSNs.\n+\t(s390_regs_ever_clobbered): Check crtl->saves_all_registers instead\n+\tof cfun->has_nonlocal_label.  Ignore frame related restore INSNs.\n \t(s390_register_info): Enable FPR save slots.  Move/Copy some\n \tfunctionality into ...\n \t(s390_register_info_gprtofpr, s390_register_info_stdarg_fpr)\n@@ -948,11 +943,9 @@\n \t(TARGET_HARD_REGNO_SCRATCH_OK): Define target hook.\n \t(s390_initial_elimination_offset): Change offset calculation of\n \tthe return address pointer.\n-\t(save_gprs): Deal with only r6 being saved from the call-saved\n-\tregs.\n+\t(save_gprs): Deal with only r6 being saved from the call-saved regs.\n \t(restore_gprs): Set frame related flag.\n-\t(s390_save_gprs_to_fprs, s390_restore_gprs_from_fprs): New\n-\tfunctions.\n+\t(s390_save_gprs_to_fprs, s390_restore_gprs_from_fprs): New functions.\n \t(s390_emit_prologue): Call s390_register_info instead of\n \ts390_update_frame_layout.  Call s390_save_gprs_to_fprs.\n \t(s390_emit_epilogue): Call s390_restore_gprs_from_fprs.\n@@ -1068,13 +1061,14 @@\n \n \t* tree-ssa-threadedge.c: Fix some trailing whitespace problems.\n \n-\t* tree-ssa-threadedge.c (thread_through_normal_block): Broken out of ...\n+\t* tree-ssa-threadedge.c (thread_through_normal_block): Broken\n+\tout of ...\n \t(thread_across_edge): Here.  Call it.\n \n 2013-10-04  Cary Coutant  <ccoutant@google.com>\n \n \t* dwarf2out.c (dw_sra_loc_expr): Release addr_table entries when\n-        discarding a location list expression (or a piece of one).\n+\tdiscarding a location list expression (or a piece of one).\n \n 2013-10-03  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "f0d74ab460635f68a5bd02eb8c50730a8b37d392", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcfd4893cd6cc75b8a2467509324f940a31f2fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcfd4893cd6cc75b8a2467509324f940a31f2fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=adcfd4893cd6cc75b8a2467509324f940a31f2fa", "patch": "@@ -9,8 +9,7 @@\n \n 2013-10-11  Brooks Moses  <bmoses@google.com>\n \n-\t* g++.dg/ext/altivec-7.C: Check for standard vector-type name\n-\tmangling.\n+\t* g++.dg/ext/altivec-7.C: Check for standard vector-type name mangling.\n \n 2013-10-11  Jeff Law  <law@redhat.com>\n \n@@ -604,7 +603,7 @@\n \n 2013-09-17  Cong Hou  <congh@google.com>\n \n-\t* gcc.dg/vect/vect-reduc-dot-s16c.c: Add a test case with dot product \n+\t* gcc.dg/vect/vect-reduc-dot-s16c.c: Add a test case with dot product\n \ton two arrays with short and int types. This should not be recognized\n \tas a dot product pattern.\n \n@@ -631,8 +630,7 @@\n 2013-09-17  Nick Clifton  <nickc@redhat.com>\n \n \t* lib/target-supports.exp (check_effective_target_trampolines):\n-\tAdd MSP430 to the list of targets that do not support\n-\ttrampolines.\n+\tAdd MSP430 to the list of targets that do not support trampolines.\n \t(check_profiling_available): Add MSP430 to the list of targets\n \tthat do not support profiling.\n \t(check_effective_target_tls_runtime): Add MSP430 to the list of\n@@ -716,7 +714,7 @@\n \n 2013-09-13  Kai Tietz  <ktietz@redhat.com>\n \n-\tgcc.target/i386/pr57848.c: New file.\n+\t* gcc.target/i386/pr57848.c: New file.\n \n 2013-09-13  Christian Bruel  <christian.bruel@st.com>\n \n@@ -734,8 +732,7 @@\n \n 2013-09-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n-\t* g++.dg/template/pseudodtor2.C: Add column number to dg-error\n-\tstrings.\n+\t* g++.dg/template/pseudodtor2.C: Add column number to dg-error strings.\n \t* g++.dg/template/pseudodtor3.C: Likewise.\n \n 2013-09-12  Richard Biener  <rguenther@suse.de>"}]}