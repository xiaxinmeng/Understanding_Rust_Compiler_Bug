{"sha": "30471e01ada243667a39c66be639915e62535e87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA0NzFlMDFhZGEyNDM2NjdhMzljNjZiZTYzOTkxNWU2MjUzNWU4Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-01-07T17:08:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-01-07T17:08:20Z"}, "message": "* cp-demangle.c (d_expression): Remove mangling for zero-op casts.\n\nFrom-SVN: r143161", "tree": {"sha": "b1ad47139da9a0f89f1abfa9ca8aa2fdaee798cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1ad47139da9a0f89f1abfa9ca8aa2fdaee798cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30471e01ada243667a39c66be639915e62535e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30471e01ada243667a39c66be639915e62535e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30471e01ada243667a39c66be639915e62535e87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30471e01ada243667a39c66be639915e62535e87/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a11476684547180634a11896c3b91a9970ea133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a11476684547180634a11896c3b91a9970ea133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a11476684547180634a11896c3b91a9970ea133"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "b9cb1999177f5dce29d961b7181e8077880dc63b", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30471e01ada243667a39c66be639915e62535e87/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30471e01ada243667a39c66be639915e62535e87/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=30471e01ada243667a39c66be639915e62535e87", "patch": "@@ -1,3 +1,7 @@\n+2009-01-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-demangle.c (d_expression): Remove mangling for zero-op casts.\n+\n 2009-01-06  Ben Elliston  <bje@au.ibm.com>\n \n \t* cp-demangle.c (cplus_demangle_type): Return NULL if the"}, {"sha": "0b4e05c6e5c044b1e655aaafc62ad47ed928cdf7", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30471e01ada243667a39c66be639915e62535e87/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30471e01ada243667a39c66be639915e62535e87/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=30471e01ada243667a39c66be639915e62535e87", "patch": "@@ -2612,12 +2612,7 @@ d_expression (struct d_info *di)\n \t  args = op->u.s_extended_operator.args;\n \t  break;\n \tcase DEMANGLE_COMPONENT_CAST:\n-\t  if (d_peek_char (di) == 'v')\n-\t    /* T() encoded as an operand of void.  */\n-\t    return d_make_comp (di, DEMANGLE_COMPONENT_UNARY, op,\n-\t\t\t\tcplus_demangle_type (di));\n-\t  else\n-\t    args = 1;\n+\t  args = 1;\n \t  break;\n \t}\n \n@@ -3810,12 +3805,7 @@ d_print_comp (struct d_print_info *dpi,\n \t  d_print_cast (dpi, d_left (dc));\n \t  d_append_char (dpi, ')');\n \t}\n-      if (d_left (dc)->type == DEMANGLE_COMPONENT_CAST\n-\t  && d_right (dc)->type == DEMANGLE_COMPONENT_BUILTIN_TYPE)\n-\t/* type() -- FIXME what about type(multiple,args) */\n-\td_append_string (dpi, \"()\");\n-      else\n-\td_print_subexpr (dpi, d_right (dc));\n+      d_print_subexpr (dpi, d_right (dc));\n       return;\n \n     case DEMANGLE_COMPONENT_BINARY:"}]}