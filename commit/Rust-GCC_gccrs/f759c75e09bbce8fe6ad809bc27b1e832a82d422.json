{"sha": "f759c75e09bbce8fe6ad809bc27b1e832a82d422", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc1OWM3NWUwOWJiY2U4ZmU2YWQ4MDliYzI3YjFlODMyYTgyZDQyMg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-11-01T22:24:52Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-11-01T22:24:52Z"}, "message": "re PR tree-optimization/18232 (../../gcc/gcc/tree-ssa-operands.c:1624: warning: 'bi$ptr2' is used uninitialized in this function)\n\n2004-11-01  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR bootstrap/18232\n        * bitmap.h (bmp_iter_end_p): Take a const pointer instead of a struct.\n        (EXECUTE_IF_SET_IN_BITMAP): Update call to bmp_iter_end_p.\n        (EXECUTE_IF_AND_COMPL_IN_BITMAP): Likewise.\n        (EXECUTE_IF_AND_IN_BITMAP): Likewise.\n\nFrom-SVN: r89961", "tree": {"sha": "285921aa76c21798d83e79172ba8fa94b3bcbcdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/285921aa76c21798d83e79172ba8fa94b3bcbcdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f759c75e09bbce8fe6ad809bc27b1e832a82d422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f759c75e09bbce8fe6ad809bc27b1e832a82d422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f759c75e09bbce8fe6ad809bc27b1e832a82d422", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f759c75e09bbce8fe6ad809bc27b1e832a82d422/comments", "author": null, "committer": null, "parents": [{"sha": "ca5b80f372eaa171a61ed011d94a1ebf05493e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5b80f372eaa171a61ed011d94a1ebf05493e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5b80f372eaa171a61ed011d94a1ebf05493e90"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "07be43fdba5058bd664b64fb21fb355dd5c8c650", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f759c75e09bbce8fe6ad809bc27b1e832a82d422/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f759c75e09bbce8fe6ad809bc27b1e832a82d422/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f759c75e09bbce8fe6ad809bc27b1e832a82d422", "patch": "@@ -1,3 +1,11 @@\n+2004-11-01  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR bootstrap/18232\n+\t* bitmap.h (bmp_iter_end_p): Take a const pointer instead of a struct.\n+\t(EXECUTE_IF_SET_IN_BITMAP): Update call to bmp_iter_end_p.\n+\t(EXECUTE_IF_AND_COMPL_IN_BITMAP): Likewise.\n+\t(EXECUTE_IF_AND_IN_BITMAP): Likewise.\n+\n 2004-11-01  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/18239"}, {"sha": "67eb9d2ef47fd0e1e17a0c543335daa734c48335", "filename": "gcc/bitmap.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f759c75e09bbce8fe6ad809bc27b1e832a82d422/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f759c75e09bbce8fe6ad809bc27b1e832a82d422/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=f759c75e09bbce8fe6ad809bc27b1e832a82d422", "patch": "@@ -298,9 +298,9 @@ bmp_iter_single_init (bitmap_iterator *bi, bitmap bmp, unsigned min)\n    were processed.  */\n \n static inline bool\n-bmp_iter_end_p (bitmap_iterator bi)\n+bmp_iter_end_p (const bitmap_iterator *bi)\n {\n-  return bi.ptr1 == NULL;\n+  return bi->ptr1 == NULL;\n }\n \n /* Moves the iterator BI to the next bit of bitmap and returns the bit\n@@ -319,7 +319,7 @@ bmp_iter_single_next (bitmap_iterator *bi)\n \n #define EXECUTE_IF_SET_IN_BITMAP(BITMAP, MIN, BITNUM, ITER)\t\t\\\n   for ((BITNUM) = bmp_iter_single_init (&(ITER), (BITMAP), (MIN));\t\\\n-       !bmp_iter_end_p (ITER);\t\t\t\t\t\\\n+       !bmp_iter_end_p (&(ITER));\t\t\t\t\t\\\n        (BITNUM) = bmp_iter_single_next (&(ITER)))\n \n /* Moves the iterator BI to the first set bit on or after the current\n@@ -448,7 +448,7 @@ bmp_iter_and_not_next (bitmap_iterator *bi)\n \n #define EXECUTE_IF_AND_COMPL_IN_BITMAP(BMP1, BMP2, MIN, BITNUM, ITER)\t\\\n   for ((BITNUM) = bmp_iter_and_not_init (&(ITER), (BMP1), (BMP2), (MIN)); \\\n-       !bmp_iter_end_p (ITER);\t\t\t\t\t\t\\\n+       !bmp_iter_end_p (&(ITER));\t\t\t\t\t\t\\\n        (BITNUM) = bmp_iter_and_not_next (&(ITER)))\n \n /* Moves the iterator BI to the first set bit on or after the current\n@@ -592,7 +592,7 @@ bmp_iter_and_next (bitmap_iterator *bi)\n \n #define EXECUTE_IF_AND_IN_BITMAP(BMP1, BMP2, MIN, BITNUM, ITER)\t\t\\\n   for ((BITNUM) = bmp_iter_and_init (&(ITER), (BMP1), (BMP2), (MIN));\t\\\n-       !bmp_iter_end_p (ITER);\t\t\t\t\t\t\\\n+       !bmp_iter_end_p (&(ITER));\t\t\t\t\t\t\\\n        (BITNUM) = bmp_iter_and_next (&(ITER)))\n \n #endif /* GCC_BITMAP_H */"}]}