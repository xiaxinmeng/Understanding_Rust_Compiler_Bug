{"sha": "a29077daa7c28916ddbf4d4f7cb5721a3d1365ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI5MDc3ZGFhN2MyODkxNmRkYmY0ZDRmN2NiNTcyMWEzZDEzNjVlYQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-01-08T21:51:56Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-01-08T21:51:56Z"}, "message": "rs6000.c (legitimate_lo_sum_address_p): lo_sum addresses are legitimate on Darwin even when flag_pic.\n\n\t* config/rs6000/rs6000.c (legitimate_lo_sum_address_p): lo_sum\n\taddresses are legitimate on Darwin even when flag_pic.\n\t(rs6000_legitimize_reload_address) [TARGET_MACHO]: Don't create\n\tnon-offsettable addresses for loads of TFmode constants.\n\nFrom-SVN: r75558", "tree": {"sha": "6196ccab96254b8d8d28326262d0aefb0362a1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6196ccab96254b8d8d28326262d0aefb0362a1de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a29077daa7c28916ddbf4d4f7cb5721a3d1365ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a29077daa7c28916ddbf4d4f7cb5721a3d1365ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a29077daa7c28916ddbf4d4f7cb5721a3d1365ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a29077daa7c28916ddbf4d4f7cb5721a3d1365ea/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06fe3d7df20f8da489987f23d298fae98fd6194c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06fe3d7df20f8da489987f23d298fae98fd6194c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06fe3d7df20f8da489987f23d298fae98fd6194c"}], "stats": {"total": 55, "additions": 28, "deletions": 27}, "files": [{"sha": "6fa702558570f95f246bf63aca73680ee15b85b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a29077daa7c28916ddbf4d4f7cb5721a3d1365ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a29077daa7c28916ddbf4d4f7cb5721a3d1365ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a29077daa7c28916ddbf4d4f7cb5721a3d1365ea", "patch": "@@ -1,3 +1,10 @@\n+2004-01-08  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/rs6000/rs6000.c (legitimate_lo_sum_address_p): lo_sum\n+\taddresses are legitimate on Darwin even when flag_pic.\n+\t(rs6000_legitimize_reload_address) [TARGET_MACHO]: Don't create\n+\tnon-offsettable addresses for loads of TFmode constants.\n+\n 2004-01-08  Kazuhiro Inaoka  <inaoka.kazuhiro@renesas.com>\n \n \t* config/m32r/m32r.h (ASM_OUTPUT_ALIGNED_BSS): Actually emit"}, {"sha": "3887462be6d67cf7ebc76e53f95781fd31742d44", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a29077daa7c28916ddbf4d4f7cb5721a3d1365ea/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a29077daa7c28916ddbf4d4f7cb5721a3d1365ea/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a29077daa7c28916ddbf4d4f7cb5721a3d1365ea", "patch": "@@ -2565,7 +2565,7 @@ legitimate_lo_sum_address_p (enum machine_mode mode, rtx x, int strict)\n \n   if (TARGET_ELF || TARGET_MACHO)\n     {\n-      if (DEFAULT_ABI != ABI_AIX && flag_pic)\n+      if (DEFAULT_ABI != ABI_AIX && DEFAULT_ABI != ABI_DARWIN && flag_pic)\n \treturn false;\n       if (TARGET_TOC)\n \treturn false;\n@@ -3056,36 +3056,30 @@ rs6000_legitimize_reload_address (rtx x, enum machine_mode mode,\n   if (GET_CODE (x) == SYMBOL_REF\n       && DEFAULT_ABI == ABI_DARWIN\n       && !ALTIVEC_VECTOR_MODE (mode)\n-      && flag_pic)\n-    {\n-      /* Darwin load of floating point constant.  */\n-      rtx offset = gen_rtx (CONST, Pmode,\n-\t\t    gen_rtx (MINUS, Pmode, x,\n-\t\t    gen_rtx (SYMBOL_REF, Pmode,\n-\t\t\tmachopic_function_base_name ())));\n-      x = gen_rtx (LO_SUM, GET_MODE (x),\n-\t    gen_rtx (PLUS, Pmode, pic_offset_table_rtx,\n-\t\tgen_rtx (HIGH, Pmode, offset)), offset);\n+      && (flag_pic || MACHO_DYNAMIC_NO_PIC_P)\n+      /* Don't do this for TFmode, since the result isn't offsettable.  */\n+      && mode != TFmode)\n+    {\n+      if (flag_pic)\n+\t{\n+\t  rtx offset = gen_rtx_CONST (Pmode,\n+\t\t\t gen_rtx_MINUS (Pmode, x,\n+\t\t\t   gen_rtx_SYMBOL_REF (Pmode,\n+\t\t\t     machopic_function_base_name ())));\n+\t  x = gen_rtx_LO_SUM (GET_MODE (x),\n+\t\tgen_rtx_PLUS (Pmode, pic_offset_table_rtx,\n+\t\t  gen_rtx_HIGH (Pmode, offset)), offset);\n+\t}\n+      else\n+\tx = gen_rtx_LO_SUM (GET_MODE (x),\n+              gen_rtx_HIGH (Pmode, x), x);\n+\n       push_reload (XEXP (x, 0), NULL_RTX, &XEXP (x, 0), NULL,\n-\t\tBASE_REG_CLASS, Pmode, VOIDmode, 0, 0,\n-\t\topnum, (enum reload_type)type);\n+\t\t   BASE_REG_CLASS, Pmode, VOIDmode, 0, 0,\n+\t\t   opnum, (enum reload_type)type);\n       *win = 1;\n       return x;\n     }\n-   if (GET_CODE (x) == SYMBOL_REF\n-       && DEFAULT_ABI == ABI_DARWIN\n-       && !ALTIVEC_VECTOR_MODE (mode)\n-       && MACHO_DYNAMIC_NO_PIC_P)\n-     {\n-       /* Darwin load of floating point constant.  */\n-       x = gen_rtx (LO_SUM, GET_MODE (x),\n-               gen_rtx (HIGH, Pmode, x), x);\n-       push_reload (XEXP (x, 0), NULL_RTX, &XEXP (x, 0), NULL,\n-               BASE_REG_CLASS, Pmode, VOIDmode, 0, 0,\n-               opnum, (enum reload_type)type);\n-       *win = 1;\n-       return x;\n-     }\n #endif\n   if (TARGET_TOC\n       && constant_pool_expr_p (x)"}]}