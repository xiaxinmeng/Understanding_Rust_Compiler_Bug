{"sha": "27fd9ad83b56a6cb256bae3a1c6524afb624d209", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdmZDlhZDgzYjU2YTZjYjI1NmJhZTNhMWM2NTI0YWZiNjI0ZDIwOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2015-05-12T09:20:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T09:20:50Z"}, "message": "sem_ch9.adb (Collect_Interfaces): Initialize Direct_Primitive_Operations for a tagged synchronized type...\n\n2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch9.adb (Collect_Interfaces): Initialize\n\tDirect_Primitive_Operations for a tagged synchronized type,\n\tso it can used in ASIS mode.\n\t* sem_disp.adb (Check_Dispatching_Operation): If expansion is\n\tdisabled, attach subprogram to list of Direct_Primitive_Operations\n\tof synchronized type itself, for ASIS use, because in this case\n\tCorresponding_Record_Type is not built.\n\t* einfo.ads: Indicate use of Direct_Primitive_Operations on\n\tsynchronized type.\n\nFrom-SVN: r223051", "tree": {"sha": "f574170fcc5fdc44f0efe2b011babaf336ca1431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f574170fcc5fdc44f0efe2b011babaf336ca1431"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27fd9ad83b56a6cb256bae3a1c6524afb624d209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27fd9ad83b56a6cb256bae3a1c6524afb624d209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27fd9ad83b56a6cb256bae3a1c6524afb624d209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27fd9ad83b56a6cb256bae3a1c6524afb624d209/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c4d86c9ccbafef2cdfd92f3b6f382aa498a2c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c4d86c9ccbafef2cdfd92f3b6f382aa498a2c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c4d86c9ccbafef2cdfd92f3b6f382aa498a2c83"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "87c3372e99788fea0895df60e2a5a4f1d4cacaa4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27fd9ad83b56a6cb256bae3a1c6524afb624d209/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27fd9ad83b56a6cb256bae3a1c6524afb624d209/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=27fd9ad83b56a6cb256bae3a1c6524afb624d209", "patch": "@@ -1,3 +1,15 @@\n+2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch9.adb (Collect_Interfaces): Initialize\n+\tDirect_Primitive_Operations for a tagged synchronized type,\n+\tso it can used in ASIS mode.\n+\t* sem_disp.adb (Check_Dispatching_Operation): If expansion is\n+\tdisabled, attach subprogram to list of Direct_Primitive_Operations\n+\tof synchronized type itself, for ASIS use, because in this case\n+\tCorresponding_Record_Type is not built.\n+\t* einfo.ads: Indicate use of Direct_Primitive_Operations on\n+\tsynchronized type.\n+\n 2015-05-12  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* exp_pakd.adb: Make clearer the comment in exp_pakd.adb about"}, {"sha": "c48b63759e955f7e695e2bd5e784e894390c9670", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27fd9ad83b56a6cb256bae3a1c6524afb624d209/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27fd9ad83b56a6cb256bae3a1c6524afb624d209/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=27fd9ad83b56a6cb256bae3a1c6524afb624d209", "patch": "@@ -765,11 +765,13 @@ package Einfo is\n \n --    Default_Aspect_Component_Value (Node19) [base type only]\n --       Defined in array types. Holds the static value specified in a\n---       Default_Component_Value aspect specification for the array type.\n+--       Default_Component_Value aspect specification for the array type,\n+--       or inherited on derivation.\n \n --    Default_Aspect_Value (Node19) [base type only]\n --       Defined in scalar types. Holds the static value specified in a\n---       Default_Value aspect specification for the type.\n+--       Default_Value aspect specification for the type, or inherited\n+--       on derivation.\n \n --    Default_Expr_Function (Node21)\n --       Defined in parameters. It holds the entity of the parameterless\n@@ -880,6 +882,9 @@ package Einfo is\n --       primitives that come from source must be stored in this list in the\n --       order of their occurrence in the sources. For incomplete types the\n --       list is always empty.\n+--       When expansion is disabled the corresponding record type of a\n+--       synchronized type is not constructed. In that case, such types\n+--       carry this attribute directly, for ASIS use.\n \n --    Directly_Designated_Type (Node20)\n --       Defined in access types. This field points to the type that is\n@@ -1501,8 +1506,11 @@ package Einfo is\n --    Has_Default_Aspect (Flag39) [base type only]\n --       Defined in entities for types and subtypes, set for scalar types with\n --       a Default_Value aspect and array types with a Default_Component_Value\n---       apsect. If this flag is set, then a corresponding aspect specification\n---       node will be present on the rep item chain for the entity.\n+--       aspect. If this flag is set, then a corresponding aspect specification\n+--       node will be present on the rep item chain for the entity. For a\n+--       derived type that inherits a default from its ancestor, the default\n+--       value is set, but it may be overridden by an aspect declaration on\n+--       type type derivation.\n \n --    Has_Default_Init_Cond (Flag3)\n --       Defined in type and subtype entities. Set if pragma Default_Initial_"}, {"sha": "0e1af32c6781282fb3f9b830e9b8d87de4b50949", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27fd9ad83b56a6cb256bae3a1c6524afb624d209/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27fd9ad83b56a6cb256bae3a1c6524afb624d209/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=27fd9ad83b56a6cb256bae3a1c6524afb624d209", "patch": "@@ -3225,6 +3225,13 @@ package body Sem_Ch9 is\n       if Present (Interface_List (N)) then\n          Set_Is_Tagged_Type (T);\n \n+         --  The primitive operations of a tagged synchronized type are\n+         --  placed on the Corresponding_Record for proper dispatching,\n+         --  but are attached to the synchronized type itself when\n+         --  expansion is disabled, for ASIS use.\n+\n+         Set_Direct_Primitive_Operations (T, New_Elmt_List);\n+\n          Iface := First (Interface_List (N));\n          while Present (Iface) loop\n             Iface_Typ := Find_Type_Of_Subtype_Indic (Iface);"}, {"sha": "dfb01226019b015196b2056d421e22ed399017a2", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27fd9ad83b56a6cb256bae3a1c6524afb624d209/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27fd9ad83b56a6cb256bae3a1c6524afb624d209/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=27fd9ad83b56a6cb256bae3a1c6524afb624d209", "patch": "@@ -1334,6 +1334,11 @@ package body Sem_Disp is\n \n       elsif Is_Concurrent_Type (Tagged_Type) then\n          pragma Assert (not Expander_Active);\n+\n+         --  Attach operation to list of primitives of the synchronized\n+         --  type itself, for ASIS use.\n+\n+         Append_Elmt (Subp, Direct_Primitive_Operations (Tagged_Type));\n          null;\n \n       --  If no old subprogram, then we add this as a dispatching operation,"}]}