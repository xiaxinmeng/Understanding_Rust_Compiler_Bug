{"sha": "018730326d878d98b85b1256ff220e76665ed97e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE4NzMwMzI2ZDg3OGQ5OGI4NWIxMjU2ZmYyMjBlNzY2NjVlZDk3ZQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-25T00:19:04Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-25T00:19:04Z"}, "message": "d: Merge upstream dmd 09db0c41e, druntime e68a5ae3.\n\n* New core.math.toPrec templates have been added as an intrinsic.\n\n  Some floating point algorithms, such as Kahan-Babuska-Neumaier\n  Summation, require rounding to specific precisions. Rounding to\n  precision after every operation, however, loses overall precision in\n  the general case and is a runtime performance problem.\n\n  Adding these functions guarantee the rounding at required points in\n  the code, and document where in the algorithm the requirement exists.\n\n* Support IBM long double types in core.internal.convert.\n\n* Add missing aliases for 64-bit vectors in core.simd.\n\n* RUNNABLE_PHOBOS_TEST directive has been properly integrated into the\n  D2 language testsuite.\n\nReviewed-on: https://github.com/dlang/druntime/pull/3063\n\t     https://github.com/dlang/dmd/pull/11054\n\ngcc/d/ChangeLog:\n\n\t* intrinsics.cc (expand_intrinsic_toprec): New function.\n\t(maybe_expand_intrinsic): Handle toPrec intrinsics.\n\t* intrinsics.def (TOPRECF, TOPREC, TOPRECL): Add toPrec intrinsics.", "tree": {"sha": "39976b0fbb3c7afa4583d54d0be78c63ec5ff351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39976b0fbb3c7afa4583d54d0be78c63ec5ff351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/018730326d878d98b85b1256ff220e76665ed97e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018730326d878d98b85b1256ff220e76665ed97e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018730326d878d98b85b1256ff220e76665ed97e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018730326d878d98b85b1256ff220e76665ed97e/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "873878bb82443ce738f35b1ad3c9ef98f6aeb6da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/873878bb82443ce738f35b1ad3c9ef98f6aeb6da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/873878bb82443ce738f35b1ad3c9ef98f6aeb6da"}], "stats": {"total": 456, "additions": 335, "deletions": 121}, "files": [{"sha": "7bb38a8b0e740a5777d7dc452fac2f42d7a162d3", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,9 @@\n+2020-04-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (expand_intrinsic_toprec): New function.\n+\t(maybe_expand_intrinsic): Handle toPrec intrinsics.\n+\t* intrinsics.def (TOPRECF, TOPREC, TOPRECL): Add toPrec intrinsics.\n+\n 2020-04-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-spec.cc (need_phobos): Remove."}, {"sha": "a878cb9f42ea85edffe1cb882412bde6233ffd2f", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-62ce36f3737de691217c21f0173f411734eb1d43\n+09db0c41ee922502fa0966bde24c1cb9b15ad436\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "c7bde88e5cdf68423b2477e47e6b36c7e7d01a7e", "filename": "gcc/d/intrinsics.cc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Fd%2Fintrinsics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Fd%2Fintrinsics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fintrinsics.cc?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -467,6 +467,25 @@ expand_intrinsic_pow (tree callexp)\n \t\t\t  base, exponent);\n }\n \n+/* Expand a front-end intrinsic call to toPrec().  This takes one argument, the\n+   signature to which can be either:\n+\n+\tT toPrec(T)(float f);\n+\tT toPrec(T)(double f);\n+\tT toPrec(T)(real f);\n+\n+    This rounds the argument F to the precision of the specified floating\n+    point type T.  The original call expression is held in CALLEXP.  */\n+\n+static tree\n+expand_intrinsic_toprec (tree callexp)\n+{\n+  tree f = CALL_EXPR_ARG (callexp, 0);\n+  tree type = TREE_TYPE (callexp);\n+\n+  return convert (type, f);\n+}\n+\n /* Expand a front-end intrinsic call to va_arg().  This takes either one or two\n    arguments, the signature to which can be either:\n \n@@ -818,6 +837,9 @@ maybe_expand_intrinsic (tree callexp)\n \t\t\t      CALL_EXPR_ARG (callexp, 1),\n \t\t\t      CALL_EXPR_ARG (callexp, 2));\n \n+    case INTRINSIC_TOPREC:\n+      return expand_intrinsic_toprec (callexp);\n+\n     case INTRINSIC_VA_ARG:\n     case INTRINSIC_C_VA_ARG:\n       return expand_intrinsic_vaarg (callexp);"}, {"sha": "1782cd7f5078506e9c3a73444c702d81d3cf320d", "filename": "gcc/d/intrinsics.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Fd%2Fintrinsics.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Fd%2Fintrinsics.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fintrinsics.def?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -95,6 +95,9 @@ DEF_D_BUILTIN (SIN, SIN, \"sin\", \"core.math\", \"FNaNbNiNfeZe\")\n DEF_D_BUILTIN (SQRTF, SQRTF, \"sqrt\", \"core.math\", \"FNaNbNiNffZf\")\n DEF_D_BUILTIN (SQRT, SQRT, \"sqrt\", \"core.math\", \"FNaNbNiNfdZd\")\n DEF_D_BUILTIN (SQRTL, SQRTL, \"sqrt\", \"core.math\", \"FNaNbNiNfeZe\")\n+DEF_D_BUILTIN (TOPRECF, TOPREC, \"toPrec\", \"core.math\", \"FNaNbNffZI1T\")\n+DEF_D_BUILTIN (TOPREC, TOPREC, \"toPrec\", \"core.math\", \"FNaNbNfdZI1T\")\n+DEF_D_BUILTIN (TOPRECL, TOPREC, \"toPrec\", \"core.math\", \"FNaNbNfeZI1T\")\n \n /* std.math intrinsics.  */\n "}, {"sha": "14d1a12c240bcf7bb9ca0eab22404f2716761b12", "filename": "gcc/testsuite/gdc.test/compilable/interpret3.d", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Finterpret3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Finterpret3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Finterpret3.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -7742,3 +7742,19 @@ struct RBNode(T)\n \n static assert(!__traits(compiles, { alias bug18057 = RBNode!int; }));\n \n+/************************************************/\n+// https://issues.dlang.org/show_bug.cgi?id=9937\n+\n+int test9937()\n+{\n+    import core.math;\n+\n+    float x = float.max;\n+    x *= 2;\n+    x = toPrec!float(x);\n+    x /= 2;\n+    assert(x == float.infinity);\n+    return 1;\n+}\n+\n+static assert(test9937());"}, {"sha": "44817b16ee0800f02ba2bd062e64018e23ad16a7", "filename": "gcc/testsuite/gdc.test/runnable/builtin.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbuiltin.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbuiltin.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbuiltin.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n \n import std.stdio;\n import std.math;\n@@ -116,4 +117,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "78fe574b3109d3f400fa0ea3ec066610d07cb66b", "filename": "gcc/testsuite/gdc.test/runnable/complex.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fcomplex.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fcomplex.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fcomplex.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n import std.stdio;\n@@ -460,4 +461,3 @@ int main(char[][] args)\n     return 0;\n }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "42406ea44a57fba494eb942a817360df5952ec72", "filename": "gcc/testsuite/gdc.test/runnable/constfold.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,5 +1,5 @@\n #! blah\n-\n+// RUNNABLE_PHOBOS_TEST\n static assert(__LINE__ == 3); // fails as __LINE__ is 2\n \n import std.stdio;\n@@ -672,4 +672,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "8c9d4218d6e436b746f6ad77197341a288adf24a", "filename": "gcc/testsuite/gdc.test/runnable/foreach4.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach4.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach4.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach4.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-\n+// RUNNABLE_PHOBOS_TEST\n import core.stdc.stdio;\n import std.stdio;\n \n@@ -928,4 +928,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "6d669753123ff969b28070eb98eda0b06b7d6c7c", "filename": "gcc/testsuite/gdc.test/runnable/ifti.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fifti.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fifti.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fifti.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n \n struct S {\n@@ -118,4 +119,3 @@ void main() {\n     }\n \n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "9170b04adb03f031f9f06de9a8586635905b8058", "filename": "gcc/testsuite/gdc.test/runnable/implicit.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimplicit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimplicit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimplicit.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n \n /***********************************/\n@@ -479,4 +479,3 @@ void main()\n \n     writefln(\"Success\");\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "e1be7b9cbad3b99b3670db827e7c3e3f89cb6d66", "filename": "gcc/testsuite/gdc.test/runnable/inner.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finner.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finner.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finner.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n \n /*******************************************************/\n@@ -916,4 +916,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "b822cadfcd0d66142b9ea56d1046669241b22948", "filename": "gcc/testsuite/gdc.test/runnable/interpret.d", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n \n template Tuple(A...)\n@@ -3480,6 +3480,50 @@ void test15681()\n     assert(s2.values[1].value == 1);        // OK\n }\n \n+/************************************************/\n+// toPrec\n+\n+void testToPrec()\n+{\n+    import core.math;\n+\n+    enum real ctpir = 0xc.90fdaa22168c235p-2;\n+    enum double ctpid = 0x1.921fb54442d18p+1;\n+    enum float ctpif = 0x1.921fb6p+1;\n+    static assert(toPrec!float(ctpir) == ctpif);\n+    static assert(toPrec!double(ctpir) == ctpid);\n+    static assert(toPrec!real(ctpir) == ctpir);\n+    static assert(toPrec!float(ctpid) == ctpif);\n+    static assert(toPrec!double(ctpid) == ctpid);\n+    static assert(toPrec!real(ctpid) == ctpid);\n+    static assert(toPrec!float(ctpif) == ctpif);\n+    static assert(toPrec!double(ctpif) == ctpif);\n+    static assert(toPrec!real(ctpif) == ctpif);\n+\n+    assert(toPrec!float(ctpir) == ctpif);\n+    assert(toPrec!double(ctpir) == ctpid);\n+    assert(toPrec!real(ctpir) == ctpir);\n+    assert(toPrec!float(ctpid) == ctpif);\n+    assert(toPrec!double(ctpid) == ctpid);\n+    assert(toPrec!real(ctpid) == ctpid);\n+    assert(toPrec!float(ctpif) == ctpif);\n+    assert(toPrec!double(ctpif) == ctpif);\n+    assert(toPrec!real(ctpif) == ctpif);\n+\n+    static real rtpir = 0xc.90fdaa22168c235p-2;\n+    static double rtpid = 0x1.921fb54442d18p+1;\n+    static float rtpif = 0x1.921fb6p+1;\n+    assert(toPrec!float(rtpir) == rtpif);\n+    assert(toPrec!double(rtpir) == rtpid);\n+    assert(toPrec!real(rtpir) == rtpir);\n+    assert(toPrec!float(rtpid) == rtpif);\n+    assert(toPrec!double(rtpid) == rtpid);\n+    assert(toPrec!real(rtpid) == rtpid);\n+    assert(toPrec!float(rtpif) == rtpif);\n+    assert(toPrec!double(rtpif) == rtpif);\n+    assert(toPrec!real(rtpif) == rtpif);\n+}\n+\n /************************************************/\n \n int main()\n@@ -3609,4 +3653,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "c28e63b275b3f1519fbf7ef8f135411ba2091610", "filename": "gcc/testsuite/gdc.test/runnable/issue8671.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fissue8671.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fissue8671.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fissue8671.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,6 +1,6 @@\n+// RUNNABLE_PHOBOS_TEST\n import std.random;\n void main()\n {\n     double t = 1.0 - uniform(0.0, 1.0);\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "b9d0fd2afc5f4333ad0f90bf196965f692f42f9a", "filename": "gcc/testsuite/gdc.test/runnable/lazy.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n import core.vararg;\n import std.stdio;\n \n@@ -308,4 +309,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "4d17d33aebfc4bbd703a60aa7b05785b44d39ce0", "filename": "gcc/testsuite/gdc.test/runnable/mars1.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,5 @@\n /*\n+RUNNABLE_PHOBOS_TEST\n REQUIRED_ARGS: -mcpu=native\n PERMUTE_ARGS: -O -inline\n */\n@@ -1723,4 +1724,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "9d88fbd2841607f97baae1c3090dc71b8e5d2a07", "filename": "gcc/testsuite/gdc.test/runnable/mixin1.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin1.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-\n+// RUNNABLE_PHOBOS_TEST\n module mixin1;\n \n import std.stdio;\n@@ -1468,4 +1468,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "3591d1200e0cc32600a08b7f3e4a315c33b91eda", "filename": "gcc/testsuite/gdc.test/runnable/mixin2.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n \n /*********************************************/\n@@ -361,4 +362,3 @@ void main()\n \n     writeln(\"Success\");\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "29cfc9669bbe1e697168ea6ba5301d31361e7f92", "filename": "gcc/testsuite/gdc.test/runnable/s2ir.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fs2ir.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fs2ir.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fs2ir.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n \n /***********************************/\n@@ -95,4 +95,3 @@ int main()\n     writefln(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "b15725369bee98a21edc72d953509e1b8827fbf5", "filename": "gcc/testsuite/gdc.test/runnable/stress.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n import core.stdc.stdio : printf;\n@@ -725,4 +726,3 @@ void CLASS()\n         }\n     }\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "77d6254361aba009c61e7cd70cb4dfcbe3b59a09", "filename": "gcc/testsuite/gdc.test/runnable/template4.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n import core.stdc.stdio;\n \n@@ -1164,4 +1165,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "4f182959cb19791e707d288dcbe89838c323007f", "filename": "gcc/testsuite/gdc.test/runnable/template9.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n module breaker;\n@@ -4965,4 +4966,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "0d48946383db7ddeb80b9eed55bdf46829f36b59", "filename": "gcc/testsuite/gdc.test/runnable/test10942.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest10942.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest10942.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest10942.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // REQUIRED_ARGS: -g\n \n import std.string;\n@@ -24,4 +25,3 @@ mixin(getEnum(1087));\n \n void main() { }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "0d916c1af6ce272f06b7a5ff8caf38b0b4cda571", "filename": "gcc/testsuite/gdc.test/runnable/test11.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest11.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest11.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest11.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // REQUIRED_ARGS:\n \n extern(C) int printf(const char*, ...);\n@@ -1390,4 +1391,3 @@ int main(string[] argv)\n }\n \n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "eb7e422c28b486f8d5ee31fe97a26693dbec07bc", "filename": "gcc/testsuite/gdc.test/runnable/test12.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS: -unittest -O -release -inline -fPIC -g\n \n extern(C) int printf(const char*, ...);\n@@ -1250,4 +1251,3 @@ int main(string[] argv)\n     return 0;\n }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "92a0bbddde5a703be5bd486a9b212df742c2ba22", "filename": "gcc/testsuite/gdc.test/runnable/test12197.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12197.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12197.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12197.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // import std.math;\n \n void foo(T)(T[] b)\n@@ -10,4 +11,3 @@ void main()\n     foo(a);\n     assert(a[0] == 10000);\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "234f50b2749ba61de3bba20c916aac7c1a49c86c", "filename": "gcc/testsuite/gdc.test/runnable/test15.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // REQUIRED_ARGS:\n // EXTRA_FILES: extra-files/test15.txt\n \n@@ -1439,4 +1440,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "bd0487845b3a8b7fb334a6ea1247bd798a933e26", "filename": "gcc/testsuite/gdc.test/runnable/test22.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // REQUIRED_ARGS:\n \n import std.math: poly;\n@@ -1306,4 +1307,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "abf8e37f83de9bd74410a38ec86387dc8205f294", "filename": "gcc/testsuite/gdc.test/runnable/test23.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // REQUIRED_ARGS:\n \n module test;\n@@ -1566,4 +1567,3 @@ void main()\n \n     printf(\"Success\\n\");\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "2f31d757921343c5faecdc507799cfd3b580b9e3", "filename": "gcc/testsuite/gdc.test/runnable/test24.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest24.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest24.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest24.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // EXTRA_SOURCES: imports/test24a.d imports/test24b.d\n // PERMUTE_ARGS:\n // REQUIRED_ARGS:\n@@ -8,4 +9,3 @@ void main()\n {\n     string hi = std.string.format(\"%s\", 3);\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "a3e76ea8d6259f1f415268ce53e9719ff11ba34e", "filename": "gcc/testsuite/gdc.test/runnable/test27.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest27.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest27.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest27.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // COMPILE_SEPARATELY\n // EXTRA_SOURCES: imports/test27a.d\n // PERMUTE_ARGS:\n@@ -11,4 +12,3 @@ int main()\n     return 0;\n }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "5355c2cb23a2feffd47a5570159489aca23d2c40", "filename": "gcc/testsuite/gdc.test/runnable/test28.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest28.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest28.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest28.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n module test;\n \n import core.vararg;\n@@ -1318,4 +1319,3 @@ void main()\n     printf(\"Success\\n\");\n }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "6e2b36846c92b07d69761c4ce76ca8a7c2863c21", "filename": "gcc/testsuite/gdc.test/runnable/test34.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-\n+// RUNNABLE_PHOBOS_TEST\n module test34;\n \n import std.stdio;\n@@ -1292,4 +1292,3 @@ void main()\n }\n \n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "f4a454747b4c50f060734602407c3441eb25803c", "filename": "gcc/testsuite/gdc.test/runnable/test37.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest37.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest37.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest37.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n // REQUIRED_ARGS: -Jrunnable/extra-files\n // EXTRA_FILES: extra-files/foo37.txt extra-files/std14198/uni.d\n@@ -11,4 +12,3 @@ void main()\n     // imports in a subdirectory of the -J path\n     writefln(import(\"std14198/uni.d\"));\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "66b3c04e0bbfd757d050ffbc58b4b9f43c8a3814", "filename": "gcc/testsuite/gdc.test/runnable/test42.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,5 +1,5 @@\n+// RUNNABLE_PHOBOS_TEST\n // REQUIRED_ARGS:\n-//\n \n module test42;\n \n@@ -6438,4 +6438,3 @@ int main()\n     return 0;\n }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "ff52936a8dc886eaeab1477d89c29783dbe83d0f", "filename": "gcc/testsuite/gdc.test/runnable/test5305.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest5305.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest5305.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest5305.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,8 +1,8 @@\n+// RUNNABLE_PHOBOS_TEST\n // https://issues.dlang.org/show_bug.cgi?id=5305\n \n import std.math;\n void map(real function(real) f) { }\n int main() { map(&sqrt); return 0; }\n \n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "cfd92b225ca0bd70c6a8765d10b575471b28cd55", "filename": "gcc/testsuite/gdc.test/runnable/test60.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest60.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest60.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest60.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n import std.algorithm;\n \n@@ -20,4 +21,3 @@ void main()\n \n     writeln(\"Success\");\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "75e8172ab491a850ffb117d47922ed40cff2c924", "filename": "gcc/testsuite/gdc.test/runnable/testaa.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS: -fPIC\n \n /* Test associative arrays */\n@@ -1383,4 +1384,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "8a34f886b056b23e472bf918bbbc8a5cadfd768c", "filename": "gcc/testsuite/gdc.test/runnable/testbitarray.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestbitarray.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestbitarray.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestbitarray.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n import std.bitmanip;\n@@ -14,4 +15,3 @@ void main() {\n }\n \n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "f06f93982a5e626e41ffa499ffb40191e470d932", "filename": "gcc/testsuite/gdc.test/runnable/testdstress.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n module dstress.run.module_01;\n@@ -930,4 +931,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "6f568044ea4a734d5652d9f1c2612061895b06c5", "filename": "gcc/testsuite/gdc.test/runnable/testfile.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestfile.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestfile.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestfile.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n import std.file;\n@@ -22,4 +23,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "74f4095c0093aa702130b89148c3a86e8efbfc9c", "filename": "gcc/testsuite/gdc.test/runnable/testformat.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestformat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestformat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestformat.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n import std.stdio;\n@@ -123,4 +124,3 @@ int main()\n     std.stdio.writefln(\"Success\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "5b84204b78580b3b380f1913ab1000aa8f27ada6", "filename": "gcc/testsuite/gdc.test/runnable/testline.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestline.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestline.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestline.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n // $HeadURL$\n@@ -41,4 +42,3 @@ void checkFileSpec(Object o){\n writeln(str);\n         assert(str[start .. start+3]==\"(1)\");\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "6a9d6e9094a725c826a87036130402723b998311", "filename": "gcc/testsuite/gdc.test/runnable/testmmfile.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmmfile.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmmfile.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmmfile.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n // REQUIRED_ARGS:\n \n@@ -117,4 +118,3 @@ int main()\n \n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "6c96fb5873d6dfe3b586e5c054c1e3820cdc8efe", "filename": "gcc/testsuite/gdc.test/runnable/testscope2.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // REQUIRED_ARGS: -dip25\n \n import core.stdc.stdio;\n@@ -246,4 +247,3 @@ void main()\n     printf(\"Success\\n\");\n }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "c2fbcee45cba94b6891887379d0f5e5e37676571", "filename": "gcc/testsuite/gdc.test/runnable/testsignals.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsignals.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsignals.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsignals.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n import std.stdio;\n import std.signals;\n \n@@ -111,4 +112,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "d0619299ece09727f37f15de0741f5794e7ecf63", "filename": "gcc/testsuite/gdc.test/runnable/testsocket.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsocket.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n import std.stdio;\n@@ -48,4 +49,3 @@ int main ()\n }\n \n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "d340f21892fe9f5d9ac5dd15f3e83169a62e2d6d", "filename": "gcc/testsuite/gdc.test/runnable/teststdio.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fteststdio.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fteststdio.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fteststdio.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n // EXTRA_FILES: extra-files/teststdio.txt\n \n@@ -31,4 +32,3 @@ void main()\n     } while (!feof(fp));\n     //fclose(fp);\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "93aace6c650cf6608956124dc139a2f24cd3dc8f", "filename": "gcc/testsuite/gdc.test/runnable/testthread2.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestthread2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestthread2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestthread2.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n import std.algorithm : map;\n@@ -106,4 +107,3 @@ void main() {\n     }\n }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "ebdda30c1977a5496a2f39fe89a954fe68dcd879", "filename": "gcc/testsuite/gdc.test/runnable/testtypeid.d", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftesttypeid.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftesttypeid.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftesttypeid.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-\n+// RUNNABLE_PHOBOS_TEST\n import core.vararg;\n import std.stdio;\n \n@@ -684,4 +684,3 @@ int main()\n \n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "547976f659834cc510187b43177395bd69901618", "filename": "gcc/testsuite/gdc.test/runnable/traits.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n module traits;\n \n@@ -1606,4 +1607,3 @@ int main()\n     writeln(\"Success\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "8f847c5938fb5376eac945b38b6395c36aa5e07d", "filename": "gcc/testsuite/gdc.test/runnable/wc.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n // EXECUTE_ARGS: runnable/wc.d\n \n@@ -48,4 +49,3 @@ int main (string[] args)\n     }\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "a97c6fa8620c23a3e8153c70bb122bdf06d6b99f", "filename": "gcc/testsuite/gdc.test/runnable/wc2.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc2.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n // EXECUTE_ARGS: runnable/wc2.d\n \n@@ -72,4 +73,3 @@ int main (string[] args)\n     }\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "13beac25aba08d8478a09e40737f98337a85598f", "filename": "gcc/testsuite/gdc.test/runnable/wc3.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc3.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n // EXECUTE_ARGS: runnable/extra-files/alice30.txt\n // EXTRA_FILES: extra-files/alice30.txt\n@@ -70,4 +71,3 @@ int main (string[] args)\n     }\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "8cba4ed4a803c398cd8c23e9cdd62ab8310cded3", "filename": "gcc/testsuite/gdc.test/runnable/xtest46.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS: -unittest -O -release -inline -fPIC -g\n \n import std.stdio;\n@@ -8283,4 +8284,3 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "4b295d8c6862095bce374dc0de0b9e75be536f61", "filename": "gcc/testsuite/gdc.test/runnable/xtest55.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest55.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest55.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest55.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,3 +1,4 @@\n+// RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n import core.memory, std.stdio;\n@@ -22,4 +23,3 @@ int main()\n     return 0;\n }\n \n-// RUNNABLE_PHOBOS_TEST"}, {"sha": "8b461f76ad0085761f1aaba5d1aec9e1867cb356", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -1,4 +1,4 @@\n-c9c209e2c62ce43a2c08ddd61d647730716b2d0f\n+e68a5ae36790fa9dc5bab6155bc450eb6bf8c12c\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "839605aee1e61774c64ea13650fb1c9151f9ac43", "filename": "libphobos/libdruntime/core/cpuid.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2Fcore%2Fcpuid.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2Fcore%2Fcpuid.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fcpuid.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -822,7 +822,7 @@ void cpuidX86()\n         {\n             asm pure nothrow @nogc {\n                 \"cpuid\" : \"=a\" (pnb[0]), \"=b\" (pnb[1]), \"=c\" (pnb[ 2]), \"=d\" (pnb[ 3]) : \"a\" (0x8000_0002);\n-                \"cpuid\" : \"=a\" (pnb[4]), \"=b\" (pnb[5]), \"=c\" (pnb[ 6]), \"=d\" (pnb[ 7]) : \"a\" (0x8000_0003);               \n+                \"cpuid\" : \"=a\" (pnb[4]), \"=b\" (pnb[5]), \"=c\" (pnb[ 6]), \"=d\" (pnb[ 7]) : \"a\" (0x8000_0003);\n                 \"cpuid\" : \"=a\" (pnb[8]), \"=b\" (pnb[9]), \"=c\" (pnb[10]), \"=d\" (pnb[11]) : \"a\" (0x8000_0004);\n             }\n         }"}, {"sha": "3d2cb59a64a3a267abec15049f845ff41c07f735", "filename": "libphobos/libdruntime/core/internal/convert.d", "status": "modified", "additions": 116, "deletions": 54, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2Fcore%2Finternal%2Fconvert.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2Fcore%2Finternal%2Fconvert.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Finternal%2Fconvert.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -37,76 +37,138 @@ private ubyte[] ctfe_alloc()(size_t n)\n const(ubyte)[] toUbyte(T)(const ref T val) if (is(Unqual!T == float) || is(Unqual!T == double) || is(Unqual!T == real) ||\n                                         is(Unqual!T == ifloat) || is(Unqual!T == idouble) || is(Unqual!T == ireal))\n {\n-    static const(ubyte)[] reverse_(const(ubyte)[] arr)\n-    {\n-        ubyte[] buff = ctfe_alloc(arr.length);\n-        foreach (k, v; arr)\n-        {\n-            buff[$-k-1] = v;\n-        }\n-        return buff;\n-    }\n     if (__ctfe)\n     {\n-        auto parsed = parse(val);\n-\n-        ulong mantissa = parsed.mantissa;\n-        uint exp = parsed.exponent;\n-        uint sign = parsed.sign;\n-\n-        ubyte[] buff = ctfe_alloc(T.sizeof);\n-        size_t off_bytes = 0;\n-        size_t off_bits  = 0;\n-        // Quadruples won't fit in one ulong, so check for that.\n-        enum mantissaMax = FloatTraits!T.MANTISSA < ulong.sizeof*8 ?\n-                           FloatTraits!T.MANTISSA : ulong.sizeof*8;\n-\n-        for (; off_bytes < mantissaMax/8; ++off_bytes)\n+        static if (T.mant_dig == float.mant_dig || T.mant_dig == double.mant_dig)\n         {\n-            buff[off_bytes] = cast(ubyte)mantissa;\n-            mantissa >>= 8;\n+            static if (is(T : ireal)) // https://issues.dlang.org/show_bug.cgi?id=19932\n+                const f = val.im;\n+            else\n+                alias f = val;\n+            static if (T.sizeof == uint.sizeof)\n+                uint bits = *cast(const uint*) &f;\n+            else static if (T.sizeof == ulong.sizeof)\n+                ulong bits = *cast(const ulong*) &f;\n+            ubyte[] result = ctfe_alloc(T.sizeof);\n+            version (BigEndian)\n+            {\n+                foreach_reverse (ref b; result)\n+                {\n+                    b = cast(ubyte) bits;\n+                    bits >>= 8;\n+                }\n+            }\n+            else\n+            {\n+                foreach (ref b; result)\n+                {\n+                    b = cast(ubyte) bits;\n+                    bits >>= 8;\n+                }\n+            }\n+            return result;\n         }\n-\n-        static if (floatFormat!T == FloatFormat.Quadruple)\n+        else static if (floatFormat!T == FloatFormat.DoubleDouble)\n         {\n-            ulong mantissa2 = parsed.mantissa2;\n-            off_bytes--; // go back one, since mantissa only stored data in 56\n-                         // bits, ie 7 bytes\n-            for (; off_bytes < FloatTraits!T.MANTISSA/8; ++off_bytes)\n+            // Parse DoubleDoubles as a pair of doubles.\n+            // The layout of the type is:\n+            //\n+            //   [1|  7  |       56      ][   8    |       56       ]\n+            //   [S| Exp | Fraction (hi) ][ Unused | Fraction (low) ]\n+            //\n+            // We can get the least significant bits by subtracting the IEEE\n+            // double precision portion from the real value.\n+\n+            import core.math : toPrec;\n+\n+            ubyte[] buff = ctfe_alloc(T.sizeof);\n+            enum msbSize = double.sizeof;\n+\n+            double hi = toPrec!double(val);\n+            buff[0 .. msbSize] = toUbyte(hi)[];\n+\n+            if (val is cast(T)0.0 || val is cast(T)-0.0 ||\n+                val is T.nan || val is -T.nan ||\n+                val is T.infinity || val > T.max ||\n+                val is -T.infinity || val < -T.max)\n+            {\n+                // Zero, NaN, and Inf are all representable as doubles, so the\n+                // least significant part can be 0.0.\n+                buff[msbSize .. $] = 0;\n+            }\n+            else\n             {\n-                buff[off_bytes] = cast(ubyte)mantissa2;\n-                mantissa2 >>= 8;\n+                double low = toPrec!double(val - hi);\n+                buff[msbSize .. $] = toUbyte(low)[];\n             }\n+\n+            // Arrays don't index differently between little and big-endian targets.\n+            return buff;\n         }\n         else\n         {\n-            off_bits = FloatTraits!T.MANTISSA%8;\n-            buff[off_bytes] = cast(ubyte)mantissa;\n-        }\n+            auto parsed = parse(val);\n \n-        for (size_t i=0; i<FloatTraits!T.EXPONENT/8; ++i)\n-        {\n-            ubyte cur_exp = cast(ubyte)exp;\n-            exp >>= 8;\n-            buff[off_bytes] |= (cur_exp << off_bits);\n-            ++off_bytes;\n-            buff[off_bytes] |= cur_exp >> 8 - off_bits;\n-        }\n+            ulong mantissa = parsed.mantissa;\n+            uint exp = parsed.exponent;\n+            uint sign = parsed.sign;\n \n+            ubyte[] buff = ctfe_alloc(T.sizeof);\n+            size_t off_bytes = 0;\n+            size_t off_bits  = 0;\n+            // Quadruples won't fit in one ulong, so check for that.\n+            enum mantissaMax = FloatTraits!T.MANTISSA < ulong.sizeof*8 ?\n+                               FloatTraits!T.MANTISSA : ulong.sizeof*8;\n \n-        exp <<= 8 - FloatTraits!T.EXPONENT%8 - 1;\n-        buff[off_bytes] |= exp;\n-        sign <<= 7;\n-        buff[off_bytes] |= sign;\n+            for (; off_bytes < mantissaMax/8; ++off_bytes)\n+            {\n+                buff[off_bytes] = cast(ubyte)mantissa;\n+                mantissa >>= 8;\n+            }\n \n-        version (LittleEndian)\n-        {\n+            static if (floatFormat!T == FloatFormat.Quadruple)\n+            {\n+                ulong mantissa2 = parsed.mantissa2;\n+                off_bytes--; // go back one, since mantissa only stored data in 56\n+                             // bits, ie 7 bytes\n+                for (; off_bytes < FloatTraits!T.MANTISSA/8; ++off_bytes)\n+                {\n+                    buff[off_bytes] = cast(ubyte)mantissa2;\n+                    mantissa2 >>= 8;\n+                }\n+            }\n+            else\n+            {\n+                off_bits = FloatTraits!T.MANTISSA%8;\n+                buff[off_bytes] = cast(ubyte)mantissa;\n+            }\n+\n+            for (size_t i=0; i<FloatTraits!T.EXPONENT/8; ++i)\n+            {\n+                ubyte cur_exp = cast(ubyte)exp;\n+                exp >>= 8;\n+                buff[off_bytes] |= (cur_exp << off_bits);\n+                ++off_bytes;\n+                buff[off_bytes] |= cur_exp >> 8 - off_bits;\n+            }\n+\n+\n+            exp <<= 8 - FloatTraits!T.EXPONENT%8 - 1;\n+            buff[off_bytes] |= exp;\n+            sign <<= 7;\n+            buff[off_bytes] |= sign;\n+\n+            version (BigEndian)\n+            {\n+                for (size_t left = 0, right = buff.length - 1; left < right; left++, right--)\n+                {\n+                    const swap = buff[left];\n+                    buff[left] = buff[right];\n+                    buff[right] = swap;\n+                }\n+            }\n             return buff;\n         }\n-        else\n-        {\n-            return reverse_(buff);\n-        }\n     }\n     else\n     {"}, {"sha": "878623258cd3e7dcd7edf6889a762373866cff51", "filename": "libphobos/libdruntime/core/math.d", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2Fcore%2Fmath.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2Fcore%2Fmath.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fmath.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -164,3 +164,74 @@ unittest\n     }\n }\n \n+/*************************************\n+ * Round argument to a specific precision.\n+ *\n+ * D language types specify a minimum precision, not a maximum. The\n+ * `toPrec()` function forces rounding of the argument `f` to the\n+ * precision of the specified floating point type `T`.\n+ *\n+ * Params:\n+ *      T = precision type to round to\n+ *      f = value to convert\n+ * Returns:\n+ *      f in precision of type `T`\n+ */\n+@safe pure nothrow\n+T toPrec(T:float)(float f) { pragma(inline, false); return f; }\n+/// ditto\n+@safe pure nothrow\n+T toPrec(T:float)(double f) { pragma(inline, false); return cast(T) f; }\n+/// ditto\n+@safe pure nothrow\n+T toPrec(T:float)(real f)  { pragma(inline, false); return cast(T) f; }\n+/// ditto\n+@safe pure nothrow\n+T toPrec(T:double)(float f) { pragma(inline, false); return f; }\n+/// ditto\n+@safe pure nothrow\n+T toPrec(T:double)(double f) { pragma(inline, false); return f; }\n+/// ditto\n+@safe pure nothrow\n+T toPrec(T:double)(real f)  { pragma(inline, false); return cast(T) f; }\n+/// ditto\n+@safe pure nothrow\n+T toPrec(T:real)(float f) { pragma(inline, false); return f; }\n+/// ditto\n+@safe pure nothrow\n+T toPrec(T:real)(double f) { pragma(inline, false); return f; }\n+/// ditto\n+@safe pure nothrow\n+T toPrec(T:real)(real f)  { pragma(inline, false); return f; }\n+\n+@safe unittest\n+{\n+    static float f = 1.1f;\n+    static double d = 1.1;\n+    static real r = 1.1L;\n+    f = toPrec!float(f + f);\n+    f = toPrec!float(d + d);\n+    f = toPrec!float(r + r);\n+    d = toPrec!double(f + f);\n+    d = toPrec!double(d + d);\n+    d = toPrec!double(r + r);\n+    r = toPrec!real(f + f);\n+    r = toPrec!real(d + d);\n+    r = toPrec!real(r + r);\n+\n+    /+ Uncomment these once compiler support has been added.\n+    enum real PIR = 0xc.90fdaa22168c235p-2;\n+    enum double PID = 0x1.921fb54442d18p+1;\n+    enum float PIF = 0x1.921fb6p+1;\n+\n+    assert(toPrec!float(PIR) == PIF);\n+    assert(toPrec!double(PIR) == PID);\n+    assert(toPrec!real(PIR) == PIR);\n+    assert(toPrec!float(PID) == PIF);\n+    assert(toPrec!double(PID) == PID);\n+    assert(toPrec!real(PID) == PID);\n+    assert(toPrec!float(PIF) == PIF);\n+    assert(toPrec!double(PIF) == PIF);\n+    assert(toPrec!real(PIF) == PIF);\n+    +/\n+}"}, {"sha": "32e2aaf5cfdde16c15b91387db7460a10b468d5f", "filename": "libphobos/libdruntime/core/simd.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2Fcore%2Fsimd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018730326d878d98b85b1256ff220e76665ed97e/libphobos%2Flibdruntime%2Fcore%2Fsimd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsimd.d?ref=018730326d878d98b85b1256ff220e76665ed97e", "patch": "@@ -10,9 +10,6 @@\n  * Authors:   $(WEB digitalmars.com, Walter Bright),\n  */\n \n-/* NOTE: This file has been patched from the original DMD distribution to\n- * work with the GDC compiler.\n- */\n module core.simd;\n \n pure:\n@@ -42,13 +39,16 @@ template Vector(T)\n /* Handy aliases\n  */\n static if (is(Vector!(void[8])))    alias Vector!(void[8])  void8;          ///\n+static if (is(Vector!(double[1])))  alias Vector!(double[1]) double1;       ///\n static if (is(Vector!(float[2])))   alias Vector!(float[2])  float2;        ///\n static if (is(Vector!(byte[8])))    alias Vector!(byte[8])  byte8;          ///\n static if (is(Vector!(ubyte[8])))   alias Vector!(ubyte[8]) ubyte8;         ///\n static if (is(Vector!(short[4])))   alias Vector!(short[4])  short4;        ///\n static if (is(Vector!(ushort[4])))  alias Vector!(ushort[4]) ushort4;       ///\n static if (is(Vector!(int[2])))     alias Vector!(int[2])    int2;          ///\n static if (is(Vector!(uint[2])))    alias Vector!(uint[2])   uint2;         ///\n+static if (is(Vector!(long[1])))    alias Vector!(long[1])   long1;         ///\n+static if (is(Vector!(ulong[1])))   alias Vector!(ulong[1])  ulong1;        ///\n \n static if (is(Vector!(void[16])))   alias Vector!(void[16])  void16;        ///\n static if (is(Vector!(double[2])))  alias Vector!(double[2]) double2;       ///"}]}