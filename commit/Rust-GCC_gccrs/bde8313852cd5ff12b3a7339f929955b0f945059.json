{"sha": "bde8313852cd5ff12b3a7339f929955b0f945059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRlODMxMzg1MmNkNWZmMTJiM2E3MzM5ZjkyOTk1NWIwZjk0NTA1OQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-10T17:38:53Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-10T17:38:53Z"}, "message": "adaint.c, [...]: Fix comment typos.\n\n\t* adaint.c, init.c, tracebak.c: Fix comment typos.\n\t* gnat-style.texi, gnat_rm.texi, gnat_ugn.texi: Fix typos.\n\nFrom-SVN: r97950", "tree": {"sha": "5b6dd653367b4bb163d6b82631e03692c8dfe979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b6dd653367b4bb163d6b82631e03692c8dfe979"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bde8313852cd5ff12b3a7339f929955b0f945059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde8313852cd5ff12b3a7339f929955b0f945059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bde8313852cd5ff12b3a7339f929955b0f945059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde8313852cd5ff12b3a7339f929955b0f945059/comments", "author": null, "committer": null, "parents": [{"sha": "c5d34bb2d63bc7c3525843da011e01da3d86562b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d34bb2d63bc7c3525843da011e01da3d86562b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d34bb2d63bc7c3525843da011e01da3d86562b"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "50460c6a0e35e86c4ceb7012ed43ae898a37fc67", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bde8313852cd5ff12b3a7339f929955b0f945059", "patch": "@@ -1,3 +1,8 @@\n+2005-04-10  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* adaint.c, init.c, tracebak.c: Fix comment typos.\n+\t* gnat-style.texi, gnat_rm.texi, gnat_ugn.texi: Fix typos.\n+\n 2005-04-07  Laurent GUERBY  <laurent@guerby.net>\n \t    John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n "}, {"sha": "b98b52c11dfcad04785547847f57e5e5358f18b3", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=bde8313852cd5ff12b3a7339f929955b0f945059", "patch": "@@ -1308,7 +1308,7 @@ __gnat_set_env_value (char *name, char *value)\n \t*next = 0;\n \tile_array[i].len = strlen (curr);\n \n-\t/* Code 2 from lnmdef.h means its a string.  */\n+\t/* Code 2 from lnmdef.h means it's a string.  */\n \tile_array[i].code = 2;\n \tile_array[i].adr = curr;\n \n@@ -2204,7 +2204,7 @@ __gnat_to_canonical_dir_spec (char *dirspec, int prefixflag)\n }\n \n /* Translate a VMS syntax file specification into Unix syntax.\n-   If no indicators of VMS syntax found, check if its an uppercase\n+   If no indicators of VMS syntax found, check if it's an uppercase\n    alphanumeric_ name and if so try it out as an environment\n    variable (logical name). If all else fails return the\n    input string.  */"}, {"sha": "ca87565965238022a38f0bdaf618074c004ed525", "filename": "gcc/ada/gnat-style.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Fgnat-style.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Fgnat-style.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat-style.texi?ref=bde8313852cd5ff12b3a7339f929955b0f945059", "patch": "@@ -332,7 +332,7 @@ sufficient, as comments.\n @node    Declarations and Types, Expressions and Names, Lexical Elements,Top\n @section Declarations and Types\n @c  -------------------------------------------------------------------------\n-@cindex Declarationa and Types\n+@cindex Declarations and Types\n \n @itemize @bullet\n @item"}, {"sha": "6471f36a7a1675f60b0d7d94758dc5d253734085", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=bde8313852cd5ff12b3a7339f929955b0f945059", "patch": "@@ -521,7 +521,7 @@ of project files.\n @ref{Obsolescent Features} documents implementation dependent features,\n including pragmas and attributes, which are considered obsolescent, since\n there are other preferred ways of achieving the same results. These\n-obsolescent forms are retained for backwards compatibilty.\n+obsolescent forms are retained for backwards compatibility.\n \n @end itemize\n \n@@ -12939,7 +12939,7 @@ example see the body of @code{GNAT.Tables}).\n @node System.Partition_Interface (s-parint.ads)\n @section @code{System.Partition_Interface} (@file{s-parint.ads})\n @cindex @code{System.Partition_Interface} (@file{s-parint.ads})\n-@cindex Partition intefacing functions\n+@cindex Partition interfacing functions\n \n @noindent\n This package provides facilities for partition interfacing.  It\n@@ -14603,7 +14603,7 @@ of the @command{gnatls} utility to be used to retrieve information about the\n predefined path; e.g., @code{\"gnatls\"}, @code{\"powerpc-wrs-vxworks-gnatls\"}.\n \n @item VCS_Kind\n-This is a simple atribute. Is value is a string used to specify the\n+This is a simple attribute. Is value is a string used to specify the\n Version Control System (VCS) to be used for this project, e.g CVS, RCS\n ClearCase or Perforce.\n "}, {"sha": "7f4e0671f87f437590c36f9c5b72b72617855166", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=bde8313852cd5ff12b3a7339f929955b0f945059", "patch": "@@ -2962,7 +2962,7 @@ in section B.3 of the Ada 95 Reference Manual.\n \n @findex C varargs function\n @cindex Intefacing to C varargs function\n-@cindex varargs function intefacs\n+@cindex varargs function interfaces\n @item C varargs function\n In C, @code{varargs} allows a function to take a variable number of\n arguments. There is no direct equivalent in this to Ada. One\n@@ -4721,7 +4721,7 @@ such warnings are not generated.\n \n In addition to the above cases, warnings are also generated for\n GNAT features that have been provided in past versions but which\n-have been superceded (typically by features in the new Ada standard).\n+have been superseded (typically by features in the new Ada standard).\n For example, @code{pragma Ravenscar} will be flagged since its\n function is replaced by @code{pragma Profile(Ravenscar)}.\n \n@@ -9295,7 +9295,7 @@ the compiler optimizer can \"know\" that the value @code{Int1V.all} is constant\n for all iterations of the loop and avoid the extra memory reference\n required to dereference it each time through the loop.\n \n-This kind of optimziation, called strict aliasing analysis, is\n+This kind of optimization, called strict aliasing analysis, is\n triggered by specifying an optimization level of @option{-O2} or\n higher and allows @code{GNAT} to generate more efficient code\n when access values are involved.\n@@ -12583,7 +12583,7 @@ Additionally, you may define the library-related attributes\n \n The @code{Library_Name} attribute has a string value. There is no restriction\n on the name of a library. It is the responsability of the developer to\n-choose a name that will be accepted by the platform. It is recommanded to\n+choose a name that will be accepted by the platform. It is recommended to\n choose names that could be Ada identifiers; such names are almost guaranteed\n to be acceptable on all platforms.\n \n@@ -15453,7 +15453,7 @@ for this subword\n \n @item\n if the whole name does not contain any ``_'' inside, and if for this name\n-the dictionaty contains two entries - one of the form @var{identifier},\n+the dictionary contains two entries - one of the form @var{identifier},\n and another - of the form *@var{simple_identifier}*, then the first one\n is applied to define the casing of this name\n \n@@ -16000,7 +16000,7 @@ an explicit list of files.\n @cindex @option{^-v^/VERBOSE^} (@code{gnatmetric})\n Verbose mode;\n @command{gnatmetric} generates version information and then\n-a trace of sources being procesed.\n+a trace of sources being processed.\n \n @item ^-dv^/DEBUG_OUTPUT^\n @cindex @option{^-dv^/DEBUG_OUTPUT^} (@code{gnatmetric})"}, {"sha": "12a9badafc20efd67b4e89c714483bad0badc6ad", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=bde8313852cd5ff12b3a7339f929955b0f945059", "patch": "@@ -1318,7 +1318,7 @@ long __gnat_error_handler (int *, void *);\n    still need to be handled by such handlers, however, in which case\n    __gnat_error_handler needs to return SS$_RESIGNAL.  Consider for\n    instance the use of a third party library compiled with DECAda and\n-   performing it's own exception handling internally.\n+   performing its own exception handling internally.\n \n    To allow some user-level flexibility, which conditions should be\n    resignaled is controlled by a predicate function, provided with the"}, {"sha": "773db24186a63c3432930e5101e753b36d176939", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bde8313852cd5ff12b3a7339f929955b0f945059/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=bde8313852cd5ff12b3a7339f929955b0f945059", "patch": "@@ -212,7 +212,7 @@ struct layout\n    function is located in it's caller's frame, and the save operation only\n    takes place if the function performs a call.\n \n-   To have __gnat_backtrace retrieve it's own return address, we then\n+   To have __gnat_backtrace retrieve its own return address, we then\n    define ... */\n \n #define FORCE_CALL"}]}