{"sha": "c883e5fb6a12718325cebeb653a4ccf4668a723c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg4M2U1ZmI2YTEyNzE4MzI1Y2ViZWI2NTNhNGNjZjQ2NjhhNzIzYw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-11T06:52:30Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-11T06:52:30Z"}, "message": "AVX-512. Add vperm[it]2 insns support.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_expand \"<avx512>_vpermi2var<VI48F:mode>3_maskz\"): Rename from\n\t\"avx512f_vpermi2var<mode>3_maskz\" and update mode iterator.\n\t(define_expand \"<avx512>_vpermi2var<VI2_AVX512VL:mode>3_maskz\"):\n\tNew.\n\t(define_insn \"<avx512>_vpermi2var<VI48F:mode>3<sd_maskz_name>\"): Rename\n\tfrom \"avx512f_vpermi2var<mode>3<sd_maskz_name>\" and update mode\n\titerator.\n\t(define_insn \"<avx512>_vpermi2var<VI2_AVX512VL:mode>3<sd_maskz_name>\"):\n\tNew.\n\t(define_insn \"<avx512>_vpermi2var<VI48F:mode>3_mask\"): Rename from\n\t\"avx512f_vpermi2var<mode>3_mask\" and update mode iterator.\n\t(define_insn \"<avx512>_vpermi2var<VI2_AVX512VL:mode>3_mask\"): New.\n\t(define_expand \"<avx512>_vpermt2var<VI48F:mode>3_maskz\"): Rename from\n\t\"avx512f_vpermt2var<mode>3_maskz\" and update mode iterator.\n\t(define_expand \"<avx512>_vpermt2var<VI2_AVX512VL:mode>3_maskz\"): New.\n\t(define_insn \"<avx512>_vpermt2var<VI48F:mode>3<sd_maskz_name>\"): Rename\n\tfrom \"avx512f_vpermt2var<mode>3<sd_maskz_name>\" and update mode\n\titerator.\n\t(define_insn \"<avx512>_vpermt2var<VI2_AVX512VL:mode>3<sd_maskz_name>\"):\n\tNew.\n\t(define_insn \"<avx512>_vpermt2var<VI48F:mode>3_mask\"): Rename from\n\t\"avx512f_vpermt2var<mode>3_mask\" and update mode iterator.\n\t(define_insn \"<avx512>_vpermt2var<VI2_AVX512VL:mode>3_mask\"): New.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215151", "tree": {"sha": "33eefbf2c66b6dea32c394bf0b6888ec58aa5675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33eefbf2c66b6dea32c394bf0b6888ec58aa5675"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c883e5fb6a12718325cebeb653a4ccf4668a723c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c883e5fb6a12718325cebeb653a4ccf4668a723c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c883e5fb6a12718325cebeb653a4ccf4668a723c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c883e5fb6a12718325cebeb653a4ccf4668a723c/comments", "author": null, "committer": null, "parents": [{"sha": "7c46e07ba46a9a508f45092f681d228330539d80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c46e07ba46a9a508f45092f681d228330539d80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c46e07ba46a9a508f45092f681d228330539d80"}], "stats": {"total": 184, "additions": 152, "deletions": 32}, "files": [{"sha": "747dbfcb28abcb06ba165569dfaa7346eb93de5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c883e5fb6a12718325cebeb653a4ccf4668a723c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c883e5fb6a12718325cebeb653a4ccf4668a723c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c883e5fb6a12718325cebeb653a4ccf4668a723c", "patch": "@@ -1,3 +1,37 @@\n+2014-09-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_expand \"<avx512>_vpermi2var<VI48F:mode>3_maskz\"): Rename from\n+\t\"avx512f_vpermi2var<mode>3_maskz\" and update mode iterator.\n+\t(define_expand \"<avx512>_vpermi2var<VI2_AVX512VL:mode>3_maskz\"):\n+\tNew.\n+\t(define_insn \"<avx512>_vpermi2var<VI48F:mode>3<sd_maskz_name>\"): Rename\n+\tfrom \"avx512f_vpermi2var<mode>3<sd_maskz_name>\" and update mode\n+\titerator.\n+\t(define_insn \"<avx512>_vpermi2var<VI2_AVX512VL:mode>3<sd_maskz_name>\"):\n+\tNew.\n+\t(define_insn \"<avx512>_vpermi2var<VI48F:mode>3_mask\"): Rename from\n+\t\"avx512f_vpermi2var<mode>3_mask\" and update mode iterator.\n+\t(define_insn \"<avx512>_vpermi2var<VI2_AVX512VL:mode>3_mask\"): New.\n+\t(define_expand \"<avx512>_vpermt2var<VI48F:mode>3_maskz\"): Rename from\n+\t\"avx512f_vpermt2var<mode>3_maskz\" and update mode iterator.\n+\t(define_expand \"<avx512>_vpermt2var<VI2_AVX512VL:mode>3_maskz\"): New.\n+\t(define_insn \"<avx512>_vpermt2var<VI48F:mode>3<sd_maskz_name>\"): Rename\n+\tfrom \"avx512f_vpermt2var<mode>3<sd_maskz_name>\" and update mode\n+\titerator.\n+\t(define_insn \"<avx512>_vpermt2var<VI2_AVX512VL:mode>3<sd_maskz_name>\"):\n+\tNew.\n+\t(define_insn \"<avx512>_vpermt2var<VI48F:mode>3_mask\"): Rename from\n+\t\"avx512f_vpermt2var<mode>3_mask\" and update mode iterator.\n+\t(define_insn \"<avx512>_vpermt2var<VI2_AVX512VL:mode>3_mask\"): New.\n+\n 2014-09-10  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* varpool.c (varpool_node::ctor_useable_for_folding_p): Do not try"}, {"sha": "e182582bc845a4759de5c1985c64b0cbdb1ddcf0", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 118, "deletions": 32, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c883e5fb6a12718325cebeb653a4ccf4668a723c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c883e5fb6a12718325cebeb653a4ccf4668a723c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c883e5fb6a12718325cebeb653a4ccf4668a723c", "patch": "@@ -15662,40 +15662,67 @@\n    (set_attr \"prefix\" \"<mask_prefix>\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_expand \"avx512f_vpermi2var<mode>3_maskz\"\n-  [(match_operand:VI48F_512 0 \"register_operand\" \"=v\")\n-   (match_operand:VI48F_512 1 \"register_operand\" \"v\")\n+(define_expand \"<avx512>_vpermi2var<mode>3_maskz\"\n+  [(match_operand:VI48F 0 \"register_operand\" \"=v\")\n+   (match_operand:VI48F 1 \"register_operand\" \"v\")\n    (match_operand:<sseintvecmode> 2 \"register_operand\" \"0\")\n-   (match_operand:VI48F_512 3 \"nonimmediate_operand\" \"vm\")\n+   (match_operand:VI48F 3 \"nonimmediate_operand\" \"vm\")\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")]\n   \"TARGET_AVX512F\"\n {\n-  emit_insn (gen_avx512f_vpermi2var<mode>3_maskz_1 (\n+  emit_insn (gen_<avx512>_vpermi2var<mode>3_maskz_1 (\n \toperands[0], operands[1], operands[2], operands[3],\n \tCONST0_RTX (<MODE>mode), operands[4]));\n   DONE;\n })\n \n-(define_insn \"avx512f_vpermi2var<mode>3<sd_maskz_name>\"\n-  [(set (match_operand:VI48F_512 0 \"register_operand\" \"=v\")\n-\t(unspec:VI48F_512\n-\t  [(match_operand:VI48F_512 1 \"register_operand\" \"v\")\n+(define_expand \"<avx512>_vpermi2var<mode>3_maskz\"\n+  [(match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+   (match_operand:VI2_AVX512VL 1 \"register_operand\" \"v\")\n+   (match_operand:<sseintvecmode> 2 \"register_operand\" \"0\")\n+   (match_operand:VI2_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n+   (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")]\n+  \"TARGET_AVX512BW\"\n+{\n+  emit_insn (gen_<avx512>_vpermi2var<mode>3_maskz_1 (\n+\toperands[0], operands[1], operands[2], operands[3],\n+\tCONST0_RTX (<MODE>mode), operands[4]));\n+  DONE;\n+})\n+\n+(define_insn \"<avx512>_vpermi2var<mode>3<sd_maskz_name>\"\n+  [(set (match_operand:VI48F 0 \"register_operand\" \"=v\")\n+\t(unspec:VI48F\n+\t  [(match_operand:VI48F 1 \"register_operand\" \"v\")\n \t   (match_operand:<sseintvecmode> 2 \"register_operand\" \"0\")\n-\t   (match_operand:VI48F_512 3 \"nonimmediate_operand\" \"vm\")]\n+\t   (match_operand:VI48F 3 \"nonimmediate_operand\" \"vm\")]\n \t  UNSPEC_VPERMI2))]\n   \"TARGET_AVX512F\"\n   \"vpermi2<ssemodesuffix>\\t{%3, %1, %0<sd_mask_op4>|%0<sd_mask_op4>, %1, %3}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"avx512f_vpermi2var<mode>3_mask\"\n-  [(set (match_operand:VI48F_512 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI48F_512\n-\t  (unspec:VI48F_512\n-\t    [(match_operand:VI48F_512 1 \"register_operand\" \"v\")\n+(define_insn \"<avx512>_vpermi2var<mode>3<sd_maskz_name>\"\n+  [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI2_AVX512VL\n+\t  [(match_operand:VI2_AVX512VL 1 \"register_operand\" \"v\")\n+\t   (match_operand:<sseintvecmode> 2 \"register_operand\" \"0\")\n+\t   (match_operand:VI2_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_VPERMI2))]\n+  \"TARGET_AVX512BW\"\n+  \"vpermi2<ssemodesuffix>\\t{%3, %1, %0<sd_mask_op4>|%0<sd_mask_op4>, %1, %3}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<avx512>_vpermi2var<mode>3_mask\"\n+  [(set (match_operand:VI48F 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI48F\n+\t  (unspec:VI48F\n+\t    [(match_operand:VI48F 1 \"register_operand\" \"v\")\n \t    (match_operand:<sseintvecmode> 2 \"register_operand\" \"0\")\n-\t    (match_operand:VI48F_512 3 \"nonimmediate_operand\" \"vm\")]\n+\t    (match_operand:VI48F 3 \"nonimmediate_operand\" \"vm\")]\n \t    UNSPEC_VPERMI2_MASK)\n \t  (match_dup 0)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n@@ -15705,40 +15732,83 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_expand \"avx512f_vpermt2var<mode>3_maskz\"\n-  [(match_operand:VI48F_512 0 \"register_operand\" \"=v\")\n+(define_insn \"<avx512>_vpermi2var<mode>3_mask\"\n+  [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI2_AVX512VL\n+\t  (unspec:VI2_AVX512VL\n+\t    [(match_operand:VI2_AVX512VL 1 \"register_operand\" \"v\")\n+\t    (match_operand:<sseintvecmode> 2 \"register_operand\" \"0\")\n+\t    (match_operand:VI2_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPERMI2_MASK)\n+\t  (match_dup 0)\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n+  \"TARGET_AVX512BW\"\n+  \"vpermi2<ssemodesuffix>\\t{%3, %1, %0%{%4%}|%0%{%4%}, %1, %3}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_expand \"<avx512>_vpermt2var<mode>3_maskz\"\n+  [(match_operand:VI48F 0 \"register_operand\" \"=v\")\n    (match_operand:<sseintvecmode> 1 \"register_operand\" \"v\")\n-   (match_operand:VI48F_512 2 \"register_operand\" \"0\")\n-   (match_operand:VI48F_512 3 \"nonimmediate_operand\" \"vm\")\n+   (match_operand:VI48F 2 \"register_operand\" \"0\")\n+   (match_operand:VI48F 3 \"nonimmediate_operand\" \"vm\")\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")]\n   \"TARGET_AVX512F\"\n {\n-  emit_insn (gen_avx512f_vpermt2var<mode>3_maskz_1 (\n+  emit_insn (gen_<avx512>_vpermt2var<mode>3_maskz_1 (\n \toperands[0], operands[1], operands[2], operands[3],\n \tCONST0_RTX (<MODE>mode), operands[4]));\n   DONE;\n })\n \n-(define_insn \"avx512f_vpermt2var<mode>3<sd_maskz_name>\"\n-  [(set (match_operand:VI48F_512 0 \"register_operand\" \"=v\")\n-\t(unspec:VI48F_512\n+(define_expand \"<avx512>_vpermt2var<mode>3_maskz\"\n+  [(match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+   (match_operand:<sseintvecmode> 1 \"register_operand\" \"v\")\n+   (match_operand:VI2_AVX512VL 2 \"register_operand\" \"0\")\n+   (match_operand:VI2_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n+   (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")]\n+  \"TARGET_AVX512BW\"\n+{\n+  emit_insn (gen_<avx512>_vpermt2var<mode>3_maskz_1 (\n+\toperands[0], operands[1], operands[2], operands[3],\n+\tCONST0_RTX (<MODE>mode), operands[4]));\n+  DONE;\n+})\n+\n+(define_insn \"<avx512>_vpermt2var<mode>3<sd_maskz_name>\"\n+  [(set (match_operand:VI48F 0 \"register_operand\" \"=v\")\n+\t(unspec:VI48F\n \t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"v\")\n-\t   (match_operand:VI48F_512 2 \"register_operand\" \"0\")\n-\t   (match_operand:VI48F_512 3 \"nonimmediate_operand\" \"vm\")]\n+\t   (match_operand:VI48F 2 \"register_operand\" \"0\")\n+\t   (match_operand:VI48F 3 \"nonimmediate_operand\" \"vm\")]\n \t  UNSPEC_VPERMT2))]\n   \"TARGET_AVX512F\"\n   \"vpermt2<ssemodesuffix>\\t{%3, %1, %0<sd_mask_op4>|%0<sd_mask_op4>, %1, %3}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"avx512f_vpermt2var<mode>3_mask\"\n-  [(set (match_operand:VI48F_512 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI48F_512\n-\t  (unspec:VI48F_512\n+(define_insn \"<avx512>_vpermt2var<mode>3<sd_maskz_name>\"\n+  [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI2_AVX512VL\n+\t  [(match_operand:<sseintvecmode> 1 \"register_operand\" \"v\")\n+\t   (match_operand:VI2_AVX512VL 2 \"register_operand\" \"0\")\n+\t   (match_operand:VI2_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_VPERMT2))]\n+  \"TARGET_AVX512BW\"\n+  \"vpermt2<ssemodesuffix>\\t{%3, %1, %0<sd_mask_op4>|%0<sd_mask_op4>, %1, %3}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<avx512>_vpermt2var<mode>3_mask\"\n+  [(set (match_operand:VI48F 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI48F\n+\t  (unspec:VI48F\n \t    [(match_operand:<sseintvecmode> 1 \"register_operand\" \"v\")\n-\t    (match_operand:VI48F_512 2 \"register_operand\" \"0\")\n-\t    (match_operand:VI48F_512 3 \"nonimmediate_operand\" \"vm\")]\n+\t    (match_operand:VI48F 2 \"register_operand\" \"0\")\n+\t    (match_operand:VI48F 3 \"nonimmediate_operand\" \"vm\")]\n \t    UNSPEC_VPERMT2)\n \t  (match_dup 2)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n@@ -15748,6 +15818,22 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"<avx512>_vpermt2var<mode>3_mask\"\n+  [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI2_AVX512VL\n+\t  (unspec:VI2_AVX512VL\n+\t    [(match_operand:<sseintvecmode> 1 \"register_operand\" \"v\")\n+\t    (match_operand:VI2_AVX512VL 2 \"register_operand\" \"0\")\n+\t    (match_operand:VI2_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPERMT2)\n+\t  (match_dup 2)\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n+  \"TARGET_AVX512BW\"\n+  \"vpermt2<ssemodesuffix>\\t{%3, %1, %0%{%4%}|%0%{%4%}, %1, %3}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_expand \"avx_vperm2f128<mode>3\"\n   [(set (match_operand:AVX256MODE2P 0 \"register_operand\")\n \t(unspec:AVX256MODE2P"}]}