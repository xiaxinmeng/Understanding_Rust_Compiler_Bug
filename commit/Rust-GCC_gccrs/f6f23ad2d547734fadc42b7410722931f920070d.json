{"sha": "f6f23ad2d547734fadc42b7410722931f920070d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmMjNhZDJkNTQ3NzM0ZmFkYzQyYjc0MTA3MjI5MzFmOTIwMDcwZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-07-18T06:44:35Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-07-18T06:44:35Z"}, "message": "prefix.c: (update_path): Strip \"..\" components when prior dir doesn't exist.\n\n\t* prefix.c: (update_path): Strip \"..\" components when prior dir\n\tdoesn't exist.  Pass correct var to UPDATE_PATH_HOST_CANONICALIZE.\n\nFrom-SVN: r55547", "tree": {"sha": "224ccea990fea0b03c2749de6c53ebde40add5f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/224ccea990fea0b03c2749de6c53ebde40add5f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6f23ad2d547734fadc42b7410722931f920070d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f23ad2d547734fadc42b7410722931f920070d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f23ad2d547734fadc42b7410722931f920070d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f23ad2d547734fadc42b7410722931f920070d/comments", "author": null, "committer": null, "parents": [{"sha": "85272855b5a72f7faafa3b9fb3578621175d799d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85272855b5a72f7faafa3b9fb3578621175d799d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85272855b5a72f7faafa3b9fb3578621175d799d"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "f99c294f9c136f170b4c7b997cc5fac48ca01b19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f23ad2d547734fadc42b7410722931f920070d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f23ad2d547734fadc42b7410722931f920070d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6f23ad2d547734fadc42b7410722931f920070d", "patch": "@@ -1,5 +1,8 @@\n 2002-07-18  Alan Modra  <amodra@bigpond.net.au>\n \n+\t* prefix.c: (update_path): Strip \"..\" components when prior dir\n+\tdoesn't exist.  Pass correct var to UPDATE_PATH_HOST_CANONICALIZE.\n+\n \t* config/rs6000/sysv4.h (ASM_OUTPUT_REG_PUSH): Remove 64-bit support.\n \t(ASM_OUTPUT_REG_POP): Likewise.\n "}, {"sha": "c8f0b98feb40193e481a4f2e845c55c0b13664e9", "filename": "gcc/prefix.c", "status": "modified", "additions": 65, "deletions": 3, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f23ad2d547734fadc42b7410722931f920070d/gcc%2Fprefix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f23ad2d547734fadc42b7410722931f920070d/gcc%2Fprefix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprefix.c?ref=f6f23ad2d547734fadc42b7410722931f920070d", "patch": "@@ -1,5 +1,6 @@\n /* Utility to update paths from internal to external forms.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -251,7 +252,7 @@ update_path (path, key)\n   const char *path;\n   const char *key;\n {\n-  char *result;\n+  char *result, *p;\n \n   if (! strncmp (path, std_prefix, strlen (std_prefix)) && key != 0)\n     {\n@@ -271,9 +272,70 @@ update_path (path, key)\n   else\n     result = xstrdup (path);\n \n+#ifndef ALWAYS_STRIP_DOTDOT\n+#define ALWAYS_STRIP_DOTDOT 0\n+#endif\n+\n+  p = result;\n+  while (1)\n+    {\n+      char *src, *dest;\n+\n+      p = strchr (p, '.');\n+      if (p == NULL)\n+\tbreak;\n+      /* Get rid of a leading `./' and replace `/./' with `/'.  */\n+      if (IS_DIR_SEPARATOR (p[1])\n+\t  && (p == result || IS_DIR_SEPARATOR (p[-1])))\n+\t{\n+\t  src = p + 2;\n+\t  /* Be careful about .//foo  */\n+\t  while (IS_DIR_SEPARATOR (*src))\n+\t    ++src;\n+\t  dest = p;\n+\t  while ((*dest++ = *src++) != 0)\n+\t    ;\n+\t}\n+      /* Look for `/../'  */\n+      else if (p[1] == '.'\n+\t       && IS_DIR_SEPARATOR (p[2])\n+\t       && (p != result && IS_DIR_SEPARATOR (p[-1])))\n+\t{\n+\t  *p = 0;\n+\t  if (!ALWAYS_STRIP_DOTDOT && access (result, X_OK) == 0)\n+\t    {\n+\t      *p = '.';\n+\t      p += 3;\n+\t    }\n+\t  else\n+\t    {\n+\t      /* We can't access the dir, so we won't be able to\n+\t\t access dir/.. either.  Strip out dir/..  We know dir\n+\t\t isn't `.' because we've rid ourselves of `.' path\n+\t\t components above.  */\n+\t      dest = p - 1;\n+\t      while (dest != result && IS_DIR_SEPARATOR (*dest))\n+\t\t--dest;\n+\t      while (dest != result && IS_DIR_SEPARATOR (dest[-1]))\n+\t\t--dest;\n+\t      /* Don't strip leading `/'.  */\n+\t      while (IS_DIR_SEPARATOR (*dest))\n+\t\t++dest;\n+\t      src = p + 3;\n+\t      while (IS_DIR_SEPARATOR (*src))\n+\t\t++src;\n+\t      p = dest;\n+\t      while ((*dest++ = *src++) != 0)\n+\t\t;\n+\t    }\n+\t}\n+      else\n+\t++p;\n+    }\n+\n #ifdef UPDATE_PATH_HOST_CANONICALIZE\n   /* Perform host dependent canonicalization when needed.  */\n-  UPDATE_PATH_HOST_CANONICALIZE (path);\n+  UPDATE_PATH_HOST_CANONICALIZE (result);\n #endif\n \n #ifdef DIR_SEPARATOR_2"}]}