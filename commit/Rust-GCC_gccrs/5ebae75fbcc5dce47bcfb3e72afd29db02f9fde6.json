{"sha": "5ebae75fbcc5dce47bcfb3e72afd29db02f9fde6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWViYWU3NWZiY2M1ZGNlNDdiY2ZiM2U3MmFmZDI5ZGIwMmY5ZmRlNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-01-12T15:01:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-05T08:19:03Z"}, "message": "[Ada] Do not use hash function for enumeration Value with trampolines\n\ngcc/ada/\n\n\t* exp_imgv.adb: Add with/use clauses for Targparm.\n\t(Build_Enumeration_Image_Tables): Set type of Threshold to Nat and\n\tinitialize it to Nat'Last if the type is local and the target does\n\tnot support descriptors.  Adjust Threshold_For_Size similarly.\n\t(Expand_Value_Attribute): Minor tweaks.", "tree": {"sha": "dcea5dfdc44bd45426b17dae3571c25eb5f8023e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcea5dfdc44bd45426b17dae3571c25eb5f8023e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ebae75fbcc5dce47bcfb3e72afd29db02f9fde6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ebae75fbcc5dce47bcfb3e72afd29db02f9fde6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ebae75fbcc5dce47bcfb3e72afd29db02f9fde6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ebae75fbcc5dce47bcfb3e72afd29db02f9fde6/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b7b626376e62560cd36388a85bc734758242713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7b626376e62560cd36388a85bc734758242713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7b626376e62560cd36388a85bc734758242713"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "74fde970ac84fa2763009b6fd9a1ce6295102624", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ebae75fbcc5dce47bcfb3e72afd29db02f9fde6/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ebae75fbcc5dce47bcfb3e72afd29db02f9fde6/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=5ebae75fbcc5dce47bcfb3e72afd29db02f9fde6", "patch": "@@ -43,6 +43,7 @@ with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n with Stand;    use Stand;\n with Stringt;  use Stringt;\n+with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n with Uintp;    use Uintp;\n@@ -104,11 +105,16 @@ package body Exp_Imgv is\n       --  until the end of the processing and to make sure that it is always\n       --  exactly spent on all possible paths from this point.\n \n-      Threshold : constant := 3;\n+      Threshold : constant Nat :=\n+        (if Is_Library_Level_Entity (E)\n+           or else not Always_Compatible_Rep_On_Target\n+         then 3\n+         else Nat'Last);\n       --  Threshold above which we want to generate the hash function in the\n-      --  default case.\n+      --  default case. We avoid doing it if this would cause a trampoline to\n+      --  be generated because the type is local and descriptors are not used.\n \n-      Threshold_For_Size : constant := 9;\n+      Threshold_For_Size : constant Nat := Nat'Max (Threshold, 9);\n       --  But the function and its tables take a bit of space so the threshold\n       --  is raised when compiling for size.\n \n@@ -236,8 +242,9 @@ package body Exp_Imgv is\n \n       Append_Table_To (Act, Eind, Nlit, Ityp, Ind);\n \n-      --  If the number of literals is at most 3, then we are done. Otherwise\n-      --  we compute a (perfect) hash function for use by the Value attribute.\n+      --  If the number of literals is not greater than Threshold, then we are\n+      --  done. Otherwise we compute a (perfect) hash function for use by the\n+      --  Value attribute.\n \n       if Nlit > Threshold then\n          --  We start to count serial numbers from here\n@@ -1483,14 +1490,18 @@ package body Exp_Imgv is\n       Btyp  : constant Entity_Id  := Base_Type (Typ);\n       Rtyp  : constant Entity_Id  := Root_Type (Typ);\n       Exprs : constant List_Id    := Expressions (N);\n-      Vid   : RE_Id;\n       Args  : List_Id;\n       Func  : RE_Id;\n       Ttyp  : Entity_Id;\n+      Vid   : RE_Id;\n \n    begin\n       Args := Exprs;\n \n+      --  Fall through for all cases except user-defined enumeration type\n+      --  and decimal types, with Vid set to the Id of the entity for the\n+      --  Value routine and Args set to the list of parameters for the call.\n+\n       if Rtyp = Standard_Character then\n          Vid := RE_Value_Character;\n \n@@ -1693,10 +1704,6 @@ package body Exp_Imgv is\n          return;\n       end if;\n \n-      --  Fall through for all cases except user-defined enumeration type\n-      --  and decimal types, with Vid set to the Id of the entity for the\n-      --  Value routine and Args set to the list of parameters for the call.\n-\n       --  Compiling package Ada.Tags under No_Run_Time_Mode we disable the\n       --  expansion of the attribute into the function call statement to avoid\n       --  generating spurious errors caused by the use of Integer_Address'Value"}]}