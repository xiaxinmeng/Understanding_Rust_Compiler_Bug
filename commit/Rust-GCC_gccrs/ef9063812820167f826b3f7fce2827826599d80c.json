{"sha": "ef9063812820167f826b3f7fce2827826599d80c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5MDYzODEyODIwMTY3ZjgyNmIzZjdmY2UyODI3ODI2NTk5ZDgwYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-23T20:52:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-23T20:52:44Z"}, "message": "* gcse.c (cprop_jump): Use the REG_EQUAL note if available.\n\nFrom-SVN: r63332", "tree": {"sha": "3ee791fedb3b0e683e67d2b7d4c0e238da919531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ee791fedb3b0e683e67d2b7d4c0e238da919531"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef9063812820167f826b3f7fce2827826599d80c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9063812820167f826b3f7fce2827826599d80c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9063812820167f826b3f7fce2827826599d80c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9063812820167f826b3f7fce2827826599d80c/comments", "author": null, "committer": null, "parents": [{"sha": "7b652bb8ebec8a2f5f193ab4eb457c37a4b59b5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b652bb8ebec8a2f5f193ab4eb457c37a4b59b5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b652bb8ebec8a2f5f193ab4eb457c37a4b59b5a"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "9fb8927c2697736fb546a66d36a8e2e36ad2d23e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9063812820167f826b3f7fce2827826599d80c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9063812820167f826b3f7fce2827826599d80c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef9063812820167f826b3f7fce2827826599d80c", "patch": "@@ -1,3 +1,7 @@\n+2003-02-23  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* gcse.c (cprop_jump): Use the REG_EQUAL note if available.\n+\n 2003-02-23  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* doc/invoke.texi (ggc-min-expand, ggc-min-heapsize): Document"}, {"sha": "27dcc71ad13d3fe368b25883493910974a0c3c1a", "filename": "gcc/gcse.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9063812820167f826b3f7fce2827826599d80c/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9063812820167f826b3f7fce2827826599d80c/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=ef9063812820167f826b3f7fce2827826599d80c", "patch": "@@ -4058,19 +4058,33 @@ cprop_jump (bb, setcc, jump, from, src)\n       && !modified_between_p (src, setcc, jump))\n     {\n       rtx setcc_set = single_set (setcc);\n+      rtx note = find_reg_equal_equiv_note (setcc);\n+      /* Use REG_EQUAL note if available.  */\n+      rtx setcc_set_src = (note == 0) ? SET_SRC (setcc_set) : XEXP (note, 0);\n+\n       new_set = simplify_replace_rtx (SET_SRC (set),\n \t\t\t\t      SET_DEST (setcc_set),\n-\t\t\t\t      SET_SRC (setcc_set));\n+\t\t\t\t      setcc_set_src);\n     }\n   else\n     new_set = set;\n \n-  new = simplify_replace_rtx (new_set, from, src);\n+  /* If NEW_SET is simplified down to either a label or a no-op, we\n+     don't have to replace FROM with SRC, but we still have to either\n+     turn JUMP to an unconditional branch or remove the no-op.  This\n+     can happen if JUMP is simplified using the REG_EQUAL note in\n+     SETCC.  */\n+  if (GET_CODE (new_set) == LABEL_REF || new_set == pc_rtx)\n+    new = new_set;\n+  else\n+    {\n+      new = simplify_replace_rtx (new_set, from, src);\n \n-  /* If no simplification can be made, then try the next\n-     register.  */\n-  if (rtx_equal_p (new, new_set) || rtx_equal_p (new, SET_SRC (set)))\n-    return 0;\n+      /* If no simplification can be made, then try the next\n+\t register.  */\n+      if (rtx_equal_p (new, new_set) || rtx_equal_p (new, SET_SRC (set)))\n+\treturn 0;\n+    }\n \n   /* If this is now a no-op delete it, otherwise this must be a valid insn.  */\n   if (new == pc_rtx)"}]}