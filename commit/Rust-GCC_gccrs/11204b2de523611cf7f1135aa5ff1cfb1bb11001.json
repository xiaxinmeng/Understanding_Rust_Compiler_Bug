{"sha": "11204b2de523611cf7f1135aa5ff1cfb1bb11001", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEyMDRiMmRlNTIzNjExY2Y3ZjExMzVhYTVmZjFjZmIxYmIxMTAwMQ==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@arm.com", "date": "2014-10-21T03:38:37Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-10-21T03:38:37Z"}, "message": "cfgloopanal.c (seq_cost): Delete.\n\n2014-10-21  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\t* cfgloopanal.c (seq_cost): Delete.\n\t* rtl.h (seq_cost): New prototype.\n\t* rtlanal.c (seq_cost): New function.\n\t* tree-ssa-loop-ivopts.c (seq_cost): Delete.\n\nFrom-SVN: r216501", "tree": {"sha": "095a9c0fd61d03f3ccb70c3d847baf69add08e2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/095a9c0fd61d03f3ccb70c3d847baf69add08e2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11204b2de523611cf7f1135aa5ff1cfb1bb11001", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11204b2de523611cf7f1135aa5ff1cfb1bb11001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11204b2de523611cf7f1135aa5ff1cfb1bb11001", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11204b2de523611cf7f1135aa5ff1cfb1bb11001/comments", "author": null, "committer": null, "parents": [{"sha": "eb1da98ac659b13a43deed26f424c83f8da92d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1da98ac659b13a43deed26f424c83f8da92d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1da98ac659b13a43deed26f424c83f8da92d1d"}], "stats": {"total": 68, "additions": 28, "deletions": 40}, "files": [{"sha": "f7dedb56edfd518bf2d1950ea066e1256bf9a77d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11204b2de523611cf7f1135aa5ff1cfb1bb11001", "patch": "@@ -1,3 +1,10 @@\n+2014-10-21  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\t* cfgloopanal.c (seq_cost): Delete.\n+\t* rtl.h (seq_cost): New prototype.\n+\t* rtlanal.c (seq_cost): New function.\n+\t* tree-ssa-loop-ivopts.c (seq_cost): Delete.\n+\n 2014-10-20  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* cfgrtl.h: New.  Add prototypes for cfgrtl.c."}, {"sha": "006b4197028a1bac384c11ceb840d06f8e6e561a", "filename": "gcc/cfgloopanal.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2Fcfgloopanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2Fcfgloopanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.c?ref=11204b2de523611cf7f1135aa5ff1cfb1bb11001", "patch": "@@ -302,26 +302,6 @@ get_loop_level (const struct loop *loop)\n   return mx;\n }\n \n-/* Returns estimate on cost of computing SEQ.  */\n-\n-static unsigned\n-seq_cost (const rtx_insn *seq, bool speed)\n-{\n-  unsigned cost = 0;\n-  rtx set;\n-\n-  for (; seq; seq = NEXT_INSN (seq))\n-    {\n-      set = single_set (seq);\n-      if (set)\n-\tcost += set_rtx_cost (set, speed);\n-      else\n-\tcost++;\n-    }\n-\n-  return cost;\n-}\n-\n /* Initialize the constants for computing set costs.  */\n \n void"}, {"sha": "2c614c328b61685573846212d79842fec304cdcd", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=11204b2de523611cf7f1135aa5ff1cfb1bb11001", "patch": "@@ -2912,6 +2912,7 @@ extern rtx_insn *find_first_parameter_load (rtx_insn *, rtx_insn *);\n extern bool keep_with_call_p (const rtx_insn *);\n extern bool label_is_jump_target_p (const_rtx, const rtx_insn *);\n extern int insn_rtx_cost (rtx, bool);\n+extern unsigned seq_cost (const rtx_insn *, bool);\n \n /* Given an insn and condition, return a canonical description of\n    the test being made.  */"}, {"sha": "6459238db0df1b7ed81578ec5828af1e647ad29f", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=11204b2de523611cf7f1135aa5ff1cfb1bb11001", "patch": "@@ -5051,6 +5051,26 @@ insn_rtx_cost (rtx pat, bool speed)\n   return cost > 0 ? cost : COSTS_N_INSNS (1);\n }\n \n+/* Returns estimate on cost of computing SEQ.  */\n+\n+unsigned\n+seq_cost (const rtx_insn *seq, bool speed)\n+{\n+  unsigned cost = 0;\n+  rtx set;\n+\n+  for (; seq; seq = NEXT_INSN (seq))\n+    {\n+      set = single_set (seq);\n+      if (set)\n+        cost += set_rtx_cost (set, speed);\n+      else\n+        cost++;\n+    }\n+\n+  return cost;\n+}\n+\n /* Given an insn INSN and condition COND, return the condition in a\n    canonical form to simplify testing by callers.  Specifically:\n "}, {"sha": "087ca26fbbaabef5c383ec69272dccc933e26f97", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11204b2de523611cf7f1135aa5ff1cfb1bb11001/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=11204b2de523611cf7f1135aa5ff1cfb1bb11001", "patch": "@@ -2842,26 +2842,6 @@ get_use_iv_cost (struct ivopts_data *data, struct iv_use *use,\n   return NULL;\n }\n \n-/* Returns estimate on cost of computing SEQ.  */\n-\n-static unsigned\n-seq_cost (rtx_insn *seq, bool speed)\n-{\n-  unsigned cost = 0;\n-  rtx set;\n-\n-  for (; seq; seq = NEXT_INSN (seq))\n-    {\n-      set = single_set (seq);\n-      if (set)\n-\tcost += set_src_cost (SET_SRC (set), speed);\n-      else\n-\tcost++;\n-    }\n-\n-  return cost;\n-}\n-\n /* Produce DECL_RTL for object obj so it looks like it is stored in memory.  */\n static rtx\n produce_memory_decl_rtl (tree obj, int *regno)"}]}