{"sha": "3533e503479fcbef4ddeb94cda3c9420e16a1152", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUzM2U1MDM0NzlmY2JlZjRkZGViOTRjZGEzYzk0MjBlMTZhMTE1Mg==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2009-11-29T17:30:20Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2009-11-29T17:30:20Z"}, "message": "re PR middle-end/42193 (454.calculix in SPEC CPU 2006 failed to compile at -O3)\n\n\n\tPR tree-optimization/42193\n\t* tree-vect-stmts.c (vectorizable_operation): Set vectorization factor\n\tto 1 in case of basic block SLP.\n\t(vectorizable_load): Likewise.\n\nFrom-SVN: r154738", "tree": {"sha": "f4c94864c00f84aa363464ac6d301f6714081c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4c94864c00f84aa363464ac6d301f6714081c4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3533e503479fcbef4ddeb94cda3c9420e16a1152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3533e503479fcbef4ddeb94cda3c9420e16a1152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3533e503479fcbef4ddeb94cda3c9420e16a1152", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3533e503479fcbef4ddeb94cda3c9420e16a1152/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6744a6abc335d55f98ba226f4ff169a55cf3fb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6744a6abc335d55f98ba226f4ff169a55cf3fb94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6744a6abc335d55f98ba226f4ff169a55cf3fb94"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "05712c054fe439705551cb7be8cdfb70f2702f15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3533e503479fcbef4ddeb94cda3c9420e16a1152/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3533e503479fcbef4ddeb94cda3c9420e16a1152/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3533e503479fcbef4ddeb94cda3c9420e16a1152", "patch": "@@ -1,3 +1,10 @@\n+2009-11-29  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/42193\n+\t* tree-vect-stmts.c (vectorizable_operation): Set vectorization factor\n+\tto 1 in case of basic block SLP.\n+\t(vectorizable_load): Likewise.\n+\n 2009-11-28  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (same_body_alias_1): Break out of"}, {"sha": "1db21253dd08479da29b1f9898c541fe04a3820f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3533e503479fcbef4ddeb94cda3c9420e16a1152/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3533e503479fcbef4ddeb94cda3c9420e16a1152/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3533e503479fcbef4ddeb94cda3c9420e16a1152", "patch": "@@ -1,3 +1,8 @@\n+2009-11-29  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/42193\n+\t* gcc.dg/vect/pr42193.c: New test.\n+\n 2009-11-28  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/36408"}, {"sha": "01609c982e106b145d138948cf21ead98697153f", "filename": "gcc/testsuite/gcc.dg/vect/pr42193.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3533e503479fcbef4ddeb94cda3c9420e16a1152/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr42193.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3533e503479fcbef4ddeb94cda3c9420e16a1152/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr42193.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr42193.c?ref=3533e503479fcbef4ddeb94cda3c9420e16a1152", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_long } */\n+\n+#include <stdarg.h>\n+\n+unsigned long in[6], out[6];\n+\n+void foo ()\n+{\n+  unsigned long a, b, c, d, e, f;\n+\n+  a = in[0];\n+  b = in[1];\n+  c = in[2];\n+  d = in[3];\n+  e = in[4];\n+  f = in[5];\n+\n+  out[0] = 2 * a + 7 * b + 8  * c + 31 * d + 10 * e + 21 * f;\n+  out[1] = 3 * a + 6 * b + 12 * c + 13 * d + 15 * e + 28 * f;\n+  out[2] = 4 * a + 5 * b + 72  * c + 23 * d + 14 * e + 24 * f;\n+  out[3] = 8 * a + 71 * b + 18  * c + 33 * d + 13 * e + 25 * f;\n+  out[4] = 12 * a + 16 * b + 19 * c + 41 * d + 22 * e + 26 * f;\n+  out[5] = 17 * a + 15 * b + 13  * c + 14 * d + 11 * e + 9 * f;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "7ce91cadb34fe3f61786a80f7b2c01ffafa5bcd1", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3533e503479fcbef4ddeb94cda3c9420e16a1152/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3533e503479fcbef4ddeb94cda3c9420e16a1152/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=3533e503479fcbef4ddeb94cda3c9420e16a1152", "patch": "@@ -1934,8 +1934,7 @@ vectorizable_operation (gimple stmt, gimple_stmt_iterator *gsi,\n   if (loop_vinfo)\n     vf = LOOP_VINFO_VECT_FACTOR (loop_vinfo);\n   else\n-    /* FORNOW: multiple types are not supported in basic block SLP.  */\n-    vf = nunits_in;\n+    vf = 1;\n \n   /* Multiple types in SLP are handled by creating the appropriate number of\n      vectorized stmts for each SLP node. Hence, NCOPIES is always 1 in\n@@ -3279,8 +3278,7 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n       vf = LOOP_VINFO_VECT_FACTOR (loop_vinfo);\n     }\n   else\n-    /* FORNOW: multiple types are not supported in basic block SLP.  */\n-    vf = nunits;\n+    vf = 1;\n \n   /* Multiple types in SLP are handled by creating the appropriate number of\n      vectorized stmts for each SLP node. Hence, NCOPIES is always 1 in"}]}