{"sha": "03e69b1217876cb8dac551b96b2bf05b9e04f9b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNlNjliMTIxNzg3NmNiOGRhYzU1MWI5NmIyYmYwNWI5ZTA0ZjliNg==", "commit": {"author": {"name": "Mikael Pettersson", "email": "mikpe@it.uu.se", "date": "2011-07-31T15:00:58Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2011-07-31T15:00:58Z"}, "message": "Author: Mikael Pettersson <mikpe@it.uu.se>\n\nPR target/47908\n* gcc/config/m68k/m68k.c (m68k_override_options_after_change): New function.\nDisable instruction scheduling for non-ColdFire targets.\n(TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): Define.\n\nFrom-SVN: r176975", "tree": {"sha": "f96ee3cfc342a8d31cb016c012fd9c8e0d87d099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f96ee3cfc342a8d31cb016c012fd9c8e0d87d099"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03e69b1217876cb8dac551b96b2bf05b9e04f9b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e69b1217876cb8dac551b96b2bf05b9e04f9b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e69b1217876cb8dac551b96b2bf05b9e04f9b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e69b1217876cb8dac551b96b2bf05b9e04f9b6/comments", "author": null, "committer": null, "parents": [{"sha": "dcaac07dbf07815294d7f8b1568ef9e157b57dae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcaac07dbf07815294d7f8b1568ef9e157b57dae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcaac07dbf07815294d7f8b1568ef9e157b57dae"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "b637de28a07b5c25227e082123bcc34e6dff078b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e69b1217876cb8dac551b96b2bf05b9e04f9b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e69b1217876cb8dac551b96b2bf05b9e04f9b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03e69b1217876cb8dac551b96b2bf05b9e04f9b6", "patch": "@@ -1,3 +1,10 @@\n+2011-07-31  Mikael Pettersson  <mikpe@it.uu.se>\n+\n+\tPR target/47908\n+\t* config/m68k/m68k.c (m68k_override_options_after_change): New function.\n+\tDisable instruction scheduling for non-ColdFire targets.\n+\t(TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): Define.\n+\n 2011-07-31  Revital Eres  <revital.eres@linaro.org>\n \n \t* ddg.c (create_ddg_dep_from_intra_loop_link): Remove the creation"}, {"sha": "8b57d6cd7403ca23bf0c0ff7c1a844d5062d625c", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e69b1217876cb8dac551b96b2bf05b9e04f9b6/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e69b1217876cb8dac551b96b2bf05b9e04f9b6/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=03e69b1217876cb8dac551b96b2bf05b9e04f9b6", "patch": "@@ -136,6 +136,7 @@ static bool m68k_can_eliminate (const int, const int);\n static void m68k_conditional_register_usage (void);\n static bool m68k_legitimate_address_p (enum machine_mode, rtx, bool);\n static void m68k_option_override (void);\n+static void m68k_override_options_after_change (void);\n static rtx find_addr_reg (rtx);\n static const char *singlemove_string (rtx *);\n static void m68k_output_mi_thunk (FILE *, tree, HOST_WIDE_INT,\n@@ -235,6 +236,9 @@ static bool m68k_cannot_force_const_mem (enum machine_mode mode, rtx x);\n #undef TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE m68k_option_override\n \n+#undef TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE\n+#define TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE m68k_override_options_after_change\n+\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS m68k_rtx_costs\n \n@@ -634,6 +638,19 @@ m68k_option_override (void)\n     }\n }\n \n+/* Implement TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE.  */\n+\n+static void\n+m68k_override_options_after_change (void)\n+{\n+  if (m68k_sched_cpu == CPU_UNKNOWN)\n+    {\n+      flag_schedule_insns = 0;\n+      flag_schedule_insns_after_reload = 0;\n+      flag_modulo_sched = 0;\n+    }\n+}\n+\n /* Generate a macro of the form __mPREFIX_cpu_NAME, where PREFIX is the\n    given argument and NAME is the argument passed to -mcpu.  Return NULL\n    if -mcpu was not passed.  */"}]}