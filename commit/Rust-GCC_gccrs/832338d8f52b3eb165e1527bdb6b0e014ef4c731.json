{"sha": "832338d8f52b3eb165e1527bdb6b0e014ef4c731", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMyMzM4ZDhmNTJiM2ViMTY1ZTE1MjdiZGI2YjBlMDE0ZWY0YzczMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T09:51:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T09:51:55Z"}, "message": "Update comments.\n\nFrom-SVN: r149989", "tree": {"sha": "e7045f661121b26a390c10761188c9d2a8f5c030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7045f661121b26a390c10761188c9d2a8f5c030"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/832338d8f52b3eb165e1527bdb6b0e014ef4c731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832338d8f52b3eb165e1527bdb6b0e014ef4c731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/832338d8f52b3eb165e1527bdb6b0e014ef4c731", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832338d8f52b3eb165e1527bdb6b0e014ef4c731/comments", "author": null, "committer": null, "parents": [{"sha": "33ecc1265b18d7029d3af54a0ee81bdcb7e5aea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ecc1265b18d7029d3af54a0ee81bdcb7e5aea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33ecc1265b18d7029d3af54a0ee81bdcb7e5aea5"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "4b0937a58b1ea383a9a8d6bc1970077d61fdeae4", "filename": "gcc/ada/g-sse.ads", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/832338d8f52b3eb165e1527bdb6b0e014ef4c731/gcc%2Fada%2Fg-sse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/832338d8f52b3eb165e1527bdb6b0e014ef4c731/gcc%2Fada%2Fg-sse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sse.ads?ref=832338d8f52b3eb165e1527bdb6b0e014ef4c731", "patch": "@@ -29,21 +29,26 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This unit is the root of a set aimed at offering Ada bindings to a subset\n---  of the Intel(r) Streaming SIMD Extensions with GNAT.  It exposes vector\n---  _component_ types together with general comments on the binding contents.\n-\n---  The purpose is to allow access from Ada to the SSE facilities defined in\n---  the Intel(r) compiler manuals, in particular in the Intrinsics Reference\n---  of the C++ Compiler User's Guide, available from http://www.intel.com.\n-\n---  As of today, essentially one unit is offered: GNAT.SSE.Vector__Types,\n---  which exposes Ada types corresponding to the reference types (__m128 and\n---  the like) over which GCC builtins will operate.\n-\n---  The exposed Ada types are private. Object initializations or value\n---  observations may be performed with unchecked conversions or address\n---  overlays, for example:\n+--  This package is the root of a set aimed at offering Ada bindings to a\n+--  subset of the Intel(r) Streaming SIMD Extensions with GNAT. The purpose is\n+--  to allow access from Ada to the SSE facilities defined in the Intel(r)\n+--  compiler manuals, in particular in the Intrinsics Reference of the C++\n+--  Compiler User's Guide, available from http://www.intel.com.\n+\n+--  Assuming actual hardware support is available, this capability is\n+--  currently supported on the following set of targets:\n+\n+--     GNU/Linux x86 and x86_64\n+--     Windows XP/Vista x86 and x86_64\n+\n+--  This unit exposes vector _component_ types together with general comments\n+--  on the binding contents.\n+\n+--  As of today, one other unit is offered: GNAT.SSE.Vector__Types, which\n+--  exposes Ada types corresponding to the reference types (__m128 and the\n+--  like) over which GCC builtins will operate. The exposed Ada types are\n+--  private. Object initializations or value observations may be performed\n+--  with unchecked conversions or address overlays, for example:\n \n --  with Ada.Unchecked_Conversion;\n --  with GNAT.SSE.Vector_Types; use GNAT.SSE; use GNAT.SSE.Vector_Types;"}]}