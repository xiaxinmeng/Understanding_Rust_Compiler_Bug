{"sha": "73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNjYjNiNWE0MWRkMzZhZTJmMjUzN2UyMTIxZDI3ZjAwYTZjMzhlZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-05-03T02:29:26Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-05-03T02:29:26Z"}, "message": "re PR java/10491 (gcjh should make enclosing class a \"friend\" of inner classes)\n\n\tPR java/10491:\n\t* gjavah.c (HANDLE_INNERCLASSES_ATTRIBUTE): New macro.\n\t(handle_inner_classes): New function.\n\nFrom-SVN: r66416", "tree": {"sha": "f3e1b27dd0a4b2018740e766f60717b97286c074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3e1b27dd0a4b2018740e766f60717b97286c074"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef/comments", "author": null, "committer": null, "parents": [{"sha": "de7222559c05f8ca95a97ae6b776acec63c954ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de7222559c05f8ca95a97ae6b776acec63c954ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de7222559c05f8ca95a97ae6b776acec63c954ea"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "5fa16b50538838147a94ef3b6b89081ed55a03d6", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef", "patch": "@@ -1,3 +1,9 @@\n+2003-05-02  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/10491:\n+\t* gjavah.c (HANDLE_INNERCLASSES_ATTRIBUTE): New macro.\n+\t(handle_inner_classes): New function.\n+\n 2003-05-01  Tom Tromey  <tromey@redhat.com>\n \n \tPR java/10459:"}, {"sha": "80cccd12a98fe25274c8203ca5a3e2cacb2ad396", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=73cb3b5a41dd36ae2f2537e2121d27f00a6c38ef", "patch": "@@ -160,6 +160,8 @@ static void jni_print_float (FILE *, jfloat);\n static void jni_print_double (FILE *, jdouble);\n static void decompile_return_statement (FILE *, JCF *, int, int, int);\n \n+static void handle_inner_classes (int);\n+\n JCF_u2 current_field_name;\n JCF_u2 current_field_value;\n JCF_u2 current_field_signature;\n@@ -241,6 +243,8 @@ static int decompiled = 0;\n   if (out && method_printed && !method_synthetic) \t\\\n     fputs (decompiled || stubs ? \"\\n\" : \";\\n\", out);\n \n+#define HANDLE_INNERCLASSES_ATTRIBUTE(COUNT) handle_inner_classes (COUNT)\n+\n /* We're going to need {peek,skip}_attribute, enable their definition.   */\n #define NEED_PEEK_ATTRIBUTE\n #define NEED_SKIP_ATTRIBUTE\n@@ -1674,6 +1678,34 @@ super_class_name (JCF *derived_jcf, int *len)\n   return supername;\n }\n \n+static void\n+handle_inner_classes (int count)\n+{\n+  int i;\n+\n+  if (out && ! flag_jni && ! stubs && count > 0)\n+    fprintf (out, \"\\n\");\n+\n+  for (i = 0; i < count; ++i)\n+    {\n+      JCF_u2 inner_info_index = JCF_readu2 (current_jcf);\n+\n+      /* There are a few more values here, but we don't care about\n+\t them.  The (void) cast is apparently the only way to avoid a\n+\t warning here.  */\n+      (void) JCF_readu2 (current_jcf);\n+      (void) JCF_readu2 (current_jcf);\n+      (void) JCF_readu2 (current_jcf);\n+\n+      if (out && ! flag_jni && ! stubs)\n+\t{\n+\t  print_mangled_classname (out, current_jcf, \"  friend class \",\n+\t\t\t\t   inner_info_index);\n+\t  fprintf (out, \";\\n\");\n+\t}\n+    }\n+}\n+\n \f\n \n /* We keep track of all the `#include's we generate, so we can avoid"}]}