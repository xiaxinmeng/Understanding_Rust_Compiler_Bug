{"sha": "be648db7d0f6b1c29d1005dec130b3ef6a348ab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU2NDhkYjdkMGY2YjFjMjlkMTAwNWRlYzEzMGIzZWY2YTM0OGFiMw==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2012-02-07T11:32:10Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2012-02-07T11:32:10Z"}, "message": "* config/epiphany/epiphany.h (LIB_SPEC): Link libc again after libgloss.\n\nFrom-SVN: r183964", "tree": {"sha": "25ee405f3219aeeb6fafa526c1d060ef04992b5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25ee405f3219aeeb6fafa526c1d060ef04992b5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be648db7d0f6b1c29d1005dec130b3ef6a348ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be648db7d0f6b1c29d1005dec130b3ef6a348ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be648db7d0f6b1c29d1005dec130b3ef6a348ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be648db7d0f6b1c29d1005dec130b3ef6a348ab3/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26cfb9ab3d91892d6f6bfde59b6b6010fe467707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26cfb9ab3d91892d6f6bfde59b6b6010fe467707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26cfb9ab3d91892d6f6bfde59b6b6010fe467707"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "e6c03841aea850a5e6bcd0f52ffdc9f07b89d172", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be648db7d0f6b1c29d1005dec130b3ef6a348ab3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be648db7d0f6b1c29d1005dec130b3ef6a348ab3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be648db7d0f6b1c29d1005dec130b3ef6a348ab3", "patch": "@@ -32,6 +32,8 @@\n \t(epiphany_start_function): Handle multiple interrupt arguments and/or\n \tforwarder_section attribute.\n \n+\t* config/epiphany/epiphany.h (LIB_SPEC): Link libc again after libgloss.\n+\n 2012-02-07  Alan Modra  <amodra@gmail.com>\n \n \tPR target/52107"}, {"sha": "92b781f5cea4a93301c6ddbc71ecb39b3b5be206", "filename": "gcc/config/epiphany/epiphany.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be648db7d0f6b1c29d1005dec130b3ef6a348ab3/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be648db7d0f6b1c29d1005dec130b3ef6a348ab3/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.h?ref=be648db7d0f6b1c29d1005dec130b3ef6a348ab3", "patch": "@@ -43,9 +43,11 @@ along with GCC; see the file COPYING3.  If not see\n     } while (0)\n \n /* Pick up the libgloss library. One day we may do this by linker script, but\n-   for now its static. */\n+   for now its static.\n+   libgloss might use errno/__errno, which might not have been needed when we\n+   saw libc the first time, so link with libc a second time.  */\n #undef LIB_SPEC\n-#define LIB_SPEC \"%{!shared:%{g*:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}} -lepiphany\"\n+#define LIB_SPEC \"%{!shared:%{g*:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}} -lepiphany %{!shared:%{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}}\"\n \n #define LINK_SPEC \"%{v}\"\n "}]}