{"sha": "9bed5535322505f1d5f983f22f8179716a898eb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJlZDU1MzUzMjI1MDVmMWQ1Zjk4M2YyMmY4MTc5NzE2YTg5OGViMg==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2016-09-07T04:44:40Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2016-09-07T04:44:40Z"}, "message": "[SH] Move definitions for atomic models to sh.h from sh-protos.h.\n\nFrom-SVN: r240023", "tree": {"sha": "f86096023619f76a05b01a50a4e22a31295c4a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f86096023619f76a05b01a50a4e22a31295c4a76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bed5535322505f1d5f983f22f8179716a898eb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bed5535322505f1d5f983f22f8179716a898eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bed5535322505f1d5f983f22f8179716a898eb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bed5535322505f1d5f983f22f8179716a898eb2/comments", "author": null, "committer": null, "parents": [{"sha": "cdc65c28a6ac260232f578d236630aaf1504e8f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdc65c28a6ac260232f578d236630aaf1504e8f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdc65c28a6ac260232f578d236630aaf1504e8f5"}], "stats": {"total": 122, "additions": 69, "deletions": 53}, "files": [{"sha": "9a62e123965e26acc728cd7bfcd1ffb77b7f110b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bed5535322505f1d5f983f22f8179716a898eb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bed5535322505f1d5f983f22f8179716a898eb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9bed5535322505f1d5f983f22f8179716a898eb2", "patch": "@@ -1,3 +1,15 @@\n+2016-09-07  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh-protos.h (struct sh_atomic_model,\n+\tselected_atomic_model, TARGET_ATOMIC_ANY, TARGET_ATOMIC_STRICT,\n+\tTARGET_ATOMIC_SOFT_GUSA, TARGET_ATOMIC_HARD_LLCS,\n+\tTARGET_ATOMIC_SOFT_TCB, TARGET_ATOMIC_SOFT_IMASK): Move to...\n+\t* config/sh/sh.h (struct sh_atomic_model,\n+\tselected_atomic_model, TARGET_ATOMIC_ANY, TARGET_ATOMIC_STRICT,\n+\tTARGET_ATOMIC_SOFT_GUSA, TARGET_ATOMIC_HARD_LLCS,\n+\tTARGET_ATOMIC_SOFT_TCB, TARGET_ATOMIC_SOFT_IMASK): ...here.\n+\tGuard with __cplusplus.\n+\n 2016-09-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/69255"}, {"sha": "f611dabd6ad0761b0ee3985b4992d6bca1791aa0", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bed5535322505f1d5f983f22f8179716a898eb2/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bed5535322505f1d5f983f22f8179716a898eb2/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=9bed5535322505f1d5f983f22f8179716a898eb2", "patch": "@@ -35,59 +35,6 @@ enum sh_function_kind {\n   SFUNC_STATIC\n };\n \n-/* Atomic model.  */\n-struct sh_atomic_model\n-{\n-  enum enum_type\n-  {\n-    none = 0,\n-    soft_gusa,\n-    hard_llcs,\n-    soft_tcb,\n-    soft_imask,\n-\n-    num_models\n-  };\n-\n-  /*  If strict is set, disallow mixing of different models, as it would\n-      happen on SH4A.  */\n-  bool strict;\n-  enum_type type;\n-\n-  /* Name string as it was specified on the command line.  */\n-  const char* name;\n-\n-  /* Name string as it is used in C/C++ defines.  */\n-  const char* cdef_name;\n-\n-  /* GBR offset variable for TCB model.  */\n-  int tcb_gbr_offset;\n-};\n-\n-extern const sh_atomic_model& selected_atomic_model (void);\n-\n-/* Shortcuts to check the currently selected atomic model.  */\n-#define TARGET_ATOMIC_ANY \\\n-  (selected_atomic_model ().type != sh_atomic_model::none)\n-\n-#define TARGET_ATOMIC_STRICT \\\n-  (selected_atomic_model ().strict)\n-\n-#define TARGET_ATOMIC_SOFT_GUSA \\\n-  (selected_atomic_model ().type == sh_atomic_model::soft_gusa)\n-\n-#define TARGET_ATOMIC_HARD_LLCS \\\n-  (selected_atomic_model ().type == sh_atomic_model::hard_llcs)\n-\n-#define TARGET_ATOMIC_SOFT_TCB \\\n-  (selected_atomic_model ().type == sh_atomic_model::soft_tcb)\n-\n-#define TARGET_ATOMIC_SOFT_TCB_GBR_OFFSET_RTX \\\n-  GEN_INT (selected_atomic_model ().tcb_gbr_offset)\n-\n-#define TARGET_ATOMIC_SOFT_IMASK \\\n-  (selected_atomic_model ().type == sh_atomic_model::soft_imask)\n-\n #ifdef RTX_CODE\n extern rtx sh_fsca_sf2int (void);\n extern rtx sh_fsca_int2sf (void);"}, {"sha": "25b6cee5852bf92324a6750257bff8f1b84bc76a", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bed5535322505f1d5f983f22f8179716a898eb2/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bed5535322505f1d5f983f22f8179716a898eb2/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=9bed5535322505f1d5f983f22f8179716a898eb2", "patch": "@@ -333,6 +333,63 @@ extern enum sh_divide_strategy_e sh_div_strategy;\n #define SH_DIV_STRATEGY_DEFAULT SH_DIV_CALL_DIV1\n #endif\n \n+#ifdef __cplusplus\n+\n+/* Atomic model.  */\n+struct sh_atomic_model\n+{\n+  enum enum_type\n+  {\n+    none = 0,\n+    soft_gusa,\n+    hard_llcs,\n+    soft_tcb,\n+    soft_imask,\n+\n+    num_models\n+  };\n+\n+  /*  If strict is set, disallow mixing of different models, as it would\n+      happen on SH4A.  */\n+  bool strict;\n+  enum_type type;\n+\n+  /* Name string as it was specified on the command line.  */\n+  const char* name;\n+\n+  /* Name string as it is used in C/C++ defines.  */\n+  const char* cdef_name;\n+\n+  /* GBR offset variable for TCB model.  */\n+  int tcb_gbr_offset;\n+};\n+\n+extern const sh_atomic_model& selected_atomic_model (void);\n+\n+/* Shortcuts to check the currently selected atomic model.  */\n+#define TARGET_ATOMIC_ANY \\\n+  (selected_atomic_model ().type != sh_atomic_model::none)\n+\n+#define TARGET_ATOMIC_STRICT \\\n+  (selected_atomic_model ().strict)\n+\n+#define TARGET_ATOMIC_SOFT_GUSA \\\n+  (selected_atomic_model ().type == sh_atomic_model::soft_gusa)\n+\n+#define TARGET_ATOMIC_HARD_LLCS \\\n+  (selected_atomic_model ().type == sh_atomic_model::hard_llcs)\n+\n+#define TARGET_ATOMIC_SOFT_TCB \\\n+  (selected_atomic_model ().type == sh_atomic_model::soft_tcb)\n+\n+#define TARGET_ATOMIC_SOFT_TCB_GBR_OFFSET_RTX \\\n+  GEN_INT (selected_atomic_model ().tcb_gbr_offset)\n+\n+#define TARGET_ATOMIC_SOFT_IMASK \\\n+  (selected_atomic_model ().type == sh_atomic_model::soft_imask)\n+\n+#endif // __cplusplus\n+\n #define SUBTARGET_OVERRIDE_OPTIONS (void) 0\n \n \f"}]}