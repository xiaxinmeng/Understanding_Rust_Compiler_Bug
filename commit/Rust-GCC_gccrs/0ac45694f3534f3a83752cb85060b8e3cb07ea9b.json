{"sha": "0ac45694f3534f3a83752cb85060b8e3cb07ea9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFjNDU2OTRmMzUzNGYzYTgzNzUyY2I4NTA2MGI4ZTNjYjA3ZWE5Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-01-15T12:35:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-01-15T12:35:30Z"}, "message": "i386.md (fyl2xxf3_i387): Rename from fyl2x_xf3.\n\n\t* config/i386/i386.md (fyl2xxf3_i387): Rename from fyl2x_xf3.\n\t(fyl2x_extend<mode>xf3_i387): New insn pattern.\n\t(log<mode>2): Rename from logsf2 and logdf2 and macroize insn\n\tinsn patterns using X87MODEF12 mode macro.  Extend operand 1\n\tto XFmode. Use SSE_FLOAT_MODE_P to disable patterns for SSE math.\n\t(log10<mode>2): Ditto.\n\t(log2<mode>2): Ditto.\n\t(log1p<mode>2): Ditto.\n\t(logb<mode>2): Ditto.\n\t(fyl2xp1xf3_i387): Rename from fyl2xp1_xf3.\n\t(fyl2xp1_extend<mode>xf3_i387): New insn pattern.\n\t(*fxtractxf3_i387): Rename from *fxtractxf3.\n\t(fxtract_extend<mode>xf3_i387): New insn pattern.\n\t(ilogbsi2): Use match_dup 3, not match_operand:XF 3.\n\n\t* config/i386/i386.c (ix86_emit_i387_log1p): Use gen_fyl2xp1xf3_i387()\n\tand gen_fyl2xxf3_i387().\n\nFrom-SVN: r120792", "tree": {"sha": "5ca9982b29eb6d85e79aa0ab31b127a55f4dab63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ca9982b29eb6d85e79aa0ab31b127a55f4dab63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ac45694f3534f3a83752cb85060b8e3cb07ea9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac45694f3534f3a83752cb85060b8e3cb07ea9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac45694f3534f3a83752cb85060b8e3cb07ea9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac45694f3534f3a83752cb85060b8e3cb07ea9b/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5c0f6fe8787df483b1fe914e13bc6576bdd3342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c0f6fe8787df483b1fe914e13bc6576bdd3342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5c0f6fe8787df483b1fe914e13bc6576bdd3342"}], "stats": {"total": 332, "additions": 139, "deletions": 193}, "files": [{"sha": "820c45c55c3d3b48ff0d51b2b18570b7f2f22f7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac45694f3534f3a83752cb85060b8e3cb07ea9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac45694f3534f3a83752cb85060b8e3cb07ea9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ac45694f3534f3a83752cb85060b8e3cb07ea9b", "patch": "@@ -1,3 +1,23 @@\n+2007-01-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (fyl2xxf3_i387): Rename from fyl2x_xf3.\n+\t(fyl2x_extend<mode>xf3_i387): New insn pattern.\n+\t(log<mode>2): Rename from logsf2 and logdf2 and macroize insn\n+\tinsn patterns using X87MODEF12 mode macro.  Extend operand 1\n+\tto XFmode. Use SSE_FLOAT_MODE_P to disable patterns for SSE math.\n+\t(log10<mode>2): Ditto.\n+\t(log2<mode>2): Ditto.\n+\t(log1p<mode>2): Ditto.\n+\t(logb<mode>2): Ditto.\n+\t(fyl2xp1xf3_i387): Rename from fyl2xp1_xf3.\n+\t(fyl2xp1_extend<mode>xf3_i387): New insn pattern.\n+\t(*fxtractxf3_i387): Rename from *fxtractxf3.\n+\t(fxtract_extend<mode>xf3_i387): New insn pattern.\n+\t(ilogbsi2): Use match_dup 3, not match_operand:XF 3.\n+\n+\t* config/i386/i386.c (ix86_emit_i387_log1p): Use gen_fyl2xp1xf3_i387()\n+\tand gen_fyl2xxf3_i387().\n+\n 2007-01-14  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* loop-unswitch.c (unswitch_loop): Do not call fix_loop_placement."}, {"sha": "123c8170822f0a36bdf5464d99f8d4367ca958a2", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac45694f3534f3a83752cb85060b8e3cb07ea9b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac45694f3534f3a83752cb85060b8e3cb07ea9b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0ac45694f3534f3a83752cb85060b8e3cb07ea9b", "patch": "@@ -20143,14 +20143,14 @@ void ix86_emit_i387_log1p (rtx op0, rtx op1)\n   emit_jump_insn (gen_bge (label1));\n \n   emit_move_insn (tmp2, standard_80387_constant_rtx (4)); /* fldln2 */\n-  emit_insn (gen_fyl2xp1_xf3 (op0, tmp2, op1));\n+  emit_insn (gen_fyl2xp1xf3_i387 (op0, op1, tmp2));\n   emit_jump (label2);\n \n   emit_label (label1);\n   emit_move_insn (tmp, CONST1_RTX (XFmode));\n   emit_insn (gen_addxf3 (tmp, op1, tmp));\n   emit_move_insn (tmp2, standard_80387_constant_rtx (4)); /* fldln2 */\n-  emit_insn (gen_fyl2x_xf3 (op0, tmp2, tmp));\n+  emit_insn (gen_fyl2xxf3_i387 (op0, tmp, tmp2));\n \n   emit_label (label2);\n }"}, {"sha": "c4567f699e4197fd3e6c13a4924ff4a5714e518b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 117, "deletions": 191, "changes": 308, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ac45694f3534f3a83752cb85060b8e3cb07ea9b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ac45694f3534f3a83752cb85060b8e3cb07ea9b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=0ac45694f3534f3a83752cb85060b8e3cb07ea9b", "patch": "@@ -16255,247 +16255,178 @@\n   emit_move_insn (operands[3], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n-(define_insn \"fyl2x_xf3\"\n+(define_insn \"fyl2xxf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-        (unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:XF 1 \"register_operand\" \"u\")]\n+        (unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")\n+\t\t    (match_operand:XF 2 \"register_operand\" \"u\")]\n \t           UNSPEC_FYL2X))\n-   (clobber (match_scratch:XF 3 \"=1\"))]\n+   (clobber (match_scratch:XF 3 \"=2\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"fyl2x\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_expand \"logsf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 4)\n-\t\t   (unspec:XF [(match_dup 2)\n-\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:XF 5 \"\"))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 4)))]\n+(define_insn \"fyl2x_extend<mode>xf3_i387\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+        (unspec:XF [(float_extend:XF\n+\t\t      (match_operand:X87MODEF 1 \"register_operand\" \"0\"))\n+\t\t    (match_operand:XF 2 \"register_operand\" \"u\")]\n+\t           UNSPEC_FYL2X))\n+   (clobber (match_scratch:XF 3 \"=2\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n-{\n-  rtx temp;\n+  \"fyl2x\"\n+  [(set_attr \"type\" \"fpspc\")\n+   (set_attr \"mode\" \"XF\")])\n \n+(define_expand \"logxf2\"\n+  [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n+\t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")\n+\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n+\t      (clobber (match_scratch:XF 3 \"\"))])]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+{\n   operands[2] = gen_reg_rtx (XFmode);\n-  operands[3] = gen_reg_rtx (XFmode);\n-  operands[4] = gen_reg_rtx (XFmode);\n-\n-  temp = standard_80387_constant_rtx (4); /* fldln2 */\n-  emit_move_insn (operands[3], temp);\n+  emit_move_insn (operands[2], standard_80387_constant_rtx (4)); /* fldln2 */\n })\n \n-(define_expand \"logdf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 4)\n-\t\t   (unspec:XF [(match_dup 2)\n-\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:XF 5 \"\"))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 4)))]\n+(define_expand \"log<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx temp;\n+  rtx op0 = gen_reg_rtx (XFmode);\n \n   operands[2] = gen_reg_rtx (XFmode);\n-  operands[3] = gen_reg_rtx (XFmode);\n-  operands[4] = gen_reg_rtx (XFmode);\n+  emit_move_insn (operands[2], standard_80387_constant_rtx (4)); /* fldln2 */\n \n-  temp = standard_80387_constant_rtx (4); /* fldln2 */\n-  emit_move_insn (operands[3], temp);\n+  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n+  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+  DONE;\n })\n \n-(define_expand \"logxf2\"\n+(define_expand \"log10xf2\"\n   [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n \t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")\n \t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n \t      (clobber (match_scratch:XF 3 \"\"))])]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx temp;\n-\n   operands[2] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (4); /* fldln2 */\n-  emit_move_insn (operands[2], temp);\n+  emit_move_insn (operands[2], standard_80387_constant_rtx (3)); /* fldlg2 */\n })\n \n-(define_expand \"log10sf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 4)\n-\t\t   (unspec:XF [(match_dup 2)\n-\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:XF 5 \"\"))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 4)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-{\n-  rtx temp;\n-\n-  operands[2] = gen_reg_rtx (XFmode);\n-  operands[3] = gen_reg_rtx (XFmode);\n-  operands[4] = gen_reg_rtx (XFmode);\n-\n-  temp = standard_80387_constant_rtx (3); /* fldlg2 */\n-  emit_move_insn (operands[3], temp);\n-})\n-\n-(define_expand \"log10df2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 4)\n-\t\t   (unspec:XF [(match_dup 2)\n-\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:XF 5 \"\"))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 4)))]\n+(define_expand \"log10<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx temp;\n+  rtx op0 = gen_reg_rtx (XFmode);\n \n   operands[2] = gen_reg_rtx (XFmode);\n-  operands[3] = gen_reg_rtx (XFmode);\n-  operands[4] = gen_reg_rtx (XFmode);\n+  emit_move_insn (operands[2], standard_80387_constant_rtx (3)); /* fldlg2 */\n \n-  temp = standard_80387_constant_rtx (3); /* fldlg2 */\n-  emit_move_insn (operands[3], temp);\n+  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n+  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+  DONE;\n })\n \n-(define_expand \"log10xf2\"\n+(define_expand \"log2xf2\"\n   [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n \t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")\n \t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n \t      (clobber (match_scratch:XF 3 \"\"))])]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n-  rtx temp;\n-\n   operands[2] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (3); /* fldlg2 */\n-  emit_move_insn (operands[2], temp);\n+  emit_move_insn (operands[2], CONST1_RTX (XFmode)); /* fld1 */\n })\n \n-(define_expand \"log2sf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 4)\n-\t\t   (unspec:XF [(match_dup 2)\n-\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:XF 5 \"\"))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 4)))]\n+(define_expand \"log2<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n {\n-  operands[2] = gen_reg_rtx (XFmode);\n-  operands[3] = gen_reg_rtx (XFmode);\n-  operands[4] = gen_reg_rtx (XFmode);\n-\n-  emit_move_insn (operands[3], CONST1_RTX (XFmode));  /* fld1 */\n-})\n+  rtx op0 = gen_reg_rtx (XFmode);\n \n-(define_expand \"log2df2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 4)\n-\t\t   (unspec:XF [(match_dup 2)\n-\t\t\t       (match_dup 3)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:XF 5 \"\"))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 4)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-{\n   operands[2] = gen_reg_rtx (XFmode);\n-  operands[3] = gen_reg_rtx (XFmode);\n-  operands[4] = gen_reg_rtx (XFmode);\n+  emit_move_insn (operands[2], CONST1_RTX (XFmode)); /* fld1 */\n \n-  emit_move_insn (operands[3], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n+  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+  DONE;\n })\n \n-(define_expand \"log2xf2\"\n-  [(parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n-\t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)] UNSPEC_FYL2X))\n-\t      (clobber (match_scratch:XF 3 \"\"))])]\n+(define_insn \"fyl2xp1xf3_i387\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+        (unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")\n+\t\t    (match_operand:XF 2 \"register_operand\" \"u\")]\n+\t           UNSPEC_FYL2XP1))\n+   (clobber (match_scratch:XF 3 \"=2\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n-{\n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], CONST1_RTX (XFmode));  /* fld1 */\n-})\n+  \"fyl2xp1\"\n+  [(set_attr \"type\" \"fpspc\")\n+   (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"fyl2xp1_xf3\"\n+(define_insn \"fyl2xp1_extend<mode>xf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-        (unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n-\t\t    (match_operand:XF 1 \"register_operand\" \"u\")]\n+        (unspec:XF [(float_extend:XF\n+\t\t      (match_operand:X87MODEF12 1 \"register_operand\" \"0\"))\n+\t\t    (match_operand:XF 2 \"register_operand\" \"u\")]\n \t           UNSPEC_FYL2XP1))\n-   (clobber (match_scratch:XF 3 \"=1\"))]\n+   (clobber (match_scratch:XF 3 \"=2\"))]\n   \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n   \"fyl2xp1\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_expand \"log1psf2\"\n-  [(use (match_operand:SF 0 \"register_operand\" \"\"))\n-   (use (match_operand:SF 1 \"register_operand\" \"\"))]\n+(define_expand \"log1pxf2\"\n+  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  rtx op0 = gen_reg_rtx (XFmode);\n-  rtx op1 = gen_reg_rtx (XFmode);\n-\n-  emit_insn (gen_extendsfxf2 (op1, operands[1]));\n-  ix86_emit_i387_log1p (op0, op1);\n-  emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n+  ix86_emit_i387_log1p (operands[0], operands[1]);\n   DONE;\n })\n \n-(define_expand \"log1pdf2\"\n-  [(use (match_operand:DF 0 \"register_operand\" \"\"))\n-   (use (match_operand:DF 1 \"register_operand\" \"\"))]\n+(define_expand \"log1p<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n-  rtx op1 = gen_reg_rtx (XFmode);\n \n-  emit_insn (gen_extenddfxf2 (op1, operands[1]));\n-  ix86_emit_i387_log1p (op0, op1);\n-  emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n-  DONE;\n-})\n+  operands[1] = gen_rtx_FLOAT_EXTEND (XFmode, operands[1]);\n \n-(define_expand \"log1pxf2\"\n-  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  ix86_emit_i387_log1p (operands[0], operands[1]);\n+  ix86_emit_i387_log1p (op0, operands[1]);\n+  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n   DONE;\n })\n \n-(define_insn \"*fxtractxf3\"\n+(define_insn \"*fxtractxf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")]\n \t\t   UNSPEC_XTRACT_FRACT))\n@@ -16507,41 +16438,20 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_expand \"logbsf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 3)\n-\t\t   (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_FRACT))\n-\t      (set (match_dup 4)\n-\t\t   (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_EXP))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 4)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n-{\n-  operands[2] = gen_reg_rtx (XFmode);\n-  operands[3] = gen_reg_rtx (XFmode);\n-  operands[4] = gen_reg_rtx (XFmode);\n-})\n-\n-(define_expand \"logbdf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 3)\n-\t\t   (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_FRACT))\n-\t      (set (match_dup 4)\n-\t\t   (unspec:XF [(match_dup 2)] UNSPEC_XTRACT_EXP))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 4)))]\n+(define_insn \"fxtract_extend<mode>xf3_i387\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(unspec:XF [(float_extend:XF\n+\t\t      (match_operand:X87MODEF12 2 \"register_operand\" \"0\"))]\n+\t\t   UNSPEC_XTRACT_FRACT))\n+   (set (match_operand:XF 1 \"register_operand\" \"=u\")\n+        (unspec:XF [(float_extend:XF (match_dup 2))] UNSPEC_XTRACT_EXP))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\"\n-{\n-  operands[2] = gen_reg_rtx (XFmode);\n-  operands[3] = gen_reg_rtx (XFmode);\n-  operands[4] = gen_reg_rtx (XFmode);\n-})\n+  \"fxtract\"\n+  [(set_attr \"type\" \"fpspc\")\n+   (set_attr \"mode\" \"XF\")])\n \n (define_expand \"logbxf2\"\n   [(parallel [(set (match_dup 2)\n@@ -16555,11 +16465,27 @@\n   operands[2] = gen_reg_rtx (XFmode);\n })\n \n+(define_expand \"logb<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"register_operand\" \"\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n+   && flag_unsafe_math_optimizations\"\n+{\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n+\n+  emit_insn (gen_fxtract_extend<mode>xf3_i387 (op0, op1, operands[1]));\n+  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op1));\n+  DONE;\n+})\n+\n (define_expand \"ilogbsi2\"\n   [(parallel [(set (match_dup 2)\n \t\t   (unspec:XF [(match_operand:XF 1 \"register_operand\" \"\")]\n \t\t\t      UNSPEC_XTRACT_FRACT))\n-\t      (set (match_operand:XF 3 \"register_operand\" \"\")\n+\t      (set (match_dup 3)\n \t\t   (unspec:XF [(match_dup 1)] UNSPEC_XTRACT_EXP))])\n    (parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t           (fix:SI (match_dup 3)))"}]}