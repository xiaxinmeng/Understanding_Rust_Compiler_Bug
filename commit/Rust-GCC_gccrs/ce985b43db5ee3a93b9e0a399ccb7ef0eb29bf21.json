{"sha": "ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5ODViNDNkYjVlZTNhOTNiOWUwYTM5OWNjYjdlZjBlYjI5YmYyMQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2009-05-13T20:14:44Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2009-05-13T20:14:44Z"}, "message": "re PR middle-end/39976 (Big sixtrack degradation on powerpc 32/64 after revision r146817)\n\n        PR middle-end/39976\n        * tree-outof-ssa.c (maybe_renumber_stmts_bb): New function.\n        (trivially_conflicts_p): New function.\n        (insert_backedge_copies): Use it.\n\nFrom-SVN: r147494", "tree": {"sha": "4aaddc646aa27ee398989ed9432801136fd001c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4aaddc646aa27ee398989ed9432801136fd001c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7de1d221ea7656b9def2fa50a47ccae953c48ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de1d221ea7656b9def2fa50a47ccae953c48ccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de1d221ea7656b9def2fa50a47ccae953c48ccc"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "1a3b594ee42b67970cd154d993f2556e2fe39c48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21", "patch": "@@ -1,3 +1,10 @@\n+2009-05-13  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/39976\n+\t* tree-outof-ssa.c (maybe_renumber_stmts_bb): New function.\n+\t(trivially_conflicts_p): New function.\n+\t(insert_backedge_copies): Use it.\n+\n 2009-05-13  Janis Johnson  <janis187@us.ibm.com>\n \n \t* c-pragma.c (enum pragma_switch_t): Prefix constants with PRAGMA_."}, {"sha": "4ed8e9fbdf063f736a12132c6316a7c7d77d1947", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 69, "deletions": 1, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=ce985b43db5ee3a93b9e0a399ccb7ef0eb29bf21", "patch": "@@ -853,6 +853,67 @@ remove_ssa_form (bool perform_ter, struct ssaexpand *sa)\n }\n \n \n+/* If not already done so for basic block BB, assign increasing uids\n+   to each of its instructions.  */\n+\n+static void\n+maybe_renumber_stmts_bb (basic_block bb)\n+{\n+  unsigned i = 0;\n+  gimple_stmt_iterator gsi;\n+  \n+  if (!bb->aux)\n+    return;\n+  bb->aux = NULL;\n+  for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+    {\n+      gimple stmt = gsi_stmt (gsi);\n+      gimple_set_uid (stmt, i);\n+      i++;\n+    }\n+}\n+\n+\n+/* Return true if we can determine that the SSA_NAMEs RESULT (a result\n+   of a PHI node) and ARG (one of its arguments) conflict.  Return false\n+   otherwise, also when we simply aren't sure.  */\n+\n+static bool\n+trivially_conflicts_p (basic_block bb, tree result, tree arg)\n+{\n+  use_operand_p use;\n+  imm_use_iterator imm_iter;\n+  gimple defa = SSA_NAME_DEF_STMT (arg);\n+\n+  /* If ARG isn't defined in the same block it's too complicated for\n+     our little mind.  */\n+  if (gimple_bb (defa) != bb)\n+    return false;\n+\n+  FOR_EACH_IMM_USE_FAST (use, imm_iter, result)\n+    {\n+      gimple use_stmt = USE_STMT (use);\n+      /* Now, if there's a use of RESULT that lies outside this basic block,\n+\t then there surely is a conflict with ARG.  */\n+      if (gimple_bb (use_stmt) != bb)\n+\treturn true;\n+      if (gimple_code (use_stmt) == GIMPLE_PHI)\n+\tcontinue;\n+      /* The use now is in a real stmt of BB, so if ARG was defined\n+         in a PHI node (like RESULT) both conflict.  */\n+      if (gimple_code (defa) == GIMPLE_PHI)\n+\treturn true;\n+      maybe_renumber_stmts_bb (bb);\n+      /* If the use of RESULT occurs after the definition of ARG,\n+         the two conflict too.  */\n+      if (gimple_uid (defa) < gimple_uid (use_stmt))\n+\treturn true;\n+    }\n+  \n+  return false;\n+}\n+\n+\n /* Search every PHI node for arguments associated with backedges which\n    we can trivially determine will need a copy (the argument is either\n    not an SSA_NAME or the argument has a different underlying variable\n@@ -870,6 +931,9 @@ insert_backedge_copies (void)\n \n   FOR_EACH_BB (bb)\n     {\n+      /* Mark block as possibly needing calculation of UIDs.  */\n+      bb->aux = &bb->aux;\n+\n       for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \t{\n \t  gimple phi = gsi_stmt (gsi);\n@@ -892,7 +956,8 @@ insert_backedge_copies (void)\n \t\t needed.  */\n \t      if ((e->flags & EDGE_DFS_BACK)\n \t\t  && (TREE_CODE (arg) != SSA_NAME\n-\t\t      || SSA_NAME_VAR (arg) != result_var))\n+\t\t      || SSA_NAME_VAR (arg) != result_var\n+\t\t      || trivially_conflicts_p (bb, result, arg)))\n \t\t{\n \t\t  tree name;\n \t\t  gimple stmt, last = NULL;\n@@ -936,6 +1001,9 @@ insert_backedge_copies (void)\n \t\t}\n \t    }\n \t}\n+\n+      /* Unmark this block again.  */\n+      bb->aux = NULL;\n     }\n }\n "}]}