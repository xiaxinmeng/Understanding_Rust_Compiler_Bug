{"sha": "039d9ea1843014ca798de2117edb70e65d0e554e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5ZDllYTE4NDMwMTRjYTc5OGRlMjExN2VkYjcwZTY1ZDBlNTU0ZQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-09-19T14:23:40Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-09-19T14:23:40Z"}, "message": "re PR tree-optimization/45714 (Vectorization of double pow function causes a segmentation fault)\n\n\n\tPR tree-optimization/45714\n\t* tree-vect-stmts.c (vect_transform_stmt): Use a dummy statement \n\tcreated in vectorizable_call instead of the original statement in \n\tdef stmt updates.\n\nFrom-SVN: r164420", "tree": {"sha": "cd497f7af39b24fc6b54ea036f9b0ec58dcf999e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd497f7af39b24fc6b54ea036f9b0ec58dcf999e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/039d9ea1843014ca798de2117edb70e65d0e554e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039d9ea1843014ca798de2117edb70e65d0e554e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039d9ea1843014ca798de2117edb70e65d0e554e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039d9ea1843014ca798de2117edb70e65d0e554e/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66de86b074de01ffe1206cafaaf33d9febfc35a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66de86b074de01ffe1206cafaaf33d9febfc35a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66de86b074de01ffe1206cafaaf33d9febfc35a7"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "f39625cca5cfbf5d50aa46f6ee99405746157ef5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=039d9ea1843014ca798de2117edb70e65d0e554e", "patch": "@@ -1,3 +1,10 @@\n+2010-09-19  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/45714\n+\t* tree-vect-stmts.c (vect_transform_stmt): Use a dummy statement\n+\tcreated in vectorizable_call instead of the original statement in\n+\tdef stmt updates.\n+\n 2010-09-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386-protos.h (split_double_mode): New prototype."}, {"sha": "1ae06e4500590411abff3af0a3d787f9062852ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=039d9ea1843014ca798de2117edb70e65d0e554e", "patch": "@@ -1,3 +1,9 @@\n+2010-09-19  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/45714\n+\t* gfortran.dg/vect/pr45714-a.f: New test.\n+\t* gfortran.dg/vect/pr45714-b.f: New test.\n+\n 2010-09-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/const1.adb: Rename into..."}, {"sha": "dd99d1fe56a858e5430f924153f40db228d0ba0a", "filename": "gcc/testsuite/gfortran.dg/vect/pr45714-a.f", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-a.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-a.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-a.f?ref=039d9ea1843014ca798de2117edb70e65d0e554e", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile { target x86_64-*-* } }\n+! { dg-options \"-O3 -march=core2 -mavx -ffast-math -mveclibabi=svml\" }\n+\n+      integer index(18),i,j,k,l,ipiv(18),info,ichange,neq,lda,ldb,\n+     &  nrhs,iplas\n+      real*8 ep0(6),al10(18),al20(18),dg0(18),ep(6),al1(18),\n+     &  al2(18),dg(18),ddg(18),xm(6,18),h(18,18),ck(18),cn(18),\n+     &  c(18),d(18),phi(18),delta(18),r0(18),q(18),b(18),cphi(18),\n+     &  q1(18),q2(18),stri(6),htri(18),sg(18),r(42),xmc(6,18),aux(18),\n+     &  t(42),gl(18,18),gr(18,18),ee(6),c1111,c1122,c1212,dd,\n+     &  skl(3,3),xmtran(3,3),ddsdde(6,6),xx(6,18)\n+      do\n+         do i=1,18\n+            htri(i)=dabs(sg(i))-r0(i)-ck(i)*(dg(i)/dtime)**(1.d0/cn(i))\n+            do j=1,18\n+            enddo\n+         enddo\n+         do\n+                  if(i.ne.j) then\n+                  gr(index(i),1)=htri(i)\n+               endif\n+            call dgesv(neq,nrhs,gl,lda,ipiv,gr,ldb,info)\n+         enddo\n+      enddo\n+      end\n+\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "a536e1f598ffb286cdb7177fe80b0ad2977338cb", "filename": "gcc/testsuite/gfortran.dg/vect/pr45714-b.f", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-b.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-b.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr45714-b.f?ref=039d9ea1843014ca798de2117edb70e65d0e554e", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile { target powerpc*-*-* } }\n+! { dg-options \"-O3 -mcpu=power7 -ffast-math -mveclibabi=mass\" }\n+\n+      integer index(18),i,j,k,l,ipiv(18),info,ichange,neq,lda,ldb,\n+     &  nrhs,iplas\n+      real*8 ep0(6),al10(18),al20(18),dg0(18),ep(6),al1(18),\n+     &  al2(18),dg(18),ddg(18),xm(6,18),h(18,18),ck(18),cn(18),\n+     &  c(18),d(18),phi(18),delta(18),r0(18),q(18),b(18),cphi(18),\n+     &  q1(18),q2(18),stri(6),htri(18),sg(18),r(42),xmc(6,18),aux(18),\n+     &  t(42),gl(18,18),gr(18,18),ee(6),c1111,c1122,c1212,dd,\n+     &  skl(3,3),xmtran(3,3),ddsdde(6,6),xx(6,18)\n+      do\n+         do i=1,18\n+            htri(i)=dabs(sg(i))-r0(i)-ck(i)*(dg(i)/dtime)**(1.d0/cn(i))\n+            do j=1,18\n+            enddo\n+         enddo\n+         do\n+                  if(i.ne.j) then\n+                  gr(index(i),1)=htri(i)\n+               endif\n+            call dgesv(neq,nrhs,gl,lda,ipiv,gr,ldb,info)\n+         enddo\n+      enddo\n+      end\n+\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "b120dc60961144b6a4edf06520f874629a1028cd", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039d9ea1843014ca798de2117edb70e65d0e554e/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=039d9ea1843014ca798de2117edb70e65d0e554e", "patch": "@@ -4516,7 +4516,7 @@ vect_transform_stmt (gimple stmt, gimple_stmt_iterator *gsi,\n   bool is_store = false;\n   gimple vec_stmt = NULL;\n   stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n-  gimple orig_stmt_in_pattern;\n+  gimple orig_stmt_in_pattern, orig_scalar_stmt = stmt;\n   bool done;\n \n   switch (STMT_VINFO_TYPE (stmt_info))\n@@ -4584,6 +4584,7 @@ vect_transform_stmt (gimple stmt, gimple_stmt_iterator *gsi,\n     case call_vec_info_type:\n       gcc_assert (!slp_node);\n       done = vectorizable_call (stmt, gsi, &vec_stmt);\n+      stmt = gsi_stmt (*gsi);\n       break;\n \n     case reduc_vec_info_type:\n@@ -4662,7 +4663,8 @@ vect_transform_stmt (gimple stmt, gimple_stmt_iterator *gsi,\n \t     documentation of vect_pattern_recog.  */\n \t  if (STMT_VINFO_IN_PATTERN_P (stmt_vinfo))\n \t    {\n-\t      gcc_assert (STMT_VINFO_RELATED_STMT (stmt_vinfo) == stmt);\n+\t      gcc_assert (STMT_VINFO_RELATED_STMT (stmt_vinfo)\n+                           == orig_scalar_stmt);\n \t      STMT_VINFO_VEC_STMT (stmt_vinfo) = vec_stmt;\n \t    }\n \t}"}]}