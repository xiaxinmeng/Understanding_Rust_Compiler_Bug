{"sha": "619fdc9c7a57494aed214046d1a06e59a614ce4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE5ZmRjOWM3YTU3NDk0YWVkMjE0MDQ2ZDFhMDZlNTlhNjE0Y2U0YQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-06T16:02:40Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-06T16:02:40Z"}, "message": "(convert_for_assignment): Don't use convert_and_check\nwhen handling arithmetic types here.\n\nFrom-SVN: r4358", "tree": {"sha": "493c6853187af9ca4e4c7f73daa4a7c5ce6185d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/493c6853187af9ca4e4c7f73daa4a7c5ce6185d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/619fdc9c7a57494aed214046d1a06e59a614ce4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619fdc9c7a57494aed214046d1a06e59a614ce4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619fdc9c7a57494aed214046d1a06e59a614ce4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619fdc9c7a57494aed214046d1a06e59a614ce4a/comments", "author": null, "committer": null, "parents": [{"sha": "266dd51787cc66eb06c1aeb7598eda623fd6ed57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266dd51787cc66eb06c1aeb7598eda623fd6ed57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266dd51787cc66eb06c1aeb7598eda623fd6ed57"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "088e877403aa4437c9d4a2105081273f7155c647", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619fdc9c7a57494aed214046d1a06e59a614ce4a/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619fdc9c7a57494aed214046d1a06e59a614ce4a/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=619fdc9c7a57494aed214046d1a06e59a614ce4a", "patch": "@@ -4148,7 +4148,11 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n        &&\n       (coder == INTEGER_TYPE || coder == REAL_TYPE || coder == ENUMERAL_TYPE\n        || codel == COMPLEX_TYPE))\n-    return convert_and_check (type, rhs);\n+    /* Don't use convert_and_check here.  If the input has type int\n+       and did not overflow, and we are converting it here to a short,\n+       we don't want an error.  A warning would be okay, but it's too risky now\n+       to add an option to convert_and_check to get just warnings.  */\n+    return convert (type, rhs);\n   /* Conversion to a union from its member types.  */\n   else if (codel == UNION_TYPE)\n     {"}]}