{"sha": "2293611f2d8e681b56663eea97cce0d11288ceb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI5MzYxMWYyZDhlNjgxYjU2NjYzZWVhOTdjY2UwZDExMjg4Y2ViNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-17T14:07:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-17T14:07:11Z"}, "message": "[multiple changes]\n\n2012-02-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_aggr.adb: Minor reformatting.\n\n2012-02-17  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Update doc for -gnatw.m to include 2*x case.\n\n2012-02-17  Vincent Pucci  <pucci@adacore.com>\n\n\t* sem_dim.adb (Is_Dim_IO_Package_Entity): New routine.\n\t(Is_Dim_IO_Package_Instantiation): Is_Dim_IO_Package_Entity\n\tcall added.\n\t(Is_Procedure_Put_Call): Is_Dim_IO_Package_Entity\n\tcall added.\n\t* s-dim.ads: Make package Pure.\n\n2012-02-17  Gary Dismukes  <dismukes@adacore.com>\n\n\t* prj-nmsc.adb: Minor reformatting.\n\n2012-02-17  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi: Update GNAT RM with a separate chapter on restrictions.\n\nFrom-SVN: r184338", "tree": {"sha": "85ca130355bf18225671b8fd15ab68be877b1678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85ca130355bf18225671b8fd15ab68be877b1678"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2293611f2d8e681b56663eea97cce0d11288ceb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2293611f2d8e681b56663eea97cce0d11288ceb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2293611f2d8e681b56663eea97cce0d11288ceb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2293611f2d8e681b56663eea97cce0d11288ceb6/comments", "author": null, "committer": null, "parents": [{"sha": "0df7e2d0ec74c326a74a62a352528b6fa1e73449", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df7e2d0ec74c326a74a62a352528b6fa1e73449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df7e2d0ec74c326a74a62a352528b6fa1e73449"}], "stats": {"total": 4471, "additions": 2536, "deletions": 1935}, "files": [{"sha": "73943204273d003cc25ce4ab5ebb152efe438a9b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2293611f2d8e681b56663eea97cce0d11288ceb6", "patch": "@@ -1,3 +1,28 @@\n+2012-02-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_aggr.adb: Minor reformatting.\n+\n+2012-02-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Update doc for -gnatw.m to include 2*x case.\n+\n+2012-02-17  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* sem_dim.adb (Is_Dim_IO_Package_Entity): New routine.\n+\t(Is_Dim_IO_Package_Instantiation): Is_Dim_IO_Package_Entity\n+\tcall added.\n+\t(Is_Procedure_Put_Call): Is_Dim_IO_Package_Entity\n+\tcall added.\n+\t* s-dim.ads: Make package Pure.\n+\n+2012-02-17  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* prj-nmsc.adb: Minor reformatting.\n+\n+2012-02-17  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_rm.texi: Update GNAT RM with a separate chapter on restrictions.\n+\n 2012-02-17  Yannick Moy  <moy@adacore.com>\n \n \t* gnat_ugn.texi: Fix typos."}, {"sha": "86e0620118f7f1ad71652c1da268c9d6108be497", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2471, "deletions": 1908, "changes": 4379, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=2293611f2d8e681b56663eea97cce0d11288ceb6"}, {"sha": "4d0c01c335c18d6540485154cbeecc38f7723c94", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=2293611f2d8e681b56663eea97cce0d11288ceb6", "patch": "@@ -5472,7 +5472,9 @@ This switch activates warnings for modulus values that seem suspicious.\n The cases caught are where the size is the same as the modulus (e.g.\n a modulus of 7 with a size of 7 bits), and modulus values of 32 or 64\n with no size clause. The guess in both cases is that 2**x was intended\n-rather than x. The default is that these warnings are given.\n+rather than x. In addition expressions of the form 2*x for small x\n+generate a warning (the almost certainly accurate guess being that\n+2**x was intended). The default is that these warnings are given.\n \n @item -gnatw.M\n @emph{Disable warnings on suspicious modulus values.}"}, {"sha": "284f9f0b6e545ca3c6eb0519bdf71664609df5c5", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=2293611f2d8e681b56663eea97cce0d11288ceb6", "patch": "@@ -8175,7 +8175,7 @@ package body Prj.Nmsc is\n          procedure Check_Aggregated\n            (Project : Project_Id;\n             Data    : in out Tree_Processing_Data);\n-         --  Check aggregated projets which should not be externally built.\n+         --  Check aggregated projects which should not be externally built.\n          --  What is Data??? if same as outer Data, why passed???\n          --  What exact check is performed here??? Seems a bad idea to have\n          --  two procedures with such close names ???"}, {"sha": "ceb10d4673701d93961cc98d87a2ff1bb64a76f7", "filename": "gcc/ada/s-dim.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fs-dim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fs-dim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dim.ads?ref=2293611f2d8e681b56663eea97cce0d11288ceb6", "patch": "@@ -66,4 +66,6 @@\n --      'm' is the symbolic name of dimensioned subtype Length\n \n package System.Dim is\n+   pragma Pure;\n+\n end System.Dim;"}, {"sha": "993235210bba9983b74836808a32719b714c83ef", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=2293611f2d8e681b56663eea97cce0d11288ceb6", "patch": "@@ -3920,9 +3920,10 @@ package body Sem_Aggr is\n                  and then Present (Expression (Parent (Component)))\n                then\n                   Expr :=\n-                    New_Copy_Tree (Expression (Parent (Component)),\n-                     New_Scope => Current_Scope,\n-                      New_Sloc => Sloc (N));\n+                    New_Copy_Tree\n+                      (Expression (Parent (Component)),\n+                       New_Scope => Current_Scope,\n+                       New_Sloc  => Sloc (N));\n \n                   Add_Association\n                     (Component  => Component,"}, {"sha": "8e65d227510380c20881dc886b64c3fa5724eae8", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 30, "deletions": 22, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2293611f2d8e681b56663eea97cce0d11288ceb6/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=2293611f2d8e681b56663eea97cce0d11288ceb6", "patch": "@@ -311,6 +311,10 @@ package body Sem_Dim is\n    --  Given a dimension vector and a dimension system, return the proper\n    --  string of symbols.\n \n+   function Is_Dim_IO_Package_Entity (E : Entity_Id) return Boolean;\n+   --  Return True if E is the package entity of System.Dim.Float_IO or\n+   --  System.Dim.Integer_IO.\n+\n    function Is_Invalid (Position : Dimension_Position) return Boolean;\n    --  Return True if Pos denotes the invalid position\n \n@@ -2165,7 +2169,6 @@ package body Sem_Dim is\n       Dims_Of_Actual : Dimension_Type;\n       Etyp           : Entity_Id;\n       New_Str_Lit    : Node_Id := Empty;\n-      Package_Name   : Name_Id;\n       System         : System_Type;\n \n       function Has_Dimension_Symbols return Boolean;\n@@ -2240,19 +2243,10 @@ package body Sem_Dim is\n             then\n                Ent := Cunit_Entity (Get_Source_Unit (Ent));\n \n-               --  Verify that the generic package is System.Dim.Float_IO or\n-               --  System.Dim.Integer_IO.\n-\n-               if Is_Library_Level_Entity (Ent) then\n-                  Package_Name := Chars (Ent);\n+               --  Verify that the generic package is either\n+               --  System.Dim.Float_IO or System.Dim.Integer_IO.\n \n-                  if Package_Name = Name_Float_IO\n-                       or else\n-                     Package_Name = Name_Integer_IO\n-                  then\n-                     return Chars (Scope (Ent)) = Name_Dim;\n-                  end if;\n-               end if;\n+               return Is_Dim_IO_Package_Entity (Ent);\n             end if;\n          end if;\n \n@@ -2501,6 +2495,26 @@ package body Sem_Dim is\n       return Exists (System_Of (Typ));\n    end Has_Dimension_System;\n \n+   ------------------------------\n+   -- Is_Dim_IO_Package_Entity --\n+   ------------------------------\n+\n+   function Is_Dim_IO_Package_Entity (E : Entity_Id) return Boolean is\n+   begin\n+      --  Check the package entity is standard and its scope is either\n+      --  System.Dim.Float_IO or System.Dim.Integer_IO.\n+\n+      if Is_Library_Level_Entity (E)\n+        and then (Chars (E) = Name_Float_IO\n+                    or else Chars (E) = Name_Integer_IO)\n+      then\n+         return Chars (Scope (E)) = Name_Dim\n+           and Chars (Scope (Scope (E))) = Name_System;\n+      end if;\n+\n+      return False;\n+   end Is_Dim_IO_Package_Entity;\n+\n    -------------------------------------\n    -- Is_Dim_IO_Package_Instantiation --\n    -------------------------------------\n@@ -2513,16 +2527,10 @@ package body Sem_Dim is\n       if Is_Entity_Name (Gen_Id) then\n          Ent := Entity (Gen_Id);\n \n-         --  Is it really OK just to test names ??? why???\n+         --  Verify that the instantiated package is either System.Dim.Float_IO\n+         --  or System.Dim.Integer_IO.\n \n-         if Is_Library_Level_Entity (Ent)\n-           and then\n-            (Chars (Ent) = Name_Float_IO\n-               or else\n-             Chars (Ent) = Name_Integer_IO)\n-         then\n-            return Chars (Scope (Ent)) = Name_Dim;\n-         end if;\n+         return Is_Dim_IO_Package_Entity (Ent);\n       end if;\n \n       return False;"}]}