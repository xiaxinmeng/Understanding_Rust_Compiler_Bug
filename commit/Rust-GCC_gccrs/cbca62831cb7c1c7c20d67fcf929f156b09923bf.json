{"sha": "cbca62831cb7c1c7c20d67fcf929f156b09923bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JjYTYyODMxY2I3YzFjN2MyMGQ2N2ZjZjkyOWYxNTZiMDk5MjNiZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-03-12T13:32:07Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-23T07:37:18Z"}, "message": "c++: Use STATIC_ASSERT for OVL_OP_MAX.\n\ngcc/cp/ChangeLog:\n\n\t* cp-tree.h (STATIC_ASSERT): Prefer static assert.\n\t* lex.c (init_operators): Remove run-time check.", "tree": {"sha": "a078ebf0c9493e6ef8a1722aa84dbb8c9dca9592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a078ebf0c9493e6ef8a1722aa84dbb8c9dca9592"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbca62831cb7c1c7c20d67fcf929f156b09923bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbca62831cb7c1c7c20d67fcf929f156b09923bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbca62831cb7c1c7c20d67fcf929f156b09923bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbca62831cb7c1c7c20d67fcf929f156b09923bf/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "700e542971251b11623cce877075567815f72965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/700e542971251b11623cce877075567815f72965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/700e542971251b11623cce877075567815f72965"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "cb254e0adeaed52a4fe5b61f7c4d750152a2c826", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbca62831cb7c1c7c20d67fcf929f156b09923bf/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbca62831cb7c1c7c20d67fcf929f156b09923bf/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=cbca62831cb7c1c7c20d67fcf929f156b09923bf", "patch": "@@ -5922,6 +5922,9 @@ enum ovl_op_code {\n   OVL_OP_MAX\n };\n \n+/* Make sure it fits in lang_decl_fn::ovl_op_code. */\n+STATIC_ASSERT (OVL_OP_MAX < (1 << 6));\n+\n struct GTY(()) ovl_op_info_t {\n   /* The IDENTIFIER_NODE for the operator.  */\n   tree identifier;"}, {"sha": "43abd019e6ef636f8d5e1854edd0536bd923537a", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbca62831cb7c1c7c20d67fcf929f156b09923bf/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbca62831cb7c1c7c20d67fcf929f156b09923bf/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=cbca62831cb7c1c7c20d67fcf929f156b09923bf", "patch": "@@ -166,8 +166,6 @@ init_operators (void)\n \n       if (op_ptr->name)\n \t{\n-\t  /* Make sure it fits in lang_decl_fn::operator_code. */\n-\t  gcc_checking_assert (op_ptr->ovl_op_code < (1 << 6));\n \t  tree ident = set_operator_ident (op_ptr);\n \t  if (unsigned index = IDENTIFIER_CP_INDEX (ident))\n \t    {"}]}