{"sha": "1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIyZjUzYmI5YWQ5YzkwM2ExMjZiYmU1ZDZjNTY3MjU1MGE1NGMxMw==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2019-09-18T08:33:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-18T08:33:17Z"}, "message": "[Ada] Missing accessibility check on discrim assignment\n\nThis patch fixes an issue whereby assignments from anonymous access\ndescriminants which are part of stand alone objects of anonymous access\ndid not have runtime checks generated based on the accessibility level\nof the object according to ARM 3.10.2 (12.5/3).\n\n2019-09-18  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_Type_Conversion): Add calculation of an\n\talternative operand for the purposes of generating accessibility\n\tchecks.\n\ngcc/testsuite/\n\n\t* gnat.dg/access8.adb, gnat.dg/access8_pkg.adb,\n\tgnat.dg/access8_pkg.ads: New testcase.\n\nFrom-SVN: r275860", "tree": {"sha": "71cccea541240554e1416fa7646d067732d06efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71cccea541240554e1416fa7646d067732d06efb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6951cbc9e7646bca1c99c973815e6838a6e1fe25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6951cbc9e7646bca1c99c973815e6838a6e1fe25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6951cbc9e7646bca1c99c973815e6838a6e1fe25"}], "stats": {"total": 124, "additions": 120, "deletions": 4}, "files": [{"sha": "cbb1e1639600e656c1666bccd9b1e24209f620b3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "patch": "@@ -1,3 +1,9 @@\n+2019-09-18  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Type_Conversion): Add calculation of an\n+\talternative operand for the purposes of generating accessibility\n+\tchecks.\n+\n 2019-09-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_aggr.adb (Build_Array_Aggr_Code): In STEP 1 (c), duplicate"}, {"sha": "a20469cfa7c7985589adb7212da27404970134e9", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "patch": "@@ -11001,6 +11001,7 @@ package body Exp_Ch4 is\n    procedure Expand_N_Type_Conversion (N : Node_Id) is\n       Loc          : constant Source_Ptr := Sloc (N);\n       Operand      : constant Node_Id    := Expression (N);\n+      Operand_Acc  : Node_Id             := Operand;\n       Target_Type  : Entity_Id           := Etype (N);\n       Operand_Type : Entity_Id           := Etype (Operand);\n \n@@ -11718,6 +11719,15 @@ package body Exp_Ch4 is\n       --  Case of converting to an access type\n \n       if Is_Access_Type (Target_Type) then\n+         --  In terms of accessibility rules, an anonymous access discriminant\n+         --  is not considered separate from its parent object.\n+\n+         if Nkind (Operand) = N_Selected_Component\n+           and then Ekind (Entity (Selector_Name (Operand))) = E_Discriminant\n+           and then Ekind (Operand_Type) = E_Anonymous_Access_Type\n+         then\n+            Operand_Acc := Original_Node (Prefix (Operand));\n+         end if;\n \n          --  If this type conversion was internally generated by the front end\n          --  to displace the pointer to the object to reference an interface\n@@ -11741,9 +11751,9 @@ package body Exp_Ch4 is\n          --  other checks may still need to be applied below (such as tagged\n          --  type checks).\n \n-         elsif Is_Entity_Name (Operand)\n-           and then Has_Extra_Accessibility (Entity (Operand))\n-           and then Ekind (Etype (Operand)) = E_Anonymous_Access_Type\n+         elsif Is_Entity_Name (Operand_Acc)\n+           and then Has_Extra_Accessibility (Entity (Operand_Acc))\n+           and then Ekind (Etype (Operand_Acc)) = E_Anonymous_Access_Type\n            and then (Nkind (Original_Node (N)) /= N_Attribute_Reference\n                       or else Attribute_Name (Original_Node (N)) = Name_Access)\n          then\n@@ -11758,7 +11768,7 @@ package body Exp_Ch4 is\n \n             else\n                Apply_Accessibility_Check\n-                 (Operand, Target_Type, Insert_Node => Operand);\n+                 (Operand_Acc, Target_Type, Insert_Node => Operand);\n             end if;\n \n          --  If the level of the operand type is statically deeper than the"}, {"sha": "bf677223c321b55ed842f8fee0df751dea3614dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "patch": "@@ -1,3 +1,8 @@\n+2019-09-18  Justin Squirek  <squirek@adacore.com>\n+\n+\t* gnat.dg/access8.adb, gnat.dg/access8_pkg.adb,\n+\tgnat.dg/access8_pkg.ads: New testcase.\n+\n 2019-09-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/aggr28.adb: New testcase."}, {"sha": "d7eec2ac4ab40527b1f32954791820777848d7bb", "filename": "gcc/testsuite/gnat.dg/access8.adb", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8.adb?ref=1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "patch": "@@ -0,0 +1,46 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatws\" }\n+\n+with Access8_Pkg;\n+procedure Access8 is\n+   Errors : Natural := 0;\n+   outer_object_accessibility_check\n+     : access Access8_Pkg.object;\n+   outer_discriminant_accessibility_check\n+     : access Access8_Pkg.discriminant;\n+   Mistake\n+     : access Access8_Pkg.discriminant;\n+   outer_discriminant_copy_discriminant_check\n+     : access Access8_Pkg.discriminant;\n+begin\n+   declare\n+      obj\n+        : aliased Access8_Pkg.object := Access8_Pkg.get;\n+      inner_object\n+        : access Access8_Pkg.object := obj'Access;\n+      inner_discriminant\n+        : access Access8_Pkg.discriminant := obj.d;\n+   begin\n+      begin\n+         outer_object_accessibility_check\n+           := inner_object;        --  ERROR\n+      exception\n+         when others => Errors := Errors + 1;\n+      end;\n+      begin\n+         Mistake\n+           := inner_object.d;      --  ERROR\n+      exception\n+         when others => Errors := Errors + 1;\n+      end;\n+      begin\n+         outer_discriminant_copy_discriminant_check\n+           := inner_discriminant;  --  ERROR\n+      exception\n+        when others => Errors := Errors + 1;\n+      end;\n+      if Errors /= 3 then\n+         raise Program_Error;\n+      end if;\n+   end;\n+end;"}, {"sha": "9d7c9332b93382a0517c19c0e217ca3d8920be38", "filename": "gcc/testsuite/gnat.dg/access8_pkg.adb", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8_pkg.adb?ref=1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "patch": "@@ -0,0 +1,30 @@\n+--  { dg-options \"-gnatws\" }\n+\n+with Ada.Finalization;\n+\n+package body Access8_Pkg is\n+\n+   overriding procedure Initialize (O : in out Object) is\n+   begin\n+      null;\n+   end;\n+\n+   overriding procedure Finalize (O : in out Object) is\n+   begin\n+      null;\n+   end;\n+\n+   function Get return Object is\n+   begin\n+      return O : Object := Object'\n+        (Ada.Finalization.Limited_Controlled\n+          with D => new discriminant);\n+   end;\n+\n+   function Get_Access return access Object is\n+   begin\n+      return new Object'\n+        (Ada.Finalization.Limited_Controlled\n+          with D => new Discriminant);\n+   end;\n+end;"}, {"sha": "19c632dbe5cd08edf441ee61f045c3c028291599", "filename": "gcc/testsuite/gnat.dg/access8_pkg.ads", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b2f53bb9ad9c903a126bbe5d6c5672550a54c13/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faccess8_pkg.ads?ref=1b2f53bb9ad9c903a126bbe5d6c5672550a54c13", "patch": "@@ -0,0 +1,19 @@\n+with Ada.Finalization;\n+\n+package Access8_Pkg is\n+\n+   type Discriminant is record\n+      Component : Integer := 6;\n+   end record;\n+\n+   type Object (D : access Discriminant)\n+     is tagged limited private;\n+\n+   function Get return Object;\n+   function Get_Access return access Object;\n+private\n+   type Object (D : access Discriminant)\n+    is new Ada.Finalization.Limited_Controlled with null record;\n+   overriding procedure Initialize (O : in out Object);\n+   overriding procedure Finalize (O : in out Object);\n+end;"}]}