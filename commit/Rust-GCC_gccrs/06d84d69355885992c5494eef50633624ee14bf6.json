{"sha": "06d84d69355885992c5494eef50633624ee14bf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZkODRkNjkzNTU4ODU5OTJjNTQ5NGVlZjUwNjMzNjI0ZWUxNGJmNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1998-12-15T09:44:14Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1998-12-15T09:44:14Z"}, "message": "gjavah.c (print_field_info): Changed how most negative number is printed.\n\n\t* gjavah.c (print_field_info): Changed how most negative number is\n\tprinted.\n\nFrom-SVN: r24323", "tree": {"sha": "4ce9e7c2ee19f26ed33b23bf64aeeaed86ee0a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ce9e7c2ee19f26ed33b23bf64aeeaed86ee0a01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06d84d69355885992c5494eef50633624ee14bf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d84d69355885992c5494eef50633624ee14bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d84d69355885992c5494eef50633624ee14bf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d84d69355885992c5494eef50633624ee14bf6/comments", "author": null, "committer": null, "parents": [{"sha": "68b048138c5bf9ce62ab690a7ae3b8a91d22234e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68b048138c5bf9ce62ab690a7ae3b8a91d22234e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68b048138c5bf9ce62ab690a7ae3b8a91d22234e"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "a3b36c2fd09c42b55e21c2134fa54e33e32c3835", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d84d69355885992c5494eef50633624ee14bf6/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d84d69355885992c5494eef50633624ee14bf6/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=06d84d69355885992c5494eef50633624ee14bf6", "patch": "@@ -1,3 +1,8 @@\n+1998-12-15  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* gjavah.c (print_field_info): Changed how most negative number is\n+\tprinted.\n+\n Mon Dec 14 18:49:29 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* parse.y (fold_constant_for_init):  New function."}, {"sha": "45fc7d010527201c7563d262fd6341cbc674e4bb", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d84d69355885992c5494eef50633624ee14bf6/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d84d69355885992c5494eef50633624ee14bf6/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=06d84d69355885992c5494eef50633624ee14bf6", "patch": "@@ -307,39 +307,39 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t    case CONSTANT_Integer:\n \t      {\n \t\tjint num;\n+\t\tint most_negative = 0;\n \t\tfputs (\"  static const jint \", out);\n \t\tprint_name (out, jcf, name_index);\n \t\tfputs (\" = \", out);\n \t\tnum = JPOOL_INT (jcf, current_field_value);\n-\t\t/* We single out the most negative number to print in\n-\t\t   hex.  That avoids later warnings from g++.  */\n+\t\t/* We single out the most negative number to print\n+\t\t   specially.  This avoids later warnings from g++.  */\n \t\tif (num == 0x80000000)\n \t\t  {\n-\t\t    strcpy (buffer, \"0x\");\n-\t\t    format_uint (buffer + 2, (jlong) (uint32) num, 16);\n+\t\t    most_negative = 1;\n+\t\t    ++num;\n \t\t  }\n-\t\telse\n-\t\t  format_int (buffer, (jlong) num, 10);\n-\t\tfprintf (out, \"%sL;\\n\", buffer);\n+\t\tformat_int (buffer, (jlong) num, 10);\n+\t\tfprintf (out, \"%sL%s;\\n\", buffer, most_negative ? \" - 1\" : \"\");\n \t      }\n \t      break;\n \t    case CONSTANT_Long:\n \t      {\n \t\tjlong num;\n+\t\tint most_negative = 0;\n \t\tfputs (\"  static const jlong \", out);\n \t\tprint_name (out, jcf, name_index);\n \t\tfputs (\" = \", out);\n \t\tnum = JPOOL_LONG (jcf, current_field_value);\n-\t\t/* We single out the most negative number to print in\n-\t\t   hex.  That avoids later warnings from g++.  */\n+\t\t/* We single out the most negative number to print\n+                   specially..  This avoids later warnings from g++.  */\n \t\tif (num == 0x8000000000000000LL)\n \t\t  {\n-\t\t    strcpy (buffer, \"0x\");\n-\t\t    format_uint (buffer + 2, num, 16);\n+\t\t    most_negative = 1;\n+\t\t    ++num;\n \t\t  }\n-\t\telse\n-\t\t  format_int (buffer, num, 10);\n-\t\tfprintf (out, \"%sLL;\\n\", buffer);\n+\t\tformat_int (buffer, num, 10);\n+\t\tfprintf (out, \"%sLL%s;\\n\", buffer, most_negative ? \" - 1\" :\"\");\n \t      }\n \t      break;\n \t    case CONSTANT_Float:"}]}