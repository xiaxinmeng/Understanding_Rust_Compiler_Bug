{"sha": "b66113e9c1ec1f7550cf9680b9b9e4d725583f34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY2MTEzZTljMWVjMWY3NTUwY2Y5NjgwYjliOWU0ZDcyNTU4M2YzNA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2019-08-28T14:26:45Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2019-08-28T14:26:45Z"}, "message": "[PR 91468] Small fixes in ipa-cp.c and ipa-prop.c\n\n2019-08-28  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/91468\n\t* ipa-cp.c (merge_agg_lats_step): Removed redundant test, made a\n\tchecking assert a normal assert to test it really is redundant.\n\t* ipa-prop.c (compute_complex_assign_jump_func): Removed\n\tredundant test.\n\t(update_jump_functions_after_inlining): Removed combining unary\n\tarithmetic operations with an ancestor jump function.\n\t(ipcp_modif_dom_walker::before_dom_children): Fix wrong use of rhs\n\tinstead of t.\n\nFrom-SVN: r274992", "tree": {"sha": "0754358836ae7592c464f87688c2b2faf768aab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0754358836ae7592c464f87688c2b2faf768aab0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b66113e9c1ec1f7550cf9680b9b9e4d725583f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66113e9c1ec1f7550cf9680b9b9e4d725583f34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b66113e9c1ec1f7550cf9680b9b9e4d725583f34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66113e9c1ec1f7550cf9680b9b9e4d725583f34/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a09b09ccee0208c68d5a6bb57fda94f55db4aded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a09b09ccee0208c68d5a6bb57fda94f55db4aded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a09b09ccee0208c68d5a6bb57fda94f55db4aded"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "525cd90ed509027634ab8f3453975460a2a30718", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b66113e9c1ec1f7550cf9680b9b9e4d725583f34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b66113e9c1ec1f7550cf9680b9b9e4d725583f34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b66113e9c1ec1f7550cf9680b9b9e4d725583f34", "patch": "@@ -1,3 +1,15 @@\n+2019-08-28  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/91468\n+\t* ipa-cp.c (merge_agg_lats_step): Removed redundant test, made a\n+\tchecking assert a normal assert to test it really is redundant.\n+\t* ipa-prop.c (compute_complex_assign_jump_func): Removed\n+\tredundant test.\n+\t(update_jump_functions_after_inlining): Removed combining unary\n+\tarithmetic operations with an ancestor jump function.\n+\t(ipcp_modif_dom_walker::before_dom_children): Fix wrong use of rhs\n+\tinstead of t.\n+\n 2019-08-28  Richard Biener  <rguenther@suse.de>\n \n \t* config/i386/i386-features.c (convert_scalars_to_vector): Do not"}, {"sha": "33d52fe5537d9ef5746dfcf350f0b31509a284ec", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b66113e9c1ec1f7550cf9680b9b9e4d725583f34/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b66113e9c1ec1f7550cf9680b9b9e4d725583f34/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=b66113e9c1ec1f7550cf9680b9b9e4d725583f34", "patch": "@@ -2026,15 +2026,13 @@ merge_agg_lats_step (class ipcp_param_lattices *dest_plats,\n \n   if (**aglat && (**aglat)->offset == offset)\n     {\n-      if ((**aglat)->size != val_size\n-\t  || ((**aglat)->next\n-\t      && (**aglat)->next->offset < offset + val_size))\n+      if ((**aglat)->size != val_size)\n \t{\n \t  set_agg_lats_to_bottom (dest_plats);\n \t  return false;\n \t}\n-      gcc_checking_assert (!(**aglat)->next\n-\t\t\t   || (**aglat)->next->offset >= offset + val_size);\n+      gcc_assert (!(**aglat)->next\n+\t\t  || (**aglat)->next->offset >= offset + val_size);\n       return true;\n     }\n   else"}, {"sha": "a23aa2590a0328762922f9fb263005df835e5438", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b66113e9c1ec1f7550cf9680b9b9e4d725583f34/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b66113e9c1ec1f7550cf9680b9b9e4d725583f34/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=b66113e9c1ec1f7550cf9680b9b9e4d725583f34", "patch": "@@ -1243,9 +1243,7 @@ compute_complex_assign_jump_func (struct ipa_func_body_info *fbi,\n \t    break;\n \t  }\n \tcase GIMPLE_UNARY_RHS:\n-\t  if (is_gimple_assign (stmt)\n-\t      && gimple_assign_rhs_class (stmt) == GIMPLE_UNARY_RHS\n-\t      && ! CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (stmt)))\n+\t  if (!CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (stmt)))\n \t    ipa_set_jf_unary_pass_through (jfunc, index,\n \t\t\t\t\t   gimple_assign_rhs_code (stmt));\n \tdefault:;\n@@ -2725,12 +2723,6 @@ update_jump_functions_after_inlining (struct cgraph_edge *cs,\n \t      dst->value.ancestor.agg_preserved &=\n \t\tsrc->value.pass_through.agg_preserved;\n \t    }\n-\t  else if (src->type == IPA_JF_PASS_THROUGH\n-\t\t   && TREE_CODE_CLASS (src->value.pass_through.operation) == tcc_unary)\n-\t    {\n-\t      dst->value.ancestor.formal_id = src->value.pass_through.formal_id;\n-\t      dst->value.ancestor.agg_preserved = false;\n-\t    }\n \t  else if (src->type == IPA_JF_ANCESTOR)\n \t    {\n \t      dst->value.ancestor.formal_id = src->value.ancestor.formal_id;\n@@ -4933,7 +4925,7 @@ ipcp_modif_dom_walker::before_dom_children (basic_block bb)\n \t{\n \t  /* V_C_E can do things like convert an array of integers to one\n \t     bigger integer and similar things we do not handle below.  */\n-\t  if (TREE_CODE (rhs) == VIEW_CONVERT_EXPR)\n+\t  if (TREE_CODE (t) == VIEW_CONVERT_EXPR)\n \t    {\n \t      vce = true;\n \t      break;"}]}