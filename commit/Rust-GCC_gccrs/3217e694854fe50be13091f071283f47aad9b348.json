{"sha": "3217e694854fe50be13091f071283f47aad9b348", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIxN2U2OTQ4NTRmZTUwYmUxMzA5MWYwNzEyODNmNDdhYWQ5YjM0OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-05-31T15:37:22Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-05-31T15:37:22Z"}, "message": "x86: Re-enable partial_reg_dependency and movx for Haswell\n\nr254152 disabled partial_reg_dependency and movx for Haswell and newer\nIntel processors.  r258972 restored them for skylake-avx512.  For Haswell,\nmovx improves performance.  But partial_reg_stall may be better than\npartial_reg_dependency in theory.  We will investigate performance impact\nof partial_reg_stall vs partial_reg_dependency on Haswell for GCC 9.  In\nthe meantime, this patch restores both partial_reg_dependency and mox for\nHaswell in GCC 8.\n\nOn Haswell, improvements for EEMBC benchmarks with\n\n-mtune-ctrl=movx,partial_reg_dependency -Ofast -march=haswell\n\nvs\n\n-Ofast -mtune=haswell\n\nare\n\nautomotive\n=========\n  aifftr01 (default) - goodperf: Runtime improvement of   2.6% (time).\n  aiifft01 (default) - goodperf: Runtime improvement of   2.2% (time).\n\nnetworking\n=========\n  ip_pktcheckb1m (default) - goodperf: Runtime improvement of   3.8% (time).\n  ip_pktcheckb2m (default) - goodperf: Runtime improvement of   5.2% (time).\n  ip_pktcheckb4m (default) - goodperf: Runtime improvement of   4.4% (time).\n  ip_pktcheckb512k (default) - goodperf: Runtime improvement of   4.2% (time).\n\ntelecom\n=========\n  fft00data_1 (default) - goodperf: Runtime improvement of   8.4% (time).\n  fft00data_2 (default) - goodperf: Runtime improvement of   8.6% (time).\n  fft00data_3 (default) - goodperf: Runtime improvement of   9.0% (time).\n\n\tPR target/85829\n\t* config/i386/x86-tune.def: Re-enable partial_reg_dependency\n\tand movx for Haswell.\n\nFrom-SVN: r261028", "tree": {"sha": "711df1b4cb3a1740a15ade8d61067cd35139f4f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/711df1b4cb3a1740a15ade8d61067cd35139f4f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3217e694854fe50be13091f071283f47aad9b348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3217e694854fe50be13091f071283f47aad9b348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3217e694854fe50be13091f071283f47aad9b348", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3217e694854fe50be13091f071283f47aad9b348/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd1cab35c5eabf51d9392751036fa3a71758d263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd1cab35c5eabf51d9392751036fa3a71758d263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd1cab35c5eabf51d9392751036fa3a71758d263"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "36c7a86d3902471d30b5f302f4e06c702a0aca24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217e694854fe50be13091f071283f47aad9b348/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217e694854fe50be13091f071283f47aad9b348/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3217e694854fe50be13091f071283f47aad9b348", "patch": "@@ -1,3 +1,9 @@\n+2018-05-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/85829\n+\t* config/i386/x86-tune.def: Re-enable partial_reg_dependency\n+\tand movx for Haswell.\n+\n 2018-05-31  Chung-Lin Tang  <cltang@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n "}, {"sha": "f95c0701d5dbeea32d566347bd1a4077139214a9", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3217e694854fe50be13091f071283f47aad9b348/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3217e694854fe50be13091f071283f47aad9b348/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=3217e694854fe50be13091f071283f47aad9b348", "patch": "@@ -49,7 +49,7 @@ DEF_TUNE (X86_TUNE_SCHEDULE, \"schedule\",\n    over partial stores.  For example preffer MOVZBL or MOVQ to load 8bit\n    value over movb.  */\n DEF_TUNE (X86_TUNE_PARTIAL_REG_DEPENDENCY, \"partial_reg_dependency\",\n-          m_P4_NOCONA | m_CORE2 | m_NEHALEM  | m_SANDYBRIDGE\n+          m_P4_NOCONA | m_CORE2 | m_NEHALEM  | m_SANDYBRIDGE | m_HASWELL\n \t  | m_BONNELL | m_SILVERMONT | m_GOLDMONT | m_GOLDMONT_PLUS | m_INTEL\n \t  | m_KNL | m_KNM | m_AMD_MULTIPLE | m_SKYLAKE_AVX512 | m_GENERIC)\n \n@@ -87,7 +87,7 @@ DEF_TUNE (X86_TUNE_MOVX, \"movx\",\n           m_PPRO | m_P4_NOCONA | m_CORE2 | m_NEHALEM  | m_SANDYBRIDGE\n \t  | m_BONNELL | m_SILVERMONT | m_GOLDMONT | m_KNL | m_KNM | m_INTEL\n \t  | m_GOLDMONT_PLUS | m_GEODE | m_AMD_MULTIPLE | m_SKYLAKE_AVX512\n-\t  | m_GENERIC)\n+\t  | m_HASWELL | m_GENERIC)\n \n /* X86_TUNE_MEMORY_MISMATCH_STALL: Avoid partial stores that are followed by\n    full sized loads.  */"}]}