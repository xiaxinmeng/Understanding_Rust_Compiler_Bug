{"sha": "916e9b3117ddfa0f29ec427ff6f3badc08eb8064", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE2ZTliMzExN2RkZmEwZjI5ZWM0MjdmZjZmM2JhZGMwOGViODA2NA==", "commit": {"author": {"name": "David Daney", "email": "ddaney@caviumnetworks.com", "date": "2009-10-01T16:18:33Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2009-10-01T16:18:33Z"}, "message": "2009-10-01  David Daney  <ddaney@caviumnetworks.com>\n\n\t* gcc/config/mips/mips.c (mips_process_sync_loop) Emit syncw\n\tinstructions for TARGET_OCTEON.\n\nFrom-SVN: r152380", "tree": {"sha": "c37a49fe36237e1248e7aa9b641e11b7d2ce1ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c37a49fe36237e1248e7aa9b641e11b7d2ce1ec1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/916e9b3117ddfa0f29ec427ff6f3badc08eb8064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916e9b3117ddfa0f29ec427ff6f3badc08eb8064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/916e9b3117ddfa0f29ec427ff6f3badc08eb8064", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916e9b3117ddfa0f29ec427ff6f3badc08eb8064/comments", "author": null, "committer": null, "parents": [{"sha": "7919373d64a6975212253f444875f6d6718a680e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7919373d64a6975212253f444875f6d6718a680e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7919373d64a6975212253f444875f6d6718a680e"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "cdaee936e62ab1d47c6930a9c3362ab4747a2ff4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/916e9b3117ddfa0f29ec427ff6f3badc08eb8064/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/916e9b3117ddfa0f29ec427ff6f3badc08eb8064/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=916e9b3117ddfa0f29ec427ff6f3badc08eb8064", "patch": "@@ -1,3 +1,8 @@\n+2009-10-01  David Daney  <ddaney@caviumnetworks.com>\n+\n+\t* gcc/config/mips/mips.c (mips_process_sync_loop) Emit syncw\n+\tinstructions for TARGET_OCTEON.\n+\n 2009-10-01  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* config/arm/arm.c (arm_override_options): Turn off"}, {"sha": "1bead5994111a1a24b3125c03d98d0cfe1dc9b9e", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/916e9b3117ddfa0f29ec427ff6f3badc08eb8064/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/916e9b3117ddfa0f29ec427ff6f3badc08eb8064/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=916e9b3117ddfa0f29ec427ff6f3badc08eb8064", "patch": "@@ -11455,7 +11455,22 @@ mips_process_sync_loop (rtx insn, rtx *operands)\n \n   /* Output the release side of the memory barrier.  */\n   if (get_attr_sync_release_barrier (insn) == SYNC_RELEASE_BARRIER_YES)\n-    mips_multi_add_insn (\"sync\", NULL);\n+    {\n+      if (required_oldval == 0 && TARGET_OCTEON)\n+\t{\n+\t  /* Octeon doesn't reorder reads, so a full barrier can be\n+\t     created by using SYNCW to order writes combined with the\n+\t     write from the following SC.  When the SC successfully\n+\t     completes, we know that all preceding writes are also\n+\t     committed to the coherent memory system.  It is possible\n+\t     for a single SYNCW to fail, but a pair of them will never\n+\t     fail, so we use two.  */\n+\t  mips_multi_add_insn (\"syncw\", NULL);\n+\t  mips_multi_add_insn (\"syncw\", NULL);\n+\t}\n+      else\n+\tmips_multi_add_insn (\"sync\", NULL);\n+    }\n \n   /* Output the branch-back label.  */\n   mips_multi_add_label (\"1:\");"}]}