{"sha": "07db7d35a9b27002021a96fc0ac4175d102d56d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdkYjdkMzVhOWIyNzAwMjAyMWE5NmZjMGFjNDE3NWQxMDJkNTZkMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-22T19:03:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-22T19:03:39Z"}, "message": "re PR tree-optimization/46137 (g++.dg/torture/pr45877.C FAILs with -fno-tree-dce)\n\n2010-10-22  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/46137\n\t* gimple-fold.c (gimplify_and_update_call_from_tree): Properly\n\tremove the virtual operands if they are not needed.\n\n\t* c-c++-common/torture/pr46137.c: New testcase.\n\nFrom-SVN: r165852", "tree": {"sha": "aba9c0452722f367214fd539f57871adfd8cbd2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aba9c0452722f367214fd539f57871adfd8cbd2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07db7d35a9b27002021a96fc0ac4175d102d56d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07db7d35a9b27002021a96fc0ac4175d102d56d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07db7d35a9b27002021a96fc0ac4175d102d56d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07db7d35a9b27002021a96fc0ac4175d102d56d3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8c801fdbe83d2529221e7beb0e75eebca3e86f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c801fdbe83d2529221e7beb0e75eebca3e86f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c801fdbe83d2529221e7beb0e75eebca3e86f9"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "3f6e01bedd32737d58c8cbe5f8e54ee5587b3438", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07db7d35a9b27002021a96fc0ac4175d102d56d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07db7d35a9b27002021a96fc0ac4175d102d56d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07db7d35a9b27002021a96fc0ac4175d102d56d3", "patch": "@@ -1,3 +1,9 @@\n+2010-10-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/46137\n+\t* gimple-fold.c (gimplify_and_update_call_from_tree): Properly\n+\tremove the virtual operands if they are not needed.\n+\n 2010-10-22  Changpeng Fang  <changpeng.fang@amd.com>\n \n \t* gcc/config/i386/i386.c (processor_costs bdver1_cost): Update"}, {"sha": "6862c126c72b23ddf531ea0c463c48df8e734311", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07db7d35a9b27002021a96fc0ac4175d102d56d3/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07db7d35a9b27002021a96fc0ac4175d102d56d3/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=07db7d35a9b27002021a96fc0ac4175d102d56d3", "patch": "@@ -1044,6 +1044,8 @@ gimplify_and_update_call_from_tree (gimple_stmt_iterator *si_p, tree expr)\n \t  if (TREE_CODE (gimple_vdef (stmt)) == SSA_NAME)\n \t    SSA_NAME_DEF_STMT (gimple_vdef (stmt)) = new_stmt;\n \t}\n+      else if (reaching_vuse == gimple_vuse (stmt))\n+\tunlink_stmt_vdef (stmt);\n     }\n \n   gimple_set_location (new_stmt, gimple_location (stmt));"}, {"sha": "1aa51a459bf3f6a9086435cd5f0cd5ea1351dcff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07db7d35a9b27002021a96fc0ac4175d102d56d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07db7d35a9b27002021a96fc0ac4175d102d56d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07db7d35a9b27002021a96fc0ac4175d102d56d3", "patch": "@@ -1,3 +1,8 @@\n+2010-10-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/46137\n+\t* c-c++-common/torture/pr46137.c: New testcase.\n+\n 2010-10-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/46129"}, {"sha": "3e44ff6b7c97ec4037290a0074a5e57d2c1b64a8", "filename": "gcc/testsuite/c-c++-common/torture/pr46137.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07db7d35a9b27002021a96fc0ac4175d102d56d3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr46137.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07db7d35a9b27002021a96fc0ac4175d102d56d3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr46137.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr46137.c?ref=07db7d35a9b27002021a96fc0ac4175d102d56d3", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+\n+struct X { };\n+\n+static inline void *\n+bar (void *dst, void *src)\n+{\n+  return __builtin___memcpy_chk (dst, src, sizeof (struct X),\n+\t\t\t\t __builtin_object_size (dst, 0));\n+}\n+\n+struct X\n+foo (struct X *x)\n+{\n+  struct X any;\n+  bar (&any, x);\n+  return any;\n+}"}]}