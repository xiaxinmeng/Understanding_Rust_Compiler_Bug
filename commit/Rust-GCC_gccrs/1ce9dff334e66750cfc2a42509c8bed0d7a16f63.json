{"sha": "1ce9dff334e66750cfc2a42509c8bed0d7a16f63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNlOWRmZjMzNGU2Njc1MGNmYzJhNDI1MDljOGJlZDBkN2ExNmY2Mw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2010-10-26T13:08:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-26T13:08:59Z"}, "message": "opt.ads (Old_Checksums, [...]): New Boolean flags, defaulted to False.\n\n2010-10-26  Vincent Celier  <celier@adacore.com>\n\n\t* opt.ads (Old_Checksums, Old_Old_Checksums): New Boolean flags,\n\tdefaulted to False.\n\t* prj-nmsc.adb (Process_Project_Level_Array_Attributes): When\n\tprocessing attribute Toolchain_Version (\"Ada\"), set Opt.Old_Checksums\n\tand Opt.Old_Old_Checksums depending on the GNAT version.\n\t* scng.adb (Accumulate_Token_Checksum_Old): New procedure.\n\t(Accumulate_Token_Checksum_Old_Old): New procedure.\n\t(Scan): For keywords, when Opt.Old_Checksums is True, call one of the\n\talternative procedures Accumulate_Token_Checksum_Old or\n\tAccumulate_Token_Checksum_Old_Old, instead of Accumulate_Token_Checksum.\n\nFrom-SVN: r165959", "tree": {"sha": "4a4d16379b668c85c0e7cad179766e7dc7945011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a4d16379b668c85c0e7cad179766e7dc7945011"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ce9dff334e66750cfc2a42509c8bed0d7a16f63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce9dff334e66750cfc2a42509c8bed0d7a16f63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce9dff334e66750cfc2a42509c8bed0d7a16f63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39ab2e8fc9d4efb8dc6e089ce69738c2506ec0f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ab2e8fc9d4efb8dc6e089ce69738c2506ec0f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ab2e8fc9d4efb8dc6e089ce69738c2506ec0f1"}], "stats": {"total": 219, "additions": 217, "deletions": 2}, "files": [{"sha": "47a6abc3709bdd19f2609d8615e9c203ec9bf3a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1ce9dff334e66750cfc2a42509c8bed0d7a16f63", "patch": "@@ -1,3 +1,16 @@\n+2010-10-26  Vincent Celier  <celier@adacore.com>\n+\n+\t* opt.ads (Old_Checksums, Old_Old_Checksums): New Boolean flags,\n+\tdefaulted to False.\n+\t* prj-nmsc.adb (Process_Project_Level_Array_Attributes): When\n+\tprocessing attribute Toolchain_Version (\"Ada\"), set Opt.Old_Checksums\n+\tand Opt.Old_Old_Checksums depending on the GNAT version.\n+\t* scng.adb (Accumulate_Token_Checksum_Old): New procedure.\n+\t(Accumulate_Token_Checksum_Old_Old): New procedure.\n+\t(Scan): For keywords, when Opt.Old_Checksums is True, call one of the\n+\talternative procedures Accumulate_Token_Checksum_Old or\n+\tAccumulate_Token_Checksum_Old_Old, instead of Accumulate_Token_Checksum.\n+\n 2010-10-26  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* gcc-interface/utils2.c (build_compound_expr): New function."}, {"sha": "9c577c73032fbf16600276f52cf386077ce953f2", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=1ce9dff334e66750cfc2a42509c8bed0d7a16f63", "patch": "@@ -933,6 +933,13 @@ package Opt is\n    --  GNATMAKE\n    --  Set to True when an object directory is specified with option -D\n \n+   Old_Checksums     : Boolean := False;\n+   Old_Old_Checksums : Boolean := False;\n+   --  GPRBUILD\n+   --  Set to True when the old ways of computing checksums needs to be used.\n+   --  For reserved words, the old ways were to use the token value, while the\n+   --  new way is to use Tok_Identifier for reserved word too.\n+\n    One_Compilation_Per_Obj_Dir : Boolean := False;\n    --  GNATMAKE, GPRBUILD\n    --  Set to True with switch --single-compile-per-obj-dir. When True, there"}, {"sha": "e0df1072f92d999175c7fc5cd208c20b4b0c4921", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=1ce9dff334e66750cfc2a42509c8bed0d7a16f63", "patch": "@@ -2399,6 +2399,53 @@ package body Prj.Nmsc is\n                         Lang_Index.Config.Toolchain_Version :=\n                           Element.Value.Value;\n \n+                        --  We need a complete comment section discussing the\n+                        --  need for three versions of the checksum algorithm\n+                        --  and what is going on here??? Also Old and Old_Old\n+                        --  are rather poor names I would say. How about\n+\n+                        --    Opt.Checksum_503\n+                        --    Opt.Checksum_63\n+\n+                        --  If the Ada compiler is version 6.3 or before, then\n+                        --  checksums need to be computed using the old way.\n+\n+                        --  Also, how about an abstraction for checking\n+                        --  version numbers, something like ???\n+\n+                        --    if Version_Is_Before (5, 3) ....\n+\n+                        if Lang_Index.Name = Name_Ada then\n+                           declare\n+                              Vers : constant String :=\n+                                       Get_Name_String (Element.Value.Value);\n+                              pragma Assert (Vers'First = 1);\n+\n+                           begin\n+                              if Vers'Length >= 8\n+                                and then Vers (1 .. 5) = \"GNAT \"\n+                                and then Vers (7) = '.'\n+                                and then\n+                                  (Vers (6) < '6'\n+                                    or else\n+                                      (Vers (6) = '6' and then Vers (8) < '4'))\n+                              then\n+                                 Opt.Old_Checksums := True;\n+\n+                                 --  If the Ada compiler is version 5.03 or\n+                                 --  before, then checksums need to be computed\n+                                 --  using the other old way.\n+\n+                                 if Vers (6) < '5'\n+                                   or else (Vers (6) = '5'\n+                                             and then Vers (Vers'Last) < '4')\n+                                 then\n+                                    Opt.Old_Old_Checksums := True;\n+                                 end if;\n+                              end if;\n+                           end;\n+                        end if;\n+\n                      when Name_Runtime_Library_Dir =>\n \n                         --  Attribute Runtime_Library_Dir (<language>)"}, {"sha": "1e1be01dd155273f60529ff5e3073af25c74092e", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 150, "deletions": 2, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ce9dff334e66750cfc2a42509c8bed0d7a16f63/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=1ce9dff334e66750cfc2a42509c8bed0d7a16f63", "patch": "@@ -64,6 +64,21 @@ package body Scng is\n \n    procedure Accumulate_Token_Checksum;\n    pragma Inline (Accumulate_Token_Checksum);\n+   --  Called after each numeric literal and identifier/keyword. For keywords,\n+   --  the token used is Tok_Identifier. This allows to detect additional\n+   --  spaces added in sources when using the builder switch -m.\n+\n+   procedure Accumulate_Token_Checksum_Old;\n+   --  Used in place of Accumulate_Token_Checksum for previous releases, when\n+   --  Tok_Some was not included in Token_Type and the actual Token_Type was\n+   --  used for keywords. This procedure is never used in the compiler or\n+   --  gnatmake.\n+\n+   procedure Accumulate_Token_Checksum_Old_Old;\n+   --  Used in place of Accumulate_Token_Checksum for previous releases, when\n+   --  Tok_Interface, Tok_Some, Tok_Synchronized and Tok_Overriding were not\n+   --  included in Token_Type and the actual Token_Type was used for keywords.\n+   --  This procedure is never used in the compiler or gnatmake.\n \n    procedure Accumulate_Checksum (C : Character);\n    pragma Inline (Accumulate_Checksum);\n@@ -120,6 +135,127 @@ package body Scng is\n          Character'Val (Token_Type'Pos (Token)));\n    end Accumulate_Token_Checksum;\n \n+   -----------------------------------\n+   -- Accumulate_Token_Checksum_Old --\n+   -----------------------------------\n+\n+   procedure Accumulate_Token_Checksum_Old is\n+   begin\n+      --  Individual values of Token_Type are used, instead of subranges, so\n+      --  that additions or suppressions of enumerated values in type\n+      --  Token_Type are detected by the compiler.\n+\n+      case Token is\n+         when Tok_Integer_Literal | Tok_Real_Literal | Tok_String_Literal |\n+              Tok_Char_Literal | Tok_Operator_Symbol | Tok_Identifier |\n+              Tok_Double_Asterisk | Tok_Ampersand | Tok_Minus | Tok_Plus |\n+              Tok_Asterisk | Tok_Mod | Tok_Rem | Tok_Slash | Tok_New |\n+              Tok_Abs | Tok_Others | Tok_Null | Tok_Dot | Tok_Apostrophe |\n+              Tok_Left_Paren | Tok_Delta | Tok_Digits | Tok_Range |\n+              Tok_Right_Paren | Tok_Comma | Tok_And | Tok_Or | Tok_Xor |\n+              Tok_Less | Tok_Equal | Tok_Greater | Tok_Not_Equal |\n+              Tok_Greater_Equal | Tok_Less_Equal | Tok_In | Tok_Not |\n+              Tok_Box | Tok_Colon_Equal | Tok_Colon | Tok_Greater_Greater |\n+              Tok_Abstract | Tok_Access | Tok_Aliased | Tok_All | Tok_Array |\n+              Tok_At | Tok_Body | Tok_Constant | Tok_Do | Tok_Is |\n+              Tok_Interface | Tok_Limited | Tok_Of | Tok_Out | Tok_Record |\n+              Tok_Renames | Tok_Reverse =>\n+\n+            System.CRC32.Update\n+              (System.CRC32.CRC32 (Checksum),\n+               Character'Val (Token_Type'Pos (Token)));\n+\n+         when Tok_Some =>\n+\n+            System.CRC32.Update\n+              (System.CRC32.CRC32 (Checksum),\n+               Character'Val (Token_Type'Pos (Tok_Identifier)));\n+\n+         when Tok_Tagged | Tok_Then | Tok_Less_Less | Tok_Abort | Tok_Accept |\n+              Tok_Case | Tok_Delay | Tok_Else | Tok_Elsif | Tok_End |\n+              Tok_Exception | Tok_Exit | Tok_Goto | Tok_If | Tok_Pragma |\n+              Tok_Raise | Tok_Requeue | Tok_Return | Tok_Select |\n+              Tok_Terminate | Tok_Until | Tok_When | Tok_Begin | Tok_Declare |\n+              Tok_For | Tok_Loop | Tok_While | Tok_Entry | Tok_Protected |\n+              Tok_Task | Tok_Type | Tok_Subtype | Tok_Overriding |\n+              Tok_Synchronized | Tok_Use | Tok_Function | Tok_Generic |\n+              Tok_Package | Tok_Procedure | Tok_Private | Tok_With |\n+              Tok_Separate | Tok_EOF | Tok_Semicolon | Tok_Arrow |\n+              Tok_Vertical_Bar | Tok_Dot_Dot | Tok_Project | Tok_Extends |\n+              Tok_External | Tok_External_As_List | Tok_Comment |\n+              Tok_End_Of_Line | Tok_Special | No_Token =>\n+\n+            System.CRC32.Update\n+              (System.CRC32.CRC32 (Checksum),\n+               Character'Val (Token_Type'Pos (Token_Type'Pred (Token))));\n+      end case;\n+   end Accumulate_Token_Checksum_Old;\n+\n+   ---------------------------------------\n+   -- Accumulate_Token_Checksum_Old_Old --\n+   ---------------------------------------\n+\n+   procedure Accumulate_Token_Checksum_Old_Old is\n+   begin\n+      --  Individual values of Token_Type are used, instead of subranges, so\n+      --  that additions or suppressions of enumerated values in type\n+      --  Token_Type are detected by the compiler.\n+\n+      case Token is\n+         when Tok_Integer_Literal | Tok_Real_Literal | Tok_String_Literal |\n+              Tok_Char_Literal | Tok_Operator_Symbol | Tok_Identifier |\n+              Tok_Double_Asterisk | Tok_Ampersand | Tok_Minus | Tok_Plus |\n+              Tok_Asterisk | Tok_Mod | Tok_Rem | Tok_Slash | Tok_New |\n+              Tok_Abs | Tok_Others | Tok_Null | Tok_Dot | Tok_Apostrophe |\n+              Tok_Left_Paren | Tok_Delta | Tok_Digits | Tok_Range |\n+              Tok_Right_Paren | Tok_Comma | Tok_And | Tok_Or | Tok_Xor |\n+              Tok_Less | Tok_Equal | Tok_Greater | Tok_Not_Equal |\n+              Tok_Greater_Equal | Tok_Less_Equal | Tok_In | Tok_Not |\n+              Tok_Box | Tok_Colon_Equal | Tok_Colon | Tok_Greater_Greater |\n+              Tok_Abstract | Tok_Access | Tok_Aliased | Tok_All | Tok_Array |\n+              Tok_At | Tok_Body | Tok_Constant | Tok_Do | Tok_Is =>\n+\n+            System.CRC32.Update\n+              (System.CRC32.CRC32 (Checksum),\n+               Character'Val (Token_Type'Pos (Token)));\n+\n+         when Tok_Interface | Tok_Some | Tok_Overriding | Tok_Synchronized =>\n+            System.CRC32.Update\n+              (System.CRC32.CRC32 (Checksum),\n+               Character'Val (Token_Type'Pos (Tok_Identifier)));\n+\n+         when Tok_Limited | Tok_Of | Tok_Out | Tok_Record |\n+              Tok_Renames | Tok_Reverse =>\n+\n+            System.CRC32.Update\n+              (System.CRC32.CRC32 (Checksum),\n+               Character'Val (Token_Type'Pos (Token) - 1));\n+\n+         when Tok_Tagged | Tok_Then | Tok_Less_Less | Tok_Abort | Tok_Accept |\n+              Tok_Case | Tok_Delay | Tok_Else | Tok_Elsif | Tok_End |\n+              Tok_Exception | Tok_Exit | Tok_Goto | Tok_If | Tok_Pragma |\n+              Tok_Raise | Tok_Requeue | Tok_Return | Tok_Select |\n+              Tok_Terminate | Tok_Until | Tok_When | Tok_Begin | Tok_Declare |\n+              Tok_For | Tok_Loop | Tok_While | Tok_Entry | Tok_Protected |\n+              Tok_Task | Tok_Type | Tok_Subtype =>\n+\n+            System.CRC32.Update\n+              (System.CRC32.CRC32 (Checksum),\n+               Character'Val (Token_Type'Pos (Token) - 2));\n+\n+         when Tok_Use | Tok_Function | Tok_Generic |\n+              Tok_Package | Tok_Procedure | Tok_Private | Tok_With |\n+              Tok_Separate | Tok_EOF | Tok_Semicolon | Tok_Arrow |\n+              Tok_Vertical_Bar | Tok_Dot_Dot | Tok_Project | Tok_Extends |\n+              Tok_External | Tok_External_As_List | Tok_Comment |\n+              Tok_End_Of_Line | Tok_Special | No_Token =>\n+\n+            System.CRC32.Update\n+              (System.CRC32.CRC32 (Checksum),\n+               Character'Val (Token_Type'Pos (Token) - 4));\n+      end case;\n+   end Accumulate_Token_Checksum_Old_Old;\n+\n    ----------------------------\n    -- Determine_Token_Casing --\n    ----------------------------\n@@ -2413,12 +2549,23 @@ package body Scng is\n          --  checksum is independent of the Ada version.\n \n          Token := Tok_Identifier;\n-         Accumulate_Token_Checksum;\n \n          --  Here is where we check if it was a keyword\n \n          if Is_Keyword_Name (Token_Name) then\n-            Token := Token_Type'Val (Get_Name_Table_Byte (Token_Name));\n+            if Opt.Old_Checksums then\n+               Token := Token_Type'Val (Get_Name_Table_Byte (Token_Name));\n+\n+               if Opt.Old_Old_Checksums then\n+                  Accumulate_Token_Checksum_Old_Old;\n+               else\n+                  Accumulate_Token_Checksum_Old;\n+               end if;\n+\n+            else\n+               Accumulate_Token_Checksum;\n+               Token := Token_Type'Val (Get_Name_Table_Byte (Token_Name));\n+            end if;\n \n             --  Keyword style checks\n \n@@ -2475,6 +2622,7 @@ package body Scng is\n          --  It is an identifier after all\n \n          else\n+            Accumulate_Token_Checksum;\n             Post_Scan;\n             return;\n          end if;"}]}