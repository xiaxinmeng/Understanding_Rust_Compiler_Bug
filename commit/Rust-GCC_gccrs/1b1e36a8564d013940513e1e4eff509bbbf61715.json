{"sha": "1b1e36a8564d013940513e1e4eff509bbbf61715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIxZTM2YTg1NjRkMDEzOTQwNTEzZTFlNGVmZjUwOWJiYmY2MTcxNQ==", "commit": {"author": {"name": "Vidya Praveen", "email": "vidyapraveen@arm.com", "date": "2014-06-26T10:25:12Z"}, "committer": {"name": "Vidya Praveen", "email": "vp@gcc.gnu.org", "date": "2014-06-26T10:25:12Z"}, "message": "target-support.exp (bind_pic_locally): Save the flags to 'flags_to_postpone' instead of appending to 'flags'.\n\n\n\tgcc/testsuite/\n\t* lib/target-support.exp (bind_pic_locally): Save the flags to\n\t'flags_to_postpone' instead of appending to 'flags'.\n\t* lib/gcc.exp (gcc_target_compile): Append board_info's multilib_flags\n\twith flags_to_postpone and revert after target_compile.\n\t* lib/g++.exp (g++_target_compile): Ditto.\n\t* lib/gfortran.exp (gfortran_target_compile): Ditto.\n\nFrom-SVN: r212023", "tree": {"sha": "2112c1a37d9a963d7727e2bf9982e668278c9b87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2112c1a37d9a963d7727e2bf9982e668278c9b87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b1e36a8564d013940513e1e4eff509bbbf61715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b1e36a8564d013940513e1e4eff509bbbf61715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b1e36a8564d013940513e1e4eff509bbbf61715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b1e36a8564d013940513e1e4eff509bbbf61715/comments", "author": {"login": "vparm", "id": 63807973, "node_id": "MDQ6VXNlcjYzODA3OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/63807973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vparm", "html_url": "https://github.com/vparm", "followers_url": "https://api.github.com/users/vparm/followers", "following_url": "https://api.github.com/users/vparm/following{/other_user}", "gists_url": "https://api.github.com/users/vparm/gists{/gist_id}", "starred_url": "https://api.github.com/users/vparm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vparm/subscriptions", "organizations_url": "https://api.github.com/users/vparm/orgs", "repos_url": "https://api.github.com/users/vparm/repos", "events_url": "https://api.github.com/users/vparm/events{/privacy}", "received_events_url": "https://api.github.com/users/vparm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de6c4e1fba5886a6edb2b834c7ab791f5a6042d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6c4e1fba5886a6edb2b834c7ab791f5a6042d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6c4e1fba5886a6edb2b834c7ab791f5a6042d6"}], "stats": {"total": 89, "additions": 82, "deletions": 7}, "files": [{"sha": "77e7a33900005a3b15f83ea64f2b55b7e33a98dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b1e36a8564d013940513e1e4eff509bbbf61715", "patch": "@@ -1,3 +1,12 @@\n+2014-06-26  Vidya Praveen  <vidyapraveen@arm.com>\n+\n+\t* lib/target-support.exp (bind_pic_locally): Save the flags to\n+\t'flags_to_postpone' instead of appending to 'flags'.\n+\t* lib/gcc.exp (gcc_target_compile): Append board_info's multilib_flags\n+\twith flags_to_postpone and revert after target_compile.\n+\t* lib/g++.exp (g++_target_compile): Ditto.\n+\t* lib/gfortran.exp (gfortran_target_compile): Ditto.\n+\n 2014-06-26  Nick Clifton  <nickc@redhat.com>\n \n \t* lib/target-supports.exp (check_effective_target_trapping): Fix"}, {"sha": "6658c58cc2c79c7a6d270cc77ce9f9d9b74fa498", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=1b1e36a8564d013940513e1e4eff509bbbf61715", "patch": "@@ -288,6 +288,8 @@ proc g++_target_compile { source dest type options } {\n     global gluefile wrap_flags\n     global ALWAYS_CXXFLAGS\n     global GXX_UNDER_TEST\n+    global flags_to_postpone\n+    global board_info\n \n     if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n \tlappend options \"libs=${gluefile}\"\n@@ -313,10 +315,25 @@ proc g++_target_compile { source dest type options } {\n \texec rm -f $rponame\n     }\n \n+    # bind_pic_locally adds -fpie/-fPIE flags to flags_to_postpone and it is\n+    # appended here to multilib_flags as it can be overridden by the latter\n+    # if it was added earlier. After the target_compile, multilib_flags is\n+    # restored to its orignal content.\n+    set tboard [target_info name]\n+    if {[board_info $tboard exists multilib_flags]} {\n+        set orig_multilib_flags \"[board_info [target_info name] multilib_flags]\"\n+        append board_info($tboard,multilib_flags) \" $flags_to_postpone\"\n+    }\n+\n     set options [dg-additional-files-options $options $source]\n \n     set result [target_compile $source $dest $type $options]\n \n+    if {[board_info $tboard exists multilib_flags]} {\n+        set board_info($tboard,multilib_flags) $orig_multilib_flags\n+        set flags_to_postpone \"\"\n+    }\n+\n     return $result\n }\n "}, {"sha": "f9370646ca432ef71eca08aaecb65a3006077290", "filename": "gcc/testsuite/lib/gcc.exp", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc.exp?ref=1b1e36a8564d013940513e1e4eff509bbbf61715", "patch": "@@ -126,7 +126,9 @@ proc gcc_target_compile { source dest type options } {\n     global GCC_UNDER_TEST\n     global TOOL_OPTIONS\n     global TEST_ALWAYS_FLAGS\n-\t\n+    global flags_to_postpone\n+    global board_info\n+\n     if {[target_info needs_status_wrapper] != \"\" && \\\n \t    [target_info needs_status_wrapper] != \"0\" && \\\n \t    [info exists gluefile] } {\n@@ -162,8 +164,26 @@ proc gcc_target_compile { source dest type options } {\n \tset options [concat \"{additional_flags=$TOOL_OPTIONS}\" $options]\n     }\n \n+    # bind_pic_locally adds -fpie/-fPIE flags to flags_to_postpone and it is\n+    # appended here to multilib_flags as it can be overridden by the latter\n+    # if it was added earlier. After the target_compile, multilib_flags is\n+    # restored to its orignal content.\n+    set tboard [target_info name]\n+    if {[board_info $tboard exists multilib_flags]} {\n+        set orig_multilib_flags \"[board_info [target_info name] multilib_flags]\"\n+        append board_info($tboard,multilib_flags) \" $flags_to_postpone\"\n+    }\n+\n     lappend options \"timeout=[timeout_value]\"\n     lappend options \"compiler=$GCC_UNDER_TEST\"\n     set options [dg-additional-files-options $options $source]\n-    return [target_compile $source $dest $type $options]\n+    set return_val [target_compile $source $dest $type $options]\n+\n+    if {[board_info $tboard exists multilib_flags]} {\n+        set board_info($tboard,multilib_flags) $orig_multilib_flags\n+        set flags_to_postpone \"\"\n+    }\n+\n+    return $return_val\n }\n+"}, {"sha": "9d174bbabb73d4c43ca1aec50e848a5e908e040f", "filename": "gcc/testsuite/lib/gfortran.exp", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran.exp?ref=1b1e36a8564d013940513e1e4eff509bbbf61715", "patch": "@@ -234,16 +234,35 @@ proc gfortran_target_compile { source dest type options } {\n     global gluefile wrap_flags\n     global ALWAYS_GFORTRANFLAGS\n     global GFORTRAN_UNDER_TEST\n+    global flags_to_postpone\n+    global board_info\n \n     if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n \tlappend options \"libs=${gluefile}\"\n \tlappend options \"ldflags=${wrap_flags}\"\n     }\n \n+    # bind_pic_locally adds -fpie/-fPIE flags to flags_to_postpone and it is\n+    # appended here to multilib_flags as it can be overridden by the latter\n+    # if it was added earlier. After the target_compile, multilib_flags is\n+    # restored to its orignal content.\n+    set tboard [target_info name]\n+    if {[board_info $tboard exists multilib_flags]} {\n+        set orig_multilib_flags \"[board_info [target_info name] multilib_flags]\"\n+        append board_info($tboard,multilib_flags) \" $flags_to_postpone\"\n+    }\n+\n     lappend options \"compiler=$GFORTRAN_UNDER_TEST\"\n     lappend options \"timeout=[timeout_value]\"\n \n     set options [concat \"$ALWAYS_GFORTRANFLAGS\" $options]\n     set options [dg-additional-files-options $options $source]\n-    return [target_compile $source $dest $type $options]\n+    set return_val [target_compile $source $dest $type $options]\n+\n+    if {[board_info $tboard exists multilib_flags]} {\n+        set board_info($tboard,multilib_flags) $orig_multilib_flags\n+        set flags_to_postpone \"\"\n+    }\n+\n+    return $return_val\n }"}, {"sha": "83a8167e90080ccca392346ef2ce311b68ddfa69", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b1e36a8564d013940513e1e4eff509bbbf61715/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=1b1e36a8564d013940513e1e4eff509bbbf61715", "patch": "@@ -5312,25 +5312,35 @@ proc add_options_for_ieee { flags } {\n     return $flags\n }\n \n+if {![info exists flags_to_postpone]} {\n+    set flags_to_postpone \"\"\n+}\n+\n # Add to FLAGS the flags needed to enable functions to bind locally\n # when using pic/PIC passes in the testsuite.\n-\n proc add_options_for_bind_pic_locally { flags } {\n+    global flags_to_postpone\n+\n+    # Instead of returning 'flags' with the -fPIE or -fpie appended, we save it\n+    # in 'flags_to_postpone' and append it later in gcc_target_compile procedure in\n+    # order to make sure that the multilib_flags doesn't override this.\n+\n     if {[check_no_compiler_messages using_pic2 assembly {\n         #if __PIC__ != 2\n         #error FOO\n         #endif\n     }]} {\n-\treturn \"$flags -fPIE\"\n+        set flags_to_postpone \"-fPIE\"\n+        return $flags\n     }\n     if {[check_no_compiler_messages using_pic1 assembly {\n         #if __PIC__ != 1\n         #error FOO\n         #endif\n     }]} {\n-\treturn \"$flags -fpie\"\n+        set flags_to_postpone \"-fpie\"\n+        return $flags\n     }\n-\n     return $flags\n }\n "}]}