{"sha": "cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q4YTlkNmQxYzY2ZDc3ZTNkNmE4MjQ2OGI1ZWE0Nzk0ZGUzZmZjYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-04-01T21:25:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-04-01T21:25:20Z"}, "message": "re PR c++/60374 ([c++11] ICE with invalid template specialization)\n\n\tPR c++/60374\n\t* pt.c (coerce_template_parms): Check that the pack expansion\n\tpattern works with the first matching parameter.\n\nFrom-SVN: r208999", "tree": {"sha": "44ff9965bfd1023db2b3771c738c5eb31380faf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44ff9965bfd1023db2b3771c738c5eb31380faf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0df9da030c424d798044b4081865a68c2b08a5e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df9da030c424d798044b4081865a68c2b08a5e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df9da030c424d798044b4081865a68c2b08a5e9"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "764400c78554f9d30c40d9d475e3780f0fd230a6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca", "patch": "@@ -1,3 +1,9 @@\n+2014-04-01  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/60374\n+\t* pt.c (coerce_template_parms): Check that the pack expansion\n+\tpattern works with the first matching parameter.\n+\n 2014-04-01  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n \n \t* cp/init.c (perform_member_init): Homogenize uninitialized"}, {"sha": "9de00d556e207de24a32e92dd6b63cfc6351b44f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca", "patch": "@@ -6933,6 +6933,26 @@ coerce_template_parms (tree parms,\n \t{\n           if (PACK_EXPANSION_P (arg))\n             {\n+\t      /* \"If every valid specialization of a variadic template\n+\t\t requires an empty template parameter pack, the template is\n+\t\t ill-formed, no diagnostic required.\"  So check that the\n+\t\t pattern works with this parameter.  */\n+\t      tree pattern = PACK_EXPANSION_PATTERN (arg);\n+\t      tree conv = convert_template_argument (TREE_VALUE (parm),\n+\t\t\t\t\t\t     pattern, new_args,\n+\t\t\t\t\t\t     complain, parm_idx,\n+\t\t\t\t\t\t     in_decl);\n+\t      if (conv == error_mark_node)\n+\t\t{\n+\t\t  inform (input_location, \"so any instantiation with a \"\n+\t\t\t \"non-empty parameter pack would be ill-formed\");\n+\t\t  ++lost;\n+\t\t}\n+\t      else if (TYPE_P (conv) && !TYPE_P (pattern))\n+\t\t/* Recover from missing typename.  */\n+\t\tTREE_VEC_ELT (inner_args, arg_idx)\n+\t\t  = make_pack_expansion (conv);\n+\n               /* We don't know how many args we have yet, just\n                  use the unconverted ones for now.  */\n               new_inner_args = inner_args;"}, {"sha": "198f9c5ba39518bccbbc4162a252520dec05d8cc", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic154.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic154.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic154.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic154.C?ref=cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/60374\n+// { dg-do compile { target c++11 } }\n+\n+template<typename> struct A {};\n+\n+template<typename...T> struct A<T::T...> {}; // { dg-error \"typename|partial|T\" }\n+\n+A<int> a;"}, {"sha": "d912317bdc4f0290e419f7c9e5ef4213d4acf912", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic155.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic155.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic155.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic155.C?ref=cd8a9d6d1c66d77e3d6a82468b5ea4794de3ffca", "patch": "@@ -0,0 +1,4 @@\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T> struct A {};\n+template <int... I> struct B: A<I...> {}; // { dg-error \"type\" }"}]}