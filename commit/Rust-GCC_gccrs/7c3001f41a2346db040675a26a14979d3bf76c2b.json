{"sha": "7c3001f41a2346db040675a26a14979d3bf76c2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzMDAxZjQxYTIzNDZkYjA0MDY3NWEyNmExNDk3OWQzYmY3NmMyYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-11-25T09:29:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-11-25T09:29:18Z"}, "message": "re PR c++/59080 ([c++11] ICE with array of auto)\n\n/cp\n2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59080\n\t* pt.c (unify): Don't call unify_array_domain with a NULL_TREE\n\tthird argument.\n\n\tPR c++/59096\n\t* pt.c (apply_late_template_attributes): Check that TREE_VALUE\n\tisn't NULL_TREE in the attribute_takes_identifier_p case.\n\n/testsuite\n2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/59080\n\t* g++.dg/cpp0x/initlist75.C: New.\n\n\tPR c++/59096\n\t* g++.dg/cpp0x/gen-attrs-57.C: New.\n\nFrom-SVN: r205344", "tree": {"sha": "8c4df0c4ef890e3613150784ffba4521d08c85b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c4df0c4ef890e3613150784ffba4521d08c85b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c3001f41a2346db040675a26a14979d3bf76c2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3001f41a2346db040675a26a14979d3bf76c2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c3001f41a2346db040675a26a14979d3bf76c2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3001f41a2346db040675a26a14979d3bf76c2b/comments", "author": null, "committer": null, "parents": [{"sha": "d1d1af106b3e735c2e29a63840ee1687f12927d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1d1af106b3e735c2e29a63840ee1687f12927d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1d1af106b3e735c2e29a63840ee1687f12927d2"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "74b75e9891c9d9878d0702e15cbc7d5b2d6e5780", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c3001f41a2346db040675a26a14979d3bf76c2b", "patch": "@@ -1,3 +1,13 @@\n+2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/59080\n+\t* pt.c (unify): Don't call unify_array_domain with a NULL_TREE\n+\tthird argument.\n+\n+\tPR c++/59096\n+\t* pt.c (apply_late_template_attributes): Check that TREE_VALUE\n+\tisn't NULL_TREE in the attribute_takes_identifier_p case.\n+\n 2013-11-25  Adam Butcher  <adam@jessamine.co.uk>\n \n \tPR c++/59112"}, {"sha": "b58c7556e2eaa8b2d0d0d896a39b1b29079d5823", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7c3001f41a2346db040675a26a14979d3bf76c2b", "patch": "@@ -8624,7 +8624,8 @@ apply_late_template_attributes (tree *decl_p, tree attributes, int attr_flags,\n \t\t pass it through tsubst.  Attributes like mode, format,\n \t\t cleanup and several target specific attributes expect it\n \t\t unmodified.  */\n-\t      else if (attribute_takes_identifier_p (get_attribute_name (t)))\n+\t      else if (attribute_takes_identifier_p (get_attribute_name (t))\n+\t\t       && TREE_VALUE (t))\n \t\t{\n \t\t  tree chain\n \t\t    = tsubst_expr (TREE_CHAIN (TREE_VALUE (t)), args, complain,\n@@ -17210,8 +17211,9 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict,\n \t  /* Also deduce from the length of the initializer list.  */\n \t  tree max = size_int (CONSTRUCTOR_NELTS (arg));\n \t  tree idx = compute_array_index_type (NULL_TREE, max, tf_none);\n-\t  return unify_array_domain (tparms, targs, TYPE_DOMAIN (parm),\n-\t\t\t\t     idx, explain_p);\n+\t  if (TYPE_DOMAIN (parm) != NULL_TREE)\n+\t    return unify_array_domain (tparms, targs, TYPE_DOMAIN (parm),\n+\t\t\t\t       idx, explain_p);\n \t}\n \n       /* If the std::initializer_list<T> deduction worked, replace the"}, {"sha": "3459c5142f52d71f70a132bf0c8903f2dd18dc9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c3001f41a2346db040675a26a14979d3bf76c2b", "patch": "@@ -1,3 +1,11 @@\n+2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/59080\n+\t* g++.dg/cpp0x/initlist75.C: New.\n+\n+\tPR c++/59096\n+\t* g++.dg/cpp0x/gen-attrs-57.C: New.\n+\n 2013-11-25  Adam Butcher  <adam@jessamine.co.uk>\n \n \tPR c++/59112"}, {"sha": "12b4f4c84e5e1183a27106e994e340266e1a747f", "filename": "gcc/testsuite/g++.dg/cpp0x/gen-attrs-57.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-57.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-57.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fgen-attrs-57.C?ref=7c3001f41a2346db040675a26a14979d3bf76c2b", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/59096\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T> struct A\n+{\n+  typedef T B [[mode]];   // { dg-warning \"ignored\" }\n+};\n+\n+A<int>::B b;"}, {"sha": "f185401c20a1dd254f7f4dd2d240d70945fe3745", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist75.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist75.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3001f41a2346db040675a26a14979d3bf76c2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist75.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist75.C?ref=7c3001f41a2346db040675a26a14979d3bf76c2b", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/59080\n+// { dg-require-effective-target c++11 }\n+\n+#include <initializer_list>\n+\n+auto foo[] = {};    // { dg-error \"auto|unable to deduce\" }"}]}