{"sha": "2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIwZGYwYTZhYzc5YjM0ZjVmYWM0ZjNkNDU2ZThlMTRkYjIyMGU0YQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-07T10:29:05Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-07T10:30:11Z"}, "message": "Fortran: Fixes for pointer function call as variable (PR96896)\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/96896\n\t* resolve.c (get_temp_from_expr): Also reset proc_pointer +\n\tuse_assoc attribute.\n\t(resolve_ptr_fcn_assign): Use information from the LHS.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/96896\n\t* gfortran.dg/ptr_func_assign_4.f08: Update dg-error.\n\t* gfortran.dg/ptr-func-3.f90: New test.", "tree": {"sha": "bfab26a04edec139916a27476b2d98fe079bf2e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfab26a04edec139916a27476b2d98fe079bf2e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9c87dc958a2ef3203cbdb88ed1b0575564a4279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9c87dc958a2ef3203cbdb88ed1b0575564a4279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9c87dc958a2ef3203cbdb88ed1b0575564a4279"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "ebf89a9b1f52f31557c739673c2e84e4b0889aa6", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a", "patch": "@@ -11179,9 +11179,11 @@ get_temp_from_expr (gfc_expr *e, gfc_namespace *ns)\n   /* Add the attributes and the arrayspec to the temporary.  */\n   tmp->n.sym->attr = gfc_expr_attr (e);\n   tmp->n.sym->attr.function = 0;\n+  tmp->n.sym->attr.proc_pointer = 0;\n   tmp->n.sym->attr.result = 0;\n   tmp->n.sym->attr.flavor = FL_VARIABLE;\n   tmp->n.sym->attr.dummy = 0;\n+  tmp->n.sym->attr.use_assoc = 0;\n   tmp->n.sym->attr.intent = INTENT_UNKNOWN;\n \n   if (as)\n@@ -11601,7 +11603,7 @@ resolve_ptr_fcn_assign (gfc_code **code, gfc_namespace *ns)\n       return false;\n     }\n \n-  tmp_ptr_expr = get_temp_from_expr ((*code)->expr2, ns);\n+  tmp_ptr_expr = get_temp_from_expr ((*code)->expr1, ns);\n \n   /* get_temp_from_expression is set up for ordinary assignments. To that\n      end, where array bounds are not known, arrays are made allocatable."}, {"sha": "0f1af64002a4127130f16e054e65ecb698f8c006", "filename": "gcc/testsuite/gfortran.dg/ptr-func-3.f90", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a/gcc%2Ftestsuite%2Fgfortran.dg%2Fptr-func-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a/gcc%2Ftestsuite%2Fgfortran.dg%2Fptr-func-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fptr-func-3.f90?ref=2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a", "patch": "@@ -0,0 +1,56 @@\n+! { dg-do run }\n+! PR fortran/96896\n+\n+call test1\n+call reshape_test\n+end\n+\n+subroutine test1\n+implicit none\n+integer, target :: B\n+integer, pointer :: A(:)\n+allocate(A(5))\n+A = 1\n+B = 10\n+get_A() = get_B()\n+if (any (A /= 10)) stop 1\n+get_A() = get_A()\n+if (any (A /= 10)) stop 2\n+deallocate(A)\n+contains\n+  function get_A()\n+    integer, pointer :: get_A(:)\n+    get_A => A\n+  end\n+  function get_B()\n+    integer, pointer :: get_B\n+    get_B => B\n+  end\n+end\n+\n+subroutine reshape_test\n+    implicit none\n+    real, target, dimension (1:9) :: b\n+    integer :: i\n+    b = 1.0\n+    myshape(b) = 3.0\n+    do i = 1, 3\n+      myfunc (b,i,2) = b(i) + i\n+      b(i) = b(i) + 2.0\n+    end do\n+    if (any (b /= [real::5,5,5,4,5,6,3,3,3])) stop 3\n+contains\n+  function myfunc(b,i,j)\n+    real, target, dimension (1:9) :: b\n+    real, pointer :: myfunc\n+    real, pointer :: p(:,:)\n+    integer :: i,j \n+    p => myshape(b)\n+    myfunc => p(i,j)\n+  end function myfunc\n+  function myshape(b)\n+    real, target, dimension (1:9) :: b\n+    real, pointer :: myshape(:,:)\n+    myshape(1:3,1:3) => b\n+  end function myshape\n+end subroutine reshape_test"}, {"sha": "49ba9bcd3d9d1fb627d6e0b65dd1503608508c62", "filename": "gcc/testsuite/gfortran.dg/ptr_func_assign_4.f08", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a/gcc%2Ftestsuite%2Fgfortran.dg%2Fptr_func_assign_4.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a/gcc%2Ftestsuite%2Fgfortran.dg%2Fptr_func_assign_4.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fptr_func_assign_4.f08?ref=2b0df0a6ac79b34f5fac4f3d456e8e14db220e4a", "patch": "@@ -10,8 +10,8 @@ program p\n   integer :: c\n \n   c = 3\n-  func (b(2, 2)) = b ! { dg-error \"Different ranks\" }\n-  func (c) = b       ! { dg-error \"Different ranks\" }\n+  func (b(2, 2)) = b ! { dg-error \"Incompatible ranks 1 and 2 in assignment\" }\n+  func (c) = b       ! { dg-error \"Incompatible ranks 1 and 2 in assignment\" }\n \n contains\n   function func(arg) result(r)"}]}