{"sha": "428b381275bc95032274440f02d7719225de2c17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4YjM4MTI3NWJjOTUwMzIyNzQ0NDBmMDJkNzcxOTIyNWRlMmMxNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-05-28T02:36:55Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-05-28T02:36:55Z"}, "message": "Add --enable-default-pie option to GCC configure\n\nAdd --enable-default-pie option to configure GCC to generate PIE by\ndefault.\n\ngcc/\n\n\t* Makefile.in (COMPILER): Add @NO_PIE_CFLAGS@.\n\t(BUILD_CFLAGS): Likewise.\n\t(BUILD_CXXFLAGS): Likewise.\n\t(LINKER): Add @NO_PIE_FLAG@.\n\t(BUILD_LDFLAGS): Likewise.\n\t(libgcc.mvars): Set NO_PIE_CFLAGS to -fno-PIE for\n\t--enable-default-pie.\n\t* common.opt (fPIE): Initialize to -1.\n\t(fpie): Likewise.\n\t(no-pie): New option.\n\t(pie): Replace \"Negative(shared)\" with \"Negative(no-pie)\".\n\t* configure.ac: Add --enable-default-pie.\n\t(NO_PIE_CFLAGS): New.  Check if -fno-PIE works.  AC_SUBST.\n\t(NO_PIE_FLAG): New.  Check if -no-pie works.  AC_SUBST.\n\t* defaults.h (DEFAULT_FLAG_PIE): New.  Default PIE to -fPIE.\n\t* gcc.c (NO_PIE_SPEC): New.\n\t(PIE_SPEC): Likewise.\n\t(NO_FPIE1_SPEC): Likewise.\n\t(FPIE1_SPEC): Likewise.\n\t(NO_FPIE2_SPEC): Likewise.\n\t(FPIE2_SPEC): Likewise.\n\t(NO_FPIE2_SPEC): Likewise.\n\t(FPIE_SPEC): Likewise.\n\t(NO_FPIE_SPEC): Likewise.\n\t(NO_FPIC1_SPEC): Likewise.\n\t(FPIC1_SPEC): Likewise.\n\t(NO_FPIC2_SPEC): Likewise.\n\t(FPIC2_SPEC): Likewise.\n\t(NO_FPIC2_SPEC): Likewise.\n\t(FPIC_SPEC): Likewise.\n\t(NO_FPIC_SPEC): Likewise.\n\t(NO_FPIE1_AND_FPIC1_SPEC): Likewise.\n\t(FPIE1_OR_FPIC1_SPEC): Likewise.\n\t(NO_FPIE2_AND_FPIC2_SPEC): Likewise.\n\t(FPIE2_OR_FPIC2_SPEC): Likewise.\n\t(NO_FPIE_AND_FPIC_SPEC): Likewise.\n\t(FPIE_OR_FPIC_SPEC): Likewise.\n\t(LD_PIE_SPEC): Likewise.\n\t(LINK_PIE_SPEC): Handle -no-pie.  Use PIE_SPEC and LD_PIE_SPEC.\n\t* opts.c (finish_options): Update opts->x_flag_pie if it is -1.\n\t* config/darwin.h (PIE_SPEC): Renamed to ...\n\t(DARWIN_PIE_SPEC): This.\n\t(LINK_SPEC): Replace PIE_SPEC with DARWIN_PIE_SPEC.\n\t* config/darwin9.h (PIE_SPEC): Renamed to ...\n\t(DARWIN_PIE_SPEC): This.\n\t* config/gnu-user.h (GNU_USER_TARGET_STARTFILE_SPEC): Use\n\tPIE_SPEC and NO_PIE_SPEC if HAVE_LD_PIE is defined.\n\t* config/openbsd.h (ASM_SPEC): Use FPIE1_OR_FPIC1_SPEC and\n\tFPIE2_OR_FPIC2_SPEC.\n\t* config/m68k/netbsd-elf.h (ASM_SPEC): Likewise.\n\t* config/m68k/openbsd.h (ASM_SPEC): Likewise.\n\t* gcc/config/sol2.h (ASM_PIC_SPEC): Likewise.\n\t* config/arm/freebsd.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n\t* config/arm/netbsd-elf.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n\t* config/arm/semi.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n\t* config/cris/linux.h (CRIS_ASM_SUBTARGET_SPEC): Likewise.\n\t* config/m32r/m32r.h (ASM_SPEC): Likewise.\n\t* config/m68k/uclinux.h (DRIVER_SELF_SPECS): Likewise.\n\t* config/rs6000/linux64.h (ASM_SPEC32): Likewise.\n\t* config/rs6000/sysv4.h (ASM_SPEC): Likewise.\n\t* config/sparc/freebsd.h (ASM_SPEC): Likewise.\n\t* config/sparc/linux.h (ASM_SPEC): Likewise.\n\t* config/sparc/linux64.h (ASM_SPEC): Likewise.\n\t* config/sparc/netbsd-elf.h (ASM_SPEC): Likewise.\n\t* config/sparc/openbsd64.h (ASM_SPEC): Likewise.\n\t* config/sparc/sp-elf.h (ASM_SPEC): Likewise.\n\t* config/sparc/sp64-elf.h (ASM_SPEC): Likewise.\n\t* config/sparc/sparc.h (ASM_SPEC): Likewise.\n\t* config/sparc/sysv4.h (ASM_SPEC): Likewise.\n\t* config/sparc/vxworks.h (ASM_SPEC): Likewise.\n\t* config/c6x/elf-common.h (ASM_SPEC): Use NO_FPIC2_SPEC,\n\tFPIC2_SPEC, FPIC1_SPEC and FPIC2_SPEC.\n\t* config/c6x/uclinux-elf.h (LINK_SPEC): Use FPIE_SPEC.\n\t* config/frv/frv.h (DRIVER_SELF_SPECS): Use FPIC_SPEC,\n\tNO_FPIC_SPEC and NO_FPIE1_AND_FPIC1_SPEC.\n\t(ASM_SPEC): Use FPIE1_OR_FPIC1_SPEC and FPIE2_OR_FPIC2_SPEC.\n\t* config/m68k/m68k.h (ASM_PCREL_SPEC): Use FPIC_SPEC and\n\tNO_FPIC_SPEC.\n\t* config/mips/gnu-user.h (NO_SHARED_SPECS): Use\n\tNO_FPIE_AND_FPIC_SPEC.\n\t* config/mips/vxworks.h (SUBTARGET_ASM_SPEC): Use FPIC_SPEC.\n\t* config/rs6000/freebsd64.h (ASM_SPEC32): Likewise.\n\t* config/rs6000/vxworks.h (ASM_SPEC): Likewise.\n\t* config/vax/linux.h (ASM_SPEC): Likewise.\n\t* doc/install.texi: Document --enable-default-pie.\n\t* doc/invoke.texi: Document -no-pie.\n\t* config.in: Regenerated.\n\t* configure: Likewise.\n\ngcc/ada/\n\n\t* gcc-interface/Makefile.in (TOOLS_LIBS): Add @NO_PIE_FLAG@.\n\nlibgcc/\n\n\t* Makefile.in (CRTSTUFF_CFLAGS): Add $(NO_PIE_CFLAGS).\n\nFrom-SVN: r223796", "tree": {"sha": "c1842de03eb800c3a5a10555b12a3407e50560ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1842de03eb800c3a5a10555b12a3407e50560ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/428b381275bc95032274440f02d7719225de2c17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428b381275bc95032274440f02d7719225de2c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428b381275bc95032274440f02d7719225de2c17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428b381275bc95032274440f02d7719225de2c17/comments", "author": null, "committer": null, "parents": [{"sha": "ddd93587efdd85681c3512bbfaa1988ea449d7dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd93587efdd85681c3512bbfaa1988ea449d7dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd93587efdd85681c3512bbfaa1988ea449d7dc"}], "stats": {"total": 426, "additions": 375, "deletions": 51}, "files": [{"sha": "29c26c4066134d2b8e99c6441a7c9f3979fb6d60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -1,3 +1,95 @@\n+2015-05-27  Magnus Granberg  <zorry@gentoo.org>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.in (COMPILER): Add @NO_PIE_CFLAGS@.\n+\t(BUILD_CFLAGS): Likewise.\n+\t(BUILD_CXXFLAGS): Likewise.\n+\t(LINKER): Add @NO_PIE_FLAG@.\n+\t(BUILD_LDFLAGS): Likewise.\n+\t(libgcc.mvars): Set NO_PIE_CFLAGS to -fno-PIE for\n+\t--enable-default-pie.\n+\t* common.opt (fPIE): Initialize to -1.\n+\t(fpie): Likewise.\n+\t(no-pie): New option.\n+\t(pie): Replace \"Negative(shared)\" with \"Negative(no-pie)\".\n+\t* configure.ac: Add --enable-default-pie.\n+\t(NO_PIE_CFLAGS): New.  Check if -fno-PIE works.  AC_SUBST.\n+\t(NO_PIE_FLAG): New.  Check if -no-pie works.  AC_SUBST.\n+\t* defaults.h (DEFAULT_FLAG_PIE): New.  Default PIE to -fPIE.\n+\t* gcc.c (NO_PIE_SPEC): New.\n+\t(PIE_SPEC): Likewise.\n+\t(NO_FPIE1_SPEC): Likewise.\n+\t(FPIE1_SPEC): Likewise.\n+\t(NO_FPIE2_SPEC): Likewise.\n+\t(FPIE2_SPEC): Likewise.\n+\t(NO_FPIE2_SPEC): Likewise.\n+\t(FPIE_SPEC): Likewise.\n+\t(NO_FPIE_SPEC): Likewise.\n+\t(NO_FPIC1_SPEC): Likewise.\n+\t(FPIC1_SPEC): Likewise.\n+\t(NO_FPIC2_SPEC): Likewise.\n+\t(FPIC2_SPEC): Likewise.\n+\t(NO_FPIC2_SPEC): Likewise.\n+\t(FPIC_SPEC): Likewise.\n+\t(NO_FPIC_SPEC): Likewise.\n+\t(NO_FPIE1_AND_FPIC1_SPEC): Likewise.\n+\t(FPIE1_OR_FPIC1_SPEC): Likewise.\n+\t(NO_FPIE2_AND_FPIC2_SPEC): Likewise.\n+\t(FPIE2_OR_FPIC2_SPEC): Likewise.\n+\t(NO_FPIE_AND_FPIC_SPEC): Likewise.\n+\t(FPIE_OR_FPIC_SPEC): Likewise.\n+\t(LD_PIE_SPEC): Likewise.\n+\t(LINK_PIE_SPEC): Handle -no-pie.  Use PIE_SPEC and LD_PIE_SPEC.\n+\t* opts.c (finish_options): Update opts->x_flag_pie if it is -1.\n+\t* config/darwin.h (PIE_SPEC): Renamed to ...\n+\t(DARWIN_PIE_SPEC): This.\n+\t(LINK_SPEC): Replace PIE_SPEC with DARWIN_PIE_SPEC.\n+\t* config/darwin9.h (PIE_SPEC): Renamed to ...\n+\t(DARWIN_PIE_SPEC): This.\n+\t* config/gnu-user.h (GNU_USER_TARGET_STARTFILE_SPEC): Use\n+\tPIE_SPEC and NO_PIE_SPEC if HAVE_LD_PIE is defined.\n+\t* config/openbsd.h (ASM_SPEC): Use FPIE1_OR_FPIC1_SPEC and\n+\tFPIE2_OR_FPIC2_SPEC.\n+\t* config/m68k/netbsd-elf.h (ASM_SPEC): Likewise.\n+\t* config/m68k/openbsd.h (ASM_SPEC): Likewise.\n+\t* gcc/config/sol2.h (ASM_PIC_SPEC): Likewise.\n+\t* config/arm/freebsd.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n+\t* config/arm/netbsd-elf.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n+\t* config/arm/semi.h (SUBTARGET_EXTRA_ASM_SPEC): Likewise.\n+\t* config/cris/linux.h (CRIS_ASM_SUBTARGET_SPEC): Likewise.\n+\t* config/m32r/m32r.h (ASM_SPEC): Likewise.\n+\t* config/m68k/uclinux.h (DRIVER_SELF_SPECS): Likewise.\n+\t* config/rs6000/linux64.h (ASM_SPEC32): Likewise.\n+\t* config/rs6000/sysv4.h (ASM_SPEC): Likewise.\n+\t* config/sparc/freebsd.h (ASM_SPEC): Likewise.\n+\t* config/sparc/linux.h (ASM_SPEC): Likewise.\n+\t* config/sparc/linux64.h (ASM_SPEC): Likewise.\n+\t* config/sparc/netbsd-elf.h (ASM_SPEC): Likewise.\n+\t* config/sparc/openbsd64.h (ASM_SPEC): Likewise.\n+\t* config/sparc/sp-elf.h (ASM_SPEC): Likewise.\n+\t* config/sparc/sp64-elf.h (ASM_SPEC): Likewise.\n+\t* config/sparc/sparc.h (ASM_SPEC): Likewise.\n+\t* config/sparc/sysv4.h (ASM_SPEC): Likewise.\n+\t* config/sparc/vxworks.h (ASM_SPEC): Likewise.\n+\t* config/c6x/elf-common.h (ASM_SPEC): Use NO_FPIC2_SPEC,\n+\tFPIC2_SPEC, FPIC1_SPEC and FPIC2_SPEC.\n+\t* config/c6x/uclinux-elf.h (LINK_SPEC): Use FPIE_SPEC.\n+\t* config/frv/frv.h (DRIVER_SELF_SPECS): Use FPIC_SPEC,\n+\tNO_FPIC_SPEC and NO_FPIE1_AND_FPIC1_SPEC.\n+\t(ASM_SPEC): Use FPIE1_OR_FPIC1_SPEC and FPIE2_OR_FPIC2_SPEC.\n+\t* config/m68k/m68k.h (ASM_PCREL_SPEC): Use FPIC_SPEC and\n+\tNO_FPIC_SPEC.\n+\t* config/mips/gnu-user.h (NO_SHARED_SPECS): Use\n+\tNO_FPIE_AND_FPIC_SPEC.\n+\t* config/mips/vxworks.h (SUBTARGET_ASM_SPEC): Use FPIC_SPEC.\n+\t* config/rs6000/freebsd64.h (ASM_SPEC32): Likewise.\n+\t* config/rs6000/vxworks.h (ASM_SPEC): Likewise.\n+\t* config/vax/linux.h (ASM_SPEC): Likewise.\n+\t* doc/install.texi: Document --enable-default-pie.\n+\t* doc/invoke.texi: Document -no-pie.\n+\t* config.in: Regenerated.\n+\t* configure: Likewise.\n+\n 2015-05-28  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR rtl-optimization/66168"}, {"sha": "b59b5d9e6e9773f2bde01641a5d9c7a84fd396f0", "filename": "gcc/Makefile.in", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -253,6 +253,12 @@ LINKER = $(CC)\n LINKER_FLAGS = $(CFLAGS)\n endif\n \n+# We don't want to compile the compilers with -fPIE, it make PCH fail.\n+COMPILER += @NO_PIE_CFLAGS@\n+\n+# Link with -no-pie since we compile the compiler with -fno-PIE.\n+LINKER += @NO_PIE_FLAG@\n+\n # Like LINKER, but use a mutex for serializing front end links.\n ifeq (@DO_LINK_MUTEX@,true)\n LLINKER = $(SHELL) $(srcdir)/lock-and-run.sh linkfe.lck $(LINKER)\n@@ -746,6 +752,8 @@ CC_FOR_BUILD = @CC_FOR_BUILD@\n CXX_FOR_BUILD = @CXX_FOR_BUILD@\n BUILD_CFLAGS= @BUILD_CFLAGS@ -DGENERATOR_FILE\n BUILD_CXXFLAGS = @BUILD_CXXFLAGS@ -DGENERATOR_FILE\n+BUILD_CFLAGS += @NO_PIE_CFLAGS@\n+BUILD_CXXFLAGS += @NO_PIE_CFLAGS@\n \n # Native compiler that we use.  This may be C++ some day.\n COMPILER_FOR_BUILD = $(CXX_FOR_BUILD)\n@@ -757,6 +765,7 @@ BUILD_LINKERFLAGS = $(BUILD_CXXFLAGS)\n \n # Native linker and preprocessor flags.  For x-fragment overrides.\n BUILD_LDFLAGS=@BUILD_LDFLAGS@\n+BUILD_LDFLAGS += @NO_PIE_FLAG@\n BUILD_CPPFLAGS= -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n \t\t-I$(srcdir)/../include @INCINTL@ $(CPPINC) $(CPPFLAGS)\n \n@@ -1860,6 +1869,12 @@ libgcc.mvars: config.status Makefile specs xgcc$(exeext)\n \techo GCC_CFLAGS = '$(GCC_CFLAGS)' >> tmp-libgcc.mvars\n \techo INHIBIT_LIBC_CFLAGS = '$(INHIBIT_LIBC_CFLAGS)' >> tmp-libgcc.mvars\n \techo TARGET_SYSTEM_ROOT = '$(TARGET_SYSTEM_ROOT)' >> tmp-libgcc.mvars\n+\tif test @enable_default_pie@ = yes; then \\\n+\t  NO_PIE_CFLAGS=\"-fno-PIE\"; \\\n+\telse \\\n+\t  NO_PIE_CFLAGS=; \\\n+\tfi; \\\n+\techo NO_PIE_CFLAGS = \"$$NO_PIE_CFLAGS\" >> tmp-libgcc.mvars\n \n \tmv tmp-libgcc.mvars libgcc.mvars\n "}, {"sha": "aa4aa18a014b0523341aee0ac7c6ae15c3b09610", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -1,3 +1,7 @@\n+2015-05-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc-interface/Makefile.in (TOOLS_LIBS): Add @NO_PIE_FLAG@.\n+\n 2015-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (elaborate_all_entities): Do not elaborate an"}, {"sha": "90aedb575d753a2727e0a0026b28b00962a2470d", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -267,6 +267,9 @@ TOOLS_LIBS = ../link.o ../targext.o ../../ggc-none.o ../../libcommon-target.a \\\n   ../../libcommon.a ../../../libcpp/libcpp.a $(LIBGNAT) $(LIBINTL) $(LIBICONV) \\\n   ../$(LIBBACKTRACE) ../$(LIBIBERTY) $(SYSLIBS) $(TGT_LIB)\n \n+# Add -no-pie to TOOLS_LIBS since some of them are compiled with -fno-PIE.\n+TOOLS_LIBS += @NO_PIE_FLAG@\n+\n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,\n # so that tm.h and config.h will be found in the compilation"}, {"sha": "6e15af2e189a1f1503af79a2de8b8b94d1d9eb7d", "filename": "gcc/common.opt", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -1778,15 +1778,15 @@ Common Report Var(flag_pic,2) Negative(fPIE)\n Generate position-independent code if possible (large mode)\n \n fPIE\n-Common Report Var(flag_pie,2) Negative(fpic)\n+Common Report Var(flag_pie,2) Negative(fpic) Init(-1)\n Generate position-independent code for executables if possible (large mode)\n \n fpic\n Common Report Var(flag_pic,1) Negative(fpie)\n Generate position-independent code if possible (small mode)\n \n fpie\n-Common Report Var(flag_pie,1) Negative(fPIC)\n+Common Report Var(flag_pie,1) Negative(fPIC) Init(-1)\n Generate position-independent code for executables if possible (small mode)\n \n fplt\n@@ -2863,8 +2863,12 @@ Driver\n symbolic\n Driver\n \n-pie\n+no-pie\n Driver RejectNegative Negative(shared)\n+Don't create a position independent executable\n+\n+pie\n+Driver RejectNegative Negative(no-pie)\n Create a position independent executable\n \n z"}, {"sha": "daaf9067e4f4f5ffd5f0930475f43ad49a38a7a6", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -89,6 +89,12 @@\n #endif\n \n \n+/* Define if your target supports default PIE and it is enabled. */\n+#ifndef USED_FOR_TARGET\n+#undef ENABLE_DEFAULT_PIE\n+#endif\n+\n+\n /* Define if you want more run-time sanity checks for dataflow. */\n #ifndef USED_FOR_TARGET\n #undef ENABLE_DF_CHECKING"}, {"sha": "2febf4b6091326a799dea441fb46d0ef25bf0a45", "filename": "gcc/config/arm/freebsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Farm%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Farm%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffreebsd.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -34,7 +34,7 @@\n #undef SUBTARGET_EXTRA_ASM_SPEC\n #define SUBTARGET_EXTRA_ASM_SPEC \\\n   \"%{mabi=apcs-gnu|mabi=atpcs:-meabi=gnu;:-meabi=5} \" TARGET_FIX_V4BX_SPEC \" \\\n-  %{fpic|fpie:-k} %{fPIC|fPIE:-k}\"\n+  %{\" FPIE_OR_FPIC_SPEC \":-k}\"\n \n #undef SUBTARGET_ASM_FLOAT_SPEC\n #ifdef TARGET_FREEBSD_ARM_HARD_FLOAT"}, {"sha": "65460979410d82f748560b62b7086cf7ec2d051f", "filename": "gcc/config/arm/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -55,7 +55,7 @@\n \n #undef SUBTARGET_EXTRA_ASM_SPEC\n #define SUBTARGET_EXTRA_ASM_SPEC\t\\\n-  \"-matpcs %{fpic|fpie:-k} %{fPIC|fPIE:-k}\"\n+  \"-matpcs %{\" FPIE_OR_FPIC_SPEC \":-k}\"\n \n /* Default to full VFP if -mfloat-abi=hard is specified.  */\n #undef SUBTARGET_ASM_FLOAT_SPEC"}, {"sha": "1c938d3919788e86f29da636b9e0b9ca6d58b940", "filename": "gcc/config/arm/semi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Farm%2Fsemi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Farm%2Fsemi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsemi.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -58,7 +58,7 @@\n    binutils can't.  */\n #ifndef ASM_SPEC\n #define ASM_SPEC \"\\\n-%{fpic|fpie: -k} %{fPIC|fPIE: -k} \\\n+%{\" FPIE_OR_FPIC_SPEC \": -k} \\\n %{mbig-endian:-EB} \\\n %(arm_cpu_spec) \\\n %{mapcs-float:-mfloat} \\"}, {"sha": "2a7cd524534973c10cf3b9784f50bd11f6841b77", "filename": "gcc/config/c6x/elf-common.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fc6x%2Felf-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fc6x%2Felf-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Felf-common.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -24,8 +24,10 @@\n \n #undef ASM_SPEC\n #define ASM_SPEC \"%{march=*:-march=%*} %{mbig-endian:-mbig-endian} \\\n- %{mdsbt:-mdsbt %{!fPIC:-mpid=near} %{fPIC:-mpid=far -mpic} %{fpic:-mpic}} \\\n- %{!mdsbt:%{fpic:-mpic -mpid=near} %{fPIC:-mpic -mpid=far}}\"\n+ %{mdsbt:-mdsbt %{\" NO_FPIC2_SPEC \":-mpid=near} \\\n+   %{\" FPIC2_SPEC \":-mpid=far -mpic} %{\" FPIC1_SPEC \":-mpic}} \\\n+ %{!mdsbt:%{\" FPIC1_SPEC \":-mpic -mpid=near} \\\n+   %{\" FPIC2_SPEC \":-mpic -mpid=far}}\"\n \n #undef DATA_SECTION_ASM_OP\n #define DATA_SECTION_ASM_OP \"\\t.section\\t\\\".fardata\\\",\\\"aw\\\"\""}, {"sha": "5a04b9dc5d257232f952529dafcea102a959feea", "filename": "gcc/config/c6x/uclinux-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -40,7 +40,7 @@\n \n #undef LINK_SPEC\n #define LINK_SPEC ENDIAN_LINK_SPEC \\\n-  \"%{shared} %{fpie|fPIE:-pie} \\\n+  \"%{shared} %{\" FPIE_SPEC \":-pie} \\\n   %{!shared: %{!static: \\\n    %{rdynamic:-export-dynamic} \\\n    %{!dynamic-linker:-dynamic-linker \" UCLIBC_DYNAMIC_LINKER \"}} \\"}, {"sha": "262aac5c16c27ee4686cfff6fd315a14745e2f81", "filename": "gcc/config/cris/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fcris%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fcris%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -79,13 +79,13 @@ along with GCC; see the file COPYING3.  If not see\n  \"--em=criself \\\n   %{!march=*:%{!mcpu=*:--march=v32}} \\\n   %{!fleading-underscore:--no-underscore}\\\n-  %{fPIC|fpic|fPIE|fpie: --pic}\"\n+  %{\" FPIE_OR_FPIC_SPEC \": --pic}\"\n #else\n # define CRIS_ASM_SUBTARGET_SPEC \\\n  \"--em=criself \\\n   %{!march=*:%{!mcpu=*:--march=v10}} \\\n   %{!fleading-underscore:--no-underscore}\\\n-  %{fPIC|fpic|fPIE|fpie: --pic}\"\n+  %{\" FPIE_OR_FPIC_SPEC \": --pic}\"\n #endif\n \n /* Previously controlled by target_flags.  */"}, {"sha": "9a31952ce4e65348bb7d60db4d6b726b3239cbdb", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -214,7 +214,7 @@ extern GTY(()) int darwin_ms_struct;\n #define LINK_SYSROOT_SPEC \"%{isysroot*:-syslibroot %*}\"\n #endif\n \n-#define PIE_SPEC \"%{fpie|pie|fPIE:}\"\n+#define DARWIN_PIE_SPEC \"%{fpie|pie|fPIE:}\"\n \n /* Please keep the random linker options in alphabetical order (modulo\n    'Z' and 'no' prefixes). Note that options taking arguments may appear\n@@ -280,7 +280,7 @@ extern GTY(()) int darwin_ms_struct;\n      %:version-compare(< 10.5 mmacosx-version-min= -multiply_defined) \\\n      %:version-compare(< 10.5 mmacosx-version-min= suppress)}} \\\n    %{Zmultiplydefinedunused*:-multiply_defined_unused %*} \\\n-   \" PIE_SPEC \" \\\n+   \" DARWIN_PIE_SPEC \" \\\n    %{prebind} %{noprebind} %{nofixprebinding} %{prebind_all_twolevel_modules} \\\n    %{read_only_relocs} \\\n    %{sectcreate*} %{sectorder*} %{seg1addr*} %{segprot*} \\"}, {"sha": "309c835b6ee9f459038d37f664b7b75f9a9ca4fe", "filename": "gcc/config/darwin9.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fdarwin9.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fdarwin9.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin9.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -35,8 +35,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Tell collect2 to run dsymutil for us as necessary.  */\n #define COLLECT_RUN_DSYMUTIL 1\n \n-#undef PIE_SPEC\n-#define PIE_SPEC \\\n+#undef DARWIN_PIE_SPEC\n+#define DARWIN_PIE_SPEC \\\n   \"%{fpie|pie|fPIE: \\\n      %{mdynamic-no-pic: %n'-mdynamic-no-pic' overrides '-pie', '-fpie' or '-fPIE'; \\\n       :-pie}}\""}, {"sha": "2d4cbddeb74e489c5e75a337941bf5b43ddd7835", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -42,12 +42,12 @@\n \"%{mno-pack:\\\n    %{!mhard-float:-msoft-float}\\\n    %{!mmedia:-mno-media}}\\\n- %{!mfdpic:%{fpic|fPIC: -multilib-library-pic}}\\\n+ %{!mfdpic:%{\" FPIC_SPEC \": -multilib-library-pic}}\\\n  %{mfdpic:%{!fpic:%{!fpie:%{!fPIC:%{!fPIE:\\\n    \t    %{!fno-pic:%{!fno-pie:%{!fno-PIC:%{!fno-PIE:-fPIE}}}}}}}} \\\n-\t  %{!mno-inline-plt:%{O*:%{!O0:%{!Os:%{fpic|fPIC:-minline-plt} \\\n-                    %{!fpic:%{!fPIC:%{!O:%{!O1:%{!O2:-minline-plt}}}}}}}}} \\\n-\t  %{!mno-gprel-ro:%{!fpic:%{!fpie:-mgprel-ro}}}} \\\n+\t  %{!mno-inline-plt:%{O*:%{!O0:%{!Os:%{\" FPIC_SPEC \":-minline-plt} \\\n+                    %{\" NO_FPIC_SPEC \":%{!O:%{!O1:%{!O2:-minline-plt}}}}}}}} \\\n+\t  %{!mno-gprel-ro:%{\" NO_FPIE1_AND_FPIC1_SPEC \":-mgprel-ro}}} \\\n \"\n #ifndef SUBTARGET_DRIVER_SELF_SPECS\n # define SUBTARGET_DRIVER_SELF_SPECS\n@@ -67,7 +67,7 @@\n     %{mmuladd} %{mno-muladd} \\\n     %{mpack} %{mno-pack} \\\n     %{mno-fdpic:-mnopic} %{mfdpic} \\\n-    %{fpic|fpie: -mpic} %{fPIC|fPIE: -mPIC} %{mlibrary-pic}}\"\n+    %{\" FPIE1_OR_FPIC1_SPEC \":-mpic} %{\" FPIE2_OR_FPIC2_SPEC \":-mPIC} %{mlibrary-pic}}\"\n \n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \"crt0%O%s frvbegin%O%s\""}, {"sha": "2fcb55dbdab2071ff7e9e3a04016a1290b5b705d", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -42,8 +42,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #if defined HAVE_LD_PIE\n #define GNU_USER_TARGET_STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p|profile:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}} \\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s} \\\n+  \"%{!shared: %{pg|p|profile:gcrt1.o%s;: \\\n+    %{\" PIE_SPEC \":Scrt1.o%s} %{\" NO_PIE_SPEC \":crt1.o%s}}} \\\n+   crti.o%s %{static:crtbeginT.o%s;: %{shared:crtbeginS.o%s} \\\n+\t      %{\" PIE_SPEC \":crtbeginS.o%s} \\\n+\t      %{\" NO_PIE_SPEC \":crtbegin.o%s}} \\\n    %{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_start_preinit.o%s; \\\n      fvtable-verify=std:vtv_start.o%s}\""}, {"sha": "2163de41349b3dfabd2cfd9925e6a2253d52aa43", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -159,7 +159,7 @@\n \n /* Options to pass on to the assembler.  */\n #undef  ASM_SPEC\n-#define ASM_SPEC \"%(asm_cpu) %(relax) %{fpic|fpie:-K PIC} %{fPIC|fPIE:-K PIC}\"\n+#define ASM_SPEC \"%(asm_cpu) %(relax) %{\" FPIE_OR_FPIC_SPEC \":-K PIC}\"\n \n #define LINK_SPEC \"%{v} %(link_cpu) %(relax)\"\n "}, {"sha": "74ebff7fab4bec8eebaca92e17b455f3e6e33df1", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -40,7 +40,8 @@ along with GCC; see the file COPYING3.  If not see\n %{m68020-40:-m68040}%{m68020-60:-m68040}\\\n %{mcpu=*:-mcpu=%*}%{march=*:-march=%*}\\\n \"\n-#define ASM_PCREL_SPEC \"%{fPIC|fpic|mpcrel:--pcrel} \\\n+#define ASM_PCREL_SPEC \"%{\" FPIC_SPEC \":--pcrel} \\\n+ %{mpcrel:%{\" NO_FPIC_SPEC \":--pcrel}} \\\n  %{msep-data|mid-shared-library:--pcrel} \\\n \"\n "}, {"sha": "a180667bf3d72c036a6eea85101c0620afe44a70", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -56,7 +56,8 @@ along with GCC; see the file COPYING3.  If not see\n    to pass PIC code generation options.  */\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%(asm_cpu_spec) %{fpic|fpie:-k} %{fPIC|fPIE:-k -K}\"\n+#define ASM_SPEC \\\n+  \"%(asm_cpu_spec) %{\" FPIE1_OR_FPIC1_SPEC \":-k} %{\" FPIE2_OR_FPIC2_SPEC \":-k -K}\"\n \n /* Provide a LINK_SPEC appropriate for a NetBSD/m68k ELF target.  */\n "}, {"sha": "379ca85f5676e3b2360d001677cc39d2a7d3e95c", "filename": "gcc/config/m68k/openbsd.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fopenbsd.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -34,7 +34,8 @@ along with GCC; see the file COPYING3.  If not see\n #define CPP_SPEC \"%{!msoft-float:-D__HAVE_68881__ -D__HAVE_FPU__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}\"\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%(asm_cpu_spec) %{fpic|fpie:-k} %{fPIC|fPIE:-k -K}\"\n+#define ASM_SPEC \\\n+  \"%(asm_cpu_spec) %{\" FPIE1_OR_FPIC1_SPEC \":-k} %{\" FPIE2_OR_FPIC2_SPEC \":-k -K}\"\n \n /* Layout of source language data types.  */\n "}, {"sha": "ef6a3a0f504cfc2fce285808c427b9350d142bac", "filename": "gcc/config/m68k/uclinux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fuclinux.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -60,7 +60,7 @@ along with GCC; see the file COPYING3.  If not see\n \n /* -msep-data is the default PIC mode on this target.  */\n #define DRIVER_SELF_SPECS \\\n-  \"%{fpie|fPIE|fpic|fPIC:%{!msep-data:%{!mid-shared-library: -msep-data}}}\"\n+  \"%{\" FPIE_OR_FPIC_SPEC \":%{!msep-data:%{!mid-shared-library: -msep-data}}}\"\n \n /* The uclinux binary format relies on relocations against a segment being\n    within that segment.  Conservatively apply this rule to individual"}, {"sha": "dd4cf11377e9dbfb32206d274bc4bf7fd2bed042", "filename": "gcc/config/mips/gnu-user.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fmips%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fmips%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgnu-user.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -100,7 +100,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifdef HAVE_AS_NO_SHARED\n /* Default to -mno-shared for non-PIC.  */\n # define NO_SHARED_SPECS \\\n-  \" %{mshared|mno-shared|fpic|fPIC|fpie|fPIE:;:-mno-shared}\"\n+  \" %{mshared|mno-shared:;:%{\" NO_FPIE_AND_FPIC_SPEC \":-mno-shared}}\"\n #else\n # define NO_SHARED_SPECS \"\"\n #endif"}, {"sha": "0fa40b0d7d6fcc130e9547692dc508d6fd2c7099", "filename": "gcc/config/mips/vxworks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fmips%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fmips%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvxworks.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -70,7 +70,7 @@ VXWORKS_LINK_SPEC\n #define FUNCTION_PROFILER VXWORKS_FUNCTION_PROFILER\n \n #undef SUBTARGET_ASM_SPEC\n-#define SUBTARGET_ASM_SPEC \"%{mrtp:%{fPIC|fpic:-mvxworks-pic}}\"\n+#define SUBTARGET_ASM_SPEC \"%{mrtp:%{\" FPIC_SPEC \":-mvxworks-pic}}\"\n \n #undef SUBTARGET_OVERRIDE_OPTIONS\n #define SUBTARGET_OVERRIDE_OPTIONS VXWORKS_OVERRIDE_OPTIONS"}, {"sha": "cf6654898ebf7a706e94c98b0d4d4f9036af37be", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -126,7 +126,7 @@ while (0)\n    still uses a special flavor of gas that needs to be told when generating \n    pic code.  */\n #undef ASM_SPEC\n-#define ASM_SPEC \"%{fpic|fpie:-k} %{fPIC|fPIE:-k -K}\"\n+#define ASM_SPEC \"%{\" FPIE1_OR_FPIC1_SPEC \":-k} %{\" FPIE2_OR_FPIC2_SPEC \":-k -K}\"\n #endif\n \n /* Since we use gas, stdin -> - is a good idea.  */"}, {"sha": "7e630231bc7eabe86b0748e9d1ef92fdcf3b04c2", "filename": "gcc/config/rs6000/freebsd64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -130,7 +130,7 @@ extern int dot_symbols;\n #define\tLINK_OS_FREEBSD_SPEC \"%{m32:%(link_os_freebsd_spec32)}%{!m32:%(link_os_freebsd_spec64)}\"\n \n #define ASM_SPEC32 \"-a32 \\\n-%{mrelocatable} %{mrelocatable-lib} %{fpic:-K PIC} %{fPIC:-K PIC} \\\n+%{mrelocatable} %{mrelocatable-lib} %{\" FPIC_SPEC \":-K PIC} \\\n %{memb} %{!memb: %{msdata=eabi: -memb}} \\\n %{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n     %{mcall-freebsd: -mbig} \\"}, {"sha": "bec0fd9c84210f7c786d1deaea8e924dea123861", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -192,7 +192,7 @@ extern int dot_symbols;\n #endif\n \n #define ASM_SPEC32 \"-a32 \\\n-%{mrelocatable} %{mrelocatable-lib} %{fpic|fpie|fPIC|fPIE:-K PIC} \\\n+%{mrelocatable} %{mrelocatable-lib} %{\" FPIE_OR_FPIC_SPEC \":-K PIC} \\\n %{memb|msdata=eabi: -memb}\"\n \n #define ASM_SPEC64 \"-a64\""}, {"sha": "24618e309f16596ba3743c2ebfce4d2d0b65070f", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -530,7 +530,7 @@ extern int fixuplabelno;\n #undef\tASM_SPEC\n #define\tASM_SPEC \"%(asm_cpu) \\\n %{,assembler|,assembler-with-cpp: %{mregnames} %{mno-regnames}} \\\n-%{mrelocatable} %{mrelocatable-lib} %{fpic|fpie|fPIC|fPIE:-K PIC} \\\n+%{mrelocatable} %{mrelocatable-lib} %{\" FPIE_OR_FPIC_SPEC \":-K PIC} \\\n %{memb|msdata=eabi: -memb}\" \\\n ENDIAN_SELECT(\" -mbig\", \" -mlittle\", DEFAULT_ASM_ENDIAN)\n "}, {"sha": "744017204ab2b703b40e981f4244fceccc1c7e29", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -90,7 +90,7 @@ VXWORKS_ADDITIONAL_CPP_SPEC\n #define ASM_SPEC \\\n \"%(asm_cpu) \\\n  %{,assembler|,assembler-with-cpp: %{mregnames} %{mno-regnames}} \\\n- %{mrelocatable} %{mrelocatable-lib} %{fpic:-K PIC} %{fPIC:-K PIC} -mbig\"\n+ %{mrelocatable} %{mrelocatable-lib} %{\" FPIC_SPEC \":-K PIC} -mbig\"\n \n #undef  LIB_SPEC\n #define LIB_SPEC VXWORKS_LIB_SPEC"}, {"sha": "adf6f3b9fbe06347479d4445e33c3cfe1c8ebd22", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -127,7 +127,7 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_SPEC_BASE \\\n \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{Ym,*} -s %(asm_cpu)\"\n \n-#define ASM_PIC_SPEC \" %{fpic|fpie|fPIC|fPIE:-K PIC}\"\n+#define ASM_PIC_SPEC \" %{\" FPIE_OR_FPIC_SPEC \":-K PIC}\"\n \n #undef ASM_CPU_DEFAULT_SPEC\n #define ASM_CPU_DEFAULT_SPEC \\"}, {"sha": "f469bf1d89cbe970eabdafd4496bf8fb7ed92256", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -38,7 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n   while (0)\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%{fpic|fPIC|fpie|fPIE:-K PIC} %(asm_cpu)\"\n+#define ASM_SPEC \"%{\" FPIE_OR_FPIC_SPEC \":-K PIC} %(asm_cpu)\"\n \n #define LINK_SPEC \"%(link_arch)\t\t\t\t\t\t\\\n   %{!mno-relax:%{!r:-relax}}\t\t\t\t\t\t\\"}, {"sha": "17e1e862b68d753f8729df61f12224d4d33577d8", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -98,7 +98,7 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #undef ASM_SPEC\n #define ASM_SPEC \"\\\n -s \\\n-%{fpic|fPIC|fpie|fPIE:-K PIC} \\\n+%{\" FPIE_OR_FPIC_SPEC \":-K PIC} \\\n %{!.c:%{findirect-dispatch:-K PIC}} \\\n %(asm_cpu) %(asm_relax)\"\n "}, {"sha": "43da8480f24bc68cc60a8f1dc2d07c0175f7efee", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -208,7 +208,7 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #undef ASM_SPEC\n #define ASM_SPEC \"\\\n -s \\\n-%{fpic|fPIC|fpie|fPIE:-K PIC} \\\n+%{\" FPIE_OR_FPIC_SPEC \":-K PIC} \\\n %{!.c:%{findirect-dispatch:-K PIC}} \\\n %(asm_cpu) %(asm_arch) %(asm_relax)\"\n "}, {"sha": "6f99ed4853c82a0cd5c30d66259c1eead02967f4", "filename": "gcc/config/sparc/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -67,7 +67,7 @@ along with GCC; see the file COPYING3.  If not see\n #define USER_LABEL_PREFIX \"\"\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%{fpic|fPIC|fpie|fPIE:-K PIC} \\\n+#define ASM_SPEC \"%{\" FPIE_OR_FPIC_SPEC \":-K PIC} \\\n %(asm_cpu) %(asm_arch) %(asm_relax)\"\n \n #undef STDC_0_IN_SYSTEM_HEADERS"}, {"sha": "b62f9c3e65c4ad30a98adff20e6c56ea54d781b1", "filename": "gcc/config/sparc/openbsd64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -46,7 +46,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef ASM_SPEC\n #define ASM_SPEC \"\\\n--s %{fpic|fPIC|fpie|fPIE:-K PIC} \\\n+-s %{\" FPIE_OR_FPIC_SPEC \":-K PIC} \\\n %(asm_cpu) %(asm_arch) \\\n \"\n "}, {"sha": "371bb6a767db384a7b79e99eb8f5e397ababad23", "filename": "gcc/config/sparc/sp-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fsp-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fsp-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp-elf.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -25,7 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #undef ASM_SPEC\n #define ASM_SPEC \\\n   \"-s \\\n-   %{fpic|fpie|fPIC|fPIE:-K PIC} %(asm_cpu)\"\n+   %{\" FPIE_OR_FPIC_SPEC \":-K PIC} %(asm_cpu)\"\n \n /* Use the default.  */\n #undef LINK_SPEC"}, {"sha": "43adbb50839ce5e26dbd70e73305620c69291bd2", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -32,7 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef ASM_SPEC\n #define ASM_SPEC \"\\\n--s %{fpic|fPIC|fpie|fPIE:-K PIC} \\\n+-s %{\" FPIE_OR_FPIC_SPEC \":-K PIC} \\\n %(asm_cpu) %(asm_arch) \\\n \"\n "}, {"sha": "106d993ee3580b259083b56de0e7292f0624a5e8", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -380,7 +380,7 @@ extern enum cmodel sparc_cmodel;\n /* Special flags to the Sun-4 assembler when using pipe for input.  */\n \n #define ASM_SPEC \"\\\n-%{!pg:%{!p:%{fpic|fPIC|fpie|fPIE:-k}}} %{keep-local-as-symbols:-L} \\\n+%{!pg:%{!p:%{\" FPIE_OR_FPIC_SPEC \":-k}}} %{keep-local-as-symbols:-L} \\\n %(asm_cpu) %(asm_relax)\"\n \n /* This macro defines names of additional specifications to put in the specs"}, {"sha": "0b358bbe186ccba0cd1687a0146448a3011fc282", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -41,7 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #undef ASM_SPEC\n #define ASM_SPEC \\\n   \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{Ym,*} \\\n-   %{fpic|fPIC|fpie|fPIE:-K PIC} %(asm_cpu)\"\n+   %{\" FPIE_OR_FPIC_SPEC \":-K PIC} %(asm_cpu)\"\n \n /* Define the names of various pseudo-op used by the SPARC/svr4 assembler.\n    Note that many of these are different from the typical pseudo-ops used"}, {"sha": "e356b25d429000d2b9ad6234f762c6b5b1260e7b", "filename": "gcc/config/sparc/vxworks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fsparc%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvxworks.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -34,7 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #define CPP_SUBTARGET_SPEC VXWORKS_ADDITIONAL_CPP_SPEC\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%{fpic|fPIC|fpie|fPIE:-K PIC} %(asm_cpu)\"\n+#define ASM_SPEC \"%{\" FPIE_OR_FPIC_SPEC \":-K PIC} %(asm_cpu)\"\n \n #undef LIB_SPEC\n #define LIB_SPEC VXWORKS_LIB_SPEC"}, {"sha": "0765ed99ecba9a0053177b749b89bd2b120a5652", "filename": "gcc/config/vax/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fvax%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfig%2Fvax%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Flinux.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -32,7 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%{fpic|fPIC:-k}\"\n+#define ASM_SPEC \"%{\" FPIC_SPEC \":-k}\"\n \n #undef LINK_SPEC\n #define LINK_SPEC \\"}, {"sha": "a9a76d695c53eee5f988e9e0421c5883fac26c44", "filename": "gcc/configure", "status": "modified", "additions": 77, "deletions": 2, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -600,6 +600,9 @@ ac_includes_default=\"\\\n \n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n+NO_PIE_FLAG\n+NO_PIE_CFLAGS\n+enable_default_pie\n PICFLAG\n enable_host_shared\n enable_plugin\n@@ -938,6 +941,7 @@ enable_host_shared\n enable_libquadmath_support\n with_linker_hash_style\n with_diagnostics_color\n+enable_default_pie\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1674,6 +1678,7 @@ Optional Features:\n   --enable-host-shared    build host code as shared libraries\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n+  --enable-default-pie    enable Position Independent Executable as default\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -18293,7 +18298,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18296 \"configure\"\n+#line 18301 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18399,7 +18404,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18402 \"configure\"\n+#line 18407 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -28702,6 +28707,76 @@ cat > gcc-driver-name.h <<EOF\n #define GCC_DRIVER_NAME \"${target_noncanonical}-gcc-${gcc_BASEVER}${exeext}\"\n EOF\n \n+# Check whether --enable-default-pie was given.\n+# Check whether --enable-default-pie was given.\n+if test \"${enable_default_pie+set}\" = set; then :\n+  enableval=$enable_default_pie; enable_default_pie=$enableval\n+else\n+  enable_default_pie=no\n+fi\n+\n+if test x$enable_default_pie == xyes ; then\n+\n+$as_echo \"#define ENABLE_DEFAULT_PIE 1\" >>confdefs.h\n+\n+fi\n+\n+\n+# Check if -fno-PIE works.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -fno-PIE option\" >&5\n+$as_echo_n \"checking for -fno-PIE option... \" >&6; }\n+if test \"${gcc_cv_c_no_fpie+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  saved_CFLAGS=\"$CFLAGS\"\n+   CFLAGS=\"$CFLAGS -fno-PIE\"\n+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int main(void) {return 0;}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  gcc_cv_c_no_fpie=yes\n+else\n+  gcc_cv_c_no_fpie=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+   CFLAGS=\"$saved_CFLAGS\"\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_c_no_fpie\" >&5\n+$as_echo \"$gcc_cv_c_no_fpie\" >&6; }\n+if test \"$gcc_cv_c_no_fpie\" = \"yes\"; then\n+  NO_PIE_CFLAGS=\"-fno-PIE\"\n+fi\n+\n+\n+# Check if -no-pie works.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -no-pie option\" >&5\n+$as_echo_n \"checking for -no-pie option... \" >&6; }\n+if test \"${gcc_cv_no_pie+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  saved_LDFLAGS=\"$LDFLAGS\"\n+   LDFLAGS=\"$LDFLAGS -no-pie\"\n+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int main(void) {return 0;}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  gcc_cv_no_pie=yes\n+else\n+  gcc_cv_no_pie=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+   LDFLAGS=\"$saved_LDFLAGS\"\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_no_pie\" >&5\n+$as_echo \"$gcc_cv_no_pie\" >&6; }\n+if test \"$gcc_cv_no_pie\" = \"yes\"; then\n+  NO_PIE_FLAG=\"-no-pie\"\n+fi\n+\n+\n # Configure the subdirectories\n # AC_CONFIG_SUBDIRS($subdirs)\n "}, {"sha": "83f9c0951dc116f00d6a988db823f55022ceefef", "filename": "gcc/configure.ac", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -5819,6 +5819,46 @@ cat > gcc-driver-name.h <<EOF\n #define GCC_DRIVER_NAME \"${target_noncanonical}-gcc-${gcc_BASEVER}${exeext}\"\n EOF\n \n+# Check whether --enable-default-pie was given.\n+AC_ARG_ENABLE(default-pie,\n+[AS_HELP_STRING([--enable-default-pie],\n+  [enable Position Independent Executable as default])],\n+enable_default_pie=$enableval,\n+enable_default_pie=no)\n+if test x$enable_default_pie == xyes ; then\n+  AC_DEFINE(ENABLE_DEFAULT_PIE, 1,\n+      [Define if your target supports default PIE and it is enabled.])\n+fi\n+AC_SUBST([enable_default_pie])\n+\n+# Check if -fno-PIE works.\n+AC_CACHE_CHECK([for -fno-PIE option],\n+  [gcc_cv_c_no_fpie],\n+  [saved_CFLAGS=\"$CFLAGS\"\n+   CFLAGS=\"$CFLAGS -fno-PIE\"\n+   AC_COMPILE_IFELSE([int main(void) {return 0;}],\n+     [gcc_cv_c_no_fpie=yes],\n+     [gcc_cv_c_no_fpie=no])\n+   CFLAGS=\"$saved_CFLAGS\"])\n+if test \"$gcc_cv_c_no_fpie\" = \"yes\"; then\n+  NO_PIE_CFLAGS=\"-fno-PIE\"\n+fi\n+AC_SUBST([NO_PIE_CFLAGS])\n+\n+# Check if -no-pie works.\n+AC_CACHE_CHECK([for -no-pie option],\n+  [gcc_cv_no_pie],\n+  [saved_LDFLAGS=\"$LDFLAGS\"\n+   LDFLAGS=\"$LDFLAGS -no-pie\"\n+   AC_LINK_IFELSE([int main(void) {return 0;}],\n+     [gcc_cv_no_pie=yes],\n+     [gcc_cv_no_pie=no])\n+   LDFLAGS=\"$saved_LDFLAGS\"])\n+if test \"$gcc_cv_no_pie\" = \"yes\"; then\n+  NO_PIE_FLAG=\"-no-pie\"\n+fi\n+AC_SUBST([NO_PIE_FLAG])\n+\n # Configure the subdirectories\n # AC_CONFIG_SUBDIRS($subdirs)\n "}, {"sha": "b89f409baa1fe877ef4c49dff6a9733742e47c5f", "filename": "gcc/defaults.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -1241,6 +1241,18 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #endif\n #endif\n \n+/* Default value for flag_pie when flag_pie is initialized to -1:\n+   --enable-default-pie: Default flag_pie to -fPIE.\n+   --disable-default-pie: Default flag_pie to 0.\n+ */\n+#ifdef ENABLE_DEFAULT_PIE\n+# ifndef DEFAULT_FLAG_PIE\n+#  define DEFAULT_FLAG_PIE 2\n+# endif\n+#else\n+# define DEFAULT_FLAG_PIE 0\n+#endif\n+\n #ifdef GCC_INSN_FLAGS_H\n /* Dependent default target macro definitions\n "}, {"sha": "24c4a33828280ab9b60cba10fe71ce31e273f101", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -1621,6 +1621,9 @@ defaulted to o32.\n Currently, this option only affects sparc-linux, powerpc-linux, x86-linux,\n mips-linux and s390-linux.\n \n+@item --enable-default-pie\n+Turn on @option{-fPIE} and @option{-pie} by default.\n+\n @item --enable-secureplt\n This option enables @option{-msecure-plt} by default for powerpc-linux.\n @ifnothtml"}, {"sha": "e25bd6220369a1a3dfe94e139c04d545efcd336c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -11302,6 +11302,10 @@ For predictable results, you must also specify the same set of options\n used for compilation (@option{-fpie}, @option{-fPIE},\n or model suboptions) when you specify this linker option.\n \n+@item -no-pie\n+@opindex no-pie\n+Don't produce a position independent executable.\n+\n @item -rdynamic\n @opindex rdynamic\n Pass the flag @option{-export-dynamic} to the ELF linker, on targets"}, {"sha": "a8e9c8c236226f4897885a22cb80ef9f4042df30", "filename": "gcc/gcc.c", "status": "modified", "additions": 47, "deletions": 2, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -737,12 +737,57 @@ proper position among the other output files.  */\n #endif\n #endif\n \n+#ifdef ENABLE_DEFAULT_PIE\n+#define NO_PIE_SPEC\t\t\"no-pie|static\"\n+#define PIE_SPEC\t\tNO_PIE_SPEC \"|r|shared:;\"\n+#define NO_FPIE1_SPEC\t\t\"fno-pie\"\n+#define FPIE1_SPEC\t\tNO_FPIE1_SPEC \":;\"\n+#define NO_FPIE2_SPEC\t\t\"fno-PIE\"\n+#define FPIE2_SPEC\t\tNO_FPIE2_SPEC \":;\"\n+#define NO_FPIE_SPEC\t\tNO_FPIE1_SPEC \"|\" NO_FPIE2_SPEC\n+#define FPIE_SPEC\t\tNO_FPIE_SPEC \":;\"\n+#define NO_FPIC1_SPEC\t\t\"fno-pic\"\n+#define FPIC1_SPEC\t\tNO_FPIC1_SPEC \":;\"\n+#define NO_FPIC2_SPEC\t\t\"fno-PIC\"\n+#define FPIC2_SPEC\t\tNO_FPIC2_SPEC \":;\"\n+#define NO_FPIC_SPEC\t\tNO_FPIC1_SPEC \"|\" NO_FPIC2_SPEC\n+#define FPIC_SPEC\t\tNO_FPIC_SPEC \":;\"\n+#define NO_FPIE1_AND_FPIC1_SPEC\tNO_FPIE1_SPEC \"|\" NO_FPIC1_SPEC\n+#define FPIE1_OR_FPIC1_SPEC\tNO_FPIE1_AND_FPIC1_SPEC \":;\"\n+#define NO_FPIE2_AND_FPIC2_SPEC\tNO_FPIE2_SPEC \"|\" NO_FPIC2_SPEC\n+#define FPIE2_OR_FPIC2_SPEC\tNO_FPIE2_AND_FPIC2_SPEC \":;\"\n+#define NO_FPIE_AND_FPIC_SPEC\tNO_FPIE_SPEC \"|\" NO_FPIC_SPEC\n+#define FPIE_OR_FPIC_SPEC\tNO_FPIE_AND_FPIC_SPEC \":;\"\n+#else\n+#define PIE_SPEC\t\t\"pie\"\n+#define NO_PIE_SPEC\t\tPIE_SPEC \"|r|shared:;\"\n+#define FPIE1_SPEC\t\t\"fpie\"\n+#define NO_FPIE1_SPEC\t\tFPIE1_SPEC \":;\"\n+#define FPIE2_SPEC\t\t\"fPIE\"\n+#define NO_FPIE2_SPEC\t\tFPIE2_SPEC \":;\"\n+#define FPIE_SPEC\t\tFPIE1_SPEC \"|\" FPIE2_SPEC\n+#define NO_FPIE_SPEC\t\tFPIE_SPEC \":;\"\n+#define FPIC1_SPEC\t\t\"fpic\"\n+#define NO_FPIC1_SPEC\t\tFPIC1_SPEC \":;\"\n+#define FPIC2_SPEC\t\t\"fPIC\"\n+#define NO_FPIC2_SPEC\t\tFPIC2_SPEC \":;\"\n+#define FPIC_SPEC\t\tFPIC1_SPEC \"|\" FPIC2_SPEC\n+#define NO_FPIC_SPEC\t\tFPIC_SPEC \":;\"\n+#define FPIE1_OR_FPIC1_SPEC\tFPIE1_SPEC \"|\" FPIC1_SPEC\n+#define NO_FPIE1_AND_FPIC1_SPEC\tFPIE1_OR_FPIC1_SPEC \":;\"\n+#define FPIE2_OR_FPIC2_SPEC\tFPIE2_SPEC \"|\" FPIC2_SPEC\n+#define NO_FPIE2_AND_FPIC2_SPEC\tFPIE1_OR_FPIC2_SPEC \":;\"\n+#define FPIE_OR_FPIC_SPEC\tFPIE_SPEC \"|\" FPIC_SPEC\n+#define NO_FPIE_AND_FPIC_SPEC\tFPIE_OR_FPIC_SPEC \":;\"\n+#endif\n+\n #ifndef LINK_PIE_SPEC\n #ifdef HAVE_LD_PIE\n-#define LINK_PIE_SPEC \"%{pie:-pie} \"\n+#define LD_PIE_SPEC \"-pie\"\n #else\n-#define LINK_PIE_SPEC \"%{pie:} \"\n+#define LD_PIE_SPEC \"\"\n #endif\n+#define LINK_PIE_SPEC \"%{no-pie:} \" \"%{\" PIE_SPEC \":\" LD_PIE_SPEC \"} \"\n #endif\n \n #ifndef LINK_BUILDID_SPEC"}, {"sha": "9793999016eceace2305200ede42a404ea3a6ce7", "filename": "gcc/opts.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -741,6 +741,15 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n \n   if (!opts->x_flag_opts_finished)\n     {\n+      /* We initialize opts->x_flag_pie to -1 so that targets can set a\n+\t default value.  */\n+      if (opts->x_flag_pie == -1)\n+\t{\n+\t  if (opts->x_flag_pic == 0)\n+\t    opts->x_flag_pie = DEFAULT_FLAG_PIE;\n+\t  else\n+\t    opts->x_flag_pie = 0;\n+\t}\n       if (opts->x_flag_pie)\n \topts->x_flag_pic = opts->x_flag_pie;\n       if (opts->x_flag_pic && !opts->x_flag_pie)"}, {"sha": "b4fc479d7540c4057c2a679e8ced987a40f39f1e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -1,3 +1,7 @@\n+2015-05-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.in (CRTSTUFF_CFLAGS): Add $(NO_PIE_CFLAGS).\n+\n 2015-05-27  John Marino <gnugcc@marino.st>\n \n \t* config.host (i[34567]86-*-freebsd*, x86_64-*-freebsd*): Set"}, {"sha": "527d87b03104d4b642303a61a5bf479f99cc9c48", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428b381275bc95032274440f02d7719225de2c17/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428b381275bc95032274440f02d7719225de2c17/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=428b381275bc95032274440f02d7719225de2c17", "patch": "@@ -285,7 +285,7 @@ INTERNAL_CFLAGS = $(CFLAGS) $(LIBGCC2_CFLAGS) $(HOST_LIBGCC2_CFLAGS) \\\n \n # Options to use when compiling crtbegin/end.\n CRTSTUFF_CFLAGS = -O2 $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n-  -finhibit-size-directive -fno-inline -fno-exceptions \\\n+  $(NO_PIE_CFLAGS) -finhibit-size-directive -fno-inline -fno-exceptions \\\n   -fno-zero-initialized-in-bss -fno-toplevel-reorder -fno-tree-vectorize \\\n   -fbuilding-libgcc -fno-stack-protector $(FORCE_EXPLICIT_EH_REGISTRY) \\\n   $(INHIBIT_LIBC_CFLAGS)"}]}