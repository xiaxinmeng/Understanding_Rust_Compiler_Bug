{"sha": "2e2052b19ad876dade65b7977f17708ffb057010", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUyMDUyYjE5YWQ4NzZkYWRlNjViNzk3N2YxNzcwOGZmYjA1NzAxMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-06-04T16:07:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-06-04T16:07:58Z"}, "message": "Re-apply hopefully fixed patch:\n\n\t* i386.md (UNSPECV_EH_RETURN): Kill.\n\t(eh_return): Use jump_insn.\n\t(eh_return_si, eh_return_di): Change pattern to jump instruction.\n\nFrom-SVN: r82624", "tree": {"sha": "b9ca2124f4ddd6213af5b4eb03b0c34f5fc579a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9ca2124f4ddd6213af5b4eb03b0c34f5fc579a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e2052b19ad876dade65b7977f17708ffb057010", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2052b19ad876dade65b7977f17708ffb057010", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e2052b19ad876dade65b7977f17708ffb057010", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2052b19ad876dade65b7977f17708ffb057010/comments", "author": null, "committer": null, "parents": [{"sha": "9cf84a3cf034bdc70b501b592c1981221c115a2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf84a3cf034bdc70b501b592c1981221c115a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf84a3cf034bdc70b501b592c1981221c115a2b"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "4c04a272dcd8993ec8dd1300d41739bfc9de67f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2052b19ad876dade65b7977f17708ffb057010/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2052b19ad876dade65b7977f17708ffb057010/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e2052b19ad876dade65b7977f17708ffb057010", "patch": "@@ -1,3 +1,10 @@\n+2004-06-04  Jan Hubicka  <jh@suse.cz>\n+\n+\tRe-apply hopefully fixed patch:\n+\t* i386.md (UNSPECV_EH_RETURN): Kill.\n+\t(eh_return): Use jump_insn.\n+\t(eh_return_si, eh_return_di): Change pattern to jump instruction.\n+\n 2004-06-04  Jeff Law  <law@redhat.com>\n \n \t* cfgrtl.c (try_redirect_by_replacing_jump): Fix return value."}, {"sha": "770a7afe20defea89531f2aa6773a823fb2e486f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e2052b19ad876dade65b7977f17708ffb057010/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e2052b19ad876dade65b7977f17708ffb057010/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2e2052b19ad876dade65b7977f17708ffb057010", "patch": "@@ -137,11 +137,12 @@\n \n    ; REP instruction\n    (UNSPEC_REP\t\t\t75)\n+\n+   (UNSPEC_EH_RETURN\t\t76)\n   ])\n \n (define_constants\n   [(UNSPECV_BLOCKAGE\t\t0)\n-   (UNSPECV_EH_RETURN\t\t13)\n    (UNSPECV_EMMS\t\t31)\n    (UNSPECV_LDMXCSR\t\t37)\n    (UNSPECV_STMXCSR\t\t40)\n@@ -13890,25 +13891,27 @@\n   emit_move_insn (tmp, ra);\n \n   if (Pmode == SImode)\n-    emit_insn (gen_eh_return_si (sa));\n+    emit_jump_insn (gen_eh_return_si (sa));\n   else\n-    emit_insn (gen_eh_return_di (sa));\n+    emit_jump_insn (gen_eh_return_di (sa));\n   emit_barrier ();\n   DONE;\n })\n \n (define_insn_and_split \"eh_return_si\"\n-  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"c\")]\n-\t\t    UNSPECV_EH_RETURN)]\n+  [(set (pc) \n+        (unspec [(match_operand:SI 0 \"register_operand\" \"c\")]\n+\t         UNSPEC_EH_RETURN))]\n   \"!TARGET_64BIT\"\n   \"#\"\n   \"reload_completed\"\n   [(const_int 1)]\n   \"ix86_expand_epilogue (2); DONE;\")\n \n (define_insn_and_split \"eh_return_di\"\n-  [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"c\")]\n-\t\t    UNSPECV_EH_RETURN)]\n+  [(set (pc) \n+        (unspec [(match_operand:DI 0 \"register_operand\" \"c\")]\n+\t         UNSPEC_EH_RETURN))]\n   \"TARGET_64BIT\"\n   \"#\"\n   \"reload_completed\""}]}