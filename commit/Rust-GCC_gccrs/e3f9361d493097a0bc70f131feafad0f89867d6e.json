{"sha": "e3f9361d493097a0bc70f131feafad0f89867d6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNmOTM2MWQ0OTMwOTdhMGJjNzBmMTMxZmVhZmFkMGY4OTg2N2Q2ZQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2012-11-26T12:37:55Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2012-11-26T12:37:55Z"}, "message": "sourcebuild.texi: Document arm_v8_vfp_ok.\n\ngcc/\n\n2012-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* doc/sourcebuild.texi: Document arm_v8_vfp_ok.\n\ngcc/testsuite/\n\n2012-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* lib/target-supports.exp (check_effective_target_arm_v8_vfp_ok):\n\t New procedure.\n\t(add_options_for_arm_v8_vfp): New procedure.\n\t* gcc.target/arm/vrintaf32.c: New test.\n\t* gcc.target/arm/vrintaf64.c: Likewise.\n\t* gcc.target/arm/vrintmf32.c: Likewise.\n\t* gcc.target/arm/vrintmf64.c: Likewise.\n\t* gcc.target/arm/vrintpf32.c: Likewise.\n\t* gcc.target/arm/vrintpf64.c: Likewise.\n\t* gcc.target/arm/vrintrf32.c: Likewise.\n\t* gcc.target/arm/vrintrf64.c: Likewise.\n\t* gcc.target/arm/vrintxf32.c: Likewise.\n\t* gcc.target/arm/vrintxf64.c: Likewise.\n\t* gcc.target/arm/vrintzf32.c: Likewise.\n\t* gcc.target/arm/vrintzf64.c: Likewise.\n\nFrom-SVN: r193814", "tree": {"sha": "e65beb800ddf6448ed8b123d895bfaa71a932afa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e65beb800ddf6448ed8b123d895bfaa71a932afa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3f9361d493097a0bc70f131feafad0f89867d6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f9361d493097a0bc70f131feafad0f89867d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f9361d493097a0bc70f131feafad0f89867d6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f9361d493097a0bc70f131feafad0f89867d6e/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1dd4fe1fd892458ce29f15f3ca95125a11b2534f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dd4fe1fd892458ce29f15f3ca95125a11b2534f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dd4fe1fd892458ce29f15f3ca95125a11b2534f"}], "stats": {"total": 193, "additions": 193, "deletions": 0}, "files": [{"sha": "2a03bcac81c827e0383d39bd659819b354bb002b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -1,3 +1,7 @@\n+2012-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* doc/sourcebuild.texi: Document arm_v8_vfp_ok.\n+\n 2012-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.h (TARGET_FPU_ARMV8): New macro."}, {"sha": "0f29326690fc6d7eeac46f8936547da8b7f5f3d3", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -1556,6 +1556,10 @@ ARM target generates Thumb-2 code for @code{-mthumb}.\n ARM target supports @code{-mfpu=vfp -mfloat-abi=softfp}.\n Some multilibs may be incompatible with these options.\n \n+@item arm_v8_vfp_ok\n+ARM target supports @code{-mfpu=fp-armv8 -mfloat-abi=softfp}.\n+Some multilibs may be incompatible with these options.\n+\n @item arm_prefer_ldrd_strd\n ARM target prefers @code{LDRD} and @code{STRD} instructions over\n @code{LDM} and @code{STM} instructions."}, {"sha": "0dec0bf3349c8e10aac6fce5b6954c783ec3b3ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -1,3 +1,21 @@\n+2012-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm_v8_vfp_ok):\n+\tNew procedure.\n+\t(add_options_for_arm_v8_vfp): New procedure.\n+\t* gcc.target/arm/vrintaf32.c: New test.\n+\t* gcc.target/arm/vrintaf64.c: Likewise.\n+\t* gcc.target/arm/vrintmf32.c: Likewise.\n+\t* gcc.target/arm/vrintmf64.c: Likewise.\n+\t* gcc.target/arm/vrintpf32.c: Likewise.\n+\t* gcc.target/arm/vrintpf64.c: Likewise.\n+\t* gcc.target/arm/vrintrf32.c: Likewise.\n+\t* gcc.target/arm/vrintrf64.c: Likewise.\n+\t* gcc.target/arm/vrintxf32.c: Likewise.\n+\t* gcc.target/arm/vrintxf64.c: Likewise.\n+\t* gcc.target/arm/vrintzf32.c: Likewise.\n+\t* gcc.target/arm/vrintzf64.c: Likewise.\n+\n 2012-11-26  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/54997"}, {"sha": "bea4aca551d252cf2c8b965bf6f2a56325b2d9bc", "filename": "gcc/testsuite/gcc.target/arm/vrintaf32.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintaf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintaf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintaf32.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x)\n+{\n+  return __builtin_roundf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrinta.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "0c393474fe0cdb3fd8a2ee22d769db13e7b8af36", "filename": "gcc/testsuite/gcc.target/arm/vrintaf64.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintaf64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintaf64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintaf64.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x)\n+{\n+  return __builtin_round (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrinta.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "33c22885f932e2200ac606da1459d4590cf7a3bd", "filename": "gcc/testsuite/gcc.target/arm/vrintmf32.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintmf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintmf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintmf32.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x)\n+{\n+  return __builtin_floorf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintm.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "d1b3db9649ca743dd488f8b0705a75c9472ba395", "filename": "gcc/testsuite/gcc.target/arm/vrintmf64.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintmf64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintmf64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintmf64.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x)\n+{\n+  return __builtin_floor (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintm.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "ecea15db606f34e510f59df6d88be2d218800eb4", "filename": "gcc/testsuite/gcc.target/arm/vrintpf32.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintpf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintpf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintpf32.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x)\n+{\n+  return __builtin_ceilf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintp.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "a4ce30d6463735b7d08a06952e5c47a4674c75d4", "filename": "gcc/testsuite/gcc.target/arm/vrintpf64.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintpf64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintpf64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintpf64.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x)\n+{\n+  return __builtin_ceil (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintp.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "f1b03be5c9d8245aee67a7a309faf8a7fcb91159", "filename": "gcc/testsuite/gcc.target/arm/vrintrf32.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintrf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintrf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintrf32.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x)\n+{\n+  return __builtin_nearbyintf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintr.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "3f8171898b661e154c70ddabd16e4666210c7202", "filename": "gcc/testsuite/gcc.target/arm/vrintrf64.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintrf64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintrf64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintrf64.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x)\n+{\n+  return __builtin_nearbyint (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintr.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "ca00b0f51040ac7ccf101b73ff4e7dad3453f00e", "filename": "gcc/testsuite/gcc.target/arm/vrintxf32.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintxf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintxf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintxf32.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x)\n+{\n+  return __builtin_rintf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintx.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "9b8604887953744bd5975692282db6308d6c4b7d", "filename": "gcc/testsuite/gcc.target/arm/vrintxf64.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintxf64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintxf64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintxf64.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x)\n+{\n+  return __builtin_rint (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintx.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "c76bf6e99c4377dfd8406f0685d230c310a5ade4", "filename": "gcc/testsuite/gcc.target/arm/vrintzf32.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintzf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintzf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintzf32.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x)\n+{\n+  return __builtin_truncf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintz.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "602e876f580940a3502777e8425d462771f249bc", "filename": "gcc/testsuite/gcc.target/arm/vrintzf64.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintzf64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintzf64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvrintzf64.c?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x)\n+{\n+  return __builtin_trunc (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vrintz.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "5935346cc654ad4061a8dd04e9d4623b1bb8f208", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f9361d493097a0bc70f131feafad0f89867d6e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=e3f9361d493097a0bc70f131feafad0f89867d6e", "patch": "@@ -2091,6 +2091,22 @@ proc check_effective_target_arm_vfp_ok { } {\n     }\n }\n \n+# Return 1 if this is an ARM target supporting -mfpu=fp-armv8\n+# -mfloat-abi=softfp.\n+proc check_effective_target_arm_v8_vfp_ok {} {\n+    if { [check_effective_target_arm32] } {\n+\treturn [check_no_compiler_messages arm_v8_vfp_ok object {\n+\t  int foo (void)\n+\t  {\n+\t     __asm__ volatile (\"vrinta.f32.f32 s0, s0\");\n+\t     return 0;\n+\t  }\n+\t} \"-mfpu=fp-armv8 -mfloat-abi=softfp\"]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is an ARM target supporting -mfpu=vfp\n # -mfloat-abi=hard.  Some multilibs may be incompatible with these\n # options.\n@@ -2143,6 +2159,13 @@ proc add_options_for_arm_neon { flags } {\n     return \"$flags $et_arm_neon_flags\"\n }\n \n+proc add_options_for_arm_v8_vfp { flags } {\n+    if { ! [check_effective_target_arm_v8_vfp_ok] } {\n+        return \"$flags\"\n+    }\n+    return \"$flags -mfpu=fp-armv8 -mfloat-abi=softfp\"\n+}\n+\n # Add the options needed for NEON.  We need either -mfloat-abi=softfp\n # or -mfloat-abi=hard, but if one is already specified by the\n # multilib, use it.  Similarly, if a -mfpu option already enables"}]}