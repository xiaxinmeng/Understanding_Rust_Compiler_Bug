{"sha": "d49318d9bc3e63251aada27b322e7756eab19884", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ5MzE4ZDliYzNlNjMyNTFhYWRhMjdiMzIyZTc3NTZlYWIxOTg4NA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2017-09-05T13:33:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2017-09-05T13:33:44Z"}, "message": "re PR c++/81942 (ICE on empty constexpr constructor with C++14)\n\n/cp\n2017-09-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/81942\n\t* cp-tree.h (LABEL_DECL_CDTOR): Add and document.\n\t* decl.c (start_preparsed_function): Set LABEL_DECL_CDTOR when\n\tcreating cdtor_label.\n\t* constexpr.c (returns): Add the case of a constructor/destructor\n\treturning via a LABEL_DECL_CDTOR label.\n\t(cxx_eval_constant_expression, case [GOTO_EXPR]): Likewise.\n\n/testsuite\n2017-09-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/81942\n\t* g++.dg/cpp1y/constexpr-return3.C: New.\n\nFrom-SVN: r251714", "tree": {"sha": "c73edc1922313f044d57f416d20fd7978d7f8254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c73edc1922313f044d57f416d20fd7978d7f8254"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d49318d9bc3e63251aada27b322e7756eab19884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49318d9bc3e63251aada27b322e7756eab19884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d49318d9bc3e63251aada27b322e7756eab19884", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49318d9bc3e63251aada27b322e7756eab19884/comments", "author": null, "committer": null, "parents": [{"sha": "ae85ad3a95d6df3c4131d02fd327809a29d10b33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae85ad3a95d6df3c4131d02fd327809a29d10b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae85ad3a95d6df3c4131d02fd327809a29d10b33"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "26b51ec3b16f20ff51a5cc2565b0aadf1813691c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d49318d9bc3e63251aada27b322e7756eab19884", "patch": "@@ -1,3 +1,13 @@\n+2017-09-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/81942\n+\t* cp-tree.h (LABEL_DECL_CDTOR): Add and document.\n+\t* decl.c (start_preparsed_function): Set LABEL_DECL_CDTOR when\n+\tcreating cdtor_label.\n+\t* constexpr.c (returns): Add the case of a constructor/destructor\n+\treturning via a LABEL_DECL_CDTOR label.\n+\t(cxx_eval_constant_expression, case [GOTO_EXPR]): Likewise.\n+\n 2017-09-01  Nathan Sidwell  <nathan@acm.org>\n \n \t* cp-tree.h (resort_type_method_vec): Move declaration to ..."}, {"sha": "a5692fb3b3a7bae58656f29139ace8a6b55682e8", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=d49318d9bc3e63251aada27b322e7756eab19884", "patch": "@@ -3671,7 +3671,9 @@ static bool\n returns (tree *jump_target)\n {\n   return *jump_target\n-    && TREE_CODE (*jump_target) == RETURN_EXPR;\n+    && (TREE_CODE (*jump_target) == RETURN_EXPR\n+\t|| (TREE_CODE (*jump_target) == LABEL_DECL\n+\t    && LABEL_DECL_CDTOR (*jump_target)));\n }\n \n static bool\n@@ -4554,7 +4556,9 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \n     case GOTO_EXPR:\n       *jump_target = TREE_OPERAND (t, 0);\n-      gcc_assert (breaks (jump_target) || continues (jump_target));\n+      gcc_assert (breaks (jump_target) || continues (jump_target)\n+\t\t  /* Allow for jumping to a cdtor_label.  */\n+\t\t  || returns (jump_target));\n       break;\n \n     case LOOP_EXPR:"}, {"sha": "7dc20b1649b5e76427fcbec3d40839afbfd52fa2", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d49318d9bc3e63251aada27b322e7756eab19884", "patch": "@@ -456,6 +456,7 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n       DECL_CONSTRAINT_VAR_P (in a PARM_DECL)\n       TEMPLATE_DECL_COMPLEX_ALIAS_P (in TEMPLATE_DECL)\n       DECL_INSTANTIATING_NSDMI_P (in a FIELD_DECL)\n+      LABEL_DECL_CDTOR (in LABEL_DECL)\n    3: DECL_IN_AGGR_P.\n    4: DECL_C_BIT_FIELD (in a FIELD_DECL)\n       DECL_ANON_UNION_VAR_P (in a VAR_DECL)\n@@ -3833,6 +3834,11 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n #define LABEL_DECL_CONTINUE(NODE) \\\n   DECL_LANG_FLAG_1 (LABEL_DECL_CHECK (NODE))\n \n+/* Nonzero if NODE is the target for genericization of 'return' stmts\n+   in constructors/destructors of targetm.cxx.cdtor_returns_this targets.  */\n+#define LABEL_DECL_CDTOR(NODE) \\\n+  DECL_LANG_FLAG_2 (LABEL_DECL_CHECK (NODE))\n+\n /* True if NODE was declared with auto in its return type, but it has\n    started compilation and so the return type might have been changed by\n    return type deduction; its declared return type should be found in"}, {"sha": "861dfcfd828979fcdbcbe9273f3b20a6bc0917b5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d49318d9bc3e63251aada27b322e7756eab19884", "patch": "@@ -15072,7 +15072,10 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n   if (DECL_DESTRUCTOR_P (decl1)\n       || (DECL_CONSTRUCTOR_P (decl1)\n \t  && targetm.cxx.cdtor_returns_this ()))\n-    cdtor_label = create_artificial_label (input_location);\n+    {\n+      cdtor_label = create_artificial_label (input_location);\n+      LABEL_DECL_CDTOR (cdtor_label) = true;\n+    }\n \n   start_fname_decls ();\n "}, {"sha": "690bc5bacce16836fb35d52b80f7637294256381", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d49318d9bc3e63251aada27b322e7756eab19884", "patch": "@@ -1,3 +1,8 @@\n+2017-09-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/81942\n+\t* g++.dg/cpp1y/constexpr-return3.C: New.\n+\n 2017-09-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/incomplete5.ad[sb]: New test."}, {"sha": "4cf4128e9eb814ae96bd263a7c55642324ff797b", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-return3.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-return3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49318d9bc3e63251aada27b322e7756eab19884/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-return3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-return3.C?ref=d49318d9bc3e63251aada27b322e7756eab19884", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/81942\n+// { dg-do compile { target c++14 } }\n+\n+class A {\n+public:\n+    constexpr A() {\n+      return;\n+    }\n+};\n+\n+A mwi;"}]}