{"sha": "578ad14116c61ef20c9d295da570537f6e9c5d2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc4YWQxNDExNmM2MWVmMjBjOWQyOTVkYTU3MDUzN2Y2ZTljNWQyYQ==", "commit": {"author": {"name": "Eric B. Weddington", "email": "eric.weddington@atmel.com", "date": "2010-04-19T22:46:52Z"}, "committer": {"name": "Eric Weddington", "email": "eweddington@gcc.gnu.org", "date": "2010-04-19T22:46:52Z"}, "message": "avr-devices.c (avr_mcu_types): Add support for new devices atmega644pa...\n\n2010-04-19  Eric B. Weddington  <eric.weddington@atmel.com>\n\n\t* config/avr/avr-devices.c (avr_mcu_types): Add support for new\n\tdevices atmega644pa, attiny2313a, attiny24a, attiny261a, attiny4313,\n\tattiny44a, attiny861a, atmega16a, atmega168a, atmega164a, atmega165a,\n\tatmega169a, atmega169pa, atmega16hva2, atmega324a, atmega324pa,\n\tatmega325a, atmega3250a, atmega328, atmega329a, atmega329pa,\n\tatmega3290a, atmega48a, atmega644a, atmega645a, atmega645p,\n\tatmega6450a, atmega6450p, atmega649a, atmega649p, atmega6490a,\n\tatmega6490p, atmega64hve, atmega88a, atmega88pa, attiny461a, attiny84a,\n\tm3000. Remove support for devices atmega8m1, atmega8c1, atmega16c1,\n\tatmega4hvd, atmega8hvd, attiny327, m3000f, m3000s, m3001b.\n\t* config/avr/t-avr.c (MULTILIB_MATCHES): Same.\n\nFrom-SVN: r158530", "tree": {"sha": "5bf87452348af7680f7d95aa680450806dbaedea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf87452348af7680f7d95aa680450806dbaedea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/578ad14116c61ef20c9d295da570537f6e9c5d2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578ad14116c61ef20c9d295da570537f6e9c5d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578ad14116c61ef20c9d295da570537f6e9c5d2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578ad14116c61ef20c9d295da570537f6e9c5d2a/comments", "author": {"login": "arcanum", "id": 1082041, "node_id": "MDQ6VXNlcjEwODIwNDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1082041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcanum", "html_url": "https://github.com/arcanum", "followers_url": "https://api.github.com/users/arcanum/followers", "following_url": "https://api.github.com/users/arcanum/following{/other_user}", "gists_url": "https://api.github.com/users/arcanum/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcanum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcanum/subscriptions", "organizations_url": "https://api.github.com/users/arcanum/orgs", "repos_url": "https://api.github.com/users/arcanum/repos", "events_url": "https://api.github.com/users/arcanum/events{/privacy}", "received_events_url": "https://api.github.com/users/arcanum/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d321bd2d6ee4ebfd3246e7c0bbc121354bfe496d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d321bd2d6ee4ebfd3246e7c0bbc121354bfe496d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d321bd2d6ee4ebfd3246e7c0bbc121354bfe496d"}], "stats": {"total": 110, "additions": 90, "deletions": 20}, "files": [{"sha": "682983ec38eaa43e03ed87834cf142a8dae97151", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578ad14116c61ef20c9d295da570537f6e9c5d2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578ad14116c61ef20c9d295da570537f6e9c5d2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=578ad14116c61ef20c9d295da570537f6e9c5d2a", "patch": "@@ -1,3 +1,17 @@\n+2010-04-19  Eric B. Weddington  <eric.weddington@atmel.com>\n+\n+\t* config/avr/avr-devices.c (avr_mcu_types): Add support for new\n+\tdevices atmega644pa, attiny2313a, attiny24a, attiny261a, attiny4313,\n+\tattiny44a, attiny861a, atmega16a, atmega168a, atmega164a, atmega165a,\n+\tatmega169a, atmega169pa, atmega16hva2, atmega324a, atmega324pa,\n+\tatmega325a, atmega3250a, atmega328, atmega329a, atmega329pa,\n+\tatmega3290a, atmega48a, atmega644a, atmega645a, atmega645p,\n+\tatmega6450a, atmega6450p, atmega649a, atmega649p, atmega6490a,\n+\tatmega6490p, atmega64hve, atmega88a, atmega88pa, attiny461a, attiny84a,\n+\tm3000. Remove support for devices atmega8m1, atmega8c1, atmega16c1,\n+\tatmega4hvd, atmega8hvd, attiny327, m3000f, m3000s, m3001b.\n+\t* config/avr/t-avr.c (MULTILIB_MATCHES): Same.\n+\n 2010-04-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ifcvt.c (noce_try_cmove_arith): Fix long lines."}, {"sha": "a49a00af8bc0ae2212eca8940f8868383f27c7e2", "filename": "gcc/config/avr/avr-devices.c", "status": "modified", "additions": 38, "deletions": 11, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578ad14116c61ef20c9d295da570537f6e9c5d2a/gcc%2Fconfig%2Favr%2Favr-devices.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578ad14116c61ef20c9d295da570537f6e9c5d2a/gcc%2Fconfig%2Favr%2Favr-devices.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-devices.c?ref=578ad14116c61ef20c9d295da570537f6e9c5d2a", "patch": "@@ -23,7 +23,7 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-/* List of all known AVR MCU architectyres.  */\n+/* List of all known AVR MCU architectures.  */\n \n const struct base_arch_s avr_arch_types[] = {\n   { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x0060, NULL,               \"avr2\" },  /* unknown device specified */\n@@ -67,15 +67,23 @@ const struct mcu_type_s avr_mcu_types[] = {\n   { \"attiny13\",             ARCH_AVR25, \"__AVR_ATtiny13__\",         1, 0x0060, \"tn13\" },\n   { \"attiny13a\",            ARCH_AVR25, \"__AVR_ATtiny13A__\",        1, 0x0060, \"tn13a\" },\n   { \"attiny2313\",           ARCH_AVR25, \"__AVR_ATtiny2313__\",       1, 0x0060, \"tn2313\" },\n+  { \"attiny2313a\",          ARCH_AVR25, \"__AVR_ATtiny2313A__\"       1, 0x0060, \"tn2313a\" },\n   { \"attiny24\",             ARCH_AVR25, \"__AVR_ATtiny24__\",         1, 0x0060, \"tn24\" },\n+  { \"attiny24a\",            ARCH_AVR25, \"__AVR_ATtiny24A__\"         1, 0x0060, \"tn24a\" },\n+  { \"attiny4313\",           ARCH_AVR25, \"__AVR_ATtiny4313__\"        1, 0x0060, \"tn4313\" },\n   { \"attiny44\",             ARCH_AVR25, \"__AVR_ATtiny44__\",         0, 0x0060, \"tn44\" },\n+  { \"attiny44a\",            ARCH_AVR25, \"__AVR_ATtiny44A__\"         0, 0x0060, \"tn44a\" },\n   { \"attiny84\",             ARCH_AVR25, \"__AVR_ATtiny84__\",         0, 0x0060, \"tn84\" },\n+  { \"attiny84a\",            ARCH_AVR25, \"__AVR_ATtiny84A__\"         0, 0x0060, \"tn84\" },\n   { \"attiny25\",             ARCH_AVR25, \"__AVR_ATtiny25__\",         1, 0x0060, \"tn25\" },\n   { \"attiny45\",             ARCH_AVR25, \"__AVR_ATtiny45__\",         0, 0x0060, \"tn45\" },\n   { \"attiny85\",             ARCH_AVR25, \"__AVR_ATtiny85__\",         0, 0x0060, \"tn85\" },\n   { \"attiny261\",            ARCH_AVR25, \"__AVR_ATtiny261__\",        1, 0x0060, \"tn261\" },\n+  { \"attiny261a\",           ARCH_AVR25, \"__AVR_ATtiny261A__\"        1, 0x0060, \"tn261a\" },\n   { \"attiny461\",            ARCH_AVR25, \"__AVR_ATtiny461__\",        0, 0x0060, \"tn461\" },\n+  { \"attiny461a\",           ARCH_AVR25, \"__AVR_ATtiny461A__\"        0, 0x0060, \"tn461a\" },\n   { \"attiny861\",            ARCH_AVR25, \"__AVR_ATtiny861__\",        0, 0x0060, \"tn861\" },\n+  { \"attiny861a\",           ARCH_AVR25, \"__AVR_ATtiny861A__\"        0, 0x0060, \"tn861a\" },\n   { \"attiny43u\",            ARCH_AVR25, \"__AVR_ATtiny43U__\",        0, 0x0060, \"tn43u\" },\n   { \"attiny87\",             ARCH_AVR25, \"__AVR_ATtiny87__\",         0, 0x0100, \"tn87\" },\n   { \"attiny48\",             ARCH_AVR25, \"__AVR_ATtiny48__\",         0, 0x0100, \"tn48\" },\n@@ -97,21 +105,19 @@ const struct mcu_type_s avr_mcu_types[] = {\n   { \"atmega16u2\",           ARCH_AVR35, \"__AVR_ATmega16U2__\",       0, 0x0100, \"m16u2\" },\n   { \"atmega32u2\",           ARCH_AVR35, \"__AVR_ATmega32U2__\",       0, 0x0100, \"m32u2\" },\n   { \"attiny167\",            ARCH_AVR35, \"__AVR_ATtiny167__\",        0, 0x0100, \"tn167\" },\n-  { \"attiny327\",            ARCH_AVR35, \"__AVR_ATtiny327__\",        0, 0x0100, \"tn327\" },\n     /* Enhanced, <= 8K.  */\n   { \"avr4\",                 ARCH_AVR4, NULL,                        0, 0x0060, \"m8\" },\n   { \"atmega8\",              ARCH_AVR4, \"__AVR_ATmega8__\",           0, 0x0060, \"m8\" },\n   { \"atmega48\",             ARCH_AVR4, \"__AVR_ATmega48__\",          0, 0x0100, \"m48\" },\n+  { \"atmega48a\",            ARCH_AVR4, \"__AVR_ATmega48A__\"          0, 0x0100, \"m48a\" },\n   { \"atmega48p\",            ARCH_AVR4, \"__AVR_ATmega48P__\",         0, 0x0100, \"m48p\" },\n   { \"atmega88\",             ARCH_AVR4, \"__AVR_ATmega88__\",          0, 0x0100, \"m88\" },\n+  { \"atmega88a\",            ARCH_AVR4, \"__AVR_ATmega88A__\"          0, 0x0100, \"m88a\" },\n   { \"atmega88p\",            ARCH_AVR4, \"__AVR_ATmega88P__\",         0, 0x0100, \"m88p\" },\n+  { \"atmega88pa\",           ARCH_AVR4, \"__AVR_ATmega88PA__\"         0, 0x0100, \"m88pa\" },\n   { \"atmega8515\",           ARCH_AVR4, \"__AVR_ATmega8515__\",        0, 0x0060, \"m8515\" },\n   { \"atmega8535\",           ARCH_AVR4, \"__AVR_ATmega8535__\",        0, 0x0060, \"m8535\" },\n-  { \"atmega8c1\",            ARCH_AVR4, \"__AVR_ATmega8C1__\",         0, 0x0100, \"m8c1\" },\n-  { \"atmega8m1\",            ARCH_AVR4, \"__AVR_ATmega8M1__\",         0, 0x0100, \"m8m1\" },\n   { \"atmega8hva\",           ARCH_AVR4, \"__AVR_ATmega8HVA__\",        0, 0x0100, \"m8hva\" },\n-  { \"atmega4hvd\",           ARCH_AVR4, \"__AVR_ATmega4HVD__\",        0, 0x0100, \"m4hvd\" },\n-  { \"atmega8hvd\",           ARCH_AVR4, \"__AVR_ATmega8HVD__\",        0, 0x0100, \"m8hvd\" },\n   { \"at90pwm1\",             ARCH_AVR4, \"__AVR_AT90PWM1__\",          0, 0x0100, \"90pwm1\" },\n   { \"at90pwm2\",             ARCH_AVR4, \"__AVR_AT90PWM2__\",          0, 0x0100, \"90pwm2\" },\n   { \"at90pwm2b\",            ARCH_AVR4, \"__AVR_AT90PWM2B__\",         0, 0x0100, \"90pwm2b\" },\n@@ -121,45 +127,68 @@ const struct mcu_type_s avr_mcu_types[] = {\n     /* Enhanced, > 8K, <= 64K.  */\n   { \"avr5\",                 ARCH_AVR5, NULL,                        0, 0x0060, \"m16\" },\n   { \"atmega16\",             ARCH_AVR5, \"__AVR_ATmega16__\",          0, 0x0060, \"m16\" },\n+  { \"atmega16a\",            ARCH_AVR5, \"__AVR_ATmega16A__\"          0, 0x0060, \"m16a\" },\n   { \"atmega161\",            ARCH_AVR5, \"__AVR_ATmega161__\",         0, 0x0060, \"m161\" },\n   { \"atmega162\",            ARCH_AVR5, \"__AVR_ATmega162__\",         0, 0x0100, \"m162\" },\n   { \"atmega163\",            ARCH_AVR5, \"__AVR_ATmega163__\",         0, 0x0060, \"m163\" },\n+  { \"atmega164a\",           ARCH_AVR5, \"__AVR_ATmega164A__\"         0, 0x0060, \"m164a\" },\n   { \"atmega164p\",           ARCH_AVR5, \"__AVR_ATmega164P__\",        0, 0x0100, \"m164p\" },\n   { \"atmega165\",            ARCH_AVR5, \"__AVR_ATmega165__\",         0, 0x0100, \"m165\" },\n+  { \"atmega165a\",           ARCH_AVR5, \"__AVR_ATmega165A__\"         0, 0x0100, \"m165a\" },\n   { \"atmega165p\",           ARCH_AVR5, \"__AVR_ATmega165P__\",        0, 0x0100, \"m165p\" },\n   { \"atmega168\",            ARCH_AVR5, \"__AVR_ATmega168__\",         0, 0x0100, \"m168\" },\n+  { \"atmega168a\",           ARCH_AVR5, \"__AVR_ATmega168A__\"         0, 0x0100, \"m168a\" },\n   { \"atmega168p\",           ARCH_AVR5, \"__AVR_ATmega168P__\",        0, 0x0100, \"m168p\" },\n   { \"atmega169\",            ARCH_AVR5, \"__AVR_ATmega169__\",         0, 0x0100, \"m169\" },\n+  { \"atmega169a\",           ARCH_AVR5, \"__AVR_ATmega169A__\"         0, 0x0100, \"m169a\" },\n   { \"atmega169p\",           ARCH_AVR5, \"__AVR_ATmega169P__\",        0, 0x0100, \"m169p\" },\n+  { \"atmega169pa\",          ARCH_AVR5, \"__AVR_ATmega169PA__\"        0, 0x0100, \"m169pa\" },\n   { \"atmega32\",             ARCH_AVR5, \"__AVR_ATmega32__\",          0, 0x0060, \"m32\" },\n   { \"atmega323\",            ARCH_AVR5, \"__AVR_ATmega323__\",         0, 0x0060, \"m323\" },\n+  { \"atmega324a\",           ARCH_AVR5, \"__AVR_ATmega324A__\"         0, 0x0100, \"m324a\" },\n   { \"atmega324p\",           ARCH_AVR5, \"__AVR_ATmega324P__\",        0, 0x0100, \"m324p\" },\n+  { \"atmega324pa\",          ARCH_AVR5, \"__AVR_ATmega324PA__\"        0, 0x0100, \"m324pa\" },\n   { \"atmega325\",            ARCH_AVR5, \"__AVR_ATmega325__\",         0, 0x0100, \"m325\" },\n+  { \"atmega325a\",           ARCH_AVR5, \"__AVR_ATmega325A__\"         0, 0x0100, \"m325a\" },\n   { \"atmega325p\",           ARCH_AVR5, \"__AVR_ATmega325P__\",        0, 0x0100, \"m325p\" },\n   { \"atmega3250\",           ARCH_AVR5, \"__AVR_ATmega3250__\",        0, 0x0100, \"m3250\" },\n+  { \"atmega3250a\",          ARCH_AVR5, \"__AVR_ATmega3250A__\"        0, 0x0100, \"m3250a\" },\n   { \"atmega3250p\",          ARCH_AVR5, \"__AVR_ATmega3250P__\",       0, 0x0100, \"m3250p\" },\n+  { \"atmega328\",            ARCH_AVR5, \"__AVR_ATmega328__\"          0, 0x0100, \"m328\" },\n   { \"atmega328p\",           ARCH_AVR5, \"__AVR_ATmega328P__\",        0, 0x0100, \"m328p\" },\n   { \"atmega329\",            ARCH_AVR5, \"__AVR_ATmega329__\",         0, 0x0100, \"m329\" },\n+  { \"atmega329a\",           ARCH_AVR5, \"__AVR_ATmega329A__\"         0, 0x0100, \"m329a\" },\n   { \"atmega329p\",           ARCH_AVR5, \"__AVR_ATmega329P__\",        0, 0x0100, \"m329p\" },\n+  { \"atmega329pa\",          ARCH_AVR5, \"__AVR_ATmega329PA__\"        0, 0x0100, \"m329pa\" },\n   { \"atmega3290\",           ARCH_AVR5, \"__AVR_ATmega3290__\",        0, 0x0100, \"m3290\" },\n+  { \"atmega3290a\",          ARCH_AVR5, \"__AVR_ATmega3290A__\"        0, 0x0100, \"m3290a\" },\n   { \"atmega3290p\",          ARCH_AVR5, \"__AVR_ATmega3290P__\",       0, 0x0100, \"m3290p\" },\n   { \"atmega406\",            ARCH_AVR5, \"__AVR_ATmega406__\",         0, 0x0100, \"m406\" },\n   { \"atmega64\",             ARCH_AVR5, \"__AVR_ATmega64__\",          0, 0x0100, \"m64\" },\n   { \"atmega640\",            ARCH_AVR5, \"__AVR_ATmega640__\",         0, 0x0200, \"m640\" },\n   { \"atmega644\",            ARCH_AVR5, \"__AVR_ATmega644__\",         0, 0x0100, \"m644\" },\n+  { \"atmega644a\",           ARCH_AVR5, \"__AVR_ATmega644A__\"         0, 0x0100, \"m644a\" },\n   { \"atmega644p\",           ARCH_AVR5, \"__AVR_ATmega644P__\",        0, 0x0100, \"m644p\" },\n+  { \"atmega644pa\",          ARCH_AVR5, \"__AVR_ATmega644PA__\"        0, 0x0100, \"m644pa\" },\n   { \"atmega645\",            ARCH_AVR5, \"__AVR_ATmega645__\",         0, 0x0100, \"m645\" },\n+  { \"atmega645a\",           ARCH_AVR5, \"__AVR_ATmega645A__\"         0, 0x0100, \"m645a\" },\n+  { \"atmega645p\",           ARCH_AVR5, \"__AVR_ATmega645P__\"         0, 0x0100, \"m645p\" },\n   { \"atmega6450\",           ARCH_AVR5, \"__AVR_ATmega6450__\",        0, 0x0100, \"m6450\" },\n+  { \"atmega6450a\",          ARCH_AVR5, \"__AVR_ATmega6450A__\"        0, 0x0100, \"m6450a\" },\n+  { \"atmega6450p\",          ARCH_AVR5, \"__AVR_ATmega6450P__\"        0, 0x0100, \"m6450p\" },\n   { \"atmega649\",            ARCH_AVR5, \"__AVR_ATmega649__\",         0, 0x0100, \"m649\" },\n+  { \"atmega649a\",           ARCH_AVR5, \"__AVR_ATmega649A__\"         0, 0x0100, \"m649a\" },\n+  { \"atmega649p\",           ARCH_AVR5, \"__AVR_ATmega649P__\"         0, 0x0100, \"m649p\" },\n   { \"atmega6490\",           ARCH_AVR5, \"__AVR_ATmega6490__\",        0, 0x0100, \"m6490\" },\n   { \"atmega16hva\",          ARCH_AVR5, \"__AVR_ATmega16HVA__\",       0, 0x0100, \"m16hva\" },\n+  { \"atmega16hva2\",         ARCH_AVR5, \"__AVR_ATmega16HVA2__\"       0, 0x0100, \"m16hva2\" },\n   { \"atmega16hvb\",          ARCH_AVR5, \"__AVR_ATmega16HVB__\",       0, 0x0100, \"m16hvb\" },\n-  { \"atmega32hvb\",          ARCH_AVR5, \"__AVR_ATmega32HVB__\",       0, 0x0100, \"m23hvb\" },\n+  { \"atmega32hvb\",          ARCH_AVR5, \"__AVR_ATmega32HVB__\",       0, 0x0100, \"m32hvb\" },\n+  { \"atmega64hve\",          ARCH_AVR5, \"__AVR_ATmega64HVE__\"        0, 0x0100, \"m64hve\" },\n   { \"at90can32\",            ARCH_AVR5, \"__AVR_AT90CAN32__\",         0, 0x0100, \"can32\" },\n   { \"at90can64\",            ARCH_AVR5, \"__AVR_AT90CAN64__\",         0, 0x0100, \"can64\" },\n   { \"at90pwm216\",           ARCH_AVR5, \"__AVR_AT90PWM216__\",        0, 0x0100, \"90pwm216\" },\n   { \"at90pwm316\",           ARCH_AVR5, \"__AVR_AT90PWM316__\",        0, 0x0100, \"90pwm316\" },\n-  { \"atmega16c1\",           ARCH_AVR5, \"__AVR_ATmega16C1__\",        0, 0x0100, \"m16c1\" },\n   { \"atmega32c1\",           ARCH_AVR5, \"__AVR_ATmega32C1__\",        0, 0x0100, \"m32c1\" },\n   { \"atmega64c1\",           ARCH_AVR5, \"__AVR_ATmega64C1__\",        0, 0x0100, \"m64c1\" },\n   { \"atmega16m1\",           ARCH_AVR5, \"__AVR_ATmega16M1__\",        0, 0x0100, \"m16m1\" },\n@@ -172,6 +201,7 @@ const struct mcu_type_s avr_mcu_types[] = {\n   { \"at90usb646\",           ARCH_AVR5, \"__AVR_AT90USB646__\",        0, 0x0100, \"usb646\" },\n   { \"at90usb647\",           ARCH_AVR5, \"__AVR_AT90USB647__\",        0, 0x0100, \"usb647\" },\n   { \"at94k\",                ARCH_AVR5, \"__AVR_AT94K__\",             0, 0x0060, \"at94k\" },\n+  { \"m3000\",                ARCH_AVR5, \"__AVR_M3000__\",             0, 0x1000, \"m3000\" },\n     /* Enhanced, == 128K.  */\n   { \"avr51\",                ARCH_AVR51, NULL,                       0, 0x0100, \"m128\" },\n   { \"atmega128\",            ARCH_AVR51, \"__AVR_ATmega128__\",        0, 0x0100, \"m128\" },\n@@ -182,9 +212,6 @@ const struct mcu_type_s avr_mcu_types[] = {\n   { \"at90can128\",           ARCH_AVR51, \"__AVR_AT90CAN128__\",       0, 0x0100, \"can128\" },\n   { \"at90usb1286\",          ARCH_AVR51, \"__AVR_AT90USB1286__\",      0, 0x0100, \"usb1286\" },\n   { \"at90usb1287\",          ARCH_AVR51, \"__AVR_AT90USB1287__\",      0, 0x0100, \"usb1286\" },\n-  { \"m3000f\",               ARCH_AVR51, \"__AVR_M3000F__\",           0, 0x1000, \"m3000f\" },\n-  { \"m3000s\",               ARCH_AVR51, \"__AVR_M3000S__\",           0, 0x1000, \"m3000f\" },\n-  { \"m3001b\",               ARCH_AVR51, \"__AVR_M3001B__\",           0, 0x1000, \"m3000f\" },\n     /* 3-Byte PC.  */\n   { \"avr6\",                 ARCH_AVR6, NULL,                        0, 0x0200, \"m2561\" },\n   { \"atmega2560\",           ARCH_AVR6, \"__AVR_ATmega2560__\",        0, 0x0200, \"m2561\" },"}, {"sha": "1d57a0b3421cf8b517097e7592cd4d97ac3e5622", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 38, "deletions": 9, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578ad14116c61ef20c9d295da570537f6e9c5d2a/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578ad14116c61ef20c9d295da570537f6e9c5d2a/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=578ad14116c61ef20c9d295da570537f6e9c5d2a", "patch": "@@ -81,15 +81,23 @@ MULTILIB_MATCHES = \\\n \tmmcu?avr25=mmcu?attiny13 \\\n \tmmcu?avr25=mmcu?attiny13a \\\n \tmmcu?avr25=mmcu?attiny2313 \\\n+\tmmcu?avr25=mmcu?attiny2313a \\\n+\tmmcu?avr25=mmcu?attiny4313 \\\n \tmmcu?avr25=mmcu?attiny24 \\\n+\tmmcu?avr25=mmcu?attiny24a \\\n \tmmcu?avr25=mmcu?attiny44 \\\n+\tmmcu?avr25=mmcu?attiny44a \\\n \tmmcu?avr25=mmcu?attiny84 \\\n+\tmmcu?avr25=mmcu?attiny84a \\\n \tmmcu?avr25=mmcu?attiny25 \\\n \tmmcu?avr25=mmcu?attiny45 \\\n \tmmcu?avr25=mmcu?attiny85 \\\n \tmmcu?avr25=mmcu?attiny261 \\\n+\tmmcu?avr25=mmcu?attiny261a \\\n \tmmcu?avr25=mmcu?attiny461 \\\n+\tmmcu?avr25=mmcu?attiny461a \\\n \tmmcu?avr25=mmcu?attiny861 \\\n+\tmmcu?avr25=mmcu?attiny861a \\\n \tmmcu?avr25=mmcu?attiny43u \\\n \tmmcu?avr25=mmcu?attiny87 \\\n \tmmcu?avr25=mmcu?attiny48 \\\n@@ -105,65 +113,88 @@ MULTILIB_MATCHES = \\\n \tmmcu?avr35=mmcu?atmega16u2 \\\n \tmmcu?avr35=mmcu?atmega32u2 \\\n \tmmcu?avr35=mmcu?attiny167 \\\n-\tmmcu?avr35=mmcu?attiny327 \\\n \tmmcu?avr4=mmcu?atmega48 \\\n+\tmmcu?avr4=mmcu?atmega48a \\\n \tmmcu?avr4=mmcu?atmega48p \\\n \tmmcu?avr4=mmcu?atmega8 \\\n \tmmcu?avr4=mmcu?atmega8515 \\\n \tmmcu?avr4=mmcu?atmega8535 \\\n \tmmcu?avr4=mmcu?atmega88 \\\n+\tmmcu?avr4=mmcu?atmega88a \\\n \tmmcu?avr4=mmcu?atmega88p \\\n+\tmmcu?avr4=mmcu?atmega88pa \\\n \tmmcu?avr4=mmcu?atmega8hva \\\n-\tmmcu?avr4=mmcu?atmega4hvd \\\n-\tmmcu?avr4=mmcu?atmega8hvd \\\n-\tmmcu?avr4=mmcu?atmega8c1 \\\n-\tmmcu?avr4=mmcu?atmega8m1 \\\n \tmmcu?avr4=mmcu?at90pwm1 \\\n \tmmcu?avr4=mmcu?at90pwm2 \\\n \tmmcu?avr4=mmcu?at90pwm2b \\\n \tmmcu?avr4=mmcu?at90pwm3 \\\n \tmmcu?avr4=mmcu?at90pwm3b \\\n \tmmcu?avr4=mmcu?at90pwm81 \\\n \tmmcu?avr5=mmcu?atmega16 \\\n+\tmmcu?avr5=mmcu?atmega16a \\\n \tmmcu?avr5=mmcu?atmega161 \\\n \tmmcu?avr5=mmcu?atmega162 \\\n \tmmcu?avr5=mmcu?atmega163 \\\n+\tmmcu?avr5=mmcu?atmega164a \\\n \tmmcu?avr5=mmcu?atmega164p \\\n \tmmcu?avr5=mmcu?atmega165 \\\n+\tmmcu?avr5=mmcu?atmega165a \\\n \tmmcu?avr5=mmcu?atmega165p \\\n \tmmcu?avr5=mmcu?atmega168 \\\n+\tmmcu?avr5=mmcu?atmega168a \\\n \tmmcu?avr5=mmcu?atmega168p \\\n \tmmcu?avr5=mmcu?atmega169 \\\n+\tmmcu?avr5=mmcu?atmega169a \\\n \tmmcu?avr5=mmcu?atmega169p \\\n+\tmmcu?avr5=mmcu?atmega169pa \\\n \tmmcu?avr5=mmcu?atmega32 \\\n \tmmcu?avr5=mmcu?atmega323 \\\n+\tmmcu?avr5=mmcu?atmega324a \\\n \tmmcu?avr5=mmcu?atmega324p \\\n+\tmmcu?avr5=mmcu?atmega324pa \\\n \tmmcu?avr5=mmcu?atmega325 \\\n+\tmmcu?avr5=mmcu?atmega325a \\\n \tmmcu?avr5=mmcu?atmega325p \\\n \tmmcu?avr5=mmcu?atmega3250 \\\n+\tmmcu?avr5=mmcu?atmega3250a \\\n \tmmcu?avr5=mmcu?atmega3250p \\\n+\tmmcu?avr5=mmcu?atmega328 \\\n \tmmcu?avr5=mmcu?atmega328p \\\n \tmmcu?avr5=mmcu?atmega329 \\\n+\tmmcu?avr5=mmcu?atmega329a \\\n \tmmcu?avr5=mmcu?atmega329p \\\n+\tmmcu?avr5=mmcu?atmega329pa \\\n \tmmcu?avr5=mmcu?atmega3290 \\\n+\tmmcu?avr5=mmcu?atmega3290a \\\n \tmmcu?avr5=mmcu?atmega3290p \\\n \tmmcu?avr5=mmcu?atmega406 \\\n \tmmcu?avr5=mmcu?atmega64  \\\n \tmmcu?avr5=mmcu?atmega640 \\\n \tmmcu?avr5=mmcu?atmega644 \\\n+\tmmcu?avr5=mmcu?atmega644a \\\n \tmmcu?avr5=mmcu?atmega644p \\\n+\tmmcu?avr5=mmcu?atmega644pa \\\n \tmmcu?avr5=mmcu?atmega645 \\\n+\tmmcu?avr5=mmcu?atmega645a \\\n+\tmmcu?avr5=mmcu?atmega645p \\\n \tmmcu?avr5=mmcu?atmega6450 \\\n+\tmmcu?avr5=mmcu?atmega6450a \\\n+\tmmcu?avr5=mmcu?atmega6450p \\\n \tmmcu?avr5=mmcu?atmega649 \\\n+\tmmcu?avr5=mmcu?atmega649a \\\n+\tmmcu?avr5=mmcu?atmega649p \\\n \tmmcu?avr5=mmcu?atmega6490 \\\n+\tmmcu?avr5=mmcu?atmega6490a \\\n+\tmmcu?avr5=mmcu?atmega6490p \\\n \tmmcu?avr5=mmcu?atmega16hva \\\n+\tmmcu?avr5=mmcu?atmega16hva2 \\\n \tmmcu?avr5=mmcu?atmega16hvb \\\n \tmmcu?avr5=mmcu?atmega32hvb \\\n+\tmmcu?avr5=mmcu?atmega64hve \\\n \tmmcu?avr5=mmcu?at90can32 \\\n \tmmcu?avr5=mmcu?at90can64 \\\n \tmmcu?avr5=mmcu?at90pwm216 \\\n \tmmcu?avr5=mmcu?at90pwm316 \\\n-\tmmcu?avr5=mmcu?atmega16c1 \\\n \tmmcu?avr5=mmcu?atmega32c1 \\\n \tmmcu?avr5=mmcu?atmega64c1 \\\n \tmmcu?avr5=mmcu?atmega16m1 \\\n@@ -176,6 +207,7 @@ MULTILIB_MATCHES = \\\n \tmmcu?avr5=mmcu?at90usb646 \\\n \tmmcu?avr5=mmcu?at90usb647 \\\n \tmmcu?avr5=mmcu?at94k \\\n+\tmmcu?avr5=mmcu?m3000 \\\n \tmmcu?avr51=mmcu?atmega128 \\\n \tmmcu?avr51=mmcu?atmega1280 \\\n \tmmcu?avr51=mmcu?atmega1281 \\\n@@ -184,9 +216,6 @@ MULTILIB_MATCHES = \\\n \tmmcu?avr51=mmcu?at90can128 \\\n \tmmcu?avr51=mmcu?at90usb1286 \\\n \tmmcu?avr51=mmcu?at90usb1287 \\\n-\tmmcu?avr51=mmcu?m3000f \\\n-\tmmcu?avr51=mmcu?m3000s \\\n-\tmmcu?avr51=mmcu?m3001b \\\n  \tmmcu?avr6=mmcu?atmega2560 \\\n  \tmmcu?avr6=mmcu?atmega2561\n "}]}