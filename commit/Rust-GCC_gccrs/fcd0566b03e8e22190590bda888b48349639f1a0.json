{"sha": "fcd0566b03e8e22190590bda888b48349639f1a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNkMDU2NmIwM2U4ZTIyMTkwNTkwYmRhODg4YjQ4MzQ5NjM5ZjFhMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-05-07T13:07:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-05-07T13:07:48Z"}, "message": "tree-vect-stmts.c (vect_is_simple_cond): When vectype is not specified still compute a comp_vectype for invariant compares.\n\n2019-05-07  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-stmts.c (vect_is_simple_cond): When vectype is\n\tnot specified still compute a comp_vectype for invariant\n\tcompares.\n\nFrom-SVN: r270945", "tree": {"sha": "87b34140b2297fa0af8bb02f7e1579208f384877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87b34140b2297fa0af8bb02f7e1579208f384877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcd0566b03e8e22190590bda888b48349639f1a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcd0566b03e8e22190590bda888b48349639f1a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcd0566b03e8e22190590bda888b48349639f1a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcd0566b03e8e22190590bda888b48349639f1a0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "530ec1acebc6c7808b013ab1d7b0d8b30edeab18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/530ec1acebc6c7808b013ab1d7b0d8b30edeab18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/530ec1acebc6c7808b013ab1d7b0d8b30edeab18"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "8770f865335f3867662a43413d624d3a64e80713", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcd0566b03e8e22190590bda888b48349639f1a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcd0566b03e8e22190590bda888b48349639f1a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcd0566b03e8e22190590bda888b48349639f1a0", "patch": "@@ -1,3 +1,9 @@\n+2019-05-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-stmts.c (vect_is_simple_cond): When vectype is\n+\tnot specified still compute a comp_vectype for invariant\n+\tcompares.\n+\n 2019-05-07  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90316"}, {"sha": "ced4264722c226e9ec93956a07b168782ce85c78", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcd0566b03e8e22190590bda888b48349639f1a0/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcd0566b03e8e22190590bda888b48349639f1a0/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=fcd0566b03e8e22190590bda888b48349639f1a0", "patch": "@@ -8864,11 +8864,12 @@ vect_is_simple_cond (tree cond, vec_info *vinfo,\n \n   *comp_vectype = vectype1 ? vectype1 : vectype2;\n   /* Invariant comparison.  */\n-  if (! *comp_vectype && vectype)\n+  if (! *comp_vectype)\n     {\n       tree scalar_type = TREE_TYPE (lhs);\n       /* If we can widen the comparison to match vectype do so.  */\n       if (INTEGRAL_TYPE_P (scalar_type)\n+\t  && vectype\n \t  && tree_int_cst_lt (TYPE_SIZE (scalar_type),\n \t\t\t      TYPE_SIZE (TREE_TYPE (vectype))))\n \tscalar_type = build_nonstandard_integer_type"}]}