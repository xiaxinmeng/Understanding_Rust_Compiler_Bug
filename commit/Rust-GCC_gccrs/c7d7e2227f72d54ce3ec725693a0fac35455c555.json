{"sha": "c7d7e2227f72d54ce3ec725693a0fac35455c555", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdkN2UyMjI3ZjcyZDU0Y2UzZWM3MjU2OTNhMGZhYzM1NDU1YzU1NQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-05-31T09:01:36Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-05-31T09:01:36Z"}, "message": "tree-data-ref.c (prune_runtime_alias_test_list): Relax minimal segment length for dr_b and compute it in wide_int.\n\n\t* tree-data-ref.c (prune_runtime_alias_test_list): Relax minimal\n\tsegment length for dr_b and compute it in wide_int.\n\n\tgcc/testsuite\n\t* gcc.dg/vect/pr80815-3.c: New test.\n\nFrom-SVN: r248725", "tree": {"sha": "656b1cc5f244dff861422578f27cc9ae59bb46b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/656b1cc5f244dff861422578f27cc9ae59bb46b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7d7e2227f72d54ce3ec725693a0fac35455c555", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d7e2227f72d54ce3ec725693a0fac35455c555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7d7e2227f72d54ce3ec725693a0fac35455c555", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d7e2227f72d54ce3ec725693a0fac35455c555/comments", "author": null, "committer": null, "parents": [{"sha": "945bafd67aae4e16b8ca0c44db2cf22606551f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945bafd67aae4e16b8ca0c44db2cf22606551f16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/945bafd67aae4e16b8ca0c44db2cf22606551f16"}], "stats": {"total": 64, "additions": 57, "deletions": 7}, "files": [{"sha": "5fca7dcde8ced11f8d79f873a45bdab6f6f2a8f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d7e2227f72d54ce3ec725693a0fac35455c555/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d7e2227f72d54ce3ec725693a0fac35455c555/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7d7e2227f72d54ce3ec725693a0fac35455c555", "patch": "@@ -1,3 +1,8 @@\n+2017-05-31  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-data-ref.c (prune_runtime_alias_test_list): Relax minimal\n+\tsegment length for dr_b and compute it in wide_int.\n+\n 2017-05-31  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80906"}, {"sha": "9fec6120618f4fecf908f98663772a3693a23128", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d7e2227f72d54ce3ec725693a0fac35455c555/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d7e2227f72d54ce3ec725693a0fac35455c555/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7d7e2227f72d54ce3ec725693a0fac35455c555", "patch": "@@ -1,3 +1,7 @@\n+2017-05-31  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* gcc.dg/vect/pr80815-3.c: New test.\n+\n 2017-05-31  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80906"}, {"sha": "dae01fa7af712fe171294d05d21d9651b6dd2fca", "filename": "gcc/testsuite/gcc.dg/vect/pr80815-3.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d7e2227f72d54ce3ec725693a0fac35455c555/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr80815-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d7e2227f72d54ce3ec725693a0fac35455c555/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr80815-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr80815-3.c?ref=c7d7e2227f72d54ce3ec725693a0fac35455c555", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include \"tree-vect.h\"\n+int arr[2048];\n+int res[100] = { 2148, 2146, 2144, 2142, 2140, 2138, 2136, 2134, 2132, 2130,\n+\t\t 2128, 2126, 2124, 2122, 2120, 2118, 2116, 2114, 2112, 2110,\n+\t\t 2108, 2106, 2104, 2102, 2100, 2098, 2096, 2094, 2092, 2090,\n+\t\t 2088, 2086, 2084, 2082, 2080, 2078, 2076, 2074, 2072, 2070,\n+\t\t 2068, 2066, 2064, 2062, 2060, 2058, 2056, 2054, 3078, 2050};\n+\n+__attribute__ ((noinline)) int\n+foo (int *a, int *b, int len)\n+{\n+  int i;\n+  int *a1 = a;\n+  int *a0 = a1 - 4;\n+  for (i = 0; i < len; i++)\n+    {\n+      *b = *a0 + *a1;\n+      b--;\n+      a0++;\n+      a1++;\n+    }\n+  return 0;\n+}\n+\n+int main (void)\n+{\n+  int *a = &arr[1027];\n+  int *b = &arr[1024];\n+\n+  int i;\n+  for (i = 0; i < 2048; i++)\n+    arr[i] = i;\n+\n+  foo (a, b, 50);\n+\n+  for (i = 975; i < 1025; i++)\n+    if (arr[i] != res[i - 975])\n+      abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"improved number of alias checks from \\[0-9\\]* to 1\" \"vect\" } } */"}, {"sha": "c4275e2ce20b9853d8fd6f0a032c2ce60afff3de", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d7e2227f72d54ce3ec725693a0fac35455c555/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d7e2227f72d54ce3ec725693a0fac35455c555/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=c7d7e2227f72d54ce3ec725693a0fac35455c555", "patch": "@@ -1361,14 +1361,10 @@ prune_runtime_alias_test_list (vec<dr_with_seg_len_pair_t> *alias_pairs,\n \t  wide_int min_seg_len_b;\n \t  tree new_seg_len;\n \n-\t  if (tree_fits_uhwi_p (dr_b1->seg_len))\n-\t    {\n-\t      min_seg_len_b = dr_b1->seg_len;\n-\t      if (tree_int_cst_sign_bit (dr_b1->seg_len))\n-\t\tmin_seg_len_b = wi::neg (min_seg_len_b);\n-\t    }\n+\t  if (TREE_CODE (dr_b1->seg_len) == INTEGER_CST)\n+\t    min_seg_len_b = wi::abs (dr_b1->seg_len);\n \t  else\n-\t    min_seg_len_b = wi::uhwi (factor, TYPE_PRECISION (sizetype));\n+\t    min_seg_len_b = wi::mul (factor, wi::abs (DR_STEP (dr_b1->dr)));\n \n \t  /* Now we try to merge alias check dr_a1 & dr_b and dr_a2 & dr_b.\n "}]}