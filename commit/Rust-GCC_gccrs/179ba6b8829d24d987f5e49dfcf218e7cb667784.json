{"sha": "179ba6b8829d24d987f5e49dfcf218e7cb667784", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc5YmE2Yjg4MjlkMjRkOTg3ZjVlNDlkZmNmMjE4ZTdjYjY2Nzc4NA==", "commit": {"author": {"name": "Hariharan Sandanagobalane", "email": "hariharan@picochip.com", "date": "2010-08-28T16:40:27Z"}, "committer": {"name": "Hariharan Sandanagobalane", "email": "hariharans@gcc.gnu.org", "date": "2010-08-28T16:40:27Z"}, "message": "re PR target/45299 (Dwarf information is wrong with optimised code.)\n\n        * config/picochip/picochip.c (reorder_var_tracking_notes): This\n          function was dropping debug insns which caused PR45299.\n\nFrom-SVN: r163617", "tree": {"sha": "624fdef0291d0e2bf0c487fb0c46686e96439d11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/624fdef0291d0e2bf0c487fb0c46686e96439d11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/179ba6b8829d24d987f5e49dfcf218e7cb667784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179ba6b8829d24d987f5e49dfcf218e7cb667784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/179ba6b8829d24d987f5e49dfcf218e7cb667784", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179ba6b8829d24d987f5e49dfcf218e7cb667784/comments", "author": null, "committer": null, "parents": [{"sha": "ee9dd92eeaf6cc38bcf14b75c2afeb825d5aa3a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9dd92eeaf6cc38bcf14b75c2afeb825d5aa3a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee9dd92eeaf6cc38bcf14b75c2afeb825d5aa3a4"}], "stats": {"total": 90, "additions": 61, "deletions": 29}, "files": [{"sha": "a7620cab641d586a4b81f693781638df4a6fd2bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179ba6b8829d24d987f5e49dfcf218e7cb667784/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179ba6b8829d24d987f5e49dfcf218e7cb667784/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=179ba6b8829d24d987f5e49dfcf218e7cb667784", "patch": "@@ -1,5 +1,9 @@\n-2010-08-28  Uros Bizjak  <ubizjak@gmail.com>\n+2010-08-28  Hariharan Sandanagobalane <hariharan@picochip.com>\n+\n+\t* config/picochip/picochip.c (reorder_var_tracking_notes): This\n+\tfunction was dropping debug insns which caused PR45299.\n \n+2010-08-28  Uros Bizjak  <ubizjak@gmail.com>\n \t* config/i386/sse.md (extsuffix): New code attribute.\n \t(sse4_1_<code>v8qiv8hi2): Macroize insn from sse4_1_extendv8qiv8hi2\n \tand sse4_1_zero_extendv8qiv8hi2 using any_extend code iterator."}, {"sha": "ded84e32c6b4535e46acac99fe84a3e42029ff5f", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 56, "deletions": 28, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/179ba6b8829d24d987f5e49dfcf218e7cb667784/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/179ba6b8829d24d987f5e49dfcf218e7cb667784/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=179ba6b8829d24d987f5e49dfcf218e7cb667784", "patch": "@@ -3138,40 +3138,68 @@ static void\n reorder_var_tracking_notes (void)\n {\n   basic_block bb;\n+\n   FOR_EACH_BB (bb)\n     {\n-      rtx insn, next;\n+      rtx insn, next, last_insn = NULL_RTX;\n+      rtx vliw_start = NULL_RTX;\n       rtx queue = NULL_RTX;\n \n-      for (insn = BB_HEAD (bb); insn != BB_END (bb); insn = next)\n-\t{\n-\t  next = NEXT_INSN (insn);\n+      /* Iterate through the bb and find the last non-debug insn */\n+      for (insn = BB_HEAD (bb); insn != NEXT_INSN(BB_END (bb)); insn = NEXT_INSN(insn))\n+        {\n+          if (NONDEBUG_INSN_P(insn))\n+            last_insn = insn;\n+        }\n \n-\t  if (NONDEBUG_INSN_P (insn))\n-\t    {\n-\t      /* Emit queued up notes before the first instruction of a bundle.  */\n-\t      if (GET_MODE (insn) == TImode)\n-\t\t{\n-\t\t  while (queue)\n-\t\t    {\n-\t\t      rtx next_queue = PREV_INSN (queue);\n-\t\t      NEXT_INSN (PREV_INSN(insn)) = queue;\n-\t\t      PREV_INSN (queue) = PREV_INSN(insn);\n-\t\t      PREV_INSN (insn) = queue;\n-\t\t      NEXT_INSN (queue) = insn;\n-\t\t      queue = next_queue;\n-\t\t    }\n-\t\t}\n-\t    }\n-\t  else if (NOTE_P (insn) && NOTE_KIND (insn) == NOTE_INSN_VAR_LOCATION)\n-\t    {\n-\t       rtx prev = PREV_INSN (insn);\n-\t       PREV_INSN (next) = prev;\n-\t       NEXT_INSN (prev) = next;\n+      /* In all normal cases, queue up notes and emit them just before a TImode\n+         instruction. For the last instruction, emit the queued notes just after\n+         the last instruction. */\n+      for (insn = BB_HEAD (bb); insn != NEXT_INSN(BB_END (bb)); insn = next)\n+        {\n+          next = NEXT_INSN (insn);\n+\n+          if (insn == last_insn)\n+            {\n+              while (queue)\n+                {\n+                  rtx next_queue = PREV_INSN (queue);\n+                  PREV_INSN (NEXT_INSN(insn)) = queue;\n+                  NEXT_INSN(queue) = NEXT_INSN(insn);\n+                  PREV_INSN(queue) = insn;\n+                  NEXT_INSN(insn) = queue;\n+                  queue = next_queue;\n+                }\n+              /* There is no more to do for this bb. break*/\n+              break;\n+            }\n+          else if (NONDEBUG_INSN_P (insn))\n+            {\n+              /* Emit queued up notes before the first instruction of a bundle.  */\n+              if (GET_MODE (insn) == TImode)\n+                {\n+                  while (queue)\n+                    {\n+                      rtx next_queue = PREV_INSN (queue);\n+                      NEXT_INSN (PREV_INSN(insn)) = queue;\n+                      PREV_INSN (queue) = PREV_INSN(insn);\n+                      PREV_INSN (insn) = queue;\n+                      NEXT_INSN (queue) = insn;\n+                      queue = next_queue;\n+                    }\n+                }\n+            }\n+          else if (NOTE_P (insn) && NOTE_KIND (insn) == NOTE_INSN_VAR_LOCATION)\n+            {\n+               rtx prev = PREV_INSN (insn);\n+               PREV_INSN (next) = prev;\n+               NEXT_INSN (prev) = next;\n                PREV_INSN (insn) = queue;\n-\t       queue = insn;\n-\t    }\n-\t}\n+               queue = insn;\n+            }\n+        }\n+        /* Make sure we are not dropping debug instructions.*/\n+        gcc_assert (queue == NULL_RTX);\n     }\n }\n "}]}