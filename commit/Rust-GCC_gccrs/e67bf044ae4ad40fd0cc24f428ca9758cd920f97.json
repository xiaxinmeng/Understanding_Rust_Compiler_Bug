{"sha": "e67bf044ae4ad40fd0cc24f428ca9758cd920f97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY3YmYwNDRhZTRhZDQwZmQwY2MyNGY0MjhjYTk3NThjZDkyMGY5Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-23T12:58:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-23T12:58:53Z"}, "message": "re PR c++/69902 (Bogus -Wnonnull-compare for: dynamic_cast<T*>(&ref) == nullptr)\n\n\tPR c++/69902\n\t* fold-const.c (fold_truth_not_expr): Propagate TREE_NO_WARNING\n\twhen inverting comparison.\n\n\t* g++.dg/warn/Wnonnull-compare-5.C: New test.\n\nFrom-SVN: r233631", "tree": {"sha": "a3bc76f90dc7fe653979363fdc0f18eeeb440730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3bc76f90dc7fe653979363fdc0f18eeeb440730"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e67bf044ae4ad40fd0cc24f428ca9758cd920f97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e67bf044ae4ad40fd0cc24f428ca9758cd920f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e67bf044ae4ad40fd0cc24f428ca9758cd920f97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1a62b6fa8c1e5305d887559575506755f8aab69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a62b6fa8c1e5305d887559575506755f8aab69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a62b6fa8c1e5305d887559575506755f8aab69"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "951f2084cef640d64f373574175742ccf17da1a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e67bf044ae4ad40fd0cc24f428ca9758cd920f97", "patch": "@@ -1,5 +1,9 @@\n 2016-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/69902\n+\t* fold-const.c (fold_truth_not_expr): Propagate TREE_NO_WARNING\n+\twhen inverting comparison.\n+\n \tPR c/69900\n \t* common.opt (Wunreachable-code): Add Warning flag.\n "}, {"sha": "5376d4d499c06985ad8b7c87e8df9f2316fa836a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=e67bf044ae4ad40fd0cc24f428ca9758cd920f97", "patch": "@@ -3589,8 +3589,11 @@ fold_truth_not_expr (location_t loc, tree arg)\n       if (code == ERROR_MARK)\n \treturn NULL_TREE;\n \n-      return build2_loc (loc, code, type, TREE_OPERAND (arg, 0),\n-\t\t\t TREE_OPERAND (arg, 1));\n+      tree ret = build2_loc (loc, code, type, TREE_OPERAND (arg, 0),\n+\t\t\t     TREE_OPERAND (arg, 1));\n+      if (TREE_NO_WARNING (arg))\n+\tTREE_NO_WARNING (ret) = 1;\n+      return ret;\n     }\n \n   switch (code)"}, {"sha": "2b7fe37821d29b3ea21db0c94509d101985fbeff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e67bf044ae4ad40fd0cc24f428ca9758cd920f97", "patch": "@@ -1,5 +1,8 @@\n 2016-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/69902\n+\t* g++.dg/warn/Wnonnull-compare-5.C: New test.\n+\n \tPR c/69900\n \t* gcc.dg/pr69900.c: New test.\n "}, {"sha": "8b31e6cf86e96edbf56fb6c2dc558d28ef88bf82", "filename": "gcc/testsuite/g++.dg/warn/Wnonnull-compare-5.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e67bf044ae4ad40fd0cc24f428ca9758cd920f97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull-compare-5.C?ref=e67bf044ae4ad40fd0cc24f428ca9758cd920f97", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/69902\n+// { dg-do compile }\n+// { dg-options \"-Wall\" }\n+\n+struct A { virtual ~A (); };\n+struct B : A {};\n+\n+bool\n+foo (A &a)\n+{\n+  return dynamic_cast<B *>(&a) == (B *) 0;\t// { dg-bogus \"nonnull argument\" }\n+}\n+\n+bool\n+bar (A &a)\n+{\n+  return dynamic_cast<B *>(&a) != (B *) 0;\t// { dg-bogus \"nonnull argument\" }\n+}"}]}