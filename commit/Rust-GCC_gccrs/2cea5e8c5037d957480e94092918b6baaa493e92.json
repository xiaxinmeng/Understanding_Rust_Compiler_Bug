{"sha": "2cea5e8c5037d957480e94092918b6baaa493e92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNlYTVlOGM1MDM3ZDk1NzQ4MGU5NDA5MjkxOGI2YmFhYTQ5M2U5Mg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2006-02-06T14:27:21Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2006-02-06T14:27:21Z"}, "message": "sync.md (sync_add<mode>, [...]): Operand 0 is in-out.\n\n\t* config/i386/sync.md (sync_add<mode>, sync_sub<mode>, sync_ior<mode>,\n\tsync_and<mode>, sync_xor<mode>): Operand 0 is in-out.\n\nFrom-SVN: r110645", "tree": {"sha": "9ebcc73700fd8b90440b10eea9e888ce922c4aed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ebcc73700fd8b90440b10eea9e888ce922c4aed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cea5e8c5037d957480e94092918b6baaa493e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cea5e8c5037d957480e94092918b6baaa493e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cea5e8c5037d957480e94092918b6baaa493e92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cea5e8c5037d957480e94092918b6baaa493e92/comments", "author": null, "committer": null, "parents": [{"sha": "85300b46921605923dadc0368faf992ec1e58e9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85300b46921605923dadc0368faf992ec1e58e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85300b46921605923dadc0368faf992ec1e58e9d"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "225f6e82a2d1723b25a356e2dc7bb716ec90d9ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cea5e8c5037d957480e94092918b6baaa493e92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cea5e8c5037d957480e94092918b6baaa493e92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cea5e8c5037d957480e94092918b6baaa493e92", "patch": "@@ -1,3 +1,8 @@\n+2006-02-02  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* config/i386/sync.md (sync_add<mode>, sync_sub<mode>, sync_ior<mode>,\n+\tsync_and<mode>, sync_xor<mode>): Operand 0 is in-out.\n+\n 2006-02-06  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-pre.c (bb_value_sets_t): Add antic_safe_loads."}, {"sha": "19a61c8b580acfc977dd237ee353c6e49fba6611", "filename": "gcc/config/i386/sync.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cea5e8c5037d957480e94092918b6baaa493e92/gcc%2Fconfig%2Fi386%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cea5e8c5037d957480e94092918b6baaa493e92/gcc%2Fconfig%2Fi386%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsync.md?ref=2cea5e8c5037d957480e94092918b6baaa493e92", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for i386 synchronization instructions.\n-;; Copyright (C) 2005\n+;; Copyright (C) 2005, 2006\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -230,7 +230,7 @@\n   \"xchg{<modesuffix>}\\t{%1, %0|%0, %1}\")\n \n (define_insn \"sync_add<mode>\"\n-  [(set (match_operand:IMODE 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:IMODE 0 \"memory_operand\" \"+m\")\n \t(unspec_volatile:IMODE\n \t  [(plus:IMODE (match_dup 0)\n \t     (match_operand:IMODE 1 \"nonmemory_operand\" \"r<immconstraint>\"))]\n@@ -240,7 +240,7 @@\n   \"lock\\;add{<modesuffix>}\\t{%1, %0|%0, %1}\")\n \n (define_insn \"sync_sub<mode>\"\n-  [(set (match_operand:IMODE 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:IMODE 0 \"memory_operand\" \"+m\")\n \t(unspec_volatile:IMODE\n \t  [(minus:IMODE (match_dup 0)\n \t     (match_operand:IMODE 1 \"nonmemory_operand\" \"r<immconstraint>\"))]\n@@ -250,7 +250,7 @@\n   \"lock\\;sub{<modesuffix>}\\t{%1, %0|%0, %1}\")\n \n (define_insn \"sync_ior<mode>\"\n-  [(set (match_operand:IMODE 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:IMODE 0 \"memory_operand\" \"+m\")\n \t(unspec_volatile:IMODE\n \t  [(ior:IMODE (match_dup 0)\n \t     (match_operand:IMODE 1 \"nonmemory_operand\" \"r<immconstraint>\"))]\n@@ -260,7 +260,7 @@\n   \"lock\\;or{<modesuffix>}\\t{%1, %0|%0, %1}\")\n \n (define_insn \"sync_and<mode>\"\n-  [(set (match_operand:IMODE 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:IMODE 0 \"memory_operand\" \"+m\")\n \t(unspec_volatile:IMODE\n \t  [(and:IMODE (match_dup 0)\n \t     (match_operand:IMODE 1 \"nonmemory_operand\" \"r<immconstraint>\"))]\n@@ -270,7 +270,7 @@\n   \"lock\\;and{<modesuffix>}\\t{%1, %0|%0, %1}\")\n \n (define_insn \"sync_xor<mode>\"\n-  [(set (match_operand:IMODE 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:IMODE 0 \"memory_operand\" \"+m\")\n \t(unspec_volatile:IMODE\n \t  [(xor:IMODE (match_dup 0)\n \t     (match_operand:IMODE 1 \"nonmemory_operand\" \"r<immconstraint>\"))]"}]}