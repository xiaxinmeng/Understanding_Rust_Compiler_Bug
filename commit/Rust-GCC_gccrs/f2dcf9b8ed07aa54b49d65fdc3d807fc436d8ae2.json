{"sha": "f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkY2Y5YjhlZDA3YWE1NGI0OWQ2NWZkYzNkODA3ZmM0MzZkOGFlMg==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2012-04-07T03:47:05Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2012-04-07T03:47:05Z"}, "message": "invoke.texi: Clean up Texinfo markup throughout the file.\n\n2012-04-06  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/invoke.texi:  Clean up Texinfo markup throughout the file.\n\tUse @option markup on command-line options.  Use @samp markup on\n\tliteral keywords to options.  Use @code markup on code fragments.\n\tUse other markup in preference to quotation marks in the text.\n\tAdd markup to some passages without any.\n\nFrom-SVN: r186209", "tree": {"sha": "eb0f52a5a8eb2b916b61dc7c6cbfb7493c17f1a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb0f52a5a8eb2b916b61dc7c6cbfb7493c17f1a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d3ffb4d6450457657f387213ffcafa50523df1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d3ffb4d6450457657f387213ffcafa50523df1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d3ffb4d6450457657f387213ffcafa50523df1f"}], "stats": {"total": 479, "additions": 274, "deletions": 205}, "files": [{"sha": "e6ef2e76cd177e2539e8c36ccb34882a613025a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2", "patch": "@@ -1,3 +1,11 @@\n+2012-04-06  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/invoke.texi:  Clean up Texinfo markup throughout the file.\n+\tUse @option markup on command-line options.  Use @samp markup on\n+\tliteral keywords to options.  Use @code markup on code fragments.\n+\tUse other markup in preference to quotation marks in the text.\n+\tAdd markup to some passages without any.\n+\n 2012-04-06  Mike Stump  <mikestump@comcast.net>\n \n \t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Avoid warning."}, {"sha": "cf6c9f238447749c8fb2641ca7c02534a1200bc3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 266, "deletions": 205, "changes": 471, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f2dcf9b8ed07aa54b49d65fdc3d807fc436d8ae2", "patch": "@@ -1494,8 +1494,8 @@ accepts:\n @cindex ISO support\n @item -ansi\n @opindex ansi\n-In C mode, this is equivalent to @samp{-std=c90}. In C++ mode, it is\n-equivalent to @samp{-std=c++98}.\n+In C mode, this is equivalent to @option{-std=c90}. In C++ mode, it is\n+equivalent to @option{-std=c++98}.\n \n This turns off certain features of GCC that are incompatible with ISO\n C90 (when compiling C code), or of standard C++ (when compiling C++ code),\n@@ -1541,7 +1541,7 @@ The compiler can accept several base standards, such as @samp{c90} or\n @samp{gnu90} or @samp{gnu++98}.  By specifying a base standard, the\n compiler will accept all programs following that standard and those\n using GNU extensions that do not contradict it.  For example,\n-@samp{-std=c90} turns off certain features of GCC that are\n+@option{-std=c90} turns off certain features of GCC that are\n incompatible with ISO C90, such as the @code{asm} and @code{typeof}\n keywords, but not other GNU extensions that do not have a meaning in\n ISO C90, such as omitting the middle term of a @code{?:}\n@@ -1551,8 +1551,8 @@ those features change the meaning of the base standard and some\n strict-conforming programs may be rejected.  The particular standard\n is used by @option{-pedantic} to identify which features are GNU\n extensions given that version of the standard. For example\n-@samp{-std=gnu90 -pedantic} would warn about C++ style @samp{//}\n-comments, while @samp{-std=gnu99 -pedantic} would not.\n+@option{-std=gnu90 -pedantic} warns about C++ style @samp{//}\n+comments, while @option{-std=gnu99 -pedantic} does not.\n \n A value for this option must be provided; possible values are\n \n@@ -1966,7 +1966,7 @@ is 512.\n @item -fdeduce-init-list\n @opindex fdeduce-init-list\n Enable deduction of a template type parameter as\n-std::initializer_list from a brace-enclosed initializer list, i.e.\n+@code{std::initializer_list} from a brace-enclosed initializer list, i.e.@:\n \n @smallexample\n template <class T> auto forward(T t) -> decltype (realfn (t))\n@@ -2436,7 +2436,7 @@ int i = @{ 2.2 @}; // error: narrowing from double to int\n \n This flag is included in @option{-Wall} and @option{-Wc++11-compat}.\n \n-With -std=c++11, @option{-Wno-narrowing} suppresses the diagnostic\n+With @option{-std=c++11}, @option{-Wno-narrowing} suppresses the diagnostic\n required by the standard.  Note that this does not affect the meaning\n of well-formed code; narrowing conversions are still considered\n ill-formed in SFINAE context.\n@@ -3284,7 +3284,7 @@ included in @option{-Wformat-nonliteral}.)\n @opindex Wformat=2\n @opindex Wno-format=2\n Enable @option{-Wformat} plus format checks not included in\n-@option{-Wformat}.  Currently equivalent to @samp{-Wformat\n+@option{-Wformat}.  Currently equivalent to @option{-Wformat\n -Wformat-nonliteral -Wformat-security -Wformat-y2k}.\n \n @item -Wnonnull\n@@ -3627,8 +3627,8 @@ This warning is enabled by @option{-Wall}.\n All the above @option{-Wunused} options combined.\n \n In order to get a warning about an unused function parameter, you must\n-either specify @samp{-Wextra -Wunused} (note that @samp{-Wall} implies\n-@samp{-Wunused}), or separately specify @option{-Wunused-parameter}.\n+either specify @option{-Wextra -Wunused} (note that @option{-Wall} implies\n+@option{-Wunused}), or separately specify @option{-Wunused-parameter}.\n \n @item -Wuninitialized\n @opindex Wuninitialized\n@@ -3722,7 +3722,7 @@ the warnings were only enabled by the @option{-Wall} command-line option.\n @opindex Wpragmas\n Do not warn about misuses of pragmas, such as incorrect parameters,\n invalid syntax, or conflicts between pragmas.  See also\n-@samp{-Wunknown-pragmas}.\n+@option{-Wunknown-pragmas}.\n \n @item -Wstrict-aliasing\n @opindex Wstrict-aliasing\n@@ -3741,13 +3741,13 @@ This option is only active when @option{-fstrict-aliasing} is active.\n It warns about code that might break the strict aliasing rules that the\n compiler is using for optimization.\n Higher levels correspond to higher accuracy (fewer false positives).\n-Higher levels also correspond to more effort, similar to the way -O works.\n-@option{-Wstrict-aliasing} is equivalent to @option{-Wstrict-aliasing=n},\n-with n=3.\n+Higher levels also correspond to more effort, similar to the way @option{-O} \n+works.\n+@option{-Wstrict-aliasing} is equivalent to @option{-Wstrict-aliasing=3}.\n \n Level 1: Most aggressive, quick, least accurate.\n Possibly useful when higher levels\n-do not warn but -fstrict-aliasing still breaks the code, as it has very few\n+do not warn but @option{-fstrict-aliasing} still breaks the code, as it has very few\n false negatives.  However, it has many false positives.\n Warns for all pointer conversions between possibly incompatible types,\n even if never dereferenced.  Runs in the front end only.\n@@ -4255,7 +4255,7 @@ can be disabled with the @option{-Wno-jump-misses-init} option.\n Warn when a comparison between signed and unsigned values could produce\n an incorrect result when the signed value is converted to unsigned.\n This warning is also enabled by @option{-Wextra}; to get the other warnings\n-of @option{-Wextra} without this warning, use @samp{-Wextra -Wno-sign-compare}.\n+of @option{-Wextra} without this warning, use @option{-Wextra -Wno-sign-compare}.\n \n @item -Wsign-conversion\n @opindex Wsign-conversion\n@@ -4384,7 +4384,7 @@ struct s x = @{ .f = 3, .g = 4 @};\n @end smallexample\n \n This warning is included in @option{-Wextra}.  To get other @option{-Wextra}\n-warnings without this one, use @samp{-Wextra -Wno-missing-field-initializers}.\n+warnings without this one, use @option{-Wextra -Wno-missing-field-initializers}.\n \n @item -Wmissing-format-attribute\n @opindex Wmissing-format-attribute\n@@ -4490,7 +4490,7 @@ using designated initializers (@pxref{Designated Inits, , Designated\n Initializers}).\n \n This warning is included in @option{-Wextra}.  To get other\n-@option{-Wextra} warnings without this one, use @samp{-Wextra\n+@option{-Wextra} warnings without this one, use @option{-Wextra\n -Wno-override-init}.\n \n @item -Wpacked\n@@ -4989,7 +4989,7 @@ Generic structs are a bit complicated to explain.\n For C++, these are non-explicit specializations of template classes,\n or non-template classes within the above.\n Other programming languages have generics,\n-but @samp{-femit-struct-debug-detailed} does not yet implement them.\n+but @option{-femit-struct-debug-detailed} does not yet implement them.\n \n The third word specifies the source files for those\n structs for which the compiler will emit debug information.\n@@ -5005,7 +5005,7 @@ or declared in system or compiler headers.\n \n You may need to experiment to determine the best settings for your application.\n \n-The default is @samp{-femit-struct-debug-detailed=all}.\n+The default is @option{-femit-struct-debug-detailed=all}.\n \n This option works only with DWARF 2.\n \n@@ -5187,60 +5187,66 @@ Print the name and the counter upper bound for all debug counters.\n Set the internal debug counter upper bound.  @var{counter-value-list}\n is a comma-separated list of @var{name}:@var{value} pairs\n which sets the upper bound of each debug counter @var{name} to @var{value}.\n-All debug counters have the initial upper bound of @var{UINT_MAX},\n-thus dbg_cnt() returns true always unless the upper bound is set by this option.\n-e.g. With -fdbg-cnt=dce:10,tail_call:0\n-dbg_cnt(dce) will return true only for first 10 invocations\n+All debug counters have the initial upper bound of @code{UINT_MAX};\n+thus @code{dbg_cnt()} returns true always unless the upper bound\n+is set by this option.\n+For example, with @option{-fdbg-cnt=dce:10,tail_call:0},\n+@code{dbg_cnt(dce)} returns true only for first 10 invocations.\n \n @itemx -fenable-@var{kind}-@var{pass}\n @itemx -fdisable-@var{kind}-@var{pass}=@var{range-list}\n @opindex fdisable-\n @opindex fenable-\n \n-This is a set of debugging options that are used to explicitly disable/enable\n-optimization passes. For compiler users, regular options for enabling/disabling\n-passes should be used instead.\n+This is a set of options that are used to explicitly disable/enable\n+optimization passes.  These options are intended for use for debugging GCC.\n+Compiler users should use regular options for enabling/disabling\n+passes instead.\n \n-@itemize\n+@table @gcctabopt\n \n @item -fdisable-ipa-@var{pass}\n-Disable ipa pass @var{pass}. @var{pass} is the pass name.  If the same pass is\n+Disable IPA pass @var{pass}. @var{pass} is the pass name.  If the same pass is\n statically invoked in the compiler multiple times, the pass name should be\n appended with a sequential number starting from 1.\n \n @item -fdisable-rtl-@var{pass}\n-@item -fdisable-rtl-@var{pass}=@var{range-list}\n-Disable rtl pass @var{pass}.  @var{pass} is the pass name.  If the same pass is\n+@itemx -fdisable-rtl-@var{pass}=@var{range-list}\n+Disable RTL pass @var{pass}.  @var{pass} is the pass name.  If the same pass is\n statically invoked in the compiler multiple times, the pass name should be\n-appended with a sequential number starting from 1.  @var{range-list} is a comma\n-seperated list of function ranges or assembler names.  Each range is a number\n-pair seperated by a colon.  The range is inclusive in both ends.  If the range\n+appended with a sequential number starting from 1.  @var{range-list} is a \n+comma-separated list of function ranges or assembler names.  Each range is a number\n+pair separated by a colon.  The range is inclusive in both ends.  If the range\n is trivial, the number pair can be simplified as a single number.  If the\n-function's cgraph node's @var{uid} is falling within one of the specified ranges,\n+function's cgraph node's @var{uid} falls within one of the specified ranges,\n the @var{pass} is disabled for that function.  The @var{uid} is shown in the\n function header of a dump file, and the pass names can be dumped by using\n option @option{-fdump-passes}.\n \n @item -fdisable-tree-@var{pass}\n-@item -fdisable-tree-@var{pass}=@var{range-list}\n+@itemx -fdisable-tree-@var{pass}=@var{range-list}\n Disable tree pass @var{pass}.  See @option{-fdisable-rtl} for the description of\n option arguments.\n \n @item -fenable-ipa-@var{pass}\n-Enable ipa pass @var{pass}.  @var{pass} is the pass name.  If the same pass is\n+Enable IPA pass @var{pass}.  @var{pass} is the pass name.  If the same pass is\n statically invoked in the compiler multiple times, the pass name should be\n appended with a sequential number starting from 1.\n \n @item -fenable-rtl-@var{pass}\n-@item -fenable-rtl-@var{pass}=@var{range-list}\n-Enable rtl pass @var{pass}.  See @option{-fdisable-rtl} for option argument\n+@itemx -fenable-rtl-@var{pass}=@var{range-list}\n+Enable RTL pass @var{pass}.  See @option{-fdisable-rtl} for option argument\n description and examples.\n \n @item -fenable-tree-@var{pass}\n-@item -fenable-tree-@var{pass}=@var{range-list}\n+@itemx -fenable-tree-@var{pass}=@var{range-list}\n Enable tree pass @var{pass}.  See @option{-fdisable-rtl} for the description\n of option arguments.\n \n+@end table\n+\n+Here are some examples showing uses of these options.\n+\n @smallexample\n \n # disable ccp1 for all functions\n@@ -5260,8 +5266,6 @@ of option arguments.\n \n @end smallexample\n \n-@end itemize\n-\n @item -d@var{letters}\n @itemx -fdump-rtl-@var{pass}\n @opindex d\n@@ -5919,7 +5923,7 @@ dependence info.\n @opindex save-temps\n Store the usual ``temporary'' intermediate files permanently; place them\n in the current directory and name them based on the source file.  Thus,\n-compiling @file{foo.c} with @samp{-c -save-temps} would produce files\n+compiling @file{foo.c} with @option{-c -save-temps} would produce files\n @file{foo.i} and @file{foo.s}, as well as @file{foo.o}.  This creates a\n preprocessed @file{foo.i} output file even though the compiler now\n normally uses an integrated preprocessor.\n@@ -6154,7 +6158,7 @@ optimization flags are specified.\n \n Depending on the target and how GCC was configured, a slightly different\n set of optimizations may be enabled at each @option{-O} level than\n-those listed here.  You can invoke GCC with @samp{-Q --help=optimizers}\n+those listed here.  You can invoke GCC with @option{-Q --help=optimizers}\n to find out the exact set of optimizations that are enabled at each level.\n @xref{Overall Options}, for examples.\n \n@@ -8165,8 +8169,8 @@ that do not require the guarantees of these specifications.\n \n @item -fno-math-errno\n @opindex fno-math-errno\n-Do not set ERRNO after calling math functions that are executed\n-with a single instruction, e.g., sqrt.  A program that relies on\n+Do not set @code{errno} after calling math functions that are executed\n+with a single instruction, e.g., @code{sqrt}.  A program that relies on\n IEEE exceptions for math error handling may want to use this flag\n for speed while maintaining IEEE arithmetic compatibility.\n \n@@ -8476,7 +8480,7 @@ branch target registers in within any basic block.\n @opindex fstack-protector\n Emit extra code to check for buffer overflows, such as stack smashing\n attacks.  This is done by adding a guard variable to functions with\n-vulnerable objects.  This includes functions that call alloca, and\n+vulnerable objects.  This includes functions that call @code{alloca}, and\n functions with buffers larger than 8 bytes.  The guards are initialized\n when a function is entered and then checked when the function exits.\n If a guard check fails, an error message is printed and the program exits.\n@@ -8835,12 +8839,12 @@ constraints.  The default value is 0.\n @item vect-max-version-for-alignment-checks\n The maximum number of run-time checks that can be performed when\n doing loop versioning for alignment in the vectorizer.  See option\n-ftree-vect-loop-version for more information.\n+@option{-ftree-vect-loop-version} for more information.\n \n @item vect-max-version-for-alias-checks\n The maximum number of run-time checks that can be performed when\n doing loop versioning for alias in the vectorizer.  See option\n-ftree-vect-loop-version for more information.\n+@option{-ftree-vect-loop-version} for more information.\n \n @item max-iterations-to-track\n \n@@ -8921,7 +8925,7 @@ Tuning this may improve compilation speed; it has no effect on code\n generation.\n \n The default is 30% + 70% * (RAM/1GB) with an upper bound of 100% when\n-RAM >= 1GB@.  If @code{getrlimit} is available, the notion of \"RAM\" is\n+RAM >= 1GB@.  If @code{getrlimit} is available, the notion of ``RAM'' is\n the smallest of actual RAM and @code{RLIMIT_DATA} or @code{RLIMIT_AS}.  If\n GCC is not able to calculate RAM on a particular platform, the lower\n bound of 30% is used.  Setting this parameter and\n@@ -8998,9 +9002,7 @@ for interblock speculative scheduling.  The default value is 40.\n \n @item max-sched-extend-regions-iters\n The maximum number of iterations through CFG to extend regions.\n-0 - disable region extension,\n-N - do at most N iterations.\n-The default value is 0.\n+A value of 0 (the default) disables region extensions.\n \n @item max-sched-insn-conflict-delay\n The maximum conflict delay for an insn to be considered for speculative motion.\n@@ -9066,7 +9068,8 @@ duplicated when threading jumps.\n @item max-fields-for-field-sensitive\n Maximum number of fields in a structure we will treat in\n a field sensitive manner during pointer analysis.  The default is zero\n-for -O0, and -O1 and 100 for -Os, -O2, and -O3.\n+for @option{-O0} and @option{-O1},\n+and 100 for @option{-Os}, @option{-O2}, and @option{-O3}.\n \n @item prefetch-latency\n Estimate on average number of instructions that are executed before\n@@ -9151,7 +9154,7 @@ Loop invariant motion can be very expensive, both in compilation time and\n in amount of needed compile-time memory, with very large loops.  Loops\n with more basic blocks than this parameter won't have loop invariant\n motion optimization performed on them.  The default value of the\n-parameter is 1000 for -O1 and 10000 for -O2 and above.\n+parameter is 1000 for @option{-O1} and 10000 for @option{-O2} and above.\n \n @item loop-max-datarefs-for-datadeps\n Building data dapendencies is expensive for very large loops.  This\n@@ -9561,7 +9564,7 @@ libraries statically.\n @opindex symbolic\n Bind references to global symbols when building a shared object.  Warn\n about any unresolved references (unless overridden by the link editor\n-option @samp{-Xlinker -z -Xlinker defs}).  Only a few systems support\n+option @option{-Xlinker -z -Xlinker defs}).  Only a few systems support\n this option.\n \n @item -T @var{script}\n@@ -9580,25 +9583,25 @@ supply system-specific linker options that GCC does not recognize.\n If you want to pass an option that takes a separate argument, you must use\n @option{-Xlinker} twice, once for the option and once for the argument.\n For example, to pass @option{-assert definitions}, you must write\n-@samp{-Xlinker -assert -Xlinker definitions}.  It does not work to write\n+@option{-Xlinker -assert -Xlinker definitions}.  It does not work to write\n @option{-Xlinker \"-assert definitions\"}, because this passes the entire\n string as a single argument, which is not what the linker expects.\n \n When using the GNU linker, it is usually more convenient to pass\n arguments to linker options using the @option{@var{option}=@var{value}}\n syntax than as separate arguments.  For example, you can specify\n-@samp{-Xlinker -Map=output.map} rather than\n-@samp{-Xlinker -Map -Xlinker output.map}.  Other linkers may not support\n+@option{-Xlinker -Map=output.map} rather than\n+@option{-Xlinker -Map -Xlinker output.map}.  Other linkers may not support\n this syntax for command-line options.\n \n @item -Wl,@var{option}\n @opindex Wl\n Pass @var{option} as an option to the linker.  If @var{option} contains\n commas, it is split into multiple options at the commas.  You can use this\n syntax to pass an argument to the option.\n-For example, @samp{-Wl,-Map,output.map} passes @samp{-Map output.map} to the\n+For example, @option{-Wl,-Map,output.map} passes @option{-Map output.map} to the\n linker.  When using the GNU linker, you can also get the same effect with\n-@samp{-Wl,-Map=output.map}.\n+@option{-Wl,-Map=output.map}.\n \n @item -u @var{symbol}\n @opindex u\n@@ -9633,7 +9636,7 @@ If a standard system include directory, or a directory specified with\n option will be ignored.  The directory will still be searched but as a\n system directory at its normal position in the system include chain.\n This is to ensure that GCC's procedure to fix buggy system headers and\n-the ordering for the include_next directive are not inadvertently changed.\n+the ordering for the @code{include_next} directive are not inadvertently changed.\n If you really need to change the search order for system directories,\n use the @option{-nostdinc} and/or @option{-isystem} options.\n \n@@ -9949,7 +9952,8 @@ without regard to any appended suffix.\n \n @item %j@var{suffix}\n Substitutes the name of the @code{HOST_BIT_BUCKET}, if any, and if it is\n-writable, and if save-temps is off; otherwise, substitute the name\n+writable, and if @option{-save-temps} is not used; \n+otherwise, substitute the name\n of a temporary file, just like @samp{%u}.  This temporary file is not\n meant for communication between processes, but rather as a junk\n disposal mechanism.\n@@ -10167,7 +10171,7 @@ its usage:\n \n @item @code{pass-through-libs}\n The @code{pass-through-libs} spec function takes any number of arguments.  It\n-finds any @option{-l} options and any non-options ending in \".a\" (which it\n+finds any @option{-l} options and any non-options ending in @file{.a} (which it\n assumes are the names of linker input library archive files) and returns a\n result containing all the found arguments each prepended by\n @option{-plugin-opt=-pass-through=} and joined by spaces.  This list is\n@@ -10219,10 +10223,10 @@ There can be any number of ampersand-separated variables; for each the\n wild card is optional.  Useful for CPP as @samp{%@{D*&U*&A*@}}.\n \n @item %@{@code{S}:@code{X}@}\n-Substitutes @code{X}, if the @samp{-S} switch was given to GCC@.\n+Substitutes @code{X}, if the @option{-S} switch was given to GCC@.\n \n @item %@{!@code{S}:@code{X}@}\n-Substitutes @code{X}, if the @samp{-S} switch was @emph{not} given to GCC@.\n+Substitutes @code{X}, if the @option{-S} switch was @emph{not} given to GCC@.\n \n @item %@{@code{S}*:@code{X}@}\n Substitutes @code{X} if one or more switches whose names start with\n@@ -10432,7 +10436,7 @@ Emit @var{num} nops before every other generated instruction.\n \n @item -mno-soft-cmpsf\n @opindex mno-soft-cmpsf\n-For single-precision floating-point comparisons, emit an fsub instruction\n+For single-precision floating-point comparisons, emit an @code{fsub} instruction\n and test the flags.  This is faster than a software comparison, but can\n get incorrect results in the presence of NaNs, or when two different small\n numbers are compared such that their difference is calculated as zero.\n@@ -10451,7 +10455,7 @@ will generally not work.\n This option can be useful if you want to evaluate if a different stack\n offset would give you better code, but to actually use a different stack\n offset to build working programs, it is recommended to configure the\n-toolchain with the appropriate @samp{--with-stack-offset=@var{num}} option.\n+toolchain with the appropriate @option{--with-stack-offset=@var{num}} option.\n \n @item -mno-round-nearest\n @opindex mno-round-nearest\n@@ -10461,14 +10465,14 @@ truncating.  The default is @option{-mround-nearest}.\n @item -mlong-calls\n @opindex mlong-calls\n If not otherwise specified by an attribute, assume all calls might be beyond\n-the offset range of the b / bl instructions, and therefore load the\n+the offset range of the @code{b} / @code{bl} instructions, and therefore load the\n function address into a register before performing a (otherwise direct) call.\n This is the default.\n \n @item -mshort-calls\n @opindex short-calls\n If not otherwise specified by an attribute, assume all direct calls are\n-in the range of the b / bl instructions, so use these instructions\n+in the range of the @code{b} / @code{bl} instructions, so use these instructions\n for direct calls.  The default is @option{-mlong-calls}.\n \n @item -msmall16\n@@ -10548,8 +10552,9 @@ generally the case.\n @opindex m1reg-\n Specify a register to hold the constant @minus{}1, which makes loading small negative\n constants and certain bitmasks faster.\n-Allowable values for reg are r43 and r63, which specify to use that register\n-as a fixed register, and none, which means that no register is used for this\n+Allowable values for @var{reg} are @samp{r43} and @samp{r63},\n+which specify use of that register as a fixed register,\n+and @samp{none}, which means that no register is used for this\n purpose.  The default is @option{-m1reg-none}.\n \n @end table\n@@ -10925,9 +10930,9 @@ best available method for the selected processor.  The default setting is\n @item -mtls-dialect=@var{dialect}\n @opindex mtls-dialect\n Specify the dialect to use for accessing thread local storage.  Two\n-dialects are supported --- @option{gnu} and @option{gnu2}.  The\n-@option{gnu} dialect selects the original GNU scheme for supporting\n-local and global dynamic TLS models.  The @option{gnu2} dialect\n+@var{dialect}s are supported---@samp{gnu} and @samp{gnu2}.  The\n+@samp{gnu} dialect selects the original GNU scheme for supporting\n+local and global dynamic TLS models.  The @samp{gnu2} dialect\n selects the GNU descriptor scheme, which provides better performance\n for shared libraries.  The GNU descriptor scheme is compatible with\n the original scheme, but does require new assembler, linker and\n@@ -10962,7 +10967,7 @@ These options are defined for AVR implementations:\n Specify Atmel AVR instruction set architectures (ISA) or MCU type.\n \n For a complete list of @var{mcu} values that are supported by @command{avr-gcc},\n-see the compiler output when called with the @code{--help=target}\n+see the compiler output when called with the @option{--help=target}\n command line option.\n The default for this option is@tie{}@code{avr2}.\n \n@@ -11080,10 +11085,10 @@ subroutines.  Code size will be smaller.\n \n @item -mint8\n @opindex mint8\n-Assume int to be 8-bit integer.  This affects the sizes of all types: a\n-char will be 1 byte, an int will be 1 byte, a long will be 2 bytes\n-and long long will be 4 bytes.  Please note that this option does not\n-comply to the C standards, but it will provide you with smaller code\n+Assume @code{int} to be 8-bit integer.  This affects the sizes of all types: a\n+@code{char} is 1 byte, an @code{int} is 1 byte, a @code{long} is 2 bytes,\n+and @code{long long} is 4 bytes.  Please note that this option does not\n+conform to the C standards, but it results in smaller code\n size.\n \n @item -mno-interrupts\n@@ -11800,14 +11805,14 @@ Choose integer type as 32-bit wide.\n \n @item -mbit-ops\n @opindex mbit-ops\n-Generates sbit/cbit instructions for bit manipulations.\n+Generates @code{sbit}/@code{cbit} instructions for bit manipulations.\n \n @item -mdata-model=@var{model}\n @opindex mdata-model\n Choose a data model. The choices for @var{model} are @samp{near},\n @samp{far} or @samp{medium}. @samp{medium} is default.\n-However, @samp{far} is not valid when -mcr16c option is chosen as\n-CR16C architecture does not support far data model.\n+However, @samp{far} is not valid with @option{-mcr16c}, as the\n+CR16C architecture does not support the far data model.\n @end table\n \n @node Darwin Options\n@@ -11849,25 +11854,25 @@ interleaved with those specified by @option{-I} options and are\n scanned in a left-to-right order.\n \n A framework directory is a directory with frameworks in it.  A\n-framework is a directory with a @samp{\"Headers\"} and/or\n-@samp{\"PrivateHeaders\"} directory contained directly in it that ends\n-in @samp{\".framework\"}.  The name of a framework is the name of this\n-directory excluding the @samp{\".framework\"}.  Headers associated with\n+framework is a directory with a @file{Headers} and/or\n+@file{PrivateHeaders} directory contained directly in it that ends\n+in @file{.framework}.  The name of a framework is the name of this\n+directory excluding the @file{.framework}.  Headers associated with\n the framework are found in one of those two directories, with\n-@samp{\"Headers\"} being searched first.  A subframework is a framework\n-directory that is in a framework's @samp{\"Frameworks\"} directory.\n+@file{Headers} being searched first.  A subframework is a framework\n+directory that is in a framework's @file{Frameworks} directory.\n Includes of subframework headers can only appear in a header of a\n framework that contains the subframework, or in a sibling subframework\n header.  Two subframeworks are siblings if they occur in the same\n framework.  A subframework should not have the same name as a\n framework, a warning will be issued if this is violated.  Currently a\n subframework cannot have subframeworks, in the future, the mechanism\n may be extended to support this.  The standard frameworks can be found\n-in @samp{\"/System/Library/Frameworks\"} and\n-@samp{\"/Library/Frameworks\"}.  An example include looks like\n-@code{#include <Framework/header.h>}, where @samp{Framework} denotes\n-the name of the framework and header.h is found in the\n-@samp{\"PrivateHeaders\"} or @samp{\"Headers\"} directory.\n+in @file{/System/Library/Frameworks} and\n+@file{/Library/Frameworks}.  An example include looks like\n+@code{#include <Framework/header.h>}, where @file{Framework} denotes\n+the name of the framework and @file{header.h} is found in the\n+@file{PrivateHeaders} or @file{Headers} directory.\n \n @item -iframework@var{dir}\n @opindex iframework\n@@ -15004,7 +15009,7 @@ between two registers.\n \n @item -mall-opts\n @opindex mall-opts\n-Enables all the optional instructions - average, multiply, divide, bit\n+Enables all the optional instructions---average, multiply, divide, bit\n operations, leading zero, absolute difference, min/max, clip, and\n saturation.\n \n@@ -15023,7 +15028,7 @@ register as a base register, and there is a 128-byte limit to the\n \n @item -mbitops\n @opindex mbitops\n-Enables the bit operation instructions - bit test (@code{btstm}), set\n+Enables the bit operation instructions---bit test (@code{btstm}), set\n (@code{bsetm}), clear (@code{bclrm}), invert (@code{bnotm}), and\n test-and-set (@code{tas}).\n \n@@ -15206,11 +15211,11 @@ Use table lookup optimization for small signed integer divisions.\n \n @item -mxl-stack-check\n @opindex mxl-stack-check\n-This option is deprecated.  Use -fstack-check instead.\n+This option is deprecated.  Use @option{-fstack-check} instead.\n \n @item -mxl-gp-opt\n @opindex mxl-gp-opt\n-Use GP relative sdata/sbss sections.\n+Use GP-relative @code{.sdata}/@code{.sbss} sections.\n \n @item -mxl-multiply-high\n @opindex mxl-multiply-high\n@@ -15307,7 +15312,7 @@ which selects the best architecture option for the host processor.\n the processor.\n \n In processor names, a final @samp{000} can be abbreviated as @samp{k}\n-(for example, @samp{-march=r2k}).  Prefixes are optional, and\n+(for example, @option{-march=r2k}).  Prefixes are optional, and\n @samp{vr} may be written @samp{r}.\n \n Names of the form @samp{@var{n}f2_1} refer to processors with\n@@ -15323,7 +15328,7 @@ GCC defines two macros based on the value of this option.  The first\n is @samp{_MIPS_ARCH}, which gives the name of target architecture, as\n a string.  The second has the form @samp{_MIPS_ARCH_@var{foo}},\n where @var{foo} is the capitalized value of @samp{_MIPS_ARCH}@.\n-For example, @samp{-march=r2000} will set @samp{_MIPS_ARCH}\n+For example, @option{-march=r2000} will set @samp{_MIPS_ARCH}\n to @samp{\"r2000\"} and define the macro @samp{_MIPS_ARCH_R2000}.\n \n Note that the @samp{_MIPS_ARCH} macro uses the processor names given\n@@ -15346,41 +15351,41 @@ specified by @option{-march}.  By using @option{-march} and\n run on a family of processors, but optimize the code for one\n particular member of that family.\n \n-@samp{-mtune} defines the macros @samp{_MIPS_TUNE} and\n+@option{-mtune} defines the macros @samp{_MIPS_TUNE} and\n @samp{_MIPS_TUNE_@var{foo}}, which work in the same way as the\n-@samp{-march} ones described above.\n+@option{-march} ones described above.\n \n @item -mips1\n @opindex mips1\n-Equivalent to @samp{-march=mips1}.\n+Equivalent to @option{-march=mips1}.\n \n @item -mips2\n @opindex mips2\n-Equivalent to @samp{-march=mips2}.\n+Equivalent to @option{-march=mips2}.\n \n @item -mips3\n @opindex mips3\n-Equivalent to @samp{-march=mips3}.\n+Equivalent to @option{-march=mips3}.\n \n @item -mips4\n @opindex mips4\n-Equivalent to @samp{-march=mips4}.\n+Equivalent to @option{-march=mips4}.\n \n @item -mips32\n @opindex mips32\n-Equivalent to @samp{-march=mips32}.\n+Equivalent to @option{-march=mips32}.\n \n @item -mips32r2\n @opindex mips32r2\n-Equivalent to @samp{-march=mips32r2}.\n+Equivalent to @option{-march=mips32r2}.\n \n @item -mips64\n @opindex mips64\n-Equivalent to @samp{-march=mips64}.\n+Equivalent to @option{-march=mips64}.\n \n @item -mips64r2\n @opindex mips64r2\n-Equivalent to @samp{-march=mips64r2}.\n+Equivalent to @option{-march=mips64r2}.\n \n @item -mips16\n @itemx -mno-mips16\n@@ -15432,8 +15437,8 @@ For information about the O64 ABI, see\n \n GCC supports a variant of the o32 ABI in which floating-point registers\n are 64 rather than 32 bits wide.  You can select this combination with\n-@option{-mabi=32} @option{-mfp64}.  This ABI relies on the @samp{mthc1}\n-and @samp{mfhc1} instructions and is therefore only supported for\n+@option{-mabi=32} @option{-mfp64}.  This ABI relies on the @code{mthc1}\n+and @code{mfhc1} instructions and is therefore only supported for\n MIPS32R2 processors.\n \n The register assignments for arguments and return values remain the\n@@ -15478,8 +15483,8 @@ executables both smaller and quicker.\n @opindex mno-plt\n Assume (do not assume) that the static and dynamic linkers\n support PLTs and copy relocations.  This option only affects\n-@samp{-mno-shared -mabicalls}.  For the n64 ABI, this option\n-has no effect without @samp{-msym32}.\n+@option{-mno-shared -mabicalls}.  For the n64 ABI, this option\n+has no effect without @option{-msym32}.\n \n You can make @option{-mplt} the default by configuring\n GCC with @option{--with-mips-plt}.  The default is\n@@ -16633,7 +16638,7 @@ compiler versions, depending on what setting seems to produce optimal\n code for that CPU; it doesn't necessarily reflect the actual hardware's\n capabilities.  If you wish to set an individual option to a particular\n value, you may specify it after the @option{-mcpu} option, like\n-@samp{-mcpu=970 -mno-altivec}.\n+@option{-mcpu=970 -mno-altivec}.\n \n On AIX, the @option{-maltivec} and @option{-mpowerpc64} options are\n not enabled or disabled by the @option{-mcpu} option at present because\n@@ -16878,14 +16883,16 @@ Generate code for single- or double-precision floating-point operations.\n \n @item -msimple-fpu\n @opindex msimple-fpu\n-Do not generate sqrt and div instructions for hardware floating-point unit.\n+Do not generate @code{sqrt} and @code{div} instructions for hardware\n+floating-point unit.\n \n-@item -mfpu\n+@item -mfpu=@var{name}\n @opindex mfpu\n-Specify type of floating-point unit.  Valid values are @var{sp_lite}\n-(equivalent to -msingle-float -msimple-fpu), @var{dp_lite} (equivalent\n-to -mdouble-float -msimple-fpu), @var{sp_full} (equivalent to -msingle-float),\n-and @var{dp_full} (equivalent to -mdouble-float).\n+Specify type of floating-point unit.  Valid values for @var{name} are\n+@samp{sp_lite} (equivalent to @option{-msingle-float -msimple-fpu}),\n+@samp{dp_lite} (equivalent to @option{-mdouble-float -msimple-fpu}),\n+@samp{sp_full} (equivalent to @option{-msingle-float}),\n+and @samp{dp_full} (equivalent to @option{-mdouble-float}).\n \n @item -mxilinx-fpu\n @opindex mxilinx-fpu\n@@ -17053,34 +17060,58 @@ before execution begins.\n @opindex mprioritize-restricted-insns\n This option controls the priority that is assigned to\n dispatch-slot restricted instructions during the second scheduling\n-pass.  The argument @var{priority} takes the value @var{0/1/2} to assign\n-@var{no/highest/second-highest} priority to dispatch slot restricted\n+pass.  The argument @var{priority} takes the value @samp{0}, @samp{1},\n+or @samp{2} to assign no, highest, or second-highest (respectively) \n+priority to dispatch-slot restricted\n instructions.\n \n @item -msched-costly-dep=@var{dependence_type}\n @opindex msched-costly-dep\n This option controls which dependences are considered costly\n by the target during instruction scheduling.  The argument\n @var{dependence_type} takes one of the following values:\n-@var{no}: no dependence is costly,\n-@var{all}: all dependences are costly,\n-@var{true_store_to_load}: a true dependence from store to load is costly,\n-@var{store_to_load}: any dependence from store to load is costly,\n-@var{number}: any dependence for which latency >= @var{number} is costly.\n+\n+@table @asis\n+@item @samp{no}\n+No dependence is costly.\n+\n+@item @samp{all}\n+All dependences are costly.\n+\n+@item @samp{true_store_to_load}\n+A true dependence from store to load is costly.\n+\n+@item @samp{store_to_load}\n+Any dependence from store to load is costly.\n+\n+@item @var{number}\n+Any dependence for which the latency is greater than or equal to \n+@var{number} is costly.\n+@end table\n \n @item -minsert-sched-nops=@var{scheme}\n @opindex minsert-sched-nops\n-This option controls which nop insertion scheme will be used during\n+This option controls which NOP insertion scheme will be used during\n the second scheduling pass.  The argument @var{scheme} takes one of the\n following values:\n-@var{no}: Don't insert nops.\n-@var{pad}: Pad with nops any dispatch group that has vacant issue slots,\n+\n+@table @asis\n+@item @samp{no}\n+Don't insert NOPs.\n+\n+@item @samp{pad}\n+Pad with NOPs any dispatch group that has vacant issue slots,\n according to the scheduler's grouping.\n-@var{regroup_exact}: Insert nops to force costly dependent insns into\n-separate groups.  Insert exactly as many nops as needed to force an insn\n+\n+@item @samp{regroup_exact}\n+Insert NOPs to force costly dependent insns into\n+separate groups.  Insert exactly as many NOPs as needed to force an insn\n to a new group, according to the estimated processor grouping.\n-@var{number}: Insert nops to force costly dependent insns into\n-separate groups.  Insert @var{number} nops to force an insn to a new group.\n+\n+@item @var{number}\n+Insert NOPs to force costly dependent insns into\n+separate groups.  Insert @var{number} NOPs to force an insn to a new group.\n+@end table\n \n @item -mcall-sysv\n @opindex mcall-sysv\n@@ -17311,13 +17342,13 @@ generate slower code.  As of this writing, the AIX linker can do this,\n as can the GNU linker for PowerPC/64.  It is planned to add this feature\n to the GNU linker for 32-bit PowerPC systems as well.\n \n-On Darwin/PPC systems, @code{#pragma longcall} will generate ``jbsr\n-callee, L42'', plus a ``branch island'' (glue code).  The two target\n-addresses represent the callee and the ``branch island''.  The\n-Darwin/PPC linker will prefer the first address and generate a ``bl\n-callee'' if the PPC ``bl'' instruction will reach the callee directly;\n-otherwise, the linker will generate ``bl L42'' to call the ``branch\n-island''.  The ``branch island'' is appended to the body of the\n+On Darwin/PPC systems, @code{#pragma longcall} will generate @code{jbsr\n+callee, L42}, plus a @dfn{branch island} (glue code).  The two target\n+addresses represent the callee and the branch island.  The\n+Darwin/PPC linker will prefer the first address and generate a @code{bl\n+callee} if the PPC @code{bl} instruction will reach the callee directly;\n+otherwise, the linker will generate @code{bl L42} to call the branch\n+island.  The branch island is appended to the body of the\n calling function; it computes the full 32-bit address of the callee\n and jumps to it.\n \n@@ -17796,8 +17827,8 @@ size e.g.@: the linux kernel.\n \n @item -mwarn-dynamicstack\n @opindex mwarn-dynamicstack\n-Emit a warning if the function calls alloca or uses dynamically\n-sized arrays.  This is generally a bad idea with a limited stack size.\n+Emit a warning if the function calls @code{alloca} or uses dynamically-sized\n+arrays.  This is generally a bad idea with a limited stack size.\n \n @item -mstack-guard=@var{stack-guard}\n @itemx -mstack-size=@var{stack-size}\n@@ -18015,11 +18046,11 @@ floating-point comparison, therefore the default is set to\n @opindex minline-ic_invalidate\n Inline code to invalidate instruction cache entries after setting up\n nested function trampolines.\n-This option has no effect if -musermode is in effect and the selected\n-code generation option (e.g. -m4) does not allow the use of the icbi\n+This option has no effect if @option{-musermode} is in effect and the selected\n+code generation option (e.g. @option{-m4}) does not allow the use of the @code{icbi}\n instruction.\n-If the selected code generation option does not allow the use of the icbi\n-instruction, and -musermode is not in effect, the inlined code will\n+If the selected code generation option does not allow the use of the @code{icbi}\n+instruction, and @option{-musermode} is not in effect, the inlined code will\n manipulate the instruction cache address array directly with an associative\n write.  This not only requires privileged mode, but it will also\n fail if the cache line had been mapped via the TLB and has become unmapped.\n@@ -18062,7 +18093,8 @@ the Global Offset Table instead of the Procedure Linkage Table.\n \n @item -musermode\n @opindex musermode\n-Don't generate privileged mode only code; implies -mno-inline-ic_invalidate\n+Don't generate privileged mode only code.  This option\n+implies @option{-mno-inline-ic_invalidate}\n if the inlined code would not work in user mode.\n This is the default when the target is @code{sh-*-linux*}.\n \n@@ -18073,42 +18105,63 @@ Set the cost to assume for a multiply insn.\n @item -mdiv=@var{strategy}\n @opindex mdiv=@var{strategy}\n Set the division strategy to use for SHmedia code.  @var{strategy} must be\n-one of: call, call2, fp, inv, inv:minlat, inv20u, inv20l, inv:call,\n-inv:call2, inv:fp .\n-\"fp\" performs the operation in floating point.  This has a very high latency,\n+one of: \n+\n+@table @samp\n+\n+@item fp \n+Performs the operation in floating point.  This has a very high latency,\n but needs only a few instructions, so it might be a good choice if\n your code has enough easily-exploitable ILP to allow the compiler to\n schedule the floating-point instructions together with other instructions.\n Division by zero causes a floating-point exception.\n-\"inv\" uses integer operations to calculate the inverse of the divisor,\n+\n+@item inv\n+Uses integer operations to calculate the inverse of the divisor,\n and then multiplies the dividend with the inverse.  This strategy allows\n-cse and hoisting of the inverse calculation.  Division by zero calculates\n+CSE and hoisting of the inverse calculation.  Division by zero calculates\n an unspecified result, but does not trap.\n-\"inv:minlat\" is a variant of \"inv\" where if no cse / hoisting opportunities\n+\n+@item inv:minlat\n+A variant of @samp{inv} where, if no CSE or hoisting opportunities\n have been found, or if the entire operation has been hoisted to the same\n place, the last stages of the inverse calculation are intertwined with the\n final multiply to reduce the overall latency, at the expense of using a few\n more instructions, and thus offering fewer scheduling opportunities with\n other code.\n-\"call\" calls a library function that usually implements the inv:minlat\n+\n+@item call\n+Calls a library function that usually implements the @samp{inv:minlat}\n strategy.\n-This gives high code density for m5-*media-nofpu compilations.\n-\"call2\" uses a different entry point of the same library function, where it\n+This gives high code density for @code{m5-*media-nofpu} compilations.\n+\n+@item call2\n+Uses a different entry point of the same library function, where it\n assumes that a pointer to a lookup table has already been set up, which\n-exposes the pointer load to cse / code hoisting optimizations.\n-\"inv:call\", \"inv:call2\" and \"inv:fp\" all use the \"inv\" algorithm for initial\n-code generation, but if the code stays unoptimized, revert to the \"call\",\n-\"call2\", or \"fp\" strategies, respectively.  Note that the\n+exposes the pointer load to CSE and code hoisting optimizations.\n+\n+@item inv:call\n+@itemx inv:call2\n+@itemx inv:fp\n+Use the @samp{inv} algorithm for initial\n+code generation, but if the code stays unoptimized, revert to the @samp{call},\n+@samp{call2}, or @samp{fp} strategies, respectively.  Note that the\n potentially-trapping side effect of division by zero is carried by a\n separate instruction, so it is possible that all the integer instructions\n are hoisted out, but the marker for the side effect stays where it is.\n-A recombination to fp operations or a call is not possible in that case.\n-\"inv20u\" and \"inv20l\" are variants of the \"inv:minlat\" strategy.  In the case\n-that the inverse calculation was nor separated from the multiply, they speed\n-up division where the dividend fits into 20 bits (plus sign where applicable),\n+A recombination to floating-point operations or a call is not possible\n+in that case.\n+\n+@item inv20u\n+@itemx inv20l\n+Variants of the @samp{inv:minlat} strategy.  In the case\n+that the inverse calculation was not separated from the multiply, they speed\n+up division where the dividend fits into 20 bits (plus sign where applicable)\n by inserting a test to skip a number of operations in this case; this test\n-slows down the case of larger dividends.  inv20u assumes the case of a such\n-a small dividend to be unlikely, and inv20l assumes it to be likely.\n+slows down the case of larger dividends.  @samp{inv20u} assumes the case of a such\n+a small dividend to be unlikely, and @samp{inv20l} assumes it to be likely.\n+\n+@end table\n \n @item -maccumulate-outgoing-args\n @opindex maccumulate-outgoing-args\n@@ -18119,9 +18172,10 @@ needed for unwinding to avoid changing the stack frame around conditional code.\n @item -mdivsi3_libfunc=@var{name}\n @opindex mdivsi3_libfunc=@var{name}\n Set the name of the library function used for 32-bit signed division to\n-@var{name}.  This only affect the name used in the call and inv:call\n-division strategies, and the compiler will still expect the same\n-sets of input/output/clobbered registers as if this option was not present.\n+@var{name}.\n+This only affects the name used in the @samp{call} and @samp{inv:call}\n+division strategies, and the compiler still expects the same\n+sets of input/output/clobbered registers as if this option were not present.\n \n @item -mfixed-range=@var{register-range}\n @opindex mfixed-range\n@@ -18143,36 +18197,43 @@ the 32-bit ABI, the default is @option{-mno-indexed-addressing}.\n \n @item -mgettrcost=@var{number}\n @opindex mgettrcost=@var{number}\n-Set the cost assumed for the gettr instruction to @var{number}.\n+Set the cost assumed for the @code{gettr} instruction to @var{number}.\n The default is 2 if @option{-mpt-fixed} is in effect, 100 otherwise.\n \n @item -mpt-fixed\n @opindex mpt-fixed\n-Assume pt* instructions won't trap.  This will generally generate better\n-scheduled code, but is unsafe on current hardware.  The current architecture\n-definition says that ptabs and ptrel trap when the target anded with 3 is 3.\n-This has the unintentional effect of making it unsafe to schedule ptabs /\n-ptrel before a branch, or hoist it out of a loop.  For example,\n-__do_global_ctors, a part of libgcc that runs constructors at program\n+Assume @code{pt*} instructions won't trap.  This generally generates\n+better-scheduled code, but is unsafe on current hardware.\n+The current architecture\n+definition says that @code{ptabs} and @code{ptrel} trap when the target \n+anded with 3 is 3.\n+This has the unintentional effect of making it unsafe to schedule these\n+instructions before a branch, or hoist them out of a loop.  For example,\n+@code{__do_global_ctors}, a part of @file{libgcc}\n+that runs constructors at program\n startup, calls functions in a list which is delimited by @minus{}1.  With the\n--mpt-fixed option, the ptabs will be done before testing against @minus{}1.\n-That means that all the constructors will be run a bit quicker, but when\n-the loop comes to the end of the list, the program crashes because ptabs\n-loads @minus{}1 into a target register.  Since this option is unsafe for any\n+@option{-mpt-fixed} option, the @code{ptabs} is done before testing against @minus{}1.\n+That means that all the constructors run a bit more quickly, but when\n+the loop comes to the end of the list, the program crashes because @code{ptabs}\n+loads @minus{}1 into a target register.  \n+\n+Since this option is unsafe for any\n hardware implementing the current architecture specification, the default\n-is -mno-pt-fixed.  Unless the user specifies a specific cost with\n-@option{-mgettrcost}, -mno-pt-fixed also implies @option{-mgettrcost=100};\n-this deters register allocation using target registers for storing\n+is @option{-mno-pt-fixed}.  Unless specified explicitly with \n+@option{-mgettrcost}, @option{-mno-pt-fixed} also implies @option{-mgettrcost=100};\n+this deters register allocation from using target registers for storing\n ordinary integers.\n \n @item -minvalid-symbols\n @opindex minvalid-symbols\n Assume symbols might be invalid.  Ordinary function symbols generated by\n-the compiler will always be valid to load with movi/shori/ptabs or\n-movi/shori/ptrel, but with assembler and/or linker tricks it is possible\n-to generate symbols that will cause ptabs / ptrel to trap.\n+the compiler are always valid to load with\n+@code{movi}/@code{shori}/@code{ptabs} or\n+@code{movi}/@code{shori}/@code{ptrel},\n+but with assembler and/or linker tricks it is possible\n+to generate symbols that cause @code{ptabs} or @code{ptrel} to trap.\n This option is only meaningful when @option{-mno-pt-fixed} is in effect.\n-It will then prevent cross-basic-block cse, hoisting and most scheduling\n+It prevents cross-basic-block CSE, hoisting and most scheduling\n of symbol loads.  The default is @option{-mno-invalid-symbols}.\n \n @item -mbranch-cost=@var{num}\n@@ -18604,12 +18665,12 @@ relocation.  @option{-mno-error-reloc} disables the error,\n \n Instructions that initiate or test completion of DMA must not be\n reordered with respect to loads and stores of the memory that is being\n-accessed.  Users typically address this problem using the volatile\n-keyword, but that can lead to inefficient code in places where the\n-memory is known to not change.  Rather than mark the memory as volatile\n-we treat the DMA instructions as potentially effecting all memory.  With\n-@option{-munsafe-dma} users must use the volatile keyword to protect\n-memory accesses.\n+accessed.\n+With @option{-munsafe-dma} you must use the @code{volatile} keyword to protect\n+memory accesses, but that can lead to inefficient code in places where the\n+memory is known to not change.  Rather than mark the memory as volatile,\n+you can use @option{-msafe-dma} to tell the compiler to treat\n+the DMA instructions as potentially affecting all memory.  \n \n @item -mbranch-hints\n @opindex mbranch-hints\n@@ -19644,24 +19705,24 @@ always specify visibility when it is not the default; i.e., declarations\n only for use within the local DSO should @strong{always} be marked explicitly\n as hidden as so to avoid PLT indirection overheads---making this\n abundantly clear also aids readability and self-documentation of the code.\n-Note that due to ISO C++ specification requirements, operator new and\n-operator delete must always be of default visibility.\n+Note that due to ISO C++ specification requirements, @code{operator new} and\n+@code{operator delete} must always be of default visibility.\n \n Be aware that headers from outside your project, in particular system\n headers and headers from any other library you use, may not be\n expecting to be compiled with visibility other than the default.  You\n may need to explicitly say @samp{#pragma GCC visibility push(default)}\n before including any such headers.\n \n-@samp{extern} declarations are not affected by @samp{-fvisibility}, so\n-a lot of code can be recompiled with @samp{-fvisibility=hidden} with\n-no modifications.  However, this means that calls to @samp{extern}\n+@samp{extern} declarations are not affected by @option{-fvisibility}, so\n+a lot of code can be recompiled with @option{-fvisibility=hidden} with\n+no modifications.  However, this means that calls to @code{extern}\n functions with no explicit visibility will use the PLT, so it is more\n-effective to use @samp{__attribute ((visibility))} and/or\n-@samp{#pragma GCC visibility} to tell the compiler which @samp{extern}\n+effective to use @code{__attribute ((visibility))} and/or\n+@code{#pragma GCC visibility} to tell the compiler which @code{extern}\n declarations should be treated as hidden.\n \n-Note that @samp{-fvisibility} does affect C++ vague linkage\n+Note that @option{-fvisibility} does affect C++ vague linkage\n entities. This means that, for instance, an exception class that will\n be thrown between DSOs must be explicitly marked with default\n visibility so that the @samp{type_info} nodes will be unified between\n@@ -19678,7 +19739,7 @@ anyway) should use a single access of the width of the\n field's type, aligned to a natural alignment if possible.  For\n example, targets with memory-mapped peripheral registers might require\n all such accesses to be 16 bits wide; with this flag the user could\n-declare all peripheral bit-fields as ``unsigned short'' (assuming short\n+declare all peripheral bit-fields as @code{unsigned short} (assuming short\n is 16 bits on these targets) to force GCC to use 16-bit accesses\n instead of, perhaps, a more efficient 32-bit access.\n \n@@ -19867,7 +19928,7 @@ Often large projects have many header files that are included in every\n source file.  The time the compiler takes to process these header files\n over and over again can account for nearly all of the time required to\n build the project.  To make builds faster, GCC allows users to\n-`precompile' a header file; then, if builds can use the precompiled\n+@dfn{precompile} a header file; then, if builds can use the precompiled\n header file they will be much faster.\n \n To create a precompiled header file, simply compile it as you would any"}]}