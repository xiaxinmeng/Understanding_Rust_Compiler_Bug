{"sha": "d53b3432e224527d5864c4ad91beefa6a20ef0f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUzYjM0MzJlMjI0NTI3ZDU4NjRjNGFkOTFiZWVmYTZhMjBlZjBmMA==", "commit": {"author": {"name": "Balaji V. Iyer", "email": "balaji.v.iyer@intel.com", "date": "2013-11-08T19:52:27Z"}, "committer": {"name": "Balaji V. Iyer", "email": "bviyer@gcc.gnu.org", "date": "2013-11-08T19:52:27Z"}, "message": "+2013-11-08 Balaji V.\n\n+2013-11-08  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+       PR c/59039\n+       * runtime/cilk_fiber-unix.cpp: Fixed a crash in run() function\n+       when optimization is turned on.\n+\n\nFrom-SVN: r204592", "tree": {"sha": "d10556df37047caa6cde1981c1ed68d05d6327c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d10556df37047caa6cde1981c1ed68d05d6327c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d53b3432e224527d5864c4ad91beefa6a20ef0f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d53b3432e224527d5864c4ad91beefa6a20ef0f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d53b3432e224527d5864c4ad91beefa6a20ef0f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d53b3432e224527d5864c4ad91beefa6a20ef0f0/comments", "author": null, "committer": null, "parents": [{"sha": "3361dd3a6dbff9295e1844b40ddee9ba0c8b4aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3361dd3a6dbff9295e1844b40ddee9ba0c8b4aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3361dd3a6dbff9295e1844b40ddee9ba0c8b4aaa"}], "stats": {"total": 47, "additions": 33, "deletions": 14}, "files": [{"sha": "7f94aefb65f3c0baeff3d370c4d99f57ac58ec27", "filename": "libcilkrts/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53b3432e224527d5864c4ad91beefa6a20ef0f0/libcilkrts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53b3432e224527d5864c4ad91beefa6a20ef0f0/libcilkrts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FChangeLog?ref=d53b3432e224527d5864c4ad91beefa6a20ef0f0", "patch": "@@ -1,3 +1,9 @@\n+2013-11-08  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\tPR c/59039\n+\t* runtime/cilk_fiber-unix.cpp: Fixed a crash in run() function\n+\twhen optimization is turned on.\n+\n 2013-11-04  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \tPR bootstrap/58951"}, {"sha": "b0ed53ad0524afa2bfcc83517e404f4f46c9c32d", "filename": "libcilkrts/runtime/cilk_fiber-unix.cpp", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d53b3432e224527d5864c4ad91beefa6a20ef0f0/libcilkrts%2Fruntime%2Fcilk_fiber-unix.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d53b3432e224527d5864c4ad91beefa6a20ef0f0/libcilkrts%2Fruntime%2Fcilk_fiber-unix.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fruntime%2Fcilk_fiber-unix.cpp?ref=d53b3432e224527d5864c4ad91beefa6a20ef0f0", "patch": "@@ -44,24 +44,27 @@\n #include <cstdio>\n #include <cstdlib>\n \n+#include <errno.h>\n+#include <sys/mman.h>\n+#include <unistd.h>\n+\n+// You'd think that getting a defintion for alloca would be easy.  But you'd\n+// be wrong. Here's a variant on what's recommended in the autoconf doc.  I've\n+// remove the Windows portion since this is Unix-specific code.\n #if defined HAVE_ALLOCA_H\n-# include <alloca.h>\n+#   include <alloca.h>\n #elif defined __GNUC__\n-# define alloca __builtin_alloca\n+#   define alloca __builtin_alloca\n #elif defined _AIX\n-# define alloca __alloca\n+#   define alloca __alloca\n #else\n-# include <stddef.h>\n-# ifdef  __cplusplus\n+#   include <stddef.h>\n+#   ifdef  __cplusplus\n extern \"C\"\n-# endif\n+#   endif\n void *alloca (size_t);\n #endif\n \n-#include <errno.h>\n-#include <sys/mman.h>\n-#include <unistd.h>\n-\n // MAP_ANON is deprecated on Linux, but seems to be required on Mac...\n #ifndef MAP_ANONYMOUS\n #define MAP_ANONYMOUS MAP_ANON\n@@ -163,8 +166,15 @@ NORETURN cilk_fiber_sysdep::jump_to_resume_other_sysdep(cilk_fiber_sysdep* other\n     __cilkrts_bug(\"Should not get here\");\n }\n \n-#pragma GCC push_options\n-#pragma GCC optimize (\"-O0\")\n+// GCC doesn't allow us to call __builtin_longjmp in the same function that\n+// calls __builtin_setjmp, so create a new function to house the call to\n+// __builtin_longjmp\n+static void __attribute__((noinline))\n+do_cilk_longjmp(__CILK_JUMP_BUFFER jmpbuf)\n+{\n+    CILK_LONGJMP(jmpbuf);\n+}\n+\n NORETURN cilk_fiber_sysdep::run()\n {\n     // Only fibers created from a pool have a proc method to run and execute. \n@@ -201,7 +211,11 @@ NORETURN cilk_fiber_sysdep::run()\n         // switching to for any temporaries required for this run()\n         // function.\n         JMPBUF_SP(m_resume_jmpbuf) = m_stack_base - frame_size;\n-        CILK_LONGJMP(m_resume_jmpbuf);\n+\n+        // GCC doesn't allow us to call __builtin_longjmp in the same function\n+        // that calls __builtin_setjmp, so it's been moved into it's own\n+        // function that cannot be inlined.\n+        do_cilk_longjmp(m_resume_jmpbuf);\n     }\n \n     // Note: our resetting of the stack pointer is valid only if the\n@@ -228,7 +242,6 @@ NORETURN cilk_fiber_sysdep::run()\n     // User proc should never return.\n     __cilkrts_bug(\"Should not get here\");\n }\n-#pragma GCC pop_options\n \n void cilk_fiber_sysdep::make_stack(size_t stack_size)\n {"}]}