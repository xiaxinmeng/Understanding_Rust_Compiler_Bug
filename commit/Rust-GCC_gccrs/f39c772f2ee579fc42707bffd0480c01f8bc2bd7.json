{"sha": "f39c772f2ee579fc42707bffd0480c01f8bc2bd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM5Yzc3MmYyZWU1NzlmYzQyNzA3YmZmZDA0ODBjMDFmOGJjMmJkNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-22T15:25:23Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-22T15:25:23Z"}, "message": "Don't crash if array length is invalid const.\n\nFrom-SVN: r168171", "tree": {"sha": "97befc3315c32c585c8831cb83d07c1c831a7780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97befc3315c32c585c8831cb83d07c1c831a7780"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f39c772f2ee579fc42707bffd0480c01f8bc2bd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f39c772f2ee579fc42707bffd0480c01f8bc2bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f39c772f2ee579fc42707bffd0480c01f8bc2bd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f39c772f2ee579fc42707bffd0480c01f8bc2bd7/comments", "author": null, "committer": null, "parents": [{"sha": "9ed91cebef42dd20ca7f9f665d3f7b2b248a3584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed91cebef42dd20ca7f9f665d3f7b2b248a3584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed91cebef42dd20ca7f9f665d3f7b2b248a3584"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "de07a1d65f2a71e15e7c26a5a55c4c7329b05845", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f39c772f2ee579fc42707bffd0480c01f8bc2bd7/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f39c772f2ee579fc42707bffd0480c01f8bc2bd7/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=f39c772f2ee579fc42707bffd0480c01f8bc2bd7", "patch": "@@ -9095,7 +9095,11 @@ Array_index_expression::do_check_types(Gogo*)\n     this->report_error(_(\"slice end must be integer\"));\n \n   Array_type* array_type = this->array_->type()->array_type();\n-  gcc_assert(array_type != NULL);\n+  if (array_type == NULL)\n+    {\n+      gcc_assert(this->array_->type()->is_error_type());\n+      return;\n+    }\n \n   unsigned int int_bits =\n     Type::lookup_integer_type(\"int\")->integer_type()->bits();\n@@ -10936,7 +10940,14 @@ class Open_array_construction_expression : public Array_construction_expression\n tree\n Open_array_construction_expression::do_get_tree(Translate_context* context)\n {\n-  Type* element_type = this->type()->array_type()->element_type();\n+  Array_type* array_type = this->type()->array_type();\n+  if (array_type == NULL)\n+    {\n+      gcc_assert(this->type()->is_error_type());\n+      return error_mark_node;\n+    }\n+\n+  Type* element_type = array_type->element_type();\n   tree element_type_tree = element_type->get_tree(context->gogo());\n   if (element_type_tree == error_mark_node)\n     return error_mark_node;"}]}