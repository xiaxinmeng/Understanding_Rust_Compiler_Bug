{"sha": "74595dd5181813e6cca9464ec7ca04dccf029d4e", "node_id": "C_kwDOANBUbNoAKDc0NTk1ZGQ1MTgxODEzZTZjY2E5NDY0ZWM3Y2EwNGRjY2YwMjlkNGU", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:25:47Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:09Z"}, "message": "RISC-V: Add vsext C++ API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vsext_vf2-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf2_tumu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf4_tumu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vsext_vf8_tumu-3.C: New test.", "tree": {"sha": "6cf7c08c1b92fa99e004125bf589e29fe62d09b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cf7c08c1b92fa99e004125bf589e29fe62d09b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74595dd5181813e6cca9464ec7ca04dccf029d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74595dd5181813e6cca9464ec7ca04dccf029d4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74595dd5181813e6cca9464ec7ca04dccf029d4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74595dd5181813e6cca9464ec7ca04dccf029d4e/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "921f11c8cc2c5a170c405286eaf931f7b2ca8428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921f11c8cc2c5a170c405286eaf931f7b2ca8428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/921f11c8cc2c5a170c405286eaf931f7b2ca8428"}], "stats": {"total": 3798, "additions": 3798, "deletions": 0}, "files": [{"sha": "39d7824fb6f9485691682b5873813086ab238d50", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2-1.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsext_vf2(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "72e5d06f3d19507debac177f3fdbaf3463e5bcea", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2-2.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsext_vf2(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "3d7ec5ee2a94bfc07642190dca60f6a470208062", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2-3.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(op1,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsext_vf2(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "5c31d0603993cebb6e031a42c0ee233db9bdeedb", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_mu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "cc4a749d4200d8330b6a9e4081a38fd10fe989a1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_mu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "c4e6dc950d07c492c3e051082afd9ee966c16f26", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_mu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "dba677e74b83f5bc4b2cbb0e747164053e9cdde2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tu(vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tu(vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tu(vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tu(vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tu(vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tu(vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tu(vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tu(vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tu(vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tu(vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tu(vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tu(vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tu(vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tu(vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tu(vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "b2f71e22d1bb43783814dda8665e3510c3b411b1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tu(vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tu(vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tu(vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tu(vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tu(vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tu(vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tu(vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tu(vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tu(vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tu(vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tu(vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tu(vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tu(vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tu(vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tu(vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "4af72f294e07ffd088a935d3876f854c1ff9b8d1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tu(vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tu(vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tu(vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tu(vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tu(vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tu(vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tu(vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tu(vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tu(vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tu(vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tu(vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tu(vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tu(vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tu(vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tu(vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "e6369028b1c1a3a557e68589c5f9a6c5f8d2d8df", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tum-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "dadcd57fc1135187089a5a63020c7a18c45ace32", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tum-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "fa992a15dbb02142adcb55b0c44be7e7a503c8ee", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tum-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "857360f00bcb1eaf7b35f4518d5841d777d20ce6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tumu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "77c049a8968eaee88b8c6f4d1a739eac206909cc", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tumu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "bb93483b9717e802097b726214210a72b1b3273b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf2_tumu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "4c7bd607bbb76cd2833d37c89470ea85e4b91c26", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4-1.C", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,132 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf4(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "872d8b7a11de360eaf6fcd2c6ae7f598d82f9338", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4-2.C", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,132 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf4(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "a51438a54cc005799f28560d8f13f3f69596aef1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4-3.C", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,132 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf4(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "7297b0c45481d97afbbbe968a32310531057c56c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_mu-1.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_mu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_mu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_mu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_mu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_mu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_mu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_mu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_mu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_mu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "8ad4b1deb06c848d6f7bc30f517c13298bc7f0b7", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_mu-2.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_mu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_mu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_mu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_mu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_mu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_mu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_mu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_mu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_mu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "e773403a3d0750f78aae717ef3163e4db9343cfd", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_mu-3.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_mu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_mu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_mu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_mu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_mu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_mu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_mu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_mu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_mu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_mu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "ac651986404584d9c1a329c32ecc1c59b4701e0e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tu-1.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tu(vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tu(vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tu(vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tu(vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tu(vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tu(vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tu(vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tu(vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tu(vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "32f3c58c683c3c9a6405bc452549915be77e3d4f", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tu-2.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tu(vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tu(vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tu(vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tu(vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tu(vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tu(vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tu(vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tu(vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tu(vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "bb93b8085e9ca1577fbbe478edbc6d30e92fe192", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tu-3.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tu(vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tu(vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tu(vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tu(vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tu(vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tu(vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tu(vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tu(vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tu(vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "0ff0a3789a92353cbe4abf8f54aa4026387ade15", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tum-1.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tum(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tum(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tum(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tum(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tum(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tum(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tum(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tum(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tum(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "60ddee571614002f61a31c7b25eb32b6a1191ea1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tum-2.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tum(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tum(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tum(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tum(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tum(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tum(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tum(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tum(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tum(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "23dc1f65c53a716a9110688cca960960bdd68218", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tum-3.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tum-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tum(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tum(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tum(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tum(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tum(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tum(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tum(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tum(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tum(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "72641da20acca7f99d8663a20795a183faae4c2e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tumu-1.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tumu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tumu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tumu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tumu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tumu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tumu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tumu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tumu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tumu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "80a093bf9e5f1aa33c06d3866c37611a97185cf4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tumu-2.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tumu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tumu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tumu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tumu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tumu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tumu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tumu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tumu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tumu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "6ac4e9d1fc5c47130f1d592a7a8d83362fa5e213", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf4_tumu-3.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf4_tumu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint32mf2_t test___riscv_vsext_vf4_tumu(vbool64_t mask,vint32mf2_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf4_tumu(vbool32_t mask,vint32m1_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf4_tumu(vbool16_t mask,vint32m2_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf4_tumu(vbool8_t mask,vint32m4_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf4_tumu(vbool4_t mask,vint32m8_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf4_tumu(vbool64_t mask,vint64m1_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf4_tumu(vbool32_t mask,vint64m2_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf4_tumu(vbool16_t mask,vint64m4_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf4_tumu(vbool8_t mask,vint64m8_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "823c00af68f5194200c50ff8517e0ddd542bb7d0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8-1.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf8(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "349e8b6794dadcd846e4558439bd1cbbd71b9ec6", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8-2.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf8(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "3c52c429d98d80911082f7f3e6887e5a897f1307", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8-3.C", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,62 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf8(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "b39dfd2adab346dfba6756862747b93bc950bf51", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_mu-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_mu(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_mu(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_mu(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_mu(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "9009dfe1c1520c41f45514e15b55e64cae10b434", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_mu-2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_mu(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_mu(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_mu(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_mu(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "2e9e930a45e1fdd634a23e2a98b31ca0a9bdbf0c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_mu-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_mu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_mu(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_mu(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_mu(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_mu(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "8728e6b6e66275e03c02891359f037ecbb305b00", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tu-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tu(vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tu(vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tu(vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tu(vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "887293f78b11037b00b77e59785efdf6f16cf99d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tu-2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tu(vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tu(vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tu(vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tu(vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "6191e8b0fe66d5cc1a249b52856a91ef863b1eef", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tu-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tu(vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tu(vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tu(vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tu(vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "7437331c3cd90d56977204c642101a780411910d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tum-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tum(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tum(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tum(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tum(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "32d7f548a305ee95b36d249edb49bde9bd3c2e11", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tum-2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tum(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tum(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tum(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tum(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "e07af59913537bad2ada82efe3f603aff8988260", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tum-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tum-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tum(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tum(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tum(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tum(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d7ad1da7e4f62afcf463d02d739e2823a40fc12b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tumu-1.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-1.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tumu(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tumu(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tumu(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tumu(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "45321a48852ceec3764d430cbbe1dc49ba2eb7c4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tumu-2.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-2.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tumu(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tumu(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tumu(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tumu(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "8cbee9e614d0ee9807b17a7b45d63bac75fb56e1", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vsext_vf8_tumu-3.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74595dd5181813e6cca9464ec7ca04dccf029d4e/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf8_tumu-3.C?ref=74595dd5181813e6cca9464ec7ca04dccf029d4e", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint64m1_t test___riscv_vsext_vf8_tumu(vbool64_t mask,vint64m1_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf8_tumu(vbool32_t mask,vint64m2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf8_tumu(vbool16_t mask,vint64m4_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf8_tumu(vbool8_t mask,vint64m8_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf8\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}]}