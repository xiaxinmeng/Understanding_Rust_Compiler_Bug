{"sha": "3e2ae3ee285a57455d5a23bd352a68c289130186", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyYWUzZWUyODVhNTc0NTVkNWEyM2JkMzUyYTY4YzI4OTEzMDE4Ng==", "commit": {"author": {"name": "Venkataramanan Kumar", "email": "Venkataramanan.Kumar@amd.com", "date": "2020-12-05T05:42:15Z"}, "committer": {"name": "Venkataramanan Kumar", "email": "Venkataramanan.Kumar@amd.com", "date": "2020-12-05T05:49:35Z"}, "message": "X86_64: Enable support for next generation AMD Zen3 CPU.\n\n2020-12-03  Venkataramanan Kumar  <Venkataramanan.Kumar@amd.com>\n\t    Sharavan Kumar  <Shravan.Kumar@amd.com>\n\ngcc/ChangeLog:\n\n\t* common/config/i386/cpuinfo.h (get_amd_cpu) recognize znver3.\n\t* common/config/i386/i386-common.c (processor_names): Add\n\tznver3.\n\t(processor_alias_table): Add znver3 and AMDFAM19H entry.\n\t* common/config/i386/i386-cpuinfo.h (processor_types): Add\n\tAMDFAM19H.\n\t(processor_subtypes): AMDFAM19H_ZNVER3.\n\t* config.gcc (i[34567]86-*-linux* | ...): Likewise.\n\t* config/i386/driver-i386.c: (host_detect_local_cpu): Let\n\t-march=native recognize znver3 processors.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Add\n\tznver3.\n\t* config/i386/i386-options.c (m_znver3): New definition.\n\t(m_ZNVER): Include m_znver3.\n\t(processor_cost_table): Add znver3.\n\t* config/i386/i386.c (ix86_reassociation_width): Likewise.\n\t* config/i386/i386.h (TARGET_znver3): New definition.\n\t(enum processor_type): Add PROCESSOR_ZNVER3.\n\t* config/i386/i386.md (define_attr \"cpu\"): Add znver3.\n\t* config/i386/x86-tune-sched.c: (ix86_issue_rate): Likewise.\n\t(ix86_adjust_cost): Likewise.\n\t* config/i386/x86-tune.def (X86_TUNE_AVOID_256FMA_CHAINS:\n\tLikewise.\n\t* config/i386/znver1.md: Add new reservations for znver3.\n\t* doc/extend.texi: Add details about znver3.\n\t* doc/invoke.texi: Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/funcspec-56.inc: Handle new march.\n\t* g++.target/i386/mv29.C: New file.", "tree": {"sha": "4204651ca4dfc0fc778b852ce18853b9c20df143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4204651ca4dfc0fc778b852ce18853b9c20df143"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e2ae3ee285a57455d5a23bd352a68c289130186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2ae3ee285a57455d5a23bd352a68c289130186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e2ae3ee285a57455d5a23bd352a68c289130186", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2ae3ee285a57455d5a23bd352a68c289130186/comments", "author": null, "committer": null, "parents": [{"sha": "625e002396f7d0108f845bfba6a6f4f4fcadad05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625e002396f7d0108f845bfba6a6f4f4fcadad05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625e002396f7d0108f845bfba6a6f4f4fcadad05"}], "stats": {"total": 525, "additions": 397, "deletions": 128}, "files": [{"sha": "4f1ab6368074773608740169cccb089bf9e77051", "filename": "gcc/common/config/i386/cpuinfo.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -241,6 +241,23 @@ get_amd_cpu (struct __processor_model *cpu_model,\n \t  cpu_model->__cpu_subtype = AMDFAM17H_ZNVER1;\n \t}\n       break;\n+    case 0x19:\n+      cpu_model->__cpu_type = AMDFAM19H;\n+      /* AMD family 19h version 1.  */\n+      if (model <= 0x0f)\n+\t{\n+\t  cpu = \"znver3\";\n+\t  CHECK___builtin_cpu_is (\"znver3\");\n+\t  cpu_model->__cpu_subtype = AMDFAM19H_ZNVER3;\n+\t}\n+      else if (has_cpu_feature (cpu_model, cpu_features2,\n+\t\t\t\tFEATURE_VAES))\n+\t{\n+\t  cpu = \"znver3\";\n+\t  CHECK___builtin_cpu_is (\"znver3\");\n+\t  cpu_model->__cpu_subtype = AMDFAM19H_ZNVER3;\n+\t}\n+      break;\n     default:\n       break;\n     }"}, {"sha": "2a1d31f3a4b72ac0e3219a179be49cd8b7051061", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -1762,7 +1762,8 @@ const char *const processor_names[] =\n   \"btver1\",\n   \"btver2\",\n   \"znver1\",\n-  \"znver2\"\n+  \"znver2\",\n+  \"znver3\"\n };\n \n /* Guarantee that the array is aligned with enum processor_type.  */\n@@ -2004,6 +2005,17 @@ const pta processor_alias_table[] =\n       | PTA_SHA | PTA_LZCNT | PTA_POPCNT | PTA_CLWB | PTA_RDPID\n       | PTA_WBNOINVD,\n     M_CPU_SUBTYPE (AMDFAM17H_ZNVER2), P_PROC_AVX2},\n+  {\"znver3\", PROCESSOR_ZNVER3, CPU_ZNVER3,\n+    PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n+      | PTA_SSE4A | PTA_CX16 | PTA_ABM | PTA_SSSE3 | PTA_SSE4_1\n+      | PTA_SSE4_2 | PTA_AES | PTA_PCLMUL | PTA_AVX | PTA_AVX2\n+      | PTA_BMI | PTA_BMI2 | PTA_F16C | PTA_FMA | PTA_PRFCHW\n+      | PTA_FXSR | PTA_XSAVE | PTA_XSAVEOPT | PTA_FSGSBASE\n+      | PTA_RDRND | PTA_MOVBE | PTA_MWAITX | PTA_ADX | PTA_RDSEED\n+      | PTA_CLZERO | PTA_CLFLUSHOPT | PTA_XSAVEC | PTA_XSAVES\n+      | PTA_SHA | PTA_LZCNT | PTA_POPCNT | PTA_CLWB | PTA_RDPID\n+      | PTA_WBNOINVD | PTA_VAES | PTA_VPCLMULQDQ | PTA_PKU,\n+    M_CPU_SUBTYPE (AMDFAM19H_ZNVER3), P_PROC_AVX2},\n   {\"btver1\", PROCESSOR_BTVER1, CPU_GENERIC,\n     PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n       | PTA_SSSE3 | PTA_SSE4A | PTA_ABM | PTA_CX16 | PTA_PRFCHW\n@@ -2030,6 +2042,8 @@ const pta processor_alias_table[] =\n     M_CPU_TYPE (AMDFAM15H), P_NONE},\n   {\"amdfam17h\", PROCESSOR_GENERIC, CPU_GENERIC, 0,\n     M_CPU_TYPE (AMDFAM17H), P_NONE},\n+  {\"amdfam19h\", PROCESSOR_GENERIC, CPU_GENERIC, 0,\n+    M_CPU_TYPE (AMDFAM19H), P_NONE},\n   {\"shanghai\", PROCESSOR_GENERIC, CPU_GENERIC, 0,\n     M_CPU_TYPE (AMDFAM10H_SHANGHAI), P_NONE},\n   {\"istanbul\", PROCESSOR_GENERIC, CPU_GENERIC, 0,"}, {"sha": "849e95a4d28821381cc0f4dca0225c1d3ef15dea", "filename": "gcc/common/config/i386/i386-cpuinfo.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -55,6 +55,7 @@ enum processor_types\n   INTEL_GOLDMONT,\n   INTEL_GOLDMONT_PLUS,\n   INTEL_TREMONT,\n+  AMDFAM19H,\n   CPU_TYPE_MAX,\n   BUILTIN_CPU_TYPE_MAX = CPU_TYPE_MAX\n };\n@@ -86,6 +87,7 @@ enum processor_subtypes\n   INTEL_COREI7_COOPERLAKE,\n   INTEL_COREI7_SAPPHIRERAPIDS,\n   INTEL_COREI7_ALDERLAKE,\n+  AMDFAM19H_ZNVER3,\n   CPU_SUBTYPE_MAX\n };\n "}, {"sha": "9c7604481f150dbf472dbc4d37c67fe2da4f5a74", "filename": "gcc/config.gcc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -668,7 +668,7 @@ c7 esther\"\n # 64-bit x86 processors supported by --with-arch=.  Each processor\n # MUST be separated by exactly one space.\n x86_64_archs=\"amdfam10 athlon64 athlon64-sse3 barcelona bdver1 bdver2 \\\n-bdver3 bdver4 znver1 znver2 btver1 btver2 k8 k8-sse3 opteron \\\n+bdver3 bdver4 znver1 znver2 znver3 btver1 btver2 k8 k8-sse3 opteron \\\n opteron-sse3 nocona core2 corei7 corei7-avx core-avx-i core-avx2 atom \\\n slm nehalem westmere sandybridge ivybridge haswell broadwell bonnell \\\n silvermont knl knm skylake-avx512 cannonlake icelake-client icelake-server \\\n@@ -3678,6 +3678,10 @@ case ${target} in\n \tarch=znver2\n \tcpu=znver2\n \t;;\n+      znver3-*)\n+\tarch=znver3\n+\tcpu=znver3\n+\t;;\n       bdver4-*)\n         arch=bdver4\n         cpu=bdver4\n@@ -3799,6 +3803,10 @@ case ${target} in\n \tarch=znver2\n \tcpu=znver2\n \t;;\n+      znver3-*)\n+\tarch=znver3\n+\tcpu=znver3\n+\t;;\n       bdver4-*)\n         arch=bdver4\n         cpu=bdver4"}, {"sha": "2bfa037dd8bb0a1383cda7d50bae89bd1e51720b", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -455,6 +455,8 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \tprocessor = PROCESSOR_GEODE;\n       else if (has_feature (FEATURE_MOVBE) && family == 22)\n \tprocessor = PROCESSOR_BTVER2;\n+      else if (has_feature (FEATURE_VAES))\n+\tprocessor = PROCESSOR_ZNVER3;\n       else if (has_feature (FEATURE_CLWB))\n \tprocessor = PROCESSOR_ZNVER2;\n       else if (has_feature (FEATURE_CLZERO))\n@@ -753,6 +755,9 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n     case PROCESSOR_ZNVER2:\n       cpu = \"znver2\";\n       break;\n+    case PROCESSOR_ZNVER3:\n+      cpu = \"znver3\";\n+      break;\n     case PROCESSOR_BTVER1:\n       cpu = \"btver1\";\n       break;"}, {"sha": "6d690e01c3a689314c6e016b99ecbcff3b0a518f", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -128,6 +128,10 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       def_or_undef (parse_in, \"__znver2\");\n       def_or_undef (parse_in, \"__znver2__\");\n       break;\n+    case PROCESSOR_ZNVER3:\n+      def_or_undef (parse_in, \"__znver3\");\n+      def_or_undef (parse_in, \"__znver3__\");\n+      break;\n     case PROCESSOR_BTVER1:\n       def_or_undef (parse_in, \"__btver1\");\n       def_or_undef (parse_in, \"__btver1__\");\n@@ -315,6 +319,9 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_ZNVER2:\n       def_or_undef (parse_in, \"__tune_znver2__\");\n       break;\n+    case PROCESSOR_ZNVER3:\n+      def_or_undef (parse_in, \"__tune_znver3__\");\n+      break;\n     case PROCESSOR_BTVER1:\n       def_or_undef (parse_in, \"__tune_btver1__\");\n       break;"}, {"sha": "40714c8ad3b4090d9ea4c3d26aa5a22daea1efb4", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -147,11 +147,12 @@ along with GCC; see the file COPYING3.  If not see\n #define m_BDVER4 (HOST_WIDE_INT_1U<<PROCESSOR_BDVER4)\n #define m_ZNVER1 (HOST_WIDE_INT_1U<<PROCESSOR_ZNVER1)\n #define m_ZNVER2 (HOST_WIDE_INT_1U<<PROCESSOR_ZNVER2)\n+#define m_ZNVER3 (HOST_WIDE_INT_1U<<PROCESSOR_ZNVER3)\n #define m_BTVER1 (HOST_WIDE_INT_1U<<PROCESSOR_BTVER1)\n #define m_BTVER2 (HOST_WIDE_INT_1U<<PROCESSOR_BTVER2)\n #define m_BDVER\t(m_BDVER1 | m_BDVER2 | m_BDVER3 | m_BDVER4)\n #define m_BTVER (m_BTVER1 | m_BTVER2)\n-#define m_ZNVER\t(m_ZNVER1 | m_ZNVER2)\n+#define m_ZNVER\t(m_ZNVER1 | m_ZNVER2 | m_ZNVER3)\n #define m_AMD_MULTIPLE (m_ATHLON_K8 | m_AMDFAM10 | m_BDVER | m_BTVER \\\n \t\t\t| m_ZNVER)\n \n@@ -745,6 +746,7 @@ static const struct processor_costs *processor_cost_table[] =\n   &btver1_cost,\n   &btver2_cost,\n   &znver1_cost,\n+  &znver2_cost,\n   &znver2_cost\n };\n "}, {"sha": "3a57710dc82f1e66841e571d1b73d2b8cd3d7a42", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -21976,8 +21976,9 @@ ix86_reassociation_width (unsigned int op, machine_mode mode)\n \n       /* Integer vector instructions execute in FP unit\n \t and can execute 3 additions and one multiplication per cycle.  */\n-      if ((ix86_tune == PROCESSOR_ZNVER1 || ix86_tune == PROCESSOR_ZNVER2)\n-\t   && INTEGRAL_MODE_P (mode) && op != PLUS && op != MINUS)\n+      if ((ix86_tune == PROCESSOR_ZNVER1 || ix86_tune == PROCESSOR_ZNVER2\n+\t   || ix86_tune == PROCESSOR_ZNVER3)\n+   \t  && INTEGRAL_MODE_P (mode) && op != PLUS && op != MINUS)\n \treturn 1;\n \n       /* Account for targets that splits wide vectors into multiple parts.  */"}, {"sha": "5680fdca905317876efc4d6f5ce80ea7c22f4736", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -484,6 +484,7 @@ extern const struct processor_costs ix86_size_cost;\n #define TARGET_BTVER2 (ix86_tune == PROCESSOR_BTVER2)\n #define TARGET_ZNVER1 (ix86_tune == PROCESSOR_ZNVER1)\n #define TARGET_ZNVER2 (ix86_tune == PROCESSOR_ZNVER2)\n+#define TARGET_ZNVER3 (ix86_tune == PROCESSOR_ZNVER3)\n \n /* Feature tests against the various tunings.  */\n enum ix86_tune_indices {\n@@ -2397,6 +2398,7 @@ enum processor_type\n   PROCESSOR_BTVER2,\n   PROCESSOR_ZNVER1,\n   PROCESSOR_ZNVER2,\n+  PROCESSOR_ZNVER3,\n   PROCESSOR_max\n };\n "}, {"sha": "21f0044179f399bf8c473114450886ead9ee0467", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -458,7 +458,7 @@\n ;; Processor type.\n (define_attr \"cpu\" \"none,pentium,pentiumpro,geode,k6,athlon,k8,core2,nehalem,\n \t\t    atom,slm,glm,haswell,generic,amdfam10,bdver1,bdver2,bdver3,\n-\t\t    bdver4,btver2,znver1,znver2\"\n+\t\t    bdver4,btver2,znver1,znver2,znver3\"\n   (const (symbol_ref \"ix86_schedule\")))\n \n ;; A basic instruction type.  Refinements due to arguments to be"}, {"sha": "404b5b101f81f04beef0393481155aaadf02234e", "filename": "gcc/config/i386/x86-tune-sched.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fx86-tune-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fx86-tune-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-sched.c?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -66,6 +66,7 @@ ix86_issue_rate (void)\n     case PROCESSOR_BDVER4:\n     case PROCESSOR_ZNVER1:\n     case PROCESSOR_ZNVER2:\n+    case PROCESSOR_ZNVER3:\n     case PROCESSOR_CORE2:\n     case PROCESSOR_NEHALEM:\n     case PROCESSOR_SANDYBRIDGE:\n@@ -396,6 +397,7 @@ ix86_adjust_cost (rtx_insn *insn, int dep_type, rtx_insn *dep_insn, int cost,\n \n     case PROCESSOR_ZNVER1:\n     case PROCESSOR_ZNVER2:\n+    case PROCESSOR_ZNVER3:\n       /* Stack engine allows to execute push&pop instructions in parall.  */\n       if ((insn_type == TYPE_PUSH || insn_type == TYPE_POP)\n \t  && (dep_insn_type == TYPE_PUSH || dep_insn_type == TYPE_POP))"}, {"sha": "ed4d74cecd1207ee751d25f81bd990b444f40c7b", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -444,7 +444,7 @@ DEF_TUNE (X86_TUNE_AVOID_128FMA_CHAINS, \"avoid_fma_chains\", m_ZNVER)\n \n /* X86_TUNE_AVOID_256FMA_CHAINS: Avoid creating loops with tight 256bit or\n    smaller FMA chain.  */\n-DEF_TUNE (X86_TUNE_AVOID_256FMA_CHAINS, \"avoid_fma256_chains\", m_ZNVER2)\n+DEF_TUNE (X86_TUNE_AVOID_256FMA_CHAINS, \"avoid_fma256_chains\", m_ZNVER2 | m_ZNVER3)\n \n /*****************************************************************************/\n /* AVX instruction selection tuning (some of SSE flags affects AVX, too)     */"}, {"sha": "b0edfab084f51f68bdbdefa7cd71e25cfaa64b94", "filename": "gcc/config/i386/znver1.md", "status": "modified", "additions": 232, "deletions": 121, "changes": 353, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fznver1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fconfig%2Fi386%2Fznver1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fznver1.md?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -21,7 +21,7 @@\n (define_attr \"znver1_decode\" \"direct,vector,double\"\n   (const_string \"direct\"))\n \n-;; AMD znver1 and znver2 Scheduling\n+;; AMD znver1, znver2 and znver3 Scheduling\n ;; Modeling automatons for zen decoders, integer execution pipes,\n ;; AGU pipes and floating point execution units.\n (define_automaton \"znver1, znver1_ieu, znver1_fp, znver1_agu\")\n@@ -52,7 +52,7 @@\n (define_cpu_unit \"znver1-ieu3\" \"znver1_ieu\")\n (define_reservation \"znver1-ieu\" \"znver1-ieu0|znver1-ieu1|znver1-ieu2|znver1-ieu3\")\n \n-;; 2 AGU pipes in znver1 and 3 AGU pipes in znver2\n+;; 2 AGU pipes in znver1 and 3 AGU pipes in znver2 and znver3\n ;; According to CPU diagram last AGU unit is used only for stores.\n (define_cpu_unit \"znver1-agu0\" \"znver1_agu\")\n (define_cpu_unit \"znver1-agu1\" \"znver1_agu\")\n@@ -63,7 +63,7 @@\n ;; Load is 4 cycles. We do not model reservation of load unit.\n ;;(define_reservation \"znver1-load\" \"znver1-agu-reserve, nothing, nothing, nothing\")\n (define_reservation \"znver1-load\" \"znver1-agu-reserve\")\n-;; Store operations differs between znver1 and znver2 because extra AGU\n+;; Store operations differs between znver1, znver2 and znver3 because extra AGU\n ;; was added.\n (define_reservation \"znver1-store\" \"znver1-agu-reserve\")\n (define_reservation \"znver2-store\" \"znver2-store-agu-reserve\")\n@@ -77,6 +77,7 @@\n (define_reservation \"znver2-ivector\" \"znver1-ieu0+znver1-ieu1\n \t\t\t\t      +znver1-ieu2+znver1-ieu3\n \t\t\t\t      +znver1-agu0+znver1-agu1+znver2-agu2\")\n+\n ;; Floating point unit 4 FP pipes.\n (define_cpu_unit \"znver1-fp0\" \"znver1_fp\")\n (define_cpu_unit \"znver1-fp1\" \"znver1_fp\")\n@@ -99,7 +100,7 @@\n \t\t\t \"znver1-double,znver1-store,znver1-ieu0|znver1-ieu3\")\n \n (define_insn_reservation \"znver2_call\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (eq_attr \"type\" \"call,callv\"))\n \t\t\t \"znver1-double,znver2-store,znver1-ieu0|znver1-ieu3\")\n \n@@ -110,24 +111,24 @@\n \t\t\t\t   (eq_attr \"memory\" \"store\")))\n \t\t\t \"znver1-direct,znver1-store\")\n (define_insn_reservation \"znver2_push\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"push\")\n \t\t\t\t   (eq_attr \"memory\" \"store\")))\n-\t\t\t \"znver1-direct,znver1-store\")\n+\t\t\t \"znver1-direct,znver2-store\")\n \n (define_insn_reservation \"znver1_push_load\" 4\n \t\t\t (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t      (and (eq_attr \"type\" \"push\")\n \t\t\t\t   (eq_attr \"memory\" \"both\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-store\")\n (define_insn_reservation \"znver2_push_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"push\")\n \t\t\t\t   (eq_attr \"memory\" \"both\")))\n \t\t\t \"znver1-direct,znver1-load,znver2-store\")\n \n (define_insn_reservation \"znver1_pop\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"pop\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load\")\n@@ -138,7 +139,7 @@\n \t\t\t\t   (eq_attr \"memory\" \"both\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-store\")\n (define_insn_reservation \"znver2_pop_mem\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"pop\")\n \t\t\t\t   (eq_attr \"memory\" \"both\")))\n \t\t\t \"znver1-direct,znver1-load,znver2-store\")\n@@ -149,21 +150,21 @@\n \t\t\t      (eq_attr \"type\" \"leave\"))\n \t\t\t \"znver1-double,znver1-ieu, znver1-store\")\n (define_insn_reservation \"znver2_leave\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (eq_attr \"type\" \"leave\"))\n \t\t\t \"znver1-double,znver1-ieu, znver2-store\")\n \n ;; Integer Instructions or General instructions\n ;; Multiplications\n ;; Reg operands\n (define_insn_reservation \"znver1_imul\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-ieu1\")\n \n (define_insn_reservation \"znver1_imul_mem\" 7\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"imul\")\n \t\t\t\t   (eq_attr \"memory\" \"!none\")))\n \t\t\t \"znver1-direct,znver1-load, znver1-ieu1\")\n@@ -227,6 +228,62 @@\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"znver1-direct,znver1-load,znver1-ieu2*12\")\n \n+(define_insn_reservation \"znver3_idiv_DI\" 18\n+\t\t\t (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"DI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"znver1-double,znver1-ieu2*18\")\n+\n+(define_insn_reservation \"znver3_idiv_SI\" 12\n+\t\t\t (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"SI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"znver1-double,znver1-ieu2*12\")\n+\n+(define_insn_reservation \"znver3_idiv_HI\" 10\n+\t\t\t (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"HI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"znver1-double,znver1-ieu2*10\")\n+\n+(define_insn_reservation \"znver3_idiv_QI\" 9\n+\t\t\t (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (and (eq_attr \"mode\" \"QI\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"znver1-direct,znver1-ieu2*9\")\n+\n+(define_insn_reservation \"znver3_idiv_mem_DI\" 22\n+                         (and (eq_attr \"cpu\" \"znver3\")\n+                              (and (eq_attr \"type\" \"idiv\")\n+                                   (and (eq_attr \"mode\" \"DI\")\n+                                        (eq_attr \"memory\" \"load\"))))\n+                         \"znver1-double,znver1-load,znver1-ieu2*22\")\n+\n+(define_insn_reservation \"znver3_idiv_mem_SI\" 16\n+                         (and (eq_attr \"cpu\" \"znver3\")\n+                              (and (eq_attr \"type\" \"idiv\")\n+                                   (and (eq_attr \"mode\" \"SI\")\n+                                        (eq_attr \"memory\" \"load\"))))\n+                         \"znver1-double,znver1-load,znver1-ieu2*16\")\n+\n+(define_insn_reservation \"znver3_idiv_mem_HI\" 14\n+                         (and (eq_attr \"cpu\" \"znver3\")\n+                              (and (eq_attr \"type\" \"idiv\")\n+                                   (and (eq_attr \"mode\" \"HI\")\n+                                        (eq_attr \"memory\" \"load\"))))\n+                         \"znver1-double,znver1-load,znver1-ieu2*10\")\n+\n+(define_insn_reservation \"znver3_idiv_mem_QI\" 13\n+                         (and (eq_attr \"cpu\" \"znver3\")\n+                              (and (eq_attr \"type\" \"idiv\")\n+                                   (and (eq_attr \"mode\" \"QI\")\n+                                        (eq_attr \"memory\" \"load\"))))\n+                         \"znver1-direct,znver1-load,znver1-ieu2*9\")\n+\n ;; STR ISHIFT which are micro coded.\n ;; Fix me: Latency need to be rechecked.\n (define_insn_reservation \"znver1_str_ishift\" 6\n@@ -236,15 +293,16 @@\n \t\t\t \"znver1-vector,znver1-ivector\")\n \n (define_insn_reservation \"znver2_str_ishift\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"ishift\")\n \t\t\t\t   (eq_attr \"memory\" \"both,store\")))\n \t\t\t \"znver1-vector,znver1-ivector\")\n (define_insn_reservation \"znver2_str_istr\" 19\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"str\")\n \t\t\t\t   (eq_attr \"memory\" \"both,store\")))\n \t\t\t \"znver1-vector,znver1-ivector\")\n+\n ;; MOV - integer moves\n (define_insn_reservation \"znver1_load_imov_double\" 2\n \t\t\t (and (eq_attr \"cpu\" \"znver1\")\n@@ -254,14 +312,14 @@\n \t\t\t \"znver1-double,znver1-ieu|znver1-ieu\")\n \n (define_insn_reservation \"znver2_load_imov_double\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"double\")\n \t\t\t\t   (and (eq_attr \"type\" \"imovx\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"znver1-double,znver1-ieu|znver1-ieu\")\n \n (define_insn_reservation \"znver1_load_imov_direct\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"imov,imovx\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-ieu\")\n@@ -274,7 +332,7 @@\n \t\t\t \"znver1-double,znver1-ieu|znver1-ieu,znver1-store\")\n \n (define_insn_reservation \"znver2_load_imov_double_store\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"double\")\n \t\t\t\t   (and (eq_attr \"type\" \"imovx\")\n \t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n@@ -287,7 +345,7 @@\n \t\t\t\t   \"znver1-direct,znver1-ieu,znver1-store\")\n \n (define_insn_reservation \"znver2_load_imov_direct_store\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"imov,imovx\")\n \t\t\t\t   (eq_attr \"memory\" \"store\")))\n \t\t\t\t   \"znver1-direct,znver1-ieu,znver2-store\")\n@@ -300,28 +358,28 @@\n \t\t\t \"znver1-double,znver1-load,znver1-ieu|znver1-ieu\")\n \n (define_insn_reservation \"znver2_load_imov_double_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"double\")\n \t\t\t\t   (and (eq_attr \"type\" \"imovx\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"znver1-double,znver1-load,znver1-ieu|znver1-ieu\")\n \n (define_insn_reservation \"znver1_load_imov_direct_load\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"imov,imovx\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load\")\n \n ;; INTEGER/GENERAL instructions\n ;; register/imm operands only: ALU, ICMP, NEG, NOT, ROTATE, ISHIFT, TEST\n (define_insn_reservation \"znver1_insn\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"alu,icmp,negnot,rotate,rotate1,ishift,ishift1,test,setcc,incdec,icmov\")\n \t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n \t\t\t \"znver1-direct,znver1-ieu\")\n \n (define_insn_reservation \"znver1_insn_load\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"alu,icmp,negnot,rotate,rotate1,ishift,ishift1,test,setcc,incdec,icmov\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-ieu\")\n@@ -333,7 +391,7 @@\n \t\t\t \"znver1-direct,znver1-ieu,znver1-store\")\n \n (define_insn_reservation \"znver2_insn_store\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"alu,icmp,negnot,rotate,rotate1,ishift1,test,setcc,incdec\")\n \t\t\t\t   (eq_attr \"memory\" \"store\")))\n \t\t\t \"znver1-direct,znver1-ieu,znver2-store\")\n@@ -345,7 +403,7 @@\n \t\t\t \"znver1-direct,znver1-load,znver1-ieu,znver1-store\")\n \n (define_insn_reservation \"znver2_insn_both\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"alu,icmp,negnot,rotate,rotate1,ishift1,test,setcc,incdec\")\n \t\t\t\t   (eq_attr \"memory\" \"both\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-ieu,znver2-store\")\n@@ -357,7 +415,7 @@\n \t\t\t \"znver1-vector,znver1-ivector\")\n \n (define_insn_reservation \"znver2_ieu_vector\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (eq_attr \"type\" \"other,str,multi\"))\n \t\t\t \"znver1-vector,znver2-ivector\")\n \n@@ -370,67 +428,67 @@\n \t\t\t \"znver1-vector,znver1-ivector\")\n \n (define_insn_reservation \"znver2_alu1_vector\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"vector\")\n \t\t\t\t   (and (eq_attr \"type\" \"alu1\")\n \t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n \t\t\t \"znver1-vector,znver2-ivector\")\n \n (define_insn_reservation \"znver1_alu1_double\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"double\")\n \t\t\t\t   (and (eq_attr \"type\" \"alu1\")\n \t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n \t\t\t \"znver1-double,znver1-ieu\")\n \n (define_insn_reservation \"znver1_alu1_direct\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"direct\")\n \t\t\t\t   (and (eq_attr \"type\" \"alu1\")\n \t\t\t\t\t(eq_attr \"memory\" \"none,unknown\"))))\n \t\t\t \"znver1-direct,znver1-ieu\")\n \n ;; Branches : Fix me need to model conditional branches.\n (define_insn_reservation \"znver1_branch\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"ibr\")\n-\t\t\t\t   (eq_attr \"memory\" \"none\")))\n+\t\t\t\t\t(eq_attr \"memory\" \"none\")))\n \t\t\t  \"znver1-direct\")\n \n ;; Indirect branches check latencies.\n (define_insn_reservation \"znver1_indirect_branch_mem\" 6\n \t\t\t (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t      (and (eq_attr \"type\" \"ibr\")\n-\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t\t\t(eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-vector,znver1-ivector\")\n \n (define_insn_reservation \"znver2_indirect_branch_mem\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"ibr\")\n-\t\t\t\t   (eq_attr \"memory\" \"load\")))\n+\t\t\t\t\t(eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-vector,znver2-ivector\")\n \n ;; LEA executes in ALU units with 1 cycle latency.\n (define_insn_reservation \"znver1_lea\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (eq_attr \"type\" \"lea\"))\n \t\t\t \"znver1-direct,znver1-ieu\")\n \n ;; Other integer instrucions\n (define_insn_reservation \"znver1_idirect\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"unit\" \"integer,unknown\")\n \t\t\t\t   (eq_attr \"memory\" \"none,unknown\")))\n \t\t\t \"znver1-direct,znver1-ieu\")\n \n ;;  Floating point\n (define_insn_reservation \"znver1_fp_cmov\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (eq_attr \"type\" \"fcmov\"))\n \t\t\t \"znver1-vector,znver1-fvector\")\n \n (define_insn_reservation \"znver1_fp_mov_direct_load\" 8 \n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"direct\")\n \t\t\t\t   (and (eq_attr \"type\" \"fmov\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n@@ -443,41 +501,34 @@\n \t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n \t\t\t \"znver1-direct,znver1-fp2|znver1-fp3,znver1-store\")\n (define_insn_reservation \"znver2_fp_mov_direct_store\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"direct\")\n \t\t\t\t   (and (eq_attr \"type\" \"fmov\")\n \t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n \t\t\t \"znver1-direct,znver1-fp2|znver1-fp3,znver2-store\")\n \n (define_insn_reservation \"znver1_fp_mov_double\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"double\")\n \t\t\t\t   (and (eq_attr \"type\" \"fmov\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n \t\t\t \"znver1-double,znver1-fp3\")\n \n (define_insn_reservation \"znver1_fp_mov_double_load\" 12\n-\t\t\t (and (eq_attr \"cpu\" \"znver1\")\n-\t\t\t      (and (eq_attr \"znver1_decode\" \"double\")\n-\t\t\t\t   (and (eq_attr \"type\" \"fmov\")\n-\t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n-\t\t\t \"znver1-double,znver1-load,znver1-fp3\")\n-\n-(define_insn_reservation \"znver2_fp_mov_double_load\" 12\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"double\")\n \t\t\t\t   (and (eq_attr \"type\" \"fmov\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"znver1-double,znver1-load,znver1-fp3\")\n \n (define_insn_reservation \"znver1_fp_mov_direct\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (eq_attr \"type\" \"fmov\"))\n \t\t\t \"znver1-direct,znver1-fp3\")\n \n ;; TODO: AGU?\n (define_insn_reservation \"znver1_fp_spc_direct\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"fpspc\")\n \t\t\t\t   (eq_attr \"memory\" \"store\")))\n \t\t\t \"znver1-direct,znver1-fp3,znver1-fp2\")\n@@ -488,59 +539,59 @@\n \t\t\t\t   (eq_attr \"type\" \"fpspc,mmxcvt,sselog1,ssemul,ssemov\")))\n \t\t\t \"znver1-vector,znver1-fvector\")\n (define_insn_reservation \"znver2_fp_insn_vector\" 6\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"znver1_decode\" \"vector\")\n \t\t\t\t   (eq_attr \"type\" \"fpspc,mmxcvt,sselog1,ssemul,ssemov\")))\n \t\t\t \"znver1-vector,znver2-fvector\")\n \n ;; FABS\n (define_insn_reservation \"znver1_fp_fsgn\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (eq_attr \"type\" \"fsgn\"))\n \t\t\t \"znver1-direct,znver1-fp3\")\n \n (define_insn_reservation \"znver1_fp_fcmp\" 2\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"znver1_decode\" \"double\")\n \t\t\t\t\t(eq_attr \"type\" \"fcmp\"))))\n \t\t\t \"znver1-double,znver1-fp0,znver1-fp2\")\n \n (define_insn_reservation \"znver1_fp_fcmp_load\" 9\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"memory\" \"none\")\n \t\t\t\t   (and (eq_attr \"znver1_decode\" \"double\")\n \t\t\t\t\t(eq_attr \"type\" \"fcmp\"))))\n \t\t\t \"znver1-double,znver1-load, znver1-fp0,znver1-fp2\")\n \n ;;FADD FSUB FMUL\n (define_insn_reservation \"znver1_fp_op_mul\" 5\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"fop,fmul\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp0*5\")\n \n (define_insn_reservation \"znver1_fp_op_mul_load\" 12 \n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"fop,fmul\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp0*5\")\n \n (define_insn_reservation \"znver1_fp_op_imul_load\" 16\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"fop,fmul\")\n \t\t\t\t   (and (eq_attr \"fp_int_src\" \"true\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t\"znver1-double,znver1-load,znver1-fp3,znver1-fp0\")\n \n (define_insn_reservation \"znver1_fp_op_div\" 15\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"fdiv\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp3*15\")\n \n (define_insn_reservation \"znver1_fp_op_div_load\" 22\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"fdiv\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp3*15\")\n@@ -553,62 +604,63 @@\n \t\t\t \"znver1-double,znver1-load,znver1-fp3*19\")\n \n (define_insn_reservation \"znver2_fp_op_idiv_load\" 26\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"fdiv\")\n \t\t\t\t   (and (eq_attr \"fp_int_src\" \"true\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"znver1-double,znver1-load,znver1-fp3*19\")\n \n+\n ;; MMX, SSE, SSEn.n, AVX, AVX2 instructions\n (define_insn_reservation \"znver1_fp_insn\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (eq_attr \"type\" \"mmx\"))\n \t\t\t \"znver1-direct,znver1-fpu\")\n \n (define_insn_reservation \"znver1_mmx_add\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxadd\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp0|znver1-fp1|znver1-fp3\")\n \n (define_insn_reservation \"znver1_mmx_add_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxadd\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp0|znver1-fp1|znver1-fp3\")\n \n (define_insn_reservation \"znver1_mmx_cmp\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxcmp\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp0|znver1-fp3\")\n \n (define_insn_reservation \"znver1_mmx_cmp_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxcmp\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp0|znver1-fp3\")\n \n (define_insn_reservation \"znver1_mmx_cvt_pck_shuf\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxcvt,sseshuf,sseshuf1\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp1|znver1-fp2\")\n \n (define_insn_reservation \"znver1_mmx_cvt_pck_shuf_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxcvt,sseshuf,sseshuf1\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp1|znver1-fp2\")\n \n (define_insn_reservation \"znver1_mmx_shift_move\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxshft,mmxmov\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n- \t\t\t \"znver1-direct,znver1-fp2\")\n+\t\t\t \"znver1-direct,znver1-fp2\")\n \n (define_insn_reservation \"znver1_mmx_shift_move_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxshft,mmxmov\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp2\")\n@@ -619,19 +671,19 @@\n \t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n \t\t\t  \"znver1-direct,znver1-fp2,znver1-store\")\n (define_insn_reservation \"znver2_mmx_move_store\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxshft,mmxmov\")\n \t\t\t\t   (eq_attr \"memory\" \"store,both\")))\n \t\t\t  \"znver1-direct,znver1-fp2,znver2-store\")\n \n (define_insn_reservation \"znver1_mmx_mul\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxmul\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t  \"znver1-direct,znver1-fp0*3\")\n \n (define_insn_reservation \"znver1_mmx_load\" 10\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"mmxmul\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp0*3\")\n@@ -652,13 +704,13 @@\n \t\t\t \"znver1-double,znver1-load,znver1-fpu\")\n \n (define_insn_reservation \"znver1_sse_log\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"sselog\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fpu\")\n \n (define_insn_reservation \"znver1_sse_log_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"sselog\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fpu\")\n@@ -678,13 +730,13 @@\n \t\t\t \"znver1-double,znver1-load,znver1-fp1|znver1-fp2\")\n \n (define_insn_reservation \"znver1_sse_log1\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"sselog1\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp1|znver1-fp2\")\n \n (define_insn_reservation \"znver1_sse_log1_load\" 8\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"sselog1\")\n \t\t\t\t   (eq_attr \"memory\" \"!none\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp1|znver1-fp2\")\n@@ -701,7 +753,8 @@\n (define_insn_reservation \"znver1_sse_comi_load\" 8\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"prefix_extra\" \"0\")\n \t\t\t\t   (and (eq_attr \"type\" \"ssecomi\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n@@ -710,7 +763,8 @@\n (define_insn_reservation \"znver1_sse_comi_double\" 2\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"V4SF,V2DF,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"prefix\" \"vex\")\n \t\t\t\t   (and (eq_attr \"prefix_extra\" \"0\")\n \t\t\t\t\t(and (eq_attr \"type\" \"ssecomi\")\n@@ -720,7 +774,8 @@\n (define_insn_reservation \"znver1_sse_comi_double_load\" 10\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"V4SF,V2DF,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"prefix\" \"vex\")\n \t\t\t\t   (and (eq_attr \"prefix_extra\" \"0\")\n \t\t\t\t\t(and (eq_attr \"type\" \"ssecomi\")\n@@ -730,7 +785,8 @@\n (define_insn_reservation \"znver1_sse_test\" 1\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"prefix_extra\" \"1\")\n \t\t\t\t   (and (eq_attr \"type\" \"ssecomi\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n@@ -739,7 +795,8 @@\n (define_insn_reservation \"znver1_sse_test_load\" 8\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"prefix_extra\" \"1\")\n \t\t\t\t   (and (eq_attr \"type\" \"ssecomi\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n@@ -757,7 +814,7 @@\n \t\t\t \"znver1-direct,znver1-ieu0\")\n \n (define_insn_reservation \"znver2_sse_mov\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t   (and (eq_attr \"isa\" \"avx\")\n \t\t\t\t\t(and (eq_attr \"type\" \"ssemov\")\n@@ -774,7 +831,7 @@\n \t\t\t \"znver1-direct,znver1-ieu2\")\n \n (define_insn_reservation \"znver2_avx_mov\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"TI\")\n \t\t\t\t   (and (eq_attr \"isa\" \"avx\")\n \t\t\t\t\t(and (eq_attr \"type\" \"ssemov\")\n@@ -785,7 +842,8 @@\n (define_insn_reservation \"znver1_sseavx_mov\" 1\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t      (eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fpu\")\n@@ -797,15 +855,16 @@\n \t\t\t\t\t(eq_attr \"memory\" \"store\"))))\n \t\t\t\"znver1-direct,znver1-fpu,znver1-store\")\n (define_insn_reservation \"znver2_sseavx_mov_store\" 1\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t   (eq_attr \"memory\" \"store\")))\n \t\t\t\"znver1-direct,znver1-fpu,znver2-store\")\n \n (define_insn_reservation \"znver1_sseavx_mov_load\" 8\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t       (and (eq_attr \"type\" \"ssemov\")\n \t\t\t\t    (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fpu\")\n@@ -835,15 +894,17 @@\n (define_insn_reservation \"znver1_sseavx_add\" 3\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"type\" \"sseadd\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp2|znver1-fp3\")\n \n (define_insn_reservation \"znver1_sseavx_add_load\" 10\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"type\" \"sseadd\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp2|znver1-fp3\")\n@@ -892,18 +953,48 @@\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"znver1-double,znver1-load,znver1-fp0|znver1-fp1\")\n \n+(define_insn_reservation \"znver3_sseavx_fma\" 4\n+\t\t\t (and (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t      (eq_attr \"mode\" \"SF,DF,V4SF,V2DF\"))\n+\t\t\t\t   (and (eq_attr \"type\" \"ssemuladd\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\")))\n+\t\t\t \"znver1-direct,znver1-fp0|znver1-fp1\")\n+\n+(define_insn_reservation \"znver3_sseavx_fma_load\" 11\n+\t\t\t (and (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t       (eq_attr \"mode\" \"SF,DF,V4SF,V2DF\"))\n+\t\t\t\t     (and (eq_attr \"type\" \"ssemuladd\")\n+\t\t\t\t\t  (eq_attr \"memory\" \"load\")))\n+\t\t\t \"znver1-direct,znver1-load,znver1-fp0|znver1-fp1\")\n+\n+(define_insn_reservation \"znver3_avx256_fma\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t      (and (eq_attr \"mode\" \"V8SF,V4DF\")\n+\t\t\t           (and (eq_attr \"type\" \"ssemuladd\")\n+\t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n+\t\t\t \"znver1-double,znver1-fp0|znver1-fp1\")\n+\n+(define_insn_reservation \"znver3_avx256_fma_load\" 11\n+\t\t\t  (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t       (and (eq_attr \"mode\" \"V8SF,V4DF\")\n+\t\t\t            (and (eq_attr \"type\" \"ssemuladd\")\n+\t\t\t\t\t (eq_attr \"memory\" \"load\"))))\n+\t\t\t \"znver1-double,znver1-load,znver1-fp0|znver1-fp1\")\n+\n (define_insn_reservation \"znver1_sseavx_iadd\" 1\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"DI,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"type\" \"sseiadd\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp0|znver1-fp1|znver1-fp3\")\n \n (define_insn_reservation \"znver1_sseavx_iadd_load\" 8\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"DI,TI\"))\n-\t\t\t\t   (eq_attr \"cpu\" \"znver2\"))\n+\t\t\t\t   (ior (eq_attr \"cpu\" \"znver2\")\n+\t\t\t\t\t(eq_attr \"cpu\" \"znver3\")))\n \t\t\t      (and (eq_attr \"type\" \"sseiadd\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp0|znver1-fp1|znver1-fp3\")\n@@ -924,7 +1015,7 @@\n \n ;; SSE conversions.\n (define_insn_reservation \"znver1_ssecvtsf_si_load\" 12\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t   (and (eq_attr \"type\" \"sseicvt\")\n \t\t\t\t\t(and (match_operand:SF 1 \"memory_operand\")\n@@ -939,7 +1030,7 @@\n \t\t\t\t\t     (eq_attr \"memory\" \"none\")))))\n \t\t\t \"znver1-double,znver1-fp3,znver1-ieu0\")\n (define_insn_reservation \"znver2_ssecvtdf_si\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t   (and (match_operand:DF 1 \"register_operand\")\n \t\t\t\t\t(and (eq_attr \"type\" \"sseicvt\")\n@@ -955,13 +1046,14 @@\n \t\t\t \"znver1-double,znver1-load,znver1-fp3,znver1-ieu0\")\n \n (define_insn_reservation \"znver2_ssecvtdf_si_load\" 11\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"SI\")\n \t\t\t\t   (and (eq_attr \"type\" \"sseicvt\")\n \t\t\t\t\t(and (match_operand:DF 1 \"memory_operand\")\n \t\t\t\t\t     (eq_attr \"memory\" \"load\")))))\n \t\t\t \"znver1-double,znver1-load,znver1-fp3,znver1-ieu0\")\n \n+\n ;; All other used ssecvt fp3 pipes\n ;; Check: Need to revisit this again.\n ;; Some SSE converts may use different pipe combinations.\n@@ -972,19 +1064,13 @@\n \t\t\t \"znver1-direct,znver1-fp3\")\n \n (define_insn_reservation \"znver2_ssecvt\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp3\")\n \n (define_insn_reservation \"znver1_ssecvt_load\" 11\n-\t\t\t (and (eq_attr \"cpu\" \"znver1\")\n-\t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n-\t\t\t\t   (eq_attr \"memory\" \"load\")))\n-\t\t\t \"znver1-direct,znver1-load,znver1-fp3\")\n-\n-(define_insn_reservation \"znver2_ssecvt_load\" 11\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"ssecvt\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp3\")\n@@ -994,7 +1080,9 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"V4SF,SF\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"V8SF,V4SF,SF\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"V8SF,V4SF,SF\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"V8SF,V4SF,SF\")))\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp3*10\")\n@@ -1003,7 +1091,9 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"V4SF,SF\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"V8SF,V4SF,SF\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"V8SF,V4SF,SF\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"V8SF,V4SF,SF\")))\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp3*10\")\n@@ -1012,16 +1102,20 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"V2DF,DF\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"V4DF,V2DF,DF\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"V4DF,V2DF,DF\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"V4DF,V2DF,DF\")))\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp3*13\")\n \n (define_insn_reservation \"znver1_ssediv_sd_pd_load\" 20\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n-\t\t\t                (eq_attr \"mode\" \"V2DF,DF\"))\n+\t\t\t\t\t       (eq_attr \"mode\" \"V2DF,DF\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"V4DF,V2DF,DF\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"V4DF,V2DF,DF\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"V4DF,V2DF,DF\")))\n \t\t\t      (and (eq_attr \"type\" \"ssediv\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp3*13\")\n@@ -1058,7 +1152,9 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"V4SF,SF\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"V8SF,V4SF,SF,V4DF,V2DF,DF\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"V8SF,V4SF,SF,V4DF,V2DF,DF\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"V8SF,V4SF,SF,V4DF,V2DF,DF\")))\n \t\t\t      (and (eq_attr \"type\" \"ssemul\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,(znver1-fp0|znver1-fp1)*3\")\n@@ -1067,7 +1163,9 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"V4SF,SF\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"V8SF,V4SF,SF\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"V8SF,V4SF,SF\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"V8SF,V4SF,SF\")))\n \t\t\t      (and (eq_attr \"type\" \"ssemul\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,(znver1-fp0|znver1-fp1)*3\")\n@@ -1101,17 +1199,18 @@\n \t\t\t \"znver1-direct,znver1-load,(znver1-fp0|znver1-fp1)*4\")\n \n (define_insn_reservation \"znver2_ssemul_sd_pd\" 3\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"ssemul\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,(znver1-fp0|znver1-fp1)*3\")\n \n (define_insn_reservation \"znver2_ssemul_sd_pd_load\" 10\n-\t\t\t (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver2,znver3\")\n \t\t\t      (and (eq_attr \"type\" \"ssemul\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,(znver1-fp0|znver1-fp1)*3\")\n \n+\n (define_insn_reservation \"znver1_ssemul_avx256_pd\" 5\n \t\t\t (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t      (and (eq_attr \"mode\" \"V4DF\")\n@@ -1131,13 +1230,15 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"TI\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"TI,OI\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"TI,OI\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"TI,OI\")))\n \t\t\t      (and (eq_attr \"type\" \"sseimul\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp0*3\")\n \n (define_insn_reservation \"znver1_sseimul_avx256\" 4\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"OI\")\n \t\t\t\t   (and (eq_attr \"type\" \"sseimul\")\n \t\t\t\t\t(eq_attr \"memory\" \"none\"))))\n@@ -1147,27 +1248,29 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"TI\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n+\t\t\t                (eq_attr \"mode\" \"TI,OI\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n \t\t\t                (eq_attr \"mode\" \"TI,OI\")))\n \t\t\t      (and (eq_attr \"type\" \"sseimul\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp0*3\")\n \n (define_insn_reservation \"znver1_sseimul_avx256_load\" 11\n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"OI\")\n \t\t\t\t   (and (eq_attr \"type\" \"sseimul\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n \t\t\t \"znver1-double,znver1-load,znver1-fp0*4\")\n \n (define_insn_reservation \"znver1_sseimul_di\" 3 \n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"DI\")\n \t\t\t\t   (and (eq_attr \"memory\" \"none\")\n \t\t\t\t\t(eq_attr \"type\" \"sseimul\"))))\n \t\t\t \"znver1-direct,znver1-fp0*3\")\n \n (define_insn_reservation \"znver1_sseimul_load_di\" 10 \n-\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2\")\n+\t\t\t (and (eq_attr \"cpu\" \"znver1,znver2,znver3\")\n \t\t\t      (and (eq_attr \"mode\" \"DI\")\n \t\t\t\t   (and (eq_attr \"type\" \"sseimul\")\n \t\t\t\t\t(eq_attr \"memory\" \"load\"))))\n@@ -1178,16 +1281,20 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,V8SF,V4DF\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,V8SF,V4DF\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,V8SF,V4DF\")))\n \t\t\t       (and (eq_attr \"type\" \"ssecmp\")\n \t\t\t\t    (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp0|znver1-fp1\")\n \n (define_insn_reservation \"znver1_sse_cmp_load\" 8\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n-\t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF\"))\n+\t\t\t\t         (eq_attr \"mode\" \"SF,DF,V4SF,V2DF\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,V8SF,V4DF\")))\n+\t\t\t\t        (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,V8SF,V4DF\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"SF,DF,V4SF,V2DF,V8SF,V4DF\")))\n \t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp0|znver1-fp1\")\n@@ -1208,9 +1315,11 @@\n \n (define_insn_reservation \"znver1_sse_icmp\" 1\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n-\t\t\t                (eq_attr \"mode\" \"QI,HI,SI,DI,TI\"))\n+\t\t\t\t\t       (eq_attr \"mode\" \"QI,HI,SI,DI,TI\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"QI,HI,SI,DI,TI,OI\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"QI,HI,SI,DI,TI,OI\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"QI,HI,SI,DI,TI,OI\")))\n \t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n \t\t\t\t   (eq_attr \"memory\" \"none\")))\n \t\t\t \"znver1-direct,znver1-fp0|znver1-fp3\")\n@@ -1219,7 +1328,9 @@\n \t\t\t (and (ior (and (eq_attr \"cpu\" \"znver1\")\n \t\t\t                (eq_attr \"mode\" \"QI,HI,SI,DI,TI\"))\n \t\t\t\t   (and (eq_attr \"cpu\" \"znver2\")\n-\t\t\t                (eq_attr \"mode\" \"QI,HI,SI,DI,TI,OI\")))\n+\t\t\t\t\t      (eq_attr \"mode\" \"QI,HI,SI,DI,TI,OI\"))\n+\t\t\t\t   (and (eq_attr \"cpu\" \"znver3\")\n+\t\t\t\t\t      (eq_attr \"mode\" \"QI,HI,SI,DI,TI,OI\")))\n \t\t\t      (and (eq_attr \"type\" \"ssecmp\")\n \t\t\t\t   (eq_attr \"memory\" \"load\")))\n \t\t\t \"znver1-direct,znver1-load,znver1-fp0|znver1-fp3\")"}, {"sha": "93529aa0b5ac55efca5cafd5d0a49ffd02a6c64c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -22882,6 +22882,12 @@ AMD Family 17h Zen version 1.\n \n @item znver2\n AMD Family 17h Zen version 2.\n+\n+@item amdfam19h\n+AMD Family 19h CPU.\n+\n+@item znver3\n+AMD Family 19h Zen version 3.\n @end table\n \n Here is an example:"}, {"sha": "f7e8c8b29b0eed0a4be4bd78ce03091bfb01c19e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -30052,6 +30052,13 @@ MWAITX, SHA, CLZERO, AES, PCLMUL, CX16, MOVBE, MMX, SSE, SSE2, SSE3, SSE4A,\n SSSE3, SSE4.1, SSE4.2, ABM, XSAVEC, XSAVES, CLFLUSHOPT, POPCNT, RDPID,\n WBNOINVD, and 64-bit instruction set extensions.)\n \n+@item znver3\n+AMD Family 19h core based CPUs with x86-64 instruction set support. (This\n+supersets BMI, BMI2, CLWB, F16C, FMA, FSGSBASE, AVX, AVX2, ADCX, RDSEED,\n+MWAITX, SHA, CLZERO, AES, PCLMUL, CX16, MOVBE, MMX, SSE, SSE2, SSE3, SSE4A,\n+SSSE3, SSE4.1, SSE4.2, ABM, XSAVEC, XSAVES, CLFLUSHOPT, POPCNT, RDPID,\n+WBNOINVD, PKU, VPCLMULQDQ, VAES, and 64-bit instruction set extensions.)\n+\n @item btver1\n CPUs based on AMD Family 14h cores with x86-64 instruction set support.  (This\n supersets MMX, SSE, SSE2, SSE3, SSSE3, SSE4A, CX16, ABM and 64-bit"}, {"sha": "c7723e3168a4c1b85d7d910f3f5570ea315c8a29", "filename": "gcc/testsuite/g++.target/i386/mv29.C", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv29.C?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -0,0 +1,79 @@\n+// Test that dispatching can choose the right multiversion\n+// for AMD CPUs with the same internal GCC processor id\n+\n+// { dg-do run }\n+// { dg-require-ifunc \"\" }\n+// { dg-options \"-O2\" }\n+\n+#include <assert.h>\n+\n+int __attribute__ ((target(\"default\")))\n+foo ()\n+{\n+  return 0;\n+}\n+\n+int __attribute__ ((target(\"arch=amdfam10\"))) foo () {\n+  return 1;\n+}\n+\n+int __attribute__ ((target(\"arch=btver1\"))) foo () {\n+  return 2;\n+}\n+\n+int __attribute__ ((target(\"arch=btver2\"))) foo () {\n+  return 3;\n+}\n+\n+int __attribute__ ((target(\"arch=bdver1\"))) foo () {\n+  return 4;\n+}\n+\n+int __attribute__ ((target(\"arch=bdver2\"))) foo () {\n+  return 5;\n+}\n+\n+int __attribute__ ((target(\"arch=bdver3\"))) foo () {\n+  return 6;\n+}\n+\n+int __attribute__ ((target(\"arch=znver1\"))) foo () {\n+  return 7;\n+}\n+\n+int __attribute__ ((target(\"arch=znver2\"))) foo () {\n+  return 8;\n+}\n+\n+int __attribute__ ((target(\"arch=znver3\"))) foo () {\n+  return 9;\n+}\n+\n+\n+int main ()\n+{\n+  int val = foo ();\n+\n+  if (__builtin_cpu_is (\"amdfam10h\"))\n+    assert (val == 1);\n+  else if  (__builtin_cpu_is (\"btver1\"))\n+    assert (val == 2);\n+  else if  (__builtin_cpu_is (\"btver2\"))\n+    assert (val == 3);\n+  else if (__builtin_cpu_is (\"bdver1\"))\n+    assert (val == 4);\n+  else if (__builtin_cpu_is (\"bdver2\"))\n+    assert (val == 5);\n+  else if (__builtin_cpu_is (\"bdver3\"))\n+    assert (val == 6);\n+  else if (__builtin_cpu_is (\"znver1\"))\n+    assert (val == 7);\n+  else if (__builtin_cpu_is (\"znver2\"))\n+    assert (val == 8);\n+  else if (__builtin_cpu_is (\"znver3\"))\n+    assert (val == 9);\n+  else\n+    assert (val == 0);\n+\n+  return 0;\n+}"}, {"sha": "5d4800f2802015533f02e19879bcb699ea46015b", "filename": "gcc/testsuite/gcc.target/i386/funcspec-56.inc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2ae3ee285a57455d5a23bd352a68c289130186/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc?ref=3e2ae3ee285a57455d5a23bd352a68c289130186", "patch": "@@ -193,6 +193,9 @@ extern void test_arch_barcelona (void)\t\t__attribute__((__target__(\"arch=barcelon\n extern void test_arch_bdver1 (void)\t\t__attribute__((__target__(\"arch=bdver1\")));\n extern void test_arch_bdver2 (void)\t\t__attribute__((__target__(\"arch=bdver2\")));\n extern void test_arch_bdver3 (void)\t\t__attribute__((__target__(\"arch=bdver3\")));\n+extern void test_arch_znver1 (void)             __attribute__((__target__(\"arch=znver1\")));\n+extern void test_arch_znver2 (void)             __attribute__((__target__(\"arch=znver2\")));\n+extern void test_arch_znver3 (void)             __attribute__((__target__(\"arch=znver3\")));\n \n extern void test_tune_nocona (void)\t\t__attribute__((__target__(\"tune=nocona\")));\n extern void test_tune_core2 (void)\t\t__attribute__((__target__(\"tune=core2\")));\n@@ -212,6 +215,9 @@ extern void test_tune_bdver1 (void)\t\t__attribute__((__target__(\"tune=bdver1\")));\n extern void test_tune_bdver2 (void)\t\t__attribute__((__target__(\"tune=bdver2\")));\n extern void test_tune_bdver3 (void)\t\t__attribute__((__target__(\"tune=bdver3\")));\n extern void test_tune_generic (void)\t\t__attribute__((__target__(\"tune=generic\")));\n+extern void test_tune_znver1 (void)             __attribute__((__target__(\"tune=znver1\")));\n+extern void test_tune_znver2 (void)             __attribute__((__target__(\"tune=znver2\")));\n+extern void test_tune_znver3 (void)             __attribute__((__target__(\"tune=znver3\")));\n \n extern void test_fpmath_sse (void)\t\t__attribute__((__target__(\"sse2,fpmath=sse\")));\n extern void test_fpmath_387 (void)\t\t__attribute__((__target__(\"sse2,fpmath=387\")));"}]}