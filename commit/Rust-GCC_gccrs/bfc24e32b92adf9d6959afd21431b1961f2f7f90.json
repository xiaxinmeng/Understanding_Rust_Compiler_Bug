{"sha": "bfc24e32b92adf9d6959afd21431b1961f2f7f90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZjMjRlMzJiOTJhZGY5ZDY5NTlhZmQyMTQzMWIxOTYxZjJmN2Y5MA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-03-25T16:00:52Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-03-25T16:00:52Z"}, "message": "re PR fortran/84381 (replace non-std 'call abort' by 'stop 1' in gfortran testsuite)\n\n2018-03-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/84381\n\t* testsuite/libgomp.fortran/aligned1.f03: Replace non-standard\n\tcall abort by STOP n.\n\t* testsuite/libgomp.fortran/alloc-comp-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/alloc-comp-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/alloc-comp-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable1.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable10.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable11.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable12.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable2.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable3.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable4.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable5.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable6.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable7.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable8.f90: Likewise.\n\t* testsuite/libgomp.fortran/allocatable9.f90: Likewise.\n\t* testsuite/libgomp.fortran/appendix-a/a.18.1.f90: Likewise.\n\t* testsuite/libgomp.fortran/appendix-a/a.19.1.f90: Likewise.\n\t* testsuite/libgomp.fortran/associate1.f90: Likewise.\n\t* testsuite/libgomp.fortran/associate2.f90: Likewise.\n\t* testsuite/libgomp.fortran/associate3.f90: Likewise.\n\t* testsuite/libgomp.fortran/cancel-do-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/cancel-do-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/cancel-parallel-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/cancel-sections-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/cancel-taskgroup-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/character1.f90: Likewise.\n\t* testsuite/libgomp.fortran/character2.f90: Likewise.\n\t* testsuite/libgomp.fortran/collapse1.f90: Likewise.\n\t* testsuite/libgomp.fortran/collapse2.f90: Likewise.\n\t* testsuite/libgomp.fortran/collapse3.f90: Likewise.\n\t* testsuite/libgomp.fortran/collapse4.f90: Likewise.\n\t* testsuite/libgomp.fortran/crayptr1.f90: Likewise.\n\t* testsuite/libgomp.fortran/crayptr2.f90: Likewise.\n\t* testsuite/libgomp.fortran/crayptr3.f90: Likewise.\n\t* testsuite/libgomp.fortran/declare-simd-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/declare-simd-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/declare-target-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/depend-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/depend-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/depend-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/do1.f90: Likewise.\n\t* testsuite/libgomp.fortran/do2.f90: Likewise.\n\t* testsuite/libgomp.fortran/doacross1.f90: Likewise.\n\t* testsuite/libgomp.fortran/doacross2.f90: Likewise.\n\t* testsuite/libgomp.fortran/doacross3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/array_sections-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/array_sections-4.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/async_target-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/async_target-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/declare_target-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/declare_target-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/declare_target-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/declare_target-4.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/declare_target-5.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/device-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/device-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/device-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/simd-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/simd-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/simd-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/simd-4.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/simd-5.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/simd-6.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/simd-7.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/simd-8.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target-4.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target-5.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_data-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_data-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_data-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_data-4.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_data-5.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_data-6.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_data-7.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_update-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/target_update-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/task_dep-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/task_dep-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/task_dep-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/task_dep-4.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/task_dep-5.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/teams-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/teams-3.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/teams-4.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/teams-5.f90: Likewise.\n\t* testsuite/libgomp.fortran/examples-4/teams-6.f90: Likewise.\n\t* testsuite/libgomp.fortran/lastprivate1.f90: Likewise.\n\t* testsuite/libgomp.fortran/lastprivate2.f90: Likewise.\n\t* testsuite/libgomp.fortran/lib1.f90: Likewise.\n\t* testsuite/libgomp.fortran/lib2.f: Likewise.\n\t* testsuite/libgomp.fortran/lib3.f: Likewise.\n\t* testsuite/libgomp.fortran/lib4.f90: Likewise.\n\t* testsuite/libgomp.fortran/lock-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/lock-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/nested1.f90: Likewise.\n\t* testsuite/libgomp.fortran/nestedfn1.f90: Likewise.\n\t* testsuite/libgomp.fortran/nestedfn2.f90: Likewise.\n\t* testsuite/libgomp.fortran/nestedfn3.f90: Likewise.\n\t* testsuite/libgomp.fortran/nestedfn4.f90: Likewise.\n\t* testsuite/libgomp.fortran/nestedfn5.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_atomic1.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_atomic2.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_atomic3.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_atomic4.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_atomic5.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_cond1.f: Likewise.\n\t* testsuite/libgomp.fortran/omp_cond2.f: Likewise.\n\t* testsuite/libgomp.fortran/omp_cond3.F90: Likewise.\n\t* testsuite/libgomp.fortran/omp_cond4.F90: Likewise.\n\t* testsuite/libgomp.fortran/omp_parse1.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_parse2.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_parse3.f90: Likewise.\n\t* testsuite/libgomp.fortran/omp_parse4.f90: Likewise.\n\t* testsuite/libgomp.fortran/openmp_version-1.f: Likewise.\n\t* testsuite/libgomp.fortran/openmp_version-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95: Likewise.\n\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95: Likewise.\n\t* testsuite/libgomp.fortran/pointer1.f90: Likewise.\n\t* testsuite/libgomp.fortran/pointer2.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr25162.f: Likewise.\n\t* testsuite/libgomp.fortran/pr25219.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr27395-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr27395-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr27416-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr27916-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr27916-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr28390.f: Likewise.\n\t* testsuite/libgomp.fortran/pr29629.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr32550.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr33880.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr34020.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr35130.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr42162.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr46753.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr48894.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr49792-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr49792-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr63938-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr63938-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr65597.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr66199-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr71014.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr81304.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr81841.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr84418-1.f90: Likewise.\n\t* testsuite/libgomp.fortran/pr84418-2.f90: Likewise.\n\t* testsuite/libgomp.fortran/procptr1.f90: Likewise.\n\t* testsuite/libgomp.fortran/recursion1.f90: Likewise.\n\t* testsuite/libgomp.fortran/reduction1.f90: Likewise.\n\t* testsuite/libgomp.fortran/reduction2.f90: Likewise.\n\t* testsuite/libgomp.fortran/reduction3.f90: Likewise.\n\t* testsuite/libgomp.fortran/reduction4.f90: Likewise.\n\t* testsuite/libgomp.fortran/reduction5.f90: Likewise.\n\t* testsuite/libgomp.fortran/reduction6.f90: Likewise.\n\t* testsuite/libgomp.fortran/reference1.f90: Likewise.\n\t* testsuite/libgomp.fortran/reference2.f90: Likewise.\n\t* testsuite/libgomp.fortran/retval1.f90: Likewise.\n\t* testsuite/libgomp.fortran/retval2.f90: Likewise.\n\t* testsuite/libgomp.fortran/sharing1.f90: Likewise.\n\t* testsuite/libgomp.fortran/sharing2.f90: Likewise.\n\t* testsuite/libgomp.fortran/simd1.f90: Likewise.\n\t* testsuite/libgomp.fortran/simd2.f90: Likewise.\n\t* testsuite/libgomp.fortran/simd3.f90: Likewise.\n\t* testsuite/libgomp.fortran/simd4.f90: Likewise.\n\t* testsuite/libgomp.fortran/simd5.f90: Likewise.\n\t* testsuite/libgomp.fortran/simd6.f90: Likewise.\n\t* testsuite/libgomp.fortran/simd7.f90: Likewise.\n\t* testsuite/libgomp.fortran/stack.f90: Likewise.\n\t* testsuite/libgomp.fortran/strassen.f90: Likewise.\n\t* testsuite/libgomp.fortran/tabs1.f90: Likewise.\n\t* testsuite/libgomp.fortran/tabs2.f: Likewise.\n\t* testsuite/libgomp.fortran/target1.f90: Likewise.\n\t* testsuite/libgomp.fortran/target2.f90: Likewise.\n\t* testsuite/libgomp.fortran/target3.f90: Likewise.\n\t* testsuite/libgomp.fortran/target4.f90: Likewise.\n\t* testsuite/libgomp.fortran/target5.f90: Likewise.\n\t* testsuite/libgomp.fortran/target6.f90: Likewise.\n\t* testsuite/libgomp.fortran/target7.f90: Likewise.\n\t* testsuite/libgomp.fortran/target8.f90: Likewise.\n\t* testsuite/libgomp.fortran/task1.f90: Likewise.\n\t* testsuite/libgomp.fortran/task2.f90: Likewise.\n\t* testsuite/libgomp.fortran/task3.f90: Likewise.\n\t* testsuite/libgomp.fortran/task4.f90: Likewise.\n\t* testsuite/libgomp.fortran/taskgroup1.f90: Likewise.\n\t* testsuite/libgomp.fortran/taskloop1.f90: Likewise.\n\t* testsuite/libgomp.fortran/taskloop2.f90: Likewise.\n\t* testsuite/libgomp.fortran/taskloop3.f90: Likewise.\n\t* testsuite/libgomp.fortran/taskloop4.f90: Likewise.\n\t* testsuite/libgomp.fortran/threadprivate1.f90: Likewise.\n\t* testsuite/libgomp.fortran/threadprivate2.f90: Likewise.\n\t* testsuite/libgomp.fortran/threadprivate3.f90: Likewise.\n\t* testsuite/libgomp.fortran/threadprivate4.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr1.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr10.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr11.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr12.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr13.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr14.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr15.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr2.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr3.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr4.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr5.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr6.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr7.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr8.f90: Likewise.\n\t* testsuite/libgomp.fortran/udr9.f90: Likewise.\n\t* testsuite/libgomp.fortran/vla1.f90: Likewise.\n\t* testsuite/libgomp.fortran/vla2.f90: Likewise.\n\t* testsuite/libgomp.fortran/vla3.f90: Likewise.\n\t* testsuite/libgomp.fortran/vla4.f90: Likewise.\n\t* testsuite/libgomp.fortran/vla5.f90: Likewise.\n\t* testsuite/libgomp.fortran/vla6.f90: Likewise.\n\t* testsuite/libgomp.fortran/vla7.f90: Likewise.\n\t* testsuite/libgomp.fortran/vla8.f90: Likewise.\n\t* testsuite/libgomp.fortran/workshare1.f90: Likewise.\n\t* testsuite/libgomp.fortran/workshare2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/abort-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/abort-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/acc_on_device-1-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/acc_on_device-1-2.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/acc_on_device-1-3.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/asyncwait-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/asyncwait-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/asyncwait-3.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/atomic_capture-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/atomic_rw-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/atomic_update-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/c2.pl: Likewise.\n\t* testsuite/libgomp.oacc-fortran/clauses-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/collapse-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/collapse-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/collapse-3.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/collapse-4.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/collapse-5.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/collapse-6.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/collapse-7.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/collapse-8.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/combined-directives-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/combined-reduction.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-3.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-4-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-4.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/declare-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/declare-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/declare-3.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/declare-4.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/declare-5.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/firstprivate-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/gang-static-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/host_data-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/if-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/implicit-firstprivate-ref.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: Likewise.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-2.f95: Likewise.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit-2.f95: Likewise.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit.f95: Likewise.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-update.f95: Likewise.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data.f95: Likewise.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop.f95: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-10.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-2.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-3.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-32-1.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-32-2.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-4.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-5.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-6.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-7.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-8.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/map-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/nested-function-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/nested-function-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/nested-function-3.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/non-scalar-data.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/openacc_version-1.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/openacc_version-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/par-reduction-2-1.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/par-reduction-2-2.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/parallel-reduction.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/pointer-align-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/pr70643.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/pr81352.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/pr83920.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/pr84028.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/private-variables.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/pset-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-3.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-4.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-5.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-6.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-7.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-8.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/routine-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/routine-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/routine-3.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/routine-4.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/routine-5.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/routine-7.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/routine-9.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/subarrays-1.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/subarrays-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/update-1.f90: Likewise.\n\nFrom-SVN: r258846", "tree": {"sha": "83dc0f041209ab2ac719cf04915c8610e91d3f25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83dc0f041209ab2ac719cf04915c8610e91d3f25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfc24e32b92adf9d6959afd21431b1961f2f7f90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc24e32b92adf9d6959afd21431b1961f2f7f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfc24e32b92adf9d6959afd21431b1961f2f7f90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc24e32b92adf9d6959afd21431b1961f2f7f90/comments", "author": null, "committer": null, "parents": [{"sha": "32e38f64001f16bd72dd084d76ccc9d57cf1057b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e38f64001f16bd72dd084d76ccc9d57cf1057b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32e38f64001f16bd72dd084d76ccc9d57cf1057b"}], "stats": {"total": 4354, "additions": 2336, "deletions": 2018}, "files": [{"sha": "008b93535fb26f28bc42325fec34c6d425e1c5ac", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 318, "deletions": 0, "changes": 318, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -1,3 +1,321 @@\n+2018-03-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/84381\n+\t* testsuite/libgomp.fortran/aligned1.f03: Replace non-standard\n+\tcall abort by STOP n.\n+\t* testsuite/libgomp.fortran/alloc-comp-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/alloc-comp-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/alloc-comp-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable10.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable11.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable12.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable7.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable8.f90: Likewise.\n+\t* testsuite/libgomp.fortran/allocatable9.f90: Likewise.\n+\t* testsuite/libgomp.fortran/appendix-a/a.18.1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/appendix-a/a.19.1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/associate1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/associate2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/associate3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/cancel-do-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/cancel-do-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/cancel-parallel-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/cancel-sections-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/cancel-taskgroup-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/character1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/character2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/collapse1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/collapse2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/collapse3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/collapse4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/crayptr1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/crayptr2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/crayptr3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/declare-simd-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/declare-simd-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/declare-target-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/depend-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/depend-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/depend-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/do1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/do2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/doacross1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/doacross2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/doacross3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/array_sections-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/array_sections-4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/async_target-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/async_target-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/declare_target-5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/device-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/device-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/device-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/simd-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/simd-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/simd-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/simd-4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/simd-5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/simd-6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/simd-7.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/simd-8.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target-4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target-5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_data-7.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_update-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/target_update-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/task_dep-5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/teams-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/teams-3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/teams-4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/teams-5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/examples-4/teams-6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/lastprivate1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/lastprivate2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/lib1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/lib2.f: Likewise.\n+\t* testsuite/libgomp.fortran/lib3.f: Likewise.\n+\t* testsuite/libgomp.fortran/lib4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/lock-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/lock-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/nested1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/nestedfn1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/nestedfn2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/nestedfn3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/nestedfn4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/nestedfn5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_atomic1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_atomic2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_atomic3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_atomic4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_atomic5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_cond1.f: Likewise.\n+\t* testsuite/libgomp.fortran/omp_cond2.f: Likewise.\n+\t* testsuite/libgomp.fortran/omp_cond3.F90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_cond4.F90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_parse1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_parse2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_parse3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/omp_parse4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/openmp_version-1.f: Likewise.\n+\t* testsuite/libgomp.fortran/openmp_version-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95: Likewise.\n+\t* testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95: Likewise.\n+\t* testsuite/libgomp.fortran/pointer1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pointer2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr25162.f: Likewise.\n+\t* testsuite/libgomp.fortran/pr25219.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr27395-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr27395-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr27416-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr27916-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr27916-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr28390.f: Likewise.\n+\t* testsuite/libgomp.fortran/pr29629.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr32550.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr33880.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr34020.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr35130.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr42162.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr46753.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr48894.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr49792-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr49792-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr63938-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr63938-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr65597.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr66199-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr71014.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr81304.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr81841.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr84418-1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/pr84418-2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/procptr1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/recursion1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/reduction1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/reduction2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/reduction3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/reduction4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/reduction5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/reduction6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/reference1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/reference2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/retval1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/retval2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/sharing1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/sharing2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/simd1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/simd2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/simd3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/simd4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/simd5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/simd6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/simd7.f90: Likewise.\n+\t* testsuite/libgomp.fortran/stack.f90: Likewise.\n+\t* testsuite/libgomp.fortran/strassen.f90: Likewise.\n+\t* testsuite/libgomp.fortran/tabs1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/tabs2.f: Likewise.\n+\t* testsuite/libgomp.fortran/target1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/target2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/target3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/target4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/target5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/target6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/target7.f90: Likewise.\n+\t* testsuite/libgomp.fortran/target8.f90: Likewise.\n+\t* testsuite/libgomp.fortran/task1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/task2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/task3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/task4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/taskgroup1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/taskloop1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/taskloop2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/taskloop3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/taskloop4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/threadprivate1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/threadprivate2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/threadprivate3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/threadprivate4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr10.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr11.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr12.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr13.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr14.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr15.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr7.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr8.f90: Likewise.\n+\t* testsuite/libgomp.fortran/udr9.f90: Likewise.\n+\t* testsuite/libgomp.fortran/vla1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/vla2.f90: Likewise.\n+\t* testsuite/libgomp.fortran/vla3.f90: Likewise.\n+\t* testsuite/libgomp.fortran/vla4.f90: Likewise.\n+\t* testsuite/libgomp.fortran/vla5.f90: Likewise.\n+\t* testsuite/libgomp.fortran/vla6.f90: Likewise.\n+\t* testsuite/libgomp.fortran/vla7.f90: Likewise.\n+\t* testsuite/libgomp.fortran/vla8.f90: Likewise.\n+\t* testsuite/libgomp.fortran/workshare1.f90: Likewise.\n+\t* testsuite/libgomp.fortran/workshare2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/abort-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/abort-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/acc_on_device-1-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/acc_on_device-1-2.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/acc_on_device-1-3.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/asyncwait-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/asyncwait-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/asyncwait-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/atomic_capture-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/atomic_rw-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/atomic_update-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/c2.pl: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/clauses-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/collapse-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/collapse-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/collapse-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/collapse-4.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/collapse-5.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/collapse-6.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/collapse-7.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/collapse-8.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/combined-directives-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/combined-reduction.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-4-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-4.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/declare-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/declare-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/declare-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/declare-4.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/declare-5.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/default-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/firstprivate-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/gang-static-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/host_data-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/if-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/implicit-firstprivate-ref.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-2.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit-2.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-update.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-10.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-2.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-3.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-32-1.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-32-2.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-4.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-5.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-6.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-7.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-8.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/map-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/nested-function-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/nested-function-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/nested-function-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/non-scalar-data.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/openacc_version-1.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/openacc_version-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/par-reduction-2-1.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/par-reduction-2-2.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/parallel-reduction.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pointer-align-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pr70643.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pr81352.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pr83920.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pr84028.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/private-variables.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pset-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-4.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-5.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-6.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-7.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-8.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/routine-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/routine-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/routine-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/routine-4.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/routine-5.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/routine-7.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/routine-9.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/subarrays-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/subarrays-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/update-1.f90: Likewise.\n+\n 2018-03-20  Richard Biener  <rguenther@suse.de>\n \n \t* testsuite/libgomp.graphite/force-parallel-4.c: XFAIL one"}, {"sha": "3970adf85552f28d1fc125b6006b60c6da18e3ae", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@\n \n # Plugins for offload execution, Makefile.am fragment.\n #\n-# Copyright (C) 2014-2017 Free Software Foundation, Inc.\n+# Copyright (C) 2014-2018 Free Software Foundation, Inc.\n #\n # Contributed by Mentor Embedded.\n #"}, {"sha": "582ea03c029b6a965054439d6c6dbd70256fe88e", "filename": "libgomp/testsuite/libgomp.fortran/aligned1.f03", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Faligned1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Faligned1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Faligned1.f03?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -42,12 +42,12 @@ subroutine baz (x, c)\n   end do\n   call foo (p, q, c_loc (r(1)), s)\n   do i = 1, 1024\n-    if (p(i) /= i * i + 3 * i + 2) call abort\n+    if (p(i) /= i * i + 3 * i + 2) STOP 1\n     p(i) = i\n   end do\n   call bar (p, q, c_loc (r(1)), s)\n   do i = 1, 1024\n-    if (p(i) /= i * i + 3 * i + 2) call abort\n+    if (p(i) /= i * i + 3 * i + 2) STOP 2\n   end do\n   ! Attempt to create 64-byte aligned allocatable\n   do i = 1, 64\n@@ -65,7 +65,7 @@ subroutine baz (x, c)\n     end do\n     call baz (p, c)\n     do i = 1, 1024\n-      if (p(i) /= i * i + 5 * i + 2) call abort\n+      if (p(i) /= i * i + 5 * i + 2) STOP 3\n     end do\n   end if\n end"}, {"sha": "fac03653da04536c186caba94159973cc9ece33d", "filename": "libgomp/testsuite/libgomp.fortran/alloc-comp-1.f90", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,19 +22,19 @@ subroutine ver_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n     type (dl), intent (in) :: obj\n     integer, intent (in) :: val, cl1, cu1, cl2, cu2\n     logical, intent (in) :: c, f\n-    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) call abort\n+    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) STOP 1\n     if (c) then\n-      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) call abort\n-      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) call abort\n+      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) STOP 2\n+      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) STOP 3\n     end if\n     if (val /= 0) then\n-      if (obj%a /= val .or. obj%b /= val) call abort\n-      if (obj%d /= val .or. obj%e /= val) call abort\n+      if (obj%a /= val .or. obj%b /= val) STOP 4\n+      if (obj%d /= val .or. obj%e /= val) STOP 5\n       if (c) then\n-        if (any (obj%c /= val)) call abort\n+        if (any (obj%c /= val)) STOP 6\n       end if\n       if (f) then\n-        if (obj%f /= val) call abort\n+        if (obj%f /= val) STOP 7\n       end if\n     end if\n   end subroutine ver_dl\n@@ -43,9 +43,9 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     integer, intent (in) :: val, hl, hu, cl1, cu1, cl2, cu2\n     logical, intent (in) :: h, k, c, f\n     integer :: i, j\n-    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) call abort\n+    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) STOP 8\n     if (h) then\n-      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) call abort\n+      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) STOP 9\n       do i = hl, hu\n         call ver_dl (obj%h(i), val, c, cl1, cu1, cl2, cu2, f)\n       end do\n@@ -57,7 +57,7 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     end do\n     if (k) call ver_dl (obj%k, val, c, cl1, cu1, cl2, cu2, f)\n     if (val /= 0) then\n-      if (obj%g /= val .or. obj%i /= val) call abort\n+      if (obj%g /= val .or. obj%i /= val) STOP 10\n     end if\n   end subroutine ver_dt\n   subroutine alloc_dl (obj, val, c, cl1, cu1, cl2, cu2, f)"}, {"sha": "7d035387a3efaf13e60bd5f7e631b2d37daa1e62", "filename": "libgomp/testsuite/libgomp.fortran/alloc-comp-2.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,19 +22,19 @@ subroutine ver_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n     type (dl), intent (in) :: obj\n     integer, intent (in) :: val, cl1, cu1, cl2, cu2\n     logical, intent (in) :: c, f\n-    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) call abort\n+    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) STOP 1\n     if (c) then\n-      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) call abort\n-      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) call abort\n+      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) STOP 2\n+      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) STOP 3\n     end if\n     if (val /= 0) then\n-      if (obj%a /= val .or. obj%b /= val) call abort\n-      if (obj%d /= val .or. obj%e /= val) call abort\n+      if (obj%a /= val .or. obj%b /= val) STOP 4\n+      if (obj%d /= val .or. obj%e /= val) STOP 5\n       if (c) then\n-        if (any (obj%c /= val)) call abort\n+        if (any (obj%c /= val)) STOP 6\n       end if\n       if (f) then\n-        if (obj%f /= val) call abort\n+        if (obj%f /= val) STOP 7\n       end if\n     end if\n   end subroutine ver_dl\n@@ -43,9 +43,9 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     integer, intent (in) :: val, hl, hu, cl1, cu1, cl2, cu2\n     logical, intent (in) :: h, k, c, f\n     integer :: i, j\n-    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) call abort\n+    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) STOP 8\n     if (h) then\n-      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) call abort\n+      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) STOP 9\n       do i = hl, hu\n         call ver_dl (obj%h(i), val, c, cl1, cu1, cl2, cu2, f)\n       end do\n@@ -57,7 +57,7 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     end do\n     if (k) call ver_dl (obj%k, val, c, cl1, cu1, cl2, cu2, f)\n     if (val /= 0) then\n-      if (obj%g /= val .or. obj%i /= val) call abort\n+      if (obj%g /= val .or. obj%i /= val) STOP 10\n     end if\n   end subroutine ver_dt\n   subroutine alloc_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n@@ -122,20 +122,20 @@ subroutine foo (y)\n     logical, parameter :: T = .true.\n     logical :: l\n !$omp parallel private (x, y, z)\n-    if (allocated (x) .or. allocated (y) .or. allocated (z)) call abort\n+    if (allocated (x) .or. allocated (y) .or. allocated (z)) STOP 11\n !$omp end parallel\n !$omp parallel firstprivate (x, y, z)\n-    if (allocated (x) .or. allocated (y) .or. allocated (z)) call abort\n+    if (allocated (x) .or. allocated (y) .or. allocated (z)) STOP 12\n !$omp end parallel\n     l = F\n !$omp parallel sections lastprivate (x, y, z) firstprivate (l)\n !$omp section\n     if (.not. l) then\n-      if (allocated (x) .or. allocated (y) .or. allocated (z)) call abort\n+      if (allocated (x) .or. allocated (y) .or. allocated (z)) STOP 13\n     end if\n !$omp section\n     if (.not. l) then\n-      if (allocated (x) .or. allocated (y) .or. allocated (z)) call abort\n+      if (allocated (x) .or. allocated (y) .or. allocated (z)) STOP 14\n     end if\n     allocate (x, y, z(-3:-3,2:3))\n     call alloc_dt (x, 5, F, 0, 0, T, T, -1, -1, -1, -1, T)\n@@ -148,10 +148,10 @@ subroutine foo (y)\n     call ver_dt (z(-3,3), 23, T, 0, 1, T, T, 2, 2, 2, 2, F)\n !$omp section\n !$omp end parallel sections\n-    if (.not.allocated (x) .or. .not.allocated (y)) call abort\n-    if (.not.allocated (z)) call abort\n-    if (lbound (z, 1) /= -3 .or. ubound (z, 1) /= -3) call abort\n-    if (lbound (z, 2) /= 2 .or. ubound (z, 2) /= 3) call abort\n+    if (.not.allocated (x) .or. .not.allocated (y)) STOP 15\n+    if (.not.allocated (z)) STOP 16\n+    if (lbound (z, 1) /= -3 .or. ubound (z, 1) /= -3) STOP 17\n+    if (lbound (z, 2) /= 2 .or. ubound (z, 2) /= 3) STOP 18\n     call ver_dt (x, 5, F, 0, 0, T, T, -1, -1, -1, -1, T)\n     call ver_dt (y, 23, T, 0, 1, T, T, 2, 2, 2, 2, F)\n     call ver_dt (z(-3,2), 5, F, 0, 0, T, T, -1, -1, -1, -1, T)"}, {"sha": "42ba7b4b7e24260b1286cc4f37b0dee4afe9e668", "filename": "libgomp/testsuite/libgomp.fortran/alloc-comp-3.f90", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Falloc-comp-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,19 +22,19 @@ subroutine ver_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n     type (dl), intent (in) :: obj\n     integer, intent (in) :: val, cl1, cu1, cl2, cu2\n     logical, intent (in) :: c, f\n-    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) call abort\n+    if ((c .neqv. allocated (obj%c)) .or. (f .neqv. allocated (obj%f))) STOP 1\n     if (c) then\n-      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) call abort\n-      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) call abort\n+      if (lbound (obj%c, 1) /= cl1 .or. ubound (obj%c, 1) /= cu1) STOP 2\n+      if (lbound (obj%c, 2) /= cl2 .or. ubound (obj%c, 2) /= cu2) STOP 3\n     end if\n     if (val /= 0) then\n-      if (obj%a /= val .or. obj%b /= val) call abort\n-      if (obj%d /= val .or. obj%e /= val) call abort\n+      if (obj%a /= val .or. obj%b /= val) STOP 4\n+      if (obj%d /= val .or. obj%e /= val) STOP 5\n       if (c) then\n-        if (any (obj%c /= val)) call abort\n+        if (any (obj%c /= val)) STOP 6\n       end if\n       if (f) then\n-        if (obj%f /= val) call abort\n+        if (obj%f /= val) STOP 7\n       end if\n     end if\n   end subroutine ver_dl\n@@ -43,9 +43,9 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     integer, intent (in) :: val, hl, hu, cl1, cu1, cl2, cu2\n     logical, intent (in) :: h, k, c, f\n     integer :: i, j\n-    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) call abort\n+    if ((h .neqv. allocated (obj%h)) .or. (k .neqv. allocated (obj%k))) STOP 8\n     if (h) then\n-      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) call abort\n+      if (lbound (obj%h, 1) /= hl .or. ubound (obj%h, 1) /= hu) STOP 9\n       do i = hl, hu\n         call ver_dl (obj%h(i), val, c, cl1, cu1, cl2, cu2, f)\n       end do\n@@ -57,7 +57,7 @@ subroutine ver_dt (obj, val, h, hl, hu, k, c, cl1, cu1, cl2, cu2, f)\n     end do\n     if (k) call ver_dl (obj%k, val, c, cl1, cu1, cl2, cu2, f)\n     if (val /= 0) then\n-      if (obj%g /= val .or. obj%i /= val) call abort\n+      if (obj%g /= val .or. obj%i /= val) STOP 10\n     end if\n   end subroutine ver_dt\n   subroutine alloc_dl (obj, val, c, cl1, cu1, cl2, cu2, f)\n@@ -124,27 +124,27 @@ subroutine foo (y, z, n)\n     logical, parameter :: F = .false.\n     logical, parameter :: T = .true.\n     logical :: l\n-    if (lbound (x, 1) /= 2 .or. ubound (x, 1) /= 4) call abort\n-    if (lbound (y, 1) /= 3 .or. ubound (y, 1) /= 4) call abort\n+    if (lbound (x, 1) /= 2 .or. ubound (x, 1) /= 4) STOP 11\n+    if (lbound (y, 1) /= 3 .or. ubound (y, 1) /= 4) STOP 12\n     call ver_dt (x(2), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n     call ver_dt (x(n), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n     call ver_dt (y(3), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n     call ver_dt (y(4), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n !$omp parallel private (z)\n-    if (allocated (z)) call abort\n+    if (allocated (z)) STOP 13\n !$omp end parallel\n !$omp parallel firstprivate (z)\n-    if (allocated (z)) call abort\n+    if (allocated (z)) STOP 14\n !$omp end parallel\n     l = F\n !$omp parallel sections lastprivate (z) firstprivate (l)\n !$omp section\n     if (.not. l) then\n-      if (allocated (z)) call abort\n+      if (allocated (z)) STOP 15\n     end if\n !$omp section\n     if (.not. l) then\n-      if (allocated (z)) call abort\n+      if (allocated (z)) STOP 16\n     end if\n     allocate (z(-3:-3,2:3))\n     call alloc_dt (z(-3,2), 5, F, 0, 0, T, T, -1, -1, -1, -1, T)\n@@ -153,9 +153,9 @@ subroutine foo (y, z, n)\n     call ver_dt (z(-3,3), 23, T, 0, 1, T, T, 2, 2, 2, 2, F)\n !$omp section\n !$omp end parallel sections\n-    if (.not.allocated (z)) call abort\n-    if (lbound (z, 1) /= -3 .or. ubound (z, 1) /= -3) call abort\n-    if (lbound (z, 2) /= 2 .or. ubound (z, 2) /= 3) call abort\n+    if (.not.allocated (z)) STOP 17\n+    if (lbound (z, 1) /= -3 .or. ubound (z, 1) /= -3) STOP 18\n+    if (lbound (z, 2) /= 2 .or. ubound (z, 2) /= 3) STOP 19\n     call ver_dt (z(-3,2), 5, F, 0, 0, T, T, -1, -1, -1, -1, T)\n     call ver_dt (z(-3,3), 23, T, 0, 1, T, T, 2, 2, 2, 2, F)\n     call ver_dt (x(n - 1), 0, F, 0, 0, F, F, 0, 0, 0, 0, F)\n@@ -203,8 +203,8 @@ subroutine foo (y, z, n)\n     call alloc_dt (z(-3,2), 5, T, 1, 2, F, T, 2, 3, -2, -2, F)\n     call alloc_dt (z(-3,3), 15, F, 0, 0, T, T, 2, 2, 2, 2, T)\n !$omp parallel firstprivate (x, y, z)\n-    if (lbound (x, 1) /= 2 .or. ubound (x, 1) /= 4) call abort\n-    if (lbound (y, 1) /= 3 .or. ubound (y, 1) /= 4) call abort\n+    if (lbound (x, 1) /= 2 .or. ubound (x, 1) /= 4) STOP 20\n+    if (lbound (y, 1) /= 3 .or. ubound (y, 1) /= 4) STOP 21\n     call ver_dt (x(n - 1), 5, T, 1, 2, F, T, 2, 3, -2, -2, F)\n     call alloc_dt (x(n - 1), 4, T, -3, -1, T, T, -1, -1, 2, 3, T)\n     call ver_dt (x(n - 1), 4, T, -3, -1, T, T, -1, -1, 2, 3, T)"}, {"sha": "b9fd2ee6dbc592d20b8a13225123910a5379c905", "filename": "libgomp/testsuite/libgomp.fortran/allocatable1.f90", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -7,7 +7,7 @@\n   logical :: k, l\n   b(:, :) = 16\n   l = .false.\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 1\n !$omp parallel private (a, b) reduction (.or.:l)\n   l = l.or.allocated (a)\n   allocate (a(3, 6))\n@@ -18,18 +18,18 @@\n   deallocate (a)\n   l = l.or.allocated (a)\n !$omp end parallel\n-  if (allocated (a).or.l) call abort\n+  if (allocated (a).or.l) STOP 2\n   allocate (a(6, 3))\n   a(:, :) = 3\n-  if (.not.allocated (a)) call abort\n+  if (.not.allocated (a)) STOP 3\n   l = l.or.size(a).ne.18.or.size(a,1).ne.6.or.size(a,2).ne.3\n-  if (l) call abort\n+  if (l) STOP 4\n !$omp parallel private (a, b) reduction (.or.:l)\n   l = l.or..not.allocated (a)\n   a(3, 2) = 1\n   b(3, 2) = 1\n !$omp end parallel\n-  if (l.or..not.allocated (a)) call abort\n+  if (l.or..not.allocated (a)) STOP 5\n !$omp parallel firstprivate (a, b) reduction (.or.:l)\n   l = l.or..not.allocated (a)\n   l = l.or.size(a).ne.18.or.size(a,1).ne.6.or.size(a,2).ne.3\n@@ -41,7 +41,7 @@\n   a(:, :) = omp_get_thread_num ()\n   b(:, :) = omp_get_thread_num ()\n !$omp end parallel\n-  if (any (a.ne.3).or.any (b.ne.16).or.l) call abort\n+  if (any (a.ne.3).or.any (b.ne.16).or.l) STOP 6\n   k = .true.\n !$omp parallel do firstprivate (a, b, k) lastprivate (a, b) &\n !$omp & reduction (.or.:l)\n@@ -59,9 +59,9 @@\n     a(:, :) = i + 2\n     b(:, :) = i\n   end do\n-  if (any (a.ne.38).or.any (b.ne.36).or.l) call abort\n+  if (any (a.ne.38).or.any (b.ne.36).or.l) STOP 7\n   deallocate (a)\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 8\n   allocate (a (0:1, 0:3))\n   a(:, :) = 0\n !$omp parallel do reduction (+:a) reduction (.or.:l) &\n@@ -72,10 +72,10 @@\n     a(modulo (i, 2), i / 2) = a(modulo (i, 2), i / 2) + i\n     a(i / 4, modulo (i, 4)) = a(i / 4, modulo (i, 4)) + i\n   end do\n-  if (l) call abort\n+  if (l) STOP 9\n   do i = 0, 1\n     do j = 0, 3\n-      if (a(i, j) .ne. (5*i + 3*j)) call abort\n+      if (a(i, j) .ne. (5*i + 3*j)) STOP 10\n     end do\n   end do\n end"}, {"sha": "9b05dc74143c729b99a5560173b684c8d2d80621", "filename": "libgomp/testsuite/libgomp.fortran/allocatable10.f90", "status": "modified", "additions": 68, "deletions": 68, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable10.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,109 +4,109 @@\n   integer :: i\n !$omp declare reduction (foo : integer : omp_out = omp_out + omp_in) &\n !$omp & initializer (omp_priv = 0)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 1\n   allocate (a, b(6:9), c(3, 8:9))\n   a = 0\n   b = 0\n   c = 0\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+  if (.not.allocated (a)) STOP 2\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 3\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 4\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 5\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 6\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 7\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 8\n !$omp parallel do reduction (+:a, b, c)\n   do i = 1, 10\n-    if (.not.allocated (a)) call abort\n-    if (.not.allocated (b) .or. size (b) /= 4) call abort\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-    if (.not.allocated (c) .or. size (c) /= 6) call abort\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+    if (.not.allocated (a)) STOP 9\n+    if (.not.allocated (b) .or. size (b) /= 4) STOP 10\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 11\n+    if (.not.allocated (c) .or. size (c) /= 6) STOP 12\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 13\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 14\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 15\n     a = a + i\n     b = b + 2 * i\n     c = c + 3 * i\n   end do\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n-  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) call abort\n+  if (.not.allocated (a)) STOP 16\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 17\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 18\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 19\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 20\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 21\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 22\n+  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) STOP 23\n   a = 0\n   b = 0\n   c = 0\n !$omp parallel do reduction (foo : a, b, c)\n   do i = 1, 10\n-    if (.not.allocated (a)) call abort\n-    if (.not.allocated (b) .or. size (b) /= 4) call abort\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-    if (.not.allocated (c) .or. size (c) /= 6) call abort\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+    if (.not.allocated (a)) STOP 24\n+    if (.not.allocated (b) .or. size (b) /= 4) STOP 25\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 26\n+    if (.not.allocated (c) .or. size (c) /= 6) STOP 27\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 28\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 29\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 30\n     a = a + i\n     b = b + 2 * i\n     c = c + 3 * i\n   end do\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n-  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) call abort\n+  if (.not.allocated (a)) STOP 31\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 32\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 33\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 34\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 35\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 36\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 37\n+  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) STOP 38\n   a = 0\n   b = 0\n   c = 0\n !$omp simd reduction (+:a, b, c)\n   do i = 1, 10\n-    if (.not.allocated (a)) call abort\n-    if (.not.allocated (b) .or. size (b) /= 4) call abort\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-    if (.not.allocated (c) .or. size (c) /= 6) call abort\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+    if (.not.allocated (a)) STOP 39\n+    if (.not.allocated (b) .or. size (b) /= 4) STOP 40\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 41\n+    if (.not.allocated (c) .or. size (c) /= 6) STOP 42\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 43\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 44\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 45\n     a = a + i\n     b = b + 2 * i\n     c = c + 3 * i\n   end do\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n-  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) call abort\n+  if (.not.allocated (a)) STOP 46\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 47\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 48\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 49\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 50\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 51\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 52\n+  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) STOP 53\n   a = 0\n   b = 0\n   c = 0\n !$omp simd reduction (foo : a, b, c)\n   do i = 1, 10\n-    if (.not.allocated (a)) call abort\n-    if (.not.allocated (b) .or. size (b) /= 4) call abort\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-    if (.not.allocated (c) .or. size (c) /= 6) call abort\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+    if (.not.allocated (a)) STOP 54\n+    if (.not.allocated (b) .or. size (b) /= 4) STOP 55\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 56\n+    if (.not.allocated (c) .or. size (c) /= 6) STOP 57\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 58\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 59\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 60\n     a = a + i\n     b = b + 2 * i\n     c = c + 3 * i\n   end do\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n-  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) call abort\n+  if (.not.allocated (a)) STOP 61\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 62\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 63\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 64\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 65\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 66\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 67\n+  if (a /= 55 .or. any (b /= 110) .or. any (c /= 165)) STOP 68\n end"}, {"sha": "916dc6e596e0cc8429ffd5e89bf0c7330fb956b6", "filename": "libgomp/testsuite/libgomp.fortran/allocatable11.f90", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable11.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -5,68 +5,68 @@\n   integer, allocatable, save :: a, b(:), c(:,:)\n   integer :: p\n !$omp threadprivate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 1\n \n   call omp_set_dynamic (.false.)\n   call omp_set_num_threads (4)\n \n !$omp parallel num_threads (4)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 2\n !$omp end parallel\n \n   allocate (a, b(6:9), c(3, 8:9))\n   a = 4\n   b = 5\n   c = 6\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+  if (.not.allocated (a)) STOP 3\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 4\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 5\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 6\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 7\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 8\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 9\n \n !$omp parallel num_threads (4) copyin (a, b, c) private (p)\n   p = omp_get_thread_num ()\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n-  if (a /= 4 .or. any (b /= 5) .or. any (c /= 6)) call abort\n+  if (.not.allocated (a)) STOP 10\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 11\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 12\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 13\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 14\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 15\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 16\n+  if (a /= 4 .or. any (b /= 5) .or. any (c /= 6)) STOP 17\n   deallocate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 18\n   allocate (a, b(p:9), c(3, p:7))\n   a = p\n   b = p\n   c = p\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= (10 - p)) call abort\n-  if (lbound (b, 1) /= p .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= (3 * (8 - p))) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= (8 - p)) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= p .or. ubound (c, 2) /= 7) call abort\n-  if (a /= p .or. any (b /= p) .or. any (c /= p)) call abort\n+  if (.not.allocated (a)) STOP 19\n+  if (.not.allocated (b) .or. size (b) /= (10 - p)) STOP 20\n+  if (lbound (b, 1) /= p .or. ubound (b, 1) /= 9) STOP 21\n+  if (.not.allocated (c) .or. size (c) /= (3 * (8 - p))) STOP 22\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= (8 - p)) STOP 23\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 24\n+  if (lbound (c, 2) /= p .or. ubound (c, 2) /= 7) STOP 25\n+  if (a /= p .or. any (b /= p) .or. any (c /= p)) STOP 26\n !$omp end parallel\n \n !$omp parallel num_threads (4) copyin (a, b, c)\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 10) call abort\n-  if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 24) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 8) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 0 .or. ubound (c, 2) /= 7) call abort\n-  if (a /= 0 .or. any (b /= 0) .or. any (c /= 0)) call abort\n+  if (.not.allocated (a)) STOP 27\n+  if (.not.allocated (b) .or. size (b) /= 10) STOP 28\n+  if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 9) STOP 29\n+  if (.not.allocated (c) .or. size (c) /= 24) STOP 30\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 8) STOP 31\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 32\n+  if (lbound (c, 2) /= 0 .or. ubound (c, 2) /= 7) STOP 33\n+  if (a /= 0 .or. any (b /= 0) .or. any (c /= 0)) STOP 34\n !$omp end parallel\n \n   deallocate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 35\n \n !$omp parallel num_threads (4) copyin (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 36\n !$omp end parallel\n end"}, {"sha": "6ccf1c0323c6ec901cf4deb26fa70b416cfd9a7a", "filename": "libgomp/testsuite/libgomp.fortran/allocatable12.f90", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable12.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -2,11 +2,11 @@\n \n   integer, allocatable :: a, b(:), c(:,:)\n   logical :: l\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 1\n \n !$omp parallel private (a, b, c, l)\n   l = .false.\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 2\n \n !$omp single\n   allocate (a, b(6:9), c(3, 8:9))\n@@ -15,60 +15,60 @@\n   c = 6\n !$omp end single copyprivate (a, b, c)\n \n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n-  if (a /= 4 .or. any (b /= 5) .or. any (c /= 6)) call abort\n+  if (.not.allocated (a)) STOP 3\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 4\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 5\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 6\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 7\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 8\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 9\n+  if (a /= 4 .or. any (b /= 5) .or. any (c /= 6)) STOP 10\n \n !$omp single\n   deallocate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 11\n   allocate (a, b(0:4), c(3, 2:7))\n   a = 1\n   b = 2\n   c = 3\n !$omp end single copyprivate (a, b, c)\n \n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 5) call abort\n-  if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 4) call abort\n-  if (.not.allocated (c) .or. size (c) /= 18) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 6) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 2 .or. ubound (c, 2) /= 7) call abort\n-  if (a /= 1 .or. any (b /= 2) .or. any (c /= 3)) call abort\n+  if (.not.allocated (a)) STOP 12\n+  if (.not.allocated (b) .or. size (b) /= 5) STOP 13\n+  if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 4) STOP 14\n+  if (.not.allocated (c) .or. size (c) /= 18) STOP 15\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 6) STOP 16\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 17\n+  if (lbound (c, 2) /= 2 .or. ubound (c, 2) /= 7) STOP 18\n+  if (a /= 1 .or. any (b /= 2) .or. any (c /= 3)) STOP 19\n \n !$omp single\n   l = .true.\n   deallocate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 20\n   allocate (a, b(2:6), c(3:5, 3:8))\n   a = 7\n   b = 8\n   c = 9\n !$omp end single copyprivate (a, b, c)\n \n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 5) call abort\n+  if (.not.allocated (a)) STOP 21\n+  if (.not.allocated (b) .or. size (b) /= 5) STOP 22\n   if (l) then\n-    if (lbound (b, 1) /= 2 .or. ubound (b, 1) /= 6) call abort\n+    if (lbound (b, 1) /= 2 .or. ubound (b, 1) /= 6) STOP 23\n   else\n-    if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 4) call abort\n+    if (lbound (b, 1) /= 0 .or. ubound (b, 1) /= 4) STOP 24\n   end if\n-  if (.not.allocated (c) .or. size (c) /= 18) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 6) call abort\n+  if (.not.allocated (c) .or. size (c) /= 18) STOP 25\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 6) STOP 26\n   if (l) then\n-    if (lbound (c, 1) /= 3 .or. ubound (c, 1) /= 5) call abort\n-    if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 8) call abort\n+    if (lbound (c, 1) /= 3 .or. ubound (c, 1) /= 5) STOP 27\n+    if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 8) STOP 28\n   else\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-    if (lbound (c, 2) /= 2 .or. ubound (c, 2) /= 7) call abort\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 29\n+    if (lbound (c, 2) /= 2 .or. ubound (c, 2) /= 7) STOP 30\n   end if\n-  if (a /= 7 .or. any (b /= 8) .or. any (c /= 9)) call abort\n+  if (a /= 7 .or. any (b /= 8) .or. any (c /= 9)) STOP 31\n \n !$omp end parallel\n end"}, {"sha": "1361e6d1a919058ea9d0f9ee5368ec5741482112", "filename": "libgomp/testsuite/libgomp.fortran/allocatable2.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -7,7 +7,7 @@\n   integer :: n\n   logical :: l\n !$omp threadprivate (a)\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 1\n   call omp_set_dynamic (.false.)\n   l = .false.\n !$omp parallel num_threads (4) reduction(.or.:l)\n@@ -16,7 +16,7 @@\n   l = l.or..not.allocated (a)\n   l = l.or.size(a).ne.12.or.size(a,1).ne.3.or.size(a,2).ne.4\n !$omp end parallel\n-  if (l.or.any(a.ne.6)) call abort ()\n+  if (l.or.any(a.ne.6)) STOP 1\n !$omp parallel num_threads (4) copyin (a) reduction(.or.:l) private (b)\n   l = l.or.allocated (b)\n   l = l.or..not.allocated (a)\n@@ -37,11 +37,11 @@\n   deallocate (b)\n   l = l.or.allocated (b)\n !$omp end parallel\n-  if (n.lt.0 .or. n.ge.4) call abort\n-  if (l.or.any(a.ne.(n + 36))) call abort\n+  if (n.lt.0 .or. n.ge.4) STOP 2\n+  if (l.or.any(a.ne.(n + 36))) STOP 3\n !$omp parallel num_threads (4) reduction(.or.:l)\n   deallocate (a)\n   l = l.or.allocated (a)\n !$omp end parallel\n-  if (l.or.allocated (a)) call abort\n+  if (l.or.allocated (a)) STOP 4\n end"}, {"sha": "03ed1ac3f1adc5cebc60cea5f610f7f35dfe8459", "filename": "libgomp/testsuite/libgomp.fortran/allocatable3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,7 +4,7 @@\n   integer :: i\n   logical :: l\n   l = .false.\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 1\n !$omp parallel private (a) reduction (.or.:l)\n   allocate (a (-7:-5))\n   l = l.or..not.allocated (a)"}, {"sha": "0b0ac174fad69d4e62e2c3c76d91a840e8e52b87", "filename": "libgomp/testsuite/libgomp.fortran/allocatable4.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,7 +6,7 @@\n   logical :: k, l\n   b(:, :) = 16\n   l = .false.\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 1\n !$omp task private (a, b) shared (l)\n   l = l.or.allocated (a)\n   allocate (a(3, 6))\n@@ -18,19 +18,19 @@\n   l = l.or.allocated (a)\n !$omp end task\n !$omp taskwait\n-  if (allocated (a).or.l) call abort\n+  if (allocated (a).or.l) STOP 2\n   allocate (a(6, 3))\n   a(:, :) = 3\n-  if (.not.allocated (a)) call abort\n+  if (.not.allocated (a)) STOP 3\n   l = l.or.size(a).ne.18.or.size(a,1).ne.6.or.size(a,2).ne.3\n-  if (l) call abort\n+  if (l) STOP 4\n !$omp task private (a, b) shared (l)\n   l = l.or..not.allocated (a)\n   a(3, 2) = 1\n   b(3, 2) = 1\n !$omp end task\n !$omp taskwait\n-  if (l.or..not.allocated (a)) call abort\n+  if (l.or..not.allocated (a)) STOP 5\n !$omp task firstprivate (a, b) shared (l)\n   l = l.or..not.allocated (a)\n   l = l.or.size(a).ne.18.or.size(a,1).ne.6.or.size(a,2).ne.3\n@@ -43,5 +43,5 @@\n   b(:, :) = 8\n !$omp end task\n !$omp taskwait\n-  if (any (a.ne.3).or.any (b.ne.16).or.l) call abort\n+  if (any (a.ne.3).or.any (b.ne.16).or.l) STOP 6\n end"}, {"sha": "20ac6012ebd0ff4a8b635ddd4b4042580613c1df", "filename": "libgomp/testsuite/libgomp.fortran/allocatable5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,6 +12,6 @@ program pr42866\n       a = a + 2\n     !$omp end sections\n   !$omp end parallel\n-  if (any (a.ne.3)) call abort\n+  if (any (a.ne.3)) STOP 1\n   deallocate (a)\n end"}, {"sha": "444af1dd713fdc5dd0dbb5de5a547963c99f3014", "filename": "libgomp/testsuite/libgomp.fortran/allocatable6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -25,10 +25,10 @@ subroutine sub (a, b, c, d, n)\n     else if (i .gt. 1 .and. i .lt. 9) then\n       j = 7\n     end if\n-    if (c(i) .ne. j) call abort\n+    if (c(i) .ne. j) STOP 1\n     j = 179 - modulo (i, 11)\n     if (i .gt. 1 .and. i .lt. 9) j = i\n-    if (d(i) .ne. j) call abort\n+    if (d(i) .ne. j) STOP 2\n   end do\n   deallocate (a, b, c, d)\n end"}, {"sha": "787b03559e251651cd4c232f480e4a2144f93612", "filename": "libgomp/testsuite/libgomp.fortran/allocatable7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,5 +12,5 @@\n   deallocate (a)\n   l = l .or. allocated (a)\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 1\n end"}, {"sha": "84b18f34940f6fe35c70eed6568477745ea334f7", "filename": "libgomp/testsuite/libgomp.fortran/allocatable8.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable8.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -5,10 +5,10 @@\n   integer, save, allocatable :: a(:, :)\n   logical :: l\n !$omp threadprivate (a)\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 1\n   l = .false.\n !$omp parallel copyin (a) num_threads (4) reduction(.or.:l)\n   l = l.or.allocated (a)\n !$omp end parallel\n-  if (l.or.allocated (a)) call abort\n+  if (l.or.allocated (a)) STOP 2\n end"}, {"sha": "c7decfb4b33f2b0d0237c450b383dd7d1dc8892c", "filename": "libgomp/testsuite/libgomp.fortran/allocatable9.f90", "status": "modified", "additions": 105, "deletions": 105, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable9.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -2,155 +2,155 @@\n \n   integer, allocatable :: a, b(:), c(:,:)\n   logical :: l\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 1\n !$omp parallel private (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 2\n   allocate (a, b(-7:-1), c(2:3, 3:5))\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 7) call abort\n-  if (lbound (b, 1) /= -7 .or. ubound (b, 1) /= -1) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 2 .or. size (c, 2) /= 3) call abort\n-  if (lbound (c, 1) /= 2 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 5) call abort\n+  if (.not.allocated (a)) STOP 3\n+  if (.not.allocated (b) .or. size (b) /= 7) STOP 4\n+  if (lbound (b, 1) /= -7 .or. ubound (b, 1) /= -1) STOP 5\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 6\n+  if (size (c, 1) /= 2 .or. size (c, 2) /= 3) STOP 7\n+  if (lbound (c, 1) /= 2 .or. ubound (c, 1) /= 3) STOP 8\n+  if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 5) STOP 9\n   a = 4\n   b = 3\n   c = 2\n !$omp end parallel\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 10\n !$omp parallel firstprivate (a, b, c)\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 11\n   allocate (a, b(-7:-1), c(2:3, 3:5))\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 7) call abort\n-  if (lbound (b, 1) /= -7 .or. ubound (b, 1) /= -1) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 2 .or. size (c, 2) /= 3) call abort\n-  if (lbound (c, 1) /= 2 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 5) call abort\n+  if (.not.allocated (a)) STOP 12\n+  if (.not.allocated (b) .or. size (b) /= 7) STOP 13\n+  if (lbound (b, 1) /= -7 .or. ubound (b, 1) /= -1) STOP 14\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 15\n+  if (size (c, 1) /= 2 .or. size (c, 2) /= 3) STOP 16\n+  if (lbound (c, 1) /= 2 .or. ubound (c, 1) /= 3) STOP 17\n+  if (lbound (c, 2) /= 3 .or. ubound (c, 2) /= 5) STOP 18\n   a = 4\n   b = 3\n   c = 2\n !$omp end parallel\n-  if (allocated (a) .or. allocated (b) .or. allocated (c)) call abort\n+  if (allocated (a) .or. allocated (b) .or. allocated (c)) STOP 19\n   allocate (a, b(6:9), c(3, 8:9))\n   a = 2\n   b = 4\n   c = 5\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+  if (.not.allocated (a)) STOP 20\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 21\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 22\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 23\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 24\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 25\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 26\n !$omp parallel firstprivate (a, b, c)\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n-  if (a /= 2 .or. any (b .ne. 4) .or. any (c .ne. 5)) call abort\n+  if (.not.allocated (a)) STOP 27\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 28\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 29\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 30\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 31\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 32\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 33\n+  if (a /= 2 .or. any (b .ne. 4) .or. any (c .ne. 5)) STOP 34\n   deallocate (a)\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 35\n   allocate (a)\n   a = 8\n   b = (/ 1, 2, 3 /)\n   c = reshape ((/ 1, 2, 3, 4, 5, 6, 7, 8 /), (/ 2, 4 /))\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 3) call abort\n-  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) call abort\n-  if (.not.allocated (c) .or. size (c) /= 8) call abort\n-  if (size (c, 1) /= 2 .or. size (c, 2) /= 4) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) call abort\n-  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) call abort\n-  if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) call abort\n+  if (.not.allocated (a)) STOP 36\n+  if (.not.allocated (b) .or. size (b) /= 3) STOP 37\n+  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) STOP 38\n+  if (.not.allocated (c) .or. size (c) /= 8) STOP 39\n+  if (size (c, 1) /= 2 .or. size (c, 2) /= 4) STOP 40\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) STOP 41\n+  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) STOP 42\n+  if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) STOP 43\n !$omp end parallel\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 4) call abort\n-  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-  if (.not.allocated (c) .or. size (c) /= 6) call abort\n-  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n-  if (a /= 2 .or. any (b .ne. 4) .or. any (c .ne. 5)) call abort\n+  if (.not.allocated (a)) STOP 44\n+  if (.not.allocated (b) .or. size (b) /= 4) STOP 45\n+  if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 46\n+  if (.not.allocated (c) .or. size (c) /= 6) STOP 47\n+  if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 48\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 49\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 50\n+  if (a /= 2 .or. any (b .ne. 4) .or. any (c .ne. 5)) STOP 51\n   l = .false.\n !$omp parallel sections lastprivate (a, b, c) firstprivate (l)\n !$omp section\n-  if (.not.allocated (a)) call abort\n+  if (.not.allocated (a)) STOP 52\n   if (l) then\n-    if (.not.allocated (b) .or. size (b) /= 6) call abort\n-    if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) call abort\n-    if (.not.allocated (c) .or. size (c) /= 8) call abort\n-    if (size (c, 1) /= 4 .or. size (c, 2) /= 2) call abort\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) call abort\n-    if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) call abort\n-    if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) call abort\n+    if (.not.allocated (b) .or. size (b) /= 6) STOP 53\n+    if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) STOP 54\n+    if (.not.allocated (c) .or. size (c) /= 8) STOP 55\n+    if (size (c, 1) /= 4 .or. size (c, 2) /= 2) STOP 56\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) STOP 57\n+    if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) STOP 58\n+    if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) STOP 59\n   else\n-    if (.not.allocated (b) .or. size (b) /= 4) call abort\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-    if (.not.allocated (c) .or. size (c) /= 6) call abort\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+    if (.not.allocated (b) .or. size (b) /= 4) STOP 60\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 61\n+    if (.not.allocated (c) .or. size (c) /= 6) STOP 62\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 63\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 64\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 65\n   end if\n   l = .true.\n   deallocate (a)\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 66\n   allocate (a)\n   a = 8\n   b = (/ 1, 2, 3 /)\n   c = reshape ((/ 1, 2, 3, 4, 5, 6, 7, 8 /), (/ 2, 4 /))\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 3) call abort\n-  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) call abort\n-  if (.not.allocated (c) .or. size (c) /= 8) call abort\n-  if (size (c, 1) /= 2 .or. size (c, 2) /= 4) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) call abort\n-  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) call abort\n-  if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) call abort\n+  if (.not.allocated (a)) STOP 67\n+  if (.not.allocated (b) .or. size (b) /= 3) STOP 68\n+  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) STOP 69\n+  if (.not.allocated (c) .or. size (c) /= 8) STOP 70\n+  if (size (c, 1) /= 2 .or. size (c, 2) /= 4) STOP 71\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) STOP 72\n+  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) STOP 73\n+  if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) STOP 74\n !$omp section\n-  if (.not.allocated (a)) call abort\n+  if (.not.allocated (a)) STOP 75\n   if (l) then\n-    if (.not.allocated (b) .or. size (b) /= 3) call abort\n-    if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) call abort\n-    if (.not.allocated (c) .or. size (c) /= 8) call abort\n-    if (size (c, 1) /= 2 .or. size (c, 2) /= 4) call abort\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) call abort\n-    if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) call abort\n-    if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) call abort\n+    if (.not.allocated (b) .or. size (b) /= 3) STOP 76\n+    if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 3) STOP 77\n+    if (.not.allocated (c) .or. size (c) /= 8) STOP 78\n+    if (size (c, 1) /= 2 .or. size (c, 2) /= 4) STOP 79\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 2) STOP 80\n+    if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 4) STOP 81\n+    if (a /= 8 .or. b(2) /= 2 .or. c(1, 2) /= 3) STOP 82\n   else\n-    if (.not.allocated (b) .or. size (b) /= 4) call abort\n-    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) call abort\n-    if (.not.allocated (c) .or. size (c) /= 6) call abort\n-    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) call abort\n-    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) call abort\n-    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) call abort\n+    if (.not.allocated (b) .or. size (b) /= 4) STOP 83\n+    if (lbound (b, 1) /= 6 .or. ubound (b, 1) /= 9) STOP 84\n+    if (.not.allocated (c) .or. size (c) /= 6) STOP 85\n+    if (size (c, 1) /= 3 .or. size (c, 2) /= 2) STOP 86\n+    if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 3) STOP 87\n+    if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 9) STOP 88\n   end if\n   l = .true.\n   deallocate (a)\n-  if (allocated (a)) call abort\n+  if (allocated (a)) STOP 89\n   allocate (a)\n   a = 12\n   b = (/ 9, 8, 7, 6, 5, 4 /)\n   c = reshape ((/ 1, 2, 3, 4, 5, 6, 7, 8 /), (/ 4, 2 /))\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 6) call abort\n-  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) call abort\n-  if (.not.allocated (c) .or. size (c) /= 8) call abort\n-  if (size (c, 1) /= 4 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) call abort\n-  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) call abort\n-  if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) call abort\n+  if (.not.allocated (a)) STOP 90\n+  if (.not.allocated (b) .or. size (b) /= 6) STOP 91\n+  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) STOP 92\n+  if (.not.allocated (c) .or. size (c) /= 8) STOP 93\n+  if (size (c, 1) /= 4 .or. size (c, 2) /= 2) STOP 94\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) STOP 95\n+  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) STOP 96\n+  if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) STOP 97\n !$omp end parallel sections\n-  if (.not.allocated (a)) call abort\n-  if (.not.allocated (b) .or. size (b) /= 6) call abort\n-  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) call abort\n-  if (.not.allocated (c) .or. size (c) /= 8) call abort\n-  if (size (c, 1) /= 4 .or. size (c, 2) /= 2) call abort\n-  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) call abort\n-  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) call abort\n-  if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) call abort\n+  if (.not.allocated (a)) STOP 98\n+  if (.not.allocated (b) .or. size (b) /= 6) STOP 99\n+  if (lbound (b, 1) /= 1 .or. ubound (b, 1) /= 6) STOP 100\n+  if (.not.allocated (c) .or. size (c) /= 8) STOP 101\n+  if (size (c, 1) /= 4 .or. size (c, 2) /= 2) STOP 102\n+  if (lbound (c, 1) /= 1 .or. ubound (c, 1) /= 4) STOP 103\n+  if (lbound (c, 2) /= 1 .or. ubound (c, 2) /= 2) STOP 104\n+  if (a /= 12 .or. b(2) /= 8 .or. c(1, 2) /= 5) STOP 105\n end"}, {"sha": "ad9b763425f19768d435b6990af17c125bf5194e", "filename": "libgomp/testsuite/libgomp.fortran/appendix-a/a.18.1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fappendix-a%2Fa.18.1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fappendix-a%2Fa.18.1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fappendix-a%2Fa.18.1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -53,7 +53,7 @@ PROGRAM A18\n                 NEIGHBOR = I - 1\n           ENDIF\n           IF (RESULT(I) .NE. I * 2 + NEIGHBOR * 2) THEN\n-            CALL ABORT\n+            STOP 1\n           ENDIF\n         ENDDO\n         END PROGRAM A18"}, {"sha": "8b09e6e93241a0312af152592f2dc4c6ca8dfbe2", "filename": "libgomp/testsuite/libgomp.fortran/appendix-a/a.19.1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fappendix-a%2Fa.19.1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fappendix-a%2Fa.19.1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fappendix-a%2Fa.19.1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -55,6 +55,6 @@ PROGRAM A19\n         RESULT = G(10)\n         PRINT *, RESULT\n         IF (RESULT .NE. 30) THEN\n-          CALL ABORT\n+          STOP 1\n         ENDIF\n       END PROGRAM A19"}, {"sha": "c7930c7644a25f3bbb9d3f00650e47a40701d463", "filename": "libgomp/testsuite/libgomp.fortran/associate1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,12 +12,12 @@ program associate1\n !$omp parallel private(v, a) default(none)\n   v = -1\n   a = 2.5\n-  if (v /= -1 .or. u /= 15) call abort\n-  if (a(2,1) /= 2.5 .or. b /= 3.5) call abort\n+  if (v /= -1 .or. u /= 15) STOP 1\n+  if (a(2,1) /= 2.5 .or. b /= 3.5) STOP 2\n   associate(u => v, b => a(2, 1))\n-  if (u /= -1 .or. b /= 2.5) call abort\n+  if (u /= -1 .or. b /= 2.5) STOP 3\n   end associate\n-  if (u /= 15 .or. b /= 3.5) call abort\n+  if (u /= 15 .or. b /= 3.5) STOP 4\n !$omp end parallel\n   end associate\n end program"}, {"sha": "fbeae95b18f313b7a3c8df6797fc1909f6542422", "filename": "libgomp/testsuite/libgomp.fortran/associate2.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -20,12 +20,12 @@ program associate2\n !$omp parallel private(v, a) default(none)\n   v = -1\n   forall (k = 1:3, l = 1:3) a(k, l)%a(:,:) = 2.5\n-  if (v(3) /= -1 .or. u(3) /= 15) call abort\n-  if (a(2,1)%a(1,2) /= 2.5 .or. b(1,2) /= 3.5) call abort\n+  if (v(3) /= -1 .or. u(3) /= 15) STOP 1\n+  if (a(2,1)%a(1,2) /= 2.5 .or. b(1,2) /= 3.5) STOP 2\n   associate(u => v, b => a(2, 1)%a)\n-  if (u(3) /= -1 .or. b(1,2) /= 2.5) call abort\n+  if (u(3) /= -1 .or. b(1,2) /= 2.5) STOP 3\n   end associate\n-  if (u(3) /= 15 .or. b(1,2) /= 3.5) call abort\n+  if (u(3) /= 15 .or. b(1,2) /= 3.5) STOP 4\n !$omp end parallel\n   end associate\n   forall (k = 1:3, l = 1:3) a(k, l)%c(:,:)%i = 7\n@@ -35,12 +35,12 @@ program associate2\n   associate(d => a(i, j)%c(2,:)%i)\n !$omp parallel private(a) default(none)\n   forall (k = 1:3, l = 1:3) a(k, l)%c(:,:)%i = 15\n-  if (a(1,2)%c(2,1)%i /= 15 .or. d(1) /= 9) call abort\n-  if (a(1,2)%c(2,2)%i /= 15 .or. d(2) /= 7) call abort\n+  if (a(1,2)%c(2,1)%i /= 15 .or. d(1) /= 9) STOP 5\n+  if (a(1,2)%c(2,2)%i /= 15 .or. d(2) /= 7) STOP 6\n   associate(d => a(2,1)%c(2,:)%i)\n-  if (d(1) /= 15 .or. d(2) /= 15) call abort\n+  if (d(1) /= 15 .or. d(2) /= 15) STOP 7\n   end associate\n-  if (d(1) /= 9 .or. d(2) /= 7) call abort\n+  if (d(1) /= 9 .or. d(2) /= 7) STOP 8\n !$omp end parallel\n   end associate\n end program"}, {"sha": "da788a467ea9737336d056d52e1c0546e030e75c", "filename": "libgomp/testsuite/libgomp.fortran/associate3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fassociate3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -16,5 +16,5 @@\n     if (j.eq.1) k = 7\n   end do\n   end associate\n-  if (any (v%f(:).ne.21.) .or. i.ne.7) call abort\n+  if (any (v%f(:).ne.21.) .or. i.ne.7) STOP 1\n end"}, {"sha": "84009ec2ac95e8d26f3d326bdc6983fe761cbad1", "filename": "libgomp/testsuite/libgomp.fortran/cancel-do-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -8,7 +8,7 @@\n     !$omp do\n       do i = 0, 999\n \t!$omp cancel do\n-\tif (omp_get_cancellation ()) call abort\n+\tif (omp_get_cancellation ()) STOP 1\n       enddo\n   !$omp endparallel\n end"}, {"sha": "9d8e91cec9813a0ec523ccb931bc6898b7416ddb", "filename": "libgomp/testsuite/libgomp.fortran/cancel-do-2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-do-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,7 +22,7 @@ subroutine foo (x)\n       !$omp do\n \tdo i = 0, 999\n \t  !$omp cancel do if (x(1))\n-\t  call abort\n+\t  STOP 1\n \tend do\n       !$omp do\n \tdo i = 0, 999\n@@ -47,7 +47,7 @@ subroutine foo (x)\n \tend do\n       !$omp end do\n     !$omp end parallel\n-    if (v.ne.3000.or.w.ne.0) call abort\n+    if (v.ne.3000.or.w.ne.0) STOP 2\n     !$omp parallel num_threads (32) shared (v, w)\n       ! None of these cancel directives should actually cancel anything,\n       ! but the compiler shouldn't know that and thus should use cancellable\n@@ -56,7 +56,7 @@ subroutine foo (x)\n       !$omp do\n \tdo i = 0, 999\n \t  !$omp cancel do if (x(1))\n-\t  call abort\n+\t  STOP 3\n \tend do\n       !$omp cancel parallel if (omp_get_thread_num ().eq.2.and.x(5))\n       !$omp do\n@@ -85,6 +85,6 @@ subroutine foo (x)\n       !$omp end do\n       !$omp cancel parallel if (omp_get_thread_num ().eq.5.and.x(5))\n     !$omp end parallel\n-    if (v.ne.6000.or.w.ne.0) call abort\n+    if (v.ne.6000.or.w.ne.0) STOP 4\n   end subroutine\n end"}, {"sha": "dc0f69b13ed5af7ecc38b353fd382782f3d865f2", "filename": "libgomp/testsuite/libgomp.fortran/cancel-parallel-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-parallel-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-parallel-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-parallel-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -5,6 +5,6 @@\n \n   !$omp parallel num_threads(32)\n     !$omp cancel parallel\n-    if (omp_get_cancellation ()) call abort\n+    if (omp_get_cancellation ()) STOP 1\n   !$omp end parallel\n end"}, {"sha": "7e1d4b37534f87e386c959b276967491b6b7edd7", "filename": "libgomp/testsuite/libgomp.fortran/cancel-sections-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-sections-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-sections-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-sections-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -7,16 +7,16 @@\n     !$omp parallel num_threads(32)\n       !$omp sections\n \t  !$omp cancel sections\n-\t  call abort\n+\t  STOP 1\n \t!$omp section\n \t  !$omp cancel sections\n-\t  call abort\n+\t  STOP 2\n \t!$omp section\n \t  !$omp cancel sections\n-\t  call abort\n+\t  STOP 3\n \t!$omp section\n \t  !$omp cancel sections\n-\t  call abort\n+\t  STOP 4\n       !$omp end sections\n     !$omp end parallel\n   end if"}, {"sha": "54c52208b97240cd400577eade1668926bafcadc", "filename": "libgomp/testsuite/libgomp.fortran/cancel-taskgroup-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-taskgroup-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-taskgroup-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcancel-taskgroup-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -8,7 +8,7 @@\n     !$omp taskgroup\n       !$omp task\n \t!$omp cancel taskgroup\n-\tcall abort\n+\tSTOP 1\n       !$omp endtask\n     !$omp endtaskgroup\n   !$omp endparallel"}, {"sha": "a672b7d2fdc3b1d8e468d7d8cacdd137fc6c4bf3", "filename": "libgomp/testsuite/libgomp.fortran/character1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -67,6 +67,6 @@ subroutine test (p, q)\n       l = l .or. f .ne. 'YY' .or. p .ne. 'm3' .or. r .ne. 'M3'\n     end if\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine test\n end"}, {"sha": "20a3f07c4b3c98d83a28e1ec2cc13cc6ed6c5548", "filename": "libgomp/testsuite/libgomp.fortran/character2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcharacter2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -56,6 +56,6 @@ subroutine test (p, q, n)\n       l = l .or. t .ne. '456'\n     end if\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine test\n end"}, {"sha": "3777b52024559f939397160620594754ff9e1272", "filename": "libgomp/testsuite/libgomp.fortran/collapse1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,5 +22,5 @@ program collapse1\n       end do\n     end do\n   !$omp end parallel do\n-  if (l) call abort\n+  if (l) STOP 1\n end program collapse1"}, {"sha": "41126372673f8b726fb65ef5f8e858e06e43da04", "filename": "libgomp/testsuite/libgomp.fortran/collapse2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -24,7 +24,7 @@ subroutine test1\n         end do\n       end do firstdo\n     !$omp end parallel do\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine test1\n \n   subroutine test2\n@@ -37,7 +37,7 @@ subroutine test2\n           enddo\n         enddo dokk\n 115   continue\n-    if (any(a(1:3,1:3,1:3).ne.1)) call abort\n+    if (any(a(1:3,1:3,1:3).ne.1)) STOP 2\n \n     !$omp do collapse(3)\n  dol: do 120 l=1,3\n@@ -47,7 +47,7 @@ subroutine test2\n           enddo\n         enddo doll\n 120   end do dol\n-    if (any(a(1:3,1:3,1:3).ne.2)) call abort\n+    if (any(a(1:3,1:3,1:3).ne.2)) STOP 3\n   end subroutine test2\n \n end program collapse2"}, {"sha": "001dc2ac630adbf7408f9aa2f94972d448ec5d6c", "filename": "libgomp/testsuite/libgomp.fortran/collapse3.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -24,8 +24,8 @@ subroutine test1\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) call abort\n-    if (m.ne.(600+40+18)) call abort\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 1\n+    if (m.ne.(600+40+18)) STOP 2\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -56,8 +56,8 @@ subroutine test2(v1, v2, v3, v4, v5, v6)\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) call abort\n-    if (m.ne.(600+40+18)) call abort\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 3\n+    if (m.ne.(600+40+18)) STOP 4\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -88,8 +88,8 @@ subroutine test3(v1, v2, v3, v4, v5, v6, v7, v8, v9)\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) call abort\n-    if (m.ne.(600+40+18)) call abort\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 5\n+    if (m.ne.(600+40+18)) STOP 6\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -120,8 +120,8 @@ subroutine test4\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) call abort\n-    if (m.ne.(600+40+18)) call abort\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 7\n+    if (m.ne.(600+40+18)) STOP 8\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -153,8 +153,8 @@ subroutine test5(v1, v2, v3, v4, v5, v6)\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) call abort\n-    if (m.ne.(600+40+18)) call abort\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 9\n+    if (m.ne.(600+40+18)) STOP 10\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19\n@@ -186,8 +186,8 @@ subroutine test6(v1, v2, v3, v4, v5, v6, v7, v8, v9)\n           end do\n         end do\n       end do\n-    if (i.ne.7.or.j.ne.5.or.k.ne.19) call abort\n-    if (m.ne.(600+40+18)) call abort\n+    if (i.ne.7.or.j.ne.5.or.k.ne.19) STOP 11\n+    if (m.ne.(600+40+18)) STOP 12\n     do i = 1, 7\n       do j = -3, 5\n         do k = 12, 19"}, {"sha": "2019d8dcccd7d57467fd115abe18a545c4a066f5", "filename": "libgomp/testsuite/libgomp.fortran/collapse4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcollapse4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -8,5 +8,5 @@\n         end do\n       end do\n     end do\n-  if (i .ne. 18 .or. j .ne. 7 .or. k .ne. 6) call abort\n+  if (i .ne. 18 .or. j .ne. 7 .or. k .ne. 6) STOP 1\n end"}, {"sha": "28e2aa62d805a937462029fb77dbebc79e485d64", "filename": "libgomp/testsuite/libgomp.fortran/crayptr1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -26,7 +26,7 @@\n   l = l .or. p .ne. 3\n !$omp end parallel\n \n-  if (l) call abort\n+  if (l) STOP 1\n \n   l = .false.\n !$omp parallel num_threads (2) reduction (.or.:l) default (private)\n@@ -41,6 +41,6 @@\n   l = l .or. p .ne. 3 * omp_get_thread_num () + 5\n !$omp end parallel\n \n-  if (l) call abort\n+  if (l) STOP 2\n \n end"}, {"sha": "2847de92e374f4e9333bc0c6d6bfa4d72535ae09", "filename": "libgomp/testsuite/libgomp.fortran/crayptr2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -27,5 +27,5 @@\n   l = l .or. (p .ne. d + 1)\n !$omp end parallel\n \n-  if (l) call abort\n+  if (l) STOP 1\n end"}, {"sha": "bb48f9e73719c0f8f4a8ac5ebcc1b65d6d511c8c", "filename": "libgomp/testsuite/libgomp.fortran/crayptr3.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fcrayptr3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,7 +18,7 @@\n   l = l .or. (p .ne. (2 + omp_get_thread_num ()))\n !$omp end parallel\n \n-  if (l) call abort\n+  if (l) STOP 1\n \n   l = .false.\n   ip = loc (a)\n@@ -31,6 +31,6 @@\n     l = l .or. (p .ne. (2 + i))\n   end do\n \n-  if (l) call abort\n-  if (p .ne. 3) call abort\n+  if (l) STOP 2\n+  if (p .ne. 3) STOP 3\n end"}, {"sha": "c5b021dd95165d1c49f68bba869e6dc41dd60976", "filename": "libgomp/testsuite/libgomp.fortran/declare-simd-1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -61,7 +61,7 @@ end function bar\n   do i = 1, 128\n     b(i) = bar (a(i), 2 * i, b(i))\n   end do\n-  if (any (b.ne.d)) call abort\n+  if (any (b.ne.d)) STOP 1\n   !$omp simd\n   do i = 1, 128\n     b(i) = i * 2.0\n@@ -71,7 +71,7 @@ end function bar\n     b(i) = baz (7.0_8, 2, b(i))\n   end do\n   do i = 1, 128\n-    if (b(i).ne.(7.0 + 4.0 * i)) call abort\n+    if (b(i).ne.(7.0 + 4.0 * i)) STOP 2\n   end do\n contains\n   function baz (x, y, z)"}, {"sha": "85cea9cab0ae1a40ed10ad70e9dbe686e2cf293c", "filename": "libgomp/testsuite/libgomp.fortran/declare-simd-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-simd-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,6 +17,6 @@ subroutine bar\n     b(i) = foo (7.0_8, 5 * i, b(i))\n   end do\n   do i = 1, 128\n-    if (b(i).ne.(7.0 + 10.0 * i * i)) call abort\n+    if (b(i).ne.(7.0 + 10.0 * i * i)) STOP 1\n   end do\n end subroutine bar"}, {"sha": "1fbc0dc0cb7ebb10a80bb86eb2634be63eddff6a", "filename": "libgomp/testsuite/libgomp.fortran/declare-target-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdeclare-target-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -14,5 +14,5 @@ subroutine foo\n   !$omp end target\n \n   !$omp target update from(var_x)\n-  if (var_x /= 20) call abort\n+  if (var_x /= 20) STOP 1\n end subroutine foo"}, {"sha": "5f7bb5faf21711755f1c697004812d266be6c8a1", "filename": "libgomp/testsuite/libgomp.fortran/depend-1.f90", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,7 +21,7 @@ subroutine dep\n           x = 2\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 1\n         !$omp end task\n       !$omp end single\n     !$omp end parallel\n@@ -36,7 +36,7 @@ subroutine dep2\n           x = 2\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 2\n         !$omp end task\n         !$omp taskwait\n       !$omp end single\n@@ -52,7 +52,7 @@ subroutine dep3\n           x = 2\n         !$omp endtask\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 3\n         !$omp endtask\n       !$omp endsingle\n     !$omp endparallel\n@@ -67,7 +67,7 @@ subroutine firstpriv\n           x = 2\n         !$omp end task\n         !$omp task depend(in: x)\n-          if (x.ne.1) call abort\n+          if (x.ne.1) STOP 4\n         !$omp end task\n       !$omp end single\n     !$omp end parallel\n@@ -79,7 +79,7 @@ subroutine antidep\n     !$omp parallel\n       !$omp single\n         !$omp task shared(x) depend(in: x)\n-          if (x.ne.1) call abort\n+          if (x.ne.1) STOP 5\n         !$omp end task\n         !$omp task shared(x) depend(out: x)\n           x = 2\n@@ -95,7 +95,7 @@ subroutine antidep2\n         x = 1\n         !$omp taskgroup\n           !$omp task shared(x) depend(in: x)\n-            if (x.ne.1) call abort\n+            if (x.ne.1) STOP 6\n           !$omp end task\n           !$omp task shared(x) depend(out: x)\n             x = 2\n@@ -111,7 +111,7 @@ subroutine antidep3\n       x = 1\n       !$omp single\n         !$omp task shared(x) depend(in: x)\n-          if (x.ne.1) call abort\n+          if (x.ne.1) STOP 7\n         !$omp end task\n         !$omp task shared(x) depend(out: x)\n           x = 2\n@@ -132,7 +132,7 @@ subroutine outdep\n           x = 2\n         !$omp end task\n         !$omp taskwait\n-        if (x.ne.2) call abort\n+        if (x.ne.2) STOP 8\n       !$omp end single\n     !$omp end parallel\n   end subroutine outdep\n@@ -146,13 +146,13 @@ subroutine concurrent\n           x = 2\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 9\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 10\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 11\n         !$omp end task\n       !$omp end single\n     !$omp end parallel\n@@ -167,13 +167,13 @@ subroutine concurrent2\n           x = 2;\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 12\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 13\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 14\n         !$omp end task\n         !$omp taskwait\n       !$omp end single\n@@ -189,13 +189,13 @@ subroutine concurrent3\n           x = 2\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 15\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 16\n         !$omp end task\n         !$omp task shared (x) depend(in: x)\n-          if (x.ne.2) call abort\n+          if (x.ne.2) STOP 17\n         !$omp end task\n       !$omp end single\n     !$omp end parallel"}, {"sha": "b53ba0795e6980402e215d629a9d212ef382b320", "filename": "libgomp/testsuite/libgomp.fortran/depend-2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,29 +6,29 @@\n     !$omp single\n       !$omp taskgroup\n         !$omp task depend(in: x(:, :))\n-\t  if (y.ne.1) call abort\n+\t  if (y.ne.1) STOP 1\n         !$omp end task\n         !$omp task depend(out: x(:, :))\n \t  y = 2\n         !$omp end task\n       !$omp end taskgroup\n       !$omp taskgroup\n         !$omp task depend(in: x(4, 7))\n-\t  if (y.ne.2) call abort\n+\t  if (y.ne.2) STOP 2\n         !$omp end task\n         !$omp task depend(out: x(4:4, 7:7))\n \t  y = 3\n         !$omp end task\n       !$omp end taskgroup\n       !$omp taskgroup\n         !$omp task depend(in: x(4:, 8:))\n-\t  if (y.ne.3) call abort\n+\t  if (y.ne.3) STOP 3\n         !$omp end task\n         !$omp task depend(out: x(4:6, 8:12))\n \t  y = 4\n         !$omp end task\n       !$omp end taskgroup\n     !$omp end single\n   !$omp end parallel\n-  if (y.ne.4) call abort\n+  if (y.ne.4) STOP 4\n end"}, {"sha": "09478da4134fa4ba761a141ded150f3f051df068", "filename": "libgomp/testsuite/libgomp.fortran/depend-3.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdepend-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,30 +13,30 @@ subroutine foo (x, z)\n       !$omp single\n         !$omp taskgroup\n           !$omp task depend(in: x)\n-  \t  if (y.ne.1) call abort\n+  \t  if (y.ne.1) STOP 1\n           !$omp end task\n           !$omp task depend(out: x(1:2, 1:3))\n   \t  y = 2\n           !$omp end task\n         !$omp end taskgroup\n         !$omp taskgroup\n           !$omp task depend(in: z)\n-  \t  if (y.ne.2) call abort\n+  \t  if (y.ne.2) STOP 2\n           !$omp end task\n           !$omp task depend(out: z(-2:3, 2:4))\n   \t  y = 3\n           !$omp end task\n         !$omp end taskgroup\n         !$omp taskgroup\n           !$omp task depend(in: x)\n-  \t  if (y.ne.3) call abort\n+  \t  if (y.ne.3) STOP 3\n           !$omp end task\n           !$omp task depend(out: x(1:, 1:))\n   \t  y = 4\n           !$omp end task\n         !$omp end taskgroup\n       !$omp end single\n     !$omp end parallel\n-    if (y.ne.4) call abort\n+    if (y.ne.4) STOP 4\n   end subroutine\n end"}, {"sha": "bb7b6d83e14284eb58f01d4b4be29f0af8dbfc25", "filename": "libgomp/testsuite/libgomp.fortran/do1.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -47,7 +47,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) call abort\n+  if (any (a .ne. b)) STOP 1\n   a = -1\n \n !$omp parallel num_threads (4)\n@@ -79,7 +79,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) call abort\n+  if (any (a .ne. b)) STOP 2\n   a = -1\n \n !$omp parallel num_threads (4)\n@@ -111,7 +111,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) call abort\n+  if (any (a .ne. b)) STOP 3\n   a = -1\n \n !$omp parallel num_threads (4)\n@@ -143,7 +143,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) call abort\n+  if (any (a .ne. b)) STOP 4\n   a = -1\n \n !$omp parallel num_threads (4)\n@@ -175,5 +175,5 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b)) call abort\n+  if (any (a .ne. b)) STOP 5\n end"}, {"sha": "11e3b8cec1192fd20e059fe13b26ab8eb44ffafc", "filename": "libgomp/testsuite/libgomp.fortran/do2.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -86,7 +86,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) call abort\n+  if (any (a .ne. b) .or. k) STOP 1\n   a = -1\n   k = .false.\n   j = 8\n@@ -155,7 +155,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) call abort\n+  if (any (a .ne. b) .or. k) STOP 2\n   a = -1\n   k = .false.\n   j = 8\n@@ -224,7 +224,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) call abort\n+  if (any (a .ne. b) .or. k) STOP 3\n   a = -1\n   k = .false.\n   j = 8\n@@ -293,7 +293,7 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) call abort\n+  if (any (a .ne. b) .or. k) STOP 4\n   a = -1\n   k = .false.\n   j = 8\n@@ -362,5 +362,5 @@\n \n !$omp end parallel\n \n-  if (any (a .ne. b) .or. k) call abort\n+  if (any (a .ne. b) .or. k) STOP 5\n end"}, {"sha": "e3beda05e890fe0dd766e06e0bfe511663234e6e", "filename": "libgomp/testsuite/libgomp.fortran/doacross1.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,14 +17,14 @@\n       if (i.gt.1) then\n         !$omp atomic read\n         l = a(i - 1)\n-        if (l.lt.2) call abort\n+        if (l.lt.2) STOP 1\n       end if\n       !$omp atomic write\n       a(i) = 2\n       if (i.lt.N) then\n         !$omp atomic read\n         l = a(i + 1)\n-        if (l.eq.3) call abort\n+        if (l.eq.3) STOP 2\n       end if\n       !$omp ordered depend(source)\n       !$omp atomic write\n@@ -43,19 +43,19 @@\n           if (j.gt.2.and.k.gt.2) then\n             !$omp atomic read\n             l = b(i,j-2,k-1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 3\n           end if\n           !$omp atomic write\n           b(i,j,k) = 2\n           if (i.gt.4.and.j.gt.2.and.k.lt.4) then\n             !$omp atomic read\n             l = b(i-2,j-2, k+1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 4\n           end if\n           if (i.gt.5.and.j.le.N/16-3.and.k.eq.4) then\n             !$omp atomic read\n             l = b( i - 3, j+2, k-2)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 5\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -94,19 +94,19 @@\n             if (k.le.5) then\n               !$omp atomic read\n               l = c(i, j, k + 2)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 6\n             end if\n             !$omp atomic write\n             c(i, j, k) = 2\n             if (i.ge.3.and.j.lt.8.and.k.ge.5) then\n               !$omp atomic read\n               l = c(i - 2, j + 1, k - 4)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 7\n             end if\n             if (i.ge.2.and.j.ge.5.and.k.ge.3) then\n               !$omp atomic read\n               l = c(i - 1, j - 2, k - 2)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 8\n             end if\n             !$omp ordered depend ( source )\n             !$omp atomic write\n@@ -137,13 +137,13 @@\n           do l = 0, d + 1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) call abort\n+            if (e.eq.0) STOP 9\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.1.or.j.ne.-1.or.k.ne.0) call abort\n+    if (i.ne.1.or.j.ne.-1.or.k.ne.0) STOP 10\n     i = 8; j = 9; k = 10\n     !$omp end single\n     !$omp do ordered(4) collapse(2) lastprivate (i, j, k, m)\n@@ -153,13 +153,13 @@\n           do m = 0, d-1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i - 2, j + 2, k - 2, m)\n-            call abort\n+            STOP 11\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.1.or.j.ne.-1.or.k.ne.2.or.m.ne.0) call abort\n+    if (i.ne.1.or.j.ne.-1.or.k.ne.2.or.m.ne.0) STOP 12\n     !$omp end single\n     !$omp do collapse(2) ordered(4) lastprivate (i,j,k)\n     do i = 0, d\n@@ -168,25 +168,25 @@\n           do l = 0, d + 3\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) call abort\n+            if (e.eq.0) STOP 13\n           end do\n         end do\n       end do\n     end do\n     !$omp end do nowait\n     !$omp do\n     do i = 1, N\n-      if (a(i) .ne. 3) call abort\n+      if (a(i) .ne. 3) STOP 14\n     end do\n     !$omp end do nowait\n     !$omp do collapse(2) private(k)\n     do i = 1, N / 16\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.3.and.i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.2) then\n-            if (b(i,j,k).ne.3) call abort\n+            if (b(i,j,k).ne.3) STOP 15\n           else\n-            if (b(i,j,k).ne.0) call abort\n+            if (b(i,j,k).ne.0) STOP 16\n           end if\n         end do\n       end do\n@@ -197,9 +197,9 @@\n       do j = 1, 8\n         do k = 1, 4\n           if (j.ge.3.and.iand(k,1).ne.0) then\n-            if (c(i,j,k).ne.3) call abort\n+            if (c(i,j,k).ne.3) STOP 17\n           else\n-            if (c(i,j,k).ne.0) call abort\n+            if (c(i,j,k).ne.0) STOP 18\n           end if\n         end do\n       end do"}, {"sha": "226dbe2c14ed4d81ff18f37e7dd56be57ad4ddb3", "filename": "libgomp/testsuite/libgomp.fortran/doacross2.f90", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -20,14 +20,14 @@\n       if (i.gt.2) then\n         !$omp atomic read\n         l = a(i - 1)\n-        if (l.lt.2) call abort\n+        if (l.lt.2) STOP 1\n       end if\n       !$omp atomic write\n       a(i) = 2\n       if (i.lt.N) then\n         !$omp atomic read\n         l = a(i + 1)\n-        if (l.eq.3) call abort\n+        if (l.eq.3) STOP 2\n       end if\n       !$omp ordered depend(source)\n       !$omp atomic write\n@@ -46,19 +46,19 @@\n           if (j.gt.2.and.k.gt.2) then\n             !$omp atomic read\n             l = b(i,j-2,k-1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 3\n           end if\n           !$omp atomic write\n           b(i,j,k) = 2\n           if (i.gt.5.and.j.gt.2.and.k.lt.4) then\n             !$omp atomic read\n             l = b(i-2,j-2, k+1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 4\n           end if\n           if (i.gt.6.and.j.le.N/16-3.and.k.eq.4) then\n             !$omp atomic read\n             l = b( i - 3, j+2, k-2)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 5\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -97,19 +97,19 @@\n             if (k.le.5) then\n               !$omp atomic read\n               l = c(i, j, k + 2)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 6\n             end if\n             !$omp atomic write\n             c(i, j, k) = 2\n             if (i.ge.5.and.j.lt.8.and.k.ge.5) then\n               !$omp atomic read\n               l = c(i - 2, j + 1, k - 4)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 7\n             end if\n             if (i.ge.4.and.j.ge.5.and.k.ge.3) then\n               !$omp atomic read\n               l = c(i - 1, j - 2, k - 2)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 8\n             end if\n             !$omp ordered depend ( source )\n             !$omp atomic write\n@@ -145,19 +145,19 @@\n           if (k.gt.2.and.i.gt.4) then\n             !$omp atomic read\n             l = g(j,k-2,i-1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 9\n           end if\n           !$omp atomic write\n           g(j,k,i) = 2\n           if (j.gt.2.and.k.gt.2.and.i.lt.6) then\n             !$omp atomic read\n             l = g(j-2,k-2, i+1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 10\n           end if\n           if (j.gt.3.and.k.le.N/16-3.and.i.eq.6) then\n             !$omp atomic read\n             l = g( j - 3, k+2, i-2)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 11\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -173,13 +173,13 @@\n           do l = 0, d + 1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) call abort\n+            if (e.eq.0) STOP 12\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.3.or.j.ne.-1.or.k.ne.0) call abort\n+    if (i.ne.3.or.j.ne.-1.or.k.ne.0) STOP 13\n     i = 8; j = 9; k = 10\n     !$omp end single\n     !$omp do ordered(4) collapse(2) lastprivate (i, j, k, m)\n@@ -189,13 +189,13 @@\n           do m = 0, d-1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i - 2, j + 2, k - 2, m)\n-            call abort\n+            STOP 14\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.3.or.j.ne.-1.or.k.ne.2.or.m.ne.0) call abort\n+    if (i.ne.3.or.j.ne.-1.or.k.ne.2.or.m.ne.0) STOP 15\n     !$omp end single\n     !$omp do collapse(2) ordered(4) lastprivate (i,j,k)\n     do i = 2, f + 2\n@@ -204,28 +204,28 @@\n           do l = 0, d + 3\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) call abort\n+            if (e.eq.0) STOP 16\n           end do\n         end do\n       end do\n     end do\n     !$omp end do nowait\n     !$omp single\n-    if (a(1) .ne. 0) call abort\n+    if (a(1) .ne. 0) STOP 17\n     !$omp end single nowait\n     !$omp do\n     do i = 2, N\n-      if (a(i) .ne. 3) call abort\n+      if (a(i) .ne. 3) STOP 18\n     end do\n     !$omp end do nowait\n     !$omp do collapse(2) private(k)\n     do i = 1, N / 16\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.4.and.i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.2) then\n-            if (b(i,j,k).ne.3) call abort\n+            if (b(i,j,k).ne.3) STOP 19\n           else\n-            if (b(i,j,k).ne.0) call abort\n+            if (b(i,j,k).ne.0) STOP 20\n           end if\n         end do\n       end do\n@@ -236,9 +236,9 @@\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.3.and.j.ge.3.and.iand(k,1).ne.0) then\n-            if (c(i,j,k).ne.3) call abort\n+            if (c(i,j,k).ne.3) STOP 21\n           else\n-            if (c(i,j,k).ne.0) call abort\n+            if (c(i,j,k).ne.0) STOP 22\n           end if\n         end do\n       end do\n@@ -249,9 +249,9 @@\n       do j = 1, 8\n         do k = 1, 6\n           if (i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.4) then\n-            if (g(i,j,k).ne.3) call abort\n+            if (g(i,j,k).ne.3) STOP 23\n           else\n-            if (g(i,j,k).ne.0) call abort\n+            if (g(i,j,k).ne.0) STOP 24\n           end if\n         end do\n       end do"}, {"sha": "6649894a8febe77b0c134205209625ab11320278", "filename": "libgomp/testsuite/libgomp.fortran/doacross3.f90", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdoacross3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -20,14 +20,14 @@\n       if (i.gt.2) then\n         !$omp atomic read\n         l = a(i - 1)\n-        if (l.lt.2) call abort\n+        if (l.lt.2) STOP 1\n       end if\n       !$omp atomic write\n       a(i) = 2\n       if (i.lt.N) then\n         !$omp atomic read\n         l = a(i + 1)\n-        if (l.eq.3) call abort\n+        if (l.eq.3) STOP 2\n       end if\n       !$omp ordered depend(source)\n       !$omp atomic write\n@@ -46,19 +46,19 @@\n           if (j.gt.2.and.k.gt.2) then\n             !$omp atomic read\n             l = b(i,j-2,k-1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 3\n           end if\n           !$omp atomic write\n           b(i,j,k) = 2\n           if (i.gt.5.and.j.gt.2.and.k.lt.4) then\n             !$omp atomic read\n             l = b(i-2,j-2, k+1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 4\n           end if\n           if (i.gt.6.and.j.le.N/16-3.and.k.eq.4) then\n             !$omp atomic read\n             l = b( i - 3, j+2, k-2)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 5\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -97,19 +97,19 @@\n             if (k.le.5) then\n               !$omp atomic read\n               l = c(i, j, k + 2)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 6\n             end if\n             !$omp atomic write\n             c(i, j, k) = 2\n             if (i.ge.5.and.j.lt.8.and.k.ge.5) then\n               !$omp atomic read\n               l = c(i - 2, j + 1, k - 4)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 7\n             end if\n             if (i.ge.4.and.j.ge.5.and.k.ge.3) then\n               !$omp atomic read\n               l = c(i - 1, j - 2, k - 2)\n-              if (l.lt.2) call abort\n+              if (l.lt.2) STOP 8\n             end if\n             !$omp ordered depend ( source )\n             !$omp atomic write\n@@ -145,19 +145,19 @@\n           if (k.gt.2.and.i.gt.4) then\n             !$omp atomic read\n             l = g(j,k-2,i-1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 9\n           end if\n           !$omp atomic write\n           g(j,k,i) = 2\n           if (j.gt.2.and.k.gt.2.and.i.lt.6) then\n             !$omp atomic read\n             l = g(j-2,k-2, i+1)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 10\n           end if\n           if (j.gt.3.and.k.le.N/16-3.and.i.eq.6) then\n             !$omp atomic read\n             l = g( j - 3, k+2, i-2)\n-            if (l.lt.2) call abort\n+            if (l.lt.2) STOP 11\n           end if\n           !$omp ordered depend(source)\n           !$omp atomic write\n@@ -173,13 +173,13 @@\n           do l = 0, d + 1, 1 + d\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) call abort\n+            if (e.eq.0) STOP 12\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.3.or.j.ne.-1.or.k.ne.0) call abort\n+    if (i.ne.3.or.j.ne.-1.or.k.ne.0) STOP 13\n     i = 8; j = 9; k = 10\n     !$omp end single\n     !$omp do ordered(4) collapse(2) lastprivate (i, j, k, m)\n@@ -189,13 +189,13 @@\n           do m = 0, d-1, d+1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i - 2, j + 2, k - 2, m)\n-            call abort\n+            STOP 14\n           end do\n         end do\n       end do\n     end do\n     !$omp single\n-    if (i.ne.3.or.j.ne.-1.or.k.ne.2.or.m.ne.0) call abort\n+    if (i.ne.3.or.j.ne.-1.or.k.ne.2.or.m.ne.0) STOP 15\n     !$omp end single\n     !$omp do collapse(2) ordered(4) lastprivate (i,j,k)\n     do i = 2, f + 2, 1 + f\n@@ -204,28 +204,28 @@\n           do l = 0, d + 3, d + 1\n             !$omp ordered depend(source)\n             !$omp ordered depend(sink: i-2,j+2,k-2,l)\n-            if (e.eq.0) call abort\n+            if (e.eq.0) STOP 16\n           end do\n         end do\n       end do\n     end do\n     !$omp end do nowait\n     !$omp single\n-    if (a(1) .ne. 0) call abort\n+    if (a(1) .ne. 0) STOP 17\n     !$omp end single nowait\n     !$omp do\n     do i = 2, N\n-      if (a(i) .ne. 3) call abort\n+      if (a(i) .ne. 3) STOP 18\n     end do\n     !$omp end do nowait\n     !$omp do collapse(2) private(k)\n     do i = 1, N / 16\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.4.and.i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.2) then\n-            if (b(i,j,k).ne.3) call abort\n+            if (b(i,j,k).ne.3) STOP 19\n           else\n-            if (b(i,j,k).ne.0) call abort\n+            if (b(i,j,k).ne.0) STOP 20\n           end if\n         end do\n       end do\n@@ -236,9 +236,9 @@\n       do j = 1, 8\n         do k = 1, 4\n           if (i.ge.3.and.j.ge.3.and.iand(k,1).ne.0) then\n-            if (c(i,j,k).ne.3) call abort\n+            if (c(i,j,k).ne.3) STOP 21\n           else\n-            if (c(i,j,k).ne.0) call abort\n+            if (c(i,j,k).ne.0) STOP 22\n           end if\n         end do\n       end do\n@@ -249,9 +249,9 @@\n       do j = 1, 8\n         do k = 1, 6\n           if (i.lt.N/16.and.iand(j,1).ne.0.and.k.ge.4) then\n-            if (g(i,j,k).ne.3) call abort\n+            if (g(i,j,k).ne.3) STOP 23\n           else\n-            if (g(i,j,k).ne.0) call abort\n+            if (g(i,j,k).ne.0) STOP 24\n           end if\n         end do\n       end do"}, {"sha": "08091b83fcba17819403cb3c48817cdf08efb0ed", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/array_sections-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,6 +12,6 @@ subroutine foo ()\n         p(9) = 777\n       !$omp end target\n     !$omp end target data\n-    if (A(3) /= 777 .or. A(9) /= 777) call abort\n+    if (A(3) /= 777 .or. A(9) /= 777) STOP 1\n   end subroutine\n end"}, {"sha": "f730894bd956f67471c4e481843795f120b5b581", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/array_sections-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Farray_sections-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,6 +13,6 @@ subroutine foo ()\n         A(9) = 999\n       !$omp end target\n     !$omp end target data\n-    if (A(3) /= 777 .or. A(9) /= 999) call abort\n+    if (A(3) /= 777 .or. A(9) /= 999) STOP 1\n   end subroutine\n end"}, {"sha": "dd6f7f5a791bc024d01be750c4d7d630ff01b6a3", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/async_target-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -27,7 +27,7 @@ subroutine check ()\n     else\n       err = (Y(i) - Z(i)) / Z(i)\n     end if\n-    if (err > EPS .or. err < -EPS) call abort\n+    if (err > EPS .or. err < -EPS) STOP 1\n   end do\n end subroutine\n "}, {"sha": "2380f3a01f0cea02d590ed22b33c9b93a261541b", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/async_target-2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fasync_target-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n   real :: diff, p(N)\n   do i = 1, N\n     diff = p(i) - (i + 2.0) * (i - 3.0)\n-    if (diff > EPS .or. -diff > EPS) call abort\n+    if (diff > EPS .or. -diff > EPS) STOP 1\n   end do\n end subroutine\n \n@@ -30,14 +30,14 @@ subroutine vec_mult (p, N)\n   !$omp target data map(to: v1, v2, N) map(from: p)\n     !$omp task shared(v1, v2, p) depend(out: v1, v2)\n       !$omp target map(to: v1, v2, N)\n-        if (omp_is_initial_device ()) call abort\n+        if (omp_is_initial_device ()) STOP 2\n         allocate (v1(N), v2(N))\n         call init (v1, v2, N)\n       !$omp end target\n     !$omp end task\n     !$omp task shared(v1, v2, p) depend(in: v1, v2)\n       !$omp target map(to: v1, v2, N) map(from: p)\n-        if (omp_is_initial_device ()) call abort\n+        if (omp_is_initial_device ()) STOP 3\n         !$omp parallel do\n         do i = 1, N\n           p(i) = v1(i) * v2(i)"}, {"sha": "df941eeaa2e542c755c67d6fd4094c702f349313", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -26,6 +26,6 @@ integer function fib_wrapper (n)\n \n program e_53_1\n   use e_53_1_mod, only : fib, fib_wrapper\n-  if (fib (15) /= fib_wrapper (15)) call abort\n-  if (fib (25) /= fib_wrapper (25)) call abort\n+  if (fib (15) /= fib_wrapper (15)) STOP 1\n+  if (fib (25) /= fib_wrapper (25)) STOP 2\n end program"}, {"sha": "9c315697275dfffeb137c290dea62ccd0e8f0ef9", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,7 +6,7 @@ program e_53_2\n   !$omp target map(from: x)\n     x = fib (25)\n   !$omp end target\n-  if (x /= fib (25)) call abort\n+  if (x /= fib (25)) STOP 1\n end program\n \n integer recursive function fib (n) result (f)"}, {"sha": "1405ea7179339db41fdb9aa6c8aacf0a46f43382", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,7 +21,7 @@ subroutine check (p, N)\n   real :: diff, p(N)\n   do i = 1, N\n     diff = p(i) - (i + 2.0) * (i - 3.0)\n-    if (diff > EPS .or. -diff > EPS) call abort\n+    if (diff > EPS .or. -diff > EPS) STOP 1\n   end do\n end subroutine\n "}, {"sha": "47d6cd87d5f8bcaee3f65c563654f6586e66bbed", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -53,7 +53,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) call abort\n+  if (err > EPS .or. err < -EPS) STOP 1\n end subroutine\n \n program e_53_4"}, {"sha": "8fd6af7d7389ae91363410c91ccaf3d8108197c7", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/declare_target-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdeclare_target-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -68,7 +68,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) call abort\n+  if (err > EPS .or. err < -EPS) STOP 1\n end subroutine\n \n program e_53_5"}, {"sha": "a141e058e52d59e3704528ff7d9dccdc064cf94c", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/device-1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -20,7 +20,7 @@ program e_57_1\n     !$omp end target\n   !$omp end target data\n \n-  if (b /= 100 .or. .not. c .or. d) call abort\n+  if (b /= 100 .or. .not. c .or. d) STOP 1\n \n   a = a + 200\n   b = 0\n@@ -36,7 +36,7 @@ program e_57_1\n     !$omp end target\n   !$omp end target data\n \n-  if (b /= 0 .or. c .or. d) call abort\n+  if (b /= 0 .or. c .or. d) STOP 2\n \n   a = a + 200\n   b = 0\n@@ -52,5 +52,5 @@ program e_57_1\n     !$omp end target\n   !$omp end target data\n \n-  if (b /= 100 .or. .not. c .or. d) call abort\n+  if (b /= 100 .or. .not. c .or. d) STOP 3\n end program"}, {"sha": "a7d4f24611f94756548a080dd475e58bfeeab1f1", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/device-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -15,10 +15,10 @@ program e_57_2\n   end do\n \n   do i = 1, num\n-    if (offload(i)) call abort\n+    if (offload(i)) STOP 1\n   end do\n \n   do i = num+1, N\n-    if (.not. offload(i)) call abort\n+    if (.not. offload(i)) STOP 2\n   end do\n end program"}, {"sha": "d6bc042d6c28d37cceda00a558d77e56df31dac7", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/device-3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fdevice-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,11 +11,11 @@ program e_57_3\n   !$omp target map(from: res)\n     res = omp_is_initial_device ()\n   !$omp end target\n-  if (res) call abort\n+  if (res) STOP 1\n \n   call omp_set_default_device (omp_get_num_devices ())\n   !$omp target map(from: res)\n     res = omp_is_initial_device ()\n   !$omp end target\n-  if (.not. res) call abort\n+  if (.not. res) STOP 2\n end program"}, {"sha": "1d705535cfdc44176f793fe629b9a9b1fc808759", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -28,7 +28,7 @@ subroutine check (a, b, n)\n     double precision :: diff, a(*), b(*)\n     do i = 1, n\n       diff = a(i) - b(i)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "c9c162fef0d1781821145e066ae79bf74186b6dd", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -49,7 +49,7 @@ subroutine check (a, b, n)\n       double precision :: diff, a(*), b(*)\n       do i = 1, n\n         diff = a(i) - b(i)\n-        if (diff > EPS .or. -diff > EPS) call abort\n+        if (diff > EPS .or. -diff > EPS) STOP 1\n       end do\n   end subroutine\n end module"}, {"sha": "eb8497053bf7f429000f06d67c901915fe4bdca7", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -57,6 +57,6 @@ program SIMD3\n \n   diff = sum - sum_ref\n \n-  if (diff > EPS .or. -diff > EPS) call abort\n+  if (diff > EPS .or. -diff > EPS) STOP 1\n \n end program"}, {"sha": "cb78e2c776553dbcab81b42522ec379b42b26e5e", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -47,7 +47,7 @@ subroutine check (a, b, n)\n     real :: diff, a(*), b(*)\n     do i = 1, n\n       diff = a(i) - b(i)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "561deb786c45b37640e8243d8dc655ca19629394", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -56,7 +56,7 @@ subroutine check (a, b, n)\n     do j = 1, n\n       do i = 1, n\n         diff = a(i,j) - b(i,j)\n-        if (diff > EPS .or. -diff > EPS) call abort\n+        if (diff > EPS .or. -diff > EPS) STOP 1\n       end do\n     end do\n   end subroutine"}, {"sha": "7f7c5101475c8243dd089c285ddf6bf8a631578f", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -109,14 +109,14 @@ subroutine checkfloat (a, b, n)\n       real :: diff, a(*), b(*)\n       do i = 1, n\n         diff = a(i) - b(i)\n-        if (diff > EPS .or. -diff > EPS) call abort\n+        if (diff > EPS .or. -diff > EPS) STOP 1\n       end do\n   end subroutine\n \n   subroutine checkint (a, b, n)\n       integer :: i, n, a(*), b(*)\n       do i = 1, n\n-        if (a(i) .ne. b(i)) call abort\n+        if (a(i) .ne. b(i)) STOP 2\n       end do\n   end subroutine\n "}, {"sha": "e6af9c8224bb9b02c810e164d2e2b2ee9c855e82", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -23,7 +23,7 @@ program fibonacci\n    call fib_ref (a_ref, N)\n \n    do i = 0, N-1\n-     if (a(i) .ne. a_ref(i)) call abort ()\n+     if (a(i) .ne. a_ref(i)) STOP 1\n    end do\n \n end program"}, {"sha": "722d9824c5fd1b20f9711526e1ba2e1ed760e6bf", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/simd-8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fsimd-8.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -47,6 +47,6 @@ program simd_8f\n \n   diff = pri - 8237.25\n \n-  if (diff > EPS .or. -diff > EPS) call abort\n+  if (diff > EPS .or. -diff > EPS) STOP 1\n \n end program"}, {"sha": "2ec4f68f30939bba9c4a6fe4bab0d38c5ad69db4", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "e995ef5a3acf917d466b042e6c7888197886b8ea", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "338189f695283d54dab66447b479059bf7c0771d", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "856ccdb536a98bf7a7a7dbd5d04ac9482baae01f", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real, pointer, dimension(:) :: p\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "bae304142340e8c85cdf9518bc2477b04e69592d", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target-5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -19,7 +19,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n \n@@ -29,7 +29,7 @@ subroutine vec_mult (N)\n     real :: p(N), v1(N), v2(N)\n     call init (v1, v2, N)\n     !$omp target if(N > THRESHOLD1) map(to: v1,v2) map(from: p)\n-      if (omp_is_initial_device ()) call abort\n+      if (omp_is_initial_device ()) STOP 2\n       !$omp parallel do if(N > THRESHOLD2)\n       do i = 1, N\n         p(i) = v1(i) * v2(i)"}, {"sha": "f9cceb94050f8d76314e503cc5281f886b117d87", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "219b450c005a76fd5ce5308ef76be8ba404d4205", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -26,7 +26,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - 2 * (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "b48dbe29836d7d2836052a30fbc79bc653552ce7", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -19,7 +19,7 @@ subroutine check (P, Q, rows, cols)\n     do k = 1, cols\n       do i = 1, rows\n         diff = P(i,k) - Q(i,k)\n-        if (diff > EPS .or. -diff > EPS) call abort\n+        if (diff > EPS .or. -diff > EPS) STOP 1\n       end do\n     end do\n   end subroutine"}, {"sha": "7499e3b70a52c2a1d9ca64b14e9a9839ad8c584c", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "8057d058a21c774a620c8f54df397827f6766f41", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,7 +17,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "ba6d879ca8b1db4cb1954715655f6b93582f7b93", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-6.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -28,7 +28,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - 2 * (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n \n@@ -39,15 +39,15 @@ subroutine vec_mult (N)\n     call init (v1, v2, N)\n     !$omp target data if(N > THRESHOLD) map(from: p)\n       !$omp target if(N > THRESHOLD) map(to: v1, v2)\n-        if (omp_is_initial_device ()) call abort\n+        if (omp_is_initial_device ()) STOP 2\n         !$omp parallel do\n         do i = 1, N\n           p(i) = v1(i) * v2(i)\n         end do\n       !$omp end target\n       call init_again (v1, v2, N)\n       !$omp target if(N > THRESHOLD) map(to: v1, v2)\n-        if (omp_is_initial_device ()) call abort\n+        if (omp_is_initial_device ()) STOP 3\n         !$omp parallel do\n         do i = 1, N\n           p(i) = p(i) + v1(i) * v2(i)"}, {"sha": "629ef2c6c4d5d1d08cd7402f5092ce6dd50e8f78", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_data-7.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_data-7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -19,7 +19,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n \n@@ -30,7 +30,7 @@ subroutine vec_mult (N)\n     call init (v1, v2, N)\n     !$omp target data if(N > THRESHOLD) map(to: v1, v2) map(from: p)\n       !$omp target\n-        if (omp_is_initial_device ()) call abort\n+        if (omp_is_initial_device ()) STOP 2\n         !$omp parallel do\n         do i = 1, N\n           p(i) = v1(i) * v2(i)"}, {"sha": "1861d4405a5c55ac02ece7bea156f7f7d3acd921", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_update-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -26,7 +26,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - 2 * (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "7734a6adb960caa4735cf5b5dc04626cd1c4dae6", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/target_update-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftarget_update-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -26,7 +26,7 @@ subroutine check (p, N)\n     real :: diff, p(N)\n     do i = 1, N\n       diff = p(i) - (i * i + (i + 2.0) * (i - 3.0))\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "f40e36f3bcab12e705b872eb6059cbcab949672a", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -9,7 +9,7 @@ program example\n          x = 2\n       !$omp end task\n       !$omp task shared(x) depend(in: x)\n-         if (x .ne. 2) call abort ()\n+         if (x .ne. 2) STOP 1\n       !$omp end task\n    !$omp end single\n    !$omp end parallel"}, {"sha": "7debb607ff4721f0a861e5c9c199db30d8d81bca", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,7 +6,7 @@ program example\n    !$omp parallel\n    !$omp single\n       !$omp task shared(x) depend(in: x)\n-         if (x .ne. 1) call abort ()\n+         if (x .ne. 1) STOP 1\n       !$omp end task\n       !$omp task shared(x) depend(out: x)\n          x = 2"}, {"sha": "34cd2c749708b77dd4cf1ae79e37dec7d427b9df", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,7 +12,7 @@ program example\n          x = 2\n       !$omp end task\n       !$omp taskwait\n-      if ((x .ne. 1) .and. (x .ne. 2)) call abort()\n+      if ((x .ne. 1) .and. (x .ne. 2)) STOP 1\n    !$omp end single\n    !$omp end parallel\n end program"}, {"sha": "47e93f9213bdb5d106d08052e784470aea7d6018", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -9,10 +9,10 @@ program example\n          x = 2\n       !$omp end task\n       !$omp task shared(x) depend(in: x)\n-         if (x .ne. 2) call abort ()\n+         if (x .ne. 2) STOP 1\n       !$omp end task\n       !$omp task shared(x) depend(in: x)\n-         if (x .ne. 2) call abort ()\n+         if (x .ne. 2) STOP 2\n       !$omp end task\n    !$omp end single\n    !$omp end parallel"}, {"sha": "9e12db3386c934f87dc657e43e264f76130e7635", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/task_dep-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Ftask_dep-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -51,7 +51,7 @@ subroutine check (N, A, B)\n       do j = 1, N\n         diff = A(i, j) - B(i, j)\n         if (diff > EPS .or. -diff > EPS) then\n-          call abort ()\n+          STOP 1\n         end if\n       end do\n     end do"}, {"sha": "794c907e975bc8b4fe8e66afca36d5cb2539eaf2", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -49,7 +49,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) call abort\n+  if (err > EPS .or. err < -EPS) STOP 1\n end subroutine\n \n program e_54_1"}, {"sha": "1c8f7d8a43dc70507c44a08b89a10ba7dfac61f6", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -42,7 +42,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) call abort\n+  if (err > EPS .or. err < -EPS) STOP 1\n end subroutine\n \n program e_54_3"}, {"sha": "94de777c71c876537afc80091875d834705a7480", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -44,7 +44,7 @@ subroutine check (a, b)\n   else\n     err = (a - b) / b\n   end if\n-  if (err > EPS .or. err < -EPS) call abort\n+  if (err > EPS .or. err < -EPS) STOP 1\n end subroutine\n \n program e_54_4"}, {"sha": "7e380ad2658999ac7e64378ddaff86719cccda53", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,7 +18,7 @@ subroutine check (p, N)\n     real :: diff\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "8121fba67d72a78051e98304c8783480f12f96b3", "filename": "libgomp/testsuite/libgomp.fortran/examples-4/teams-6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fexamples-4%2Fteams-6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,7 +18,7 @@ subroutine check (p, N)\n     real :: diff\n     do i = 1, N\n       diff = p(i) - (i + 2.0) * (i - 3.0)\n-      if (diff > EPS .or. -diff > EPS) call abort\n+      if (diff > EPS .or. -diff > EPS) STOP 1\n     end do\n   end subroutine\n "}, {"sha": "132617b5c2730e7f20fbb729bc5267091e2d906e", "filename": "libgomp/testsuite/libgomp.fortran/lastprivate1.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,15 +4,15 @@ program lastprivate\n   !$omp parallel num_threads (4)\n   call test1\n   !$omp end parallel\n-  if (i .ne. 21) call abort\n+  if (i .ne. 21) STOP 1\n   !$omp parallel num_threads (4)\n   call test2\n   !$omp end parallel\n-  if (i .ne. 64) call abort\n+  if (i .ne. 64) STOP 2\n   !$omp parallel num_threads (4)\n   call test3\n   !$omp end parallel\n-  if (i .ne. 14) call abort\n+  if (i .ne. 14) STOP 3\n   call test4\n   call test5\n   call test6\n@@ -53,45 +53,45 @@ subroutine test4\n     !$omp parallel do lastprivate (j) num_threads (4) default (none)\n     do j = 1, 20\n     end do\n-    if (j .ne. 21) call abort\n+    if (j .ne. 21) STOP 4\n   end subroutine test4\n   subroutine test5\n     integer :: j\n     !$omp parallel do lastprivate (j) num_threads (4) default (none)\n     do j = 7, 61, 3\n     end do\n-    if (j .ne. 64) call abort\n+    if (j .ne. 64) STOP 5\n   end subroutine test5\n   subroutine test6\n     integer :: j\n     !$omp parallel do lastprivate (j) num_threads (4) default (none)\n     do j = -10, 11, ret3 ()\n     end do\n-    if (j .ne. 14) call abort\n+    if (j .ne. 14) STOP 6\n   end subroutine test6\n   subroutine test7\n     integer :: i\n     common /c/ i\n     !$omp parallel do lastprivate (i) num_threads (4) default (none)\n     do i = 1, 20\n     end do\n-    if (i .ne. 21) call abort\n+    if (i .ne. 21) STOP 7\n   end subroutine test7\n   subroutine test8\n     integer :: i\n     common /c/ i\n     !$omp parallel do lastprivate (i) num_threads (4) default (none)\n     do i = 7, 61, 3\n     end do\n-    if (i .ne. 64) call abort\n+    if (i .ne. 64) STOP 8\n   end subroutine test8\n   subroutine test9\n     integer :: i\n     common /c/ i\n     !$omp parallel do lastprivate (i) num_threads (4) default (none)\n     do i = -10, 11, ret3 ()\n     end do\n-    if (i .ne. 14) call abort\n+    if (i .ne. 14) STOP 9\n   end subroutine test9\n   subroutine test10\n     integer :: i\n@@ -101,7 +101,7 @@ subroutine test10\n     do i = 1, 20\n     end do\n     !$omp end parallel\n-    if (i .ne. 21) call abort\n+    if (i .ne. 21) STOP 10\n   end subroutine test10\n   subroutine test11\n     integer :: i\n@@ -111,7 +111,7 @@ subroutine test11\n     do i = 7, 61, 3\n     end do\n     !$omp end parallel\n-    if (i .ne. 64) call abort\n+    if (i .ne. 64) STOP 11\n   end subroutine test11\n   subroutine test12\n     integer :: i\n@@ -121,6 +121,6 @@ subroutine test12\n     do i = -10, 11, ret3 ()\n     end do\n     !$omp end parallel\n-    if (i .ne. 14) call abort\n+    if (i .ne. 14) STOP 12\n   end subroutine test12\n end program lastprivate"}, {"sha": "6cd5760206c913a21b61a167b2a2725c91c21a1c", "filename": "libgomp/testsuite/libgomp.fortran/lastprivate2.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flastprivate2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,15 +4,15 @@ program lastprivate\n   !$omp parallel num_threads (4)\n   call test1\n   !$omp end parallel\n-  if (i .ne. 21 .or. k .ne. 20) call abort\n+  if (i .ne. 21 .or. k .ne. 20) STOP 1\n   !$omp parallel num_threads (4)\n   call test2\n   !$omp end parallel\n-  if (i .ne. 64 .or. k .ne. 61) call abort\n+  if (i .ne. 64 .or. k .ne. 61) STOP 2\n   !$omp parallel num_threads (4)\n   call test3\n   !$omp end parallel\n-  if (i .ne. 14 .or. k .ne. 11) call abort\n+  if (i .ne. 14 .or. k .ne. 11) STOP 3\n   call test4\n   call test5\n   call test6\n@@ -57,7 +57,7 @@ subroutine test4\n     do j = 1, 20\n       l = j\n     end do\n-    if (j .ne. 21 .or. l .ne. 20) call abort\n+    if (j .ne. 21 .or. l .ne. 20) STOP 4\n   end subroutine test4\n   subroutine test5\n     integer :: j, l\n@@ -66,15 +66,15 @@ subroutine test5\n     do j = 7, 61, 3\n       l = j\n     end do\n-    if (j .ne. 64 .or. l .ne. 61) call abort\n+    if (j .ne. 64 .or. l .ne. 61) STOP 5\n   end subroutine test5\n   subroutine test6\n     integer :: j, l\n     !$omp parallel do lastprivate (j, l) num_threads (4)\n     do j = -10, 11, ret3 ()\n       l = j\n     end do\n-    if (j .ne. 14 .or. l .ne. 11) call abort\n+    if (j .ne. 14 .or. l .ne. 11) STOP 6\n   end subroutine test6\n   subroutine test7\n     integer :: i, k\n@@ -83,7 +83,7 @@ subroutine test7\n     do i = 1, 20\n       k = i\n     end do\n-    if (i .ne. 21 .or. k .ne. 20) call abort\n+    if (i .ne. 21 .or. k .ne. 20) STOP 7\n   end subroutine test7\n   subroutine test8\n     integer :: i, k\n@@ -92,7 +92,7 @@ subroutine test8\n     do i = 7, 61, 3\n       k = i\n     end do\n-    if (i .ne. 64 .or. k .ne. 61) call abort\n+    if (i .ne. 64 .or. k .ne. 61) STOP 8\n   end subroutine test8\n   subroutine test9\n     integer :: i, k\n@@ -102,7 +102,7 @@ subroutine test9\n     do i = -10, 11, ret3 ()\n       k = i\n     end do\n-    if (i .ne. 14 .or. k .ne. 11) call abort\n+    if (i .ne. 14 .or. k .ne. 11) STOP 9\n   end subroutine test9\n   subroutine test10\n     integer :: i, k\n@@ -113,7 +113,7 @@ subroutine test10\n       k = i\n     end do\n     !$omp end parallel\n-    if (i .ne. 21 .or. k .ne. 20) call abort\n+    if (i .ne. 21 .or. k .ne. 20) STOP 10\n   end subroutine test10\n   subroutine test11\n     integer :: i, k\n@@ -124,7 +124,7 @@ subroutine test11\n       k = i\n     end do\n     !$omp end parallel\n-    if (i .ne. 64 .or. k .ne. 61) call abort\n+    if (i .ne. 64 .or. k .ne. 61) STOP 11\n   end subroutine test11\n   subroutine test12\n     integer :: i, k\n@@ -136,6 +136,6 @@ subroutine test12\n       k = i\n     end do\n     !$omp end parallel\n-    if (i .ne. 14 .or. k .ne. 11) call abort\n+    if (i .ne. 14 .or. k .ne. 11) STOP 12\n   end subroutine test12\n end program lastprivate"}, {"sha": "92c32508491a9834ea7b3a94b2b09639e3905792", "filename": "libgomp/testsuite/libgomp.fortran/lib1.f90", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,42 +11,42 @@\n \n   call omp_init_lock (lck)\n   call omp_set_lock (lck)\n-  if (omp_test_lock (lck)) call abort\n+  if (omp_test_lock (lck)) STOP 1\n   call omp_unset_lock (lck)\n-  if (.not. omp_test_lock (lck)) call abort\n-  if (omp_test_lock (lck)) call abort\n+  if (.not. omp_test_lock (lck)) STOP 2\n+  if (omp_test_lock (lck)) STOP 3\n   call omp_unset_lock (lck)\n   call omp_destroy_lock (lck)\n \n   call omp_init_nest_lock (nlck)\n-  if (omp_test_nest_lock (nlck) .ne. 1) call abort\n+  if (omp_test_nest_lock (nlck) .ne. 1) STOP 4\n   call omp_set_nest_lock (nlck)\n-  if (omp_test_nest_lock (nlck) .ne. 3) call abort\n+  if (omp_test_nest_lock (nlck) .ne. 3) STOP 5\n   call omp_unset_nest_lock (nlck)\n   call omp_unset_nest_lock (nlck)\n-  if (omp_test_nest_lock (nlck) .ne. 2) call abort\n+  if (omp_test_nest_lock (nlck) .ne. 2) STOP 6\n   call omp_unset_nest_lock (nlck)\n   call omp_unset_nest_lock (nlck)\n   call omp_destroy_nest_lock (nlck)\n \n   call omp_set_dynamic (.true.)\n-  if (.not. omp_get_dynamic ()) call abort\n+  if (.not. omp_get_dynamic ()) STOP 7\n   call omp_set_dynamic (.false.)\n-  if (omp_get_dynamic ()) call abort\n+  if (omp_get_dynamic ()) STOP 8\n \n   call omp_set_nested (.true.)\n-  if (.not. omp_get_nested ()) call abort\n+  if (.not. omp_get_nested ()) STOP 9\n   call omp_set_nested (.false.)\n-  if (omp_get_nested ()) call abort\n+  if (omp_get_nested ()) STOP 10\n \n   call omp_set_num_threads (5)\n-  if (omp_get_num_threads () .ne. 1) call abort\n-  if (omp_get_max_threads () .ne. 5) call abort\n-  if (omp_get_thread_num () .ne. 0) call abort\n+  if (omp_get_num_threads () .ne. 1) STOP 11\n+  if (omp_get_max_threads () .ne. 5) STOP 12\n+  if (omp_get_thread_num () .ne. 0) STOP 13\n   call omp_set_num_threads (3)\n-  if (omp_get_num_threads () .ne. 1) call abort\n-  if (omp_get_max_threads () .ne. 3) call abort\n-  if (omp_get_thread_num () .ne. 0) call abort\n+  if (omp_get_num_threads () .ne. 1) STOP 14\n+  if (omp_get_max_threads () .ne. 3) STOP 15\n+  if (omp_get_thread_num () .ne. 0) STOP 16\n   l = .false.\n !$omp parallel reduction (.or.:l)\n   l = omp_get_num_threads () .ne. 3\n@@ -56,22 +56,22 @@\n   l = l .or. (omp_get_thread_num () .ne. 0)\n !$omp end master\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 17\n \n-  if (omp_get_num_procs () .le. 0) call abort\n-  if (omp_in_parallel ()) call abort\n+  if (omp_get_num_procs () .le. 0) STOP 18\n+  if (omp_in_parallel ()) STOP 19\n !$omp parallel reduction (.or.:l)\n   l = .not. omp_in_parallel ()\n !$omp end parallel\n !$omp parallel reduction (.or.:l) if (.true.)\n   l = .not. omp_in_parallel ()\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 20\n \n   e = omp_get_wtime ()\n-  if (d .gt. e) call abort\n+  if (d .gt. e) STOP 21\n   d = omp_get_wtick ()\n   ! Negative precision is definitely wrong,\n   ! bigger than 1s clock resolution is also strange\n-  if (d .le. 0 .or. d .gt. 1.) call abort\n+  if (d .le. 0 .or. d .gt. 1.) STOP 22\n end"}, {"sha": "91b56c06081486ad2c535cb739992a820717dfea", "filename": "libgomp/testsuite/libgomp.fortran/lib2.f", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib2.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,42 +11,42 @@\n \n       CALL OMP_INIT_LOCK (LCK)\n       CALL OMP_SET_LOCK (LCK)\n-      IF (OMP_TEST_LOCK (LCK)) CALL ABORT\n+      IF (OMP_TEST_LOCK (LCK)) STOP 1\n       CALL OMP_UNSET_LOCK (LCK)\n-      IF (.NOT. OMP_TEST_LOCK (LCK)) CALL ABORT\n-      IF (OMP_TEST_LOCK (LCK)) CALL ABORT\n+      IF (.NOT. OMP_TEST_LOCK (LCK)) STOP 2\n+      IF (OMP_TEST_LOCK (LCK)) STOP 3\n       CALL OMP_UNSET_LOCK (LCK)\n       CALL OMP_DESTROY_LOCK (LCK)\n \n       CALL OMP_INIT_NEST_LOCK (NLCK)\n-      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 1) CALL ABORT\n+      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 1) STOP 4\n       CALL OMP_SET_NEST_LOCK (NLCK)\n-      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 3) CALL ABORT\n+      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 3) STOP 5\n       CALL OMP_UNSET_NEST_LOCK (NLCK)\n       CALL OMP_UNSET_NEST_LOCK (NLCK)\n-      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 2) CALL ABORT\n+      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 2) STOP 6\n       CALL OMP_UNSET_NEST_LOCK (NLCK)\n       CALL OMP_UNSET_NEST_LOCK (NLCK)\n       CALL OMP_DESTROY_NEST_LOCK (NLCK)\n \n       CALL OMP_SET_DYNAMIC (.TRUE.)\n-      IF (.NOT. OMP_GET_DYNAMIC ()) CALL ABORT\n+      IF (.NOT. OMP_GET_DYNAMIC ()) STOP 7\n       CALL OMP_SET_DYNAMIC (.FALSE.)\n-      IF (OMP_GET_DYNAMIC ()) CALL ABORT\n+      IF (OMP_GET_DYNAMIC ()) STOP 8\n \n       CALL OMP_SET_NESTED (.TRUE.)\n-      IF (.NOT. OMP_GET_NESTED ()) CALL ABORT\n+      IF (.NOT. OMP_GET_NESTED ()) STOP 9\n       CALL OMP_SET_NESTED (.FALSE.)\n-      IF (OMP_GET_NESTED ()) CALL ABORT\n+      IF (OMP_GET_NESTED ()) STOP 10\n \n       CALL OMP_SET_NUM_THREADS (5)\n-      IF (OMP_GET_NUM_THREADS () .NE. 1) CALL ABORT\n-      IF (OMP_GET_MAX_THREADS () .NE. 5) CALL ABORT\n-      IF (OMP_GET_THREAD_NUM () .NE. 0) CALL ABORT\n+      IF (OMP_GET_NUM_THREADS () .NE. 1) STOP 11\n+      IF (OMP_GET_MAX_THREADS () .NE. 5) STOP 12\n+      IF (OMP_GET_THREAD_NUM () .NE. 0) STOP 13\n       CALL OMP_SET_NUM_THREADS (3)\n-      IF (OMP_GET_NUM_THREADS () .NE. 1) CALL ABORT\n-      IF (OMP_GET_MAX_THREADS () .NE. 3) CALL ABORT\n-      IF (OMP_GET_THREAD_NUM () .NE. 0) CALL ABORT\n+      IF (OMP_GET_NUM_THREADS () .NE. 1) STOP 14\n+      IF (OMP_GET_MAX_THREADS () .NE. 3) STOP 15\n+      IF (OMP_GET_THREAD_NUM () .NE. 0) STOP 16\n       L = .FALSE.\n C$OMP PARALLEL REDUCTION (.OR.:L)\n       L = OMP_GET_NUM_THREADS () .NE. 3\n@@ -56,22 +56,22 @@\n       L = L .OR. (OMP_GET_THREAD_NUM () .NE. 0)\n C$OMP END MASTER\n C$OMP END PARALLEL\n-      IF (L) CALL ABORT\n+      IF (L) STOP 17\n \n-      IF (OMP_GET_NUM_PROCS () .LE. 0) CALL ABORT\n-      IF (OMP_IN_PARALLEL ()) CALL ABORT\n+      IF (OMP_GET_NUM_PROCS () .LE. 0) STOP 18\n+      IF (OMP_IN_PARALLEL ()) STOP 19\n C$OMP PARALLEL REDUCTION (.OR.:L)\n       L = .NOT. OMP_IN_PARALLEL ()\n C$OMP END PARALLEL\n C$OMP PARALLEL REDUCTION (.OR.:L) IF (.TRUE.)\n       L = .NOT. OMP_IN_PARALLEL ()\n C$OMP END PARALLEL\n-      IF (L) CALL ABORT\n+      IF (L) STOP 20\n \n       E = OMP_GET_WTIME ()\n-      IF (D .GT. E) CALL ABORT\n+      IF (D .GT. E) STOP 21\n       D = OMP_GET_WTICK ()\n C Negative precision is definitely wrong,\n C bigger than 1s clock resolution is also strange\n-      IF (D .LE. 0 .OR. D .GT. 1.) CALL ABORT\n+      IF (D .LE. 0 .OR. D .GT. 1.) STOP 22\n       END"}, {"sha": "34d9b64d9a3bc2424f8c821c60c1422e39500b03", "filename": "libgomp/testsuite/libgomp.fortran/lib3.f", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib3.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,42 +11,42 @@\n \n       CALL OMP_INIT_LOCK (LCK)\n       CALL OMP_SET_LOCK (LCK)\n-      IF (OMP_TEST_LOCK (LCK)) CALL ABORT\n+      IF (OMP_TEST_LOCK (LCK)) STOP 1\n       CALL OMP_UNSET_LOCK (LCK)\n-      IF (.NOT. OMP_TEST_LOCK (LCK)) CALL ABORT\n-      IF (OMP_TEST_LOCK (LCK)) CALL ABORT\n+      IF (.NOT. OMP_TEST_LOCK (LCK)) STOP 2\n+      IF (OMP_TEST_LOCK (LCK)) STOP 3\n       CALL OMP_UNSET_LOCK (LCK)\n       CALL OMP_DESTROY_LOCK (LCK)\n \n       CALL OMP_INIT_NEST_LOCK (NLCK)\n-      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 1) CALL ABORT\n+      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 1) STOP 4\n       CALL OMP_SET_NEST_LOCK (NLCK)\n-      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 3) CALL ABORT\n+      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 3) STOP 5\n       CALL OMP_UNSET_NEST_LOCK (NLCK)\n       CALL OMP_UNSET_NEST_LOCK (NLCK)\n-      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 2) CALL ABORT\n+      IF (OMP_TEST_NEST_LOCK (NLCK) .NE. 2) STOP 6\n       CALL OMP_UNSET_NEST_LOCK (NLCK)\n       CALL OMP_UNSET_NEST_LOCK (NLCK)\n       CALL OMP_DESTROY_NEST_LOCK (NLCK)\n \n       CALL OMP_SET_DYNAMIC (.TRUE.)\n-      IF (.NOT. OMP_GET_DYNAMIC ()) CALL ABORT\n+      IF (.NOT. OMP_GET_DYNAMIC ()) STOP 7\n       CALL OMP_SET_DYNAMIC (.FALSE.)\n-      IF (OMP_GET_DYNAMIC ()) CALL ABORT\n+      IF (OMP_GET_DYNAMIC ()) STOP 8\n \n       CALL OMP_SET_NESTED (.TRUE.)\n-      IF (.NOT. OMP_GET_NESTED ()) CALL ABORT\n+      IF (.NOT. OMP_GET_NESTED ()) STOP 9\n       CALL OMP_SET_NESTED (.FALSE.)\n-      IF (OMP_GET_NESTED ()) CALL ABORT\n+      IF (OMP_GET_NESTED ()) STOP 10\n \n       CALL OMP_SET_NUM_THREADS (5)\n-      IF (OMP_GET_NUM_THREADS () .NE. 1) CALL ABORT\n-      IF (OMP_GET_MAX_THREADS () .NE. 5) CALL ABORT\n-      IF (OMP_GET_THREAD_NUM () .NE. 0) CALL ABORT\n+      IF (OMP_GET_NUM_THREADS () .NE. 1) STOP 11\n+      IF (OMP_GET_MAX_THREADS () .NE. 5) STOP 12\n+      IF (OMP_GET_THREAD_NUM () .NE. 0) STOP 13\n       CALL OMP_SET_NUM_THREADS (3)\n-      IF (OMP_GET_NUM_THREADS () .NE. 1) CALL ABORT\n-      IF (OMP_GET_MAX_THREADS () .NE. 3) CALL ABORT\n-      IF (OMP_GET_THREAD_NUM () .NE. 0) CALL ABORT\n+      IF (OMP_GET_NUM_THREADS () .NE. 1) STOP 14\n+      IF (OMP_GET_MAX_THREADS () .NE. 3) STOP 15\n+      IF (OMP_GET_THREAD_NUM () .NE. 0) STOP 16\n       L = .FALSE.\n C$OMP PARALLEL REDUCTION (.OR.:L)\n       L = OMP_GET_NUM_THREADS () .NE. 3\n@@ -56,22 +56,22 @@\n       L = L .OR. (OMP_GET_THREAD_NUM () .NE. 0)\n C$OMP END MASTER\n C$OMP END PARALLEL\n-      IF (L) CALL ABORT\n+      IF (L) STOP 17\n \n-      IF (OMP_GET_NUM_PROCS () .LE. 0) CALL ABORT\n-      IF (OMP_IN_PARALLEL ()) CALL ABORT\n+      IF (OMP_GET_NUM_PROCS () .LE. 0) STOP 18\n+      IF (OMP_IN_PARALLEL ()) STOP 19\n C$OMP PARALLEL REDUCTION (.OR.:L)\n       L = .NOT. OMP_IN_PARALLEL ()\n C$OMP END PARALLEL\n C$OMP PARALLEL REDUCTION (.OR.:L) IF (.TRUE.)\n       L = .NOT. OMP_IN_PARALLEL ()\n C$OMP END PARALLEL\n-      IF (L) CALL ABORT\n+      IF (L) STOP 20\n \n       E = OMP_GET_WTIME ()\n-      IF (D .GT. E) CALL ABORT\n+      IF (D .GT. E) STOP 21\n       D = OMP_GET_WTICK ()\n C Negative precision is definitely wrong,\n C bigger than 1s clock resolution is also strange\n-      IF (D .LE. 0 .OR. D .GT. 1.) CALL ABORT\n+      IF (D .LE. 0 .OR. D .GT. 1.) STOP 22\n       END"}, {"sha": "ce6aa00e521659547753af432cc20fc767d357e3", "filename": "libgomp/testsuite/libgomp.fortran/lib4.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flib4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,11 +6,11 @@ program lib4\n   integer :: modifier\n   call omp_set_schedule (omp_sched_static, 32)\n   call omp_get_schedule (kind, modifier)\n-  if (kind.ne.omp_sched_static.or.modifier.ne.32) call abort\n+  if (kind.ne.omp_sched_static.or.modifier.ne.32) STOP 1\n   call omp_set_schedule (omp_sched_dynamic, 4)\n   call omp_get_schedule (kind, modifier)\n-  if (kind.ne.omp_sched_dynamic.or.modifier.ne.4) call abort\n-  if (omp_get_thread_limit ().lt.0) call abort\n+  if (kind.ne.omp_sched_dynamic.or.modifier.ne.4) STOP 2\n+  if (omp_get_thread_limit ().lt.0) STOP 3\n   call omp_set_max_active_levels (6)\n-  if (omp_get_max_active_levels ().ne.6) call abort\n+  if (omp_get_max_active_levels ().ne.6) STOP 4\n end program lib4"}, {"sha": "b3408388c5db0c5a0a14f2c2fd4c5497b1fadde2", "filename": "libgomp/testsuite/libgomp.fortran/lock-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -7,16 +7,16 @@\n \n   l = .false.\n   call omp_init_nest_lock (lock)\n-  if (omp_test_nest_lock (lock) .ne. 1) call abort\n-  if (omp_test_nest_lock (lock) .ne. 2) call abort\n+  if (omp_test_nest_lock (lock) .ne. 1) STOP 1\n+  if (omp_test_nest_lock (lock) .ne. 2) STOP 2\n !$omp parallel if (.false.) reduction (.or.:l)\n   ! In OpenMP 2.5 this was supposed to return 3,\n   ! but in OpenMP 3.0 the parallel region has a different\n   ! task and omp_*_lock_t are owned by tasks, not by threads.\n   if (omp_test_nest_lock (lock) .ne. 0) l = .true.\n !$omp end parallel\n-  if (l) call abort\n-  if (omp_test_nest_lock (lock) .ne. 3) call abort\n+  if (l) STOP 3\n+  if (omp_test_nest_lock (lock) .ne. 3) STOP 4\n   call omp_unset_nest_lock (lock)\n   call omp_unset_nest_lock (lock)\n   call omp_unset_nest_lock (lock)"}, {"sha": "8608027ef54675a2bb03b3e110e1715a9ec0d890", "filename": "libgomp/testsuite/libgomp.fortran/lock-2.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Flock-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -8,8 +8,8 @@\n   l = .false.\n   call omp_init_nest_lock (lock)\n !$omp parallel num_threads (1) reduction (.or.:l)\n-  if (omp_test_nest_lock (lock) .ne. 1) call abort\n-  if (omp_test_nest_lock (lock) .ne. 2) call abort\n+  if (omp_test_nest_lock (lock) .ne. 1) STOP 1\n+  if (omp_test_nest_lock (lock) .ne. 2) STOP 2\n !$omp task if (.false.) shared (lock, l)\n   if (omp_test_nest_lock (lock) .ne. 0) l = .true.\n !$omp end task\n@@ -19,6 +19,6 @@\n   call omp_unset_nest_lock (lock)\n   call omp_unset_nest_lock (lock)\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 3\n   call omp_destroy_nest_lock (lock)\n end"}, {"sha": "ed1e832ee6edc4981e4497b46aedbe30eb6cedf7", "filename": "libgomp/testsuite/libgomp.fortran/nested1.f90", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnested1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnested1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnested1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -8,16 +8,16 @@ program nested1\n   e3 = 0\n   call omp_set_nested (.true.)\n   call omp_set_dynamic (.false.)\n-  if (omp_in_parallel ()) call abort\n-  if (omp_get_num_threads ().ne.1) call abort\n-  if (omp_get_level ().ne.0) call abort\n-  if (omp_get_ancestor_thread_num (0).ne.0) call abort\n-  if (omp_get_ancestor_thread_num (-1).ne.-1) call abort\n-  if (omp_get_ancestor_thread_num (1).ne.-1) call abort\n-  if (omp_get_team_size (0).ne.1) call abort\n-  if (omp_get_team_size (-1).ne.-1) call abort\n-  if (omp_get_team_size (1).ne.-1) call abort\n-  if (omp_get_active_level ().ne.0) call abort\n+  if (omp_in_parallel ()) STOP 1\n+  if (omp_get_num_threads ().ne.1) STOP 2\n+  if (omp_get_level ().ne.0) STOP 3\n+  if (omp_get_ancestor_thread_num (0).ne.0) STOP 4\n+  if (omp_get_ancestor_thread_num (-1).ne.-1) STOP 5\n+  if (omp_get_ancestor_thread_num (1).ne.-1) STOP 6\n+  if (omp_get_team_size (0).ne.1) STOP 7\n+  if (omp_get_team_size (-1).ne.-1) STOP 8\n+  if (omp_get_team_size (1).ne.-1) STOP 9\n+  if (omp_get_active_level ().ne.0) STOP 10\n !$omp parallel num_threads (4) private (e, tn1)\n   e = 0\n   tn1 = omp_get_thread_num ()\n@@ -83,5 +83,5 @@ program nested1\n !$omp end parallel\n !$omp end parallel\n !$omp end parallel\n-  if (e1.ne.0.or.e2.ne.0.or.e3.ne.0) call abort\n+  if (e1.ne.0.or.e2.ne.0.or.e3.ne.0) STOP 11\n end program nested1"}, {"sha": "833cb9a088456b29e514ea50883f2e4be8d16362", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -5,7 +5,7 @@\n   b = 2\n   c = 3\n   call foo\n-  if (a .ne. 7) call abort\n+  if (a .ne. 7) STOP 1\n contains\n   subroutine foo\n     use omp_lib\n@@ -38,6 +38,6 @@ subroutine foo\n       if (a .ne. 7 .or. b .ne. 8 .or. c .ne. 9) l = .true.\n     end if\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 2\n   end subroutine foo\n end"}, {"sha": "34054ad49373b2404f7ea763a75896585450df3b", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -24,8 +24,8 @@ end subroutine test2\n   subroutine test3\n     integer :: i\n     common /c/ i\n-    if (i .lt. 0 .or. i .ge. 4) call abort\n-    if (i + 10 .ne. vari) call abort\n+    if (i .lt. 0 .or. i .ge. 4) STOP 1\n+    if (i + 10 .ne. vari) STOP 2\n   end subroutine test3\n   subroutine test4\n     use omp_lib"}, {"sha": "4e8a18a63ac720500d08b30ec46c15a328fe5816", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -5,7 +5,7 @@ program nestomp\n   integer :: j\n   j = 8\n   call bar\n-  if (j.ne.10) call abort\n+  if (j.ne.10) STOP 1\n contains\n   subroutine foo (i)\n     integer :: i"}, {"sha": "bc8614a340ab4771abd52da77f556584c5cdee76", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn4.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,19 +6,19 @@ program foo\n   call test1\n   call test2\n   do i = 1, 10\n-    if (a(i) .ne. 10 * i) call abort\n+    if (a(i) .ne. 10 * i) STOP 1\n   end do\n   !$omp parallel do reduction (+:c)\n   do i = 1, 10\n     c = c + a\n   end do\n   do i = 1, 10\n-    if (c(i) .ne. 10 * a(i)) call abort\n+    if (c(i) .ne. 10 * a(i)) STOP 2\n   end do\n   !$omp parallel do lastprivate (j)\n   do j = 1, 10, k\n   end do\n-  if (j .ne. 11) call abort\n+  if (j .ne. 11) STOP 3\n contains\n   subroutine test1\n     integer :: i\n@@ -36,6 +36,6 @@ subroutine test2\n     !$omp parallel do lastprivate (j)\n     do j = 1, 10, k\n     end do\n-    if (j .ne. 11) call abort\n+    if (j .ne. 11) STOP 4\n   end subroutine test2\n end program foo"}, {"sha": "e65019e2666c064f83af8722e8ff5ceab5598013", "filename": "libgomp/testsuite/libgomp.fortran/nestedfn5.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fnestedfn5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -30,7 +30,7 @@ subroutine foo\n       b = b + 1\n     end do\n !$omp end simd\n-    if (a /= 21 .or. b /= 12) call abort\n+    if (a /= 21 .or. b /= 12) STOP 1\n !$omp simd aligned(f : c_sizeof (e(1)))\n     do b = 1, 64\n       g(b) = f\n@@ -44,8 +44,8 @@ subroutine foo\n     d(2:2,4:5) = d(2:2,4:5) + 1\n !$omp end task\n !$omp task depend(in : a, d(2:2,4:5))\n-    if (a /= 22) call abort\n-    if (any (d(2:2,4:5) /= 5)) call abort\n+    if (a /= 22) STOP 2\n+    if (any (d(2:2,4:5) /= 5)) STOP 3\n !$omp end task\n !$omp end taskgroup\n !$omp end single\n@@ -64,8 +64,8 @@ subroutine foo\n     d(2:3,4:4) = 9\n !$omp end target\n !$omp target update from (a, q, d(2:3,4:4), l)\n-    if (a /= 6 .or. l .or. b /= 11 .or. any (q /= 8)) call abort\n-    if (any (d(2:3,4:4) /= 9) .or. d(2,5) /= 5 .or. d(3,5) /= 4) call abort\n+    if (a /= 6 .or. l .or. b /= 11 .or. any (q /= 8)) STOP 4\n+    if (any (d(2:3,4:4) /= 9) .or. d(2,5) /= 5 .or. d(3,5) /= 4) STOP 5\n     a = 12\n     b = 13\n     q = 14\n@@ -82,7 +82,7 @@ subroutine foo\n     m = 0\n     n = 64\n     o = 16\n-    if (l) call abort\n+    if (l) STOP 6\n !$omp target teams distribute parallel do simd if (.not.l) device(a) &\n !$omp & num_teams(b) dist_schedule(static, c) num_threads (h) &\n !$omp & reduction (+: m) safelen (n) schedule(static, o) &\n@@ -91,7 +91,7 @@ subroutine foo\n       m = m + 1\n     end do\n !$omp end target teams distribute parallel do simd\n-    if (m /= 64) call abort\n+    if (m /= 64) STOP 7\n !$omp end target data\n   end subroutine foo\n end subroutine bar"}, {"sha": "cec05287fc2a5842a240a6c742803af80b26f828", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,22 +18,22 @@\n     c = c * 2\n !$omp atomic\n     d = 2 / d\n-    if (a .ne. 5 .or. b .ne. 2 .or. c .ne. 6 .or. d .ne. 0.5) call abort\n+    if (a .ne. 5 .or. b .ne. 2 .or. c .ne. 6 .or. d .ne. 0.5) STOP 1\n     d = 1.2\n !$omp atomic\n     a = a + c + d\n !$omp atomic\n     b = b - (a + c + d)\n-    if (a .ne. 12 .or. b .ne. -17) call abort\n+    if (a .ne. 12 .or. b .ne. -17) STOP 2\n !$omp atomic\n     a = c + d + a\n !$omp atomic\n     b = a + c + d - b\n-    if (a .ne. 19 .or. b .ne. 43) call abort\n+    if (a .ne. 19 .or. b .ne. 43) STOP 3\n !$omp atomic\n     b = (a + c + d) - b\n     a = 32\n !$omp atomic\n     a = a / 3.4\n-    if (a .ne. 9 .or. b .ne. -16) call abort\n+    if (a .ne. 9 .or. b .ne. -16) STOP 4\n end"}, {"sha": "06f6241f01f0e60eafd3664d842681d9ff0dc475", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic2.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,28 +11,28 @@\n   n = 20\n   call foo (r, d, n)\n \n-  if (n .ne. 22) call abort\n-  if (any (r .ne. 33)) call abort\n+  if (n .ne. 22) STOP 1\n+  if (any (r .ne. 33)) STOP 2\n \n   i = 1\n   j = 18\n   k = 23\n !$omp atomic\n   i = min (i, j, k, n)\n-  if (i .ne. 1) call abort\n+  if (i .ne. 1) STOP 3\n !$omp atomic\n   i = max (j, n, k, i)\n-  if (i .ne. 23) call abort\n+  if (i .ne. 23) STOP 4\n \n   a = 1\n   b = 18\n   c = 23\n !$omp atomic\n   a = min (a, b, c)\n-  if (a .ne. 1) call abort\n+  if (a .ne. 1) STOP 5\n !$omp atomic\n   a = max (a, b, c)\n-  if (a .ne. 23) call abort\n+  if (a .ne. 23) STOP 6\n \n contains\n   function bar (i)"}, {"sha": "e4a1a6e460d64e6cd85a02ce6b2056db9d728ea4", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic3.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -36,23 +36,23 @@\n     c2 = c\n !$omp atomic read\n     d2 = d\n-    if (a2 .ne. 5 .or. b2 .ne. 2 .or. c2 .ne. 6 .or. d2 .ne. 0.5) call abort\n+    if (a2 .ne. 5 .or. b2 .ne. 2 .or. c2 .ne. 6 .or. d2 .ne. 0.5) STOP 1\n !$omp atomic write\n     d = 1.2\n !$omp atomic\n     a = a + c + d\n !$omp atomic\n     b = b - (a + c + d)\n-    if (a .ne. 12 .or. b .ne. -17) call abort\n+    if (a .ne. 12 .or. b .ne. -17) STOP 2\n !$omp atomic\n     a = c + d + a\n !$omp atomic\n     b = a + c + d - b\n-    if (a .ne. 19 .or. b .ne. 43) call abort\n+    if (a .ne. 19 .or. b .ne. 43) STOP 3\n !$omp atomic\n     b = (a + c + d) - b\n     a = 32\n !$omp atomic\n     a = a / 3.4\n-    if (a .ne. 9 .or. b .ne. -16) call abort\n+    if (a .ne. 9 .or. b .ne. -16) STOP 4\n end"}, {"sha": "c4cb5cf9de926ae1289494b5159874828dda28ce", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -28,10 +28,10 @@\n     d = d / 2.0\n     d2 = d\n !$omp end atomic\n-    if (a2 .ne. 1 .or. b2 .ne. -16 .or. c2 .ne. 3 .or. d2 .ne. 2) call abort\n+    if (a2 .ne. 1 .or. b2 .ne. -16 .or. c2 .ne. 3 .or. d2 .ne. 2) STOP 1\n !$omp atomic read\n     a2 = a\n !$omp atomic read\n     c2 = c\n-    if (a2 .ne. 5 .or. b2 .ne. -16 .or. c2 .ne. 6 .or. d2 .ne. 2) call abort\n+    if (a2 .ne. 5 .or. b2 .ne. -16 .or. c2 .ne. 6 .or. d2 .ne. 2) STOP 2\n end"}, {"sha": "1303ba4b51ce4ee0012e2488198a60aed2db2e70", "filename": "libgomp/testsuite/libgomp.fortran/omp_atomic5.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_atomic5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -30,30 +30,30 @@\n     d = d / 2.0\n     d2 = d\n !$omp end atomic\n-    if (a2 .ne. 1 .or. b2 .ne. -16 .or. c2 .ne. 3 .or. d2 .ne. 2) call abort\n+    if (a2 .ne. 1 .or. b2 .ne. -16 .or. c2 .ne. 3 .or. d2 .ne. 2) STOP 1\n !$omp atomic read seq_cst\n     a2 = a\n !$omp atomic seq_cst, read\n     c2 = c\n-    if (a2 .ne. 5 .or. b2 .ne. -16 .or. c2 .ne. 6 .or. d2 .ne. 2) call abort\n+    if (a2 .ne. 5 .or. b2 .ne. -16 .or. c2 .ne. 6 .or. d2 .ne. 2) STOP 2\n     a2 = 10\n-    if (a2 .ne. 10) call abort\n+    if (a2 .ne. 10) STOP 3\n !$omp atomic capture\n     a2 = a\n     a = e(1) + e(6) + e(7) * 2\n !$omp endatomic\n-    if (a2 .ne. 5) call abort\n+    if (a2 .ne. 5) STOP 4\n !$omp atomic read\n     a2 = a\n !$omp end atomic\n-    if (a2 .ne. 28) call abort\n+    if (a2 .ne. 28) STOP 5\n !$omp atomic capture seq_cst\n     b2 = b\n     b = e(1) + e(7) + e(5) * 2\n !$omp end atomic\n-    if (b2 .ne. -16) call abort\n+    if (b2 .ne. -16) STOP 6\n !$omp atomic seq_cst, read\n     b2 = b\n !$omp end atomic\n-    if (b2 .ne. 24) call abort\n+    if (b2 .ne. 24) STOP 7\n end"}, {"sha": "f050f5101be4d67945fc4e7578040daf7aa4debd", "filename": "libgomp/testsuite/libgomp.fortran/omp_cond1.f", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond1.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -1,13 +1,13 @@\n C Test conditional compilation in fixed form if -fopenmp\n    10 foo = 2\n      &56\n-      if (foo.ne.256) call abort\n+      if (foo.ne.256) STOP 1\n       bar = 26\n !$2 0 ba\n c$   +r = 42\n       !$ bar = 62\n !$    bar = bar + 1\n-      if (bar.ne.43) call abort\n+      if (bar.ne.43) STOP 2\n       baz = bar\n *$   0baz = 5\n C$   +12! Comment\n@@ -17,5 +17,5 @@\n !$ X  baz = 0 ! Not valid OpenMP conditional compilation lines\n ! $   baz = 1\n c$ 10&baz = 2\n-      if (baz.ne.51242) call abort\n+      if (baz.ne.51242) STOP 3\n       end"}, {"sha": "83e79dc36eba50b9025fa8d49f29932e0c2f222a", "filename": "libgomp/testsuite/libgomp.fortran/omp_cond2.f", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond2.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -2,13 +2,13 @@\n ! { dg-options \"-fno-openmp\" }\n    10 foo = 2\n      &56\n-      if (foo.ne.256) call abort\n+      if (foo.ne.256) STOP 1\n       bar = 26\n !$2 0 ba\n c$   +r = 42\n       !$ bar = 62\n !$    bar = bar + 1\n-      if (bar.ne.26) call abort\n+      if (bar.ne.26) STOP 2\n       baz = bar\n *$   0baz = 5\n C$   +12! Comment\n@@ -18,5 +18,5 @@\n !$ X  baz = 0 ! Not valid OpenMP conditional compilation lines\n ! $   baz = 1\n c$ 10&baz = 2\n-      if (baz.ne.26) call abort\n+      if (baz.ne.26) STOP 3\n       end"}, {"sha": "3db2fd1163eb222d55460d1fd1c76a934ab2b417", "filename": "libgomp/testsuite/libgomp.fortran/omp_cond3.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond3.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond3.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond3.F90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -1,7 +1,7 @@\n ! Test conditional compilation in free form if -fopenmp\n    10 foo = 2&\n   &56\n-  if (foo.ne.256) call abort\n+  if (foo.ne.256) STOP 1\n   bar = 26\n    !$  20 ba&\n !$   &r = 4&\n@@ -11,13 +11,13 @@\n #ifdef _OPENMP\n bar = bar - 1\n #endif\n-  if (bar.ne.43) call abort\n+  if (bar.ne.43) STOP 2\n       baz = bar\n !$ 30 baz = 5&     ! Comment\n !$12  &  \n   !$ + 2\n !$X baz = 0 ! Not valid OpenMP conditional compilation lines\n ! $   baz = 1\n baz = baz + 1 !$ baz = 2\n-      if (baz.ne.515) call abort\n+      if (baz.ne.515) STOP 3\n       end"}, {"sha": "ae2e93253aa1e217a820534b816318c694554228", "filename": "libgomp/testsuite/libgomp.fortran/omp_cond4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_cond4.F90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -2,7 +2,7 @@\n ! { dg-options \"-fno-openmp\" }\n    10 foo = 2&\n   &56\n-  if (foo.ne.256) call abort\n+  if (foo.ne.256) STOP 1\n   bar = 26\n    !$  20 ba&\n !$   &r = 4&\n@@ -12,13 +12,13 @@\n #ifdef _OPENMP\n bar = bar - 1\n #endif\n-  if (bar.ne.26) call abort\n+  if (bar.ne.26) STOP 2\n       baz = bar\n !$ 30 baz = 5&     ! Comment\n !$12  &  \n   !$ + 2\n !$X baz = 0 ! Not valid OpenMP conditional compilation lines\n ! $   baz = 1\n baz = baz + 1 !$ baz = 2\n-      if (baz.ne.27) call abort\n+      if (baz.ne.27) STOP 3\n       end"}, {"sha": "59fe372fe00353d39fb05eac54d284c4696aedd9", "filename": "libgomp/testsuite/libgomp.fortran/omp_parse1.f90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -41,16 +41,16 @@ subroutine test_parallel\n     d(b + 1) = c\n     if (f .ne. g .or. f .ne. b) h = .true.\n !$omp endparallel\n-    if (h) call abort\n-    if (a .ne. 6) call abort\n-    if (j .ne. 24) call abort\n-    if (d(1) .eq. -1) call abort\n+    if (h) STOP 1\n+    if (a .ne. 6) STOP 2\n+    if (j .ne. 24) STOP 3\n+    if (d(1) .eq. -1) STOP 4\n     e = 1\n     do g = 1, d(1)\n-      if (d(g) .ne. d(1)) call abort\n+      if (d(g) .ne. d(1)) STOP 5\n       e = e * 2\n     end do\n-    if (e .ne. i) call abort\n+    if (e .ne. i) STOP 6\n   end subroutine test_parallel\n \n   subroutine test_do_orphan\n@@ -77,7 +77,7 @@ subroutine test_do\n     call test_do_orphan\n !$omp do schedule (static) firstprivate (n)\n     do 200 i = 1, j\n-      if (i .eq. 1 .and. n .ne. 24) call abort\n+      if (i .eq. 1 .and. n .ne. 24) STOP 7\n       n = i\n 200   d(n) = omp_get_thread_num ()\n !$omp enddo nowait\n@@ -101,11 +101,11 @@ subroutine test_do\n     end do\n     ! Implied omp end do here\n !$omp end parallel\n-    if (.not. m) call abort\n+    if (.not. m) STOP 8\n \n     j = 0\n     do i = 1, 64\n-      if (d(i) .lt. j .or. d(i) .ge. j + k) call abort\n+      if (d(i) .lt. j .or. d(i) .ge. j + k) STOP 9\n       if (i .eq. 16) j = 1024\n       if (i .eq. 32) j = 2048\n       if (i .eq. 48) j = 4096\n@@ -150,9 +150,9 @@ subroutine test_sections\n     n = 7\n !$omp endsections\n !$omp end parallel\n-    if (j .ne. 271 .or. l .ne. 0) call abort\n-    if (m .ne. 4 + 6 + 8 + 10) call abort\n-    if (n .ne. 7) call abort\n+    if (j .ne. 271 .or. l .ne. 0) STOP 10\n+    if (m .ne. 4 + 6 + 8 + 10) STOP 11\n+    if (n .ne. 7) STOP 12\n   end subroutine test_sections\n \n   subroutine test_single\n@@ -180,6 +180,6 @@ subroutine test_single\n !$omp end single copyprivate (j)\n     if (i .ne. omp_get_thread_num () .or. j .ne. -2) m = .true.\n !$omp endparallel\n-    if (m) call abort\n+    if (m) STOP 13\n   end subroutine test_single\n end"}, {"sha": "e63f55f7c316ec764aa95a75942192179e94ce4a", "filename": "libgomp/testsuite/libgomp.fortran/omp_parse2.f90", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -16,7 +16,7 @@ subroutine test_master\n     j = omp_get_thread_num () .eq. 0\n !$omp endmaster\n !$omp end parallel\n-    if (.not. (i .or. j)) call abort\n+    if (.not. (i .or. j)) STOP 1\n   end subroutine test_master\n \n   subroutine test_critical_1 (i, j)\n@@ -45,7 +45,7 @@ subroutine test_critical\n     i = i + 1\n !$omp endcritical (critical_foo)\n !$omp end parallel\n-    if (n .lt. 1 .or. i .ne. n * 3 .or. j .ne. n * 3) call abort\n+    if (n .lt. 1 .or. i .ne. n * 3 .or. j .ne. n * 3) STOP 2\n   end subroutine test_critical\n \n   subroutine test_barrier\n@@ -62,7 +62,7 @@ subroutine test_barrier\n       j = j .or. .true.\n     end if\n !$omp end parallel\n-    if (i .ne. 5 .or. j) call abort\n+    if (i .ne. 5 .or. j) STOP 3\n   end subroutine test_barrier\n \n   subroutine test_atomic\n@@ -89,14 +89,14 @@ subroutine test_atomic\n     f = max (omp_get_thread_num (), f)\n     if (omp_get_thread_num () .eq. 0) g = omp_get_num_threads ()\n !$omp end parallel\n-    if (g .le. 0 .or. g .gt. 8) call abort\n-    if (a .ne. 6 * g .or. b .ne. 3 ** g) call abort\n+    if (g .le. 0 .or. g .gt. 8) STOP 4\n+    if (a .ne. 6 * g .or. b .ne. 3 ** g) STOP 5\n     if (iand (g, 1) .eq. 1) then\n-      if (c .ne. 8) call abort\n+      if (c .ne. 8) STOP 6\n     else if (c .ne. 0) then\n-      call abort\n+      STOP 7\n     end if\n-    if (d .ne. 1024 / (2 ** g)) call abort\n-    if (e .ne. 0 .or. f .ne. g - 1) call abort\n+    if (d .ne. 1024 / (2 ** g)) STOP 8\n+    if (e .ne. 0 .or. f .ne. g - 1) STOP 9\n   end subroutine test_atomic\n end"}, {"sha": "d8e86d924a5c5086ba6ddf65752123e27f88010b", "filename": "libgomp/testsuite/libgomp.fortran/omp_parse3.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -44,10 +44,10 @@ subroutine test_ordered\n     j = 1\n     do 100 i = 1, 100\n       if (i .eq. j) then\n-\tif (d(i) .ne. i) call abort\n+\tif (d(i) .ne. i) STOP 1\n \tj = i + 5\n       else\n-\tif (d(i) .ne. -1) call abort\n+\tif (d(i) .ne. -1) STOP 2\n       end if\n 100   d(i) = -1\n   end subroutine test_ordered\n@@ -68,17 +68,17 @@ subroutine test_threadprivate\n !$omp parallel copyin (/tlsblock/, z) reduction (.or.:m) &\n !$omp& num_threads (4)\n     if (omp_get_thread_num () .eq. 0) i = omp_get_num_threads ()\n-    if (x .ne. 6 .or. y .ne. 7 .or. z .ne. 8) call abort\n+    if (x .ne. 6 .or. y .ne. 7 .or. z .ne. 8) STOP 3\n     x = omp_get_thread_num ()\n     y = omp_get_thread_num () + 1024\n     z = omp_get_thread_num () + 4096\n !$omp end parallel\n-    if (x .ne. 0 .or. y .ne. 1024 .or. z .ne. 4096) call abort\n+    if (x .ne. 0 .or. y .ne. 1024 .or. z .ne. 4096) STOP 4\n !$omp parallel num_threads (4), private (j) reduction (.or.:n)\n     if (omp_get_num_threads () .eq. i) then\n       j = omp_get_thread_num ()\n       if (x .ne. j .or. y .ne. j + 1024 .or. z .ne. j + 4096) &\n-&       call abort\n+&       STOP 5\n     end if\n !$omp end parallel\n     m = m .or. n\n@@ -88,9 +88,9 @@ subroutine test_threadprivate\n     if (z .ne. 4096) n = .true.\n     if (omp_get_num_threads () .eq. i) then\n       j = omp_get_thread_num ()\n-      if (x .ne. j .or. y .ne. j + 1024) call abort\n+      if (x .ne. j .or. y .ne. j + 1024) STOP 6\n     end if\n !$omp end parallel\n-    if (m .or. n) call abort\n+    if (m .or. n) STOP 7\n   end subroutine test_threadprivate\n end"}, {"sha": "273ce53075b86fb2765461f19d5b44f020262ee8", "filename": "libgomp/testsuite/libgomp.fortran/omp_parse4.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fomp_parse4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -59,14 +59,14 @@ subroutine test_workshare\n !$omp end parallel\n \n     if (any (f .ne. (/100, 100, 100, 210, 210, 210, 310, 310, 337, 337/))) &\n-&     call abort\n-    if (any (g .ne. (/-1, -1, -1, 0, 0, 0, 0, 0, 0, 0/))) call abort\n-    if (i .ne. 20) call abort\n-!$  if (l .ne. 128 + m) call abort\n-    if (any (d .ne. 1 .or. e .ne. 1)) call abort\n-    if (any (b .ne. transpose (a))) call abort\n-    if (any (c .ne. b)) call abort\n+&     STOP 1\n+    if (any (g .ne. (/-1, -1, -1, 0, 0, 0, 0, 0, 0, 0/))) STOP 2\n+    if (i .ne. 20) STOP 3\n+!$  if (l .ne. 128 + m) STOP 4\n+    if (any (d .ne. 1 .or. e .ne. 1)) STOP 5\n+    if (any (b .ne. transpose (a))) STOP 6\n+    if (any (c .ne. b)) STOP 7\n     if (any (n .ne. (/1, 2, 6, 12, 5, 30, 42, 56, 9, 90, &\n-&                     110, 132, 13, 182, 210, 240/))) call abort\n+&                     110, 132, 13, 182, 210, 240/))) STOP 8\n   end subroutine test_workshare\n end"}, {"sha": "de16933f9e526f5d7b2be520fd5a5832c688ac30", "filename": "libgomp/testsuite/libgomp.fortran/openmp_version-1.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-1.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,6 +4,6 @@ program main\n       implicit none\n       include \"omp_lib.h\"\n \n-      if (openmp_version .ne. 201511) call abort;\n+      if (openmp_version .ne. 201511) STOP 1;\n \n       end program main"}, {"sha": "b2e0d3a70645e3ab35f53aafd281ad1cd4401cef", "filename": "libgomp/testsuite/libgomp.fortran/openmp_version-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fopenmp_version-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,6 +4,6 @@ program main\n   use omp_lib\n   implicit none\n \n-  if (openmp_version .ne. 201511) call abort;\n+  if (openmp_version .ne. 201511) STOP 1;\n \n end program main"}, {"sha": "bb165cdfaca244478b7a4564ad49709b38dfbad4", "filename": "libgomp/testsuite/libgomp.fortran/parloops-exit-first-loop-alt-2.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt-2.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -34,7 +34,7 @@ program main\n   call foo ()\n \n   do i = 0, n - 1\n-     if (c(i) .ne. (i + MODULO ((i * 3), 7))) call abort\n+     if (c(i) .ne. (i + MODULO ((i * 3), 7))) STOP 1\n   end do\n \n end program"}, {"sha": "5ed4a382a08df796ed6298125dafc95be4c9ac94", "filename": "libgomp/testsuite/libgomp.fortran/parloops-exit-first-loop-alt.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparloops-exit-first-loop-alt.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -35,7 +35,7 @@ program main\n   call foo (n)\n \n   do i = 0, n - 1\n-     if (c(i) .ne. (i + MODULO ((i * 3), 7))) call abort\n+     if (c(i) .ne. (i + MODULO ((i * 3), 7))) STOP 1\n   end do\n \n end program"}, {"sha": "817006a2d207a39c4cdf168f0f42f2c81b7091d2", "filename": "libgomp/testsuite/libgomp.fortran/pointer1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,7 +21,7 @@ subroutine foo (a, c)\n         c(1) = c(1) + 1\n       r = r + 1\n     !$omp end parallel\n-    if (a.ne.r.or.c(1).ne.r) call abort\n+    if (a.ne.r.or.c(1).ne.r) STOP 1\n     r2 = r\n     b => a\n     d => c\n@@ -33,7 +33,7 @@ subroutine foo (a, c)\n         d(1) = d(1) + 1\n       r = r + 1\n     !$omp end parallel\n-    if (b.ne.r+r2.or.d(1).ne.r+r2) call abort\n+    if (b.ne.r+r2.or.d(1).ne.r+r2) STOP 2\n   end subroutine foo\n   subroutine bar (a, c)\n     integer, pointer :: a, c(:), b, d(:)\n@@ -55,8 +55,8 @@ subroutine bar (a, c)\n \tend if\n       end do\n     !$omp end parallel do\n-    if (b.ne.100.or.any(d.ne.10)) call abort\n-    if (a.ne.17.or.any(c.ne.21)) call abort\n+    if (b.ne.100.or.any(d.ne.10)) STOP 3\n+    if (a.ne.17.or.any(c.ne.21)) STOP 4\n     a => b\n     c => d\n     !$omp parallel do firstprivate (b, d) lastprivate (b, d)\n@@ -71,7 +71,7 @@ subroutine bar (a, c)\n \tend if\n       end do\n     !$omp end parallel do\n-    if (a.ne.200.or.any(c.ne.20)) call abort\n-    if (b.ne.17.or.any(d.ne.21)) call abort\n+    if (a.ne.200.or.any(c.ne.20)) STOP 5\n+    if (b.ne.17.or.any(d.ne.21)) STOP 6\n   end subroutine bar\n end"}, {"sha": "859c0e4c36bc46dbea54bb4978f2e8f44af5f14f", "filename": "libgomp/testsuite/libgomp.fortran/pointer2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpointer2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,8 +21,8 @@\n   thr(1) = thr(1) + 1\n   i = i + 1\n !$omp end parallel\n-  if (l) call abort\n-  if (thr(1).ne.14) call abort\n-  if (s(1).ne.1+i) call abort\n-  if (u(1).ne.14) call abort\n+  if (l) STOP 1\n+  if (thr(1).ne.14) STOP 2\n+  if (s(1).ne.1+i) STOP 3\n+  if (u(1).ne.14) STOP 4\n end"}, {"sha": "f0f760da0aaeff6f083f3f497d1355e93af91491", "filename": "libgomp/testsuite/libgomp.fortran/pr25162.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25162.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25162.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25162.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -34,7 +34,7 @@ SUBROUTINE TEST3\n C$OMP THREADPRIVATE(/TESTCOM/)\n       INTEGER K\n       DO K = 1, 10\n-         IF (K.NE.BPRIM(K)) CALL ABORT\n+         IF (K.NE.BPRIM(K)) STOP 1\n       END DO\n       RETURN\n       END"}, {"sha": "61dd1bc04e6c232b2f7d43ce637201fb79ef370b", "filename": "libgomp/testsuite/libgomp.fortran/pr25219.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25219.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25219.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr25219.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,5 +11,5 @@\n   end do\n !$omp end do\n !$omp end parallel\n-  if (k .ne. 100) call abort\n+  if (k .ne. 100) STOP 1\n end"}, {"sha": "8930c780ff25230324201fe805d11d8ad10db300", "filename": "libgomp/testsuite/libgomp.fortran/pr27395-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -8,7 +8,7 @@ program pr27395_1\n   integer, dimension(n) :: sumarray\n   call foo(n,m,sumarray)\n   do i=1,n\n-    if (sumarray(i).ne.m*i) call abort\n+    if (sumarray(i).ne.m*i) STOP 1\n   end do\n end program pr27395_1\n "}, {"sha": "f55b701cdb4285b5ec1654819f7b477a7f1fd97d", "filename": "libgomp/testsuite/libgomp.fortran/pr27395-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27395-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -25,6 +25,6 @@ subroutine foo(n,m)\n !$OMP END DO\n !$OMP END PARALLEL\n   do i=1,n\n-    if (sumarray(i).ne.m*i) call abort\n+    if (sumarray(i).ne.m*i) STOP 1\n   end do\n end subroutine foo"}, {"sha": "7bc5d3e78c8b7e2385958a8ef25ab619aca7b42e", "filename": "libgomp/testsuite/libgomp.fortran/pr27416-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27416-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27416-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27416-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,7 +6,7 @@\n !$omp parallel num_threads (4)\n   call foo (j)\n !$omp end parallel\n-  if (j.ne.6+16) call abort\n+  if (j.ne.6+16) STOP 1\n end\n \n subroutine foo (j)"}, {"sha": "bb75af9c15cdc1e70f7a1f12a0dab0e398f416bc", "filename": "libgomp/testsuite/libgomp.fortran/pr27916-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,5 +22,5 @@ program pr27916\n     r = r .or. allocated (a)\n   end do\n  !$omp end parallel do\n-  if (r) call abort\n+  if (r) STOP 1\n end program pr27916"}, {"sha": "7973726cb5793a6d4cb63c0f151c6fbc7d740a86", "filename": "libgomp/testsuite/libgomp.fortran/pr27916-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,5 +22,5 @@ program pr27916\n     r = r .or. allocated (a)\n   end do\n  !$omp end parallel do\n-  if (r) call abort\n+  if (r) STOP 1\n end program pr27916"}, {"sha": "a667e08f73ee97a1e6b5769098b222c95f568f8e", "filename": "libgomp/testsuite/libgomp.fortran/pr28390.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr28390.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr28390.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr28390.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,5 +4,5 @@ program pr28390\n !$omp parallel do lastprivate(i)\n       do i=1,100\n       end do\n-      if (i.ne.101) call abort\n+      if (i.ne.101) STOP 1\n       end"}, {"sha": "4b802c563105f826231665fba2b9c19c012d1617", "filename": "libgomp/testsuite/libgomp.fortran/pr29629.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr29629.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr29629.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr29629.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,7 +4,7 @@\n program pr29629\n   integer :: n\n   n = 10000\n-  if (any (func(n).ne.10000)) call abort\n+  if (any (func(n).ne.10000)) STOP 1\n   contains\n     function func(n)\n       integer, intent(in) :: n"}, {"sha": "ce496cacd232d96958ae44454e3b07560c0ead8c", "filename": "libgomp/testsuite/libgomp.fortran/pr32550.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32550.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32550.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr32550.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,5 +17,5 @@\n \te = e + 1\n       end if\n !$omp end parallel\n-      if (e.ne.0) call abort\n+      if (e.ne.0) STOP 1\n       end"}, {"sha": "e6a26f42d82721372324aee89e28832ca52dd5c0", "filename": "libgomp/testsuite/libgomp.fortran/pr33880.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr33880.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr33880.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr33880.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -9,7 +9,7 @@ program pr33880\n     !$omp atomic\n       j = j + 1\n   end do\n-  if (j .ne. 1000) call abort\n+  if (j .ne. 1000) STOP 1\n contains\n   subroutine something()\n     i = 0"}, {"sha": "6d2316472d838effa5f61de6f9f79945eab5231e", "filename": "libgomp/testsuite/libgomp.fortran/pr34020.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr34020.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr34020.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr34020.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -16,5 +16,5 @@ subroutine atomic_add(lhs, rhs)\n       do i = 1, 300000\n         call atomic_add(lhs, rhs)\n       enddo\n-      if (lhs .ne. 300000) call abort\n+      if (lhs .ne. 300000) STOP 1\n       end"}, {"sha": "e6be64f15f521bba22aac095ea20cdd9b0df9adf", "filename": "libgomp/testsuite/libgomp.fortran/pr35130.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr35130.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr35130.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr35130.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -10,7 +10,7 @@ program pr35130\n     call inner(k)\n   end do\n !$omp end parallel do\n-  if (any (a.ne.42)) call abort\n+  if (any (a.ne.42)) STOP 1\n contains\n  subroutine inner(i)\n    implicit none"}, {"sha": "3792a33fe9f506fa93d98657d85f71aad3deb67a", "filename": "libgomp/testsuite/libgomp.fortran/pr42162.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr42162.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr42162.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr42162.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -49,5 +49,5 @@ program pr42162\n   !$omp parallel num_threads(3)\n   call sub3 (k, c)\n   !$omp end parallel\n-  if (k.ne.4.or.any(a.ne.2).or.any(b.ne.3).or.any(c.ne.4)) call abort\n+  if (k.ne.4.or.any(a.ne.2).or.any(b.ne.3).or.any(c.ne.4)) STOP 1\n end"}, {"sha": "0d9debce1961b342efc81b2359783d43bbc84ca4", "filename": "libgomp/testsuite/libgomp.fortran/pr46753.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr46753.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr46753.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr46753.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -7,11 +7,11 @@\n   do i = 2147483636, 2147483646\n     j = j + 1\n   end do\n-  if (j.ne.11) call abort\n+  if (j.ne.11) STOP 1\n   j = 0\n !$omp parallel do reduction(+:j)\n   do i = -2147483637, -2147483647, -1\n     j = j + 1\n   end do\n-  if (j.ne.11) call abort\n+  if (j.ne.11) STOP 2\n end"}, {"sha": "0f7bfad4caeb7f48c5b787a88f901783c2e7f0fc", "filename": "libgomp/testsuite/libgomp.fortran/pr48894.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -19,5 +19,5 @@\n       endif\n     !$omp end parallel\n   !$omp end parallel\n-  if (err .ne. 0) call abort\n+  if (err .ne. 0) STOP 1\n end"}, {"sha": "18643ac5a5057ec7984c1ebab1e930ada533b7fc", "filename": "libgomp/testsuite/libgomp.fortran/pr49792-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -14,5 +14,5 @@ program pr49792\n   real(kind=8) :: b(16)\n   b(:) = a(16:1:-1)\n   call reverse (16,a)\n-  if (any (a.ne.b)) call abort\n+  if (any (a.ne.b)) STOP 1\n end program pr49792"}, {"sha": "689f7decacba8e4a2994677b93b4bb345a1e926d", "filename": "libgomp/testsuite/libgomp.fortran/pr49792-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr49792-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,6 +17,6 @@ program pr49792\n !$omp parallel workshare\n   a = b\n !$omp end parallel workshare\n-  if (size(a).ne.size(b)) call abort()\n-  if (any (a.ne.b)) call abort()\n+  if (size(a).ne.size(b)) STOP 1\n+  if (any (a.ne.b)) STOP 2\n end program pr49792"}, {"sha": "eb85500ea4c1b962f778a8c7fbe324c1b0939c0e", "filename": "libgomp/testsuite/libgomp.fortran/pr63938-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -10,5 +10,5 @@ program pr63938_1\n     x(1) = x(1) + 1\n   end do\n !$omp end parallel do\n-  if (x(1) .ne. 1000) call abort\n+  if (x(1) .ne. 1000) STOP 1\n end program pr63938_1"}, {"sha": "934e800648e45cde348160e16f2bad3134014efb", "filename": "libgomp/testsuite/libgomp.fortran/pr63938-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr63938-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -14,5 +14,5 @@ program pr63938_2\n     x%x = x%x + 1\n   end do\n !$omp end parallel do\n-  if (x%x .ne. 1000) call abort\n+  if (x%x .ne. 1000) STOP 1\n end program pr63938_2"}, {"sha": "25754314766b5088b2e75c1148566b89c493796b", "filename": "libgomp/testsuite/libgomp.fortran/pr65597.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr65597.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr65597.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr65597.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,9 +13,9 @@\n     end do\n   do i = 1, 151\n     if (mod (i, 31) .eq. 1) then\n-      if (a(i) .ne. 2) call abort\n+      if (a(i) .ne. 2) STOP 1\n     else\n-      if (a(i) .ne. 0) call abort\n+      if (a(i) .ne. 0) STOP 2\n     end if\n   end do\n end"}, {"sha": "ecf624583401ab99651dbb03b7294fad316a160d", "filename": "libgomp/testsuite/libgomp.fortran/pr66199-1.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr66199-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr66199-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr66199-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -10,7 +10,7 @@\n   do d = a, b\n     u(d) = v(d) + w(d)\n   end do\n-  if (d .ne. 1025) call abort\n+  if (d .ne. 1025) STOP 1\n   c = 17\n   d = 75\n   !$omp parallel do simd default(none) firstprivate (a, b) shared(u, v, w) &\n@@ -20,8 +20,8 @@\n     c = c + 5\n     e = c\n   end do\n-  if (d .ne. 1025 .or. c .ne. (17 + 5 * 1024)) call abort\n-  if (e .ne. (17 + 5 * 1024)) call abort\n+  if (d .ne. 1025 .or. c .ne. (17 + 5 * 1024)) STOP 2\n+  if (e .ne. (17 + 5 * 1024)) STOP 3\n   a1 = 0\n   a2 = 0\n   b1 = 31\n@@ -35,7 +35,7 @@\n       u(d1 * 32 + d2 + 1) = v(d1 * 32 + d2 + 1) + w(d1 * 32 + d2 + 1)\n     end do\n   end do\n-  if (d1 .ne. 32 .or. d2 .ne. 32) call abort\n+  if (d1 .ne. 32 .or. d2 .ne. 32) STOP 4\n   d1 = 7\n   d2 = 9\n   !$omp parallel do simd default(none) firstprivate (a1, b1, a2, b2) &\n@@ -45,5 +45,5 @@\n       u(d1 * 32 + d2 + 1) = v(d1 * 32 + d2 + 1) + w(d1 * 32 + d2 + 1)\n     end do\n   end do\n-  if (d1 .ne. 32 .or. d2 .ne. 32) call abort\n+  if (d1 .ne. 32 .or. d2 .ne. 32) STOP 5\n end"}, {"sha": "7fcbf73862dfd3a6d4ed71beaaf4deceed65ec38", "filename": "libgomp/testsuite/libgomp.fortran/pr71014.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr71014.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr71014.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr71014.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -16,5 +16,5 @@ program pr71014\n       end do\n     end associate\n   end do\n-  if (any(s /= t)) call abort\n+  if (any(s /= t)) STOP 1\n end program pr71014"}, {"sha": "c7419342ca62d05c431b5ade3dff6b4f8487becf", "filename": "libgomp/testsuite/libgomp.fortran/pr81304.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81304.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81304.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81304.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,5 +13,5 @@ program pr81304\n      a = min (a, c)\n      b = max (b, c)\n    end do\n-   if (any (a /= (/ 1, -4, 6 /)) .or. any (b /= (/ 16, 11, 21 /))) call abort\n+   if (any (a /= (/ 1, -4, 6 /)) .or. any (b /= (/ 16, 11, 21 /))) STOP 1\n end"}, {"sha": "ed75837c37b95f78d1b9354467f17c437580e6e4", "filename": "libgomp/testsuite/libgomp.fortran/pr81841.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81841.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81841.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr81841.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,10 +17,10 @@ program pr81841\n   common /c/ e, f\n   !$omp threadprivate (/c/)\n   !$omp parallel num_threads(8)\n-  if ((e /= 32) .or. any(f /= 1.)) call abort\n+  if ((e /= 32) .or. any(f /= 1.)) STOP 1\n   e = omp_get_thread_num ()\n   f = e + 19.\n   !$omp barrier\n-  if ((e /= omp_get_thread_num ()) .or. any(f /= e + 19.)) call abort\n+  if ((e /= omp_get_thread_num ()) .or. any(f /= e + 19.)) STOP 2\n   !$omp end parallel\n end"}, {"sha": "59391211a749230ecebfd62f7aa983ca106caf53", "filename": "libgomp/testsuite/libgomp.fortran/pr84418-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -15,7 +15,7 @@\n     c(i) = foo (a(i), b(i))\n   end do\n   do i = 1, 1024\n-    if (c(i).ne.(2 * i)) call abort\n+    if (c(i).ne.(2 * i)) STOP 1\n   end do\n contains\n   real function foo (x, y)"}, {"sha": "f85fbf2ba87450d3f651a50c013e6a166fa9045e", "filename": "libgomp/testsuite/libgomp.fortran/pr84418-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr84418-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -23,7 +23,7 @@\n     c(i) = foo (a(i), b(:,i))\n   end do\n   do i = 1, 1024\n-    if (c(i).ne.(6 * i)) call abort\n+    if (c(i).ne.(6 * i)) STOP 1\n   end do\n contains  \n   function foo (x, y)"}, {"sha": "560d0da421636c877871db41eb219c2ca5fd9925", "filename": "libgomp/testsuite/libgomp.fortran/procptr1.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fprocptr1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fprocptr1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fprocptr1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,25 +11,25 @@ integer function baz ()\n   integer :: i\n   ptr => foo\n !$omp parallel shared (ptr)\n-  if (ptr () /= 1) call abort\n+  if (ptr () /= 1) STOP 1\n !$omp end parallel\n   ptr => bar\n !$omp parallel firstprivate (ptr)\n-  if (ptr () /= 2) call abort\n+  if (ptr () /= 2) STOP 2\n !$omp end parallel\n !$omp parallel sections lastprivate (ptr)\n !$omp section\n   ptr => foo\n-  if (ptr () /= 1) call abort\n+  if (ptr () /= 1) STOP 3\n !$omp section\n   ptr => bar\n-  if (ptr () /= 2) call abort\n+  if (ptr () /= 2) STOP 4\n !$omp section\n   ptr => baz\n-  if (ptr () /= 3) call abort\n+  if (ptr () /= 3) STOP 5\n !$omp end parallel sections\n-  if (ptr () /= 3) call abort\n-  if (.not.associated (ptr, baz)) call abort\n+  if (ptr () /= 3) STOP 6\n+  if (.not.associated (ptr, baz)) STOP 7\n end\n integer function foo ()\n   foo = 1"}, {"sha": "c9aec7e415964157506caaeb9fa1bf140ceb7237", "filename": "libgomp/testsuite/libgomp.fortran/recursion1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frecursion1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frecursion1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Frecursion1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -14,7 +14,7 @@\n   call sub(i)\n end do\n !$omp end parallel do\n-if (s/=55) call abort()\n+if (s/=55) STOP 1\n \n contains\n "}, {"sha": "bc036b057ea7dba7c13b73810c1490c25d92d488", "filename": "libgomp/testsuite/libgomp.fortran/reduction1.f90", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -55,14 +55,14 @@\n     ca = cmplx (-1, 0)\n   end if\n !$omp end parallel\n-  if (v) call abort\n+  if (v) STOP 1\n   if (cnt .eq. 3) then\n-    if (i .ne. 8 .or. any (ia .ne. (/3, 3, 1, 6, 6, 8/))) call abort\n-    if (r .ne. 8 .or. any (ra .ne. (/9.5, 8.0, 1.5, 1.5/))) call abort\n-    if (d .ne. 12.5 .or. any (da .ne. (/8.0, 16.5, 16.5, 14.0, 5.5/))) call abort\n-    if (c .ne. cmplx (11.5, -5)) call abort\n-    if (ca(1) .ne. cmplx (12, 2)) call abort\n-    if (ca(2) .ne. cmplx (6.5, 3) .or. ca(2) .ne. ca(3)) call abort\n+    if (i .ne. 8 .or. any (ia .ne. (/3, 3, 1, 6, 6, 8/))) STOP 2\n+    if (r .ne. 8 .or. any (ra .ne. (/9.5, 8.0, 1.5, 1.5/))) STOP 3\n+    if (d .ne. 12.5 .or. any (da .ne. (/8.0, 16.5, 16.5, 14.0, 5.5/))) STOP 4\n+    if (c .ne. cmplx (11.5, -5)) STOP 5\n+    if (ca(1) .ne. cmplx (12, 2)) STOP 6\n+    if (ca(2) .ne. cmplx (6.5, 3) .or. ca(2) .ne. ca(3)) STOP 7\n   end if\n \n   i = 1\n@@ -113,14 +113,14 @@\n     ca = cmplx (-1, 0)\n   end if\n !$omp end parallel\n-  if (v) call abort\n+  if (v) STOP 8\n   if (cnt .eq. 3) then\n-    if (i .ne. 8 .or. any (ia .ne. (/3, 3, 1, 6, 6, 8/))) call abort\n-    if (r .ne. 8 .or. any (ra .ne. (/9.5, 8.0, 1.5, 1.5/))) call abort\n-    if (d .ne. 12.5 .or. any (da .ne. (/8.0, 16.5, 16.5, 14.0, 5.5/))) call abort\n-    if (c .ne. cmplx (11.5, -5)) call abort\n-    if (ca(1) .ne. cmplx (12, 2)) call abort\n-    if (ca(2) .ne. cmplx (6.5, 3) .or. ca(2) .ne. ca(3)) call abort\n+    if (i .ne. 8 .or. any (ia .ne. (/3, 3, 1, 6, 6, 8/))) STOP 9\n+    if (r .ne. 8 .or. any (ra .ne. (/9.5, 8.0, 1.5, 1.5/))) STOP 10\n+    if (d .ne. 12.5 .or. any (da .ne. (/8.0, 16.5, 16.5, 14.0, 5.5/))) STOP 11\n+    if (c .ne. cmplx (11.5, -5)) STOP 12\n+    if (ca(1) .ne. cmplx (12, 2)) STOP 13\n+    if (ca(2) .ne. cmplx (6.5, 3) .or. ca(2) .ne. ca(3)) STOP 14\n   end if\n \n   i = 1\n@@ -169,13 +169,13 @@\n     ca = cmplx (-1, 0)\n   end if\n !$omp end parallel\n-  if (v) call abort\n+  if (v) STOP 15\n   if (cnt .eq. 3) then\n-    if (i .ne. 6 .or. any (ia .ne. (/4, 4, 8, -16, -16, -8/))) call abort\n-    if (r .ne. 8 .or. any (ra .ne. (/4., -2., -1., -1./))) call abort\n-    if (d .ne. -40 .or. any (da .ne. (/32., -64., -64., 64., -32./))) call abort\n-    if (c .ne. cmplx (0, 15)) call abort\n-    if (ca(1) .ne. cmplx (0, 10)) call abort\n-    if (ca(2) .ne. cmplx (-2, 0) .or. ca(2) .ne. ca(3)) call abort\n+    if (i .ne. 6 .or. any (ia .ne. (/4, 4, 8, -16, -16, -8/))) STOP 16\n+    if (r .ne. 8 .or. any (ra .ne. (/4., -2., -1., -1./))) STOP 17\n+    if (d .ne. -40 .or. any (da .ne. (/32., -64., -64., 64., -32./))) STOP 18\n+    if (c .ne. cmplx (0, 15)) STOP 19\n+    if (ca(1) .ne. cmplx (0, 10)) STOP 20\n+    if (ca(2) .ne. cmplx (-2, 0) .or. ca(2) .ne. ca(3)) STOP 21\n   end if\n end"}, {"sha": "6af173d2397ffb5deae0cbe9ab085cd4fbef4d0e", "filename": "libgomp/testsuite/libgomp.fortran/reduction2.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -31,10 +31,10 @@\n     ma(1) = .true.\n   end if\n !$omp end parallel\n-  if (v) call abort\n+  if (v) STOP 1\n   if (cnt .eq. 3) then\n-    if (l .or. any (la .neqv. (/.true., .false., .false., .false./))) call abort\n-    if (.not. m .or. any (ma .neqv. (/.true., .true., .false., .true./))) call abort\n+    if (l .or. any (la .neqv. (/.true., .false., .false., .false./))) STOP 2\n+    if (.not. m .or. any (ma .neqv. (/.true., .true., .false., .true./))) STOP 3\n   end if\n \n   l = .true.\n@@ -64,10 +64,10 @@\n     ma(1) = .true.\n   end if\n !$omp end parallel\n-  if (v) call abort\n+  if (v) STOP 4\n   if (cnt .eq. 3) then\n-    if (.not. l .or. any (la .neqv. (/.true., .false., .true., .false./))) call abort\n-    if (.not. m .or. any (ma .neqv. (/.false., .true., .false., .true./))) call abort\n+    if (.not. l .or. any (la .neqv. (/.true., .false., .true., .false./))) STOP 5\n+    if (.not. m .or. any (ma .neqv. (/.false., .true., .false., .true./))) STOP 6\n   end if\n \n end"}, {"sha": "b0a858b54f02cf7eb8503ab34f025eb087787c68", "filename": "libgomp/testsuite/libgomp.fortran/reduction3.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -46,11 +46,11 @@\n     da = -1\n   end if\n !$omp end parallel\n-  if (v) call abort\n+  if (v) STOP 1\n   if (cnt .eq. 3) then\n-    if (i .ne. 4 .or. any (ia .ne. (/7, 2, 2, 5, 5, 5/))) call abort\n-    if (r .ne. 5 .or. any (ra .ne. (/6.5, 6.5, 4., 4./))) call abort\n-    if (d .ne. 8.5 .or. any (da .ne. (/6.5, 8.5, 8.5, 8.5, 6.5/))) call abort\n+    if (i .ne. 4 .or. any (ia .ne. (/7, 2, 2, 5, 5, 5/))) STOP 2\n+    if (r .ne. 5 .or. any (ra .ne. (/6.5, 6.5, 4., 4./))) STOP 3\n+    if (d .ne. 8.5 .or. any (da .ne. (/6.5, 8.5, 8.5, 8.5, 6.5/))) STOP 4\n   end if\n \n   i = 1\n@@ -94,10 +94,10 @@\n     da(1:4) = 6\n   end if\n !$omp end parallel\n-  if (v) call abort\n+  if (v) STOP 5\n   if (cnt .eq. 3) then\n-    if (i .ne. 1 .or. any (ia .ne. (/1, 1, -2, -2, -2, 1/))) call abort\n-    if (r .ne. -1 .or. any (ra .ne. (/4., -1.5, -8.5, -1.5/))) call abort\n-    if (d .ne. -2.5 .or. any (da .ne. (/2.5, 2.5, 2.5, 6., 6.5/))) call abort\n+    if (i .ne. 1 .or. any (ia .ne. (/1, 1, -2, -2, -2, 1/))) STOP 6\n+    if (r .ne. -1 .or. any (ra .ne. (/4., -1.5, -8.5, -1.5/))) STOP 7\n+    if (d .ne. -2.5 .or. any (da .ne. (/2.5, 2.5, 2.5, 6., 6.5/))) STOP 8\n   end if\n end"}, {"sha": "91c7fc89bf25e4cca4df9530b8508c882d18884a", "filename": "libgomp/testsuite/libgomp.fortran/reduction4.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -44,13 +44,13 @@\n     ka(6:6) = Z'777'\n   end if\n !$omp end parallel\n-  if (v) call abort\n+  if (v) STOP 1\n   if (cnt .eq. 3) then\n     ta = (/Z'f0ff03', Z'f0af03', Z'f0af01', Z'f0af01', Z'f0af01', Z'f0ff0f'/)\n-    if (i .ne. Z'777f07' .or. any (ia .ne. ta)) call abort\n+    if (i .ne. Z'777f07' .or. any (ia .ne. ta)) STOP 2\n     ta = (/Z'f5a01', Z'f5a09', Z'f5a09', Z'f5a08', Z'f5f08', Z'f5f00'/)\n-    if (j .ne. Z'fff80' .or. any (ja .ne. ta)) call abort\n+    if (j .ne. Z'fff80' .or. any (ja .ne. ta)) STOP 3\n     ta = (/Z'5a5a5', Z'5a5a5', Z'aaba2', Z'aaba2', Z'5aaaa', Z'5addd'/)\n-    if (k .ne. Z'54a8f' .or. any (ka .ne. ta)) call abort\n+    if (k .ne. Z'54a8f' .or. any (ka .ne. ta)) STOP 4\n   end if\n end"}, {"sha": "f8fdcb471fe6fd5cdb28aa00a18662f82fb2195f", "filename": "libgomp/testsuite/libgomp.fortran/reduction5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,7 +18,7 @@ subroutine test1\n !$omp section\n     n = bitwise_or (n, Z'2000')\n !$omp end parallel sections\n-    if (n .ne. Z'243f') call abort\n+    if (n .ne. Z'243f') STOP 1\n   end subroutine\n   subroutine test2\n     use reduction5, min => max, max => min\n@@ -36,7 +36,7 @@ subroutine test2\n     if (m .gt. 3) m = 3\n     if (n .lt. -1) n = -1\n !$omp end parallel sections\n-    if (m .ne. 3 .or. n .ne. 15) call abort\n+    if (m .ne. 3 .or. n .ne. 15) STOP 2\n   end subroutine test2\n end\n "}, {"sha": "99fb8d16bc0390b27917c8c95ef40b926b0be68b", "filename": "libgomp/testsuite/libgomp.fortran/reduction6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freduction6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -8,7 +8,7 @@\n   call foo (a (2:4, 3:5), nthreads)\n   if (nthreads .eq. 3) then\n     write (c, '(36i1)') a\n-    if (c .ne. '999999999999966699966699966699999999') call abort\n+    if (c .ne. '999999999999966699966699966699999999') STOP 1\n   end if\n contains\n   subroutine foo (b, nthreads)\n@@ -27,6 +27,6 @@ subroutine foo (b, nthreads)\n !$omp end master\n     b = 2\n !$omp end parallel\n-    if (err .gt. 0) call abort\n+    if (err .gt. 0) STOP 2\n   end subroutine foo\n end"}, {"sha": "8c9631b49d2d7ae58aeae3fa96a06408efb83ddc", "filename": "libgomp/testsuite/libgomp.fortran/reference1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -8,10 +8,10 @@\n   k = 0\n   d = 24.5\n   call test (i, j, k, d)\n-  if (i .ne. 38) call abort\n-  if (iand (k, 255) .ne. 0) call abort\n+  if (i .ne. 38) STOP 1\n+  if (iand (k, 255) .ne. 0) STOP 2\n   if (iand (k, 65280) .eq. 0) then\n-    if (k .ne. 65536 * 4) call abort\n+    if (k .ne. 65536 * 4) STOP 3\n   end if\n contains\n   subroutine test (i, j, k, d)"}, {"sha": "87efab255e12242c0ef82ee1c6a4f012cc53c916", "filename": "libgomp/testsuite/libgomp.fortran/reference2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freference2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,7 +11,7 @@ subroutine foo (a)\n     a = 15\n     l = bar (a)\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine\n   function bar (a)\n     real, dimension (5) :: a"}, {"sha": "db49a0da8a0bebe96b5c60aad8a883a5d56f2de8", "filename": "libgomp/testsuite/libgomp.fortran/retval1.f90", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -14,7 +14,7 @@ function f1 ()\n   l = l .or. (omp_get_thread_num () .eq. 0 .and. f1 .ne. 8.5)\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. f1 .ne. 14.5)\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 1\n   f1 = -2.5\n end function f1\n function f2 ()\n@@ -32,7 +32,7 @@ function f2 ()\n   l = l .or. (omp_get_thread_num () .eq. 0 .and. e2 .ne. 8.5)\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. e2 .ne. 14.5)\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 2\n   e2 = 7.5\n end function f2\n function f3 ()\n@@ -53,7 +53,7 @@ function f3 ()\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. e3 .ne. 14.5)\n   l = l .or. f3 .ne. e3 - 4.5\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 3\n   e3 = 0.5\n end function f3\n function f4 () result (r4)\n@@ -74,7 +74,7 @@ function f4 () result (r4)\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. s4 .ne. 14.5)\n   l = l .or. r4 .ne. s4 - 4.5\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 4\n   s4 = -0.5\n end function f4\n function f5 (is_f5)\n@@ -101,20 +101,20 @@ function f5 (is_f5)\n   l = l .or. (omp_get_thread_num () .eq. 1 .and. e5 .ne. 14)\n   l = l .or. f5 .ne. e5 - 4.5\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 5\n   if (is_f5) f5 = -2.5\n   if (.not. is_f5) e5 = 8\n end function f5\n \n   real :: f1, f2, e2, f3, e3, f4, e4, f5\n   integer :: e5\n-  if (f1 () .ne. -2.5) call abort\n-  if (f2 () .ne. 7.5) call abort\n-  if (e2 () .ne. 7.5) call abort\n-  if (f3 () .ne. 0.5) call abort\n-  if (e3 () .ne. 0.5) call abort\n-  if (f4 () .ne. -0.5) call abort\n-  if (e4 () .ne. -0.5) call abort\n-  if (f5 (.true.) .ne. -2.5) call abort\n-  if (e5 (.false.) .ne. 8) call abort\n+  if (f1 () .ne. -2.5) STOP 6\n+  if (f2 () .ne. 7.5) STOP 7\n+  if (e2 () .ne. 7.5) STOP 8\n+  if (f3 () .ne. 0.5) STOP 9\n+  if (e3 () .ne. 0.5) STOP 10\n+  if (f4 () .ne. -0.5) STOP 11\n+  if (e4 () .ne. -0.5) STOP 12\n+  if (f5 (.true.) .ne. -2.5) STOP 13\n+  if (e5 (.false.) .ne. 8) STOP 14\n end"}, {"sha": "a2fd5b991172a7107016517a3c0ed63869e13369", "filename": "libgomp/testsuite/libgomp.fortran/retval2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -17,11 +17,11 @@ subroutine sub1\n     l = l .or. (omp_get_thread_num () .eq. 0 .and. f1 .ne. 8.5)\n     l = l .or. (omp_get_thread_num () .eq. 1 .and. f1 .ne. 14.5)\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n     f1 = -2.5\n   end subroutine sub1\n end function f1\n \n   real :: f1\n-  if (f1 () .ne. -2.5) call abort\n+  if (f1 () .ne. -2.5) STOP 2\n end"}, {"sha": "03633e9a78ca7f86a1f992482e49cba76b82e370", "filename": "libgomp/testsuite/libgomp.fortran/sharing1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -25,5 +25,5 @@\n !$omp barrier\n   if (j .ne. 25 .or. i .ne. (k * 10 + 14)) l = .true.\n !$omp end parallel\n-  if (l .or. j .ne. 25) call abort\n+  if (l .or. j .ne. 25) STOP 1\n end"}, {"sha": "0b01059ee1d545932c84d901725aaa0fbac1fa69", "filename": "libgomp/testsuite/libgomp.fortran/sharing2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsharing2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -27,6 +27,6 @@\n !$omp barrier\n   if (j .ne. 25 .or. i .ne. (k * 10 + 14)) l = .true.\n !$omp end parallel\n-  if (l) call abort\n-  if (j .ne. 25) call abort\n+  if (l) STOP 1\n+  if (j .ne. 25) STOP 2\n end"}, {"sha": "558e141e1d175414d5cead6db50ec7d3efa2298d", "filename": "libgomp/testsuite/libgomp.fortran/simd1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -30,6 +30,6 @@\n     s = s + l\n     t%x = t%x + l\n   end do\n-  if (r.ne.2700.or.j.ne.70.or.k.ne.80.or.s.ne.2700) call abort\n-  if (t%x.ne.2700) call abort\n+  if (r.ne.2700.or.j.ne.70.or.k.ne.80.or.s.ne.2700) STOP 1\n+  if (t%x.ne.2700) STOP 2\n end"}, {"sha": "0062d5e6e60bfdcf2ebb2f39cc54b4b3dae8a96f", "filename": "libgomp/testsuite/libgomp.fortran/simd2.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,42 +13,42 @@\n   end do\n   s = foo (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 1\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 2\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 3\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 4\n   k = 4\n   m = 2\n   t = 1\n   s = bar (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 5\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 6\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 7\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 8\n   k = 4\n   m = 2\n   t = 1\n   s = baz (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 9\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 10\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 11\n     end if\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 12\n contains\n   function foo (p)\n     integer :: p(1024), u, v, i, s, foo\n@@ -62,8 +62,8 @@ function foo (p)\n       s = s + p(i) + k\n     end do\n     !$omp end simd\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 13\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 14\n     foo = s\n   end function foo\n   function bar (p)\n@@ -78,8 +78,8 @@ function bar (p)\n       s = s + p(i) + k\n     end do\n     !$omp end simd\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 15\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 16\n     bar = s\n   end function bar\n   function baz (p)\n@@ -94,8 +94,8 @@ function baz (p)\n       v = p(i) + k\n       s = s + p(i) + k\n     end do\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 17\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 18\n     baz = s\n   end function baz\n end"}, {"sha": "22ff564bd06cb55f53dd7dc0aae4ac177f73f99d", "filename": "libgomp/testsuite/libgomp.fortran/simd3.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,42 +13,42 @@\n   end do\n   s = foo (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 1\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 2\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 3\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 4\n   k = 4\n   m = 2\n   t = 1\n   s = bar (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 5\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 6\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 7\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 8\n   k = 4\n   m = 2\n   t = 1\n   s = baz (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 9\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 10\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 11\n     end if\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 12\n contains\n   function foo (p)\n     integer :: p(1024), u, v, i, s, foo\n@@ -65,8 +65,8 @@ function foo (p)\n     end do\n     !$omp end do simd\n     !$omp end parallel\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 13\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 14\n     foo = s\n   end function foo\n   function bar (p)\n@@ -84,8 +84,8 @@ function bar (p)\n     end do\n     !$omp end do simd\n     !$omp endparallel\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 15\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 16\n     bar = s\n   end function bar\n   function baz (p)\n@@ -102,8 +102,8 @@ function baz (p)\n       s = s + p(i) + k\n     end do\n     !$omp end parallel\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 17\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 18\n     baz = s\n   end function baz\n end"}, {"sha": "ceb1611bd38ed00d3738de553f45f4897f392161", "filename": "libgomp/testsuite/libgomp.fortran/simd4.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,42 +13,42 @@\n   end do\n   s = foo (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 1\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 2\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 3\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 4\n   k = 4\n   m = 2\n   t = 1\n   s = bar (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 5\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 6\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 7\n     end if\n     a(i) = i - 513\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 8\n   k = 4\n   m = 2\n   t = 1\n   s = baz (b)\n   do i = 1, 1024\n-    if (a(i).ne.((i - 513) * b(i))) call abort\n+    if (a(i).ne.((i - 513) * b(i))) STOP 9\n     if (i.lt.52.and.modulo (i - 52, 39).ne.0) then\n-      if (b(i).ne.(modulo (i - 52, 39) - 39)) call abort\n+      if (b(i).ne.(modulo (i - 52, 39) - 39)) STOP 10\n     else\n-      if (b(i).ne.(modulo (i - 52, 39))) call abort\n+      if (b(i).ne.(modulo (i - 52, 39))) STOP 11\n     end if\n   end do\n-  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) call abort\n+  if (k.ne.(4 + 3 * 1024).or.s.ne.1596127) STOP 12\n contains\n   function foo (p)\n     integer :: p(1024), u, v, i, s, foo\n@@ -63,8 +63,8 @@ function foo (p)\n       s = s + p(i) + k\n     end do\n     !$omp end parallel do simd\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 13\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 14\n     foo = s\n   end function foo\n   function bar (p)\n@@ -80,8 +80,8 @@ function bar (p)\n       s = s + p(i) + k\n     end do\n     !$omp endparalleldosimd\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 15\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 16\n     bar = s\n   end function bar\n   function baz (p)\n@@ -96,8 +96,8 @@ function baz (p)\n       v = p(i) + k\n       s = s + p(i) + k\n     end do\n-    if (i.ne.1025) call abort\n-    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) call abort\n+    if (i.ne.1025) STOP 17\n+    if (u.ne.(36 + 4 + 3 * 1023).or.v.ne.(36 + 4 + 3 * 1024)) STOP 18\n     baz = s\n   end function baz\n end"}, {"sha": "e1383d20d306015cc061754d8c5ad9786843fd5f", "filename": "libgomp/testsuite/libgomp.fortran/simd5.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,7 +12,7 @@\n     c = c + b - (7 + 2 * i)\n     b = b + 2\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 1\n   i = 4\n   j = 4\n   b = 7\n@@ -21,7 +21,7 @@\n     c = c + b - (7 + i / 4 * 3)\n     b = b + 3\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 2\n   i = 4\n   j = 4\n   b = 7\n@@ -30,7 +30,7 @@\n     c = c + b - (7 + 2 * i)\n     b = b + 2\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 3\n   i = 4\n   j = 4\n   b = 7\n@@ -39,7 +39,7 @@\n     c = c + b - (7 + i / 4 * 3)\n     b = b + 3\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 4\n   i = 4\n   j = 4\n   b = 7\n@@ -50,7 +50,7 @@\n       b = b + 2\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 5\n   i = 4\n   j = 4\n   b = 7\n@@ -61,7 +61,7 @@\n       b = b + 2\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 6\n   i = 4\n   j = 4\n   b = 7\n@@ -70,7 +70,7 @@\n     c = c + b - (7 + 2 * i)\n     b = b + 2\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 7\n   i = 4\n   j = 4\n   b = 7\n@@ -79,7 +79,7 @@\n     c = c + b - (7 + i / 4 * 3)\n     b = b + 3\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 8\n   i = 4\n   j = 4\n   b = 7\n@@ -88,7 +88,7 @@\n     c = c + b - (7 + 2 * i)\n     b = b + 2\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 9\n   i = 4\n   j = 4\n   b = 7\n@@ -97,7 +97,7 @@\n     c = c + b - (7 + i / 4 * 3)\n     b = b + 3\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 10\n   i = 4\n   j = 4\n   b = 7\n@@ -108,7 +108,7 @@\n       b = b + 2\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 11\n   i = 4\n   j = 4\n   b = 7\n@@ -120,5 +120,5 @@\n       b = b + 2\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 12\n end"}, {"sha": "b78bb4b6886abeb82fb7ca0ab7244d6c0dfb1881", "filename": "libgomp/testsuite/libgomp.fortran/simd6.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,7 +18,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + 2 * i)\n     call foo (b, i, j, 2)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 1\n   i = 4\n   j = 4\n   b = 7\n@@ -27,7 +27,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + i / 4 * 3)\n     call foo (b, i, j, 3)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 2\n   i = 4\n   j = 4\n   b = 7\n@@ -36,7 +36,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + 2 * i)\n     call foo (b, i, j, 2)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 3\n   i = 4\n   j = 4\n   b = 7\n@@ -45,7 +45,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + i / 4 * 3)\n     call foo (b, i, j, 3)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 4\n   i = 4\n   j = 4\n   b = 7\n@@ -56,7 +56,7 @@ subroutine foo (b, i, j, x)\n       call foo (b, i, j, 2)\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 5\n   i = 4\n   j = 4\n   b = 7\n@@ -67,7 +67,7 @@ subroutine foo (b, i, j, x)\n       call foo (b, i, j, 2)\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 6\n   i = 4\n   j = 4\n   b = 7\n@@ -76,7 +76,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + 2 * i)\n     call foo (b, i, j, 2)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 7\n   i = 4\n   j = 4\n   b = 7\n@@ -85,7 +85,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + i / 4 * 3)\n     call foo (b, i, j, 3)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 8\n   i = 4\n   j = 4\n   b = 7\n@@ -94,7 +94,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + 2 * i)\n     call foo (b, i, j, 2)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 64 * 2) STOP 9\n   i = 4\n   j = 4\n   b = 7\n@@ -103,7 +103,7 @@ subroutine foo (b, i, j, x)\n     c = c + b - (7 + i / 4 * 3)\n     call foo (b, i, j, 3)\n   end do\n-  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) call abort\n+  if (c /= 0 .or. i /= 64 .or. b /= 7 + 16 * 3) STOP 10\n   i = 4\n   j = 4\n   b = 7\n@@ -114,7 +114,7 @@ subroutine foo (b, i, j, x)\n       call foo (b, i, j, 2)\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 11\n   i = 4\n   j = 4\n   b = 7\n@@ -126,7 +126,7 @@ subroutine foo (b, i, j, x)\n       call foo (b, i, j, 2)\n     end do\n   end do\n-  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) call abort\n+  if (c /= 0 .or. i /= 8 .or. j /= 8 .or. b /= 7 + 64 * 2) STOP 12\n end\n subroutine foo (b, i, j, x)\n   integer, intent (inout) :: b"}, {"sha": "4b5633e902be3543c94581a0a04b5240806c035c", "filename": "libgomp/testsuite/libgomp.fortran/simd7.f90", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fsimd7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -30,20 +30,20 @@ subroutine foo (d, e, f, g, m, n)\n     b = b + 1; c = c + 2; d = d + 3; e = e + 4; f = f + 5; g = g + 6\n     h = h + 7; k = k + 8; m = m + 9\n   end do\n-  if (l .or. i /= 64) call abort\n-  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) call abort\n-  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) call abort\n-  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) call abort\n-  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) call abort\n-  if (m /= 15 + 9 * 64) call abort\n-  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) call abort\n-  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) call abort\n-  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) call abort\n-  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) call abort\n-  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) call abort\n-  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) call abort\n-  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) call abort\n-  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) call abort\n+  if (l .or. i /= 64) STOP 1\n+  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) STOP 2\n+  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) STOP 3\n+  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) STOP 4\n+  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) STOP 5\n+  if (m /= 15 + 9 * 64) STOP 6\n+  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) STOP 7\n+  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) STOP 8\n+  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) STOP 9\n+  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) STOP 10\n+  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) STOP 11\n+  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) STOP 12\n+  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) STOP 13\n+  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) STOP 14\n   i = 4; j = 4; b = 7; c = 8; d = 9; e = 10; f = 11; g = 12; h = 13; k = 14; m = 15\n !$omp simd linear(b)linear(c:2)linear(d:3)linear(e:4)linear(f:5)linear(g:6) &\n !$omp & linear(h:7)linear(k:8)linear(m:9) reduction(.or.:l) collapse(2)\n@@ -68,20 +68,20 @@ subroutine foo (d, e, f, g, m, n)\n       h = h + 7; k = k + 8; m = m + 9\n     end do\n   end do\n-  if (l .or. i /= 8 .or. j /= 8) call abort\n-  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) call abort\n-  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) call abort\n-  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) call abort\n-  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) call abort\n-  if (m /= 15 + 9 * 64) call abort\n-  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) call abort\n-  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) call abort\n-  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) call abort\n-  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) call abort\n-  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) call abort\n-  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) call abort\n-  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) call abort\n-  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) call abort\n+  if (l .or. i /= 8 .or. j /= 8) STOP 15\n+  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) STOP 16\n+  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) STOP 17\n+  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) STOP 18\n+  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) STOP 19\n+  if (m /= 15 + 9 * 64) STOP 20\n+  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) STOP 21\n+  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) STOP 22\n+  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) STOP 23\n+  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) STOP 24\n+  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) STOP 25\n+  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) STOP 26\n+  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) STOP 27\n+  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) STOP 28\n   i = 4; j = 4; b = 7; c = 8; d = 9; e = 10; f = 11; g = 12; h = 13; k = 14; m = 15\n !$omp parallel do simd linear(b)linear(c:2)linear(d:3)linear(e:4)linear(f:5) &\n !$omp & linear(g:6)linear(h:7)linear(k:8)linear(m:9) reduction(.or.:l)\n@@ -104,20 +104,20 @@ subroutine foo (d, e, f, g, m, n)\n     b = b + 1; c = c + 2; d = d + 3; e = e + 4; f = f + 5; g = g + 6\n     h = h + 7; k = k + 8; m = m + 9\n   end do\n-  if (l .or. i /= 64) call abort\n-  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) call abort\n-  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) call abort\n-  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) call abort\n-  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) call abort\n-  if (m /= 15 + 9 * 64) call abort\n-  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) call abort\n-  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) call abort\n-  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) call abort\n-  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) call abort\n-  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) call abort\n-  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) call abort\n-  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) call abort\n-  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) call abort\n+  if (l .or. i /= 64) STOP 29\n+  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) STOP 30\n+  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) STOP 31\n+  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) STOP 32\n+  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) STOP 33\n+  if (m /= 15 + 9 * 64) STOP 34\n+  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) STOP 35\n+  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) STOP 36\n+  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) STOP 37\n+  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) STOP 38\n+  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) STOP 39\n+  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) STOP 40\n+  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) STOP 41\n+  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) STOP 42\n   i = 4; j = 4; b = 7; c = 8; d = 9; e = 10; f = 11; g = 12; h = 13; k = 14; m = 15\n !$omp parallel do simd linear(b)linear(c:2)linear(d:3)linear(e:4)linear(f:5) &\n !$omp & linear(g:6)linear(h:7)linear(k:8)linear(m:9) reduction(.or.:l) collapse(2)\n@@ -142,20 +142,20 @@ subroutine foo (d, e, f, g, m, n)\n       h = h + 7; k = k + 8; m = m + 9\n     end do\n   end do\n-  if (l .or. i /= 8 .or. j /= 8) call abort\n-  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) call abort\n-  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) call abort\n-  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) call abort\n-  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) call abort\n-  if (m /= 15 + 9 * 64) call abort\n-  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) call abort\n-  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) call abort\n-  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) call abort\n-  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) call abort\n-  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) call abort\n-  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) call abort\n-  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) call abort\n-  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) call abort\n+  if (l .or. i /= 8 .or. j /= 8) STOP 43\n+  if (any (b /= 7 + 64) .or. any (c /= 8 + 2 * 64)) STOP 44\n+  if (any (d /= 9 + 3 * 64) .or. any (e /= 10 + 4 * 64)) STOP 45\n+  if (any (f /= 11 + 5 * 64) .or. any (g /= 12 + 6 * 64)) STOP 46\n+  if (any (h /= 13 + 7 * 64) .or. (k /= 14 + 8 * 64)) STOP 47\n+  if (m /= 15 + 9 * 64) STOP 48\n+  if ((lbound (b, 1) /= 2) .or. (ubound (b, 1) /= 9)) STOP 49\n+  if ((lbound (c, 1) /= 3) .or. (ubound (c, 1) /= n)) STOP 50\n+  if ((lbound (d, 1) /= 1) .or. (ubound (d, 1) /= 17)) STOP 51\n+  if ((lbound (e, 1) /= 2) .or. (ubound (e, 1) /= n)) STOP 52\n+  if ((lbound (f, 1) /= 2) .or. (ubound (f, 1) /= 3)) STOP 53\n+  if ((lbound (f, 2) /= 3) .or. (ubound (f, 2) /= 5)) STOP 54\n+  if ((lbound (g, 1) /= 7) .or. (ubound (g, 1) /= 10)) STOP 55\n+  if ((lbound (h, 1) /= 2) .or. (ubound (h, 1) /= 7)) STOP 56\n end subroutine\n \n   interface"}, {"sha": "f0babdd059a0b287edfb9b8ca07cdaa4460f100c", "filename": "libgomp/testsuite/libgomp.fortran/stack.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstack.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstack.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstack.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,7 +11,7 @@ program stack\n !$omp end parallel\n   ! Check that the two threads are not sharing a location for\n   ! the array x in foo()\n-  if (ilocs(1) .eq. ilocs(2)) call abort\n+  if (ilocs(1) .eq. ilocs(2)) STOP 1\n end program stack\n \n integer function foo ()"}, {"sha": "84faced494aa4a4e89fc54e69da681610b9f4b60", "filename": "libgomp/testsuite/libgomp.fortran/strassen.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstrassen.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstrassen.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fstrassen.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -19,7 +19,7 @@ program strassen_matmul\n   call strassen (A, B, D, N)\n   end = omp_get_wtime ()\n   write(*,'(a, f10.6)') ' Time for Strassen    = ', end - start\n-  if (sqrt (sum ((C - D) ** 2)) / N .gt. 0.1) call abort\n+  if (sqrt (sum ((C - D) ** 2)) / N .gt. 0.1) STOP 1\n   D = 0\n   start = omp_get_wtime ()\n !$omp parallel\n@@ -29,7 +29,7 @@ program strassen_matmul\n !$omp end parallel\n   end = omp_get_wtime ()\n   write(*,'(a, f10.6)') ' Time for Strassen MP = ', end - start\n-  if (sqrt (sum ((C - D) ** 2)) / N .gt. 0.1) call abort\n+  if (sqrt (sum ((C - D) ** 2)) / N .gt. 0.1) STOP 2\n \n contains\n "}, {"sha": "68dba38c9adf5d8ea9d00f3c692c4511af931a7f", "filename": "libgomp/testsuite/libgomp.fortran/tabs1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -1,4 +1,4 @@\n-\tif (b().ne.2) call abort\n+\tif (b().ne.2) STOP 1\n contains\n subroutine a\n !$omp parallel"}, {"sha": "07fca22cac37517dd37c37ea514ea7ade094227d", "filename": "libgomp/testsuite/libgomp.fortran/tabs2.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftabs2.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -1,5 +1,5 @@\n ! { dg-options \"-ffixed-form\" }\n-      if (b().ne.2) call abort\n+      if (b().ne.2) STOP 1\n       contains\n       subroutine a\n !$omp parallel"}, {"sha": "99c5087ca973f58e22b221a5f20e8bd3b5ac67ec", "filename": "libgomp/testsuite/libgomp.fortran/target1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,9 +13,9 @@ subroutine foo (p, v, w, n)\n         q(i) = p(i)\n       end do\n     !$omp end target\n-    if (any (p /= q)) call abort\n+    if (any (p /= q)) STOP 1\n     do i = 1, n\n-      if (p(i) /= i * iand (i, 63)) call abort\n+      if (p(i) /= i * iand (i, 63)) STOP 2\n     end do\n     !$omp target data if (n > 256) map (to: v(1:n), w) map (from: p, q)\n     !$omp target if (n > 256)\n@@ -38,7 +38,7 @@ subroutine foo (p, v, w, n)\n       end do\n     !$omp end target\n     !$omp end target data\n-    if (any (p + 2.0 /= q)) call abort\n+    if (any (p + 2.0 /= q)) STOP 3\n   end subroutine\n end module target1\n   use target1, only : foo\n@@ -52,7 +52,7 @@ end module target1\n   end do\n   call foo (p, v, w, n)\n   do i = 1, n\n-    if (p(i) /= i * iand (i, 63) + 3) call abort\n+    if (p(i) /= i * iand (i, 63) + 3) STOP 4\n   end do\n   deallocate (p, v, w)\n end"}, {"sha": "0595ed192d55b1a424f60158235dd7b6df1d8158", "filename": "libgomp/testsuite/libgomp.fortran/target2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,7 +29,7 @@ subroutine foo (a, b, c, d, e, f, g, n, q)\n       r = r .or. (j /= 16)\n       r = r .or. (any (k /= 17)) .or. (lbound (k, 1) /= 4) .or. (ubound (k, 1) /= n)\n     !$omp end target\n-    if (r) call abort\n+    if (r) STOP 1\n     !$omp target map (to: b(3:n), c(5:n+4), d(2:n+1), e(1:,:2), g(3:n), i(3:n), k(4:n), n) map (from: r)\n       r = (any (b /= 8)) .or. (lbound (b, 1) /= 3) .or. (ubound (b, 1) /= n)\n       r = r .or. (any (c /= 9)) .or. (lbound (c, 1) /= 5) .or. (ubound (c, 1) /= n + 4)\n@@ -40,7 +40,7 @@ subroutine foo (a, b, c, d, e, f, g, n, q)\n       r = r .or. (any (i /= 15)) .or. (lbound (i, 1) /= 3) .or. (ubound (i, 1) /= n)\n       r = r .or. (any (k /= 17)) .or. (lbound (k, 1) /= 4) .or. (ubound (k, 1) /= n)\n     !$omp end target\n-    if (r) call abort\n+    if (r) STOP 2\n     !$omp target map (to: b(5:n-2), c(7:n), d(4:n-2), e(1:,2:), g(5:n-3), i(6:n-4), k(5:n-5), n) map (from: r)\n       r = (any (b(5:n-2) /= 8)) .or. (lbound (b, 1) /= 3) .or. (ubound (b, 1) /= n)\n       r = r .or. (any (c(7:n) /= 9)) .or. (lbound (c, 1) /= 5) .or. (ubound (c, 1) /= n + 4)\n@@ -62,7 +62,7 @@ subroutine foo (a, b, c, d, e, f, g, n, q)\n       r = r .or. (any (i(6:n-4) /= 15)) .or. (lbound (i, 1) /= 3) .or. (ubound (i, 1) /= n)\n       r = r .or. (any (k(5:n-5) /= 17)) .or. (lbound (k, 1) /= 4) .or. (ubound (k, 1) /= n)\n     !$omp end target\n-    if (r) call abort\n+    if (r) STOP 3\n     !$omp target map (to: d(2:n+1), n)\n       r = a /= 7\n       r = r .or. (any (b /= 8)) .or. (lbound (b, 1) /= 3) .or. (ubound (b, 1) /= n)\n@@ -77,7 +77,7 @@ subroutine foo (a, b, c, d, e, f, g, n, q)\n       r = r .or. (j /= 16)\n       r = r .or. (any (k /= 17)) .or. (lbound (k, 1) /= 4) .or. (ubound (k, 1) /= n)\n     !$omp end target\n-    if (r) call abort\n+    if (r) STOP 4\n   end subroutine foo\n end module target2\n   use target2, only : foo"}, {"sha": "6c45d119e6e4e2d64430d0fd46dbfd17c343190e", "filename": "libgomp/testsuite/libgomp.fortran/target3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,12 +13,12 @@ subroutine foo (f, g)\n       r = associated (f) .or. associated (g)\n       r = r .or. associated (j) .or. associated (k)\n     !$omp end target\n-    if (r) call abort\n+    if (r) STOP 1\n     !$omp target\n       r = associated (f) .or. associated (g)\n       r = r .or. associated (j) .or. associated (k)\n     !$omp end target\n-    if (r) call abort\n+    if (r) STOP 2\n   end subroutine foo\n end module target3\n   use target3, only : foo"}, {"sha": "52575af07f4c072f00f567e204b5b62633138458", "filename": "libgomp/testsuite/libgomp.fortran/target4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -44,5 +44,5 @@ end module target4\n &   30800.0d0, 33000.0d0, 23256.0d0, 25840.0d0, 28424.0d0, 31008.0d0, 33592.0d0, 36176.0d0, &\n &   38760.0d0, 41344.0d0, 30000.0d0, 33000.0d0, 36000.0d0, 39000.0d0, 42000.0d0, 45000.0d0, &\n &   48000.0d0, 51000.0d0 /), (/ 8, 9 /))\n-  if (any (a /= res)) call abort\n+  if (any (a /= res)) STOP 1\n end"}, {"sha": "b03cb58c5445131eb0ac4691dce99ba8cded7acb", "filename": "libgomp/testsuite/libgomp.fortran/target5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -3,7 +3,7 @@\n   integer :: r\n   r = 0\n   call foo (r)\n-  if (r /= 11) call abort\n+  if (r /= 11) STOP 1\n contains\n   subroutine foo (r)\n     integer :: i, r"}, {"sha": "82f49e2b9c871d1869d309a11d4e72b642fa5238", "filename": "libgomp/testsuite/libgomp.fortran/target6.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -16,7 +16,7 @@ subroutine foo (p, v, w, n)\n     !$omp end target\n     !$omp target update if (n > 256) from (p)\n     do i = 1, n\n-      if (p(i) /= i * iand (i, 63)) call abort\n+      if (p(i) /= i * iand (i, 63)) STOP 1\n       v(i) = v(i) + 1\n     end do\n     !$omp target update if (n > 256) to (v(1:n))\n@@ -28,8 +28,8 @@ subroutine foo (p, v, w, n)\n     !$omp end target\n     !$omp end target data\n     do i = 1, n\n-      if (q(i) /= (v(i) - 1) * w(i)) call abort\n-      if (p(i) /= q(i) + w(i)) call abort\n+      if (q(i) /= (v(i) - 1) * w(i)) STOP 2\n+      if (p(i) /= q(i) + w(i)) STOP 3\n     end do\n   end subroutine\n end module target6\n@@ -44,7 +44,7 @@ end module target6\n   end do\n   call foo (p, v, w, n)\n   do i = 1, n\n-    if (p(i) /= (i + 1) * iand (i, 63)) call abort\n+    if (p(i) /= (i + 1) * iand (i, 63)) STOP 4\n   end do\n   deallocate (p, v, w)\n end"}, {"sha": "49ebb97618e71c5d0541215432d815e6077557f1", "filename": "libgomp/testsuite/libgomp.fortran/target7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -28,7 +28,7 @@ end function foo\n   !$omp end single\n   !$omp end parallel\n   do i = 1, n\n-    if (a(i) /= i + 1) call abort\n+    if (a(i) /= i + 1) STOP 1\n   end do\n end\n real function foo (x)"}, {"sha": "e4874ae275c0ec9c0fecb650ac9b1e85e7c8909b", "filename": "libgomp/testsuite/libgomp.fortran/target8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget8.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,7 +22,7 @@\n   !$omp end single\n   !$omp end parallel\n   do i = 1, n\n-    if (a(i) /= i + 1) call abort\n+    if (a(i) /= i + 1) STOP 1\n   end do\n contains\n   real function foo (x)"}, {"sha": "761226cd8540604bf71559a950dcab898cbe2bb8", "filename": "libgomp/testsuite/libgomp.fortran/task1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,7 +13,7 @@ program tasktest\n       !$omp end task\n     end if\n   !$omp end parallel\n-  if (j.gt.0) call abort\n+  if (j.gt.0) STOP 1\n contains\n   subroutine subr (i)\n     use omp_lib"}, {"sha": "4e5ce2a76ccb5c8c93bc7a2de5e88c8c2f5e3042", "filename": "libgomp/testsuite/libgomp.fortran/task2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -5,7 +5,7 @@\n   call test\n !$omp end single\n !$omp end parallel\n-  if (err.ne.0) call abort\n+  if (err.ne.0) STOP 1\n contains\n   subroutine check (x, y, l)\n     integer :: x, y"}, {"sha": "fcff52ad0165b0fa7ee00a4d69f016c17eba2559", "filename": "libgomp/testsuite/libgomp.fortran/task3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,6 +21,6 @@ program F03_2_7_1d\n    !$omp end parallel\n    if (sum /= NT) then\n       print *, \"FAIL - sum == \", sum, \" (expected \", NT, \")\"\n-      call abort\n+      STOP 1\n    end if\n end program F03_2_7_1d"}, {"sha": "6430f2914a476562d1b8d770c345f4b41acb5656", "filename": "libgomp/testsuite/libgomp.fortran/task4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -41,5 +41,5 @@\n !$omp end parallel\n !$omp atomic read\n   e = err\n-  if (e .ne. 0) call abort\n+  if (e .ne. 0) STOP 1\n end"}, {"sha": "3f6b38a35f9c45b74172ee1161bdc3f505e32c2e", "filename": "libgomp/testsuite/libgomp.fortran/taskgroup1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskgroup1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskgroup1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskgroup1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,7 +18,7 @@\n \tend do\n       !$omp end taskgroup\n       do i = 1, 16\n-\tif (v(i).ne.(i + 1)) call abort\n+\tif (v(i).ne.(i + 1)) STOP 1\n       end do\n       !$omp taskgroup\n \tdo i = 1, 16, 2\n@@ -34,7 +34,7 @@\n \tend do\n       !$omp endtaskgroup\n       do i = 1, 16\n-\tif (v(i).ne.(i + 2)) call abort\n+\tif (v(i).ne.(i + 2)) STOP 2\n       end do\n       !$omp taskgroup\n \tdo i = 1, 16, 2\n@@ -53,8 +53,8 @@\n \tend do\n       !$omp end taskgroup\n       do i = 1, 16, 2\n-\tif (v(i).ne.(i + 3)) call abort\n-\tif (v(i + 1).ne.(i + 5)) call abort\n+\tif (v(i).ne.(i + 3)) STOP 3\n+\tif (v(i + 1).ne.(i + 5)) STOP 4\n       end do\n       !$omp taskgroup\n \tdo i = 1, 16, 2\n@@ -66,14 +66,14 @@\n \t      v(i + 1) = v(i + 1) + 1\n \t    !$omp end task\n \t  !$omp end taskgroup\n-\t  if (v(i).ne.(i + 4).or.v(i + 1).ne.(i + 6)) call abort\n+\t  if (v(i).ne.(i + 4).or.v(i + 1).ne.(i + 6)) STOP 5\n \t  !$omp task\n \t    v(i) = v(i) + 1\n \t  !$omp end task\n \tend do\n       !$omp end taskgroup\n       do i = 1, 16\n-\tif (v(i).ne.(i + 5)) call abort\n+\tif (v(i).ne.(i + 5)) STOP 6\n       end do\n     !$omp end single\n   !$omp end parallel"}, {"sha": "48904b145bdbca3f204001803b216ceb18a52c88", "filename": "libgomp/testsuite/libgomp.fortran/taskloop1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -7,7 +7,7 @@\n   r = bar (12, 18)\n !$omp end single\n !$omp end parallel\n-  if (q .ne. 6 .or. r .ne. 17 .or. e) call abort\n+  if (q .ne. 6 .or. r .ne. 17 .or. e) STOP 1\n contains\n   subroutine foo (a, b)\n     integer, intent (in) :: a, b"}, {"sha": "0e92fcb6f8938c323e9103fe8efb5b0355838bce", "filename": "libgomp/testsuite/libgomp.fortran/taskloop2.f90", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,7 +13,7 @@\n   !$omp end single\n   !$omp end parallel\n   do i = 1, 1024\n-    if (u(i) .ne. 2 * i + 1) call abort\n+    if (u(i) .ne. 2 * i + 1) STOP 1\n     v(i) = 1024 - i\n     w(i) = 512 - i\n   end do\n@@ -24,45 +24,45 @@\n   !$omp end parallel\n   do i = 1, 1024\n     if (i .lt. 2 .or. i .gt. 1022) then\n-      if (u(i) .ne. 2 * i + 1) call abort\n+      if (u(i) .ne. 2 * i + 1) STOP 2\n     else\n-      if (u(i) .ne. 1536 - 2 * i) call abort\n+      if (u(i) .ne. 1536 - 2 * i) STOP 3\n     end if\n     v(i) = i\n     w(i) = i + 1\n   end do\n-  if (m .ne. (1023 + 2 * (1021 * 5 + 17) + 9)) call abort\n+  if (m .ne. (1023 + 2 * (1021 * 5 + 17) + 9)) STOP 4\n   !$omp parallel\n   !$omp single\n     call f3 (1, 1024)\n   !$omp end single\n   !$omp end parallel \n   do i = 1, 1024\n-    if (u(i) .ne. 2 * i + 1) call abort\n+    if (u(i) .ne. 2 * i + 1) STOP 5\n     v(i) = 1024 - i\n     w(i) = 512 - i\n   end do\n-  if (m .ne. 1025) call abort\n+  if (m .ne. 1025) STOP 6\n   !$omp parallel\n   !$omp single\n     call f4 (0, 31, 1, 32)\n   !$omp end single\n   !$omp end parallel \n   do i = 1, 1024\n-    if (u(i) .ne. 1536 - 2 * i) call abort\n+    if (u(i) .ne. 1536 - 2 * i) STOP 7\n     v(i) = i\n     w(i) = i + 1\n   end do\n-  if (m .ne. 32 + 33 + 1024) call abort\n+  if (m .ne. 32 + 33 + 1024) STOP 8\n   !$omp parallel\n   !$omp single\n     call f5 (0, 31, 1, 32)\n   !$omp end single\n   !$omp end parallel \n   do i = 1, 1024\n-    if (u(i) .ne. 2 * i + 1) call abort\n+    if (u(i) .ne. 2 * i + 1) STOP 9\n   end do\n-  if (m .ne. 32 + 33) call abort\n+  if (m .ne. 32 + 33) STOP 10\n contains\n   subroutine f1 (a, b)\n     integer, intent(in) :: a, b"}, {"sha": "75f482292111e333ee986ed5241dccba211d9e72", "filename": "libgomp/testsuite/libgomp.fortran/taskloop3.f90", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -5,14 +5,14 @@\n   integer :: i\n   !$omp parallel\n   !$omp single\n-    if (f1 (74) .ne. 63 + 4) call abort\n+    if (f1 (74) .ne. 63 + 4) STOP 1\n     g = 77\n     call f2\n     !$omp taskwait\n-    if (g .ne. 63 + 9) call abort\n-    if (f3 (7_8, 11_8, 2_8) .ne. 11 * 7 + 13) call abort\n+    if (g .ne. 63 + 9) STOP 2\n+    if (f3 (7_8, 11_8, 2_8) .ne. 11 * 7 + 13) STOP 3\n     if (f4 (0_8, 31_8, 16_8, 46_8, 1_8, 2_8, 73) .ne. 32 + 5 * 48 &\n-&       + 11 * 31 + 17 * 46) call abort\n+&       + 11 * 31 + 17 * 46) STOP 4\n   !$omp end single\n   !$omp end parallel\n contains\n@@ -22,7 +22,7 @@ function f1 (y)\n     x = y\n     !$omp taskloop firstprivate(x)lastprivate(x)\n     do i = 0, 63\n-      if (x .ne. 74) call abort\n+      if (x .ne. 74) STOP 5\n       if (i .eq. 63) then\n         x = i + 4\n       end if\n@@ -33,7 +33,7 @@ subroutine f2 ()\n     integer :: i\n     !$omp taskloop firstprivate(g)lastprivate(g)nogroup\n     do i = 0, 63\n-      if (g .ne. 77) call abort\n+      if (g .ne. 77) STOP 6\n       if (i .eq. 63) then\n         g = i + 9\n       end if\n@@ -60,7 +60,7 @@ function f4 (a, b, c, d, e, f, m)\n     !$omp & lastprivate (i, j, k, l)\n     do i = a, b, e\n       do j = c, d, f\n-        if (k .ne. 73) call abort\n+        if (k .ne. 73) STOP 7\n         if (i .eq. 31 .and. j .eq. 46) then\n           k = i\n         end if"}, {"sha": "23067a3e48da1225edda8758407a474bb350bc3a", "filename": "libgomp/testsuite/libgomp.fortran/taskloop4.f90", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftaskloop4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,22 +11,22 @@\n     ! >= grainsize && < 2 * grainsize,\n     ! unless # of loop iterations is smaller than grainsize.\n     call test (0, 79, 1, 17, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 79) call abort\n-    if (min_iters .lt. 17 .or. max_iters .ge. 17 * 2) call abort\n+    if (cnt .ne. 79) STOP 1\n+    if (min_iters .lt. 17 .or. max_iters .ge. 17 * 2) STOP 2\n     call test (-49, 2541, 7, 28, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 370) call abort\n-    if (min_iters .lt. 28 .or. max_iters .ge. 28 * 2) call abort\n+    if (cnt .ne. 370) STOP 3\n+    if (min_iters .lt. 28 .or. max_iters .ge. 28 * 2) STOP 4\n     call test (7, 21, 2, 15, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 7) call abort\n-    if (min_iters .ne. 7 .or. max_iters .ne. 7) call abort\n-    if (ntasks .ne. 1) call abort\n+    if (cnt .ne. 7) STOP 5\n+    if (min_iters .ne. 7 .or. max_iters .ne. 7) STOP 6\n+    if (ntasks .ne. 1) STOP 7\n     fn => num_tasks\n     ! If num_tasks is present, # of task loop iters is\n     ! min (# of loop iters, num_tasks).\n     call test (-51, 2500, 48, 9, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 54 .or. ntasks .ne. 9) call abort\n+    if (cnt .ne. 54 .or. ntasks .ne. 9) STOP 8\n     call test (0, 25, 2, 17, fn, ntasks, min_iters, max_iters, cnt)\n-    if (cnt .ne. 13 .or. ntasks .ne. 13) call abort\n+    if (cnt .ne. 13 .or. ntasks .ne. 13) STOP 9\n   !$omp end single\n   !$omp end parallel\n contains\n@@ -42,7 +42,7 @@ subroutine grainsize (a, b, c, d)\n           k = v\n           v = v + 1\n         !$omp end atomic\n-        if (k .ge. 64) call abort\n+        if (k .ge. 64) STOP 10\n       end if\n       j = j + 1\n       u(k + 1) = j\n@@ -60,7 +60,7 @@ subroutine num_tasks (a, b, c, d)\n           k = v\n           v = v + 1\n         !$omp end atomic\n-        if (k .ge. 64) call abort\n+        if (k .ge. 64) STOP 11\n       end if\n       j = j + 1\n       u(k + 1) = j"}, {"sha": "4867cc2cdbcf836529f2980c1c8f22648f53ff37", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -15,7 +15,7 @@ end module threadprivate1\n !$omp barrier\n   if (d .ne. omp_get_thread_num () + 6.5) l = .true.\n !$omp end parallel\n-  if (l) call abort ()\n+  if (l) STOP 1\n end\n \n ! { dg-final { cleanup-modules \"threadprivate1\" } }"}, {"sha": "c0aa5be8a940fb48b9c2a386110cac1d05e9191e", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate2.f90", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -53,16 +53,16 @@ end module threadprivate2\n   baz%b = omp_get_thread_num () * 2 + 1\n !$omp end parallel\n \n-  if (l) call abort\n-  if (.not.allocated (foo)) call abort\n-  if (size (foo).ne.18) call abort\n-  if (any (foo.ne.1)) call abort\n-\n-  if (associated (bar1)) call abort\n-  if (.not.associated (bar3)) call abort\n-  if (any (bar3 .ne. -2)) call abort\n+  if (l) STOP 1\n+  if (.not.allocated (foo)) STOP 2\n+  if (size (foo).ne.18) STOP 3\n+  if (any (foo.ne.1)) STOP 4\n+\n+  if (associated (bar1)) STOP 5\n+  if (.not.associated (bar3)) STOP 6\n+  if (any (bar3 .ne. -2)) STOP 7\n   deallocate (bar3)\n-  if (associated (bar3)) call abort\n+  if (associated (bar3)) STOP 8\n \n !$omp parallel num_threads (4) reduction (.or.:l)\n   l = l.or..not.allocated (foo)\n@@ -85,12 +85,12 @@ end module threadprivate2\n   l = l.or.(baz%b.ne.(omp_get_thread_num () * 2 + 1))\n !$omp end parallel\n \n-  if (l) call abort\n-  if (.not.allocated (foo)) call abort\n-  if (size (foo).ne.18) call abort\n-  if (any (foo.ne.1)) call abort\n+  if (l) STOP 9\n+  if (.not.allocated (foo)) STOP 10\n+  if (size (foo).ne.18) STOP 11\n+  if (any (foo.ne.1)) STOP 12\n   deallocate (foo)\n-  if (allocated (foo)) call abort\n+  if (allocated (foo)) STOP 13\n end\n \n ! { dg-final { cleanup-modules \"threadprivate2\" } }"}, {"sha": "5bb6b290e48abc948274d94f033caf1f68ef66ba", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate3.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -44,7 +44,7 @@ end module threadprivate3\n   bar3 = omp_get_thread_num () - 2\n   if (omp_get_thread_num () .ne. 0) then\n     deallocate (bar3)\n-    if (associated (bar3)) call abort\n+    if (associated (bar3)) STOP 1\n   else\n     bar1 => var\n   end if\n@@ -55,13 +55,13 @@ end module threadprivate3\n   baz%b = omp_get_thread_num () * 2 + 1\n !$omp end parallel\n \n-  if (l) call abort\n-  if (.not.associated (bar1)) call abort\n-  if (any (bar1.ne.6)) call abort\n-  if (.not.associated (bar3)) call abort\n-  if (any (bar3 .ne. -2)) call abort\n+  if (l) STOP 2\n+  if (.not.associated (bar1)) STOP 3\n+  if (any (bar1.ne.6)) STOP 4\n+  if (.not.associated (bar3)) STOP 5\n+  if (any (bar3 .ne. -2)) STOP 6\n   deallocate (bar3)\n-  if (associated (bar3)) call abort\n+  if (associated (bar3)) STOP 7\n \n   allocate (bar3 (10))\n   bar3 = 17\n@@ -102,7 +102,7 @@ end module threadprivate3\n   l = l.or.(baz%b .ne. omp_get_thread_num () * 3 + 5)\n !$omp end parallel\n \n-  if (l) call abort\n+  if (l) STOP 8\n end\n \n ! { dg-final { cleanup-modules \"threadprivate3\" } }"}, {"sha": "2e7a438dd7b71e99d9e48c639627308c92aa3ced", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -72,7 +72,7 @@ end module threadprivate4\n   vi = -1\n !$omp end parallel\n \n-  if (l) call abort\n+  if (l) STOP 1\n \n end\n "}, {"sha": "138bd58723263b64e88f0d33445932d5949cad93", "filename": "libgomp/testsuite/libgomp.fortran/udr1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -28,24 +28,24 @@ function notdefined(x, y)\n   do i = 1, 100\n     j = j + i\n   end do\n-  if (j .ne. 5050) call abort\n+  if (j .ne. 5050) STOP 1\n   j = 3\n !$omp parallel do reduction (bar : j)\n   do i = 1, 100\n     j = j + 4 * i\n   end do\n-  if (j .ne. (5050 * 4 + 3)) call abort\n+  if (j .ne. (5050 * 4 + 3)) STOP 2\n !$omp parallel do reduction (+ : d)\n   do i = 1, 100\n-    if (d%y .ne. 9) call abort\n+    if (d%y .ne. 9) STOP 3\n     d%x = d%x + 8 * i\n   end do\n-  if (d%x .ne. (5050 * 8 + 7) .or. d%y .ne. 9) call abort\n+  if (d%x .ne. (5050 * 8 + 7) .or. d%y .ne. 9) STOP 4\n   d = dt (5, 21)\n !$omp parallel do reduction (foo : d)\n   do i = 1, 100\n-    if (d%y .ne. 21) call abort\n+    if (d%y .ne. 21) STOP 5\n     d%x = d%x + 8 * i\n   end do\n-  if (d%x .ne. (5050 * 8 + 5) .or. d%y .ne. 21) call abort\n+  if (d%x .ne. (5050 * 8 + 5) .or. d%y .ne. 21) STOP 6\n end"}, {"sha": "a855c0b15c95c3a395813a035071066c05279b80", "filename": "libgomp/testsuite/libgomp.fortran/udr10.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr10.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -28,5 +28,5 @@ program udr10\n     j = j .localadd. dl(i)\n     k = k + dl(i * 2)\n   end do\n-  if (j%x /= 5050 .or. k%x /= 10100) call abort\n+  if (j%x /= 5050 .or. k%x /= 10100) STOP 1\n end"}, {"sha": "d69dd72bac3e36e2f4157e547937254c0cd6e851", "filename": "libgomp/testsuite/libgomp.fortran/udr11.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr11.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -88,8 +88,8 @@ end function addme7\n     t%x = t%x + 2 * i\n     u%x = u%x + 3 * i\n   end do\n-  if (j%x /= 5050 .or. k%x /= 30300 .or. l%x /= 15150) call abort\n-  if (m%x /= 5050 .or. n%x /= 10100 .or. o%x /= 15150) call abort\n-  if (p%x /= 5050 .or. q%x /= 10100 .or. r%x /= 15150) call abort\n-  if (s%x /= 5050 .or. t%x /= 10100 .or. u%x /= 15150) call abort\n+  if (j%x /= 5050 .or. k%x /= 30300 .or. l%x /= 15150) STOP 1\n+  if (m%x /= 5050 .or. n%x /= 10100 .or. o%x /= 15150) STOP 2\n+  if (p%x /= 5050 .or. q%x /= 10100 .or. r%x /= 15150) STOP 3\n+  if (s%x /= 5050 .or. t%x /= 10100 .or. u%x /= 15150) STOP 4\n end"}, {"sha": "c39f0ebc90a2e2ef45af40e904c3161a21a6926a", "filename": "libgomp/testsuite/libgomp.fortran/udr12.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr12.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -34,7 +34,7 @@ elemental subroutine sub2 (x, y)\n   b = b + 3\n   r = r + 1\n !$omp end parallel\n-  if (any (a /= 2 * r) .or. b /= 3 * r) call abort\n+  if (any (a /= 2 * r) .or. b /= 3 * r) STOP 1\n   a(:) = 0\n   b = 0\n   r = 0\n@@ -43,7 +43,7 @@ elemental subroutine sub2 (x, y)\n   b = b + 3\n   r = r + 1\n !$omp end parallel\n-  if (any (a /= 4 * r) .or. b /= 6 * r) call abort\n+  if (any (a /= 4 * r) .or. b /= 6 * r) STOP 2\n   a(:) = 0\n   b = 0\n   r = 0\n@@ -52,7 +52,7 @@ elemental subroutine sub2 (x, y)\n   b = b + 3\n   r = r + 1\n !$omp end parallel\n-  if (any (a /= 2 * r) .or. b /= 3 * r) call abort\n+  if (any (a /= 2 * r) .or. b /= 3 * r) STOP 3\n end\n elemental function fn1 (x, y)\n   integer, intent(in) :: x, y"}, {"sha": "0ff53adf0caf5d2f38aa6ce79271dcbfbe8a4013", "filename": "libgomp/testsuite/libgomp.fortran/udr13.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr13.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -41,38 +41,38 @@ function fn3 (x)\n   a(:) = 0\n   r = 0\n !$omp parallel reduction (bar : a) reduction (+: r)\n-  if (lbound (a, 1) /= 1 .or. ubound (a, 1) /= 10) call abort\n+  if (lbound (a, 1) /= 1 .or. ubound (a, 1) /= 10) STOP 1\n   a = a + 2\n   r = r + 1\n !$omp end parallel\n-  if (any (a /= 4 * r) ) call abort\n+  if (any (a /= 4 * r) ) STOP 2\n   b(:,:) = 0\n   allocate (c (4:6,8:10))\n   c(:,:) = 0\n   r = 0\n !$omp parallel reduction (baz : b, c) reduction (+: r)\n-  if (lbound (b, 1) /= 3 .or. ubound (b, 1) /= 5) call abort\n-  if (lbound (b, 2) /= 7 .or. ubound (b, 2) /= 9) call abort\n-  if (.not. allocated (c)) call abort\n-  if (lbound (c, 1) /= 4 .or. ubound (c, 1) /= 6) call abort\n-  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 10) call abort\n+  if (lbound (b, 1) /= 3 .or. ubound (b, 1) /= 5) STOP 3\n+  if (lbound (b, 2) /= 7 .or. ubound (b, 2) /= 9) STOP 4\n+  if (.not. allocated (c)) STOP 5\n+  if (lbound (c, 1) /= 4 .or. ubound (c, 1) /= 6) STOP 6\n+  if (lbound (c, 2) /= 8 .or. ubound (c, 2) /= 10) STOP 7\n   b = b + 3\n   c = c + 4\n   r = r + 1\n !$omp end parallel\n-  if (any (b /= 3 * r) .or. any (c /= 4 * r)) call abort\n+  if (any (b /= 3 * r) .or. any (c /= 4 * r)) STOP 8\n   deallocate (c)\n   allocate (c (0:1,7:11))\n   c(:,:) = 0\n   r = 0\n !$omp parallel reduction (foo : c) reduction (+: r)\n-  if (.not. allocated (c)) call abort\n-  if (lbound (c, 1) /= 0 .or. ubound (c, 1) /= 1) call abort\n-  if (lbound (c, 2) /= 7 .or. ubound (c, 2) /= 11) call abort\n+  if (.not. allocated (c)) STOP 9\n+  if (lbound (c, 1) /= 0 .or. ubound (c, 1) /= 1) STOP 10\n+  if (lbound (c, 2) /= 7 .or. ubound (c, 2) /= 11) STOP 11\n   c = c + 5\n   r = r + 1\n !$omp end parallel\n-  if (any (c /= 10 * r)) call abort\n+  if (any (c /= 10 * r)) STOP 12\n end\n function fn1 (x, y, m1, m2)\n   integer, intent(in) :: x(:), y(:), m1, m2"}, {"sha": "cb54f4350b98bfec15cbd7c0616dfecc8fd04e90", "filename": "libgomp/testsuite/libgomp.fortran/udr14.f90", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr14.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,31 +13,31 @@\n   a(7)%h = (/ 0, 0, 0 /)\n   r = 0\n !$omp parallel reduction(+:r) reduction (baz:a)\n-  if (.not.allocated (a)) call abort\n-  if (lbound (a, 1) /= 7 .or. ubound (a, 1) /= 8) call abort\n-  if (.not.allocated (a(7)%h)) call abort\n-  if (allocated (a(8)%h)) call abort\n-  if (lbound (a(7)%h, 1) /= 1 .or. ubound (a(7)%h, 1) /= 3) call abort\n+  if (.not.allocated (a)) STOP 1\n+  if (lbound (a, 1) /= 7 .or. ubound (a, 1) /= 8) STOP 2\n+  if (.not.allocated (a(7)%h)) STOP 3\n+  if (allocated (a(8)%h)) STOP 4\n+  if (lbound (a(7)%h, 1) /= 1 .or. ubound (a(7)%h, 1) /= 3) STOP 5\n   a(:)%g = a(:)%g + 2\n   a(7)%h = a(7)%h + 3\n   r = r + 1\n !$omp end parallel\n-  if (.not.allocated (a)) call abort\n-  if (lbound (a, 1) /= 7 .or. ubound (a, 1) /= 8) call abort\n-  if (.not.allocated (a(7)%h)) call abort\n-  if (allocated (a(8)%h)) call abort\n-  if (lbound (a(7)%h, 1) /= 1 .or. ubound (a(7)%h, 1) /= 3) call abort\n-  if (any (a(:)%g /= 2 * r) .or. any (a(7)%h(:) /= 3 * r)) call abort\n+  if (.not.allocated (a)) STOP 6\n+  if (lbound (a, 1) /= 7 .or. ubound (a, 1) /= 8) STOP 7\n+  if (.not.allocated (a(7)%h)) STOP 8\n+  if (allocated (a(8)%h)) STOP 9\n+  if (lbound (a(7)%h, 1) /= 1 .or. ubound (a(7)%h, 1) /= 3) STOP 10\n+  if (any (a(:)%g /= 2 * r) .or. any (a(7)%h(:) /= 3 * r)) STOP 11\n contains\n   subroutine foo (x, y)\n     type (dt), allocatable :: x(:), y(:)\n-    if (allocated (x) .neqv. allocated (y)) call abort\n-    if (lbound (x, 1) /= lbound (y, 1)) call abort\n-    if (ubound (x, 1) /= ubound (y, 1)) call abort\n-    if (allocated (x(7)%h) .neqv. allocated (y(7)%h)) call abort\n-    if (allocated (x(8)%h) .neqv. allocated (y(8)%h)) call abort\n-    if (lbound (x(7)%h, 1) /= lbound (y(7)%h, 1)) call abort\n-    if (ubound (x(7)%h, 1) /= ubound (y(7)%h, 1)) call abort\n+    if (allocated (x) .neqv. allocated (y)) STOP 12\n+    if (lbound (x, 1) /= lbound (y, 1)) STOP 13\n+    if (ubound (x, 1) /= ubound (y, 1)) STOP 14\n+    if (allocated (x(7)%h) .neqv. allocated (y(7)%h)) STOP 15\n+    if (allocated (x(8)%h) .neqv. allocated (y(8)%h)) STOP 16\n+    if (lbound (x(7)%h, 1) /= lbound (y(7)%h, 1)) STOP 17\n+    if (ubound (x(7)%h, 1) /= ubound (y(7)%h, 1)) STOP 18\n     x(7)%g = 0\n     x(7)%h = 0\n     x(8)%g = 0"}, {"sha": "ffdb9a783bc35f992444cbf3b25513ef2cd350ea", "filename": "libgomp/testsuite/libgomp.fortran/udr15.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr15.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -60,5 +60,5 @@ end module udr15m2\n     j = j.addthree.iand (i, -4)\n     d = d + dt(i)\n   end do\n-  if (d%x /= 5050 .or. j /= 4903) call abort\n+  if (d%x /= 5050 .or. j /= 4903) STOP 1\n end"}, {"sha": "5b7d87b33ebf2edf4d6745e61c0531ece67967bb", "filename": "libgomp/testsuite/libgomp.fortran/udr2.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -28,24 +28,24 @@ function notdefined(x, y)\n   do i = 1, 100\n     j = j + i\n   end do\n-  if (any(j .ne. 5050)) call abort\n+  if (any(j .ne. 5050)) STOP 1\n   j = 3\n !$omp parallel do reduction (bar : j)\n   do i = 1, 100\n     j = j + 4 * i\n   end do\n-  if (any(j .ne. (5050 * 4 + 3))) call abort\n+  if (any(j .ne. (5050 * 4 + 3))) STOP 2\n !$omp parallel do reduction (+ : d)\n   do i = 1, 100\n-    if (any(d%y .ne. 9)) call abort\n+    if (any(d%y .ne. 9)) STOP 3\n     d%x = d%x + 8 * i\n   end do\n-  if (any(d%x .ne. (5050 * 8 + 7)) .or. any(d%y .ne. 9)) call abort\n+  if (any(d%x .ne. (5050 * 8 + 7)) .or. any(d%y .ne. 9)) STOP 4\n   d = dt (5, 21)\n !$omp parallel do reduction (foo : d)\n   do i = 1, 100\n-    if (any(d%y .ne. 21)) call abort\n+    if (any(d%y .ne. 21)) STOP 5\n     d%x = d%x + 8 * i\n   end do\n-  if (any(d%x .ne. (5050 * 8 + 5)) .or. any(d%y .ne. 21)) call abort\n+  if (any(d%x .ne. (5050 * 8 + 5)) .or. any(d%y .ne. 21)) STOP 6\n end"}, {"sha": "50cecec1f5a85199faf4c95770ab257d3140b1c6", "filename": "libgomp/testsuite/libgomp.fortran/udr3.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,10 +29,10 @@\n &\t// char (ichar (f(2:2)) + mod (i, 3))\n   end do\n   do i = 1, 64\n-    if (index (c, char (ichar ('0') + i)) .eq. 0) call abort\n-    if (index (d, char (ichar ('0') + i)) .eq. 0) call abort\n+    if (index (c, char (ichar ('0') + i)) .eq. 0) STOP 1\n+    if (index (d, char (ichar ('0') + i)) .eq. 0) STOP 2\n   end do\n-  if (e.ne.char (ichar ('0') + 64)) call abort\n-  if (f(1:1).ne.char (ichar ('0') + 32)) call abort\n-  if (f(2:2).ne.char (ichar ('0') + 64)) call abort\n+  if (e.ne.char (ichar ('0') + 64)) STOP 3\n+  if (f(1:1).ne.char (ichar ('0') + 32)) STOP 4\n+  if (f(2:2).ne.char (ichar ('0') + 64)) STOP 5\n end"}, {"sha": "86d9515c70a91e30d7d096bca1dde44007300f95", "filename": "libgomp/testsuite/libgomp.fortran/udr4.f90", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -36,12 +36,12 @@ elemental function fn (x, y)\n &\t// char (ichar (f(:,:)(2:2)) + mod (i, 3))\n   end do\n   do i = 1, 64\n-    if (any (index (c, char (ichar ('0') + i)) .eq. 0)) call abort\n-    if (any (index (d, char (ichar ('0') + i)) .eq. 0)) call abort\n+    if (any (index (c, char (ichar ('0') + i)) .eq. 0)) STOP 1\n+    if (any (index (d, char (ichar ('0') + i)) .eq. 0)) STOP 2\n   end do\n-  if (any (e.ne.char (ichar ('0') + 64))) call abort\n-  if (any (f(:,:)(1:1).ne.char (ichar ('0') + 32))) call abort\n-  if (any (f(:,:)(2:2).ne.char (ichar ('0') + 64))) call abort\n+  if (any (e.ne.char (ichar ('0') + 64))) STOP 3\n+  if (any (f(:,:)(1:1).ne.char (ichar ('0') + 32))) STOP 4\n+  if (any (f(:,:)(2:2).ne.char (ichar ('0') + 64))) STOP 5\n end\n elemental function fn (x, y)\n   character (len=64), intent (in) :: x, y"}, {"sha": "8c6c525742abcaf44fb8d9b789da60dbf8c4e8a8", "filename": "libgomp/testsuite/libgomp.fortran/udr5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -52,6 +52,6 @@ program udr5\n   r4 = r4 + 1.0\n   call dp_add (dp, 1.0d0)\n !$omp end parallel\n-  if (xdt%r .ne. r) call abort\n-  if (i4.ne.r.or.i8.ne.r.or.r4.ne.r.or.dp.ne.r) call abort\n+  if (xdt%r .ne. r) STOP 1\n+  if (i4.ne.r.or.i8.ne.r.or.r4.ne.r.or.dp.ne.r) STOP 2\n end program udr5"}, {"sha": "159f6a40ffbbb6da1b63c8603519fd3368996624", "filename": "libgomp/testsuite/libgomp.fortran/udr6.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -62,8 +62,8 @@ program udr6\n     call dp_add (dp(i), 1.0d0)\n   end do\n !$omp end parallel\n-  if (any (xdt%r .ne. r)) call abort\n-  if (any (i4.ne.r).or.any(i8.ne.r)) call abort\n-  if (any(r4.ne.r).or.any(dp.ne.r)) call abort\n+  if (any (xdt%r .ne. r)) STOP 1\n+  if (any (i4.ne.r).or.any(i8.ne.r)) STOP 2\n+  if (any(r4.ne.r).or.any(dp.ne.r)) STOP 3\n   deallocate (xdt, i4, i8, r4, dp)\n end program udr6"}, {"sha": "92b24a196f4446b4d2ad9c1531c17b66f71a7f9b", "filename": "libgomp/testsuite/libgomp.fortran/udr7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,7 +22,7 @@ end function omp_orig\n   do i = 1, 64\n     x = x + i\n   end do\n-  if (any (x /= 2080.0)) call abort\n+  if (any (x /= 2080.0)) STOP 1\n contains\n   elemental subroutine omp_out (x, y)\n     real, intent (out) :: x"}, {"sha": "6b8eac22a7fba46a3f9a9dbfe7cfe2d65285701f", "filename": "libgomp/testsuite/libgomp.fortran/udr8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr8.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -42,5 +42,5 @@ end module udr8m2\n     j = j.add.iand (i, -4)\n     d = d + dt(i)\n   end do\n-  if (d%x /= 5050 .or. j /= 4903) call abort\n+  if (d%x /= 5050 .or. j /= 4903) STOP 1\n end"}, {"sha": "a8ba78d924dfce40e469a78c25b7b093d8022125", "filename": "libgomp/testsuite/libgomp.fortran/udr9.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fudr9.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -23,7 +23,7 @@ elemental subroutine combiner1 (x, y)\n   end subroutine\n   subroutine initializer1 (x, y)\n     integer :: x, y\n-    if (y .ne. 3) call abort\n+    if (y .ne. 3) STOP 1\n     x = y\n   end subroutine\n end module udr9m1\n@@ -61,5 +61,5 @@ end module udr9m2\n     j = j.add.iand (i, -4)\n     d = d + dt(i)\n   end do\n-  if (d%x /= 5050 .or. j /= 4903) call abort\n+  if (d%x /= 5050 .or. j /= 4903) STOP 2\n end"}, {"sha": "e483a4c483c64e74f44d604c503795d2c922dd87", "filename": "libgomp/testsuite/libgomp.fortran/vla1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -155,7 +155,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     call check (size (k, 3), 3, l)\n     call check (size (k), 15, l)\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "37dc319f72a42f455f0c34deb9c63f65bbc8c741", "filename": "libgomp/testsuite/libgomp.fortran/vla2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -123,7 +123,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     call check (size (k, 3), 3, l)\n     call check (size (k), 15, l)\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "1f4012b103470c6ff13643f89ffb8d84ad168d3d", "filename": "libgomp/testsuite/libgomp.fortran/vla3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -161,7 +161,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n     call check (size (k, 3), 3, l)\n     call check (size (k), 15, l)\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "64c7315f2bbe84c13855ecab327dc7b8ad9d028d", "filename": "libgomp/testsuite/libgomp.fortran/vla4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -165,7 +165,7 @@ subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n     call check (size (k), 15, l)\n 110 continue\n !$omp end parallel do\n-    if (l) call abort\n+    if (l) STOP 1\n     if (z2 == 6) then\n       x = 5\n       w = 'thread5thr_number_5THREAD5THR_NUMBER_5'\n@@ -201,7 +201,7 @@ subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n \tdo 115, q = 4, 6\n \t  l = l .or. k(p, 1, q - 3) .ne. 19 + x + p + 7 + 3 * q\n 115   continue\n-      if (l) call abort\n+      if (l) STOP 2\n     end if\n   end subroutine foo\n "}, {"sha": "867da73c55eca39b9c65da0f766db4ba8ed5f03b", "filename": "libgomp/testsuite/libgomp.fortran/vla5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -137,7 +137,7 @@ subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n     call check (size (k), 15, l)\n 110 continue\n !$omp end parallel do\n-    if (l) call abort\n+    if (l) STOP 1\n     if (z2 == 6) then\n       x = 5\n       w = 'thread5thr_number_5THREAD5THR_NUMBER_5'\n@@ -173,7 +173,7 @@ subroutine GOMP_barrier () bind(c, name=\"GOMP_barrier\")\n \tdo 115, q = 4, 6\n \t  l = l .or. k(p, 1, q - 3) .ne. 19 + x + p + 7 + 3 * q\n 115   continue\n-      if (l) call abort\n+      if (l) STOP 2\n     end if\n   end subroutine foo\n "}, {"sha": "1017beed184bafc66571587ca9d7f99ab1c21243", "filename": "libgomp/testsuite/libgomp.fortran/vla6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -172,7 +172,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n \tl = l .or. k(p, 1, q - 3) .ne. 19 + x + p + 7 + 3 * q\n 115 continue\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "a97132dc0a4a36aedd7017ec821fe4e2f18e1747", "filename": "libgomp/testsuite/libgomp.fortran/vla7.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,13 +4,13 @@\n   character (6) :: c, f2\n   character (6) :: d(2)\n   c = f1 (6)\n-  if (c .ne. 'opqrst') call abort\n+  if (c .ne. 'opqrst') STOP 1\n   c = f2 (6)\n-  if (c .ne. '_/!!/_') call abort\n+  if (c .ne. '_/!!/_') STOP 2\n   d = f3 (6)\n-  if (d(1) .ne. 'opqrst' .or. d(2) .ne. 'a') call abort\n+  if (d(1) .ne. 'opqrst' .or. d(2) .ne. 'a') STOP 3\n   d = f4 (6)\n-  if (d(1) .ne. 'Opqrst' .or. d(2) .ne. 'A') call abort\n+  if (d(1) .ne. 'Opqrst' .or. d(2) .ne. 'A') STOP 4\n contains\n   function f1 (n)\n     use omp_lib\n@@ -40,7 +40,7 @@ function f1 (n)\n !$omp barrier\n     l = l .or. f1 .ne. 'def'\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 5\n     f1 = 'opqrst'\n   end function f1\n   function f3 (n)\n@@ -71,7 +71,7 @@ function f3 (n)\n !$omp barrier\n     l = l .or. any (f3 .ne. 'def')\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 6\n     f3(1) = 'opqrst'\n     f3(2) = 'a'\n   end function f3\n@@ -105,7 +105,7 @@ function f4 (n)\n     l = l .or. any (f4 .ne. 'def')\n     l = l .or. size (f4) .ne. 2\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 7\n     f4(1) = 'Opqrst'\n     f4(2) = 'A'\n   end function f4\n@@ -138,6 +138,6 @@ function f2 (n)\n !$omp barrier\n   l = l .or. f2 .ne. 'def'\n !$omp end parallel\n-  if (l) call abort\n+  if (l) STOP 8\n   f2 = '_/!!/_'\n end function f2"}, {"sha": "68174cadd7ca7d67ed345253c53a519e8c4706b6", "filename": "libgomp/testsuite/libgomp.fortran/vla8.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fvla8.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -236,7 +236,7 @@ subroutine foo (c, d, e, f, g, h, i, j, k, n)\n \tl = l .or. k(p, 1, q - 3) .ne. 19 + x + p + 7 + 3 * q\n 125 continue\n !$omp end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine foo\n \n   subroutine test"}, {"sha": "1d2ba7d3ee264b38f9f60deefadefac8c662bc42", "filename": "libgomp/testsuite/libgomp.fortran/workshare1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -24,7 +24,7 @@ function bar ()\n   b = 20\n   a(1:5) = max (a(1:5), b(1:5))\n !$omp end parallel workshare\n-  if (any (a(1:5) .ne. 20)) call abort\n-  if (any (a(6:10) .ne. 10)) call abort\n-  if (.not. foo_seen .or. .not. bar_seen) call abort\n+  if (any (a(1:5) .ne. 20)) STOP 1\n+  if (any (a(6:10) .ne. 10)) STOP 2\n+  if (.not. foo_seen .or. .not. bar_seen) STOP 3\n end"}, {"sha": "655a450885e1b9c280063eebe98fb93b92f7884d", "filename": "libgomp/testsuite/libgomp.fortran/workshare2.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fworkshare2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -3,7 +3,7 @@ subroutine f1\n !$omp parallel workshare\n   a(:,:) = 17\n !$omp end parallel workshare\n-  if (any (a.ne.17)) call abort\n+  if (any (a.ne.17)) STOP 1\n end subroutine f1\n subroutine f2\n   integer a(20:50,70:90),d(15),e(15),f(15)\n@@ -20,14 +20,14 @@ subroutine f2\n   f = 7\n   where (e.ge.5) f = f + 1\n !$omp end parallel workshare\n-  if (any (a.ne.17)) call abort\n-  if (c.ne.5.or.b.ne.4) call abort\n-  if (any(d.ne.0)) call abort\n+  if (any (a.ne.17)) STOP 2\n+  if (c.ne.5.or.b.ne.4) STOP 3\n+  if (any(d.ne.0)) STOP 4\n   do i = 1, 15\n     if (e(i).ge.5) then\n-      if (f(i).ne.8) call abort\n+      if (f(i).ne.8) STOP 5\n     else\n-      if (f(i).ne.7) call abort\n+      if (f(i).ne.7) STOP 6\n     end if\n   end do\n end subroutine f2"}, {"sha": "dde35123e7907ae90a96bb705e0771c414dd7139", "filename": "libgomp/testsuite/libgomp.oacc-fortran/abort-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fabort-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fabort-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fabort-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -3,7 +3,7 @@ program main\n \n   print *, \"CheCKpOInT\"\n   !$acc parallel\n-  call abort\n+  STOP 1\n   !$acc end parallel\n \n end program main"}, {"sha": "68d90e945396d6dfd7bc674fba3ac87952c5c8da", "filename": "libgomp/testsuite/libgomp.oacc-fortran/abort-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fabort-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fabort-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fabort-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,7 +6,7 @@ program main\n \n   !$acc parallel copyin(argc)\n   if (argc .ne. 0) then\n-     call abort\n+     STOP 1\n   end if\n   !$acc end parallel\n "}, {"sha": "d6c67a0c31aad7ee010ba5c677c42edae521e803", "filename": "libgomp/testsuite/libgomp.oacc-fortran/acc_on_device-1-1.f90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -9,19 +9,19 @@\n \n ! Host.\n \n-if (.not. acc_on_device (acc_device_none)) call abort\n-if (.not. acc_on_device (acc_device_host)) call abort\n-if (acc_on_device (acc_device_not_host)) call abort\n-if (acc_on_device (acc_device_nvidia)) call abort\n+if (.not. acc_on_device (acc_device_none)) STOP 1\n+if (.not. acc_on_device (acc_device_host)) STOP 2\n+if (acc_on_device (acc_device_not_host)) STOP 3\n+if (acc_on_device (acc_device_nvidia)) STOP 4\n \n \n ! Host via offloading fallback mode.\n \n !$acc parallel if(.false.)\n-if (.not. acc_on_device (acc_device_none)) call abort\n-if (.not. acc_on_device (acc_device_host)) call abort\n-if (acc_on_device (acc_device_not_host)) call abort\n-if (acc_on_device (acc_device_nvidia)) call abort\n+if (.not. acc_on_device (acc_device_none)) STOP 5\n+if (.not. acc_on_device (acc_device_host)) STOP 6\n+if (acc_on_device (acc_device_not_host)) STOP 7\n+if (acc_on_device (acc_device_nvidia)) STOP 8\n !$acc end parallel\n \n \n@@ -30,13 +30,13 @@\n ! Offloaded.\n \n !$acc parallel\n-if (acc_on_device (acc_device_none)) call abort\n-if (acc_on_device (acc_device_host)) call abort\n-if (.not. acc_on_device (acc_device_not_host)) call abort\n+if (acc_on_device (acc_device_none)) STOP 9\n+if (acc_on_device (acc_device_host)) STOP 10\n+if (.not. acc_on_device (acc_device_not_host)) STOP 11\n #if ACC_DEVICE_TYPE_nvidia\n-if (.not. acc_on_device (acc_device_nvidia)) call abort\n+if (.not. acc_on_device (acc_device_nvidia)) STOP 12\n #else\n-if (acc_on_device (acc_device_nvidia)) call abort\n+if (acc_on_device (acc_device_nvidia)) STOP 13\n #endif\n !$acc end parallel\n "}, {"sha": "75e24509ce9bdf0f727f2e4aa04a106d9611249c", "filename": "libgomp/testsuite/libgomp.oacc-fortran/acc_on_device-1-2.f", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-2.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -9,19 +9,19 @@\n \n !Host.\n \n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NONE)) CALL ABORT\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_HOST)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) CALL ABORT\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NONE)) STOP 1\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_HOST)) STOP 2\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) STOP 3\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) STOP 4\n \n \n !Host via offloading fallback mode.\n \n !$ACC PARALLEL IF(.FALSE.)\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NONE)) CALL ABORT\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_HOST)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) CALL ABORT\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NONE)) STOP 5\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_HOST)) STOP 6\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) STOP 7\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) STOP 8\n !$ACC END PARALLEL\n \n \n@@ -30,13 +30,13 @@\n ! Offloaded.\n \n !$ACC PARALLEL\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NONE)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_HOST)) CALL ABORT\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) CALL ABORT\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NONE)) STOP 9\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_HOST)) STOP 10\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) STOP 11\n #if ACC_DEVICE_TYPE_nvidia\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) CALL ABORT\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) STOP 12\n #else\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) CALL ABORT\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) STOP 13\n #endif\n !$ACC END PARALLEL\n "}, {"sha": "908d185f40c75efba7c4e88ce082b394ac81c869", "filename": "libgomp/testsuite/libgomp.oacc-fortran/acc_on_device-1-3.f", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Facc_on_device-1-3.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -9,19 +9,19 @@\n \n !Host.\n \n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NONE)) CALL ABORT\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_HOST)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) CALL ABORT\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NONE)) STOP 1\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_HOST)) STOP 2\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) STOP 3\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) STOP 4\n \n \n !Host via offloading fallback mode.\n \n !$ACC PARALLEL IF(.FALSE.)\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NONE)) CALL ABORT\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_HOST)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) CALL ABORT\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NONE)) STOP 5\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_HOST)) STOP 6\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) STOP 7\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) STOP 8\n !$ACC END PARALLEL\n \n \n@@ -30,13 +30,13 @@\n ! Offloaded.\n \n !$ACC PARALLEL\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NONE)) CALL ABORT\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_HOST)) CALL ABORT\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) CALL ABORT\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NONE)) STOP 9\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_HOST)) STOP 10\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NOT_HOST)) STOP 11\n #if ACC_DEVICE_TYPE_nvidia\n-      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) CALL ABORT\n+      IF (.NOT. ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) STOP 12\n #else\n-      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) CALL ABORT\n+      IF (ACC_ON_DEVICE (ACC_DEVICE_NVIDIA)) STOP 13\n #endif\n !$ACC END PARALLEL\n "}, {"sha": "f027c31b4eae083a24e0701f981dc5b80e01ddb4", "filename": "libgomp/testsuite/libgomp.oacc-fortran/asyncwait-1.f90", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -27,8 +27,8 @@ program asyncwait\n   !$acc end data\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 3.0) call abort\n+     if (a(i) .ne. 3.0) STOP 1\n+     if (b(i) .ne. 3.0) STOP 2\n   end do\n \n   a(:) = 2.0\n@@ -47,8 +47,8 @@ program asyncwait\n   !$acc end data\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 2.0) call abort\n+     if (a(i) .ne. 2.0) STOP 3\n+     if (b(i) .ne. 2.0) STOP 4\n   end do\n \n   a(:) = 3.0\n@@ -81,10 +81,10 @@ program asyncwait\n   !$acc end data\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 9.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n+     if (a(i) .ne. 3.0) STOP 5\n+     if (b(i) .ne. 9.0) STOP 6\n+     if (c(i) .ne. 4.0) STOP 7\n+     if (d(i) .ne. 1.0) STOP 8\n   end do\n \n   a(:) = 2.0\n@@ -126,11 +126,11 @@ program asyncwait\n   !$acc end data\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 4.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n-     if (e(i) .ne. 11.0) call abort\n+     if (a(i) .ne. 2.0) STOP 9\n+     if (b(i) .ne. 4.0) STOP 10\n+     if (c(i) .ne. 4.0) STOP 11\n+     if (d(i) .ne. 1.0) STOP 12\n+     if (e(i) .ne. 11.0) STOP 13\n   end do\n \n   a(:) = 3.0\n@@ -149,8 +149,8 @@ program asyncwait\n   !$acc end data\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 3.0) call abort\n+     if (a(i) .ne. 3.0) STOP 14\n+     if (b(i) .ne. 3.0) STOP 15\n   end do\n \n   a(:) = 2.0\n@@ -169,8 +169,8 @@ program asyncwait\n   !$acc end data\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 2.0) call abort\n+     if (a(i) .ne. 2.0) STOP 16\n+     if (b(i) .ne. 2.0) STOP 17\n   end do\n \n   a(:) = 3.0\n@@ -203,10 +203,10 @@ program asyncwait\n   !$acc end data\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 9.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n+     if (a(i) .ne. 3.0) STOP 18\n+     if (b(i) .ne. 9.0) STOP 19\n+     if (c(i) .ne. 4.0) STOP 20\n+     if (d(i) .ne. 1.0) STOP 21\n   end do\n \n   a(:) = 2.0\n@@ -248,10 +248,10 @@ program asyncwait\n   !$acc end data\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 4.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n-     if (e(i) .ne. 11.0) call abort\n+     if (a(i) .ne. 2.0) STOP 22\n+     if (b(i) .ne. 4.0) STOP 23\n+     if (c(i) .ne. 4.0) STOP 24\n+     if (d(i) .ne. 1.0) STOP 25\n+     if (e(i) .ne. 11.0) STOP 26\n   end do\n end program asyncwait"}, {"sha": "7f5080a21b6dfc07923a528efdb93a3c80b1109b", "filename": "libgomp/testsuite/libgomp.oacc-fortran/asyncwait-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -31,7 +31,7 @@ program asyncwait\n   !$acc end parallel\n \n   do i = 1, N\n-    if (c(i) .ne. 2.0) call abort\n+    if (c(i) .ne. 2.0) STOP 1\n   end do\n \n   !$acc kernels async (0)\n@@ -56,7 +56,7 @@ program asyncwait\n   !$acc end kernels\n \n   do i = 1, N\n-    if (c(i) .ne. 2.0) call abort\n+    if (c(i) .ne. 2.0) STOP 2\n   end do\n   \n   deallocate (a)"}, {"sha": "6d9ed0cf078f4e05c245aa30e9f637e191f680d3", "filename": "libgomp/testsuite/libgomp.oacc-fortran/asyncwait-3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fasyncwait-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -33,7 +33,7 @@ program asyncwait\n   !$acc end parallel\n \n   do i = 1, N\n-    if (c(i) .ne. 2.0) call abort\n+    if (c(i) .ne. 2.0) STOP 1\n   end do\n \n   !$acc kernels async (0)\n@@ -60,7 +60,7 @@ program asyncwait\n   !$acc end kernels\n \n   do i = 1, N\n-    if (c(i) .ne. 2.0) call abort\n+    if (c(i) .ne. 2.0) STOP 2\n   end do\n   \n   deallocate (a)"}, {"sha": "5a7e1e5db3a70df304fd4fbb23fc10b4c932dd08", "filename": "libgomp/testsuite/libgomp.oacc-fortran/atomic_capture-1.f90", "status": "modified", "additions": 106, "deletions": 106, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,8 +18,8 @@ program main\n     end do\n   !$acc end parallel\n \n-  if (igot /= iexp) call abort\n-  if (itmp /= iexp - 2) call abort\n+  if (igot /= iexp) STOP 1\n+  if (itmp /= iexp - 2) STOP 2\n \n   fgot = 1234.0\n   fexp = 1266.0\n@@ -33,8 +33,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp - 1.0) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp - 1.0) STOP 3\n+  if (fgot /= fexp) STOP 4\n \n   fgot = 1.0\n   fexp = 2.0**32\n@@ -48,8 +48,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp / 2.0) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp / 2.0) STOP 5\n+  if (fgot /= fexp) STOP 6\n \n   fgot = 32.0\n   fexp = fgot - N\n@@ -63,8 +63,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp + 1.0) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp + 1.0) STOP 7\n+  if (fgot /= fexp) STOP 8\n \n   fgot = 2**32.0\n   fexp = 1.0\n@@ -78,8 +78,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fgot * 2.0) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fgot * 2.0) STOP 9\n+  if (fgot /= fexp) STOP 10\n \n   lgot = .TRUE.\n   lexp = .FALSE.\n@@ -91,8 +91,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. .not. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. .not. lexp) STOP 11\n+  if (lgot .neqv. lexp) STOP 12\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -104,8 +104,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 13\n+  if (lgot .neqv. lexp) STOP 14\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -117,8 +117,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 15\n+  if (lgot .neqv. lexp) STOP 16\n \n   lgot = .FALSE.\n   lexp = .TRUE.\n@@ -130,8 +130,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. .not. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. .not. lexp) STOP 17\n+  if (lgot .neqv. lexp) STOP 18\n \n   fgot = 1234.0\n   fexp = 1266.0\n@@ -145,8 +145,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp - 1.0) call abort \n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp - 1.0) STOP 19 \n+  if (fgot /= fexp) STOP 20\n \n   fgot = 1.0\n   fexp = 2.0**32\n@@ -160,8 +160,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp / 2.0) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp / 2.0) STOP 21\n+  if (fgot /= fexp) STOP 22\n \n   fgot = 32.0\n   fexp = 32.0\n@@ -175,8 +175,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= 2.0 - fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= 2.0 - fexp) STOP 23\n+  if (fgot /= fexp) STOP 24\n \n   fgot = 2.0**16\n   fexp = 2.0**16\n@@ -190,8 +190,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= 2.0 / fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= 2.0 / fexp) STOP 25\n+  if (fgot /= fexp) STOP 26\n \n   lgot = .TRUE.\n   lexp = .FALSE.\n@@ -203,8 +203,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. .not. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. .not. lexp) STOP 27\n+  if (lgot .neqv. lexp) STOP 28\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -216,8 +216,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 29\n+  if (lgot .neqv. lexp) STOP 30\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -229,8 +229,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 31\n+  if (lgot .neqv. lexp) STOP 32\n \n   lgot = .FALSE.\n   lexp = .TRUE.\n@@ -242,8 +242,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. .not. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. .not. lexp) STOP 33\n+  if (lgot .neqv. lexp) STOP 34\n \n   igot = 1\n   iexp = N\n@@ -257,8 +257,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp - 1) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp - 1) STOP 35\n+  if (igot /= iexp) STOP 36\n \n   igot = N\n   iexp = 1\n@@ -272,8 +272,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 37\n+  if (igot /= iexp) STOP 38\n \n   igot = -1\n   iexp = 0\n@@ -288,8 +288,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= ibset (iexp, N - 1)) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= ibset (iexp, N - 1)) STOP 39\n+  if (igot /= iexp) STOP 40\n \n   igot = 0\n   iexp = -1 \n@@ -304,8 +304,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= ieor (iexp, lshift (1, N - 1))) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= ieor (iexp, lshift (1, N - 1))) STOP 41\n+  if (igot /= iexp) STOP 42\n \n   igot = -1\n   iexp = 0 \n@@ -320,8 +320,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= ior (iexp, lshift (1, N - 1))) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= ior (iexp, lshift (1, N - 1))) STOP 43\n+  if (igot /= iexp) STOP 44\n \n   igot = 1\n   iexp = N\n@@ -335,8 +335,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp - 1) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp - 1) STOP 45\n+  if (igot /= iexp) STOP 46\n \n   igot = N\n   iexp = 1\n@@ -350,8 +350,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 47\n+  if (igot /= iexp) STOP 48\n \n   igot = -1\n   iexp = 0\n@@ -366,8 +366,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= ibset (iexp, N - 1)) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= ibset (iexp, N - 1)) STOP 49\n+  if (igot /= iexp) STOP 50\n \n   igot = 0\n   iexp = -1 \n@@ -382,8 +382,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= ieor (iexp, lshift (1, N - 1))) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= ieor (iexp, lshift (1, N - 1))) STOP 51\n+  if (igot /= iexp) STOP 52\n \n   igot = -1\n   iexp = 0 \n@@ -398,8 +398,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= ior (iexp, lshift (1, N - 1))) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= ior (iexp, lshift (1, N - 1))) STOP 53\n+  if (igot /= iexp) STOP 54\n \n   fgot = 1234.0\n   fexp = 1266.0\n@@ -413,8 +413,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp) STOP 55\n+  if (fgot /= fexp) STOP 56\n \n   fgot = 1.0\n   fexp = 2.0**32\n@@ -428,8 +428,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp) STOP 57\n+  if (fgot /= fexp) STOP 58\n \n   fgot = 32.0\n   fexp = fgot - N\n@@ -443,8 +443,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp) STOP 59\n+  if (fgot /= fexp) STOP 60\n \n   fgot = 2**32.0\n   fexp = 1.0\n@@ -458,8 +458,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp) STOP 61\n+  if (fgot /= fexp) STOP 62\n \n   lgot = .TRUE.\n   lexp = .FALSE.\n@@ -471,8 +471,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 63\n+  if (lgot .neqv. lexp) STOP 64\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -484,8 +484,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 65\n+  if (lgot .neqv. lexp) STOP 66\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -497,8 +497,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 67\n+  if (lgot .neqv. lexp) STOP 68\n \n   lgot = .FALSE.\n   lexp = .TRUE.\n@@ -510,8 +510,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 69\n+  if (lgot .neqv. lexp) STOP 70\n \n   fgot = 1234.0\n   fexp = 1266.0\n@@ -525,8 +525,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp) STOP 71\n+  if (fgot /= fexp) STOP 72\n \n   fgot = 1.0\n   fexp = 2.0**32\n@@ -540,8 +540,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp) STOP 73\n+  if (fgot /= fexp) STOP 74\n \n   fgot = 32.0\n   fexp = 32.0\n@@ -555,8 +555,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp) STOP 75\n+  if (fgot /= fexp) STOP 76\n \n   fgot = 2.0**16\n   fexp = 2.0**16\n@@ -570,8 +570,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (ftmp /= fexp) call abort\n-  if (fgot /= fexp) call abort\n+  if (ftmp /= fexp) STOP 77\n+  if (fgot /= fexp) STOP 78\n \n   lgot = .TRUE.\n   lexp = .FALSE.\n@@ -583,8 +583,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 79\n+  if (lgot .neqv. lexp) STOP 80\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -596,8 +596,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 81\n+  if (lgot .neqv. lexp) STOP 82\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -609,8 +609,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 83\n+  if (lgot .neqv. lexp) STOP 84\n \n   lgot = .FALSE.\n   lexp = .TRUE.\n@@ -622,8 +622,8 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (ltmp .neqv. lexp) call abort\n-  if (lgot .neqv. lexp) call abort\n+  if (ltmp .neqv. lexp) STOP 85\n+  if (lgot .neqv. lexp) STOP 86\n \n   igot = 1\n   iexp = N\n@@ -637,8 +637,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 87\n+  if (igot /= iexp) STOP 88\n \n   igot = N\n   iexp = 1\n@@ -652,8 +652,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 89\n+  if (igot /= iexp) STOP 90\n \n   igot = -1\n   iexp = 0\n@@ -668,8 +668,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 91\n+  if (igot /= iexp) STOP 92\n \n   igot = 0\n   iexp = -1 \n@@ -684,8 +684,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 93\n+  if (igot /= iexp) STOP 94\n \n   igot = -1\n   iexp = 0 \n@@ -700,8 +700,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 95\n+  if (igot /= iexp) STOP 96\n \n   igot = 1\n   iexp = N\n@@ -715,8 +715,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 97\n+  if (igot /= iexp) STOP 98\n \n   igot = N\n   iexp = 1\n@@ -730,8 +730,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 99\n+  if (igot /= iexp) STOP 100\n \n   igot = -1\n   iexp = 0\n@@ -746,8 +746,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 101\n+  if (igot /= iexp) STOP 102\n \n   igot = 0\n   iexp = -1 \n@@ -762,8 +762,8 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 103\n+  if (igot /= iexp) STOP 104\n \n   igot = -1\n   iexp = 0 \n@@ -778,7 +778,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (itmp /= iexp) call abort\n-  if (igot /= iexp) call abort\n+  if (itmp /= iexp) STOP 105\n+  if (igot /= iexp) STOP 106\n \n end program"}, {"sha": "cbbfe9f8a9d77cf09e17a8adfb1b298286e6cb62", "filename": "libgomp/testsuite/libgomp.oacc-fortran/atomic_rw-1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_rw-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_rw-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_rw-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,8 +22,8 @@ program main\n \n   !$acc end parallel\n \n-  if (v1 .ne. 99) call abort\n+  if (v1 .ne. 99) STOP 1\n \n-  if (v2 .ne. 32) call abort\n+  if (v2 .ne. 32) STOP 2\n \n end program main"}, {"sha": "c99d1f3bf277d37f7dadad8d6799adc973bb6176", "filename": "libgomp/testsuite/libgomp.oacc-fortran/atomic_update-1.f90", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_update-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_update-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_update-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -18,7 +18,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (fgot /= fexp) call abort\n+  if (fgot /= fexp) STOP 1\n \n   fgot = 1.0\n   fexp = 2.0**32\n@@ -31,7 +31,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (fgot /= fexp) call abort\n+  if (fgot /= fexp) STOP 2\n \n   fgot = 32.0\n   fexp = fgot - N\n@@ -44,7 +44,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (fgot /= fexp) call abort\n+  if (fgot /= fexp) STOP 3\n \n   fgot = 2**32.0\n   fexp = 1.0\n@@ -57,7 +57,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (fgot /= fexp) call abort\n+  if (fgot /= fexp) STOP 4\n \n   lgot = .TRUE.\n   lexp = .FALSE.\n@@ -68,7 +68,7 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (lgot .neqv. lexp) call abort\n+  if (lgot .neqv. lexp) STOP 5\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -79,7 +79,7 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (lgot .neqv. lexp) call abort\n+  if (lgot .neqv. lexp) STOP 6\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -90,7 +90,7 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (lgot .neqv. lexp) call abort\n+  if (lgot .neqv. lexp) STOP 7\n \n   lgot = .FALSE.\n   lexp = .TRUE.\n@@ -101,7 +101,7 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (lgot .neqv. lexp) call abort\n+  if (lgot .neqv. lexp) STOP 8\n \n   fgot = 1234.0\n   fexp = 1266.0\n@@ -114,7 +114,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (fgot /= fexp) call abort\n+  if (fgot /= fexp) STOP 9\n \n   fgot = 1.0\n   fexp = 2.0**32\n@@ -127,7 +127,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (fgot /= fexp) call abort\n+  if (fgot /= fexp) STOP 10\n \n   fgot = 32.0\n   fexp = 32.0\n@@ -140,7 +140,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (fgot /= fexp) call abort\n+  if (fgot /= fexp) STOP 11\n \n   fgot = 2.0**16\n   fexp = 2.0**16\n@@ -153,7 +153,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (fgot /= fexp) call abort\n+  if (fgot /= fexp) STOP 12\n \n   lgot = .TRUE.\n   lexp = .FALSE.\n@@ -164,7 +164,7 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (lgot .neqv. lexp) call abort\n+  if (lgot .neqv. lexp) STOP 13\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -175,7 +175,7 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (lgot .neqv. lexp) call abort\n+  if (lgot .neqv. lexp) STOP 14\n \n   lgot = .FALSE.\n   lexp = .FALSE.\n@@ -186,7 +186,7 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (lgot .neqv. lexp) call abort\n+  if (lgot .neqv. lexp) STOP 15\n \n   lgot = .FALSE.\n   lexp = .TRUE.\n@@ -197,7 +197,7 @@ program main\n   !$acc end atomic\n   !$acc end parallel\n \n-  if (lgot .neqv. lexp) call abort\n+  if (lgot .neqv. lexp) STOP 16\n \n   igot = 1\n   iexp = N\n@@ -210,7 +210,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 17\n \n   igot = N\n   iexp = 1\n@@ -223,7 +223,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 18\n \n   igot = -1\n   iexp = 0\n@@ -237,7 +237,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 19\n \n   igot = 0\n   iexp = -1 \n@@ -251,7 +251,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 20\n \n   igot = -1\n   iexp = 0 \n@@ -265,7 +265,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 21\n \n   igot = 1\n   iexp = N\n@@ -278,7 +278,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 22\n \n   igot = N\n   iexp = 1\n@@ -291,7 +291,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 23\n \n   igot = -1\n   iexp = 0\n@@ -305,7 +305,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 24\n \n   igot = 0\n   iexp = -1 \n@@ -319,7 +319,7 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 25\n \n   igot = -1\n   iexp = 0 \n@@ -333,6 +333,6 @@ program main\n     end do\n   !$acc end parallel loop\n \n-  if (igot /= iexp) call abort\n+  if (igot /= iexp) STOP 26\n \n end program"}, {"sha": "1d05e4a819fbe9f3c61e3caa5d23ca1bd96d6d53", "filename": "libgomp/testsuite/libgomp.oacc-fortran/clauses-1.f90", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fclauses-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fclauses-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fclauses-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -25,11 +25,11 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 3.0) call abort\n+    if (b(i) .ne. 3.0) STOP 1\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 2\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 3\n \n   a(:) = 5.0\n   b(:) = 1.0\n@@ -41,11 +41,11 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 5.0) call abort\n+    if (b(i) .ne. 5.0) STOP 4\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 5\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 6\n \n   a(:) = 6.0\n   b(:) = 0.0\n@@ -61,13 +61,13 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 6.0) call abort\n+    if (b(i) .ne. 6.0) STOP 7\n   end do\n \n   call acc_copyout (a, sizeof (a))\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 8\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 9\n \n   a(:) = 6.0\n   b(:) = 0.0\n@@ -79,11 +79,11 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-     if (b(i) .ne. 6.0) call abort\n+     if (b(i) .ne. 6.0) STOP 10\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 11\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 12\n \n   a(:) = 5.0\n   b(:) = 2.0\n@@ -97,14 +97,14 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (a(i) .ne. 5.0) call abort\n-    if (b(i) .ne. 2.0) call abort\n+    if (a(i) .ne. 5.0) STOP 13\n+    if (b(i) .ne. 2.0) STOP 14\n   end do\n \n   call acc_copyout (b, sizeof (b))\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 15\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 16\n \n   a(:) = 3.0;\n   b(:) = 4.0;\n@@ -117,12 +117,12 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (a(i) .ne. 4.0) call abort\n-    if (b(i) .ne. 6.0) call abort\n+    if (a(i) .ne. 4.0) STOP 17\n+    if (b(i) .ne. 6.0) STOP 18\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 19\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 20\n \n   a(:) = 4.0\n   b(:) = 7.0\n@@ -135,12 +135,12 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (a(i) .ne. 5.0) call abort\n-    if (b(i) .ne. 9.0) call abort\n+    if (a(i) .ne. 5.0) STOP 21\n+    if (b(i) .ne. 9.0) STOP 22\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 23\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 24\n \n   a(:) = 3.0\n   b(:) = 7.0\n@@ -156,15 +156,15 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (a(i) .ne. 3.0) call abort\n-    if (b(i) .ne. 7.0) call abort\n+    if (a(i) .ne. 3.0) STOP 25\n+    if (b(i) .ne. 7.0) STOP 26\n   end do\n \n   call acc_copyout (a, sizeof (a))\n   call acc_copyout (b, sizeof (b))\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 27\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 28\n \n   a(:) = 3.0\n   b(:) = 7.0\n@@ -177,13 +177,13 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (a(i) .ne. 3.0) call abort\n-    if (b(i) .ne. 3.0) call abort\n+    if (a(i) .ne. 3.0) STOP 29\n+    if (b(i) .ne. 3.0) STOP 30\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n-  if (acc_is_present (c) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 31\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 32\n+  if (acc_is_present (c) .eqv. .TRUE.) STOP 33\n \n   a(:) = 4.0\n   b(:) = 8.0\n@@ -196,13 +196,13 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (a(i) .ne. 4.0) call abort\n-    if (b(i) .ne. 4.0) call abort\n+    if (a(i) .ne. 4.0) STOP 34\n+    if (b(i) .ne. 4.0) STOP 35\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n-  if (acc_is_present (c) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 36\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 37\n+  if (acc_is_present (c) .eqv. .TRUE.) STOP 38\n \n   a(:) = 4.0\n \n@@ -222,13 +222,13 @@ program main\n   call acc_copyout (c, sizeof (c))\n   \n   do i = 1, N\n-    if (a(i) .ne. 4.0) call abort\n-    if (b(i) .ne. 4.0) call abort\n+    if (a(i) .ne. 4.0) STOP 39\n+    if (b(i) .ne. 4.0) STOP 40\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n-  if (acc_is_present (c) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 41\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 42\n+  if (acc_is_present (c) .eqv. .TRUE.) STOP 43\n \n   a(:) = 6.0\n   b(:) = 0.0\n@@ -244,13 +244,13 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 6.0) call abort\n+    if (b(i) .ne. 6.0) STOP 44\n   end do\n   \n   call acc_copyout (a, sizeof (a))\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 45\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 46\n \n   a(:) = 6.0\n   b(:) = 0.0\n@@ -262,11 +262,11 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 6.0) call abort\n+    if (b(i) .ne. 6.0) STOP 47\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 48\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 49\n \n   a(:) = 5.0\n   b(:) = 7.0\n@@ -279,12 +279,12 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (a(i) .ne. 5.0) call abort\n-    if (b(i) .ne. 5.0) call abort\n+    if (a(i) .ne. 5.0) STOP 50\n+    if (b(i) .ne. 5.0) STOP 51\n   end do\n \n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n-  if (acc_is_present (c) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 52\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 53\n+  if (acc_is_present (c) .eqv. .TRUE.) STOP 54\n \n end program main"}, {"sha": "918c5d0d5b1c5b0401e3d11d02748d20fceed2a9", "filename": "libgomp/testsuite/libgomp.oacc-fortran/collapse-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -23,5 +23,5 @@ program collapse1\n       end do\n     end do\n   !$acc end parallel\n-  if (l) call abort\n+  if (l) STOP 1\n end program collapse1"}, {"sha": "4f45537c2317dcf6bc7d99d95655879e76fe0365", "filename": "libgomp/testsuite/libgomp.oacc-fortran/collapse-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,5 +21,5 @@ program collapse2\n       end do\n     end do firstdo\n   !$acc end parallel\n-  if (l) call abort\n+  if (l) STOP 1\n end program collapse2"}, {"sha": "aa40790c21f2ad422cac1ab7764df5a159d4fd87", "filename": "libgomp/testsuite/libgomp.oacc-fortran/collapse-3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,7 +12,7 @@ program collapse3\n       enddo dokk\n 115   continue\n   !$acc end parallel\n-  if (any(a(1:3,1:3,1:3).ne.1)) call abort\n+  if (any(a(1:3,1:3,1:3).ne.1)) STOP 1\n \n   !$acc parallel\n   !$acc loop collapse(3)\n@@ -24,5 +24,5 @@ program collapse3\n       enddo doll\n 120 end do dol\n   !$acc end parallel\n-  if (any(a(1:3,1:3,1:3).ne.2)) call abort\n+  if (any(a(1:3,1:3,1:3).ne.2)) STOP 2\n end program collapse3"}, {"sha": "0cb990b5c057b67aa66c320fbfc87f7193ab552c", "filename": "libgomp/testsuite/libgomp.oacc-fortran/collapse-4.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,11 +29,11 @@ program collapse4\n       end do\n     end do\n   end do\n-  if (l .neqv. r) call abort\n+  if (l .neqv. r) STOP 1\n   do i = 2, 6\n     do j = -2, 4\n       do k = 13, 18\n-         if (a(i, j, k) .ne. b(i, j, k)) call abort\n+         if (a(i, j, k) .ne. b(i, j, k)) STOP 2\n       end do\n     end do\n   end do"}, {"sha": "54012c7678798a825e7b0d89d43441459b1b6a5d", "filename": "libgomp/testsuite/libgomp.oacc-fortran/collapse-5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -37,11 +37,11 @@ program collapse5\n       end do\n     end do\n   end do\n-  if (l .neqv. r) call abort\n+  if (l .neqv. r) STOP 1\n   do i = v1, v2\n     do j = v3, v4\n       do k = v5, v6\n-         if (a(i, j, k) .ne. b(i, j, k)) call abort\n+         if (a(i, j, k) .ne. b(i, j, k)) STOP 2\n       end do\n     end do\n   end do"}, {"sha": "f961f7d246d0a00d1b9749aba9a4a419f1683537", "filename": "libgomp/testsuite/libgomp.oacc-fortran/collapse-6.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -39,11 +39,11 @@ program collapse6\n       end do\n     end do\n   end do\n-  if (l .neqv. r) call abort\n+  if (l .neqv. r) STOP 1\n   do i = v1, v2, v7\n     do j = v3, v4, v8\n        do k = v5, v6, v9\n-         if (a(i, j, k) .ne. b(i, j, k)) call abort\n+         if (a(i, j, k) .ne. b(i, j, k)) STOP 2\n        end do\n     end do\n   end do"}, {"sha": "9c13c79651b430924093ce8d24c9ba1c2850fd5a", "filename": "libgomp/testsuite/libgomp.oacc-fortran/collapse-7.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,11 +29,11 @@ program collapse7\n       end do\n     end do\n   end do\n-  if (l .neqv. r) call abort\n+  if (l .neqv. r) STOP 1\n   do i = 1, 7\n     do j = -3, 5\n       do k = 12, 19\n-         if (a(i, j, k) .ne. b(i, j, k)) call abort\n+         if (a(i, j, k) .ne. b(i, j, k)) STOP 2\n       end do\n     end do\n   end do"}, {"sha": "48d8447bf20067101013fb8f561cdc57671f235d", "filename": "libgomp/testsuite/libgomp.oacc-fortran/collapse-8.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcollapse-8.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -36,11 +36,11 @@ program collapse8\n       end do\n     end do\n   end do\n-  if (l .neqv. r) call abort\n+  if (l .neqv. r) STOP 1\n   do i = v1, v2\n     do j = v3, v4\n       do k = v5, v6\n-         if (a(i, j, k) .ne. b(i, j, k)) call abort\n+         if (a(i, j, k) .ne. b(i, j, k)) STOP 2\n       end do\n     end do\n   end do"}, {"sha": "b980bc98a7f731ee4504e8530a6c11cf7fad52a7", "filename": "libgomp/testsuite/libgomp.oacc-fortran/combined-directives-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcombined-directives-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcombined-directives-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcombined-directives-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -19,9 +19,9 @@ program main\n   end do\n \n   do i = 1, n\n-    if (a(i) .ne. 3.0) call abort\n+    if (a(i) .ne. 3.0) STOP 1\n \n-    if (b(i) .ne. 2.0) call abort\n+    if (b(i) .ne. 2.0) STOP 2\n   end do\n \n   !$acc kernels loop copy (a(1:n)) copy (b(1:n))\n@@ -31,9 +31,9 @@ program main\n   end do\n \n   do i = 1, n\n-    if (a(i) .ne. 6.0) call abort\n+    if (a(i) .ne. 6.0) STOP 3\n \n-    if (b(i) .ne. 3.0) call abort\n+    if (b(i) .ne. 3.0) STOP 4\n   end do\n \n end program main"}, {"sha": "8c40d2217845fcd897626a571a1858fef09bde50", "filename": "libgomp/testsuite/libgomp.oacc-fortran/combined-reduction.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcombined-reduction.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcombined-reduction.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fcombined-reduction.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -15,5 +15,5 @@ program test\n   end do\n   !$acc end parallel loop\n \n-  if (var .ne. n) call abort\n+  if (var .ne. n) STOP 1\n end program test"}, {"sha": "f4e905398180583af9ca53e49c7b1e832143a918", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,8 +21,8 @@ program test\n   !$acc exit data copyout (a(1:N), b(1:N))\n \n   do i = 1, n\n-    if (a(i) .ne. 3.0) call abort\n-    if (b(i) .ne. 3.0) call abort\n+    if (a(i) .ne. 3.0) STOP 1\n+    if (b(i) .ne. 3.0) STOP 2\n   end do\n \n   a(:) = 5.0\n@@ -39,7 +39,7 @@ program test\n   !$acc exit data copyout (a(1:N), b(1:N))\n \n   do i = 1, n\n-    if (a(i) .ne. 5.0) call abort\n-    if (b(i) .ne. 5.0) call abort\n+    if (a(i) .ne. 5.0) STOP 3\n+    if (b(i) .ne. 5.0) STOP 4\n   end do\n end program test"}, {"sha": "22525b8f59ed57285243a25f47cd27e425babdc8", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -24,8 +24,8 @@ program test\n \n   do i = 1, n\n     do j = 1, n\n-      if (a(j,i) .ne. 3.0) call abort\n-      if (b(j,i) .ne. 3.0) call abort\n+      if (a(j,i) .ne. 3.0) STOP 1\n+      if (b(j,i) .ne. 3.0) STOP 2\n     end do\n   end do\n end program test"}, {"sha": "19eb4bd6a4501f81145b890e2ad6a916d6c7e00a", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-3.f90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -27,8 +27,8 @@ program asyncwait\n   !$acc exit data copyout (a(1:N)) copyout (b(1:N))\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 3.0) call abort\n+     if (a(i) .ne. 3.0) STOP 1\n+     if (b(i) .ne. 3.0) STOP 2\n   end do\n \n   a(:) = 2.0\n@@ -46,8 +46,8 @@ program asyncwait\n   !$acc exit data copyout (a(1:N)) copyout (b(1:N))\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 2.0) call abort\n+     if (a(i) .ne. 2.0) STOP 3\n+     if (b(i) .ne. 2.0) STOP 4\n   end do\n \n   a(:) = 3.0\n@@ -79,10 +79,10 @@ program asyncwait\n   !$acc exit data copyout (a(1:N)) copyout (b(1:N)) copyout (c(1:N)) copyout (d(1:N))\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 9.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n+     if (a(i) .ne. 3.0) STOP 5\n+     if (b(i) .ne. 9.0) STOP 6\n+     if (c(i) .ne. 4.0) STOP 7\n+     if (d(i) .ne. 1.0) STOP 8\n   end do\n \n   a(:) = 2.0\n@@ -122,10 +122,10 @@ program asyncwait\n   !$acc exit data delete (N)\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 4.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n-     if (e(i) .ne. 11.0) call abort\n+     if (a(i) .ne. 2.0) STOP 9\n+     if (b(i) .ne. 4.0) STOP 10\n+     if (c(i) .ne. 4.0) STOP 11\n+     if (d(i) .ne. 1.0) STOP 12\n+     if (e(i) .ne. 11.0) STOP 13\n   end do\n end program asyncwait"}, {"sha": "6c6a24eaf80fd9a6b59a6dd5ac04ca18d2e27d56", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-4-2.f90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -31,8 +31,8 @@ program asyncwait\n   !$acc wait\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 3.0) call abort\n+     if (a(i) .ne. 3.0) STOP 1\n+     if (b(i) .ne. 3.0) STOP 2\n   end do\n \n   a(:) = 2.0\n@@ -51,8 +51,8 @@ program asyncwait\n   !$acc wait (1)\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 2.0) call abort\n+     if (a(i) .ne. 2.0) STOP 3\n+     if (b(i) .ne. 2.0) STOP 4\n   end do\n \n   a(:) = 3.0\n@@ -86,10 +86,10 @@ program asyncwait\n   !$acc wait (1)\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 9.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n+     if (a(i) .ne. 3.0) STOP 5\n+     if (b(i) .ne. 9.0) STOP 6\n+     if (c(i) .ne. 4.0) STOP 7\n+     if (d(i) .ne. 1.0) STOP 8\n   end do\n \n   a(:) = 2.0\n@@ -130,10 +130,10 @@ program asyncwait\n   !$acc exit data delete (N, a(1:N), b(1:N), c(1:N), d(1:N), e(1:N))\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 4.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n-     if (e(i) .ne. 11.0) call abort\n+     if (a(i) .ne. 2.0) STOP 9\n+     if (b(i) .ne. 4.0) STOP 10\n+     if (c(i) .ne. 4.0) STOP 11\n+     if (d(i) .ne. 1.0) STOP 12\n+     if (e(i) .ne. 11.0) STOP 13\n   end do\n end program asyncwait"}, {"sha": "a444395d7c160924ca64ef2a83b3f6c11822ea83", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-4.f90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -28,8 +28,8 @@ program asyncwait\n   !$acc wait\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 3.0) call abort\n+     if (a(i) .ne. 3.0) STOP 1\n+     if (b(i) .ne. 3.0) STOP 2\n   end do\n \n   a(:) = 2.0\n@@ -48,8 +48,8 @@ program asyncwait\n   !$acc wait (1)\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 2.0) call abort\n+     if (a(i) .ne. 2.0) STOP 3\n+     if (b(i) .ne. 2.0) STOP 4\n   end do\n \n   a(:) = 3.0\n@@ -83,10 +83,10 @@ program asyncwait\n   !$acc wait (1)\n \n   do i = 1, N\n-     if (a(i) .ne. 3.0) call abort\n-     if (b(i) .ne. 9.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n+     if (a(i) .ne. 3.0) STOP 5\n+     if (b(i) .ne. 9.0) STOP 6\n+     if (c(i) .ne. 4.0) STOP 7\n+     if (d(i) .ne. 1.0) STOP 8\n   end do\n \n   a(:) = 2.0\n@@ -127,10 +127,10 @@ program asyncwait\n   !$acc exit data delete (N, a(1:N), b(1:N), c(1:N), d(1:N), e(1:N))\n \n   do i = 1, N\n-     if (a(i) .ne. 2.0) call abort\n-     if (b(i) .ne. 4.0) call abort\n-     if (c(i) .ne. 4.0) call abort\n-     if (d(i) .ne. 1.0) call abort\n-     if (e(i) .ne. 11.0) call abort\n+     if (a(i) .ne. 2.0) STOP 9\n+     if (b(i) .ne. 4.0) STOP 10\n+     if (c(i) .ne. 4.0) STOP 11\n+     if (d(i) .ne. 1.0) STOP 12\n+     if (e(i) .ne. 11.0) STOP 13\n   end do\n end program asyncwait"}, {"sha": "084f336faa931f7269a74a6da840ff11f9b7f069", "filename": "libgomp/testsuite/libgomp.oacc-fortran/declare-1.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -128,7 +128,7 @@ subroutine test (a, e)\n   integer, parameter :: N = 8\n   integer :: a(N)\n \n-  if (acc_is_present (a) .neqv. e) call abort\n+  if (acc_is_present (a) .neqv. e) STOP 1\n \n end subroutine\n \n@@ -159,7 +159,7 @@ subroutine subr0 (a, b, c, d)\n   call test (c, .false.)\n \n   do i = 1, N\n-    if (c(i) .ne. 8) call abort\n+    if (c(i) .ne. 8) STOP 2\n   end do\n \n   call subr3 (a, c)\n@@ -169,8 +169,8 @@ subroutine subr0 (a, b, c, d)\n   call test (c, .false.)\n \n   do i = 1, N\n-    if (a(i) .ne. 2) call abort\n-    if (c(i) .ne. 8) call abort\n+    if (a(i) .ne. 2) STOP 3\n+    if (c(i) .ne. 8) STOP 4\n   end do\n \n   call subr4 (a, b)\n@@ -180,7 +180,7 @@ subroutine subr0 (a, b, c, d)\n   call test (c, .false.)\n \n   do i = 1, N\n-    if (b(i) .ne. 8) call abort\n+    if (b(i) .ne. 8) STOP 5\n   end do\n \n   call subr5 (a, b, c, d)\n@@ -191,8 +191,8 @@ subroutine subr0 (a, b, c, d)\n   call test (d, .false.)\n \n   do i = 1, N\n-    if (c(i) .ne. 8) call abort\n-    if (d(i) .ne. 13) call abort\n+    if (c(i) .ne. 8) STOP 6\n+    if (d(i) .ne. 13) STOP 7\n   end do\n \n end subroutine\n@@ -213,7 +213,7 @@ program main\n   c(:) = 4\n   d(:) = 5\n \n-  if (acc_is_present (z) .neqv. .true.) call abort\n+  if (acc_is_present (z) .neqv. .true.) STOP 8\n \n   call subr0 (a, b, c, d)\n \n@@ -223,10 +223,10 @@ program main\n   call test (d, .false.)\n \n   do i = 1, N\n-    if (a(i) .ne. 8) call abort\n-    if (b(i) .ne. 8) call abort\n-    if (c(i) .ne. 8) call abort\n-    if (d(i) .ne. 13) call abort\n+    if (a(i) .ne. 8) STOP 9\n+    if (b(i) .ne. 8) STOP 10\n+    if (c(i) .ne. 8) STOP 11\n+    if (d(i) .ne. 13) STOP 12\n   end do\n \n end program"}, {"sha": "de9c52ef0f6486c76b8f97025f327a526962dba8", "filename": "libgomp/testsuite/libgomp.oacc-fortran/declare-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -11,6 +11,6 @@ program test\n   use openacc\n   implicit none\n \n-  if (acc_is_present (a) .neqv. .true.) call abort\n+  if (acc_is_present (a) .neqv. .true.) STOP 1\n \n end program test"}, {"sha": "e1cb9435437f45f61bf1181f51b0367ca7d86c6a", "filename": "libgomp/testsuite/libgomp.oacc-fortran/declare-3.f90", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -16,8 +16,8 @@ program test\n   real c\n   !$acc declare link (c)\n \n-  if (acc_is_present (b) .neqv. .false.) call abort\n-  if (acc_is_present (c) .neqv. .false.) call abort\n+  if (acc_is_present (b) .neqv. .false.) STOP 1\n+  if (acc_is_present (c) .neqv. .false.) STOP 2\n \n   a = 0.0\n   b = 1.0\n@@ -27,9 +27,9 @@ program test\n     a = b\n   !$acc end parallel\n \n-  if (a .ne. 5.0) call abort\n+  if (a .ne. 5.0) STOP 3\n \n-  if (acc_is_present (b) .neqv. .false.) call abort\n+  if (acc_is_present (b) .neqv. .false.) STOP 4\n \n   a = 0.0\n \n@@ -38,9 +38,9 @@ program test\n     a = b\n   !$acc end parallel\n \n-  if (a .ne. 4.0) call abort\n+  if (a .ne. 4.0) STOP 5\n \n-  if (acc_is_present (b) .neqv. .false.) call abort\n+  if (acc_is_present (b) .neqv. .false.) STOP 6\n \n   a = 0.0\n \n@@ -49,10 +49,10 @@ program test\n     a = b\n   !$acc end parallel\n \n-  if (a .ne. 4.0) call abort\n-  if (b .ne. 4.0) call abort\n+  if (a .ne. 4.0) STOP 7\n+  if (b .ne. 4.0) STOP 8\n \n-  if (acc_is_present (b) .neqv. .false.) call abort\n+  if (acc_is_present (b) .neqv. .false.) STOP 9\n \n   a = 0.0\n \n@@ -62,8 +62,8 @@ program test\n     a = c\n   !$acc end parallel\n \n-  if (a .ne. 4.0) call abort\n+  if (a .ne. 4.0) STOP 10\n \n-  if (acc_is_present (b) .neqv. .false.) call abort\n+  if (acc_is_present (b) .neqv. .false.) STOP 11\n \n end program test"}, {"sha": "7cdd88352f3782a4188a821017a7751a85f355c5", "filename": "libgomp/testsuite/libgomp.oacc-fortran/declare-4.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,7 +12,7 @@ program test\n   implicit none\n   real a\n \n-  if (acc_is_present (b) .neqv. .true.) call abort\n+  if (acc_is_present (b) .neqv. .true.) STOP 1\n \n   a = 2.0\n \n@@ -22,8 +22,8 @@ program test\n     a = a + b\n    !$acc end parallel\n \n-  if (acc_is_present (b) .neqv. .true.) call abort\n+  if (acc_is_present (b) .neqv. .true.) STOP 2\n \n-  if (a .ne. 3.0) call abort\n+  if (a .ne. 3.0) STOP 3\n \n end program test"}, {"sha": "3ab91147e0728022ab69f32819f9f520e1c161e7", "filename": "libgomp/testsuite/libgomp.oacc-fortran/declare-5.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdeclare-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -12,7 +12,7 @@ program test\n   implicit none\n   real a\n \n-  if (acc_is_present (b) .neqv. .true.) call abort\n+  if (acc_is_present (b) .neqv. .true.) STOP 1\n \n   a = 2.0\n \n@@ -22,8 +22,8 @@ program test\n     a = a + b\n    !$acc end parallel\n \n-  if (acc_is_present (b) .neqv. .true.) call abort\n+  if (acc_is_present (b) .neqv. .true.) STOP 2\n \n-  if (a .ne. 3.0) call abort\n+  if (a .ne. 3.0) STOP 3\n \n end program test"}, {"sha": "6177de2a50a0d6bf81590f38305ac6d3ddb2d75a", "filename": "libgomp/testsuite/libgomp.oacc-fortran/default-1.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdefault-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdefault-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdefault-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -15,31 +15,31 @@ program main\n     a = a + b\n   !$acc end parallel\n \n-  if (a .ne. 3.0) call abort\n+  if (a .ne. 3.0) STOP 1\n \n   !$acc kernels copy (a) create (b) default (none)\n     b = a\n     a = 1.0\n     a = a + b\n   !$acc end kernels\n \n-  if (a .ne. 4.0) call abort\n+  if (a .ne. 4.0) STOP 2\n \n   !$acc parallel default (none) copy (a) create (b)\n     b = a\n     a = 1.0\n     a = a + b\n   !$acc end parallel\n \n-  if (a .ne. 5.0) call abort\n+  if (a .ne. 5.0) STOP 3\n \n   !$acc parallel default (none) copy (a)\n     c = a\n     a = 1.0\n     a = a + c\n   !$acc end parallel\n \n-  if (a .ne. 6.0) call abort\n+  if (a .ne. 6.0) STOP 4\n \n   !$acc data copy (a)\n   !$acc parallel default (none)\n@@ -49,7 +49,7 @@ program main\n   !$acc end parallel\n   !$acc end data\n \n-  if (a .ne. 7.0) call abort\n+  if (a .ne. 7.0) STOP 5\n \n   ! The default (present) clause doesn't affect scalar variables; these will\n   ! still get an implicit copy clause added.\n@@ -59,6 +59,6 @@ program main\n     a = a + c\n   !$acc end kernels\n \n-  if (a .ne. 8.0) call abort\n+  if (a .ne. 8.0) STOP 6\n \n end program main"}, {"sha": "054d5dd459af86811a319049bb3020d1969ee598", "filename": "libgomp/testsuite/libgomp.oacc-fortran/firstprivate-1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffirstprivate-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffirstprivate-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffirstprivate-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -23,7 +23,7 @@ program firstprivate\n   !$acc end parallel\n \n   do i = 1, n\n-     if (b(i) .ne. i + a) call abort ()\n+     if (b(i) .ne. i + a) STOP 1\n   end do\n \n   !$acc data copy (a)\n@@ -37,6 +37,6 @@ program firstprivate\n   !$acc end parallel\n   !$acc end data\n \n-  if (c .ne. 10) call abort ()\n-  if (d .ne. 5) call abort ()\n+  if (c .ne. 10) STOP 2\n+  if (d .ne. 5) STOP 3\n end program firstprivate"}, {"sha": "848d8e944cadc30f05cbe98b239e27f3762f6575", "filename": "libgomp/testsuite/libgomp.oacc-fortran/gang-static-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fgang-static-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fgang-static-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fgang-static-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -74,6 +74,6 @@ subroutine test (a, b, sarg, n)\n   integer i\n \n   do i = 1, n\n-     if (a(i) .ne. b(i) + sarg) call abort ()\n+     if (a(i) .ne. b(i) + sarg) STOP 1\n   end do\n end subroutine test"}, {"sha": "45d3ee8afa655fbe343917420b8fa8724a90310a", "filename": "libgomp/testsuite/libgomp.oacc-fortran/host_data-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fhost_data-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fhost_data-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fhost_data-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -19,11 +19,11 @@ program test\n \n   ! Test how the pointers compare inside a host_data construct\n #if ACC_MEM_SHARED\n-  if (.not. associated(ip, iph)) call abort\n-  if (.not. associated(parr, parrh)) call abort\n+  if (.not. associated(ip, iph)) STOP 1\n+  if (.not. associated(parr, parrh)) STOP 2\n #else\n-  if (associated(ip, iph)) call abort\n-  if (associated(parr, parrh)) call abort\n+  if (associated(ip, iph)) STOP 3\n+  if (associated(parr, parrh)) STOP 4\n #endif\n \n   !$acc end host_data"}, {"sha": "f3bf1ee5af6033a82d0e607d5538abddc2d940c2", "filename": "libgomp/testsuite/libgomp.oacc-fortran/if-1.f90", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fif-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fif-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fif-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -36,7 +36,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 1\n   end do\n \n   a(:) = 16.0\n@@ -52,7 +52,7 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 17.0) call abort\n+    if (b(i) .ne. 17.0) STOP 2\n   end do\n \n   a(:) = 8.0\n@@ -74,7 +74,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 3\n   end do\n \n   a(:) = 22.0\n@@ -90,7 +90,7 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 23.0) call abort\n+    if (b(i) .ne. 23.0) STOP 4\n   end do\n \n   a(:) = 16.0\n@@ -112,7 +112,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 5\n   end do\n \n   a(:) = 76.0\n@@ -128,7 +128,7 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 77.0) call abort\n+    if (b(i) .ne. 77.0) STOP 6\n   end do\n \n   a(:) = 22.0\n@@ -152,7 +152,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 7\n   end do\n \n   a(:) = 18.0\n@@ -170,7 +170,7 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 19.0) call abort\n+    if (b(i) .ne. 19.0) STOP 8\n   end do\n \n   a(:) = 49.0\n@@ -194,7 +194,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 9\n   end do\n \n   a(:) = 38.0\n@@ -212,7 +212,7 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 39.0) call abort\n+    if (b(i) .ne. 39.0) STOP 10\n   end do\n \n   a(:) = 91.0\n@@ -228,7 +228,7 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 92.0) call abort\n+    if (b(i) .ne. 92.0) STOP 11\n   end do\n \n   a(:) = 43.0\n@@ -250,7 +250,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 12\n   end do\n \n   a(:) = 87.0\n@@ -266,7 +266,7 @@ program main\n   !$acc end parallel\n \n   do i = 1, N\n-    if (b(i) .ne. 88.0) call abort\n+    if (b(i) .ne. 88.0) STOP 13\n   end do\n \n   a(:) = 3.0\n@@ -290,8 +290,8 @@ program main\n   !$acc update host (a(1:N), b(1:N)) if (1 == 1)\n \n   do i = 1, N\n-    if (a(i) .ne. exp) call abort\n-    if (b(i) .ne. exp2) call abort\n+    if (a(i) .ne. exp) STOP 14\n+    if (b(i) .ne. exp2) STOP 15\n   end do\n \n   a(:) = 6.0\n@@ -305,8 +305,8 @@ program main\n   !$acc update host (a(1:N), b(1:N)) if (1 == 1)\n \n   do i = 1, N\n-    if (a(i) .ne. exp) call abort\n-    if (b(i) .ne. exp2) call abort\n+    if (a(i) .ne. exp) STOP 16\n+    if (b(i) .ne. exp2) STOP 17\n   end do\n \n   a(:) = 26.0\n@@ -320,8 +320,8 @@ program main\n   !$acc update host (a(1:N), b(1:N)) if (0 == 1)\n \n   do i = 1, N\n-    if (a(i) .ne. 0.0) call abort\n-    if (b(i) .ne. 0.0) call abort\n+    if (a(i) .ne. 0.0) STOP 18\n+    if (b(i) .ne. 0.0) STOP 19\n   end do\n \n #if !ACC_MEM_SHARED\n@@ -342,7 +342,7 @@ program main\n   !$acc end data\n \n   do i = 1, N\n-    if (b(i) .ne. 4.0) call abort\n+    if (b(i) .ne. 4.0) STOP 20\n   end do\n \n   a(:) = 8.0\n@@ -351,8 +351,8 @@ program main\n   !$acc data copyin (a(1:N)) copyout (b(1:N)) if (0 == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 21\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 22\n #endif\n \n   !$acc end data\n@@ -363,12 +363,12 @@ program main\n   !$acc data copyin (a(1:N)) if (1 == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (a) .eqv. .FALSE.) call abort\n+    if (acc_is_present (a) .eqv. .FALSE.) STOP 23\n #endif\n \n     !$acc data copyout (b(1:N)) if (0 == 1)\n #if !ACC_MEM_SHARED\n-      if (acc_is_present (b) .eqv. .TRUE.) call abort\n+      if (acc_is_present (b) .eqv. .TRUE.) STOP 24\n #endif\n         !$acc data copyout (b(1:N)) if (1 == 1)\n \n@@ -381,73 +381,73 @@ program main\n     !$acc end data\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .TRUE.) call abort\n+    if (acc_is_present (b) .eqv. .TRUE.) STOP 25\n #endif\n     !$acc end data\n   !$acc end data\n \n   do i = 1, N\n-   if (b(1) .ne. 18.0) call abort\n+   if (b(1) .ne. 18.0) STOP 26\n   end do\n \n   !$acc enter data copyin (b(1:N)) if (0 == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 27\n #endif\n \n   !$acc exit data delete (b(1:N)) if (0 == 1)\n \n   !$acc enter data copyin (b(1:N)) if (1 == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .FALSE.) call abort\n+    if (acc_is_present (b) .eqv. .FALSE.) STOP 28\n #endif\n \n   !$acc exit data delete (b(1:N)) if (1 == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 29\n #endif\n \n   !$acc enter data copyin (b(1:N)) if (zero == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .TRUE.) call abort\n+    if (acc_is_present (b) .eqv. .TRUE.) STOP 30\n #endif\n \n   !$acc exit data delete (b(1:N)) if (zero == 1)\n \n   !$acc enter data copyin (b(1:N)) if (one == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .FALSE.) call abort\n+    if (acc_is_present (b) .eqv. .FALSE.) STOP 31\n #endif\n \n   !$acc exit data delete (b(1:N)) if (one == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 32\n #endif\n \n   !$acc enter data copyin (b(1:N)) if (one == 0)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .TRUE.) call abort\n+    if (acc_is_present (b) .eqv. .TRUE.) STOP 33\n #endif\n \n   !$acc exit data delete (b(1:N)) if (one == 0)\n \n   !$acc enter data copyin (b(1:N)) if (one == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .FALSE.) call abort\n+    if (acc_is_present (b) .eqv. .FALSE.) STOP 34\n #endif\n \n   !$acc exit data delete (b(1:N)) if (one == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 35\n #endif\n \n   a(:) = 4.0\n@@ -469,7 +469,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 36\n   end do\n \n   a(:) = 16.0\n@@ -485,7 +485,7 @@ program main\n   !$acc end kernels\n \n   do i = 1, N\n-    if (b(i) .ne. 17.0) call abort\n+    if (b(i) .ne. 17.0) STOP 37\n   end do\n \n   a(:) = 8.0\n@@ -507,7 +507,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 38\n   end do\n \n   a(:) = 22.0\n@@ -523,7 +523,7 @@ program main\n   !$acc end kernels\n \n   do i = 1, N\n-    if (b(i) .ne. 23.0) call abort\n+    if (b(i) .ne. 23.0) STOP 39\n   end do\n \n   a(:) = 16.0\n@@ -545,7 +545,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 40\n   end do\n \n   a(:) = 76.0\n@@ -561,7 +561,7 @@ program main\n   !$acc end kernels\n \n   do i = 1, N\n-    if (b(i) .ne. 77.0) call abort\n+    if (b(i) .ne. 77.0) STOP 41\n   end do\n \n   a(:) = 22.0\n@@ -585,7 +585,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 42\n   end do\n \n   a(:) = 18.0\n@@ -603,7 +603,7 @@ program main\n   !$acc end kernels\n \n   do i = 1, N\n-    if (b(i) .ne. 19.0) call abort\n+    if (b(i) .ne. 19.0) STOP 43\n   end do\n \n   a(:) = 49.0\n@@ -627,7 +627,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 44\n   end do\n \n   a(:) = 38.0\n@@ -645,7 +645,7 @@ program main\n   !$acc end kernels\n \n   do i = 1, N\n-    if (b(i) .ne. 39.0) call abort\n+    if (b(i) .ne. 39.0) STOP 45\n   end do\n \n   a(:) = 91.0\n@@ -661,7 +661,7 @@ program main\n   !$acc end kernels\n \n   do i = 1, N\n-    if (b(i) .ne. 92.0) call abort\n+    if (b(i) .ne. 92.0) STOP 46\n   end do\n \n   a(:) = 43.0\n@@ -683,7 +683,7 @@ program main\n #endif\n \n   do i = 1, N\n-    if (b(i) .ne. exp) call abort\n+    if (b(i) .ne. exp) STOP 47\n   end do\n \n   a(:) = 87.0\n@@ -699,7 +699,7 @@ program main\n   !$acc end kernels\n \n   do i = 1, N\n-    if (b(i) .ne. 88.0) call abort\n+    if (b(i) .ne. 88.0) STOP 48\n   end do\n \n   a(:) = 3.0\n@@ -723,8 +723,8 @@ program main\n   !$acc update host (a(1:N), b(1:N)) if (1 == 1)\n \n   do i = 1, N\n-    if (a(i) .ne. exp) call abort\n-    if (b(i) .ne. exp2) call abort\n+    if (a(i) .ne. exp) STOP 49\n+    if (b(i) .ne. exp2) STOP 50\n   end do\n \n   a(:) = 6.0\n@@ -738,8 +738,8 @@ program main\n   !$acc update host (a(1:N), b(1:N)) if (1 == 1)\n \n   do i = 1, N\n-    if (a(i) .ne. exp) call abort\n-    if (b(i) .ne. exp2) call abort\n+    if (a(i) .ne. exp) STOP 51\n+    if (b(i) .ne. exp2) STOP 52\n   end do\n \n   a(:) = 26.0\n@@ -753,8 +753,8 @@ program main\n   !$acc update host (a(1:N), b(1:N)) if (0 == 1)\n \n   do i = 1, N\n-    if (a(i) .ne. 0.0) call abort\n-    if (b(i) .ne. 0.0) call abort\n+    if (a(i) .ne. 0.0) STOP 53\n+    if (b(i) .ne. 0.0) STOP 54\n   end do\n \n #if !ACC_MEM_SHARED\n@@ -775,7 +775,7 @@ program main\n   !$acc end data\n \n   do i = 1, N\n-    if (b(i) .ne. 4.0) call abort\n+    if (b(i) .ne. 4.0) STOP 55\n   end do\n \n   a(:) = 8.0\n@@ -784,8 +784,8 @@ program main\n   !$acc data copyin (a(1:N)) copyout (b(1:N)) if (0 == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (a) .eqv. .TRUE.) call abort\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (a) .eqv. .TRUE.) STOP 56\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 57\n #endif\n \n   !$acc end data\n@@ -796,12 +796,12 @@ program main\n   !$acc data copyin (a(1:N)) if (1 == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (a) .eqv. .FALSE.) call abort\n+    if (acc_is_present (a) .eqv. .FALSE.) STOP 58\n #endif\n \n     !$acc data copyout (b(1:N)) if (0 == 1)\n #if !ACC_MEM_SHARED\n-      if (acc_is_present (b) .eqv. .TRUE.) call abort\n+      if (acc_is_present (b) .eqv. .TRUE.) STOP 59\n #endif\n         !$acc data copyout (b(1:N)) if (1 == 1)\n \n@@ -814,73 +814,73 @@ program main\n     !$acc end data\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .TRUE.) call abort\n+    if (acc_is_present (b) .eqv. .TRUE.) STOP 60\n #endif\n     !$acc end data\n   !$acc end data\n \n   do i = 1, N\n-   if (b(1) .ne. 18.0) call abort\n+   if (b(1) .ne. 18.0) STOP 61\n   end do\n \n   !$acc enter data copyin (b(1:N)) if (0 == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 62\n #endif\n \n   !$acc exit data delete (b(1:N)) if (0 == 1)\n \n   !$acc enter data copyin (b(1:N)) if (1 == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .FALSE.) call abort\n+    if (acc_is_present (b) .eqv. .FALSE.) STOP 63\n #endif\n \n   !$acc exit data delete (b(1:N)) if (1 == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 64\n #endif\n \n   !$acc enter data copyin (b(1:N)) if (zero == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .TRUE.) call abort\n+    if (acc_is_present (b) .eqv. .TRUE.) STOP 65\n #endif\n \n   !$acc exit data delete (b(1:N)) if (zero == 1)\n \n   !$acc enter data copyin (b(1:N)) if (one == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .FALSE.) call abort\n+    if (acc_is_present (b) .eqv. .FALSE.) STOP 66\n #endif\n \n   !$acc exit data delete (b(1:N)) if (one == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 67\n #endif\n \n   !$acc enter data copyin (b(1:N)) if (one == 0)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .TRUE.) call abort\n+    if (acc_is_present (b) .eqv. .TRUE.) STOP 68\n #endif\n \n   !$acc exit data delete (b(1:N)) if (one == 0)\n \n   !$acc enter data copyin (b(1:N)) if (one == 1)\n \n #if !ACC_MEM_SHARED\n-    if (acc_is_present (b) .eqv. .FALSE.) call abort\n+    if (acc_is_present (b) .eqv. .FALSE.) STOP 69\n #endif\n \n   !$acc exit data delete (b(1:N)) if (one == 1)\n \n #if !ACC_MEM_SHARED\n-  if (acc_is_present (b) .eqv. .TRUE.) call abort\n+  if (acc_is_present (b) .eqv. .TRUE.) STOP 70\n #endif\n \n end program main"}, {"sha": "d00ad27190eb06753c1fe04e62f8e38d0dad9322", "filename": "libgomp/testsuite/libgomp.oacc-fortran/implicit-firstprivate-ref.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fimplicit-firstprivate-ref.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fimplicit-firstprivate-ref.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fimplicit-firstprivate-ref.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -38,5 +38,5 @@ program t\n \n   CALL test(x_min)\n \n-  if (x_min .ne. -1) call abort\n+  if (x_min .ne. -1) STOP 1\n end program t"}, {"sha": "4b69e813d0579af28a6fec25b93b391e916b154c", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-2.f95", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-2.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -32,9 +32,9 @@ program main\n   !$acc end kernels\n \n   do i = 0, n - 1\n-     if (a(i) .ne. i * 2) call abort\n-     if (b(i) .ne. i * 4) call abort\n-     if (c(i) .ne. a(i) + b(i)) call abort\n+     if (a(i) .ne. i * 2) STOP 1\n+     if (b(i) .ne. i * 4) STOP 2\n+     if (c(i) .ne. a(i) + b(i)) STOP 3\n   end do\n \n end program main"}, {"sha": "400874341daff8ac4a55551527dc4315ef717608", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data-2.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-2.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -31,7 +31,7 @@ program main\n   !$acc end data\n \n   do i = 0, n - 1\n-     if (c(i) .ne. a(i) + b(i)) call abort\n+     if (c(i) .ne. a(i) + b(i)) STOP 1\n   end do\n \n end program main"}, {"sha": "11ae17ca5f563218211ad025da1e81a73301fc6e", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit-2.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit-2.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -31,7 +31,7 @@ program main\n   !$acc exit data copyout (c(0:n-1))\n \n   do i = 0, n - 1\n-     if (c(i) .ne. a(i) + b(i)) call abort\n+     if (c(i) .ne. a(i) + b(i)) STOP 1\n   end do\n \n end program main"}, {"sha": "4fdb862b829b78eedf6a7b460da590317c2a9e85", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,7 +29,7 @@ program main\n   !$acc exit data copyout (a(0:n-1), b(0:n-1), c(0:n-1))\n \n   do i = 0, n - 1\n-     if (c(i) .ne. a(i) + b(i)) call abort\n+     if (c(i) .ne. a(i) + b(i)) STOP 1\n   end do\n \n end program main"}, {"sha": "4bee0e1e69a347b746851e0e8ea1cf30be2937a9", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data-update.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-update.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-update.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-update.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,7 +29,7 @@ program main\n   !$acc exit data copyout (a(0:n-1), c(0:n-1))\n \n   do i = 0, n - 1\n-     if (c(i) .ne. a(i) + b(i)) call abort\n+     if (c(i) .ne. a(i) + b(i)) STOP 1\n   end do\n \n end program main"}, {"sha": "307e433bc5ecde123f6012b84c9c2619bca593c7", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,7 +29,7 @@ program main\n   !$acc end data\n \n   do i = 0, n - 1\n-     if (c(i) .ne. a(i) + b(i)) call abort\n+     if (c(i) .ne. a(i) + b(i)) STOP 1\n   end do\n \n end program main"}, {"sha": "0090f433efd5932419b0cdd6072fac71da22097d", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop.f95?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,7 +21,7 @@ program main\n   !$acc end kernels\n \n   do i = 0, n - 1\n-     if (c(i) .ne. a(i) + b(i)) call abort\n+     if (c(i) .ne. a(i) + b(i)) STOP 1\n   end do\n \n end program main"}, {"sha": "901169aa11980ee332b40f437e2c1b70b96cffda", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -1,10 +1,10 @@\n use openacc\n \n-if (acc_get_num_devices (acc_device_host) .ne. 1) call abort\n+if (acc_get_num_devices (acc_device_host) .ne. 1) STOP 1\n call acc_set_device_type (acc_device_host)\n-if (acc_get_device_type () .ne. acc_device_host) call abort\n+if (acc_get_device_type () .ne. acc_device_host) STOP 2\n call acc_set_device_num (0, acc_device_host)\n-if (acc_get_device_num (acc_device_host) .ne. 0) call abort\n+if (acc_get_device_num (acc_device_host) .ne. 0) STOP 3\n call acc_shutdown (acc_device_host)\n \n call acc_init (acc_device_host)"}, {"sha": "2875f162ba45a188ff5e4128bc2e1d5f46610586", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-10.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-10.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -25,16 +25,16 @@ program main\n   call acc_copyin (a_3d_c)\n   call acc_copyin (a_3d_r)\n \n-  if (acc_is_present (a_3d_i) .neqv. .TRUE.) call abort\n-  if (acc_is_present (a_3d_c) .neqv. .TRUE.) call abort\n-  if (acc_is_present (a_3d_r) .neqv. .TRUE.) call abort\n+  if (acc_is_present (a_3d_i) .neqv. .TRUE.) STOP 1\n+  if (acc_is_present (a_3d_c) .neqv. .TRUE.) STOP 2\n+  if (acc_is_present (a_3d_r) .neqv. .TRUE.) STOP 3\n \n   do i = 1, 10\n     do j = 1, 10\n       do k = 1, 10\n-        if (acc_is_present (a_3d_i(i, j, k), i_size) .neqv. .TRUE.) call abort\n-        if (acc_is_present (a_3d_c(i, j, k), i_size) .neqv. .TRUE.) call abort\n-        if (acc_is_present (a_3d_r(i, j, k), i_size) .neqv. .TRUE.) call abort\n+        if (acc_is_present (a_3d_i(i, j, k), i_size) .neqv. .TRUE.) STOP 4\n+        if (acc_is_present (a_3d_c(i, j, k), i_size) .neqv. .TRUE.) STOP 5\n+        if (acc_is_present (a_3d_r(i, j, k), i_size) .neqv. .TRUE.) STOP 6\n       end do\n     end do\n   end do"}, {"sha": "069e07ec03584ebd4c44c2b3b87a8f492ccc5655", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-2.f", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-2.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -1,10 +1,10 @@\n       USE OPENACC\n \n-      IF (ACC_GET_NUM_DEVICES (ACC_DEVICE_HOST) .NE. 1) CALL ABORT\n+      IF (ACC_GET_NUM_DEVICES (ACC_DEVICE_HOST) .NE. 1) STOP 1\n       CALL ACC_SET_DEVICE_TYPE (ACC_DEVICE_HOST)\n-      IF (ACC_GET_DEVICE_TYPE () .NE. ACC_DEVICE_HOST) CALL ABORT\n+      IF (ACC_GET_DEVICE_TYPE () .NE. ACC_DEVICE_HOST) STOP 2\n       CALL ACC_SET_DEVICE_NUM (0, ACC_DEVICE_HOST)\n-      IF (ACC_GET_DEVICE_NUM (ACC_DEVICE_HOST) .NE. 0) CALL ABORT\n+      IF (ACC_GET_DEVICE_NUM (ACC_DEVICE_HOST) .NE. 0) STOP 3\n       CALL ACC_SHUTDOWN (ACC_DEVICE_HOST)\n \n       CALL ACC_INIT (ACC_DEVICE_HOST)"}, {"sha": "47424f14a15111ae73412017bd2362ef30e1d898", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-3.f", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-3.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -1,10 +1,10 @@\n       INCLUDE \"openacc_lib.h\"\n \n-      IF (ACC_GET_NUM_DEVICES (ACC_DEVICE_HOST) .NE. 1) CALL ABORT\n+      IF (ACC_GET_NUM_DEVICES (ACC_DEVICE_HOST) .NE. 1) STOP 1\n       CALL ACC_SET_DEVICE_TYPE (ACC_DEVICE_HOST)\n-      IF (ACC_GET_DEVICE_TYPE () .NE. ACC_DEVICE_HOST) CALL ABORT\n+      IF (ACC_GET_DEVICE_TYPE () .NE. ACC_DEVICE_HOST) STOP 2\n       CALL ACC_SET_DEVICE_NUM (0, ACC_DEVICE_HOST)\n-      IF (ACC_GET_DEVICE_NUM (ACC_DEVICE_HOST) .NE. 0) CALL ABORT\n+      IF (ACC_GET_DEVICE_NUM (ACC_DEVICE_HOST) .NE. 0) STOP 3\n       CALL ACC_SHUTDOWN (ACC_DEVICE_HOST)\n \n       CALL ACC_INIT (ACC_DEVICE_HOST)"}, {"sha": "99e8f3577641fde46e1aca03090b596157099fbc", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-32-1.f", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,7 +21,7 @@ PROGRAM MAIN\n       SHARED_MEM = ACC_IS_PRESENT (H)\n \n       CALL ACC_PRESENT_OR_CREATE (H, INT (SIZEOF (H), 4))\n-      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) CALL ABORT\n+      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) STOP 1\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n@@ -30,142 +30,142 @@ PROGRAM MAIN\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (1, 0, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (1, 0, SHARED_MEM)) STOP 2\n          H(I) = I + 2\n       END DO\n \n       CALL ACC_PRESENT_OR_CREATE (H)\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (2, 1, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (2, 1, SHARED_MEM)) STOP 3\n          H(I) = I + 3\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (3, 2, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (3, 2, SHARED_MEM)) STOP 4\n          H(I) = I + 4\n       END DO\n \n       CALL ACC_PCREATE (H, INT (SIZEOF (H), 4))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (4, 3, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (4, 3, SHARED_MEM)) STOP 5\n          H(I) = I + 5\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (5, 4, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (5, 4, SHARED_MEM)) STOP 6\n          H(I) = I + 6\n       END DO\n \n       CALL ACC_PRESENT_OR_COPYIN (H, INT (SIZEOF (H), 8))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (6, 5, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (6, 5, SHARED_MEM)) STOP 7\n          H(I) = I + 7\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (7, 6, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (7, 6, SHARED_MEM)) STOP 8\n          H(I) = I + 8\n       END DO\n \n       CALL ACC_PCOPYIN (H, INT (SIZEOF (H), 4))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (8, 7, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (8, 7, SHARED_MEM)) STOP 9\n          H(I) = I + 9\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (9, 8, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (9, 8, SHARED_MEM)) STOP 10\n          H(I) = I + 10\n       END DO\n \n       CALL ACC_COPYOUT (H, INT (SIZEOF (H), 4))\n       IF (.NOT. SHARED_MEM) THEN\n-         IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) CALL ABORT\n+         IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) STOP 11\n       ENDIF\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) STOP 12\n       END DO\n \n       CALL ACC_PCOPYIN (H)\n-      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) CALL ABORT\n+      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) STOP 13\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) STOP 14\n          H(I) = I + 11\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (11, 9, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (11, 9, SHARED_MEM)) STOP 15\n          H(I) = I + 12\n       END DO\n \n       CALL ACC_PCOPYIN (H, INT (SIZEOF (H), 8))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (12, 11, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (12, 11, SHARED_MEM)) STOP 16\n          H(I) = I + 13\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (13, 12, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (13, 12, SHARED_MEM)) STOP 17\n          H(I) = I + 14\n       END DO\n \n       CALL ACC_PCREATE (H)\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (14, 13, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (14, 13, SHARED_MEM)) STOP 18\n          H(I) = I + 15\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (15, 14, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (15, 14, SHARED_MEM)) STOP 19\n          H(I) = I + 16\n       END DO\n \n       CALL ACC_PCREATE (H, INT (SIZEOF (H), 8))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (16, 15, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (16, 15, SHARED_MEM)) STOP 20\n          H(I) = I + 17\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (17, 16, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (17, 16, SHARED_MEM)) STOP 21\n          H(I) = I + 18\n       END DO\n \n       CALL ACC_UPDATE_SELF (H, INT (SIZEOF (H), 4))\n-      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) CALL ABORT\n+      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) STOP 22\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (18, 17, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (18, 17, SHARED_MEM)) STOP 23\n       END DO\n \n       CALL ACC_DELETE (H)\n       IF (.NOT. SHARED_MEM) THEN\n-         IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) CALL ABORT\n+         IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) STOP 24\n       ENDIF\n \n       DEALLOCATE (H)"}, {"sha": "514c04e7bca732e1276112223869dfa7f928a012", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-32-2.f", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,7 +21,7 @@ PROGRAM MAIN\n       SHARED_MEM = ACC_IS_PRESENT (H)\n \n       CALL ACC_PRESENT_OR_CREATE (H, INT (SIZEOF (H), 4))\n-      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) CALL ABORT\n+      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) STOP 1\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n@@ -30,142 +30,142 @@ PROGRAM MAIN\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (1, 0, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (1, 0, SHARED_MEM)) STOP 2\n          H(I) = I + 2\n       END DO\n \n       CALL ACC_PRESENT_OR_CREATE (H)\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (2, 1, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (2, 1, SHARED_MEM)) STOP 3\n          H(I) = I + 3\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (3, 2, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (3, 2, SHARED_MEM)) STOP 4\n          H(I) = I + 4\n       END DO\n \n       CALL ACC_PCREATE (H, INT (SIZEOF (H), 4))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (4, 3, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (4, 3, SHARED_MEM)) STOP 5\n          H(I) = I + 5\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (5, 4, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (5, 4, SHARED_MEM)) STOP 6\n          H(I) = I + 6\n       END DO\n \n       CALL ACC_PRESENT_OR_COPYIN (H, INT (SIZEOF (H), 8))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (6, 5, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (6, 5, SHARED_MEM)) STOP 7\n          H(I) = I + 7\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (7, 6, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (7, 6, SHARED_MEM)) STOP 8\n          H(I) = I + 8\n       END DO\n \n       CALL ACC_PCOPYIN (H, INT (SIZEOF (H), 4))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (8, 7, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (8, 7, SHARED_MEM)) STOP 9\n          H(I) = I + 9\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (9, 8, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (9, 8, SHARED_MEM)) STOP 10\n          H(I) = I + 10\n       END DO\n \n       CALL ACC_COPYOUT (H, INT (SIZEOF (H), 4))\n       IF (.NOT. SHARED_MEM) THEN\n-         IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) CALL ABORT\n+         IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) STOP 11\n       ENDIF\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) STOP 12\n       END DO\n \n       CALL ACC_PCOPYIN (H)\n-      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) CALL ABORT\n+      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) STOP 13\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) STOP 14\n          H(I) = I + 11\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (11, 9, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (11, 9, SHARED_MEM)) STOP 15\n          H(I) = I + 12\n       END DO\n \n       CALL ACC_PCOPYIN (H, INT (SIZEOF (H), 8))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (12, 11, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (12, 11, SHARED_MEM)) STOP 16\n          H(I) = I + 13\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (13, 12, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (13, 12, SHARED_MEM)) STOP 17\n          H(I) = I + 14\n       END DO\n \n       CALL ACC_PCREATE (H)\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (14, 13, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (14, 13, SHARED_MEM)) STOP 18\n          H(I) = I + 15\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (15, 14, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (15, 14, SHARED_MEM)) STOP 19\n          H(I) = I + 16\n       END DO\n \n       CALL ACC_PCREATE (H, INT (SIZEOF (H), 8))\n \n !$ACC PARALLEL LOOP DEFAULT (PRESENT)\n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (16, 15, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (16, 15, SHARED_MEM)) STOP 20\n          H(I) = I + 17\n       END DO\n !$ACC END PARALLEL LOOP\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (17, 16, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (17, 16, SHARED_MEM)) STOP 21\n          H(I) = I + 18\n       END DO\n \n       CALL ACC_UPDATE_SELF (H, INT (SIZEOF (H), 4))\n-      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) CALL ABORT\n+      IF (.NOT. ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) STOP 22\n \n       DO I = 1, N\n-         IF (H(I) .NE. I + MERGE (18, 17, SHARED_MEM)) CALL ABORT\n+         IF (H(I) .NE. I + MERGE (18, 17, SHARED_MEM)) STOP 23\n       END DO\n \n       CALL ACC_DELETE (H)\n       IF (.NOT. SHARED_MEM) THEN\n-         IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) CALL ABORT\n+         IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) STOP 24\n       ENDIF\n \n       DEALLOCATE (H)"}, {"sha": "d03f4acdaf3a00840a59041b59cfc9d1bc041468", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-4.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,25 +6,25 @@ program main\n \n   integer n\n \n-  if (acc_get_num_devices (acc_device_host) .ne. 1) call abort\n+  if (acc_get_num_devices (acc_device_host) .ne. 1) STOP 1\n \n-  if (acc_get_num_devices (acc_device_none) .ne. 0) call abort\n+  if (acc_get_num_devices (acc_device_none) .ne. 0) STOP 2\n \n   call acc_init (acc_device_host)\n \n-  if (acc_get_device_type () .ne. acc_device_host) call abort\n+  if (acc_get_device_type () .ne. acc_device_host) STOP 3\n \n   call acc_set_device_type (acc_device_host)\n \n-  if (acc_get_device_type () .ne. acc_device_host) call abort\n+  if (acc_get_device_type () .ne. acc_device_host) STOP 4\n \n   n = 0\n \n   call acc_set_device_num (n, acc_device_host)\n \n-  if (acc_get_device_num (acc_device_host) .ne. 0) call abort\n+  if (acc_get_device_num (acc_device_host) .ne. 0) STOP 5\n \n-  if (.NOT. acc_async_test (n) ) call abort\n+  if (.NOT. acc_async_test (n) ) STOP 6\n \n   call acc_wait (n)\n "}, {"sha": "505b2c6f2461d5953256a7474b8734b3b685935b", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-5.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-5.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -14,15 +14,15 @@ program main\n \n   call acc_set_device_num (n, acc_device_nvidia)\n \n-  if (acc_get_device_num (acc_device_nvidia) .ne. 0) call abort\n+  if (acc_get_device_num (acc_device_nvidia) .ne. 0) STOP 1\n \n   if (acc_get_num_devices (acc_device_nvidia) .gt. 1) then\n \n     n = 1\n \n     call acc_set_device_num (n, acc_device_nvidia)\n \n-    if (acc_get_device_num (acc_device_nvidia) .ne. 1) call abort\n+    if (acc_get_device_num (acc_device_nvidia) .ne. 1) STOP 2\n \n   end if\n "}, {"sha": "0364a7be842805d5a7e8e0d095a54975f5221589", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-6.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-6.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -6,25 +6,25 @@ program main\n \n   integer n\n \n-  if (acc_get_num_devices (acc_device_host) .ne. 1) call abort\n+  if (acc_get_num_devices (acc_device_host) .ne. 1) STOP 1\n \n-  if (acc_get_num_devices (acc_device_none) .ne. 0) call abort\n+  if (acc_get_num_devices (acc_device_none) .ne. 0) STOP 2\n \n   call acc_init (acc_device_host)\n \n-  if (acc_get_device_type () .ne. acc_device_host) call abort\n+  if (acc_get_device_type () .ne. acc_device_host) STOP 3\n \n   call acc_set_device_type (acc_device_host)\n \n-  if (acc_get_device_type () .ne. acc_device_host) call abort\n+  if (acc_get_device_type () .ne. acc_device_host) STOP 4\n \n   n = 0\n \n   call acc_set_device_num (n, acc_device_host)\n \n-  if (acc_get_device_num (acc_device_host) .ne. 0) call abort\n+  if (acc_get_device_num (acc_device_host) .ne. 0) STOP 5\n \n-  if (.NOT. acc_async_test (n) ) call abort\n+  if (.NOT. acc_async_test (n) ) STOP 6\n \n   call acc_wait (n)\n "}, {"sha": "2ce93c359caedcb68b1d2f2f7743e98c7ebb0daf", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-7.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-7.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -14,15 +14,15 @@ program main\n \n   call acc_set_device_num (n, acc_device_nvidia)\n \n-  if (acc_get_device_num (acc_device_nvidia) .ne. 0) call abort\n+  if (acc_get_device_num (acc_device_nvidia) .ne. 0) STOP 1\n \n   if (acc_get_num_devices (acc_device_nvidia) .gt. 1) then\n \n     n = 1\n \n     call acc_set_device_num (n, acc_device_nvidia)\n \n-    if (acc_get_device_num (acc_device_nvidia) .ne. 1) call abort\n+    if (acc_get_device_num (acc_device_nvidia) .ne. 1) STOP 2\n \n   end if\n "}, {"sha": "263cedb5c5b89e43549f140536daa735937b7780", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-8.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-8.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -26,16 +26,16 @@ program main\n   call acc_copyin (a_3d_c)\n   call acc_copyin (a_3d_r)\n \n-  if (acc_is_present (a_3d_i) .neqv. .TRUE.) call abort\n-  if (acc_is_present (a_3d_c) .neqv. .TRUE.) call abort\n-  if (acc_is_present (a_3d_r) .neqv. .TRUE.) call abort\n+  if (acc_is_present (a_3d_i) .neqv. .TRUE.) STOP 1\n+  if (acc_is_present (a_3d_c) .neqv. .TRUE.) STOP 2\n+  if (acc_is_present (a_3d_r) .neqv. .TRUE.) STOP 3\n \n   do i = 1, 10\n     do j = 1, 10\n       do k = 1, 10\n-        if (acc_is_present (a_3d_i(i, j, k), i_size) .neqv. .TRUE.) call abort\n-        if (acc_is_present (a_3d_c(i, j, k), i_size) .neqv. .TRUE.) call abort\n-        if (acc_is_present (a_3d_r(i, j, k), i_size) .neqv. .TRUE.) call abort\n+        if (acc_is_present (a_3d_i(i, j, k), i_size) .neqv. .TRUE.) STOP 4\n+        if (acc_is_present (a_3d_c(i, j, k), i_size) .neqv. .TRUE.) STOP 5\n+        if (acc_is_present (a_3d_r(i, j, k), i_size) .neqv. .TRUE.) STOP 6\n       end do\n     end do\n   end do"}, {"sha": "47859508c8f748782a8dbcaf5d9b09ef73e1e224", "filename": "libgomp/testsuite/libgomp.oacc-fortran/map-1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fmap-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fmap-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fmap-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -32,7 +32,7 @@ program map\n   !$acc end parallel\n \n   do i = 1, n\n-     if (a(i) .ne. b(i)) call abort\n+     if (a(i) .ne. b(i)) STOP 1\n   end do\n   call check (a, b, n)\n \n@@ -92,6 +92,6 @@ subroutine check (a, b, n)\n   integer :: i\n \n   do i = 1, n\n-     if (a(i) .ne. b(i)) call abort\n+     if (a(i) .ne. b(i)) STOP 2\n   end do\n end subroutine check"}, {"sha": "c95891d62a63b378c98284284245468922294dbe", "filename": "libgomp/testsuite/libgomp.oacc-fortran/nested-function-1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -27,7 +27,7 @@ subroutine test1\n         end do\n       end do firstdo\n     !$acc end parallel\n-    if (l) call abort\n+    if (l) STOP 1\n   end subroutine test1\n \n   subroutine test2\n@@ -47,7 +47,7 @@ subroutine test2\n 115   continue\n     !$acc loop gang(static:1) collapse(1)\n       do k=1,3\n-         if (any(a(k,1:3,1:3).ne.1)) call abort\n+         if (any(a(k,1:3,1:3).ne.1)) STOP 2\n       enddo\n     ! Use \"gang(static:1)\" here and below to effectively turn gang-redundant\n     ! execution mode into something like gang-single.\n@@ -62,7 +62,7 @@ subroutine test2\n 120   end do dol\n     !$acc loop gang(static:1) collapse(1)\n      do l=1,3\n-        if (any(a(l,1:3,1:3).ne.2)) call abort\n+        if (any(a(l,1:3,1:3).ne.2)) STOP 3\n      enddo\n     !$acc end parallel\n   end subroutine test2"}, {"sha": "4f4148be0aa1878fa22b5090ddaec34e169a5b88", "filename": "libgomp/testsuite/libgomp.oacc-fortran/nested-function-2.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -30,7 +30,7 @@ subroutine test1\n         enddo dokk\n 115   continue\n     !$acc end parallel\n-    if (any(a(1:3,1:3,1:3).ne.1)) call abort\n+    if (any(a(1:3,1:3,1:3).ne.1)) STOP 1\n     !$acc parallel\n     !$acc loop collapse(3)\n dol:  do 120 l=1,3\n@@ -41,7 +41,7 @@ subroutine test1\n         enddo doll\n 120   end do dol\n     !$acc end parallel\n-    if (any(a(1:3,1:3,1:3).ne.2)) call abort\n+    if (any(a(1:3,1:3,1:3).ne.2)) STOP 2\n     end subroutine test1\n \n   subroutine test2(v1, v2, v3, v4, v5, v6)\n@@ -73,11 +73,11 @@ subroutine test2(v1, v2, v3, v4, v5, v6)\n         end do\n       end do\n     end do\n-    if (l .neqv. r) call abort\n+    if (l .neqv. r) STOP 3\n     do i = v1, v2\n       do j = v3, v4\n         do k = v5, v6\n-           if (a(i, j, k) .ne. b(i, j, k)) call abort\n+           if (a(i, j, k) .ne. b(i, j, k)) STOP 4\n         end do\n       end do\n     end do\n@@ -112,11 +112,11 @@ subroutine test3(v1, v2, v3, v4, v5, v6, v7, v8, v9)\n         end do\n       end do\n     end do\n-    if (l .neqv. r) call abort\n+    if (l .neqv. r) STOP 5\n     do i = v1, v2, v7\n       do j = v3, v4, v8\n         do k = v5, v6, v9\n-           if (a(i, j, k) .ne. b(i, j, k)) call abort\n+           if (a(i, j, k) .ne. b(i, j, k)) STOP 6\n         end do\n       end do\n     end do\n@@ -160,11 +160,11 @@ subroutine test4\n         end do\n       end do\n     end do\n-    if (l .neqv. r) call abort\n+    if (l .neqv. r) STOP 7\n     do i = v1, v2, v7\n       do j = v3, v4, v8\n          do k = v5, v6, v9\n-           if (a(i, j, k) .ne. b(i, j, k)) call abort\n+           if (a(i, j, k) .ne. b(i, j, k)) STOP 8\n          end do\n       end do\n     end do"}, {"sha": "8a5ca426f3138f8fbb41a829294a2b1efc016dc9", "filename": "libgomp/testsuite/libgomp.oacc-fortran/nested-function-3.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnested-function-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -22,7 +22,7 @@ subroutine test1\n         enddo dokk\n 115   continue\n     !$acc end parallel\n-    if (any(a(1:3,1:3,1:3).ne.1)) call abort\n+    if (any(a(1:3,1:3,1:3).ne.1)) STOP 1\n     !$acc parallel\n     !$acc loop collapse(3)\n dol:  do 120 l=1,3\n@@ -33,7 +33,7 @@ subroutine test1\n         enddo doll\n 120   end do dol\n     !$acc end parallel\n-    if (any(a(1:3,1:3,1:3).ne.2)) call abort\n+    if (any(a(1:3,1:3,1:3).ne.2)) STOP 2\n   end subroutine test1\n \n   subroutine test2(v1, v2, v3, v4, v5, v6)\n@@ -65,11 +65,11 @@ subroutine test2(v1, v2, v3, v4, v5, v6)\n         end do\n       end do\n     end do\n-    if (l .neqv. r) call abort\n+    if (l .neqv. r) STOP 3\n     do i = v1, v2\n       do j = v3, v4\n         do k = v5, v6\n-           if (a(i, j, k) .ne. b(i, j, k)) call abort\n+           if (a(i, j, k) .ne. b(i, j, k)) STOP 4\n         end do\n       end do\n     end do\n@@ -104,11 +104,11 @@ subroutine test3(v1, v2, v3, v4, v5, v6, v7, v8, v9)\n         end do\n       end do\n     end do\n-    if (l .neqv. r) call abort\n+    if (l .neqv. r) STOP 5\n     do i = v1, v2, v7\n       do j = v3, v4, v8\n         do k = v5, v6, v9\n-           if (a(i, j, k) .ne. b(i, j, k)) call abort\n+           if (a(i, j, k) .ne. b(i, j, k)) STOP 6\n         end do\n       end do\n     end do\n@@ -152,11 +152,11 @@ subroutine test4\n         end do\n       end do\n     end do\n-    if (l .neqv. r) call abort\n+    if (l .neqv. r) STOP 7\n     do i = v1, v2, v7\n       do j = v3, v4, v8\n          do k = v5, v6, v9\n-           if (a(i, j, k) .ne. b(i, j, k)) call abort\n+           if (a(i, j, k) .ne. b(i, j, k)) STOP 8\n          end do\n       end do\n     end do\n@@ -191,11 +191,11 @@ subroutine test5(v1, v2, v3, v4, v5, v6)\n         end do\n       end do\n     end do\n-    if (l .neqv. r) call abort\n+    if (l .neqv. r) STOP 9\n     do i = v1, v2\n       do j = v3, v4\n         do k = v5, v6\n-           if (a(i, j, k) .ne. b(i, j, k)) call abort\n+           if (a(i, j, k) .ne. b(i, j, k)) STOP 10\n         end do\n       end do\n     end do\n@@ -231,11 +231,11 @@ subroutine test6(v1, v2, v3, v4, v5, v6, v7, v8, v9)\n         end do\n       end do\n     end do\n-    if (l .neqv. r) call abort\n+    if (l .neqv. r) STOP 11\n     do i = v1, v2, v7\n       do j = v3, v4, v8\n         do k = v5, v6, v9\n-           if (a(i, j, k) .ne. b(i, j, k)) call abort\n+           if (a(i, j, k) .ne. b(i, j, k)) STOP 12\n         end do\n       end do\n     end do"}, {"sha": "88fe5168b59163e1d7a4c75d5bace060200e278e", "filename": "libgomp/testsuite/libgomp.oacc-fortran/non-scalar-data.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -19,31 +19,31 @@ program main\n   !$acc update host(array)\n \n   do i = 1, n\n-     if (array(i) .ne. i) call abort\n+     if (array(i) .ne. i) STOP 1\n   end do\n \n   call kernels_default_present(array, n)\n \n   !$acc update host(array)\n \n   do i = 1, n\n-     if (array(i) .ne. i+1) call abort\n+     if (array(i) .ne. i+1) STOP 2\n   end do\n \n   call parallel(array, n)\n \n   !$acc update host(array)\n \n   do i = 1, n\n-     if (array(i) .ne. i+i) call abort\n+     if (array(i) .ne. i+i) STOP 3\n   end do\n \n   call parallel_default_present(array, n)\n \n   !$acc end data\n \n   do i = 1, n\n-     if (array(i) .ne. i+i+1) call abort\n+     if (array(i) .ne. i+i+1) STOP 4\n   end do\n end program main\n "}, {"sha": "537212eb65580e0ecc37737699dab5ffb20f9067", "filename": "libgomp/testsuite/libgomp.oacc-fortran/openacc_version-1.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-1.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,6 +4,6 @@ program main\n       implicit none\n       include \"openacc_lib.h\"\n \n-      if (openacc_version .ne. 201306) call abort;\n+      if (openacc_version .ne. 201306) STOP 1\n \n       end program main"}, {"sha": "54f301be79b5f157f02aeb6265cc74f58464d5da", "filename": "libgomp/testsuite/libgomp.oacc-fortran/openacc_version-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fopenacc_version-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -4,6 +4,6 @@ program main\n   use openacc\n   implicit none\n \n-  if (openacc_version .ne. 201306) call abort;\n+  if (openacc_version .ne. 201306) STOP 1\n \n end program main"}, {"sha": "aa1bb634ba6f6ebae90ebaeec0136be523bb3447", "filename": "libgomp/testsuite/libgomp.oacc-fortran/par-reduction-2-1.f", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpar-reduction-2-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpar-reduction-2-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpar-reduction-2-1.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,8 +29,8 @@ PROGRAM MAIN\n \n       CALL ACC_ASYNC_WAIT (1)\n \n-      IF (RES .NE. RES1) CALL ABORT\n-      IF (RES .NE. RES2) CALL ABORT\n+      IF (RES .NE. RES1) STOP 1\n+      IF (RES .NE. RES2) STOP 2\n \n       RES1 = 1\n       RES2 = 1\n@@ -51,7 +51,7 @@ PROGRAM MAIN\n \n       CALL ACC_ASYNC_WAIT_ALL\n \n-      IF (RES .NE. RES1) CALL ABORT\n-      IF (RES .NE. RES2) CALL ABORT\n+      IF (RES .NE. RES1) STOP 3\n+      IF (RES .NE. RES2) STOP 4\n \n       END PROGRAM"}, {"sha": "5694de1aee8e144d4c82da2e4bf1e25aa3a09279", "filename": "libgomp/testsuite/libgomp.oacc-fortran/par-reduction-2-2.f", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpar-reduction-2-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpar-reduction-2-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpar-reduction-2-2.f?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -29,8 +29,8 @@ PROGRAM MAIN\n \n       CALL ACC_ASYNC_WAIT (1)\n \n-      IF (RES .NE. RES1) CALL ABORT\n-      IF (RES .NE. RES2) CALL ABORT\n+      IF (RES .NE. RES1) STOP 1\n+      IF (RES .NE. RES2) STOP 2\n \n       RES1 = 1\n       RES2 = 1\n@@ -51,7 +51,7 @@ PROGRAM MAIN\n \n       CALL ACC_ASYNC_WAIT_ALL\n \n-      IF (RES .NE. RES1) CALL ABORT\n-      IF (RES .NE. RES2) CALL ABORT\n+      IF (RES .NE. RES1) STOP 3\n+      IF (RES .NE. RES2) STOP 4\n \n       END PROGRAM"}, {"sha": "487cfc436e269ef42eeeb473e6c4e78b4a03d014", "filename": "libgomp/testsuite/libgomp.oacc-fortran/parallel-reduction.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fparallel-reduction.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fparallel-reduction.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fparallel-reduction.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -16,11 +16,11 @@ program reduction\n   !$acc end parallel\n \n   if (acc_get_device_type () .ne. acc_device_host) then\n-     if (s1 .ne. n) call abort\n-     if (s2 .ne. n) call abort\n+     if (s1 .ne. n) STOP 1\n+     if (s2 .ne. n) STOP 2\n   else\n-     if (s1 .ne. 1) call abort\n-     if (s2 .ne. 1) call abort\n+     if (s1 .ne. 1) STOP 3\n+     if (s2 .ne. 1) STOP 4\n   end if\n \n   ! Test reductions inside subroutines\n@@ -30,9 +30,9 @@ program reduction\n   call redsub (s1, s2, n)\n \n   if (acc_get_device_type () .ne. acc_device_host) then\n-     if (s1 .ne. n) call abort\n+     if (s1 .ne. n) STOP 5\n   else\n-     if (s2 .ne. 1) call abort\n+     if (s2 .ne. 1) STOP 6\n   end if\n end program reduction\n "}, {"sha": "3f4b9fe070e1ff176c017bf09db30c1b266c1b89", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pointer-align-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpointer-align-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpointer-align-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpointer-align-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,9 +13,9 @@ program test\n   a(4) = 54\n   !$acc end parallel\n \n-  if (a(1) .ne. 10) call abort\n-  if (a(2) .ne. 52) call abort\n-  if (a(3) .ne. 53) call abort\n-  if (a(4) .ne. 54) call abort\n+  if (a(1) .ne. 10) STOP 1\n+  if (a(2) .ne. 52) STOP 2\n+  if (a(3) .ne. 53) STOP 3\n+  if (a(4) .ne. 54) STOP 4\n \n end program test"}, {"sha": "c8a7922a4156a13abdff6abff2f5d1c708706a78", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pr70643.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr70643.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr70643.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr70643.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -47,5 +47,5 @@ program main\n \n     !$acc end data\n \n-    if (sum .ne. 4.0) call abort\n+    if (sum .ne. 4.0) STOP 1\n end program"}, {"sha": "a7f02521753598c300bdb890cca3fd094e7c8fed", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pr81352.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr81352.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr81352.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr81352.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -13,7 +13,7 @@ program foo\n      enddo\n   enddo\n \n-  if (any(a(1:3,1:3).ne.2)) call abort\n+  if (any(a(1:3,1:3).ne.2)) STOP 1\n \n   !$acc end parallel\n "}, {"sha": "79251d2fb40664713ee874c6d9003941326216b1", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pr83920.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr83920.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr83920.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr83920.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -24,5 +24,5 @@ program test_foo\n   beta = 0.0\n   c(:,:) = 1.0\n   call foo (beta, c)\n-  if (c(1,1) /= 0.0) call abort ()\n+  if (c(1,1) /= 0.0) STOP 1\n end program test_foo"}, {"sha": "2b361220bb607821763d2c37fe83f30ca0756bb7", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pr84028.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr84028.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr84028.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr84028.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -7,7 +7,7 @@ program foo\n \n   !$acc parallel num_gangs(1) num_workers(2)\n \n-  if (any(a(1:3,1:3,1:3).ne.1)) call abort\n+  if (any(a(1:3,1:3,1:3).ne.1)) STOP 1\n \n   do ll=1,3\n \n@@ -18,7 +18,7 @@ program foo\n \n   enddo\n \n-  if (a(1,1,1).ne.2) call abort\n+  if (a(1,1,1).ne.2) STOP 2\n \n   !$acc end parallel\n "}, {"sha": "472a6a14fff73be6647a9da9a4a02304777f7548", "filename": "libgomp/testsuite/libgomp.oacc-fortran/private-variables.f90", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivate-variables.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivate-variables.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivate-variables.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -21,7 +21,7 @@ subroutine t1()\n   !$acc end parallel\n \n   do i = 1, 32\n-     if (arr(i) .ne. i * 3) call abort\n+     if (arr(i) .ne. i * 3) STOP 1\n   end do\n end subroutine t1\n \n@@ -49,7 +49,7 @@ subroutine t2()\n   !$acc end parallel\n \n   do i = 0, 32 * 32 - 1\n-     if (arr(i) .ne. i + (i / 32) * 2) call abort\n+     if (arr(i) .ne. i + (i / 32) * 2) STOP 2\n   end do\n end subroutine t2\n \n@@ -77,7 +77,7 @@ subroutine t3()\n   !$acc end parallel\n \n   do i = 0, 32 * 32 - 1\n-     if (arr(i) .ne. i + (i / 32) * 2) call abort\n+     if (arr(i) .ne. i + (i / 32) * 2) STOP 3\n   end do\n end subroutine t3\n \n@@ -113,7 +113,7 @@ subroutine t4()\n   !$acc end parallel\n \n   do i = 0, 32 * 32 - 1\n-     if (arr(i) .ne. i + (i / 32) * 13) call abort\n+     if (arr(i) .ne. i + (i / 32) * 13) STOP 4\n   end do\n end subroutine t4\n \n@@ -151,7 +151,7 @@ subroutine t5()\n         do k = 0, 32 - 1\n            idx = i * 1024 + j * 32 + k\n            if (arr(idx) .ne. idx + ieor(i, j * 3) * k + ior(i, j * 5) * k) then\n-              call abort\n+              STOP 5\n            end if\n         end do\n      end do\n@@ -189,7 +189,7 @@ subroutine t6()\n         do k = 0, 32 - 1\n            idx = i * 1024 + j * 32 + k\n            if (arr(idx) .ne. idx + ieor(i, j * 3) * k + ior(i, j * 5) * k) then\n-              call abort\n+              STOP 6\n            end if\n         end do\n      end do\n@@ -219,7 +219,7 @@ subroutine t7()\n   !$acc end parallel\n \n   do i = 0, 32 * 32 - 1\n-     if (arr(i) .ne. i + ieor(i / 32, mod(i, 32) * 3)) call abort\n+     if (arr(i) .ne. i + ieor(i / 32, mod(i, 32) * 3)) STOP 7\n   end do\n end subroutine t7\n \n@@ -253,7 +253,7 @@ subroutine t8()\n      do j = 0, 32 -1\n         do k = 0, 32 - 1\n            idx = i * 1024 + j * 32 + k\n-           if (arr(idx) .ne. idx + ieor(i, j * 3) * k) call abort\n+           if (arr(idx) .ne. idx + ieor(i, j * 3) * k) STOP 8\n         end do\n      end do\n   end do\n@@ -300,7 +300,7 @@ subroutine t9()\n         do k = 0, 32 - 1\n            idx = i * 1024 + j * 32 + k\n            if (arr(idx) .ne. idx + ieor(i, j * 3) * k + ior(i, j * 5) * k) then\n-              call abort\n+              STOP 9\n            end if\n         end do\n      end do\n@@ -345,7 +345,7 @@ subroutine t10()\n         do k = 0, 32 - 1\n            idx = i * 1024 + j * 32 + k\n            if (arr(idx) .ne. idx + ieor(i, j * 3) * k + ior(i, j * 5) * k) then\n-              call abort\n+              STOP 10\n            end if\n         end do\n      end do\n@@ -393,7 +393,7 @@ subroutine t11()\n         do k = 0, 32 - 1\n            idx = i * 1024 + j * 32 + k\n            if (arr(idx) .ne. idx + ieor(i, j * 3) * k + ior(i, j * 5) * k) then\n-              call abort\n+              STOP 11\n            end if\n         end do\n      end do\n@@ -442,7 +442,7 @@ subroutine t12()\n         do k = 0, 32 - 1\n            idx = i * 1024 + j * 32 + k\n            if (arr(idx) .ne. idx + ieor(i, j * 3) * k + ior(i, j * 5) * k) then\n-              call abort\n+              STOP 12\n            end if\n         end do\n      end do\n@@ -486,7 +486,7 @@ subroutine t13()\n         do k = 0, 32 - 1\n            idx = i * 1024 + j * 32 + k\n            if (arr(idx) .ne. idx + ieor(i, j * 3) * k + ior(i, j * 5) * k) then\n-              call abort\n+              STOP 13\n            end if\n         end do\n      end do\n@@ -520,7 +520,7 @@ subroutine t14()\n   !$acc end parallel\n \n   do i = 1, n\n-    if (arr(i) .ne. (3 + i * 2)) call abort\n+    if (arr(i) .ne. (3 + i * 2)) STOP 14\n   end do\n \n end subroutine t14"}, {"sha": "c3a8a9cac1cd672c75b8bbf18088f3eabeb8f66b", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pset-1.f90", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpset-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpset-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpset-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -9,7 +9,7 @@ program test\n   integer, allocatable :: c3(:,:,:)\n \n   allocate (a1(5))\n-  if (.not.allocated (a1)) call abort()\n+  if (.not.allocated (a1)) STOP 1\n \n   a1 = 10\n \n@@ -21,16 +21,16 @@ program test\n   a1(5) = 5\n   !$acc end parallel\n \n-  if (a1(1) .ne. 1) call abort\n-  if (a1(2) .ne. 2) call abort\n-  if (a1(3) .ne. 3) call abort\n-  if (a1(4) .ne. 4) call abort\n-  if (a1(5) .ne. 5) call abort\n+  if (a1(1) .ne. 1) STOP 1\n+  if (a1(2) .ne. 2) STOP 2\n+  if (a1(3) .ne. 3) STOP 3\n+  if (a1(4) .ne. 4) STOP 4\n+  if (a1(5) .ne. 5) STOP 5\n \n   deallocate(a1)\n \n   allocate (a1(0:4))\n-  if (.not.allocated (a1)) call abort()\n+  if (.not.allocated (a1)) STOP 2\n \n   a1 = 10\n \n@@ -42,16 +42,16 @@ program test\n   a1(4) = 5\n   !$acc end parallel\n \n-  if (a1(0) .ne. 1) call abort\n-  if (a1(1) .ne. 2) call abort\n-  if (a1(2) .ne. 3) call abort\n-  if (a1(3) .ne. 4) call abort\n-  if (a1(4) .ne. 5) call abort\n+  if (a1(0) .ne. 1) STOP 6\n+  if (a1(1) .ne. 2) STOP 7\n+  if (a1(2) .ne. 3) STOP 8\n+  if (a1(3) .ne. 4) STOP 9\n+  if (a1(4) .ne. 5) STOP 10\n \n   deallocate(a1)\n \n   allocate (b2(5,5))\n-  if (.not.allocated (b2)) call abort()\n+  if (.not.allocated (b2)) STOP 3\n \n   b2 = 11\n \n@@ -63,16 +63,16 @@ program test\n   b2(5,5) = 5\n   !$acc end parallel\n \n-  if (b2(1,1) .ne. 1) call abort\n-  if (b2(2,2) .ne. 2) call abort\n-  if (b2(3,3) .ne. 3) call abort\n-  if (b2(4,4) .ne. 4) call abort\n-  if (b2(5,5) .ne. 5) call abort\n+  if (b2(1,1) .ne. 1) STOP 11\n+  if (b2(2,2) .ne. 2) STOP 12\n+  if (b2(3,3) .ne. 3) STOP 13\n+  if (b2(4,4) .ne. 4) STOP 14\n+  if (b2(5,5) .ne. 5) STOP 15\n \n   deallocate(b2)\n \n   allocate (b2(0:4,0:4))\n-  if (.not.allocated (b2)) call abort()\n+  if (.not.allocated (b2)) STOP 4\n \n   b2 = 11\n \n@@ -84,16 +84,16 @@ program test\n   b2(4,4) = 5\n   !$acc end parallel\n \n-  if (b2(0,0) .ne. 1) call abort\n-  if (b2(1,1) .ne. 2) call abort\n-  if (b2(2,2) .ne. 3) call abort\n-  if (b2(3,3) .ne. 4) call abort\n-  if (b2(4,4) .ne. 5) call abort\n+  if (b2(0,0) .ne. 1) STOP 16\n+  if (b2(1,1) .ne. 2) STOP 17\n+  if (b2(2,2) .ne. 3) STOP 18\n+  if (b2(3,3) .ne. 4) STOP 19\n+  if (b2(4,4) .ne. 5) STOP 20\n \n   deallocate(b2)\n \n   allocate (c3(5,5,5))\n-  if (.not.allocated (c3)) call abort()\n+  if (.not.allocated (c3)) STOP 5\n \n   c3 = 12\n \n@@ -105,16 +105,16 @@ program test\n   c3(5,5,5) = 5\n   !$acc end parallel\n \n-  if (c3(1,1,1) .ne. 1) call abort\n-  if (c3(2,2,2) .ne. 2) call abort\n-  if (c3(3,3,3) .ne. 3) call abort\n-  if (c3(4,4,4) .ne. 4) call abort\n-  if (c3(5,5,5) .ne. 5) call abort\n+  if (c3(1,1,1) .ne. 1) STOP 21\n+  if (c3(2,2,2) .ne. 2) STOP 22\n+  if (c3(3,3,3) .ne. 3) STOP 23\n+  if (c3(4,4,4) .ne. 4) STOP 24\n+  if (c3(5,5,5) .ne. 5) STOP 25\n \n   deallocate(c3)\n \n   allocate (c3(0:4,0:4,0:4))\n-  if (.not.allocated (c3)) call abort()\n+  if (.not.allocated (c3)) STOP 6\n \n   c3 = 12\n \n@@ -126,22 +126,22 @@ program test\n   c3(4,4,4) = 5\n   !$acc end parallel\n \n-  if (c3(0,0,0) .ne. 1) call abort\n-  if (c3(1,1,1) .ne. 2) call abort\n-  if (c3(2,2,2) .ne. 3) call abort\n-  if (c3(3,3,3) .ne. 4) call abort\n-  if (c3(4,4,4) .ne. 5) call abort\n+  if (c3(0,0,0) .ne. 1) STOP 26\n+  if (c3(1,1,1) .ne. 2) STOP 27\n+  if (c3(2,2,2) .ne. 3) STOP 28\n+  if (c3(3,3,3) .ne. 4) STOP 29\n+  if (c3(4,4,4) .ne. 5) STOP 30\n \n   deallocate(c3)\n \n   allocate (a1(5))\n-  if (.not.allocated (a1)) call abort()\n+  if (.not.allocated (a1)) STOP 7\n \n   allocate (b1(5))\n-  if (.not.allocated (b1)) call abort()\n+  if (.not.allocated (b1)) STOP 8\n \n   allocate (c1(5))\n-  if (.not.allocated (c1)) call abort()\n+  if (.not.allocated (c1)) STOP 9\n \n   a1 = 10\n   b1 = 3\n@@ -161,24 +161,24 @@ program test\n   b1(5) = c1(5)\n   !$acc end parallel\n \n-  if (b1(1) .ne. 10) call abort\n-  if (b1(2) .ne. 10) call abort\n-  if (b1(3) .ne. 10) call abort\n-  if (b1(4) .ne. 10) call abort\n-  if (b1(5) .ne. 10) call abort\n+  if (b1(1) .ne. 10) STOP 31\n+  if (b1(2) .ne. 10) STOP 32\n+  if (b1(3) .ne. 10) STOP 33\n+  if (b1(4) .ne. 10) STOP 34\n+  if (b1(5) .ne. 10) STOP 35\n \n   deallocate(a1)\n   deallocate(b1)\n   deallocate(c1)\n \n   allocate (a1(0:4))\n-  if (.not.allocated (a1)) call abort()\n+  if (.not.allocated (a1)) STOP 10\n \n   allocate (b1(0:4))\n-  if (.not.allocated (b1)) call abort()\n+  if (.not.allocated (b1)) STOP 11\n \n   allocate (c1(0:4))\n-  if (.not.allocated (c1)) call abort()\n+  if (.not.allocated (c1)) STOP 12\n \n   a1 = 10\n   b1 = 3\n@@ -198,18 +198,18 @@ program test\n   b1(4) = c1(4)\n   !$acc end parallel\n \n-  if (b1(0) .ne. 10) call abort\n-  if (b1(1) .ne. 10) call abort\n-  if (b1(2) .ne. 10) call abort\n-  if (b1(3) .ne. 10) call abort\n-  if (b1(4) .ne. 10) call abort\n+  if (b1(0) .ne. 10) STOP 36\n+  if (b1(1) .ne. 10) STOP 37\n+  if (b1(2) .ne. 10) STOP 38\n+  if (b1(3) .ne. 10) STOP 39\n+  if (b1(4) .ne. 10) STOP 40\n \n   deallocate(a1)\n   deallocate(b1)\n   deallocate(c1)\n \n   allocate (a1(5))\n-  if (.not.allocated (a1)) call abort()\n+  if (.not.allocated (a1)) STOP 13\n \n   a1 = 10\n \n@@ -218,11 +218,11 @@ program test\n   a1(3) = 3\n   !$acc end parallel\n \n-  if (a1(1) .ne. 10) call abort\n-  if (a1(2) .ne. 2) call abort\n-  if (a1(3) .ne. 3) call abort\n-  if (a1(4) .ne. 10) call abort\n-  if (a1(5) .ne. 10) call abort\n+  if (a1(1) .ne. 10) STOP 41\n+  if (a1(2) .ne. 2) STOP 42\n+  if (a1(3) .ne. 3) STOP 43\n+  if (a1(4) .ne. 10) STOP 44\n+  if (a1(5) .ne. 10) STOP 45\n \n   deallocate(a1)\n "}, {"sha": "764affdbd188781ce3af1b3e0e9dd614096a94e5", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-1.f90", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-1.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -58,10 +58,10 @@ program reduction_1\n      vresult = vresult + array(i)\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 1\n+  if (rw .ne. vresult) STOP 2\n+  if (rv .ne. vresult) STOP 3\n+  if (rc .ne. vresult) STOP 4\n \n   !\n   ! '*' reductions\n@@ -106,10 +106,10 @@ program reduction_1\n      vresult = vresult * array(i)\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 5\n+  if (rw .ne. vresult) STOP 6\n+  if (rv .ne. vresult) STOP 7\n+  if (rc .ne. vresult) STOP 8\n \n   !\n   ! 'max' reductions\n@@ -154,10 +154,10 @@ program reduction_1\n      vresult = max (vresult, array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 9\n+  if (rw .ne. vresult) STOP 10\n+  if (rv .ne. vresult) STOP 11\n+  if (rc .ne. vresult) STOP 12\n \n   !\n   ! 'min' reductions\n@@ -202,10 +202,10 @@ program reduction_1\n      vresult = min (vresult, array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 13\n+  if (rw .ne. vresult) STOP 14\n+  if (rv .ne. vresult) STOP 15\n+  if (rc .ne. vresult) STOP 16\n \n   !\n   ! 'iand' reductions\n@@ -250,10 +250,10 @@ program reduction_1\n      vresult = iand (vresult, array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 17\n+  if (rw .ne. vresult) STOP 18\n+  if (rv .ne. vresult) STOP 19\n+  if (rc .ne. vresult) STOP 20\n \n   !\n   ! 'ior' reductions\n@@ -298,10 +298,10 @@ program reduction_1\n      vresult = ior (vresult, array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 21\n+  if (rw .ne. vresult) STOP 22\n+  if (rv .ne. vresult) STOP 23\n+  if (rc .ne. vresult) STOP 24\n \n   !\n   ! 'ieor' reductions\n@@ -346,10 +346,10 @@ program reduction_1\n      vresult = ieor (vresult, array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 25\n+  if (rw .ne. vresult) STOP 26\n+  if (rv .ne. vresult) STOP 27\n+  if (rc .ne. vresult) STOP 28\n \n   !\n   ! '.and.' reductions\n@@ -394,10 +394,10 @@ program reduction_1\n      lvresult = lvresult .and. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 29\n+  if (lrw .neqv. lvresult) STOP 30\n+  if (lrv .neqv. lvresult) STOP 31\n+  if (lrc .neqv. lvresult) STOP 32\n \n   !\n   ! '.or.' reductions\n@@ -442,10 +442,10 @@ program reduction_1\n      lvresult = lvresult .or. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 33\n+  if (lrw .neqv. lvresult) STOP 34\n+  if (lrv .neqv. lvresult) STOP 35\n+  if (lrc .neqv. lvresult) STOP 36\n \n   !\n   ! '.eqv.' reductions\n@@ -490,10 +490,10 @@ program reduction_1\n      lvresult = lvresult .eqv. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 37\n+  if (lrw .neqv. lvresult) STOP 38\n+  if (lrv .neqv. lvresult) STOP 39\n+  if (lrc .neqv. lvresult) STOP 40\n \n   !\n   ! '.neqv.' reductions\n@@ -538,8 +538,8 @@ program reduction_1\n      lvresult = lvresult .neqv. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 41\n+  if (lrw .neqv. lvresult) STOP 42\n+  if (lrv .neqv. lvresult) STOP 43\n+  if (lrc .neqv. lvresult) STOP 44\n end program reduction_1"}, {"sha": "d3401c8fd0449aef488ad68f22e05fc6e961b304", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-2.f90", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-2.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -59,10 +59,10 @@ program reduction_2\n      vresult = vresult + array(i)\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 1\n+  if (rw .ne. vresult) STOP 2\n+  if (rv .ne. vresult) STOP 3\n+  if (rc .ne. vresult) STOP 4\n \n   !\n   ! '*' reductions\n@@ -107,10 +107,10 @@ program reduction_2\n      vresult = vresult * array(i)\n   end do\n \n-  if (abs (rg - vresult) .ge. e) call abort\n-  if (abs (rw - vresult) .ge. e) call abort\n-  if (abs (rv - vresult) .ge. e) call abort\n-  if (abs (rc - vresult) .ge. e) call abort\n+  if (abs (rg - vresult) .ge. e) STOP 5\n+  if (abs (rw - vresult) .ge. e) STOP 6\n+  if (abs (rv - vresult) .ge. e) STOP 7\n+  if (abs (rc - vresult) .ge. e) STOP 8\n \n   !\n   ! 'max' reductions\n@@ -155,10 +155,10 @@ program reduction_2\n      vresult = max (vresult, array(i))\n   end do\n \n-  if (abs (rg - vresult) .ge. e) call abort\n-  if (abs (rw - vresult) .ge. e) call abort\n-  if (abs (rg - vresult) .ge. e) call abort\n-  if (abs (rc - vresult) .ge. e) call abort\n+  if (abs (rg - vresult) .ge. e) STOP 9\n+  if (abs (rw - vresult) .ge. e) STOP 10\n+  if (abs (rg - vresult) .ge. e) STOP 11\n+  if (abs (rc - vresult) .ge. e) STOP 12\n \n   !\n   ! 'min' reductions\n@@ -203,10 +203,10 @@ program reduction_2\n      vresult = min (vresult, array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 13\n+  if (rv .ne. vresult) STOP 14\n+  if (rw .ne. vresult) STOP 15\n+  if (rc .ne. vresult) STOP 16\n \n   !\n   ! '.and.' reductions\n@@ -251,10 +251,10 @@ program reduction_2\n      lvresult = lvresult .and. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 17\n+  if (lrw .neqv. lvresult) STOP 18\n+  if (lrv .neqv. lvresult) STOP 19\n+  if (lrc .neqv. lvresult) STOP 20\n \n   !\n   ! '.or.' reductions\n@@ -299,10 +299,10 @@ program reduction_2\n      lvresult = lvresult .or. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 21\n+  if (lrw .neqv. lvresult) STOP 22\n+  if (lrv .neqv. lvresult) STOP 23\n+  if (lrc .neqv. lvresult) STOP 24\n \n   !\n   ! '.eqv.' reductions\n@@ -347,10 +347,10 @@ program reduction_2\n      lvresult = lvresult .eqv. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 25\n+  if (lrw .neqv. lvresult) STOP 26\n+  if (lrv .neqv. lvresult) STOP 27\n+  if (lrc .neqv. lvresult) STOP 28\n \n   !\n   ! '.neqv.' reductions\n@@ -395,8 +395,8 @@ program reduction_2\n      lvresult = lvresult .neqv. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 29\n+  if (lrw .neqv. lvresult) STOP 30\n+  if (lrv .neqv. lvresult) STOP 31\n+  if (lrc .neqv. lvresult) STOP 32\n end program reduction_2"}, {"sha": "6f310445e04dce3f4150a1d5cbf5773617252f81", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-3.f90", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-3.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -59,10 +59,10 @@ program reduction_3\n      vresult = vresult + array(i)\n   end do\n \n-  if (abs (rg - vresult) .ge. e) call abort\n-  if (abs (rw - vresult) .ge. e) call abort\n-  if (abs (rv - vresult) .ge. e) call abort\n-  if (abs (rc - vresult) .ge. e) call abort\n+  if (abs (rg - vresult) .ge. e) STOP 1\n+  if (abs (rw - vresult) .ge. e) STOP 2\n+  if (abs (rv - vresult) .ge. e) STOP 3\n+  if (abs (rc - vresult) .ge. e) STOP 4\n \n   !\n   ! '*' reductions\n@@ -107,10 +107,10 @@ program reduction_3\n      vresult = vresult * array(i)\n   end do\n \n-  if (abs (rg - vresult) .ge. e) call abort\n-  if (abs (rw - vresult) .ge. e) call abort\n-  if (abs (rv - vresult) .ge. e) call abort\n-  if (abs (rc - vresult) .ge. e) call abort\n+  if (abs (rg - vresult) .ge. e) STOP 5\n+  if (abs (rw - vresult) .ge. e) STOP 6\n+  if (abs (rv - vresult) .ge. e) STOP 7\n+  if (abs (rc - vresult) .ge. e) STOP 8\n \n   !\n   ! 'max' reductions\n@@ -155,10 +155,10 @@ program reduction_3\n      vresult = max (vresult, array(i))\n   end do\n \n-  if (abs (rg - vresult) .ge. e) call abort\n-  if (abs (rw - vresult) .ge. e) call abort\n-  if (abs (rv - vresult) .ge. e) call abort\n-  if (abs (rc - vresult) .ge. e) call abort\n+  if (abs (rg - vresult) .ge. e) STOP 9\n+  if (abs (rw - vresult) .ge. e) STOP 10\n+  if (abs (rv - vresult) .ge. e) STOP 11\n+  if (abs (rc - vresult) .ge. e) STOP 12\n \n   !\n   ! 'min' reductions\n@@ -203,10 +203,10 @@ program reduction_3\n      vresult = min (vresult, array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 13\n+  if (rw .ne. vresult) STOP 14\n+  if (rv .ne. vresult) STOP 15\n+  if (rc .ne. vresult) STOP 16\n \n   !\n   ! '.and.' reductions\n@@ -251,10 +251,10 @@ program reduction_3\n      lvresult = lvresult .and. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 17\n+  if (lrw .neqv. lvresult) STOP 18\n+  if (lrv .neqv. lvresult) STOP 19\n+  if (lrc .neqv. lvresult) STOP 20\n \n   !\n   ! '.or.' reductions\n@@ -299,10 +299,10 @@ program reduction_3\n      lvresult = lvresult .or. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 21\n+  if (lrw .neqv. lvresult) STOP 22\n+  if (lrv .neqv. lvresult) STOP 23\n+  if (lrc .neqv. lvresult) STOP 24\n \n   !\n   ! '.eqv.' reductions\n@@ -347,10 +347,10 @@ program reduction_3\n      lvresult = lvresult .eqv. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 25\n+  if (lrw .neqv. lvresult) STOP 26\n+  if (lrv .neqv. lvresult) STOP 27\n+  if (lrc .neqv. lvresult) STOP 28\n \n   !\n   ! '.neqv.' reductions\n@@ -395,8 +395,8 @@ program reduction_3\n      lvresult = lvresult .neqv. (array(i) .ge. 5)\n   end do\n \n-  if (lrg .neqv. lvresult) call abort\n-  if (lrw .neqv. lvresult) call abort\n-  if (lrv .neqv. lvresult) call abort\n-  if (lrc .neqv. lvresult) call abort\n+  if (lrg .neqv. lvresult) STOP 29\n+  if (lrw .neqv. lvresult) STOP 30\n+  if (lrv .neqv. lvresult) STOP 31\n+  if (lrc .neqv. lvresult) STOP 32\n end program reduction_3"}, {"sha": "c93c315b861a2cdd390d41775ebdd334e80f68f8", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-4.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc24e32b92adf9d6959afd21431b1961f2f7f90/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-4.f90?ref=bfc24e32b92adf9d6959afd21431b1961f2f7f90", "patch": "@@ -57,10 +57,10 @@ program reduction_4\n      vresult = vresult + REAL(array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 1\n+  if (rw .ne. vresult) STOP 2\n+  if (rv .ne. vresult) STOP 3\n+  if (rc .ne. vresult) STOP 4\n \n   !\n   ! '*' reductions\n@@ -105,8 +105,8 @@ program reduction_4\n      vresult = vresult * REAL(array(i))\n   end do\n \n-  if (rg .ne. vresult) call abort\n-  if (rw .ne. vresult) call abort\n-  if (rv .ne. vresult) call abort\n-  if (rc .ne. vresult) call abort\n+  if (rg .ne. vresult) STOP 5\n+  if (rw .ne. vresult) STOP 6\n+  if (rv .ne. vresult) STOP 7\n+  if (rc .ne. vresult) STOP 8\n end program reduction_4"}]}