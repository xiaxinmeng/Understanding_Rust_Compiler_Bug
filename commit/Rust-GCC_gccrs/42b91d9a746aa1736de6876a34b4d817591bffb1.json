{"sha": "42b91d9a746aa1736de6876a34b4d817591bffb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJiOTFkOWE3NDZhYTE3MzZkZTY4NzZhMzRiNGQ4MTc1OTFiZmZiMQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-10-07T20:27:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-24T10:16:05Z"}, "message": "[Ada] Reuse In_Same_List where possible\n\ngcc/ada/\n\n\t* contracts.adb, freeze.adb, sem_ch12.adb, sem_prag.adb: Reuse\n\tIn_Same_List.", "tree": {"sha": "dc01dc09769e9ae08af894a09f4aa44f038eab63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc01dc09769e9ae08af894a09f4aa44f038eab63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42b91d9a746aa1736de6876a34b4d817591bffb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b91d9a746aa1736de6876a34b4d817591bffb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42b91d9a746aa1736de6876a34b4d817591bffb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b91d9a746aa1736de6876a34b4d817591bffb1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45ce2307851e8e7fc653137253c8782f734c5697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ce2307851e8e7fc653137253c8782f734c5697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45ce2307851e8e7fc653137253c8782f734c5697"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "3ef607f21d6f24415c80c0e2aa6521a231126a69", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b91d9a746aa1736de6876a34b4d817591bffb1/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b91d9a746aa1736de6876a34b4d817591bffb1/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=42b91d9a746aa1736de6876a34b4d817591bffb1", "patch": "@@ -2559,8 +2559,7 @@ package body Contracts is\n               Was_Expression_Function (Body_Decl)\n                 and then Sloc (Body_Id) /= Sloc (Subp_Id)\n                 and then In_Same_Source_Unit (Body_Id, Subp_Id)\n-                and then List_Containing (Body_Decl) /=\n-                         List_Containing (Subp_Decl);\n+                and then not In_Same_List (Body_Decl, Subp_Decl);\n \n             if Present (Items) then\n                Prag := Pre_Post_Conditions (Items);"}, {"sha": "8ccc54e63337ed77661c7fc8916fbd1ea956730b", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b91d9a746aa1736de6876a34b4d817591bffb1/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b91d9a746aa1736de6876a34b4d817591bffb1/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=42b91d9a746aa1736de6876a34b4d817591bffb1", "patch": "@@ -2007,7 +2007,7 @@ package body Freeze is\n                                           | N_Task_Body\n                                           | N_Body_Stub\n                     and then\n-                      List_Containing (After) = List_Containing (Parent (E))\n+                      In_Same_List (After, Parent (E))\n                   then\n                      Error_Msg_Sloc := Sloc (Next (After));\n                      Error_Msg_NE"}, {"sha": "ab68f7203383f43059a60cfa15f9d2e2297c57d3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b91d9a746aa1736de6876a34b4d817591bffb1/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b91d9a746aa1736de6876a34b4d817591bffb1/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=42b91d9a746aa1736de6876a34b4d817591bffb1", "patch": "@@ -8802,7 +8802,7 @@ package body Sem_Ch12 is\n \n       while not Is_List_Member (P1)\n         or else not Is_List_Member (P2)\n-        or else List_Containing (P1) /= List_Containing (P2)\n+        or else not In_Same_List (P1, P2)\n       loop\n          P1 := True_Parent (P1);\n          P2 := True_Parent (P2);\n@@ -9092,8 +9092,7 @@ package body Sem_Ch12 is\n          --  after that of Parent_Inst. This relation is established by\n          --  comparing the Slocs of Parent_Inst freeze node and Inst.\n \n-         elsif List_Containing (Get_Unit_Instantiation_Node (Par)) =\n-               List_Containing (Inst_Node)\n+         elsif In_Same_List (Get_Unit_Instantiation_Node (Par), Inst_Node)\n            and then Sloc (Freeze_Node (Par)) <= Sloc (Inst_Node)\n          then\n             Insert_Freeze_Node_For_Instance (Inst_Node, F_Node);\n@@ -9989,8 +9988,7 @@ package body Sem_Ch12 is\n                      --  the enclosing package, insert the freeze node after\n                      --  the body.\n \n-                     elsif List_Containing (Freeze_Node (Par)) =\n-                           List_Containing (Parent (N))\n+                     elsif In_Same_List (Freeze_Node (Par), Parent (N))\n                        and then Sloc (Freeze_Node (Par)) < Sloc (Parent (N))\n                      then\n                         Insert_Freeze_Node_For_Instance"}, {"sha": "8e36976bc9fb23cce059bc55886ecce07dd2b351", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b91d9a746aa1736de6876a34b4d817591bffb1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b91d9a746aa1736de6876a34b4d817591bffb1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=42b91d9a746aa1736de6876a34b4d817591bffb1", "patch": "@@ -6090,7 +6090,7 @@ package body Sem_Prag is\n                      --  The group and the current pragma are not in the same\n                      --  declarative or statement list.\n \n-                     if List_Containing (Stmt) /= List_Containing (N) then\n+                     if not In_Same_List (Stmt, N) then\n                         Grouping_Error (Stmt);\n \n                      --  Try to reach the current pragma from the first pragma\n@@ -9885,7 +9885,7 @@ package body Sem_Prag is\n                   --  the test will have been applied to the original generic.\n \n                   elsif Nkind (Decl) in N_Formal_Subprogram_Declaration\n-                    and then List_Containing (Decl) = List_Containing (N)\n+                    and then In_Same_List (Decl, N)\n                     and then not In_Instance\n                   then\n                      Error_Msg_N"}]}