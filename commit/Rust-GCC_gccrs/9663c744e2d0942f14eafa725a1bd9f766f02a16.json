{"sha": "9663c744e2d0942f14eafa725a1bd9f766f02a16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2M2M3NDRlMmQwOTQyZjE0ZWFmYTcyNWExYmQ5Zjc2NmYwMmExNg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-03T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-03T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "fe23f36c01c596cf022cf448327eb99310c39052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe23f36c01c596cf022cf448327eb99310c39052"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9663c744e2d0942f14eafa725a1bd9f766f02a16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9663c744e2d0942f14eafa725a1bd9f766f02a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9663c744e2d0942f14eafa725a1bd9f766f02a16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9663c744e2d0942f14eafa725a1bd9f766f02a16/comments", "author": null, "committer": null, "parents": [{"sha": "d5ba2eaf7032f234fdcf11d9cfc513ce7be0a255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ba2eaf7032f234fdcf11d9cfc513ce7be0a255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ba2eaf7032f234fdcf11d9cfc513ce7be0a255"}], "stats": {"total": 122, "additions": 121, "deletions": 1}, "files": [{"sha": "bec47001d778b47b5eccc45593280fc639ebd7b8", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663c744e2d0942f14eafa725a1bd9f766f02a16/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663c744e2d0942f14eafa725a1bd9f766f02a16/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=9663c744e2d0942f14eafa725a1bd9f766f02a16", "patch": "@@ -1,3 +1,7 @@\n+2021-06-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* MAINTAINERS: Add DCO section.\n+\n 2021-05-31  Indu Bhagat  <indu.bhagat@oracle.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "5d118a5fca656e3d7d8d978b2b47afbd1af32d46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663c744e2d0942f14eafa725a1bd9f766f02a16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663c744e2d0942f14eafa725a1bd9f766f02a16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9663c744e2d0942f14eafa725a1bd9f766f02a16", "patch": "@@ -1,3 +1,67 @@\n+2021-06-02  Christoph Muellner  <cmuellner@gcc.gnu.org>\n+\n+\tPR rtl-optimization/100264\n+\t* ree.c (get_sub_rtx): Ignore SET expressions without register\n+\tdestinations and remove assertion, as it is not valid anymore\n+\twith this new behaviour.\n+\t(merge_def_and_ext): Eliminate destination check for register\n+\tas such SET expressions can't occur anymore.\n+\t(combine_reaching_defs): Likewise.\n+\n+2021-06-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/100841\n+\t* config/xtensa/xtensa.h (LEAF_REG_REMAP): Cast REGNO to int to avoid\n+\t-Wtype-limits warnings.\n+\t(DWARF_FRAME_REGISTER): Rewrite into ternary operator with addition\n+\tin operands to avoid -Wsign-compare warnings.\n+\n+2021-06-02  Pat Haugen  <pthaugen@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-logue.c (rs6000_emit_prologue): Use\n+\tgen_frame_store.\n+\n+2021-06-02  Vineet Gupta  <vgupta@synopsys.com>\n+\n+\t* config/arc/arc.h (TARGET_CPU_DEFAULT): Change to hs38_linux.\n+\n+2021-06-02  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* config/s390/s390.md(*ashrdi3_31<setcc><cconly>): Use a single\n+\tconstraint.\n+\t* config/s390/subst.md(cconly_subst): Use a single constraint\n+\tin (match_scratch).\n+\n+2021-06-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf.h: Use auto_vec for memory_access_types.\n+\n+2021-06-02  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* config/h8300/h8300-protos.h (compute_a_shift_length): Drop unused\n+\targument from prototype.\n+\t(output_logical_op): Add rtx_code argument.\n+\t(compute_logical_op_length): Likewise.\n+\t* config/h8300/h8300.c (h8300_and_costs): Pass additional argument\n+\tto compute_a_shift_length.\n+\t(output_logical_op); New argument with the rtx code rather than\n+\textracting it from an operand.  Handle QImode too.\n+\t(compute_logical_op_length): Similary.\n+\t(compute_a_shift_length): Drop unused argument.\n+\t* config/h8300/h8300.md (logicals): New code iterator.\n+\t* config/h8300/logical.md (<code><mode>3 expander): Combine\n+\tthe \"and\" expander with the \"ior\"/\"xor\" expander.\n+\t(bclr<mode>msx): Combine the QI/HI mode patterns.\n+\t(<logical><mode>3 insns): Use code iterator rather than match_operator.\n+\tHandle QImode as well.   Update call to output_logical_op and\n+\tcompute_logical_op_length to pass in rtx_code\n+\tFix split condition on all define_insn_and_split patterns.\n+\t(one_cmpl<mode>2<cczn>): Use <cczn> to support both clobbering\n+\tthe flags and setting ZN via existing define_subst.\n+\t* config/h8300/shiftrotate.md: Drop unused argument from\n+\tcalls to compute_a_shift_length.\n+\tSigned-off-by: Jeff Law <jeffreyalaw@gmail.com>\n+\n 2021-06-01  Andrew Pinski  <apinski@marvell.com>\n \n \tPR tree-optimization/25290"}, {"sha": "d18547857b149969895f8bd2828c3723fec43acc", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663c744e2d0942f14eafa725a1bd9f766f02a16/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663c744e2d0942f14eafa725a1bd9f766f02a16/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9663c744e2d0942f14eafa725a1bd9f766f02a16", "patch": "@@ -1 +1 @@\n-20210602\n+20210603"}, {"sha": "e40cc6bd7952691b8a386d909927366410ed0972", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663c744e2d0942f14eafa725a1bd9f766f02a16/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663c744e2d0942f14eafa725a1bd9f766f02a16/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9663c744e2d0942f14eafa725a1bd9f766f02a16", "patch": "@@ -1,3 +1,11 @@\n+2021-06-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100838\n+\t* call.c (convert_like_internal): Clear tf_no_cleanup when\n+\trecursing.\n+\t(build_user_type_conversion_1): Only add ck_rvalue if\n+\tLOOKUP_ONLYCONVERTING.\n+\n 2021-06-01  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/65816"}, {"sha": "a8bb582f70aa58abf02eaf4472e10e99065bb557", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663c744e2d0942f14eafa725a1bd9f766f02a16/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663c744e2d0942f14eafa725a1bd9f766f02a16/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9663c744e2d0942f14eafa725a1bd9f766f02a16", "patch": "@@ -1,3 +1,22 @@\n+2021-06-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100838\n+\t* g++.dg/init/no-elide2.C: New test.\n+\n+2021-06-02  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* gcc.target/s390/ashr.c: New test.\n+\n+2021-06-02  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/99928\n+\t* gfortran.dg/gomp/taskloop-2.f90: New.\n+\n+2021-06-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/ext/builtin-shufflevector-1.C: Add -Wno-psabi -w to\n+\tdg-options.\n+\n 2021-06-01  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/65816"}, {"sha": "834f00c862b15841fd6ccf010d79892e5a7ffd9f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663c744e2d0942f14eafa725a1bd9f766f02a16/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663c744e2d0942f14eafa725a1bd9f766f02a16/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9663c744e2d0942f14eafa725a1bd9f766f02a16", "patch": "@@ -1,3 +1,28 @@\n+2021-06-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100863\n+\tPR libstdc++/65816\n+\t* include/bits/hashtable_policy.h (_Hashtable_ebo_helper):\n+\tValue-initialize subobject.\n+\t* testsuite/23_containers/unordered_map/allocator/default_init.cc:\n+\tRemove XFAIL.\n+\t* testsuite/23_containers/unordered_set/allocator/default_init.cc:\n+\tRemove XFAIL.\n+\n+2021-06-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/96088\n+\t* testsuite/23_containers/unordered_map/96088.cc: Adjust\n+\texpected number of allocations.\n+\t* testsuite/23_containers/unordered_set/96088.cc: Likewise.\n+\n+2021-06-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxxis29124.xml: Improve punctuation.\n+\t* doc/xml/manual/status_cxxtr1.xml: Likewise.\n+\t* doc/xml/manual/status_cxxtr24733.xml: Likewise.\n+\t* doc/html/*: Regenerate.\n+\n 2021-06-01  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/65816"}]}