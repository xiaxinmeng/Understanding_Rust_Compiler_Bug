{"sha": "40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3NDVlZWNhZjJhOTU5NjhjOTFmMmUzZDQyZDJlMGYwYjBjZDE0ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-11-17T17:39:18Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-11-17T17:39:18Z"}, "message": "i386.md (divmodsi4): Rewrite to expander.\n\nMon Nov 15 22:45:39 CET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n\t* i386.md (divmodsi4): Rewrite to expander.\n\t(*divmodsi4_nocltd): New.\n\t(*divmodsi4_cltd): New.\n\t(divmodsi4 splitter): Handle the case when input comes in edx.\n\t(udivmodhi4): Do not use constraints in exander.\n\t(ashrsi3_31): Conditionize by TARGET_USE_CLTD.\n\nFrom-SVN: r30555", "tree": {"sha": "399a9d29939ec1b9cac154e856247fcfb06c12fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/399a9d29939ec1b9cac154e856247fcfb06c12fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e/comments", "author": null, "committer": null, "parents": [{"sha": "75e3fbdfe8b214be61c7f987fbb264d033b4aca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75e3fbdfe8b214be61c7f987fbb264d033b4aca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75e3fbdfe8b214be61c7f987fbb264d033b4aca7"}], "stats": {"total": 77, "additions": 57, "deletions": 20}, "files": [{"sha": "58c33f12680c704f29c416081bd1b4137fd46e01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e", "patch": "@@ -1,3 +1,11 @@\n+Mon Nov 15 22:45:39 CET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n+\t* i386.md (divmodsi4): Rewrite to expander.\n+\t(*divmodsi4_nocltd): New.\n+\t(*divmodsi4_cltd): New.\n+\t(divmodsi4 splitter): Handle the case when input comes in edx.\n+\t(udivmodhi4): Do not use constraints in exander.\n+\t(ashrsi3_31): Conditionize by TARGET_USE_CLTD.\n+\n 1999-11-17  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* dwarf2out.c (push_decl_scope): Still use decl_scope_depth - 1"}, {"sha": "82553cf043d4e85c316a5747e45519a79037d117", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 49, "deletions": 20, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=40745eecaf2a95968c91f2e3d42d2e0f0b0cd14e", "patch": "@@ -3825,25 +3825,48 @@\n   \"\")\n \f\n ;; Remainder instructions.\n+(define_expand \"divmodsi4\"\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t   (div:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t   (match_operand:SI 2 \"nonimmediate_operand\" \"\")))\n+\t      (set (match_operand:SI 3 \"register_operand\" \"\")\n+\t\t   (mod:SI (match_dup 1) (match_dup 2)))\n+\t      (clobber (reg:CC 17))])]\n+  \"\"\n+  \"\")\n+\n+;; Allow to come the parameter in eax or edx to avoid extra moves.\n+;; Penalize eax case sligthly because it results in worse scheduling\n+;; of code.\n+(define_insn \"*divmodsi4_nocltd\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=&a,?a\")\n+\t(div:SI (match_operand:SI 2 \"register_operand\" \"1,0\")\n+\t\t(match_operand:SI 3 \"nonimmediate_operand\" \"rm,rm\")))\n+   (set (match_operand:SI 1 \"register_operand\" \"=&d,&d\")\n+\t(mod:SI (match_dup 2) (match_dup 3)))\n+   (clobber (reg:CC 17))]\n+  \"!optimize_size && !TARGET_USE_CLTD\"\n+  \"#\"\n+  [(set_attr \"type\" \"multi\")])\n \n-(define_insn \"divmodsi4\"\n+(define_insn \"*divmodsi4_cltd\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n-\t(div:SI (match_operand:SI 1 \"register_operand\" \"A\")\n-\t\t(match_operand:SI 2 \"nonimmediate_operand\" \"rm\")))\n-   (set (match_operand:SI 3 \"register_operand\" \"=&d\")\n-\t(mod:SI (match_dup 1) (match_dup 2)))\n+\t(div:SI (match_operand:SI 2 \"register_operand\" \"a\")\n+\t\t(match_operand:SI 3 \"nonimmediate_operand\" \"rm\")))\n+   (set (match_operand:SI 1 \"register_operand\" \"=&d\")\n+\t(mod:SI (match_dup 2) (match_dup 3)))\n    (clobber (reg:CC 17))]\n-  \"\"\n-  \"{cltd|cdq}\\;idiv{l}\\\\t%2\"\n+  \"optimize_size || TARGET_USE_CLTD\"\n+  \"#\"\n   [(set_attr \"type\" \"multi\")])\n \n (define_insn \"*divmodsi_noext\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n-\t(div:SI (match_operand:SI 1 \"register_operand\" \"A\")\n+\t(div:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t(match_operand:SI 2 \"nonimmediate_operand\" \"rm\")))\n    (set (match_operand:SI 3 \"register_operand\" \"=d\")\n \t(mod:SI (match_dup 1) (match_dup 2)))\n-   (use (match_dup 3))\n+   (use (match_operand:SI 4 \"register_operand\" \"3\"))\n    (clobber (reg:CC 17))]\n   \"\"\n   \"idiv{l}\\\\t%2\"\n@@ -3862,23 +3885,29 @@\n \t\t   (ashiftrt:SI (match_dup 4) (const_int 31)))\n \t      (clobber (reg:CC 17))])\n    (parallel [(set (match_dup 0)\n-\t           (div:SI (match_dup 1) (match_dup 2)))\n+\t           (div:SI (reg:SI 0) (match_dup 2)))\n \t      (set (match_dup 3)\n-\t\t   (mod:SI (match_dup 1) (match_dup 2)))\n+\t\t   (mod:SI (reg:SI 0) (match_dup 2)))\n \t      (use (match_dup 3))\n \t      (clobber (reg:CC 17))])]\n   \"\n {\n   /* Avoid use of cltd in favour of a mov+shift.  */\n-  if (TARGET_PENTIUM && !optimize_size)\n+  if (!TARGET_USE_CLTD && !optimize_size)\n     {\n-      emit_move_insn (operands[3], operands[1]);\n+      if (true_regnum (operands[1]))\n+        emit_move_insn (operands[0], operands[1]);\n+      else\n+\temit_move_insn (operands[3], operands[1]);\n       operands[4] = operands[3];\n     }\n   else\n-    operands[4] = operands[1];\n+    {\n+      if (true_regnum (operands[1]))\n+\tabort();\n+      operands[4] = operands[1];\n+    }\n }\")\n-\n ;; %%% Split me.\n (define_insn \"divmodhi4\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n@@ -3936,10 +3965,10 @@\n (define_expand \"udivmodhi4\"\n   [(parallel [(set (match_dup 4) (const_int 0))\n \t      (clobber (reg:CC 17))])\n-   (parallel [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n-\t\t   (udiv:HI (match_operand:HI 1 \"register_operand\" \"0\")\n-\t\t \t    (match_operand:HI 2 \"nonimmediate_operand\" \"rm\")))\n-\t      (set (match_operand:HI 3 \"register_operand\" \"=&d\")\n+   (parallel [(set (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t   (udiv:HI (match_operand:HI 1 \"register_operand\" \"\")\n+\t\t \t    (match_operand:HI 2 \"nonimmediate_operand\" \"\")))\n+\t      (set (match_operand:HI 3 \"register_operand\" \"\")\n \t   \t   (umod:HI (match_dup 1) (match_dup 2)))\n \t      (use (match_dup 4))\n \t      (clobber (reg:CC 17))])]\n@@ -5432,7 +5461,7 @@\n \t(ashiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"*a,0\")\n \t\t     (match_operand:SI 2 \"const_int_operand\" \"i,i\")))\n    (clobber (reg:CC 17))]\n-  \"INTVAL (operands[2]) == 31\"\n+  \"INTVAL (operands[2]) == 31 && TARGET_USE_CLTD\"\n   \"@\n    {cltd|cdq}\n    sar{l}\\\\t{%2, %0|%0, %2}\""}]}