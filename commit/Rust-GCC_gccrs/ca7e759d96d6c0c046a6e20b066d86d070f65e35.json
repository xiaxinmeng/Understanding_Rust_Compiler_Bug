{"sha": "ca7e759d96d6c0c046a6e20b066d86d070f65e35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E3ZTc1OWQ5NmQ2YzBjMDQ2YTZlMjBiMDY2ZDg2ZDA3MGY2NWUzNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-02-26T21:28:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-02-26T21:28:08Z"}, "message": "re PR c++/59231 (gcc misses [-Werror=sign-compare] when inside a template)\n\n\tPR c++/59231\n\tPR c++/11586\n\tPR c++/14710\n\tPR c++/57132\ngcc/\n\t* c-common.c (shorten_compare): Don't check\n\tc_inhibit_evaluation_warnings.\ngcc/cp/\n\t* pt.c (struct warning_sentinel): New.\n\t(tsubst_copy_and_build): Use it instead of\n\tc_inhibit_evaluation_warnings.\n\nFrom-SVN: r208183", "tree": {"sha": "c3f90cee49d19ad5f42089ff43c724ba922a1322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3f90cee49d19ad5f42089ff43c724ba922a1322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca7e759d96d6c0c046a6e20b066d86d070f65e35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7e759d96d6c0c046a6e20b066d86d070f65e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca7e759d96d6c0c046a6e20b066d86d070f65e35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7e759d96d6c0c046a6e20b066d86d070f65e35/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91bb5cd9a60c4ecd438e57980b405d6abd076972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91bb5cd9a60c4ecd438e57980b405d6abd076972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91bb5cd9a60c4ecd438e57980b405d6abd076972"}], "stats": {"total": 80, "additions": 57, "deletions": 23}, "files": [{"sha": "088d158a083ef5bf7ed3a370a5a793b05aa2cae0", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ca7e759d96d6c0c046a6e20b066d86d070f65e35", "patch": "@@ -1,3 +1,10 @@\n+2014-02-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/59231\n+\tPR c++/11586\n+\t* c-common.c (shorten_compare): Don't check\n+\tc_inhibit_evaluation_warnings.\n+\n 2014-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/37743"}, {"sha": "abd96fbe9aea30d5acfe9429e91757a471da5700", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=ca7e759d96d6c0c046a6e20b066d86d070f65e35", "patch": "@@ -4218,8 +4218,7 @@ shorten_compare (location_t loc, tree *op0_ptr, tree *op1_ptr,\n \t  type = c_common_unsigned_type (type);\n \t}\n \n-      if (TREE_CODE (primop0) != INTEGER_CST\n-\t  && c_inhibit_evaluation_warnings == 0)\n+      if (TREE_CODE (primop0) != INTEGER_CST)\n \t{\n \t  if (val == truthvalue_false_node)\n \t    warning_at (loc, OPT_Wtype_limits,\n@@ -4299,7 +4298,6 @@ shorten_compare (location_t loc, tree *op0_ptr, tree *op1_ptr,\n \t     warning.  */\n \t  bool warn = \n \t    warn_type_limits && !in_system_header_at (loc)\n-\t    && c_inhibit_evaluation_warnings == 0\n \t    && !(TREE_CODE (primop0) == INTEGER_CST\n \t\t && !TREE_OVERFLOW (convert (c_common_signed_type (type),\n \t\t\t\t\t     primop0)))"}, {"sha": "41a0db6e13da9204ce7c33f7394b6a1c43d47f7b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca7e759d96d6c0c046a6e20b066d86d070f65e35", "patch": "@@ -1,5 +1,15 @@\n 2014-02-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/59231\n+\tPR c++/11586\n+\tPR c++/14710\n+\tPR c++/57132\n+\t* pt.c (struct warning_sentinel): New.\n+\t(tsubst_copy_and_build): Use it instead of\n+\tc_inhibit_evaluation_warnings.\n+\t* typeck.c (maybe_warn_about_useless_cast): Remove\n+\tc_inhibit_evaluation_warnings check.\n+\n \tPR c++/54440\n \t* pt.c (get_template_parm_index): New.\n \t(fixed_parameter_pack_p_1, fixed_parameter_pack_p): New."}, {"sha": "8126905941e4a929ca951a416c7c795070b9c05c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ca7e759d96d6c0c046a6e20b066d86d070f65e35", "patch": "@@ -1,4 +1,4 @@\n-/* Handle parameterized types (templates) for GNU C++.\n+/* Handle parameterized types (templates) for GNU -*- C++ -*-.\n    Copyright (C) 1992-2014 Free Software Foundation, Inc.\n    Written by Ken Raeburn (raeburn@cygnus.com) while at Watchmaker Computing.\n    Rewritten by Jason Merrill (jason@cygnus.com).\n@@ -14063,6 +14063,16 @@ tsubst_non_call_postfix_expression (tree t, tree args,\n   return t;\n }\n \n+/* Sentinel to disable certain warnings during template substitution.  */\n+\n+struct warning_sentinel {\n+  int &flag;\n+  int val;\n+  warning_sentinel(int& flag, bool suppress=true)\n+    : flag(flag), val(flag) { if (suppress) flag = 0; }\n+  ~warning_sentinel() { flag = val; }\n+};\n+\n /* Like tsubst but deals with expressions and performs semantic\n    analysis.  FUNCTION_P is true if T is the \"F\" in \"F (ARGS)\".  */\n \n@@ -14229,7 +14239,7 @@ tsubst_copy_and_build (tree t,\n \n \top = RECUR (TREE_OPERAND (t, 0));\n \n-\t++c_inhibit_evaluation_warnings;\n+\twarning_sentinel s(warn_useless_cast);\n \tswitch (TREE_CODE (t))\n \t  {\n \t  case CAST_EXPR:\n@@ -14250,7 +14260,6 @@ tsubst_copy_and_build (tree t,\n \t  default:\n \t    gcc_unreachable ();\n \t  }\n-\t--c_inhibit_evaluation_warnings;\n \n \tRETURN (r);\n       }\n@@ -14325,11 +14334,9 @@ tsubst_copy_and_build (tree t,\n     case MEMBER_REF:\n     case DOTSTAR_EXPR:\n       {\n-\ttree r;\n-\n-\t++c_inhibit_evaluation_warnings;\n-\n-\tr = build_x_binary_op\n+\twarning_sentinel s1(warn_type_limits);\n+\twarning_sentinel s2(warn_div_by_zero);\n+\ttree r = build_x_binary_op\n \t  (input_location, TREE_CODE (t),\n \t   RECUR (TREE_OPERAND (t, 0)),\n \t   (TREE_NO_WARNING (TREE_OPERAND (t, 0))\n@@ -14344,8 +14351,6 @@ tsubst_copy_and_build (tree t,\n \tif (EXPR_P (r) && TREE_NO_WARNING (t))\n \t  TREE_NO_WARNING (r) = TREE_NO_WARNING (t);\n \n-\t--c_inhibit_evaluation_warnings;\n-\n \tRETURN (r);\n       }\n \n@@ -14460,11 +14465,8 @@ tsubst_copy_and_build (tree t,\n \n     case MODOP_EXPR:\n       {\n-\ttree r;\n-\n-\t++c_inhibit_evaluation_warnings;\n-\n-\tr = build_x_modify_expr\n+\twarning_sentinel s(warn_div_by_zero);\n+\ttree r = build_x_modify_expr\n \t  (EXPR_LOCATION (t),\n \t   RECUR (TREE_OPERAND (t, 0)),\n \t   TREE_CODE (TREE_OPERAND (t, 1)),\n@@ -14479,8 +14481,6 @@ tsubst_copy_and_build (tree t,\n \tif (TREE_NO_WARNING (t))\n \t  TREE_NO_WARNING (r) = TREE_NO_WARNING (t);\n \n-\t--c_inhibit_evaluation_warnings;\n-\n \tRETURN (r);\n       }\n "}, {"sha": "1e14b638e6c39a6de90db62b6d3ecfba3a09bb31", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ca7e759d96d6c0c046a6e20b066d86d070f65e35", "patch": "@@ -6282,8 +6282,7 @@ void\n maybe_warn_about_useless_cast (tree type, tree expr, tsubst_flags_t complain)\n {\n   if (warn_useless_cast\n-      && complain & tf_warning\n-      && c_inhibit_evaluation_warnings == 0)\n+      && complain & tf_warning)\n     {\n       if (REFERENCE_REF_P (expr))\n \texpr = TREE_OPERAND (expr, 0);"}, {"sha": "041c052897665228f133fa714edc8ef636baa153", "filename": "gcc/testsuite/g++.dg/cilk-plus/AN/array_test2_tplt.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Farray_test2_tplt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Farray_test2_tplt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Farray_test2_tplt.cc?ref=ca7e759d96d6c0c046a6e20b066d86d070f65e35", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-fcilkplus\" } */\n+/* { dg-options \"-fcilkplus -Wno-overflow\" } */\n \n #include <cstdlib>\n #include <string.h>"}, {"sha": "b8591b4af413e94a94ca4717c5d3e6c705ee44d0", "filename": "gcc/testsuite/g++.dg/cpp0x/overflow1.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverflow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverflow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverflow1.C?ref=ca7e759d96d6c0c046a6e20b066d86d070f65e35", "patch": "@@ -1,3 +1,5 @@\n+// { dg-prune-output \"-Woverflow\" }\n+\n template <long long i>\n struct Fib\n {"}, {"sha": "51f13f6f953cd279b0800feb860fc379d3e5645f", "filename": "gcc/testsuite/g++.dg/warn/Wsign-compare-7.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7e759d96d6c0c046a6e20b066d86d070f65e35/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-7.C?ref=ca7e759d96d6c0c046a6e20b066d86d070f65e35", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/59231\n+// { dg-options \"-Wsign-compare\" }\n+\n+template<class X, class Y>\n+bool equals(X x, Y y)\n+{\n+    return (x == y);\t\t// { dg-warning \"signed\" }\n+}\n+\n+int main()\n+{\n+  unsigned long x = 2;\n+  signed int y = 2;\n+\n+  if(!equals (x, y))\n+    return 1;\n+  return 0;\n+}"}]}