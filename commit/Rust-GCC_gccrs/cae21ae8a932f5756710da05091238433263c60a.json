{"sha": "cae21ae8a932f5756710da05091238433263c60a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FlMjFhZThhOTMyZjU3NTY3MTBkYTA1MDkxMjM4NDMzMjYzYzYwYQ==", "commit": {"author": {"name": "Geoffrey Noer", "email": "noer@cygnus.com", "date": "1998-11-12T19:37:47Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-11-12T19:37:47Z"}, "message": "Jumbo patch from Geoff Noer to rename CYGWIN32 to CYGWIN.\n\nFrom-SVN: r23622", "tree": {"sha": "58da5367424fc46a1ddd1b556ccd78b739092602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58da5367424fc46a1ddd1b556ccd78b739092602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cae21ae8a932f5756710da05091238433263c60a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae21ae8a932f5756710da05091238433263c60a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae21ae8a932f5756710da05091238433263c60a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae21ae8a932f5756710da05091238433263c60a/comments", "author": null, "committer": null, "parents": [{"sha": "15fdcfe952242c2cdf26d6a86281782142162bba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15fdcfe952242c2cdf26d6a86281782142162bba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15fdcfe952242c2cdf26d6a86281782142162bba"}], "stats": {"total": 145, "additions": 90, "deletions": 55}, "files": [{"sha": "daeb7e97624d4492bc33b5c88c836f2c15ecee30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -1,3 +1,35 @@\n+Thu Nov 12 19:20:57 1998  Geoffrey Noer  <noer@cygnus.com>\n+\n+\t* i386/cygwin32.asm: Delete.\n+\t* i386/cygwin.asm: New file, renamed from cygwin32.asm.\n+\t* i386/cygwin32.h: Delete.\n+\t* i386/cygwin.h: New file, renamed from cygwin32.h.\n+\t* i386/t-cygwin32: Delete.\n+\t* i386/t-cygwin: New file, renamed from t-cygwin32.  Include\n+\tcygwin.asm instead of cygwin32.asm.  Remove \"32\" from comment.\n+\t* i386/x-cygwin32: Delete.\n+\t* i386/x-cygwin: New file, renamed from x-cygwin32.\n+\t* i386/xm-cygwin32: Delete.\n+\t* i386/xm-cygwin: New file, renamed from xm-cygwin32.  Use newly\n+\trenamed cygwin_ funcs for path translations.\n+\t* i386/win32.h: Define __CYGWIN__ when -mcygwin given.\n+\t* i386/winnt.c: Remove \"32\" from comment about cygwin.\n+\t* i386/mingw32.h: Fix references to cygwin32.h in light of above.\n+\t* rs6000/cygwin32.h: Delete.\n+\t* rs6000/cygwin.h: New file, renamed from cygwin32.h.  Add\n+\t-D__CYGWIN__ to CPP_PREDEFINES.\n+\t* rs6000/x-cygwin32: Delete.\n+\t* rs6000/x-cygwin: New file, renamed from x-cygwin32.\n+\t* rs6000/xm-cygwin32: Delete.\n+\t* rs6000/xm-cygwin: New file, renamed from xm-cygwin32.\n+\n+\t* configure.in: Check for cygwin* instead of cygwin32.  Account\n+\tfor the rename of cygwin-related config files to lose the \"32\"s.\n+\t* configure: Regenerate.\n+\n+\t* cccp.c, collect2.c, gcc.c, getpwd.c, libgcc2.c, protoize.c,\n+\ttoplev.c: Change all refs to __CYGWIN32__ to __CYGWIN__.\n+\n Wed Nov 11 12:25:19 1998  Tom Tromey  <tromey@cygnus.com>\n \n \t* Makefile.in (JAVAGC): New macro."}, {"sha": "0d55cec2d5c620e9fa342db88b0fda2c29fdfda5", "filename": "gcc/cccp.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -84,7 +84,7 @@ static int hack_vms_include_specification ();\n #endif /* VMS */\n \n /* Windows does not natively support inodes, and neither does MSDOS.  */\n-#if (defined (_WIN32) && ! defined (CYGWIN32)) || defined (__MSDOS__)\n+#if (defined (_WIN32) && ! defined (__CYGWIN__)) || defined (__MSDOS__)\n #define INO_T_EQ(a, b) 0\n #endif\n \n@@ -4888,10 +4888,10 @@ static int\n absolute_filename (filename)\n      char *filename;\n {\n-#if defined (__MSDOS__) || (defined (_WIN32) && !defined (__CYGWIN32__))\n+#if defined (__MSDOS__) || (defined (_WIN32) && !defined (__CYGWIN__))\n   if (ISALPHA (filename[0]) && filename[1] == ':') filename += 2;\n #endif\n-#if defined (__CYGWIN32__)\n+#if defined (__CYGWIN__)\n   /* At present, any path that begins with a drive spec is absolute.  */\n   if (ISALPHA (filename[0]) && filename[1] == ':') return 1;\n #endif"}, {"sha": "6f914062e72057b0fc648169f826dfcba3c88a7d", "filename": "gcc/collect2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -47,7 +47,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"demangle.h\"\n #include \"obstack.h\"\n-#ifdef __CYGWIN32__\n+#ifdef __CYGWIN__\n #include <process.h>\n #endif\n \n@@ -1721,7 +1721,7 @@ collect_execute (prog, argv, redir)\n   if (argv[0] == 0)\n     fatal (\"cannot find `%s'\", prog);\n \n-#ifndef __CYGWIN32__\n+#ifndef __CYGWIN__\n   pid = vfork ();\n   if (pid == -1)\n     fatal_perror (VFORK_STRING);"}, {"sha": "4ac4c91a3b18d8cff5e27f970b0d25a2f012aa34", "filename": "gcc/config/i386/cygwin.asm", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fcygwin.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fcygwin.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.asm?ref=cae21ae8a932f5756710da05091238433263c60a", "previous_filename": "gcc/config/i386/cygwin32.asm"}, {"sha": "af0b25e5917f9539eca3248966fc8b9dd8a3e823", "filename": "gcc/config/i386/cygwin.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=cae21ae8a932f5756710da05091238433263c60a", "previous_filename": "gcc/config/i386/cygwin32.h"}, {"sha": "3ef5c5b849c6cee91d60290155e2b3d5979c2d8e", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -21,10 +21,10 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA. */\n \n-/* Most of this is the same as for Cygwin32, except for changing some\n+/* Most of this is the same as for cygwin, except for changing some\n    specs.  */\n \n-#include \"i386/cygwin32.h\"\n+#include \"i386/cygwin.h\"\n \n /* Please keep changes to CPP_PREDEFINES in sync with i386/crtdll. The\n    only difference between the two should be __MSVCRT__ needed to "}, {"sha": "175f66be6f35821fe9470c4996e71f1638a421fa", "filename": "gcc/config/i386/t-cygwin", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Ft-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Ft-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -1,9 +1,9 @@\n LIBGCC1 = libgcc1-asm.a\n CROSS_LIBGCC1 = libgcc1-asm.a\n-LIB1ASMSRC = i386/cygwin32.asm\n+LIB1ASMSRC = i386/cygwin.asm\n LIB1ASMFUNCS = _chkstk\n \n-# cygwin32 always has a limits.h, but, depending upon how we are doing\n+# cygwin always has a limits.h, but, depending upon how we are doing\n # the build, it may not be installed yet.\n LIMITS_H_TEST = true\n ", "previous_filename": "gcc/config/i386/t-cygwin32"}, {"sha": "f6cc45166483c67efa7ce64657c574c865ad3dcd", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -71,7 +71,7 @@ Boston, MA 02111-1307, USA. */\n #undef CPP_SPEC\n #define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n   %{!mcygwin:-iwithprefixbefore include/mingw32 -D__MINGW32__}    \\\n-  %{mcygwin:-D__CYGWIN32__}\"\n+  %{mcygwin:-D__CYGWIN32__ -D__CYGWIN__}\"\n \n /* We have to dynamic link to get to the system DLLs.  All of libc, libm and\n    the Unix stuff is in cygwin.dll.  The import library is called"}, {"sha": "f1a2d4b83be49a10b25417c7167bcc4bc812dca1", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -493,7 +493,7 @@ i386_pe_unique_section (decl, reloc)\n }\n \f\n /* The Microsoft linker requires that every function be marked as\n-   DT_FCN.  When using gas on cygwin32, we must emit appropriate .type\n+   DT_FCN.  When using gas on cygwin, we must emit appropriate .type\n    directives.  */\n \n #include \"gsyms.h\""}, {"sha": "f251835bd33283cf3ade187ade24767668f96ab9", "filename": "gcc/config/i386/x-cygwin", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fx-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fx-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-cygwin?ref=cae21ae8a932f5756710da05091238433263c60a", "previous_filename": "gcc/config/i386/x-cygwin32"}, {"sha": "86285436a8f2b2814726a654a5855b59a73b629c", "filename": "gcc/config/i386/xm-cygwin.h", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-cygwin.h?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -40,11 +40,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n   _epath = _win32epath = getenv (NAME);\t\t\t\t\t\\\n   /* if we have a posix path list, convert to win32 path list */\t\\\n   if (_epath != NULL && *_epath != 0\t\t\t\t\t\\\n-      && cygwin32_posix_path_list_p (_epath))\t\t\t\t\\\n+      && cygwin_posix_path_list_p (_epath))\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       _win32epath = (char *) xmalloc\t\t\t\t\t\\\n-\t(cygwin32_posix_to_win32_path_list_buf_size (_epath));\t\t\\\n-      cygwin32_posix_to_win32_path_list (_epath, _win32epath);\t\t\\\n+\t(cygwin_posix_to_win32_path_list_buf_size (_epath));\t\t\\\n+      cygwin_posix_to_win32_path_list (_epath, _win32epath);\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   (VAR) = _win32epath;\t\t\t\t\t\t\t\\\n } while (0)", "previous_filename": "gcc/config/i386/xm-cygwin32.h"}, {"sha": "0ed448b2124fb4cc5475f24112d63be6e4f7ed37", "filename": "gcc/config/rs6000/cygwin.h", "status": "renamed", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Frs6000%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Frs6000%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcygwin.h?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -5,7 +5,7 @@\n    to build GCC for use with a windows style library and tool\n    set, winnt.h uses the Microsoft tools to do that.\n \n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -33,9 +33,12 @@ Boston, MA 02111-1307, USA. */\n #undef CPP_PREDEFINES\n #endif\n \n-#define\tCPP_PREDEFINES \"-D_WIN32 -DWINNT -D__CYGWIN32__ -DPOSIX \\\n+#define\tCPP_PREDEFINES \"-D_WIN32 -DWINNT -D__CYGWIN__ -D__CYGWIN32__ -DPOSIX \\\n   -D_POWER -D_ARCH_PPC -D__PPC__ -Asystem(winnt) -Acpu(powerpc) -Amachine(powerpc)\"\n \n+#undef CPP_SPEC\n+#define CPP_SPEC \"-remap %{posix: -D_POSIX_SOURCE} %(cpp_cpu)\"\n+\n /* We have to dynamic link to get to the system DLLs.  All of libc, libm and\n    the Unix stuff is in cygwin.dll.  The import library is called\n    'libcygwin.a'.  For Windows applications, include more libraries, but", "previous_filename": "gcc/config/rs6000/cygwin32.h"}, {"sha": "5e796a0e9165116318378c48ab81bc0225dfb7c5", "filename": "gcc/config/rs6000/x-cygwin", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Frs6000%2Fx-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Frs6000%2Fx-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-cygwin?ref=cae21ae8a932f5756710da05091238433263c60a", "previous_filename": "gcc/config/rs6000/x-cygwin32"}, {"sha": "ca548319c1094e7720eddae380d69e9fff42e770", "filename": "gcc/config/rs6000/xm-cygwin.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Frs6000%2Fxm-cygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfig%2Frs6000%2Fxm-cygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxm-cygwin.h?ref=cae21ae8a932f5756710da05091238433263c60a", "previous_filename": "gcc/config/rs6000/xm-cygwin32.h"}, {"sha": "622937de8ca6fd68263aa447c809ca7154c41700", "filename": "gcc/configure", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -3668,22 +3668,22 @@ for machine in $build $host $target; do\n \t\txmake_file=i386/x-vsta\n \t\t;;\n \ti[34567]86-*-win32)\n-\t\txm_file=\"${xm_file} i386/xm-cygwin32.h\"\n-\t\ttmake_file=i386/t-cygwin32\n+\t\txm_file=\"${xm_file} i386/xm-cygwin.h\"\n+\t\ttmake_file=i386/t-cygwin\n \t\ttm_file=i386/win32.h\n-\t\txmake_file=i386/x-cygwin32\n+\t\txmake_file=i386/x-cygwin\n \t\textra_objs=winnt.o\n \t\tfixincludes=Makefile.in\n  \t\tif test x$enable_threads = xyes; then\n \t\t\tthread_file='win32'\n \t\tfi\n \t\texeext=.exe\n \t\t;;\n-\ti[34567]86-*-pe | i[34567]86-*-cygwin32)\n-\t\txm_file=\"${xm_file} i386/xm-cygwin32.h\"\n-\t\ttmake_file=i386/t-cygwin32\n-\t\ttm_file=i386/cygwin32.h\n-\t\txmake_file=i386/x-cygwin32\n+\ti[34567]86-*-pe | i[34567]86-*-cygwin*)\n+\t\txm_file=\"${xm_file} i386/xm-cygwin.h\"\n+\t\ttmake_file=i386/t-cygwin\n+\t\ttm_file=i386/cygwin.h\n+\t\txmake_file=i386/x-cygwin\n \t\textra_objs=winnt.o\n \t\tfixincludes=Makefile.in\n  \t\tif test x$enable_threads = xyes; then\n@@ -3694,9 +3694,9 @@ for machine in $build $host $target; do\n \ti[34567]86-*-mingw32*)\n \t\ttm_file=i386/mingw32.h\n \t\txm_file=\"${xm_file} i386/xm-mingw32.h\"\n-\t\ttmake_file=\"i386/t-cygwin32 i386/t-mingw32\"\n+\t\ttmake_file=\"i386/t-cygwin i386/t-mingw32\"\n \t\textra_objs=winnt.o\n-\t\txmake_file=i386/x-cygwin32\n+\t\txmake_file=i386/x-cygwin\n \t\tfixincludes=Makefile.in\n  \t\tif test x$enable_threads = xyes; then\n \t\t\tthread_file='win32'\n@@ -4976,11 +4976,11 @@ for machine in $build $host $target; do\n \t\tfi\n \t\textra_headers=ppc-asm.h\n \t\t;;\n-\tpowerpcle-*-pe | powerpcle-*-cygwin32)\n-\t\ttm_file=rs6000/cygwin32.h\n-\t\txm_file=\"rs6000/xm-cygwin32.h ${xm_file}\"\n+\tpowerpcle-*-pe | powerpcle-*-cygwin*)\n+\t\ttm_file=rs6000/cygwin.h\n+\t\txm_file=\"rs6000/xm-cygwin.h ${xm_file}\"\n \t\ttmake_file=rs6000/t-winnt\n-\t\txmake_file=rs6000/x-cygwin32\n+\t\txmake_file=rs6000/x-cygwin\n #\t\textra_objs=pe.o\n \t\tfixincludes=Makefile.in\n  \t\tif test x$enable_threads = xyes; then"}, {"sha": "e1db30786aade5cc9578b6a8854d8af0ad14458c", "filename": "gcc/configure.in", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -1447,10 +1447,10 @@ changequote([,])dnl\n changequote(,)dnl\n \ti[34567]86-*-win32)\n changequote([,])dnl\n-\t\txm_file=\"${xm_file} i386/xm-cygwin32.h\"\n-\t\ttmake_file=i386/t-cygwin32\n+\t\txm_file=\"${xm_file} i386/xm-cygwin.h\"\n+\t\ttmake_file=i386/t-cygwin\n \t\ttm_file=i386/win32.h\n-\t\txmake_file=i386/x-cygwin32\n+\t\txmake_file=i386/x-cygwin\n \t\textra_objs=winnt.o\n \t\tfixincludes=Makefile.in\n  \t\tif test x$enable_threads = xyes; then\n@@ -1459,12 +1459,12 @@ changequote([,])dnl\n \t\texeext=.exe\n \t\t;;\n changequote(,)dnl\n-\ti[34567]86-*-pe | i[34567]86-*-cygwin32)\n+\ti[34567]86-*-pe | i[34567]86-*-cygwin*)\n changequote([,])dnl\n-\t\txm_file=\"${xm_file} i386/xm-cygwin32.h\"\n-\t\ttmake_file=i386/t-cygwin32\n-\t\ttm_file=i386/cygwin32.h\n-\t\txmake_file=i386/x-cygwin32\n+\t\txm_file=\"${xm_file} i386/xm-cygwin.h\"\n+\t\ttmake_file=i386/t-cygwin\n+\t\ttm_file=i386/cygwin.h\n+\t\txmake_file=i386/x-cygwin\n \t\textra_objs=winnt.o\n \t\tfixincludes=Makefile.in\n  \t\tif test x$enable_threads = xyes; then\n@@ -1477,9 +1477,9 @@ changequote(,)dnl\n changequote([,])dnl\n \t\ttm_file=i386/mingw32.h\n \t\txm_file=\"${xm_file} i386/xm-mingw32.h\"\n-\t\ttmake_file=\"i386/t-cygwin32 i386/t-mingw32\"\n+\t\ttmake_file=\"i386/t-cygwin i386/t-mingw32\"\n \t\textra_objs=winnt.o\n-\t\txmake_file=i386/x-cygwin32\n+\t\txmake_file=i386/x-cygwin\n \t\tfixincludes=Makefile.in\n  \t\tif test x$enable_threads = xyes; then\n \t\t\tthread_file='win32'\n@@ -2775,11 +2775,11 @@ changequote([,])dnl\n \t\tfi\n \t\textra_headers=ppc-asm.h\n \t\t;;\n-\tpowerpcle-*-pe | powerpcle-*-cygwin32)\n-\t\ttm_file=rs6000/cygwin32.h\n-\t\txm_file=\"rs6000/xm-cygwin32.h ${xm_file}\"\n+\tpowerpcle-*-pe | powerpcle-*-cygwin*)\n+\t\ttm_file=rs6000/cygwin.h\n+\t\txm_file=\"rs6000/xm-cygwin.h ${xm_file}\"\n \t\ttmake_file=rs6000/t-winnt\n-\t\txmake_file=rs6000/x-cygwin32\n+\t\txmake_file=rs6000/x-cygwin\n #\t\textra_objs=pe.o\n \t\tfixincludes=Makefile.in\n  \t\tif test x$enable_threads = xyes; then"}, {"sha": "57ac3fdc32d15d234014b7baa6e96c4d1e3bbfc4", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -2267,7 +2267,7 @@ execute ()\n   for (n_commands = 1, i = 0; i < argbuf_index; i++)\n     if (strcmp (argbuf[i], \"|\") == 0)\n       {\t\t\t\t/* each command.  */\n-#if defined (__MSDOS__) || (defined (_WIN32) && defined (__CYGWIN32_)) || defined (OS2) || defined (VMS)\n+#if defined (__MSDOS__) || (defined (_WIN32) && defined (__CYGWIN__)) || defined (OS2) || defined (VMS)\n         fatal (\"-pipe not supported\");\n #endif\n \targbuf[i] = 0;\t/* termination of command args.  */"}, {"sha": "69f8c8243b58b8049cf136ecb33d5ecb289263ab", "filename": "gcc/getpwd.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fgetpwd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fgetpwd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgetpwd.c?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -22,7 +22,7 @@\n \n char *xmalloc ();\n \n-#if !(defined (VMS) || (defined(_WIN32) && !defined(__CYGWIN32__)))\n+#if !(defined (VMS) || (defined(_WIN32) && !defined(__CYGWIN__)))\n \n /* Get the working directory.  Use the PWD environment variable if it's\n    set correctly, since this is faster and gives more uniform answers\n@@ -70,7 +70,7 @@ getpwd ()\n   return p;\n }\n \n-#else\t/* VMS || _WIN32 && !__CYGWIN32__ */\n+#else\t/* VMS || _WIN32 && !__CYGWIN__ */\n \n #ifndef MAXPATHLEN\n #define MAXPATHLEN 255\n@@ -90,4 +90,4 @@ getpwd ()\n   return pwd;\n }\n \n-#endif\t/* VMS || _WIN32 && !__CYGWIN32__ */\n+#endif\t/* VMS || _WIN32 && !__CYGWIN__ */"}, {"sha": "029c624c6a55edcf1bf687cf3984f626e6a0bdd3", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -2572,7 +2572,7 @@ __clear_cache (char *beg, char *end)\n \n /* Jump to a trampoline, loading the static chain address.  */\n \n-#if defined(WINNT) && ! defined(__CYGWIN32__)\n+#if defined(WINNT) && ! defined(__CYGWIN__)\n \n long getpagesize()\n {\n@@ -2810,7 +2810,7 @@ cacheflush (char *beg, int size, int flag)\n #endif /* sony_news */\n #endif /* L_trampoline */\n \f\n-#ifndef __CYGWIN32__\n+#ifndef __CYGWIN__\n #ifdef L__main\n \n #include \"gbl-ctors.h\"\n@@ -2892,7 +2892,7 @@ SYMBOL__MAIN ()\n #endif /* no HAS_INIT_SECTION or INVOKE__main */\n \n #endif /* L__main */\n-#endif /* __CYGWIN32__ */\n+#endif /* __CYGWIN__ */\n \f\n #ifdef L_ctors\n "}, {"sha": "e5bed8dfc886e297ca2e6f8b3cfa7f486b5460ac", "filename": "gcc/protoize.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -59,7 +59,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"system.h\"\n #include <sys/stat.h>\n-#if ! defined (_WIN32) || defined (__CYGWIN32__)\n+#if ! defined (_WIN32) || defined (__CYGWIN__)\n #if defined(POSIX) || defined(CONCURRENT)\n #include <dirent.h>\n #else"}, {"sha": "2d0cea0f08f974767a95fcaa20e0078edc7f56ef", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae21ae8a932f5756710da05091238433263c60a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae21ae8a932f5756710da05091238433263c60a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=cae21ae8a932f5756710da05091238433263c60a", "patch": "@@ -1252,7 +1252,7 @@ get_run_time ()\n #ifdef __BEOS__\n   return 0;\n #else /* not BeOS */\n-#if defined (_WIN32) && !defined (__CYGWIN32__)\n+#if defined (_WIN32) && !defined (__CYGWIN__)\n   if (clock() < 0)\n     return 0;\n   else\n@@ -4947,7 +4947,7 @@ main (argc, argv)\n \n   compile_file (filename);\n \n-#if !defined(OS2) && !defined(VMS) && (!defined(_WIN32) || defined (__CYGWIN32__))\n+#if !defined(OS2) && !defined(VMS) && (!defined(_WIN32) || defined (__CYGWIN__))\n   if (flag_print_mem)\n     {\n       char *lim = (char *) sbrk (0);\n@@ -4963,7 +4963,7 @@ main (argc, argv)\n #endif /* not USG */\n #endif\n     }\n-#endif /* ! OS2 && ! VMS && (! _WIN32 || CYGWIN32) */\n+#endif /* ! OS2 && ! VMS && (! _WIN32 || CYGWIN) */\n \n   if (errorcount)\n     exit (FATAL_EXIT_CODE);"}]}