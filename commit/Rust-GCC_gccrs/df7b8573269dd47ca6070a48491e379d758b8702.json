{"sha": "df7b8573269dd47ca6070a48491e379d758b8702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY3Yjg1NzMyNjlkZDQ3Y2E2MDcwYTQ4NDkxZTM3OWQ3NThiODcwMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-10T05:49:29Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-10T05:49:29Z"}, "message": "(output_move_double): Fix typos in last change.\n\nFrom-SVN: r5127", "tree": {"sha": "d0eab982b7bfbe588097737b55c1915dbe4052dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0eab982b7bfbe588097737b55c1915dbe4052dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df7b8573269dd47ca6070a48491e379d758b8702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7b8573269dd47ca6070a48491e379d758b8702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df7b8573269dd47ca6070a48491e379d758b8702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7b8573269dd47ca6070a48491e379d758b8702/comments", "author": null, "committer": null, "parents": [{"sha": "c1b9947f062a6cabf5c0bc7883a9e067c134dfc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b9947f062a6cabf5c0bc7883a9e067c134dfc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b9947f062a6cabf5c0bc7883a9e067c134dfc8"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "b4a4931e139088116dd4d8c93317ee2fa33491e4", "filename": "gcc/config/ns32k/ns32k.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df7b8573269dd47ca6070a48491e379d758b8702/gcc%2Fconfig%2Fns32k%2Fns32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df7b8573269dd47ca6070a48491e379d758b8702/gcc%2Fconfig%2Fns32k%2Fns32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.c?ref=df7b8573269dd47ca6070a48491e379d758b8702", "patch": "@@ -321,7 +321,7 @@ output_move_double (operands)\n \n   /* Overlapping registers.  */\n   if (optype0 == REGOP && optype1 == REGOP\n-      && REGNO (op0) == REGNO (latehalf[1]))\n+      && REGNO (operands[0]) == REGNO (latehalf[1]))\n     {\n       /* Do that word.  */\n       output_asm_insn (singlemove_string (latehalf), latehalf);\n@@ -330,26 +330,26 @@ output_move_double (operands)\n     }\n   /* Loading into a register which overlaps a register used in the address.  */\n   else if (optype0 == REGOP && optype1 != REGOP\n-\t   && reg_overlap_mentioned_p (op0, op1))\n+\t   && reg_overlap_mentioned_p (operands[0], operands[1]))\n     {\n-      if (reg_mentioned_p (op0, XEXP (op1, 0))\n-\t  && reg_mentioned_p (latehalf[0], XEXP (op1, 0)))\n+      if (reg_mentioned_p (operands[0], XEXP (operands[1], 0))\n+\t  && reg_mentioned_p (latehalf[0], XEXP (operands[1], 0)))\n \t{\n \t  /* If both halves of dest are used in the src memory address,\n-\t     add the two regs and put them in the low reg (op0).\n+\t     add the two regs and put them in the low reg (operands[0]).\n \t     Then it works to load latehalf first.  */\n \t  rtx xops[2];\n \t  xops[0] = latehalf[0];\n-\t  xops[1] = op0;\n+\t  xops[1] = operands[0];\n \t  output_asm_insn (\"addd %0,%1\", xops);\n-\t  operands[1] = gen_rtx (MEM, DImode, op0);\n+\t  operands[1] = gen_rtx (MEM, DImode, operands[0]);\n \t  latehalf[1] = adj_offsettable_operand (operands[1], 4);\n \t  /* The first half has the overlap, Do the late half first.  */\n \t  output_asm_insn (singlemove_string (latehalf), latehalf);\n \t  /* Then clobber.  */\n \t  return singlemove_string (operands);\n \t}\n-      if (reg_mentioned_p (op0, XEXP (op1, 0)))\n+      if (reg_mentioned_p (operands[0], XEXP (operands[1], 0)))\n \t{\n \t  /* The first half has the overlap, Do the late half first.  */\n \t  output_asm_insn (singlemove_string (latehalf), latehalf);"}]}