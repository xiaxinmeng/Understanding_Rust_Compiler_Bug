{"sha": "2d13abcf868ab46317b62f14702fa62c7948f212", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQxM2FiY2Y4NjhhYjQ2MzE3YjYyZjE0NzAyZmE2MmM3OTQ4ZjIxMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-02-26T20:56:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-02-26T20:56:24Z"}, "message": "locale_facets.tcc (num_put::_M_widen_int): Group all the integral types, not only decs.\n\n2002-02-26  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/bits/locale_facets.tcc (num_put::_M_widen_int):\n\tGroup all the integral types, not only decs.\n\t* testsuite/27_io/ios_manip_basefield.cc (test01): Tweak existing\n\ttests, add a few more.\n\nFrom-SVN: r50057", "tree": {"sha": "d51601783a5306bccf35929ddfdc9ad4d3aab9bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d51601783a5306bccf35929ddfdc9ad4d3aab9bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d13abcf868ab46317b62f14702fa62c7948f212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d13abcf868ab46317b62f14702fa62c7948f212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d13abcf868ab46317b62f14702fa62c7948f212", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d13abcf868ab46317b62f14702fa62c7948f212/comments", "author": null, "committer": null, "parents": [{"sha": "06e224f7e851bf8bf6bb5adfe52ae99de43197aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e224f7e851bf8bf6bb5adfe52ae99de43197aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06e224f7e851bf8bf6bb5adfe52ae99de43197aa"}], "stats": {"total": 76, "additions": 58, "deletions": 18}, "files": [{"sha": "fc4229c86f9411c5cbc457578268eb4324a2fe0c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d13abcf868ab46317b62f14702fa62c7948f212/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d13abcf868ab46317b62f14702fa62c7948f212/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2d13abcf868ab46317b62f14702fa62c7948f212", "patch": "@@ -1,3 +1,10 @@\n+2002-02-26  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/locale_facets.tcc (num_put::_M_widen_int):\n+\tGroup all the integral types, not only decs.\n+\t* testsuite/27_io/ios_manip_basefield.cc (test01): Tweak existing\n+\ttests, add a few more.\n+\n 2002-02-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/ios.cc (ios_base::~ios_base): Tweak."}, {"sha": "4f4cb11ea636d3e6ba78e8e90cd3c857d3a3d7bb", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d13abcf868ab46317b62f14702fa62c7948f212/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d13abcf868ab46317b62f14702fa62c7948f212/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=2d13abcf868ab46317b62f14702fa62c7948f212", "patch": "@@ -726,18 +726,32 @@ namespace std\n \t\t\t\t\t\t\t    * __len * 2));\n       __ctype.widen(__cs, __cs + __len, __ws);\n \n-      // Add grouping, if necessary.\n+      // Add grouping, if necessary. \n       const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);\n       const string __grouping = __np.grouping();\n-      ios_base::fmtflags __basefield = __io.flags() & ios_base::basefield;\n-      bool __dec = __basefield != ios_base::oct \n-\t           && __basefield != ios_base::hex;\n-      if (__grouping.size() && __dec)\n+      const ios_base::fmtflags __basefield = __io.flags() & ios_base::basefield;\n+      if (__grouping.size())\n \t{\n+\t  // By itself __add_grouping cannot deal correctly with __ws when\n+\t  // ios::showbase is set and ios_base::oct || ios_base::hex.\n+\t  // Therefore we take care \"by hand\" of the initial 0, 0x or 0X.\n+\t  streamsize __off = 0;\n+\t  if (__io.flags() & ios_base::showbase)\n+\t    if (__basefield == ios_base::oct)\n+\t      {\n+\t\t__off = 1;\n+\t\t*__ws2 = *__ws;\n+\t      }\n+\t    else if (__basefield == ios_base::hex)\n+\t      {\n+\t\t__off = 2;\n+\t\t*__ws2 = *__ws;\n+\t\t*(__ws2 + 1) = *(__ws + 1);\n+\t      }\n \t  _CharT* __p;\n-\t  __p = __add_grouping(__ws2, __np.thousands_sep(), __grouping.c_str(),\n+\t  __p = __add_grouping(__ws2 + __off, __np.thousands_sep(), __grouping.c_str(),\n \t\t\t       __grouping.c_str() + __grouping.size(),\n-\t\t\t       __ws, __ws + __len);\n+\t\t\t       __ws + __off, __ws + __len);\n \t  __len = __p - __ws2;\n \t  // Switch strings.\n \t  __ws = __ws2;"}, {"sha": "1c5522b9809640a16915be1552603c1f04d24c6c", "filename": "libstdc++-v3/testsuite/27_io/ios_manip_basefield.cc", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d13abcf868ab46317b62f14702fa62c7948f212/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d13abcf868ab46317b62f14702fa62c7948f212/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc?ref=2d13abcf868ab46317b62f14702fa62c7948f212", "patch": "@@ -45,8 +45,12 @@ int\n test01()\n {\n   bool test = true;\n-  const char lit[] = \"-0 123 456\\n:-01 234 567:\\n:-0 123 456 :\"\n-                     \"\\n:   -012 345:\\n:-    01 234:\\n0x000012 345 678\";\n+\n+  const char lit[] = \"037 777 654 322\\n:037 776 543 211:\\n:037 777 654 322   :\\n\"\n+                     \":   037 777 765 433:\\n:   037 777 776 544:\\n: 04 553 207:\\n\"\n+                     \":0361 100   :\\n:    030 071:\\n:     02 322:\\n\"\n+                     \"0x000012 345 678\\n\";\n+\n   std::ostringstream oss;\n   oss.imbue(std::locale(std::locale(), new MyNP));\n   oss << std::oct << std::showbase;\n@@ -55,15 +59,27 @@ test01()\n   oss << \":\" << std::setw(11);\n   oss << -01234567l << \":\" << std::endl;\n \n-  oss << \":\" << std::setw(11) << std::left;\n+  oss << \":\" << std::setw(18) << std::left;\n   oss << -0123456l << \":\" << std::endl;\n \n-  oss << \":\" << std::setw(11) << std::right;\n+  oss << \":\" << std::setw(18) << std::right;\n   oss << -012345l << \":\" << std::endl;\n \n-  oss << \":\" << std::setw(11) << std::internal;\n+  oss << \":\" << std::setw(18) << std::internal;\n   oss << -01234l << \":\" << std::endl;\n \n+  oss << \":\" << std::setw(11);\n+  oss << 1234567l << \":\" << std::endl;\n+\n+  oss << \":\" << std::setw(11) << std::left;\n+  oss << 123456l << \":\" << std::endl;\n+\n+  oss << \":\" << std::setw(11) << std::right;\n+  oss << 12345l << \":\" << std::endl;\n+\n+  oss << \":\" << std::setw(11) << std::internal;\n+  oss << 1234l << \":\" << std::endl;\n+\n   oss << std::hex;\n   oss << std::setfill('0');\n   oss << std::internal;\n@@ -112,11 +128,14 @@ main()\n \n // Projected output:\n /*\n--0 123 456\n-:-01 234 567:\n-:-0 123 456 :\n-:   -012 345:\n-:-    01 234:\n+037 777 654 322\n+:037 776 543 211:\n+:037 777 654 322   :\n+:   037 777 765 433:\n+:   037 777 776 544:\n+: 04 553 207:\n+:0361 100   :\n+:    030 071:\n+:     02 322:\n 0x000012 345 678\n */\n-"}]}