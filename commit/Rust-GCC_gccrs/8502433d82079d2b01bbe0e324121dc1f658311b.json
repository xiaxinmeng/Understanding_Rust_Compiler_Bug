{"sha": "8502433d82079d2b01bbe0e324121dc1f658311b", "node_id": "C_kwDOANBUbNoAKDg1MDI0MzNkODIwNzlkMmIwMWJiZTBlMzI0MTIxZGMxZjY1ODMxMWI", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-04-07T16:58:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-18T08:41:07Z"}, "message": "[Ada] Disable Vet calls when container checks are disabled\n\nCalls to various Vet functions are used throughout the containers\npackages to check internal consistency. This patch improves efficiency\nby disabling these calls when Container_Checks are suppressed.\n\ngcc/ada/\n\n\t* libgnat/a-crbtgo.ads, libgnat/a-rbtgbo.ads,\n\tlibgnat/a-cbdlli.adb, libgnat/a-cbhama.adb,\n\tlibgnat/a-cbhase.adb, libgnat/a-cdlili.adb,\n\tlibgnat/a-cfdlli.adb, libgnat/a-cfhama.adb,\n\tlibgnat/a-cfhase.adb, libgnat/a-cidlli.adb,\n\tlibgnat/a-cihama.adb, libgnat/a-cihase.adb,\n\tlibgnat/a-cohama.adb, libgnat/a-cohase.adb,\n\tlibgnat/a-crbtgo.adb, libgnat/a-crdlli.adb, libgnat/a-rbtgbo.adb\n\t(Vet): Make the Vet functions do nothing when\n\tContainer_Checks'Enabled is False, and inline them, so the calls\n\tdisappear when optimizing.", "tree": {"sha": "6d8e0e24a06cc179c9907d0783caa925a28c0f33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d8e0e24a06cc179c9907d0783caa925a28c0f33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8502433d82079d2b01bbe0e324121dc1f658311b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8502433d82079d2b01bbe0e324121dc1f658311b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8502433d82079d2b01bbe0e324121dc1f658311b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8502433d82079d2b01bbe0e324121dc1f658311b/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db67182120993abaff6bbaa1a64f1ba931a8380b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db67182120993abaff6bbaa1a64f1ba931a8380b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db67182120993abaff6bbaa1a64f1ba931a8380b"}], "stats": {"total": 96, "additions": 79, "deletions": 17}, "files": [{"sha": "d8cf6c3c7a44df6bae7fa2f9cc42a883b7ff37da", "filename": "gcc/ada/libgnat/a-cbdlli.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -75,7 +75,7 @@ is\n       Src_Pos : Count_Type;\n       Tgt_Pos : out Count_Type);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n    --  Checks invariants of the cursor and its designated container, as a\n    --  simple way of detecting dangling references (see operation Free for a\n    --  description of the detection mechanism), returning True if all checks\n@@ -2210,6 +2210,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = 0 then\n          return Position.Container = null;\n       end if;"}, {"sha": "f557ff9c4abb094005418a3cb4f8a972e8499b57", "filename": "gcc/ada/libgnat/a-cbhama.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -66,7 +66,7 @@ is\n    procedure Set_Next (Node : in out Node_Type; Next : Count_Type);\n    pragma Inline (Set_Next);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n \n    --------------------------\n    -- Local Instantiations --\n@@ -1175,6 +1175,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = 0 then\n          return Position.Container = null;\n       end if;"}, {"sha": "9076d8e813201c394320cf01d00a0a4a64c60eae", "filename": "gcc/ada/libgnat/a-cbhase.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -79,7 +79,7 @@ is\n    procedure Set_Next (Node : in out Node_Type; Next : Count_Type);\n    pragma Inline (Set_Next);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n \n    --------------------------\n    -- Local Instantiations --\n@@ -1496,6 +1496,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = 0 then\n          return Position.Container = null;\n       end if;"}, {"sha": "22cb14679d29fad5766a26f088252d46428d6181", "filename": "gcc/ada/libgnat/a-cdlili.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cdlili.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -64,7 +64,7 @@ is\n       Source   : in out List;\n       Position : Node_Access);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n    --  Checks invariants of the cursor and its designated container, as a\n    --  simple way of detecting dangling references (see operation Free for a\n    --  description of the detection mechanism), returning True if all checks\n@@ -1991,6 +1991,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = null then\n          return Position.Container = null;\n       end if;"}, {"sha": "383d031d71548216a828ec3e7d009f74bafde2c3", "filename": "gcc/ada/libgnat/a-cfdlli.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cfdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cfdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfdlli.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -48,7 +48,7 @@ is\n       Before    : Count_Type;\n       New_Node  : Count_Type);\n \n-   function Vet (L : List; Position : Cursor) return Boolean;\n+   function Vet (L : List; Position : Cursor) return Boolean with Inline;\n \n    ---------\n    -- \"=\" --\n@@ -1766,8 +1766,11 @@ is\n \n    function Vet (L : List; Position : Cursor) return Boolean is\n       N : Node_Array renames L.Nodes;\n-\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if L.Length = 0 then\n          return False;\n       end if;"}, {"sha": "0b60a0105127650d388c7a3acd2077c986756d2f", "filename": "gcc/ada/libgnat/a-cfhama.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cfhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cfhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfhama.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -68,7 +68,8 @@ is\n    procedure Set_Next (Node : in out Node_Type; Next : Count_Type);\n    pragma Inline (Set_Next);\n \n-   function Vet (Container : Map; Position : Cursor) return Boolean;\n+   function Vet (Container : Map; Position : Cursor) return Boolean\n+     with Inline;\n \n    --------------------------\n    -- Local Instantiations --\n@@ -901,6 +902,10 @@ is\n \n    function Vet (Container : Map; Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = 0 then\n          return True;\n       end if;"}, {"sha": "544ad2bfa79766cdce8234d2fc25f89febce01e1", "filename": "gcc/ada/libgnat/a-cfhase.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cfhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cfhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfhase.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -89,7 +89,8 @@ is\n    procedure Set_Next (Node : in out Node_Type; Next : Count_Type);\n    pragma Inline (Set_Next);\n \n-   function Vet (Container : Set; Position : Cursor) return Boolean;\n+   function Vet (Container : Set; Position : Cursor) return Boolean\n+     with Inline;\n \n    --------------------------\n    -- Local Instantiations --\n@@ -1506,6 +1507,10 @@ is\n \n    function Vet (Container : Set; Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = 0 then\n          return True;\n       end if;"}, {"sha": "b34df0445ddcf721b1542141671e1f8fa4f600d0", "filename": "gcc/ada/libgnat/a-cidlli.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -67,7 +67,7 @@ is\n       Source   : in out List;\n       Position : Node_Access);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n    --  Checks invariants of the cursor and its designated container, as a\n    --  simple way of detecting dangling references (see operation Free for a\n    --  description of the detection mechanism), returning True if all checks\n@@ -2103,6 +2103,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = null then\n          return Position.Container = null;\n       end if;"}, {"sha": "30a2f4daf925c2b443f6da3dece122c0b7cbb94c", "filename": "gcc/ada/libgnat/a-cihama.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihama.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -85,7 +85,7 @@ is\n    procedure Set_Next (Node : Node_Access; Next : Node_Access);\n    pragma Inline (Set_Next);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n \n    procedure Write_Node\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -1299,6 +1299,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = null then\n          return Position.Container = null;\n       end if;"}, {"sha": "090d01cb4724c4e202083cad91687985695909a6", "filename": "gcc/ada/libgnat/a-cihase.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cihase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cihase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihase.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -99,7 +99,7 @@ is\n    procedure Set_Next (Node : Node_Access; Next : Node_Access);\n    pragma Inline (Set_Next);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n \n    procedure Write_Node\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -1932,6 +1932,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = null then\n          return Position.Container = null;\n       end if;"}, {"sha": "013e2cd03d09d387d7ce65ffa94b3bc3506fa7c1", "filename": "gcc/ada/libgnat/a-cohama.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohama.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -80,7 +80,7 @@ is\n    procedure Set_Next (Node : Node_Access; Next : Node_Access);\n    pragma Inline (Set_Next);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n \n    procedure Write_Node\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -1156,6 +1156,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = null then\n          return Position.Container = null;\n       end if;"}, {"sha": "986b354ad7266d3e83c206e10f39591200f15bd7", "filename": "gcc/ada/libgnat/a-cohase.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohase.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -99,7 +99,7 @@ is\n    procedure Set_Next (Node : Node_Access; Next : Node_Access);\n    pragma Inline (Set_Next);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n \n    procedure Write_Node\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -1749,6 +1749,10 @@ is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = null then\n          return Position.Container = null;\n       end if;"}, {"sha": "d689b1cb2adaa0328ed380f008fb71fab7bfd564", "filename": "gcc/ada/libgnat/a-crbtgo.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-crbtgo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-crbtgo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-crbtgo.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -1060,6 +1060,10 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n \n    function Vet (Tree : Tree_Type; Node : Node_Access) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Node = null then\n          return True;\n       end if;"}, {"sha": "609fe4b4814c5411e2c99705efc30af503068bf3", "filename": "gcc/ada/libgnat/a-crbtgo.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-crbtgo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-crbtgo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-crbtgo.ads?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -61,7 +61,8 @@ package Ada.Containers.Red_Black_Trees.Generic_Operations is\n \n    --  procedure Check_Invariant (Tree : Tree_Type);\n \n-   function Vet (Tree : Tree_Type; Node : Node_Access) return Boolean;\n+   function Vet (Tree : Tree_Type; Node : Node_Access) return Boolean\n+     with Inline;\n    --  Inspects Node to determine (to the extent possible) whether\n    --  the node is valid; used to detect if the node is dangling.\n "}, {"sha": "bdb6475d67f376366e1b0401c52a50229e011b89", "filename": "gcc/ada/libgnat/a-crdlli.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-crdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-crdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-crdlli.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -51,7 +51,7 @@ package body Ada.Containers.Restricted_Doubly_Linked_Lists is\n       Before    : Count_Type;\n       New_Node  : Count_Type);\n \n-   function Vet (Position : Cursor) return Boolean;\n+   function Vet (Position : Cursor) return Boolean with Inline;\n \n    ---------\n    -- \"=\" --\n@@ -1330,6 +1330,10 @@ package body Ada.Containers.Restricted_Doubly_Linked_Lists is\n \n    function Vet (Position : Cursor) return Boolean is\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Position.Node = 0 then\n          return Position.Container = null;\n       end if;"}, {"sha": "0c3f25f6d81469bbb72d1272ef0adf86d8e9db54", "filename": "gcc/ada/libgnat/a-rbtgbo.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-rbtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-rbtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-rbtgbo.adb?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -1038,8 +1038,11 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n    function Vet (Tree : Tree_Type'Class; Index : Count_Type) return Boolean is\n       Nodes : Nodes_Type renames Tree.Nodes;\n       Node  : Node_Type renames Nodes (Index);\n-\n    begin\n+      if not Container_Checks'Enabled then\n+         return True;\n+      end if;\n+\n       if Parent (Node) = Index\n         or else Left (Node) = Index\n         or else Right (Node) = Index"}, {"sha": "b3e0106cb44b89e85f6922684b9e7a956ff05d53", "filename": "gcc/ada/libgnat/a-rbtgbo.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-rbtgbo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502433d82079d2b01bbe0e324121dc1f658311b/gcc%2Fada%2Flibgnat%2Fa-rbtgbo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-rbtgbo.ads?ref=8502433d82079d2b01bbe0e324121dc1f658311b", "patch": "@@ -70,7 +70,8 @@ package Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n    function Max (Tree : Tree_Type'Class; Node : Count_Type) return Count_Type;\n    --  Returns the largest-valued node of the subtree rooted at Node\n \n-   function Vet (Tree : Tree_Type'Class; Index : Count_Type) return Boolean;\n+   function Vet (Tree : Tree_Type'Class; Index : Count_Type) return Boolean\n+     with Inline;\n    --  Inspects Node to determine (to the extent possible) whether\n    --  the node is valid; used to detect if the node is dangling.\n "}]}