{"sha": "76df831f5d7d2f73f396bfe76f88c4ed9aab4faf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZkZjgzMWY1ZDdkMmY3M2YzOTZiZmU3NmY4OGM0ZWQ5YWFiNGZhZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2014-02-05T18:42:19Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2014-02-05T18:42:19Z"}, "message": "re PR debug/52727 (internal compiler error at dwarf2cfi.c2:685)\n\nPR debug/52727\n\n        * combine-stack-adj.c: Revert r206943.\n        * sched-int.h (struct deps_desc): Add last_args_size.\n        * sched-deps.c (init_deps): Initialize it.\n        (sched_analyze_insn): Add OUTPUT dependencies between insns that\n        contain REG_ARGS_SIZE notes.\n\nFrom-SVN: r207518", "tree": {"sha": "4e9ff9fb805d73c0c48089ece8cf85aba6937092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e9ff9fb805d73c0c48089ece8cf85aba6937092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/comments", "author": null, "committer": null, "parents": [{"sha": "9cf7975d8b4b0763dd7bf07ebb861b87fd0aaf7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cf7975d8b4b0763dd7bf07ebb861b87fd0aaf7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cf7975d8b4b0763dd7bf07ebb861b87fd0aaf7a"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "c3bdd4d5a0594d425ec5116362a8fd3b50a7ca3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76df831f5d7d2f73f396bfe76f88c4ed9aab4faf", "patch": "@@ -1,3 +1,12 @@\n+2014-02-05  Richard Henderson <rth@redhat.com>\n+\n+\tPR debug/52727\n+\t* combine-stack-adj.c: Revert r206943.\n+\t* sched-int.h (struct deps_desc): Add last_args_size.\n+\t* sched-deps.c (init_deps): Initialize it.\n+\t(sched_analyze_insn): Add OUTPUT dependencies between insns that\n+\tcontain REG_ARGS_SIZE notes.\n+\n 2014-02-05  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-cgraph.c (asm_nodes_output): Make global."}, {"sha": "69fd5ea77e3aae1abdfa53d8fcacf95b869d48bd", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=76df831f5d7d2f73f396bfe76f88c4ed9aab4faf", "patch": "@@ -567,7 +567,6 @@ combine_stack_adjustments_for_block (basic_block bb)\n \t      && try_apply_stack_adjustment (insn, reflist, 0,\n \t\t\t\t\t     -last_sp_adjust))\n \t    {\n-\t      rtx note;\n \t      if (last2_sp_set)\n \t\tmaybe_move_args_size_note (last2_sp_set, last_sp_set, false);\n \t      else\n@@ -577,11 +576,6 @@ combine_stack_adjustments_for_block (basic_block bb)\n \t      reflist = NULL;\n \t      last_sp_set = NULL_RTX;\n \t      last_sp_adjust = 0;\n-\t      /* We no longer adjust stack size.  Whoever adjusted it earlier\n-\t\t hopefully got the note right.  */\n-\t      note = find_reg_note (insn, REG_ARGS_SIZE, NULL_RTX);\n-\t      if (note)\n-\t\tremove_note (insn, note);\n \t      continue;\n \t    }\n \t}"}, {"sha": "efc4223089ac988444481fcb74e19f6f163c7fcb", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=76df831f5d7d2f73f396bfe76f88c4ed9aab4faf", "patch": "@@ -3470,6 +3470,15 @@ sched_analyze_insn (struct deps_desc *deps, rtx x, rtx insn)\n             change_spec_dep_to_hard (sd_it);\n         }\n     }\n+\n+  /* We do not yet have code to adjust REG_ARGS_SIZE, therefore we must\n+     honor their original ordering.  */\n+  if (find_reg_note (insn, REG_ARGS_SIZE, NULL))\n+    {\n+      if (deps->last_args_size)\n+\tadd_dependence (insn, deps->last_args_size, REG_DEP_OUTPUT);\n+      deps->last_args_size = insn;\n+    }\n }\n \n /* Return TRUE if INSN might not always return normally (e.g. call exit,\n@@ -3876,6 +3885,7 @@ init_deps (struct deps_desc *deps, bool lazy_reg_last)\n   deps->sched_before_next_jump = 0;\n   deps->in_post_call_group_p = not_post_call;\n   deps->last_debug_insn = 0;\n+  deps->last_args_size = 0;\n   deps->last_reg_pending_barrier = NOT_A_BARRIER;\n   deps->readonly = 0;\n }"}, {"sha": "2cec6247230e62c948a4d5af37184c6a14de2a1c", "filename": "gcc/sched-int.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76df831f5d7d2f73f396bfe76f88c4ed9aab4faf/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=76df831f5d7d2f73f396bfe76f88c4ed9aab4faf", "patch": "@@ -539,6 +539,9 @@ struct deps_desc\n   /* The last debug insn we've seen.  */\n   rtx last_debug_insn;\n \n+  /* The last insn bearing REG_ARGS_SIZE that we've seen.  */\n+  rtx last_args_size;\n+\n   /* The maximum register number for the following arrays.  Before reload\n      this is max_reg_num; after reload it is FIRST_PSEUDO_REGISTER.  */\n   int max_reg;"}]}