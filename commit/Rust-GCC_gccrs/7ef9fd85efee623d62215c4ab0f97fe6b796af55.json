{"sha": "7ef9fd85efee623d62215c4ab0f97fe6b796af55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VmOWZkODVlZmVlNjIzZDYyMjE1YzRhYjBmOTdmZTZiNzk2YWY1NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-04-12T19:21:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-12T19:21:35Z"}, "message": "Remove _M_buf_size_opt, use directly _M_buf_size instead.\n\n2003-04-12  Paolo Carlini  <pcarlini@unitus.it>\n\n\tRemove _M_buf_size_opt, use directly _M_buf_size instead.\n\t* include/bits/fstream.tcc\n\t(basic_filebuf::_M_allocate_internal_buffer, setbuf): Remove\n\treferences to _M_buf_size_opt.\n\t* include/bits/sstream.tcc (basic_stringbuf::overflow): Likewise.\n\t* include/bits/streambuf.tcc (__copy_streambufs): Likewise, rename\n\t__bufsize to __in_avail and __size_opt to __buf_size.\n\t* include/ext/stdio_filebuf.h (stdio_filebuf::stdio_filebuf): Likewise.\n\t* include/std/std_sstream.h (_M_stringbuf_init, setbuf): Likewise.\n\t* include/std/std_streambuf.h (~basic_streambuf(),\n\tbasic_streambuf()): Likewise, remove _M_buf_size_opt member.\n\t* testsuite/27_io/basic_filebuf/close/char/3.cc: Set _M_buf_size.\n\t* testsuite/27_io/basic_filebuf/in_avail/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sbumpc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekpos/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sgetc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sgetn/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/snextc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sputbackc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sputc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sputn/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sungetc/char/1.cc: Likewise.\n\nFrom-SVN: r65518", "tree": {"sha": "73a480ea88c541c409b09d39cd3afd7f34452644", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73a480ea88c541c409b09d39cd3afd7f34452644"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ef9fd85efee623d62215c4ab0f97fe6b796af55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef9fd85efee623d62215c4ab0f97fe6b796af55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ef9fd85efee623d62215c4ab0f97fe6b796af55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ef9fd85efee623d62215c4ab0f97fe6b796af55/comments", "author": null, "committer": null, "parents": [{"sha": "2bd020439ad63aa78333cf0e66f6b8ca0b63685c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd020439ad63aa78333cf0e66f6b8ca0b63685c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd020439ad63aa78333cf0e66f6b8ca0b63685c"}], "stats": {"total": 126, "additions": 69, "deletions": 57}, "files": [{"sha": "10791e4e6b855f4b6dd18dd11d36253d12594909", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -1,3 +1,29 @@\n+2003-04-12  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tRemove _M_buf_size_opt, use directly _M_buf_size instead.\n+\t* include/bits/fstream.tcc\n+\t(basic_filebuf::_M_allocate_internal_buffer, setbuf): Remove\n+\treferences to _M_buf_size_opt. \n+\t* include/bits/sstream.tcc (basic_stringbuf::overflow): Likewise.\n+\t* include/bits/streambuf.tcc (__copy_streambufs): Likewise, rename\n+\t__bufsize to __in_avail and __size_opt to __buf_size.\n+\t* include/ext/stdio_filebuf.h (stdio_filebuf::stdio_filebuf): Likewise.\n+\t* include/std/std_sstream.h (_M_stringbuf_init, setbuf): Likewise.\n+\t* include/std/std_streambuf.h (~basic_streambuf(),\n+\tbasic_streambuf()): Likewise, remove _M_buf_size_opt member.\n+\t* testsuite/27_io/basic_filebuf/close/char/3.cc: Set _M_buf_size.\n+\t* testsuite/27_io/basic_filebuf/in_avail/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sbumpc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sgetc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sgetn/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/snextc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sputbackc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sputc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sputn/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sungetc/char/1.cc: Likewise.\n+\n 2003-04-12  Paolo Carlini  <pcarlini at unitus dot it>\n \n \t* include/ext/stdio_filebuf.h"}, {"sha": "360b907336bfeb2da3803462fbe440591f9d7c13", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -44,10 +44,8 @@ namespace std\n     basic_filebuf<_CharT, _Traits>::\n     _M_allocate_internal_buffer()\n     {\n-      if (!this->_M_buf && this->_M_buf_size_opt)\n+      if (!this->_M_buf && this->_M_buf_size)\n \t{\n-\t  this->_M_buf_size = this->_M_buf_size_opt;\n-\n \t  // Allocate internal buffer.\n \t  this->_M_buf = new char_type[this->_M_buf_size];\n \t  _M_buf_allocated = true;\n@@ -416,7 +414,7 @@ namespace std\n     setbuf(char_type* __s, streamsize __n)\n     {\n       if (!this->is_open() && __s == 0 && __n == 0)\n-\tthis->_M_buf_size_opt = 0;\n+\tthis->_M_buf_size = 0;\n       else if (__s && __n)\n \t{\n \t  // This is implementation-defined behavior, and assumes\n@@ -429,7 +427,7 @@ namespace std\n \t  \n \t  // Step 2: Use the external array.\n \t  this->_M_buf = __s;\n-\t  this->_M_buf_size_opt = this->_M_buf_size = __n;\n+\t  this->_M_buf_size = __n;\n \t  // Consistently set the end of buffer pointer.\n \t  this->_M_out_end = this->_M_buf + this->_M_buf_size;\n \t  _M_set_indeterminate();"}, {"sha": "ab3298c102259af948caa7f5957ff9ca19b5678d", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -88,10 +88,12 @@ namespace std\n       if (__builtin_expect(__testeof, false))\n \treturn traits_type::not_eof(__c);\n \n-      // In virtue of DR 169 (TC) we are allowed to grow more than\n-      // one char the first time and also...\n-      __size_type __len = std::max(__size_type(_M_string.capacity() + 1), \n-\t\t\t\t   this->_M_buf_size_opt);\n+      // NB: Start ostringstream buffers at 512 chars. This is an\n+      // experimental value (pronounced \"arbitrary\" in some of the\n+      // hipper english-speaking countries), and can be changed to\n+      // suit particular needs.\n+      __size_type __len = std::max(__size_type(_M_string.capacity() + 1),\n+\t\t\t\t   __size_type(512));\n       bool __testput = this->_M_out_cur < this->_M_out_end;\n       if (__builtin_expect(!__testput && __len > _M_string.max_size(), false))\n \treturn traits_type::eof();\n@@ -102,8 +104,9 @@ namespace std\n \t{\n \t  // Force-allocate, re-sync.\n \t  _M_string = this->str();\n-\t  // ... the next time. That's easy to implement thanks to the\n-\t  // exponential growth policy builtin into basic_string.\n+\t  // In virtue of DR 169 (TC) we are allowed to grow more than\n+\t  // one char. That's easy to implement thanks to the exponential\n+\t  // growth policy builtin into basic_string.\n \t  _M_string.reserve(__len);\n \t  _M_really_sync(const_cast<char_type*>(_M_string.data()),\n \t\t\t this->_M_in_cur - this->_M_in_beg, "}, {"sha": "75ef5182c409df8a457efa2b48dbdc2fd8e09372", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -192,29 +192,29 @@ namespace std\n       typedef typename _Traits::off_type\toff_type;\n \n       streamsize __ret = 0;\n-      streamsize __bufsize = __sbin->in_avail();\n+      streamsize __in_avail = __sbin->in_avail();\n       streamsize __xtrct;\n-      const off_type __size_opt =\n-\t__sbin->_M_buf_size_opt > 0 ? __sbin->_M_buf_size_opt : 1;\n+      const off_type __buf_size =\n+\t__sbin->_M_buf_size > 0 ? __sbin->_M_buf_size : 1;\n \n       try \n \t{\n-\t  while (__bufsize != -1)\n+\t  while (__in_avail != -1)\n   \t    {\n- \t      if (__bufsize != 0 && __sbin->gptr() != NULL\n-\t\t  && __sbin->gptr() + __bufsize <= __sbin->egptr()) \n+ \t      if (__in_avail != 0 && __sbin->gptr()\n+\t\t  && __sbin->gptr() + __in_avail <= __sbin->egptr()) \n \t\t{\n-\t\t  __xtrct = __sbout->sputn(__sbin->gptr(), __bufsize);\n+\t\t  __xtrct = __sbout->sputn(__sbin->gptr(), __in_avail);\n \t\t  __ret += __xtrct;\n \t\t  __sbin->_M_in_cur_move(__xtrct);\n-\t\t  if (__xtrct != __bufsize)\n+\t\t  if (__xtrct != __in_avail)\n \t\t    break;\n \t\t}\n  \t      else \n \t\t{\n \t\t  streamsize __charsread;\n \t\t  const streamsize __size =\n-\t\t    std::min(__size_opt, off_type(__sbout->_M_out_end -\n+\t\t    std::min(__buf_size, off_type(__sbout->_M_out_end -\n \t\t\t\t\t\t  __sbout->_M_out_cur));\n \t\t  if (__size > 1)\n \t\t    {\n@@ -246,7 +246,7 @@ namespace std\n \t\t}\n  \t      if (_Traits::eq_int_type(__sbin->sgetc(), _Traits::eof()))\n   \t\tbreak;\n- \t      __bufsize = __sbin->in_avail();\n+ \t      __in_avail = __sbin->in_avail();\n   \t    }\n \t}\n       catch(exception& __fail) "}, {"sha": "c2cfa2c143f3aa7454c728b29af0f628a555734f", "filename": "libstdc++-v3/include/ext/stdio_filebuf.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -129,11 +129,10 @@ namespace __gnu_cxx\n \t      // Specify not to use an allocated buffer.\n \t      this->_M_buf = _M_unbuf;\n \t      this->_M_buf_size = __size;\n-\t      this->_M_buf_size_opt = 0;\n \t    }\n \t  else\n \t    {\n-\t      this->_M_buf_size_opt = __size;\n+\t      this->_M_buf_size = __size;\n \t      _M_allocate_internal_buffer();\n \t    }\n \t  _M_set_indeterminate();\n@@ -154,11 +153,10 @@ namespace __gnu_cxx\n \t      // Specify not to use an allocated buffer.\n \t      this->_M_buf = _M_unbuf;\n \t      this->_M_buf_size = __size;\n-\t      this->_M_buf_size_opt = 0;\n \t    }\n \t  else\n \t    {\n-\t      this->_M_buf_size_opt = __size;\n+\t      this->_M_buf_size = __size;\n \t      _M_allocate_internal_buffer();\n \t    }\n \t  _M_set_indeterminate();"}, {"sha": "635e8ed61fb7ebf2217ef6df11f00b3e33874de8", "filename": "libstdc++-v3/include/std/std_sstream.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -177,13 +177,8 @@ namespace std\n       void\n       _M_stringbuf_init(ios_base::openmode __mode)\n       {\n-\t// NB: Start ostringstream buffers at 512 bytes. This is an\n-\t// experimental value (pronounced \"arbitrary\" in some of the\n-\t// hipper english-speaking countries), and can be changed to\n-\t// suit particular needs.\n-\tthis->_M_buf_size_opt = 512;\n \tthis->_M_mode = __mode;\n-\t\n+\n \t__size_type __len = 0;\n \tif (this->_M_mode & (ios_base::ate | ios_base::app))\n \t  __len = _M_string.size();\n@@ -235,7 +230,7 @@ namespace std\n \t    \n \t    // Step 2: Use the external array.\n \t    this->_M_buf = __s;\n-\t    this->_M_buf_size_opt = this->_M_buf_size = __n;\n+\t    this->_M_buf_size = __n;\n \t    _M_really_sync(__s, 0, 0);\n \t  }\n \treturn this;"}, {"sha": "f6a31ac7c26a9ac1efda9706b177b8046bb7804a", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -172,19 +172,12 @@ namespace std\n \n       /**\n        *  @if maint\n-       *  Actual size of allocated internal buffer, in bytes. Unused\n-       *  for sstreams, which have readily available _M_string.capacity().\n+       *  Actual size of allocated internal buffer. Unused for sstreams,\n+       *  which have readily available _M_string.capacity().\n        *  @endif\n       */\n       size_t\t\t\t_M_buf_size;\n \n-      /**\n-       *  @if maint\n-       *  Optimal or preferred size of internal buffer, in bytes.\n-       *  @endif\n-      */\n-      size_t\t\t\t_M_buf_size_opt;\n-\n       /**\n        *  @if maint\n        *  True iff _M_in_* and _M_out_* buffers should always point to\n@@ -340,7 +333,6 @@ namespace std\n       {\n \t_M_buf_unified = false;\n \t_M_buf_size = 0;\n-\t_M_buf_size_opt = 0;\n \t_M_mode = ios_base::openmode(0);\n       }\n \n@@ -552,9 +544,9 @@ namespace std\n        *  - this is not an error\n       */\n       basic_streambuf()\n-      : _M_buf(NULL), _M_buf_size(0), _M_buf_size_opt(BUFSIZ), \n-      _M_buf_unified(false), _M_in_beg(0), _M_in_cur(0), _M_in_end(0),\n-      _M_out_beg(0), _M_out_cur(0), _M_out_end(0), _M_out_lim(0),\n+      : _M_buf(NULL), _M_buf_size(BUFSIZ), _M_buf_unified(false),\n+      _M_in_beg(0), _M_in_cur(0), _M_in_end(0), _M_out_beg(0),\n+      _M_out_cur(0), _M_out_end(0), _M_out_lim(0),\n       _M_mode(ios_base::openmode(0)), _M_buf_locale(locale()), \n       _M_pback_cur_save(0), _M_pback_end_save(0), \n       _M_pback_init(false)"}, {"sha": "94059d0ee59bd64cd97611de5087402be07447f6", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fclose%2Fchar%2F3.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -54,7 +54,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "479ff7ba7078f3997388d53a54871aea66aefa0c", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/in_avail/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fin_avail%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fin_avail%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fin_avail%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -54,7 +54,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "d2c7ccd53b471291576e9f432e2262074d66d7c8", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsbumpc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsbumpc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsbumpc%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -41,7 +41,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "e448326d76b8e1df533f3e4fc3f5485eddc6849f", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -39,7 +39,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_03; // in | out"}, {"sha": "cd4084fc85e12ad76ca07071365a402f8f002f5e", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -39,7 +39,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_03; // in | out"}, {"sha": "f5a194c32124d687c867e66dcfe00465264b056f", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetc%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -54,7 +54,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "634d41bec399a9f8e7550dc3e138feed70bea9b7", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -41,7 +41,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "fb205bd701f01bfe435cf9b58ad757a7838ee8c3", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsnextc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsnextc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsnextc%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -41,7 +41,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "0f2eb896f5b7f3765528b1b4dbb86b78975a1dfd", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputbackc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputbackc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputbackc%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -54,7 +54,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "875f37e8ae18ee1df99b055e30e5a52e68879be5", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputc%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -54,7 +54,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "a8bafd50788bab47ca01d8939e4f3107858ae4b1", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputn%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputn%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsputn%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -54,7 +54,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}, {"sha": "c0f2520c7d106e7b123c89fb9051c4e9a133f843", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ef9fd85efee623d62215c4ab0f97fe6b796af55/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsungetc%2Fchar%2F1.cc?ref=7ef9fd85efee623d62215c4ab0f97fe6b796af55", "patch": "@@ -54,7 +54,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size_opt = __size; }\n+  set_size(int_type __size) { _M_buf_size = __size; }\n };\n \n derived_filebuf fb_01; // in "}]}