{"sha": "da932f04bf29ea11aa9554d84efd114f52bb7093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5MzJmMDRiZjI5ZWExMWFhOTU1NGQ4NGVmZDExNGY1MmJiNzA5Mw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-06T15:48:29Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-06T15:48:29Z"}, "message": "m68k.c: Include tree.h for dwarf2out_cfi_label.\n\n        * m68k.c: Include tree.h for dwarf2out_cfi_label.\n\n        * gcc.c (process_command): Do not take address of function fatal when\n        calling lang_specific_driver.\n\n        * config/i386/cygwin32.h (DWARF2_UNWIND): Exception handling\n        doesn't work with it yet, so set it to 0.\n        * config/i386/xm-cygwin32.h (NO_SYS_SIGLIST): Define.\n\n        * cse.c (cse_insn): Check for invalid entries when taking references.\nMore assorted pending patches.\n\nFrom-SVN: r16978", "tree": {"sha": "d3ec4d03867dc1c946b0b2742d599df1ce8246e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3ec4d03867dc1c946b0b2742d599df1ce8246e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da932f04bf29ea11aa9554d84efd114f52bb7093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da932f04bf29ea11aa9554d84efd114f52bb7093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da932f04bf29ea11aa9554d84efd114f52bb7093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da932f04bf29ea11aa9554d84efd114f52bb7093/comments", "author": null, "committer": null, "parents": [{"sha": "aa2fbe8d1fbffec8eb928cf350fbb890343f33be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2fbe8d1fbffec8eb928cf350fbb890343f33be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2fbe8d1fbffec8eb928cf350fbb890343f33be"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "8290e9e286ba7c6eb5b2c5464285e87be8dc01eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da932f04bf29ea11aa9554d84efd114f52bb7093", "patch": "@@ -1,3 +1,20 @@\n+Mon Nov  3 05:45:32 1997  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* m68k.c: Include tree.h for dwarf2out_cfi_label.\n+\n+\t* gcc.c (process_command): Do not take address of function fatal when\n+\tcalling lang_specific_driver.\n+\n+Sat Dec  6 01:02:38 1997  Mumit Khan  <khan@xraylith.wisc.edu>\n+\n+\t* config/i386/cygwin32.h (DWARF2_UNWIND): Exception handling \n+\tdoesn't work with it yet, so set it to 0.\n+\t* config/i386/xm-cygwin32.h (NO_SYS_SIGLIST): Define.\n+\n+Sat Dec  6 01:01:02 1997  Christian Iseli  <Christian.Iseli@lslsun.epfl.ch>\n+\n+\t* cse.c (cse_insn): Check for invalid entries when taking references.\n+\n Fri Dec  5 18:26:25 1997  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* loop.c (invariant_p): Don't test flag_rerun_loop_opt."}, {"sha": "864ff95ff5b827c0facb98e3af90fea59512cc35", "filename": "gcc/config/i386/cygwin32.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin32.h?ref=da932f04bf29ea11aa9554d84efd114f52bb7093", "patch": "@@ -202,3 +202,7 @@ do {\t\t\t\t\t\t\t\t\\\n \n #undef ASM_COMMENT_START\n #define ASM_COMMENT_START \" #\"\n+\n+/* DWARF2 Unwinding doesn't work with exception handling yet. */\n+#define DWARF2_UNWIND_INFO 0\n+"}, {"sha": "d284b3e7e413c2e4a7f5d3b9a3592bf88e81cdc2", "filename": "gcc/config/i386/x-cygwin32", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fconfig%2Fi386%2Fx-cygwin32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fconfig%2Fi386%2Fx-cygwin32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-cygwin32?ref=da932f04bf29ea11aa9554d84efd114f52bb7093", "patch": "@@ -1,4 +1,2 @@\n # Don't run fixproto\n STMP_FIXPROTO =\n-# Don't need collect2\n-USE_COLLECT2 ="}, {"sha": "745ab58f8fe8623ddf74a5d8bde483cc01b750be", "filename": "gcc/config/i386/xm-cygwin32.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fconfig%2Fi386%2Fxm-cygwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fconfig%2Fi386%2Fxm-cygwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-cygwin32.h?ref=da932f04bf29ea11aa9554d84efd114f52bb7093", "patch": "@@ -21,6 +21,7 @@ Boston, MA 02111-1307, USA. */\n \n #define NO_STAB_H\n #define EXECUTABLE_SUFFIX \".exe\"\n+#define NO_SYS_SIGLIST 1\n \n /* Even though we support \"/\", allow \"\\\" since everybody tests both.  */\n #define DIR_SEPARATOR '\\\\'"}, {"sha": "605369f46d2dedc7d942704bc6c1f1caa497ae0b", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=da932f04bf29ea11aa9554d84efd114f52bb7093", "patch": "@@ -22,6 +22,7 @@ Boston, MA 02111-1307, USA.  */\n /* Some output-actions in m68k.md need these.  */\n #include \"config.h\"\n #include <stdio.h>\n+#include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "593d075b689825c5668e0fee3e148bfb1e837c40", "filename": "gcc/cse.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=da932f04bf29ea11aa9554d84efd114f52bb7093", "patch": "@@ -7463,6 +7463,11 @@ cse_insn (insn, in_libcall_block)\n \t\t  merge_equiv_classes (src_elt, classp);\n \n \t\tclassp = src_elt->first_same_value;\n+\t\t/* Ignore invalid entries.  */\n+\t\twhile (classp\n+\t\t       && GET_CODE (classp->exp) != REG\n+\t\t       && ! exp_equiv_p (classp->exp, classp->exp, 1, 0))\n+\t\t  classp = classp->next_same_value;\n \t      }\n \t  }\n       }"}, {"sha": "77372870edbdb9a423701c9bdb98d1dd75a9de63", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da932f04bf29ea11aa9554d84efd114f52bb7093/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=da932f04bf29ea11aa9554d84efd114f52bb7093", "patch": "@@ -2513,7 +2513,7 @@ process_command (argc, argv)\n \n #ifdef LANG_SPECIFIC_DRIVER\n   /* Do language-specific adjustment/addition of flags.  */\n-  lang_specific_driver (&fatal, &argc, &argv);\n+  lang_specific_driver (fatal, &argc, &argv);\n #endif\n \n   /* Scan argv twice.  Here, the first time, just count how many switches"}]}