{"sha": "9ff806899bfa38ade0bddbdfb413ca3444425bcf", "node_id": "C_kwDOANBUbNoAKDlmZjgwNjg5OWJmYTM4YWRlMGJkZGJkZmI0MTNjYTM0NDQ0MjViY2Y", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-12-20T16:39:04Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2023-01-05T14:30:02Z"}, "message": "ada: Flag renaming-as-spec as a body to inline\n\nFor GNAT the frontend is only inlining subprograms with explicit specs,\nincluding specs completed with renaming-as-body. For GNATprove the\nfrontend must also inline renamings acting as specs. Otherwise, we will\ntry to build a body-to-inline with code that is can't handle unusual\nsubprogram renamings, e.g. those of the form \"object.call\".\n\ngcc/ada/\n\n\t* freeze.adb (Build_Renamed_Body): Rewrite subprogram renaming to\n\tsubprogram declaration early and then set the Body_To_Inling flag.", "tree": {"sha": "b6a96085752399459cf306ff655e65a09abac606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6a96085752399459cf306ff655e65a09abac606"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ff806899bfa38ade0bddbdfb413ca3444425bcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ff806899bfa38ade0bddbdfb413ca3444425bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ff806899bfa38ade0bddbdfb413ca3444425bcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ff806899bfa38ade0bddbdfb413ca3444425bcf/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6147feb54c7473033c5e9344fdd834c417820af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6147feb54c7473033c5e9344fdd834c417820af4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6147feb54c7473033c5e9344fdd834c417820af4"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "0e55f146e28fb752044741dc89a8e0101adfae1d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ff806899bfa38ade0bddbdfb413ca3444425bcf/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ff806899bfa38ade0bddbdfb413ca3444425bcf/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=9ff806899bfa38ade0bddbdfb413ca3444425bcf", "patch": "@@ -473,14 +473,19 @@ package body Freeze is\n          Set_Is_Overloaded (Call_Name, False);\n       end if;\n \n+      if Nkind (Decl) /= N_Subprogram_Declaration then\n+         Rewrite (N,\n+           Make_Subprogram_Declaration (Loc,\n+             Specification => Specification (N)));\n+      end if;\n+\n       --  For simple renamings, subsequent calls can be expanded directly as\n       --  calls to the renamed entity. The body must be generated in any case\n       --  for calls that may appear elsewhere. This is not done in the case\n       --  where the subprogram is an instantiation because the actual proper\n       --  body has not been built yet.\n \n       if Ekind (Old_S) in E_Function | E_Procedure\n-        and then Nkind (Decl) = N_Subprogram_Declaration\n         and then not Is_Generic_Instance (Old_S)\n       then\n          Set_Body_To_Inline (Decl, Old_S);\n@@ -655,12 +660,6 @@ package body Freeze is\n                  Statements => New_List (Call_Node)));\n       end if;\n \n-      if Nkind (Decl) /= N_Subprogram_Declaration then\n-         Rewrite (N,\n-           Make_Subprogram_Declaration (Loc,\n-             Specification => Specification (N)));\n-      end if;\n-\n       --  Link the body to the entity whose declaration it completes. If\n       --  the body is analyzed when the renamed entity is frozen, it may\n       --  be necessary to restore the proper scope (see package Exp_Ch13)."}]}