{"sha": "3c0d13bfabf987605a138b41874fe88b673f63c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MwZDEzYmZhYmY5ODc2MDVhMTM4YjQxODc0ZmU4OGI2NzNmNjNjMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-05-15T23:40:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-05-15T23:40:57Z"}, "message": "c-common.c (c_common_reswords): Reorder.\n\n/c-family\n2011-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* c-common.c (c_common_reswords): Reorder.\n\t* c-common.h (rid): Likewise.\n\n/cp\n2011-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* cxx-pretty-print.c: Update comment.\n\t* semantics.c (trait_expr_value, finish_trait_expr):\n\tReorder the cases.\n\t* parser.c (cp_parser_primary_expression): Likewise.\n\nFrom-SVN: r173780", "tree": {"sha": "d548bb8c71c7524724f99f882719aced3831f8be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d548bb8c71c7524724f99f882719aced3831f8be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c0d13bfabf987605a138b41874fe88b673f63c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0d13bfabf987605a138b41874fe88b673f63c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0d13bfabf987605a138b41874fe88b673f63c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0d13bfabf987605a138b41874fe88b673f63c3/comments", "author": null, "committer": null, "parents": [{"sha": "5bef11c8e7138b24f9f30bb778218d5151df65cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bef11c8e7138b24f9f30bb778218d5151df65cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bef11c8e7138b24f9f30bb778218d5151df65cb"}], "stats": {"total": 61, "additions": 41, "deletions": 20}, "files": [{"sha": "cf183347c40a108f1e78f16f54c83c2b53e96bbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c0d13bfabf987605a138b41874fe88b673f63c3", "patch": "@@ -2587,8 +2587,6 @@\n \n 2011-04-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n-\t* c-family/c-common.c (struct c_common_resword): Add __underlying_type.\n-\t* c-family/c-common.h (enum rid): Add RID_UNDERLYING_TYPE.\n \t* doc/extend.texi: Document __underlying_type.\n \n 2011-04-25  Segher Boessenkool  <segher@kernel.crashing.org>"}, {"sha": "7fa73314501ff2878892f31f88edcb066c1018bb", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=3c0d13bfabf987605a138b41874fe88b673f63c3", "patch": "@@ -1,3 +1,8 @@\n+2011-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* c-common.c (c_common_reswords): Reorder.\n+\t* c-common.h (rid): Likewise.\n+\n 2011-05-10  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* c-common.c (def_fn_type): Don't call build_function_type, call\n@@ -48,6 +53,11 @@\n \t* c-ppoutput.c (maybe_print_line): Always optimize newlines\n \tfor output size with -P.\n \n+2011-04-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* c-common.c (struct c_common_resword): Add __underlying_type.\n+\t* c-common.h (enum rid): Add RID_UNDERLYING_TYPE.\n+\n 2011-04-20  Jim Meyering  <meyering@redhat.com>\n \n \t* c-format.c (init_dollar_format_checking): Remove useless\n@@ -56,15 +66,15 @@\n 2011-04-15  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* c-objc.h (objc_get_interface_ivars): Removed.\n-\t(objc_detect_field_duplicates): New.\t\n+\t(objc_detect_field_duplicates): New.\n \t* stub-objc.c: Likewise.\n-\t\n+\n 2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* stub-objc.c (objc_declare_protocols): Renamed to\n \tobjc_declare_protocol.\n \t* c-objc.h: Likewise.\n-\t\n+\n 2011-04-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* stub-objc.c (objc_declare_class): Updated argument name."}, {"sha": "8fc68eb6fea48164116ecd7781a9911c0d6cbe45", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=3c0d13bfabf987605a138b41874fe88b673f63c3", "patch": "@@ -437,24 +437,23 @@ const struct c_common_resword c_common_reswords[] =\n   { \"__has_trivial_copy\", RID_HAS_TRIVIAL_COPY, D_CXXONLY },\n   { \"__has_trivial_destructor\", RID_HAS_TRIVIAL_DESTRUCTOR, D_CXXONLY },\n   { \"__has_virtual_destructor\", RID_HAS_VIRTUAL_DESTRUCTOR, D_CXXONLY },\n+  { \"__imag\",\t\tRID_IMAGPART,\t0 },\n+  { \"__imag__\",\t\tRID_IMAGPART,\t0 },\n+  { \"__inline\",\t\tRID_INLINE,\t0 },\n+  { \"__inline__\",\tRID_INLINE,\t0 },\n   { \"__int128\",\t\tRID_INT128,\t0 },\n   { \"__is_abstract\",\tRID_IS_ABSTRACT, D_CXXONLY },\n   { \"__is_base_of\",\tRID_IS_BASE_OF, D_CXXONLY },\n   { \"__is_class\",\tRID_IS_CLASS,\tD_CXXONLY },\n   { \"__is_convertible_to\", RID_IS_CONVERTIBLE_TO, D_CXXONLY },\n   { \"__is_empty\",\tRID_IS_EMPTY,\tD_CXXONLY },\n   { \"__is_enum\",\tRID_IS_ENUM,\tD_CXXONLY },\n+  { \"__is_literal_type\", RID_IS_LITERAL_TYPE, D_CXXONLY },\n   { \"__is_pod\",\t\tRID_IS_POD,\tD_CXXONLY },\n   { \"__is_polymorphic\",\tRID_IS_POLYMORPHIC, D_CXXONLY },\n   { \"__is_standard_layout\", RID_IS_STD_LAYOUT, D_CXXONLY },\n   { \"__is_trivial\",     RID_IS_TRIVIAL, D_CXXONLY },\n   { \"__is_union\",\tRID_IS_UNION,\tD_CXXONLY },\n-  { \"__is_literal_type\", RID_IS_LITERAL_TYPE, D_CXXONLY },\n-  { \"__underlying_type\", RID_UNDERLYING_TYPE, D_CXXONLY },\n-  { \"__imag\",\t\tRID_IMAGPART,\t0 },\n-  { \"__imag__\",\t\tRID_IMAGPART,\t0 },\n-  { \"__inline\",\t\tRID_INLINE,\t0 },\n-  { \"__inline__\",\tRID_INLINE,\t0 },\n   { \"__label__\",\tRID_LABEL,\t0 },\n   { \"__null\",\t\tRID_NULL,\t0 },\n   { \"__real\",\t\tRID_REALPART,\t0 },\n@@ -466,6 +465,7 @@ const struct c_common_resword c_common_reswords[] =\n   { \"__thread\",\t\tRID_THREAD,\t0 },\n   { \"__typeof\",\t\tRID_TYPEOF,\t0 },\n   { \"__typeof__\",\tRID_TYPEOF,\t0 },\n+  { \"__underlying_type\", RID_UNDERLYING_TYPE, D_CXXONLY },\n   { \"__volatile\",\tRID_VOLATILE,\t0 },\n   { \"__volatile__\",\tRID_VOLATILE,\t0 },\n   { \"alignof\",\t\tRID_ALIGNOF,\tD_CXXONLY | D_CXX0X | D_CXXWARN },"}, {"sha": "7136b017dcb87c1048eb6a8ed7b082418142f723", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=3c0d13bfabf987605a138b41874fe88b673f63c3", "patch": "@@ -135,9 +135,9 @@ enum rid\n   RID_IS_ABSTRACT,             RID_IS_BASE_OF,\n   RID_IS_CONVERTIBLE_TO,       RID_IS_CLASS,\n   RID_IS_EMPTY,                RID_IS_ENUM,\n-  RID_IS_POD,                  RID_IS_POLYMORPHIC,\n-  RID_IS_STD_LAYOUT,           RID_IS_TRIVIAL,\n-  RID_IS_UNION,                RID_IS_LITERAL_TYPE,\n+  RID_IS_LITERAL_TYPE,         RID_IS_POD,\n+  RID_IS_POLYMORPHIC,          RID_IS_STD_LAYOUT,\n+  RID_IS_TRIVIAL,              RID_IS_UNION,\n   RID_UNDERLYING_TYPE,\n \n   /* C++0x */"}, {"sha": "1660e1f26792ffdf44fe5c277af0cc250951f942", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3c0d13bfabf987605a138b41874fe88b673f63c3", "patch": "@@ -1,3 +1,10 @@\n+2011-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* cxx-pretty-print.c: Update comment.\n+\t* semantics.c (trait_expr_value, finish_trait_expr):\n+\tReorder the cases.\n+\t* parser.c (cp_parser_primary_expression): Likewise.\n+\n 2011-05-15  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR c++/48994"}, {"sha": "2f392decf571972be03e947593cd3f09febc9955", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=3c0d13bfabf987605a138b41874fe88b673f63c3", "patch": "@@ -394,8 +394,11 @@ pp_cxx_id_expression (cxx_pretty_printer *pp, tree t)\n      __is_convertible_to ( type-id , type-id )     \n      __is_empty ( type-id )\n      __is_enum ( type-id )\n+     __is_literal_type ( type-id )\n      __is_pod ( type-id )\n      __is_polymorphic ( type-id )\n+     __is_std_layout ( type-id )\n+     __is_trivial ( type-id )\n      __is_union ( type-id )  */\n \n static void"}, {"sha": "cf9286a21dd11ba1aa3d9573d80e7d466e17a1ac", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=3c0d13bfabf987605a138b41874fe88b673f63c3", "patch": "@@ -3274,8 +3274,11 @@ cp_parser_translation_unit (cp_parser* parser)\n      __is_convertible_to ( type-id , type-id )     \n      __is_empty ( type-id )\n      __is_enum ( type-id )\n+     __is_literal_type ( type-id )\n      __is_pod ( type-id )\n      __is_polymorphic ( type-id )\n+     __is_std_layout ( type-id )\n+     __is_trivial ( type-id )\n      __is_union ( type-id )\n \n    Objective-C++ Extension:\n@@ -3601,12 +3604,12 @@ cp_parser_primary_expression (cp_parser *parser,\n \tcase RID_IS_CONVERTIBLE_TO:\n \tcase RID_IS_EMPTY:\n \tcase RID_IS_ENUM:\n+\tcase RID_IS_LITERAL_TYPE:\n \tcase RID_IS_POD:\n \tcase RID_IS_POLYMORPHIC:\n \tcase RID_IS_STD_LAYOUT:\n \tcase RID_IS_TRIVIAL:\n \tcase RID_IS_UNION:\n-\tcase RID_IS_LITERAL_TYPE:\n \t  return cp_parser_trait_expr (parser, token->keyword);\n \n \t/* Objective-C++ expressions.  */"}, {"sha": "56d2411854026b8cb8b37f85b7edb85545e85f2c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0d13bfabf987605a138b41874fe88b673f63c3/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=3c0d13bfabf987605a138b41874fe88b673f63c3", "patch": "@@ -5165,6 +5165,9 @@ trait_expr_value (cp_trait_kind kind, tree type1, tree type2)\n     case CPTK_IS_ENUM:\n       return (type_code1 == ENUMERAL_TYPE);\n \n+    case CPTK_IS_LITERAL_TYPE:\n+      return (literal_type_p (type1));\n+\n     case CPTK_IS_POD:\n       return (pod_type_p (type1));\n \n@@ -5180,9 +5183,6 @@ trait_expr_value (cp_trait_kind kind, tree type1, tree type2)\n     case CPTK_IS_UNION:\n       return (type_code1 == UNION_TYPE);\n \n-    case CPTK_IS_LITERAL_TYPE:\n-      return (literal_type_p (type1));\n-\n     default:\n       gcc_unreachable ();\n       return false;\n@@ -5227,11 +5227,11 @@ finish_trait_expr (cp_trait_kind kind, tree type1, tree type2)\n \t      || kind == CPTK_IS_CONVERTIBLE_TO\n \t      || kind == CPTK_IS_EMPTY\n \t      || kind == CPTK_IS_ENUM\n+\t      || kind == CPTK_IS_LITERAL_TYPE\n \t      || kind == CPTK_IS_POD\n \t      || kind == CPTK_IS_POLYMORPHIC\n \t      || kind == CPTK_IS_STD_LAYOUT\n \t      || kind == CPTK_IS_TRIVIAL\n-\t      || kind == CPTK_IS_LITERAL_TYPE\n \t      || kind == CPTK_IS_UNION);\n \n   if (kind == CPTK_IS_CONVERTIBLE_TO)\n@@ -5271,11 +5271,11 @@ finish_trait_expr (cp_trait_kind kind, tree type1, tree type2)\n     case CPTK_HAS_VIRTUAL_DESTRUCTOR:\n     case CPTK_IS_ABSTRACT:\n     case CPTK_IS_EMPTY:\n+    case CPTK_IS_LITERAL_TYPE:\n     case CPTK_IS_POD:\n     case CPTK_IS_POLYMORPHIC:\n     case CPTK_IS_STD_LAYOUT:\n     case CPTK_IS_TRIVIAL:\n-    case CPTK_IS_LITERAL_TYPE:\n       if (!check_trait_type (type1))\n \t{\n \t  error (\"incomplete type %qT not allowed\", type1);"}]}