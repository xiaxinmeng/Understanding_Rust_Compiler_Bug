{"sha": "d94c476c36f5911c0dd072a5cad2fbe307f3f894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk0YzQ3NmMzNmY1OTExYzBkZDA3MmE1Y2FkMmZiZTMwN2YzZjg5NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-23T20:31:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-23T20:31:41Z"}, "message": "sparc.md (cpu_feature): Minor tweak.\n\n\t* config/sparc/sparc.md (cpu_feature): Minor tweak.\n\t(enabled): Likewise.\n\t(movsi_insn, movdi_insn_sp32, movdi_insn_sp64, movsf_insn,\n\tmovdf_insn_sp32, movdf_insn_sp64, zero_extendsidi2_insn_sp64,\n\tsign_extendsidi2_insn, mov<VM32:mode>_insn, mov<VM64:mode>_insn_sp64,\n\tmov<VM64:mode>_insn_sp32, not_<code><mode>, nand<mode>_vis,\n\t<code>_not1<mode>_vi, <code>_not2<mode>_vis, one_cmpl<mode>2,\n\tfcmp<code><GCM:gcm_name>, pdistn<mode>_vis): Likewise.\n\nFrom-SVN: r241452", "tree": {"sha": "5bce81c2d030d98e9c25cfea75aabf53da4d9372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bce81c2d030d98e9c25cfea75aabf53da4d9372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d94c476c36f5911c0dd072a5cad2fbe307f3f894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94c476c36f5911c0dd072a5cad2fbe307f3f894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94c476c36f5911c0dd072a5cad2fbe307f3f894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94c476c36f5911c0dd072a5cad2fbe307f3f894/comments", "author": null, "committer": null, "parents": [{"sha": "87c9fca50cbe7ca997fa4aaa70f5aa44d9e5db79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87c9fca50cbe7ca997fa4aaa70f5aa44d9e5db79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87c9fca50cbe7ca997fa4aaa70f5aa44d9e5db79"}], "stats": {"total": 98, "additions": 55, "deletions": 43}, "files": [{"sha": "0522114feb72f6462f547ab6dbd6a75a198a71bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94c476c36f5911c0dd072a5cad2fbe307f3f894/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94c476c36f5911c0dd072a5cad2fbe307f3f894/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d94c476c36f5911c0dd072a5cad2fbe307f3f894", "patch": "@@ -1,3 +1,14 @@\n+2016-10-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sparc.md (cpu_feature): Minor tweak.\n+\t(enabled): Likewise.\n+\t(movsi_insn, movdi_insn_sp32, movdi_insn_sp64, movsf_insn,\n+\tmovdf_insn_sp32, movdf_insn_sp64, zero_extendsidi2_insn_sp64,\n+\tsign_extendsidi2_insn, mov<VM32:mode>_insn, mov<VM64:mode>_insn_sp64,\n+\tmov<VM64:mode>_insn_sp32, not_<code><mode>, nand<mode>_vis,\n+\t<code>_not1<mode>_vi, <code>_not2<mode>_vis, one_cmpl<mode>2,\n+\tfcmp<code><GCM:gcm_name>, pdistn<mode>_vis): Likewise.\n+\n 2016-10-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc-c.c (sparc_target_macros): Replace TARGET_64BIT"}, {"sha": "84ed2875cd415df56c6128a0ff88e5d2db7ede85", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 44, "deletions": 43, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d94c476c36f5911c0dd072a5cad2fbe307f3f894/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d94c476c36f5911c0dd072a5cad2fbe307f3f894/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=d94c476c36f5911c0dd072a5cad2fbe307f3f894", "patch": "@@ -253,12 +253,13 @@\n \t (symbol_ref \"TARGET_SPARCLET\") (const_string \"sparclet\")]\n \t(const_string \"v7\"))))\n \n-(define_attr \"cpu_feature\" \"none,fpu,fpunotv9,v9,vis,vis3,vis4\" (const_string \"none\"))\n+(define_attr \"cpu_feature\" \"none,fpu,fpunotv9,v9,vis,vis3,vis4\"\n+  (const_string \"none\"))\n \n (define_attr \"enabled\" \"\"\n   (cond [(eq_attr \"cpu_feature\" \"none\") (const_int 1)\n          (eq_attr \"cpu_feature\" \"fpu\") (symbol_ref \"TARGET_FPU\")\n-\t (eq_attr \"cpu_feature\" \"fpunotv9\") (symbol_ref \"TARGET_FPU && ! TARGET_V9\")\n+         (eq_attr \"cpu_feature\" \"fpunotv9\") (symbol_ref \"TARGET_FPU && !TARGET_V9\")\n          (eq_attr \"cpu_feature\" \"v9\") (symbol_ref \"TARGET_V9\")\n          (eq_attr \"cpu_feature\" \"vis\") (symbol_ref \"TARGET_VIS\")\n          (eq_attr \"cpu_feature\" \"vis3\") (symbol_ref \"TARGET_VIS3\")\n@@ -483,8 +484,7 @@\n \t   (const_string \"true\")\n \t] (const_string \"false\")))\n \n-;; True if the instruction executes in the V3 pipeline, in M7 and\n-;; later processors.\n+;; True if the instruction executes in the V3 pipeline, in M7 and later processors.\n (define_attr \"v3pipe\" \"false,true\" (const_string \"false\"))\n \n (define_delay (eq_attr \"type\" \"call\")\n@@ -1559,8 +1559,8 @@\n    fzeros\\t%0\n    fones\\t%0\"\n   [(set_attr \"type\" \"*,*,load,store,vismv,vismv,fpmove,fpload,fpstore,visl,visl\")\n-   (set_attr \"v3pipe\" \"*,*,*,*,true,true,*,*,*,true,true\")\n-   (set_attr \"cpu_feature\" \"*,*,*,*,vis3,vis3,*,*,*,vis,vis\")])\n+   (set_attr \"cpu_feature\" \"*,*,*,*,vis3,vis3,*,*,*,vis,vis\")\n+   (set_attr \"v3pipe\" \"*,*,*,*,true,true,*,*,*,true,true\")])\n \n (define_insn \"*movsi_lo_sum\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -1725,10 +1725,10 @@\n    fzero\\t%0\n    fone\\t%0\"\n   [(set_attr \"type\" \"store,store,store,load,*,*,*,*,fpstore,fpload,*,*,fpmove,*,*,*,fpload,fpstore,visl,visl\")\n-   (set_attr \"v3pipe\" \"false, false, false, false,false,false,false,false,false,false,false,false,false,false,false,false,false,false, true, true\")\n    (set_attr \"length\" \"*,2,*,*,2,2,2,2,*,*,2,2,*,2,2,2,*,*,*,*\")\n    (set_attr \"fptype\" \"*,*,*,*,*,*,*,*,*,*,*,*,double,*,*,*,*,*,double,double\")\n-   (set_attr \"cpu_feature\" \"v9,*,*,*,*,*,*,*,fpu,fpu,fpu,fpu,v9,fpunotv9,vis3,vis3,fpu,fpu,vis,vis\")])\n+   (set_attr \"cpu_feature\" \"v9,*,*,*,*,*,*,*,fpu,fpu,fpu,fpu,v9,fpunotv9,vis3,vis3,fpu,fpu,vis,vis\")\n+   (set_attr \"v3pipe\" \"*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,true,true\")])\n \n (define_insn \"*movdi_insn_sp64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r, m, r,*e,?*e,?*e,?W,b,b\")\n@@ -1749,9 +1749,9 @@\n    fzero\\t%0\n    fone\\t%0\"\n   [(set_attr \"type\" \"*,*,load,store,vismv,vismv,fpmove,fpload,fpstore,visl,visl\")\n-   (set_attr \"v3pipe\" \"*, *, *, *, *, *, *, *, *, true, true\")\n    (set_attr \"fptype\" \"*,*,*,*,*,*,double,*,*,double,double\")\n-   (set_attr \"cpu_feature\" \"*,*,*,*,vis3,vis3,*,*,*,vis,vis\")])\n+   (set_attr \"cpu_feature\" \"*,*,*,*,vis3,vis3,*,*,*,vis,vis\")\n+   (set_attr \"v3pipe\" \"*,*,*,*,*,*,*,*,*,true,true\")])\n \n (define_expand \"movdi_pic_label_ref\"\n   [(set (match_dup 3) (high:DI\n@@ -2313,8 +2313,8 @@\n     }\n }\n   [(set_attr \"type\" \"visl,visl,fpmove,*,*,*,vismv,vismv,fpload,load,fpstore,store\")\n-   (set_attr \"v3pipe\" \"true, true, *, *, *, *, true, true, *, *, *, *\")\n-   (set_attr \"cpu_feature\" \"vis,vis,fpu,*,*,*,vis3,vis3,fpu,*,fpu,*\")])\n+   (set_attr \"cpu_feature\" \"vis,vis,fpu,*,*,*,vis3,vis3,fpu,*,fpu,*\")\n+   (set_attr \"v3pipe\" \"true,true,*,*,*,*,true,true,*,*,*,*\")])\n \n ;; The following 3 patterns build SFmode constants in integer registers.\n \n@@ -2382,10 +2382,10 @@\n   #\n   #\"\n   [(set_attr \"type\" \"visl,visl,fpmove,*,*,*,fpload,store,fpstore,load,store,*,*,*,*\")\n-   (set_attr \"v3pipe\" \"true, true, *, *, *, *, *, *, *, *, *, *, *, *, *\")\n    (set_attr \"length\" \"*,*,*,2,2,2,*,*,*,*,*,2,2,2,2\")\n    (set_attr \"fptype\" \"double,double,double,*,*,*,*,*,*,*,*,*,*,*,*\")\n-   (set_attr \"cpu_feature\" \"vis,vis,v9,fpunotv9,vis3,vis3,fpu,v9,fpu,*,*,fpu,*,*,fpu\")])\n+   (set_attr \"cpu_feature\" \"vis,vis,v9,fpunotv9,vis3,vis3,fpu,v9,fpu,*,*,fpu,*,*,fpu\")\n+   (set_attr \"v3pipe\" \"true,true,*,*,*,*,*,*,*,*,*,*,*,*,*\")])\n \n (define_insn \"*movdf_insn_sp64\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,*r, e,  e,W, *r,*r,  m,*r\")\n@@ -2406,10 +2406,10 @@\n   stx\\t%r1, %0\n   #\"\n   [(set_attr \"type\" \"visl,visl,fpmove,vismv,vismv,load,store,*,load,store,*\")\n-   (set_attr \"v3pipe\" \"true, true, *, *, *, *, *, *, *, *, *\")\n    (set_attr \"length\" \"*,*,*,*,*,*,*,*,*,*,2\")\n    (set_attr \"fptype\" \"double,double,double,double,double,*,*,*,*,*,*\")\n-   (set_attr \"cpu_feature\" \"vis,vis,fpu,vis3,vis3,fpu,fpu,*,*,*,*\")])\n+   (set_attr \"cpu_feature\" \"vis,vis,fpu,vis3,vis3,fpu,fpu,*,*,*,*\")\n+   (set_attr \"v3pipe\" \"true,true,*,*,*,*,*,*,*,*,*\")])\n \n ;; This pattern builds DFmode constants in integer registers.\n (define_split\n@@ -3088,8 +3088,8 @@\n    lduw\\t%1, %0\n    movstouw\\t%1, %0\"\n   [(set_attr \"type\" \"shift,load,*\")\n-   (set_attr \"v3pipe\" \"*,*,true\")\n-   (set_attr \"cpu_feature\" \"*,*,vis3\")])\n+   (set_attr \"cpu_feature\" \"*,*,vis3\")\n+   (set_attr \"v3pipe\" \"*,*,true\")])\n \n (define_insn_and_split \"*zero_extendsidi2_insn_sp32\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -3403,9 +3403,9 @@\n   ldsw\\t%1, %0\n   movstosw\\t%1, %0\"\n   [(set_attr \"type\" \"shift,sload,*\")\n-   (set_attr \"v3pipe\" \"*,*,true\")\n    (set_attr \"us3load_type\" \"*,3cycle,*\")\n-   (set_attr \"cpu_feature\" \"*,*,vis3\")])\n+   (set_attr \"cpu_feature\" \"*,*,vis3\")\n+   (set_attr \"v3pipe\" \"*,*,true\")])\n \n \n ;; Special pattern for optimizing bit-field compares.  This is needed\n@@ -8519,7 +8519,8 @@\n (define_mode_iterator VM64 [V1DI V2SI V4HI V8QI])\n (define_mode_iterator VMALL [V1SI V2HI V4QI V1DI V2SI V4HI V8QI])\n \n-(define_mode_attr vbits [(V2SI \"32\") (V4HI \"16\") (V1SI \"32s\") (V2HI \"16s\") (V8QI \"8\")])\n+(define_mode_attr vbits [(V2SI \"32\") (V4HI \"16\") (V1SI \"32s\") (V2HI \"16s\")\n+\t\t\t (V8QI \"8\")])\n (define_mode_attr vconstr [(V1SI \"f\") (V2HI \"f\") (V4QI \"f\")\n \t\t\t   (V1DI \"e\") (V2SI \"e\") (V4HI \"e\") (V8QI \"e\")])\n (define_mode_attr vfptype [(V1SI \"single\") (V2HI \"single\") (V4QI \"single\")\n@@ -8554,8 +8555,8 @@\n   movstouw\\t%1, %0\n   movwtos\\t%1, %0\"\n   [(set_attr \"type\" \"visl,visl,vismv,fpload,fpstore,store,load,store,*,vismv,vismv\")\n-   (set_attr \"v3pipe\" \"true,true,true,false,false,false,false,false,false,true,true\")\n-   (set_attr \"cpu_feature\" \"vis,vis,vis,*,*,*,*,*,*,vis3,vis3\")])\n+   (set_attr \"cpu_feature\" \"vis,vis,vis,*,*,*,*,*,*,vis3,vis3\")\n+   (set_attr \"v3pipe\" \"true,true,true,*,*,*,*,*,*,true,true\")])\n \n (define_insn \"*mov<VM64:mode>_insn_sp64\"\n   [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e,e,e,e,m,m,*r, m,*r, e,*r\")\n@@ -8577,8 +8578,8 @@\n   movxtod\\t%1, %0\n   mov\\t%1, %0\"\n   [(set_attr \"type\" \"visl,visl,vismv,fpload,fpstore,store,load,store,vismv,vismv,*\")\n-   (set_attr \"v3pipe\" \"true, true, true, false, false, false, false, false, false, false, false\")\n-   (set_attr \"cpu_feature\" \"vis,vis,vis,*,*,*,*,*,vis3,vis3,*\")])\n+   (set_attr \"cpu_feature\" \"vis,vis,vis,*,*,*,*,*,vis3,vis3,*\")\n+   (set_attr \"v3pipe\" \"true,true,true,*,*,*,*,*,*,*,*\")])\n \n (define_insn \"*mov<VM64:mode>_insn_sp32\"\n   [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e,e,e,*r, f,e,m,m,U,T, o,*r\")\n@@ -8601,9 +8602,9 @@\n   #\n   #\"\n   [(set_attr \"type\" \"visl,visl,vismv,*,*,fpload,fpstore,store,load,store,*,*\")\n-   (set_attr \"v3pipe\" \"true, true, true, false, false, false, false, false, false, false, false, false\")\n    (set_attr \"length\" \"*,*,*,2,2,*,*,*,*,*,2,2\")\n-   (set_attr \"cpu_feature\" \"vis,vis,vis,vis3,vis3,*,*,*,*,*,*,*\")])\n+   (set_attr \"cpu_feature\" \"vis,vis,vis,vis3,vis3,*,*,*,*,*,*,*\")\n+   (set_attr \"v3pipe\" \"true,true,true,*,*,*,*,*,*,*,*,*\")])\n \n (define_split\n   [(set (match_operand:VM64 0 \"memory_operand\" \"\")\n@@ -8698,8 +8699,8 @@\n   \"TARGET_VIS\"\n   \"f<vlinsn><vlsuf>\\t%1, %2, %0\"\n   [(set_attr \"type\" \"visl\")\n-   (set_attr \"v3pipe\" \"true\")\n-   (set_attr \"fptype\" \"<vfptype>\")])\n+   (set_attr \"fptype\" \"<vfptype>\")\n+   (set_attr \"v3pipe\" \"true\")])\n \n (define_insn \"*not_<code><mode>3\"\n   [(set (match_operand:VL 0 \"register_operand\" \"=<vconstr>\")\n@@ -8708,8 +8709,8 @@\n   \"TARGET_VIS\"\n   \"f<vlninsn><vlsuf>\\t%1, %2, %0\"\n   [(set_attr \"type\" \"visl\")\n-   (set_attr \"v3pipe\" \"true\")\n-   (set_attr \"fptype\" \"<vfptype>\")])\n+   (set_attr \"fptype\" \"<vfptype>\")\n+   (set_attr \"v3pipe\" \"true\")])\n \n ;; (ior (not (op1)) (not (op2))) is the canonical form of NAND.\n (define_insn \"*nand<mode>_vis\"\n@@ -8719,8 +8720,8 @@\n   \"TARGET_VIS\"\n   \"fnand<vlsuf>\\t%1, %2, %0\"\n   [(set_attr \"type\" \"visl\")\n-   (set_attr \"v3pipe\" \"true\")\n-   (set_attr \"fptype\" \"<vfptype>\")])\n+   (set_attr \"fptype\" \"<vfptype>\")\n+   (set_attr \"v3pipe\" \"true\")])\n \n (define_code_iterator vlnotop [ior and])\n \n@@ -8731,8 +8732,8 @@\n   \"TARGET_VIS\"\n   \"f<vlinsn>not1<vlsuf>\\t%1, %2, %0\"\n   [(set_attr \"type\" \"visl\")\n-   (set_attr \"v3pipe\" \"true\")\n-   (set_attr \"fptype\" \"<vfptype>\")])\n+   (set_attr \"fptype\" \"<vfptype>\")\n+   (set_attr \"v3pipe\" \"true\")])\n \n (define_insn \"*<code>_not2<mode>_vis\"\n   [(set (match_operand:VL 0 \"register_operand\" \"=<vconstr>\")\n@@ -8741,17 +8742,17 @@\n   \"TARGET_VIS\"\n   \"f<vlinsn>not2<vlsuf>\\t%1, %2, %0\"\n   [(set_attr \"type\" \"visl\")\n-   (set_attr \"v3pipe\" \"true\")\n-   (set_attr \"fptype\" \"<vfptype>\")])\n+   (set_attr \"fptype\" \"<vfptype>\")\n+   (set_attr \"v3pipe\" \"true\")])\n \n (define_insn \"one_cmpl<mode>2\"\n   [(set (match_operand:VL 0 \"register_operand\" \"=<vconstr>\")\n \t(not:VL (match_operand:VL 1 \"register_operand\" \"<vconstr>\")))]\n   \"TARGET_VIS\"\n   \"fnot1<vlsuf>\\t%1, %0\"\n   [(set_attr \"type\" \"visl\")\n-   (set_attr \"v3pipe\" \"true\")\n-   (set_attr \"fptype\" \"<vfptype>\")])\n+   (set_attr \"fptype\" \"<vfptype>\")\n+   (set_attr \"v3pipe\" \"true\")])\n \n ;; Hard to generate VIS instructions.  We have builtins for these.\n \n@@ -9117,8 +9118,8 @@\n   \"TARGET_VIS\"\n   \"fcmp<code><GCM:gcm_name>\\t%1, %2, %0\"\n   [(set_attr \"type\" \"visl\")\n-   (set_attr \"v3pipe\" \"true\")\n-   (set_attr \"fptype\" \"double\")])\n+   (set_attr \"fptype\" \"double\")\n+   (set_attr \"v3pipe\" \"true\")])\n \n (define_insn \"fpcmp<code>8<P:mode>_vis\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r\")\n@@ -9375,8 +9376,8 @@\n   \"TARGET_VIS3\"\n   \"pdistn\\t%1, %2, %0\"\n   [(set_attr \"type\" \"pdistn\")\n-   (set_attr \"v3pipe\" \"true\")\n-   (set_attr \"fptype\" \"double\")])\n+   (set_attr \"fptype\" \"double\")\n+   (set_attr \"v3pipe\" \"true\")])\n \n (define_insn \"fmean16_vis\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")"}]}