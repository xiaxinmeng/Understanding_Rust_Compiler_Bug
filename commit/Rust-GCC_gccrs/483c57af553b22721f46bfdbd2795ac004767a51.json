{"sha": "483c57af553b22721f46bfdbd2795ac004767a51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgzYzU3YWY1NTNiMjI3MjFmNDZiZmRiZDI3OTVhYzAwNDc2N2E1MQ==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@gmail.com", "date": "2018-03-11T08:24:33Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-03-11T08:24:33Z"}, "message": "[NDS32] Implement strlensi pattern.\n\ngcc/\n\t* config/nds32/nds32-memory-manipulation.c (nds32_expand_strlen): New\n\tfunction.\n\t* config/nds32/nds32-multiple.md (strlensi): New pattern.\n\t* config/nds32/nds32-protos.h (nds32_expand_strlen): Declare function.\n\nCo-Authored-By: Chung-Ju Wu <jasonwucj@gmail.com>\n\nFrom-SVN: r258425", "tree": {"sha": "1ea95eb6e07517701cc160efd267f7ff3f22d2a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ea95eb6e07517701cc160efd267f7ff3f22d2a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/483c57af553b22721f46bfdbd2795ac004767a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483c57af553b22721f46bfdbd2795ac004767a51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/483c57af553b22721f46bfdbd2795ac004767a51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483c57af553b22721f46bfdbd2795ac004767a51/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3999578cc522eb57d65c00c9293ca88cfbd901c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3999578cc522eb57d65c00c9293ca88cfbd901c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3999578cc522eb57d65c00c9293ca88cfbd901c2"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "d429cd2883f836fe8d0abadd956748fb5ff989ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c57af553b22721f46bfdbd2795ac004767a51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c57af553b22721f46bfdbd2795ac004767a51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=483c57af553b22721f46bfdbd2795ac004767a51", "patch": "@@ -1,3 +1,11 @@\n+2018-03-11  Kito Cheng  <kito.cheng@gmail.com>\n+\t    Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32-memory-manipulation.c (nds32_expand_strlen): New\n+\tfunction.\n+\t* config/nds32/nds32-multiple.md (strlensi): New pattern.\n+\t* config/nds32/nds32-protos.h (nds32_expand_strlen): Declare function.\n+\n 2018-03-11  Monk Chiang  <sh.chiang04@gmail.com>\n \t    Kito Cheng  <kito.cheng@gmail.com>\n \t    Chung-Ju Wu  <jasonwucj@gmail.com>"}, {"sha": "8dea13047b6b11ef8d92bd2b359d9129e82a137a", "filename": "gcc/config/nds32/nds32-memory-manipulation.c", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c57af553b22721f46bfdbd2795ac004767a51/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c57af553b22721f46bfdbd2795ac004767a51/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c?ref=483c57af553b22721f46bfdbd2795ac004767a51", "patch": "@@ -848,6 +848,69 @@ nds32_expand_setmem (rtx dstmem, rtx size, rtx value, rtx align,\n \n /* ------------------------------------------------------------------------ */\n \n+/* Auxiliary function for expand strlen pattern.  */\n+\n+bool\n+nds32_expand_strlen (rtx result, rtx str,\n+\t\t     rtx target_char, rtx align ATTRIBUTE_UNUSED)\n+{\n+  rtx base_reg, backup_base_reg;\n+  rtx ffb_result;\n+  rtx target_char_ptr, length;\n+  rtx loop_label, tmp;\n+\n+  if (optimize_size || optimize < 3)\n+    return false;\n+\n+  gcc_assert (MEM_P (str));\n+  gcc_assert (CONST_INT_P (target_char) || REG_P (target_char));\n+\n+  base_reg = copy_to_mode_reg (SImode, XEXP (str, 0));\n+  loop_label = gen_label_rtx ();\n+\n+  ffb_result = gen_reg_rtx (Pmode);\n+  tmp = gen_reg_rtx (SImode);\n+  backup_base_reg = gen_reg_rtx (SImode);\n+\n+  /* Emit loop version of strlen.\n+       move  $backup_base, $base\n+     .Lloop:\n+       lmw.bim $tmp, [$base], $tmp, 0\n+       ffb   $ffb_result, $tmp, $target_char   ! is there $target_char?\n+       beqz  $ffb_result, .Lloop\n+       add   $last_char_ptr, $base, $ffb_result\n+       sub   $length, $last_char_ptr, $backup_base  */\n+\n+  /* move  $backup_base, $base  */\n+  emit_move_insn (backup_base_reg, base_reg);\n+\n+  /* .Lloop:  */\n+  emit_label (loop_label);\n+  /* lmw.bim $tmp, [$base], $tmp, 0  */\n+  emit_insn (gen_unaligned_load_update_base_w (base_reg, tmp, base_reg));\n+\n+  /*  ffb   $ffb_result, $tmp, $target_char   ! is there $target_char?  */\n+  emit_insn (gen_unspec_ffb (ffb_result, tmp, target_char));\n+\n+  /* beqz  $ffb_result, .Lloop  */\n+  emit_cmp_and_jump_insns (ffb_result, const0_rtx, EQ, NULL,\n+\t\t\t   SImode, 1, loop_label);\n+\n+  /* add   $target_char_ptr, $base, $ffb_result   */\n+  target_char_ptr = expand_binop (Pmode, add_optab, base_reg,\n+\t\t\t\tffb_result, NULL_RTX, 0, OPTAB_WIDEN);\n+\n+  /* sub   $length, $target_char_ptr, $backup_base  */\n+  length = expand_binop (Pmode, sub_optab, target_char_ptr,\n+\t\t\t backup_base_reg, NULL_RTX, 0, OPTAB_WIDEN);\n+\n+  emit_move_insn (result, length);\n+\n+  return true;\n+}\n+\n+/* ------------------------------------------------------------------------ */\n+\n /* Functions to expand load_multiple and store_multiple.\n    They are auxiliary extern functions to help create rtx template.\n    Check nds32-multiple.md file for the patterns.  */"}, {"sha": "a8f77175927ee4944e20ccc5a284c1c7ce1b80d7", "filename": "gcc/config/nds32/nds32-multiple.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c57af553b22721f46bfdbd2795ac004767a51/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c57af553b22721f46bfdbd2795ac004767a51/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md?ref=483c57af553b22721f46bfdbd2795ac004767a51", "patch": "@@ -3750,6 +3750,19 @@\n \n ;; ------------------------------------------------------------------------\n \n+(define_expand \"strlensi\"\n+  [(match_operand:SI  0 \"register_operand\")\n+   (match_operand:BLK 1 \"memory_operand\")\n+   (match_operand:QI  2 \"nds32_reg_constant_operand\")\n+   (match_operand     3 \"const_int_operand\")]\n+  \"TARGET_EXT_STRING\"\n+{\n+  if (nds32_expand_strlen (operands[0], operands[1], operands[2], operands[3]))\n+    DONE;\n+\n+  FAIL;\n+})\n+\n (define_expand \"setmemsi\"\n    [(use (match_operand:BLK 0 \"memory_operand\"))\n     (use (match_operand:SI 1 \"nds32_reg_constant_operand\"))"}, {"sha": "e1522f9e5f4cf624695856ed8ef3d98b7513eaa1", "filename": "gcc/config/nds32/nds32-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/483c57af553b22721f46bfdbd2795ac004767a51/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/483c57af553b22721f46bfdbd2795ac004767a51/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h?ref=483c57af553b22721f46bfdbd2795ac004767a51", "patch": "@@ -70,6 +70,7 @@ extern rtx nds32_expand_load_multiple (int, int, rtx, rtx, bool, rtx *);\n extern rtx nds32_expand_store_multiple (int, int, rtx, rtx, bool, rtx *);\n extern bool nds32_expand_movmemsi (rtx, rtx, rtx, rtx);\n extern bool nds32_expand_setmem (rtx, rtx, rtx, rtx, rtx, rtx);\n+extern bool nds32_expand_strlen (rtx, rtx, rtx, rtx);\n \n /* Auxiliary functions for expand unalign load instruction.  */\n "}]}