{"sha": "fbe58ba97aff3270877d7fd5600c17687b85964c", "node_id": "C_kwDOANBUbNoAKGZiZTU4YmE5N2FmZjMyNzA4NzdkN2ZkNTYwMGMxNzY4N2I4NTk2NGM", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-11-04T14:37:18Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-11-04T14:41:52Z"}, "message": "x86: Check leal/addl gcc.target/i386/amxtile-3.c for x32\n\nCheck leal and addl for x32 to fix:\n\nFAIL: gcc.target/i386/amxtile-3.c scan-assembler addq[ \\\\t]+\\\\$12\nFAIL: gcc.target/i386/amxtile-3.c scan-assembler leaq[ \\\\t]+4\nFAIL: gcc.target/i386/amxtile-3.c scan-assembler leaq[ \\\\t]+8\n\n\t* gcc.target/i386/amxtile-3.c: Check leal/addl for x32.", "tree": {"sha": "302ab4fb30133957b1b50b4b2c6b6e19aeaf5afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/302ab4fb30133957b1b50b4b2c6b6e19aeaf5afc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbe58ba97aff3270877d7fd5600c17687b85964c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe58ba97aff3270877d7fd5600c17687b85964c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe58ba97aff3270877d7fd5600c17687b85964c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe58ba97aff3270877d7fd5600c17687b85964c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a9678f0b30d36ae13259ad635e175a1e24917a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9678f0b30d36ae13259ad635e175a1e24917a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9678f0b30d36ae13259ad635e175a1e24917a1"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "26204e385c6fcc6f77a80020a008440b88480ce3", "filename": "gcc/testsuite/gcc.target/i386/amxtile-3.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe58ba97aff3270877d7fd5600c17687b85964c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famxtile-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe58ba97aff3270877d7fd5600c17687b85964c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famxtile-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famxtile-3.c?ref=fbe58ba97aff3270877d7fd5600c17687b85964c", "patch": "@@ -3,12 +3,18 @@\n /* { dg-final { scan-assembler \"tileloadd\\[ \\\\t]+\\[^\\n\\]*\\\\(%\\[a-z0-9]*\\,%\\[a-z0-9\\]*\\,\\[124\\]\\\\)+\\[^\\n\\]*%tmm\\[0-9\\]\"  } } */\n /* { dg-final { scan-assembler \"tileloaddt1\\[ \\\\t]+\\[^\\n\\]*\\\\(%\\[a-z0-9]*\\,%\\[a-z0-9\\]*\\,\\[124\\]\\\\)+\\[^\\n\\]*%tmm\\[0-9\\]\"  } } */\n /* { dg-final { scan-assembler \"tilestored\\[ \\\\t]+\\[^\\n\\]*%tmm\\[0-9\\]+\\[^\\n\\]*\\\\(%\\[a-z0-9]*\\,%\\[a-z0-9\\]*\\,\\[124\\]\\\\)\"  } } */\n-/* { dg-final { scan-assembler \"leaq\\[ \\\\t]+4\" } } */\n-/* { dg-final { scan-assembler \"leaq\\[ \\\\t]+8\" } } */\n-/* { dg-final { scan-assembler \"addq\\[ \\\\t]+\\\\\\$12\" } } */\n-/* { dg-final { scan-assembler-not \"leaq\\[ \\\\t]+1\" } } */\n-/* { dg-final { scan-assembler-not \"leaq\\[ \\\\t]+2\" } } */\n-/* { dg-final { scan-assembler-not \"addq\\[ \\\\t]+\\\\\\$3\" } } */\n+/* { dg-final { scan-assembler \"leaq\\[ \\\\t]+4\" { target lp64 } } } */\n+/* { dg-final { scan-assembler \"leaq\\[ \\\\t]+8\" { target lp64 } } } */\n+/* { dg-final { scan-assembler \"addq\\[ \\\\t]+\\\\\\$12\" { target lp64 } } } */\n+/* { dg-final { scan-assembler \"leal\\[ \\\\t]+4\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"leal\\[ \\\\t]+8\" { target x32 } } } */\n+/* { dg-final { scan-assembler \"addl\\[ \\\\t]+\\\\\\$12\" { target x32 } } } */\n+/* { dg-final { scan-assembler-not \"leaq\\[ \\\\t]+1\" { target lp64 } } } */\n+/* { dg-final { scan-assembler-not \"leaq\\[ \\\\t]+2\" { target lp64 } } } */\n+/* { dg-final { scan-assembler-not \"addq\\[ \\\\t]+\\\\\\$3\" { target lp64 } } } */\n+/* { dg-final { scan-assembler-not \"leal\\[ \\\\t]+1\" { target x32 } } } */\n+/* { dg-final { scan-assembler-not \"leal\\[ \\\\t]+2\" { target x32 } } } */\n+/* { dg-final { scan-assembler-not \"addl\\[ \\\\t]+\\\\\\$3\" { target x32 } } } */\n #include <immintrin.h>\n \n extern int a[];"}]}