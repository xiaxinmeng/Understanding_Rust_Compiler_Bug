{"sha": "fdb6603cc395d2d29e50b0078b46b130d66ac7b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRiNjYwM2NjMzk1ZDJkMjllNTBiMDA3OGI0NmIxMzBkNjZhYzdiNA==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2013-04-24T10:07:24Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@gcc.gnu.org", "date": "2013-04-24T10:07:24Z"}, "message": "dwarf2out.c (gen_enumeration_type_die): Fix HOST_BITS_PER_WIDE_INT dependency behavior in enumeration type DIE generation.\n\n2013-04-24  Julian Brown  <julian@codesourcery.com>\n\t    Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* dwarf2out.c (gen_enumeration_type_die): Fix HOST_BITS_PER_WIDE_INT\n\tdependency behavior in enumeration type DIE generation. Add TODO\n\tnote to comments about future DW_FORM_sdata/udata re-work of related\n\tcode.\n\n\nCo-Authored-By: Chung-Lin Tang <cltang@codesourcery.com>\n\nFrom-SVN: r198219", "tree": {"sha": "e6df1a20befb5c8c1f9d5d05b5fa1add81d89429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6df1a20befb5c8c1f9d5d05b5fa1add81d89429"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdb6603cc395d2d29e50b0078b46b130d66ac7b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb6603cc395d2d29e50b0078b46b130d66ac7b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdb6603cc395d2d29e50b0078b46b130d66ac7b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb6603cc395d2d29e50b0078b46b130d66ac7b4/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1df40cb0eb7fd402cc683ca3a36d297db225199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1df40cb0eb7fd402cc683ca3a36d297db225199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1df40cb0eb7fd402cc683ca3a36d297db225199"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "2adf8a73a7a141fcdcdda6f03970dfb56b6a0ac6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb6603cc395d2d29e50b0078b46b130d66ac7b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb6603cc395d2d29e50b0078b46b130d66ac7b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdb6603cc395d2d29e50b0078b46b130d66ac7b4", "patch": "@@ -1,3 +1,11 @@\n+2013-04-24  Julian Brown  <julian@codesourcery.com>\n+\t    Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* dwarf2out.c (gen_enumeration_type_die): Fix HOST_BITS_PER_WIDE_INT\n+\tdependency behavior in enumeration type DIE generation. Add TODO\n+\tnote to comments about future DW_FORM_sdata/udata re-work of related\n+\tcode.\n+\n 2013-04-23  Lawrence Crowl  <crowl@google.com>\n \n \t* Makefile.in: Update as needed below."}, {"sha": "6fe1e6916af5d386548869e92e00575dc1d173b9", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdb6603cc395d2d29e50b0078b46b130d66ac7b4/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdb6603cc395d2d29e50b0078b46b130d66ac7b4/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=fdb6603cc395d2d29e50b0078b46b130d66ac7b4", "patch": "@@ -17027,15 +17027,27 @@ gen_enumeration_type_die (tree type, dw_die_ref context_die)\n \t  if (TREE_CODE (value) == CONST_DECL)\n \t    value = DECL_INITIAL (value);\n \n-\t  if (host_integerp (value, TYPE_UNSIGNED (TREE_TYPE (value))))\n+\t  if (host_integerp (value, TYPE_UNSIGNED (TREE_TYPE (value)))\n+\t      && (simple_type_size_in_bits (TREE_TYPE (value))\n+\t\t  <= HOST_BITS_PER_WIDE_INT || host_integerp (value, 0)))\n \t    /* DWARF2 does not provide a way of indicating whether or\n \t       not enumeration constants are signed or unsigned.  GDB\n \t       always assumes the values are signed, so we output all\n \t       values as if they were signed.  That means that\n \t       enumeration constants with very large unsigned values\n-\t       will appear to have negative values in the debugger.  */\n-\t    add_AT_int (enum_die, DW_AT_const_value,\n-\t\t\ttree_low_cst (value, tree_int_cst_sgn (value) > 0));\n+\t       will appear to have negative values in the debugger.\n+\n+\t       TODO: the above comment is wrong, DWARF2 does provide\n+\t       DW_FORM_sdata/DW_FORM_udata to represent signed/unsigned data.\n+\t       This should be re-worked to use correct signed/unsigned\n+\t       int/double tags for all cases, instead of always treating as\n+\t       signed.  */\n+\t    add_AT_int (enum_die, DW_AT_const_value, TREE_INT_CST_LOW (value));\n+\t  else\n+\t    /* Enumeration constants may be wider than HOST_WIDE_INT.  Handle\n+\t       that here.  */\n+\t    add_AT_double (enum_die, DW_AT_const_value,\n+\t\t\t   TREE_INT_CST_HIGH (value), TREE_INT_CST_LOW (value));\n \t}\n \n       add_gnat_descriptive_type_attribute (type_die, type, context_die);"}]}