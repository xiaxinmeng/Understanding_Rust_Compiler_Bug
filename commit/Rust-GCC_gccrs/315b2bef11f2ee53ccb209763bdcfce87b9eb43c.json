{"sha": "315b2bef11f2ee53ccb209763bdcfce87b9eb43c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE1YjJiZWYxMWYyZWU1M2NjYjIwOTc2M2JkY2ZjZTg3YjllYjQzYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-03-25T00:35:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-03-25T00:35:01Z"}, "message": "alpha: Unify movdi patterns with enabled attribute.\n\nFrom-SVN: r171437", "tree": {"sha": "a22c7dbdeb541b11d6ee39e5795c644d19c8f35f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a22c7dbdeb541b11d6ee39e5795c644d19c8f35f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/315b2bef11f2ee53ccb209763bdcfce87b9eb43c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/315b2bef11f2ee53ccb209763bdcfce87b9eb43c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/315b2bef11f2ee53ccb209763bdcfce87b9eb43c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/315b2bef11f2ee53ccb209763bdcfce87b9eb43c/comments", "author": null, "committer": null, "parents": [{"sha": "67102517d54bdc14ea9075e9b75326ae41851f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67102517d54bdc14ea9075e9b75326ae41851f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67102517d54bdc14ea9075e9b75326ae41851f78"}], "stats": {"total": 90, "additions": 19, "deletions": 71}, "files": [{"sha": "a523f45c44ef53b52e5793171c422744e4d3719c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/315b2bef11f2ee53ccb209763bdcfce87b9eb43c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/315b2bef11f2ee53ccb209763bdcfce87b9eb43c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=315b2bef11f2ee53ccb209763bdcfce87b9eb43c", "patch": "@@ -1,3 +1,9 @@\n+2011-02-24  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.md (attribute isa): Add er, ner.\n+\t(attribute enabled): Handle them.\n+\t(*movdi): Merge *movdi_{er_nofix,nofix,er_fix,fix}.\n+\n 2011-02-24  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.md (attribute isa): Add vms."}, {"sha": "2161e64adbdf2b6a5a55d69f5d549f19f8ffb050", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 13, "deletions": 71, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/315b2bef11f2ee53ccb209763bdcfce87b9eb43c/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/315b2bef11f2ee53ccb209763bdcfce87b9eb43c/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=315b2bef11f2ee53ccb209763bdcfce87b9eb43c", "patch": "@@ -181,15 +181,17 @@\n ;; Used to control the \"enabled\" attribute on a per-instruction basis.\n ;; For convenience, conflate ABI issues re loading of addresses with\n ;; an \"isa\".\n-(define_attr \"isa\" \"base,bwx,max,fix,cix,vms\"\n+(define_attr \"isa\" \"base,bwx,max,fix,cix,vms,ner,er\"\n   (const_string \"base\"))\n \n (define_attr \"enabled\" \"\"\n   (cond [(eq_attr \"isa\" \"bwx\")\t(symbol_ref \"TARGET_BWX\")\n \t (eq_attr \"isa\" \"max\")\t(symbol_ref \"TARGET_MAX\")\n \t (eq_attr \"isa\" \"fix\")\t(symbol_ref \"TARGET_FIX\")\n \t (eq_attr \"isa\" \"cix\")\t(symbol_ref \"TARGET_CIX\")\n-         (eq_attr \"isa\" \"vms\")  (symbol_ref \"TARGET_ABI_OPEN_VMS\")\n+\t (eq_attr \"isa\" \"vms\")  (symbol_ref \"TARGET_ABI_OPEN_VMS\")\n+\t (eq_attr \"isa\" \"ner\")\t(symbol_ref \"!TARGET_EXPLICIT_RELOCS\")\n+\t (eq_attr \"isa\" \"er\")\t(symbol_ref \"TARGET_EXPLICIT_RELOCS\")\n \t]\n \t(const_int 1)))\n \f\n@@ -4869,91 +4871,31 @@\n   operands[2] = pic_offset_table_rtx;\n })\n \n-(define_insn \"*movdi_er_nofix\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,r,m,*f,*f,Q\")\n-\t(match_operand:DI 1 \"input_operand\" \"rJ,K,L,T,s,n,m,rJ,*fJ,Q,*f\"))]\n-  \"TARGET_EXPLICIT_RELOCS && ! TARGET_FIX\n-   && (register_operand (operands[0], DImode)\n-       || reg_or_0_operand (operands[1], DImode))\"\n-  \"@\n-   mov %r1,%0\n-   lda %0,%1($31)\n-   ldah %0,%h1($31)\n-   #\n-   #\n-   #\n-   ldq%A1 %0,%1\n-   stq%A0 %r1,%0\n-   fmov %R1,%0\n-   ldt %0,%1\n-   stt %R1,%0\"\n-  [(set_attr \"type\" \"ilog,iadd,iadd,iadd,ldsym,multi,ild,ist,fcpys,fld,fst\")\n-   (set_attr \"usegp\" \"*,*,*,yes,*,*,*,*,*,*,*\")])\n-\n-(define_insn \"*movdi_nofix\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,m,*f,*f,Q\")\n-\t(match_operand:DI 1 \"input_operand\" \"rJ,K,L,s,n,m,rJ,*fJ,Q,*f\"))]\n-  \"! TARGET_FIX\n-   && (register_operand (operands[0], DImode)\n-       || reg_or_0_operand (operands[1], DImode))\"\n-  \"@\n-   bis $31,%r1,%0\n-   lda %0,%1($31)\n-   ldah %0,%h1($31)\n-   lda %0,%1\n-   #\n-   ldq%A1 %0,%1\n-   stq%A0 %r1,%0\n-   cpys %R1,%R1,%0\n-   ldt %0,%1\n-   stt %R1,%0\"\n-  [(set_attr \"type\" \"ilog,iadd,iadd,ldsym,multi,ild,ist,fcpys,fld,fst\")])\n-\n-(define_insn \"*movdi_er_fix\"\n+(define_insn \"*movdi\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\t\t\"=r,r,r,r,r,r,r, m, *f,*f, Q, r,*f\")\n+\t\t\t\t\"=r,r,r,r,r,r,r,r, m, *f,*f, Q, r,*f\")\n \t(match_operand:DI 1 \"input_operand\"\n-\t\t\t\t\"rJ,K,L,T,s,n,m,rJ,*fJ, Q,*f,*f, r\"))]\n-  \"TARGET_EXPLICIT_RELOCS && TARGET_FIX\n-   && (register_operand (operands[0], DImode)\n-       || reg_or_0_operand (operands[1], DImode))\"\n+\t\t\t\t\"rJ,K,L,T,s,n,s,m,rJ,*fJ, Q,*f,*f, r\"))]\n+  \"register_operand (operands[0], DImode)\n+   || reg_or_0_operand (operands[1], DImode)\"\n   \"@\n    mov %r1,%0\n    lda %0,%1($31)\n    ldah %0,%h1($31)\n    #\n    #\n    #\n-   ldq%A1 %0,%1\n-   stq%A0 %r1,%0\n-   fmov %R1,%0\n-   ldt %0,%1\n-   stt %R1,%0\n-   ftoit %1,%0\n-   itoft %1,%0\"\n-  [(set_attr \"type\" \"ilog,iadd,iadd,iadd,ldsym,multi,ild,ist,fcpys,fld,fst,ftoi,itof\")\n-   (set_attr \"usegp\" \"*,*,*,yes,*,*,*,*,*,*,*,*,*\")])\n-\n-(define_insn \"*movdi_fix\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,m,*f,*f,Q,r,*f\")\n-\t(match_operand:DI 1 \"input_operand\" \"rJ,K,L,s,n,m,rJ,*fJ,Q,*f,*f,r\"))]\n-  \"! TARGET_EXPLICIT_RELOCS && TARGET_FIX\n-   && (register_operand (operands[0], DImode)\n-       || reg_or_0_operand (operands[1], DImode))\"\n-  \"@\n-   bis $31,%r1,%0\n-   lda %0,%1($31)\n-   ldah %0,%h1($31)\n    lda %0,%1\n-   #\n    ldq%A1 %0,%1\n    stq%A0 %r1,%0\n-   cpys %R1,%R1,%0\n+   fmov %R1,%0\n    ldt %0,%1\n    stt %R1,%0\n    ftoit %1,%0\n    itoft %1,%0\"\n-  [(set_attr \"type\" \"ilog,iadd,iadd,ldsym,multi,ild,ist,fcpys,fld,fst,ftoi,itof\")])\n+  [(set_attr \"type\" \"ilog,iadd,iadd,iadd,ldsym,multi,ldsym,ild,ist,fcpys,fld,fst,ftoi,itof\")\n+   (set_attr \"isa\" \"*,*,*,er,er,*,ner,*,*,*,*,*,fix,fix\")\n+   (set_attr \"usegp\" \"*,*,*,yes,*,*,*,*,*,*,*,*,*,*\")])\n \n ;; VMS needs to set up \"vms_base_regno\" for unwinding.  This move\n ;; often appears dead to the life analysis code, at which point we"}]}