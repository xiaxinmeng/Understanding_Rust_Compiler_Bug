{"sha": "b1c1a22fb269af88df292d3770595215206f947f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjMWEyMmZiMjY5YWY4OGRmMjkyZDM3NzA1OTUyMTUyMDZmOTQ3Zg==", "commit": {"author": {"name": "Scott Snyder", "email": "snyder@fnal.gov", "date": "2002-02-19T20:02:16Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-02-19T20:02:16Z"}, "message": "demangle-expected: Add test case for infinite loop in demangler.\n\n* testsuite/demangle-expected: Add test case for infinite loop in\ndemangler.\n* cplus-dem.c (demangle_arm_hp_template): Stop trying to demangle\nif do_type() doesn't make any progress --- prevents an infinite\nloop.\n\nFrom-SVN: r49875", "tree": {"sha": "77b3e82a8f3bdacf1a50fa522f3943dcf4a85824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77b3e82a8f3bdacf1a50fa522f3943dcf4a85824"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1c1a22fb269af88df292d3770595215206f947f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c1a22fb269af88df292d3770595215206f947f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c1a22fb269af88df292d3770595215206f947f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c1a22fb269af88df292d3770595215206f947f/comments", "author": null, "committer": null, "parents": [{"sha": "6d1def5c667f516b4e7c0d8445c7598fb060e88f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1def5c667f516b4e7c0d8445c7598fb060e88f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1def5c667f516b4e7c0d8445c7598fb060e88f"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "9c0fe09dcac045bc36bc497a2899ae119eba9ca7", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1a22fb269af88df292d3770595215206f947f/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1a22fb269af88df292d3770595215206f947f/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=b1c1a22fb269af88df292d3770595215206f947f", "patch": "@@ -1,3 +1,11 @@\n+2002-02-19  Scott Snyder  <snyder@fnal.gov>\n+\n+\t* testsuite/demangle-expected: Add test case for infinite loop in\n+\tdemangler.\n+\t* cplus-dem.c (demangle_arm_hp_template): Stop trying to demangle\n+\tif do_type() doesn't make any progress --- prevents an infinite\n+\tloop.\n+\n 2002-02-18  Carlo Wood  <carlo@gnu.org>\n \n \tPR c++/5390"}, {"sha": "203e30dba24e01498e55e1c952590eafb51650ee", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1a22fb269af88df292d3770595215206f947f/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1a22fb269af88df292d3770595215206f947f/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=b1c1a22fb269af88df292d3770595215206f947f", "patch": "@@ -2414,8 +2414,15 @@ demangle_arm_hp_template (work, mangled, n, declp)\n             break;\n           default:\n             /* Not handling other HP cfront stuff */\n-            if (!do_type (work, &args, &arg))\n-              goto cfront_template_args_done;\n+            {\n+              const char* old_args = args;\n+              if (!do_type (work, &args, &arg))\n+                goto cfront_template_args_done;\n+\n+              /* Fail if we didn't make any progress: prevent infinite loop. */\n+              if (args == old_args)\n+                return;\n+            }\n \t  }\n \tstring_appends (declp, &arg);\n \tstring_append (declp, \",\");"}, {"sha": "81b061d5b28d7f10848c97f8856c6331162a62f4", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c1a22fb269af88df292d3770595215206f947f/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c1a22fb269af88df292d3770595215206f947f/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=b1c1a22fb269af88df292d3770595215206f947f", "patch": "@@ -2594,3 +2594,9 @@ _Utf58_0_1__1_2147483647__2147483648\n --format=gnu-v3\n St9bad_alloc\n std::bad_alloc\n+# \n+# This caused an infinite loop.\n+# We still don't demangle this correctly, but at least we don't hang.\n+--format=auto\n+__CPR212____ct__Q3_3std141list__tm__128_Q2_3edm41THandle__tm__26_Q2_4emid15EMparticleChunkQ2_3std68allocator__tm__51_Q2_3edmJ37J14const_iteratorFRCQ3_3std18list__tm__7_Z1ZZ2Z8iterator\n+_Z1ZZ2Z::__CPR212____ct__Q3_3std141list__tm__128_Q2_3edm41THandle__tm__26_Q2_4emid15EMparticleChunkQ2_3std68allocator__tm__51_Q2_3edmJ37J14const_iteratorFRCQ3_3std18list__tm(iterator)"}]}