{"sha": "31daf7a352524c596e0e9eb3dde4be777572e451", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFkYWY3YTM1MjUyNGM1OTZlMGU5ZWIzZGRlNGJlNzc3NTcyZTQ1MQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-11-22T21:13:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-11-22T21:13:56Z"}, "message": "i386.md (*jcc<mode>_0_i387): Macroize insn from *fp_jcc_3_387 using X87MODEF mode iterator.\n\n\t* config/i386/i386.md (*jcc<mode>_0_i387): Macroize insn\n\tfrom *fp_jcc_3_387 using X87MODEF mode iterator.\n\t(*jcc<mode>_0_r_i387): New.\n\t(*jccxf_i387): Ditto.\n\t(*jccxf_r_i387): Ditto.\n\t(*jcc<mode>_i387): Macroize insn from *fp_jcc_1_387 using\n\tMODEF mode iterator.\n\t(*jcc<mode>_r_i387): Macroize insn from *fp_jcc_1r_387 using\n\tMODEF mode iterator.\n\t(*jccu<mode>_i387): Macroize insn from *fp_jcc_2_387 using\n\tX87MODEF mode iterator.\n\t(*jccu<mode>_r_i387): Macroize insn from *fp_jcc_2r_387 using\n\tX87MODEF mode iterator.\n\t(*jcc{,u}<mode>_i387 splitters): Macroize splitters using\n\tX87MODEF mode iterator.\n\t(*jcc<X87MODEF:mode>_<SWI24:mode>_i387): Macroize insn\n\tfrom *fp_jcc_4_<mode>_387 using X87MODEF mode iterator.\n\t(*jcc<X87MODEF:mode>_<SWI24:mode>_r_i387): New.\n\t(*jcc<X87MODEF:mode>_<SWI24:mode>_i387 splitters): Macroize\n\tsplitters using X87MODEF and SWI24 mode iterators.\n\nFrom-SVN: r193734", "tree": {"sha": "5280f3f7a99b5a5675bc4096c3e8731dbac216a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5280f3f7a99b5a5675bc4096c3e8731dbac216a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31daf7a352524c596e0e9eb3dde4be777572e451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31daf7a352524c596e0e9eb3dde4be777572e451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31daf7a352524c596e0e9eb3dde4be777572e451", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31daf7a352524c596e0e9eb3dde4be777572e451/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6d53c025b05f7b624da194efabfae3b3aef9fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d53c025b05f7b624da194efabfae3b3aef9fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d53c025b05f7b624da194efabfae3b3aef9fb9"}], "stats": {"total": 218, "additions": 139, "deletions": 79}, "files": [{"sha": "a57c38673be8f6e47b24bff616d27219c48976db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31daf7a352524c596e0e9eb3dde4be777572e451/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31daf7a352524c596e0e9eb3dde4be777572e451/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31daf7a352524c596e0e9eb3dde4be777572e451", "patch": "@@ -2,6 +2,29 @@\n \n \t* doc/md.texi (AArch64 family): Remove Utf.\n \n+2012-11-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*jcc<mode>_0_i387): Macroize insn\n+\tfrom *fp_jcc_3_387 using X87MODEF mode iterator.\n+\t(*jcc<mode>_0_r_i387): New.\n+\t(*jccxf_i387): Ditto.\n+\t(*jccxf_r_i387): Ditto.\n+\t(*jcc<mode>_i387): Macroize insn from *fp_jcc_1_387 using\n+\tMODEF mode iterator.\n+\t(*jcc<mode>_r_i387): Macroize insn from *fp_jcc_1r_387 using\n+\tMODEF mode iterator.\n+\t(*jccu<mode>_i387): Macroize insn from *fp_jcc_2_387 using\n+\tX87MODEF mode iterator.\n+\t(*jccu<mode>_r_i387): Macroize insn from *fp_jcc_2r_387 using\n+\tX87MODEF mode iterator.\n+\t(*jcc{,u}<mode>_i387 splitters): Macroize splitters using\n+\tX87MODEF mode iterator.\n+\t(*jcc<X87MODEF:mode>_<SWI24:mode>_i387): Macroize insn\n+\tfrom *fp_jcc_4_<mode>_387 using X87MODEF mode iterator.\n+\t(*jcc<X87MODEF:mode>_<SWI24:mode>_r_i387): New.\n+\t(*jcc<X87MODEF:mode>_<SWI24:mode>_i387 splitters): Macroize\n+\tsplitters using X87MODEF and SWI24 mode iterators.\n+\n 2012-11-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (FPCMP): New mode iterator."}, {"sha": "202a898fc1a68590f810594e5c6480a38f86ce3c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 115, "deletions": 78, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31daf7a352524c596e0e9eb3dde4be777572e451/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31daf7a352524c596e0e9eb3dde4be777572e451/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=31daf7a352524c596e0e9eb3dde4be777572e451", "patch": "@@ -10948,99 +10948,121 @@\n ;; Define combination compare-and-branch fp compare instructions to help\n ;; combine.\n \n-(define_insn \"*fp_jcc_1_387\"\n+(define_insn \"*jcc<mode>_0_i387\"\n   [(set (pc)\n-\t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operand 1 \"register_operand\" \"f\")\n-\t\t\t (match_operand 2 \"nonimmediate_operand\" \"fm\")])\n+\t(if_then_else (match_operator:CCFP 0 \"ix86_fp_comparison_operator\"\n+\t\t\t[(match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t\t\t (match_operand:X87MODEF 2 \"const0_operand\")])\n \t  (label_ref (match_operand 3))\n \t  (pc)))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n    (clobber (match_scratch:HI 4 \"=a\"))]\n-  \"TARGET_80387\n-   && (GET_MODE (operands[1]) == SFmode || GET_MODE (operands[1]) == DFmode)\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\n-   && SELECT_CC_MODE (GET_CODE (operands[0]),\n-\t\t      operands[1], operands[2]) == CCFPmode\n-   && !TARGET_CMOVE\"\n+  \"TARGET_80387 && !TARGET_CMOVE\"\n   \"#\")\n \n-(define_insn \"*fp_jcc_1r_387\"\n+(define_insn \"*jcc<mode>_0_r_i387\"\n   [(set (pc)\n-\t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operand 1 \"register_operand\" \"f\")\n-\t\t\t (match_operand 2 \"nonimmediate_operand\" \"fm\")])\n+\t(if_then_else (match_operator:CCFP 0 \"ix86_fp_comparison_operator\"\n+\t\t\t[(match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t\t\t (match_operand:X87MODEF 2 \"const0_operand\")])\n \t  (pc)\n \t  (label_ref (match_operand 3))))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n    (clobber (match_scratch:HI 4 \"=a\"))]\n-  \"TARGET_80387\n-   && (GET_MODE (operands[1]) == SFmode || GET_MODE (operands[1]) == DFmode)\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\n-   && SELECT_CC_MODE (GET_CODE (operands[0]),\n-\t\t      operands[1], operands[2]) == CCFPmode\n-   && !TARGET_CMOVE\"\n+  \"TARGET_80387 && !TARGET_CMOVE\"\n   \"#\")\n \n-(define_insn \"*fp_jcc_2_387\"\n+(define_insn \"*jccxf_i387\"\n   [(set (pc)\n-\t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operand 1 \"register_operand\" \"f\")\n-\t\t\t (match_operand 2 \"register_operand\" \"f\")])\n+\t(if_then_else (match_operator:CCFP 0 \"ix86_fp_comparison_operator\"\n+\t\t\t[(match_operand:XF 1 \"register_operand\" \"f\")\n+\t\t\t (match_operand:XF 2 \"register_operand\" \"f\")])\n \t  (label_ref (match_operand 3))\n \t  (pc)))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n    (clobber (match_scratch:HI 4 \"=a\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\n-   && !TARGET_CMOVE\"\n+  \"TARGET_80387 && !TARGET_CMOVE\"\n   \"#\")\n \n-(define_insn \"*fp_jcc_2r_387\"\n+(define_insn \"*jccxf_r_i387\"\n   [(set (pc)\n-\t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operand 1 \"register_operand\" \"f\")\n-\t\t\t (match_operand 2 \"register_operand\" \"f\")])\n+\t(if_then_else (match_operator:CCFP 0 \"ix86_fp_comparison_operator\"\n+\t\t\t[(match_operand:XF 1 \"register_operand\" \"f\")\n+\t\t\t (match_operand:XF 2 \"register_operand\" \"f\")])\n \t  (pc)\n \t  (label_ref (match_operand 3))))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n    (clobber (match_scratch:HI 4 \"=a\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\n-   && !TARGET_CMOVE\"\n+  \"TARGET_80387 && !TARGET_CMOVE\"\n   \"#\")\n \n-(define_insn \"*fp_jcc_3_387\"\n+(define_insn \"*jcc<mode>_i387\"\n   [(set (pc)\n-\t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operand 1 \"register_operand\" \"f\")\n-\t\t\t (match_operand 2 \"const0_operand\")])\n+\t(if_then_else (match_operator:CCFP 0 \"ix86_fp_comparison_operator\"\n+\t\t\t[(match_operand:MODEF 1 \"register_operand\" \"f\")\n+\t\t\t (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm\")])\n \t  (label_ref (match_operand 3))\n \t  (pc)))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n    (clobber (match_scratch:HI 4 \"=a\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && GET_MODE (operands[1]) == GET_MODE (operands[2])\n-   && SELECT_CC_MODE (GET_CODE (operands[0]),\n-\t\t      operands[1], operands[2]) == CCFPmode\n-   && !TARGET_CMOVE\"\n+  \"TARGET_80387 && !TARGET_CMOVE\"\n+  \"#\")\n+\n+(define_insn \"*jcc<mode>_r_i387\"\n+  [(set (pc)\n+\t(if_then_else (match_operator:CCFP 0 \"ix86_fp_comparison_operator\"\n+\t\t\t[(match_operand:MODEF 1 \"register_operand\" \"f\")\n+\t\t\t (match_operand:MODEF 2 \"nonimmediate_operand\" \"fm\")])\n+\t  (pc)\n+\t  (label_ref (match_operand 3))))\n+   (clobber (reg:CCFP FPSR_REG))\n+   (clobber (reg:CCFP FLAGS_REG))\n+   (clobber (match_scratch:HI 4 \"=a\"))]\n+  \"TARGET_80387 && !TARGET_CMOVE\"\n+  \"#\")\n+\n+(define_insn \"*jccu<mode>_i387\"\n+  [(set (pc)\n+\t(if_then_else (match_operator:CCFPU 0 \"ix86_fp_comparison_operator\"\n+\t\t\t[(match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t\t\t (match_operand:X87MODEF 2 \"register_operand\" \"f\")])\n+\t  (label_ref (match_operand 3))\n+\t  (pc)))\n+   (clobber (reg:CCFP FPSR_REG))\n+   (clobber (reg:CCFP FLAGS_REG))\n+   (clobber (match_scratch:HI 4 \"=a\"))]\n+  \"TARGET_80387 && !TARGET_CMOVE\"\n+  \"#\")\n+\n+(define_insn \"*jccu<mode>_r_i387\"\n+  [(set (pc)\n+\t(if_then_else (match_operator:CCFPU 0 \"ix86_fp_comparison_operator\"\n+\t\t\t[(match_operand:X87MODEF 1 \"register_operand\" \"f\")\n+\t\t\t (match_operand:X87MODEF 2 \"register_operand\" \"f\")])\n+\t  (pc)\n+\t  (label_ref (match_operand 3))))\n+   (clobber (reg:CCFP FPSR_REG))\n+   (clobber (reg:CCFP FLAGS_REG))\n+   (clobber (match_scratch:HI 4 \"=a\"))]\n+  \"TARGET_80387 && !TARGET_CMOVE\"\n   \"#\")\n \n (define_split\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operand 1 \"register_operand\")\n-\t\t\t (match_operand 2 \"nonimmediate_operand\")])\n+\t\t\t[(match_operand:X87MODEF 1 \"register_operand\")\n+\t\t\t (match_operand:X87MODEF 2 \"nonimmediate_operand\")])\n \t  (match_operand 3)\n \t  (match_operand 4)))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))]\n-  \"reload_completed\"\n+  \"TARGET_80387 && !TARGET_CMOVE\n+   && reload_completed\"\n   [(const_int 0)]\n {\n   ix86_split_fp_branch (GET_CODE (operands[0]), operands[1], operands[2],\n@@ -11051,64 +11073,79 @@\n (define_split\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operand 1 \"register_operand\")\n-\t\t\t (match_operand 2 \"general_operand\")])\n+\t\t\t[(match_operand:X87MODEF 1 \"register_operand\")\n+\t\t\t (match_operand:X87MODEF 2 \"general_operand\")])\n \t  (match_operand 3)\n \t  (match_operand 4)))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n-   (clobber (match_scratch:HI 5 \"=a\"))]\n-  \"reload_completed\"\n+   (clobber (match_scratch:HI 5))]\n+  \"TARGET_80387 && !TARGET_CMOVE\n+   && reload_completed\"\n   [(const_int 0)]\n {\n   ix86_split_fp_branch (GET_CODE (operands[0]), operands[1], operands[2],\n \t     \t\toperands[3], operands[4], operands[5], NULL_RTX);\n   DONE;\n })\n \n-;; The order of operands in *fp_jcc_4_387 is forced by combine in\n+;; The order of operands in *jcc<fp>_<int>_i387 is forced by combine in\n ;; simplify_comparison () function. Float operator is treated as RTX_OBJ\n ;; with a precedence over other operators and is always put in the first\n ;; place. Swap condition and operands to match ficom instruction.\n \n-(define_insn \"*fp_jcc_4_<mode>_387\"\n+(define_insn \"*jcc<X87MODEF:mode>_<SWI24:mode>_i387\"\n   [(set (pc)\n \t(if_then_else\n-\t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n-\t    [(match_operator 1 \"float_operator\"\n+\t  (match_operator:CCFP 0 \"ix86_swapped_fp_comparison_operator\"\n+\t    [(match_operator:X87MODEF 1 \"float_operator\"\n \t      [(match_operand:SWI24 2 \"nonimmediate_operand\" \"m,?r\")])\n-\t     (match_operand 3 \"register_operand\" \"f,f\")])\n+\t     (match_operand:X87MODEF 3 \"register_operand\" \"f,f\")])\n \t  (label_ref (match_operand 4))\n \t  (pc)))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n    (clobber (match_scratch:HI 5 \"=a,a\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[3]))\n-   && (TARGET_USE_<MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\n-   && GET_MODE (operands[1]) == GET_MODE (operands[3])\n-   && ix86_fp_compare_mode (swap_condition (GET_CODE (operands[0]))) == CCFPmode\n-   && !TARGET_CMOVE\"\n+  \"TARGET_80387 && !TARGET_CMOVE\n+   && (TARGET_USE_<SWI24:MODE>MODE_FIOP\n+       || optimize_function_for_size_p (cfun))\"\n+  \"#\")\n+\n+(define_insn \"*jcc<X87MODEF:mode>_<SWI24:mode>_r_i387\"\n+  [(set (pc)\n+\t(if_then_else\n+\t  (match_operator:CCFP 0 \"ix86_swapped_fp_comparison_operator\"\n+\t    [(match_operator:X87MODEF 1 \"float_operator\"\n+\t      [(match_operand:SWI24 2 \"nonimmediate_operand\" \"m,?r\")])\n+\t     (match_operand:X87MODEF 3 \"register_operand\" \"f,f\")])\n+\t  (pc)\n+\t  (label_ref (match_operand 4))))\n+   (clobber (reg:CCFP FPSR_REG))\n+   (clobber (reg:CCFP FLAGS_REG))\n+   (clobber (match_scratch:HI 5 \"=a,a\"))]\n+  \"TARGET_80387 && !TARGET_CMOVE\n+   && (TARGET_USE_<SWI24:MODE>MODE_FIOP\n+       || optimize_function_for_size_p (cfun))\"\n   \"#\")\n \n (define_split\n   [(set (pc)\n \t(if_then_else\n-\t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n-\t    [(match_operator 1 \"float_operator\"\n+\t  (match_operator:CCFP 0 \"ix86_swapped_fp_comparison_operator\"\n+\t    [(match_operator:X87MODEF 1 \"float_operator\"\n \t      [(match_operand:SWI24 2 \"memory_operand\")])\n-\t     (match_operand 3 \"register_operand\")])\n+\t     (match_operand:X87MODEF 3 \"register_operand\")])\n \t  (match_operand 4)\n \t  (match_operand 5)))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n-   (clobber (match_scratch:HI 6 \"=a\"))]\n-  \"reload_completed\"\n+   (clobber (match_scratch:HI 6))]\n+  \"TARGET_80387 && !TARGET_CMOVE\n+   && reload_completed\"\n   [(const_int 0)]\n {\n-  operands[7] = gen_rtx_FLOAT (GET_MODE (operands[1]), operands[2]);\n-\n-  ix86_split_fp_branch (swap_condition (GET_CODE (operands[0])),\n-\t\t\toperands[3], operands[7],\n+  ix86_split_fp_branch (swap_condition (GET_CODE (operands[0])), operands[3],\n+\t\t        gen_rtx_FLOAT (GET_MODE (operands[1]), operands[2]),\n \t\t\toperands[4], operands[5], operands[6], NULL_RTX);\n   DONE;\n })\n@@ -11117,23 +11154,23 @@\n (define_split\n   [(set (pc)\n \t(if_then_else\n-\t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n-\t    [(match_operator 1 \"float_operator\"\n+\t  (match_operator:CCFP 0 \"ix86_swapped_fp_comparison_operator\"\n+\t    [(match_operator:X87MODEF 1 \"float_operator\"\n \t      [(match_operand:SWI24 2 \"register_operand\")])\n-\t     (match_operand 3 \"register_operand\")])\n+\t     (match_operand:X87MODEF 3 \"register_operand\")])\n \t  (match_operand 4)\n \t  (match_operand 5)))\n    (clobber (reg:CCFP FPSR_REG))\n    (clobber (reg:CCFP FLAGS_REG))\n-   (clobber (match_scratch:HI 6 \"=a\"))]\n-  \"reload_completed\"\n+   (clobber (match_scratch:HI 6))]\n+  \"TARGET_80387 && !TARGET_CMOVE\n+   && reload_completed\"\n   [(const_int 0)]\n {\n-  operands[7] = ix86_force_to_memory (GET_MODE (operands[2]), operands[2]);\n-  operands[7] = gen_rtx_FLOAT (GET_MODE (operands[1]), operands[7]);\n+  rtx tmp = ix86_force_to_memory (GET_MODE (operands[2]), operands[2]);\n \n-  ix86_split_fp_branch (swap_condition (GET_CODE (operands[0])),\n-\t\t\toperands[3], operands[7],\n+  ix86_split_fp_branch (swap_condition (GET_CODE (operands[0])), operands[3],\n+\t\t       \tgen_rtx_FLOAT (GET_MODE (operands[1]), tmp),\n \t\t\toperands[4], operands[5], operands[6], operands[2]);\n   DONE;\n })"}, {"sha": "b183c3aa650b5a5c5c3530d3a668348676943040", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31daf7a352524c596e0e9eb3dde4be777572e451/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31daf7a352524c596e0e9eb3dde4be777572e451/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=31daf7a352524c596e0e9eb3dde4be777572e451", "patch": "@@ -1110,7 +1110,7 @@\n                (match_operand 0 \"comparison_operator\")\n                (match_operand 0 \"ix86_trivial_fp_comparison_operator\")))\n \n-;; Same as above, but for swapped comparison used in fp_jcc_4_387.\n+;; Same as above, but for swapped comparison used in *jcc<fp>_<int>_i387.\n (define_predicate \"ix86_swapped_fp_comparison_operator\"\n   (match_operand 0 \"comparison_operator\")\n {"}]}