{"sha": "2f738ca53b64a4cde021f3274946b9426ee4fea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY3MzhjYTUzYjY0YTRjZGUwMjFmMzI3NDk0NmI5NDI2ZWU0ZmVhNQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2017-05-05T16:50:40Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2017-05-05T16:50:40Z"}, "message": "[ARM] Allow combination of aprofile and rmprofile multilibs\n\n2017-05-05  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * config.gcc: Allow combinations of aprofile and rmprofile values for\n    --with-multilib-list.\n    * config/arm/t-multilib: New file.\n    * config/arm/t-aprofile: Remove initialization of MULTILIB_*\n    variables.  Remove setting of ISA and floating-point ABI in\n    MULTILIB_OPTIONS and MULTILIB_DIRNAMES.  Set architecture and FPU in\n    MULTI_ARCH_OPTS_A and MULTI_ARCH_DIRS_A rather than MULTILIB_OPTIONS\n    and MULTILIB_DIRNAMES respectively.  Add comment to introduce all\n    matches.  Add architecture matches for marvel-pj4 and generic-armv7-a\n    CPU options.\n    * config/arm/t-rmprofile: Likewise except for the matches changes.\n    * doc/install.texi (--with-multilib-list): Document the combination of\n    aprofile and rmprofile values and warn about pitfalls in doing that.\n\nFrom-SVN: r247646", "tree": {"sha": "7bb1fcd07064c4f2cc226ff6a79b00fbca38e6ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bb1fcd07064c4f2cc226ff6a79b00fbca38e6ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f738ca53b64a4cde021f3274946b9426ee4fea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f738ca53b64a4cde021f3274946b9426ee4fea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f738ca53b64a4cde021f3274946b9426ee4fea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f738ca53b64a4cde021f3274946b9426ee4fea5/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77fa3ec1b25e4f66ea87b3049c91c7249c1ec92c"}], "stats": {"total": 199, "additions": 120, "deletions": 79}, "files": [{"sha": "db61cd6263e2220d5d7c1d36780c7c2981446d33", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f738ca53b64a4cde021f3274946b9426ee4fea5", "patch": "@@ -1,3 +1,19 @@\n+2017-05-05  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config.gcc: Allow combinations of aprofile and rmprofile values for\n+\t--with-multilib-list.\n+\t* config/arm/t-multilib: New file.\n+\t* config/arm/t-aprofile: Remove initialization of MULTILIB_*\n+\tvariables.  Remove setting of ISA and floating-point ABI in\n+\tMULTILIB_OPTIONS and MULTILIB_DIRNAMES.  Set architecture and FPU in\n+\tMULTI_ARCH_OPTS_A and MULTI_ARCH_DIRS_A rather than MULTILIB_OPTIONS\n+\tand MULTILIB_DIRNAMES respectively.  Add comment to introduce all\n+\tmatches.  Add architecture matches for marvel-pj4 and generic-armv7-a\n+\tCPU options.\n+\t* config/arm/t-rmprofile: Likewise except for the matches changes.\n+\t* doc/install.texi (--with-multilib-list): Document the combination of\n+\taprofile and rmprofile values and warn about pitfalls in doing that.\n+\n 2017-05-05  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.md (movsi_aarch64): Remove '*' from r=w."}, {"sha": "5c9feac7e1b30d896ad9ac03bdb8aad8e630d60c", "filename": "gcc/config.gcc", "status": "modified", "additions": 12, "deletions": 28, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=2f738ca53b64a4cde021f3274946b9426ee4fea5", "patch": "@@ -3791,34 +3791,18 @@ case \"${target}\" in\n \t\t# Add extra multilibs\n \t\tif test \"x$with_multilib_list\" != x; then\n \t\t\tarm_multilibs=`echo $with_multilib_list | sed -e 's/,/ /g'`\n-\t\t\tcase ${arm_multilibs} in\n-\t\t\taprofile)\n-\t\t\t\t# Note that arm/t-aprofile is a\n-\t\t\t\t# stand-alone make file fragment to be\n-\t\t\t\t# used only with itself.  We do not\n-\t\t\t\t# specifically use the\n-\t\t\t\t# TM_MULTILIB_OPTION framework because\n-\t\t\t\t# this shorthand is more\n-\t\t\t\t# pragmatic.\n-\t\t\t\ttmake_profile_file=\"arm/t-aprofile\"\n-\t\t\t\t;;\n-\t\t\trmprofile)\n-\t\t\t\t# Note that arm/t-rmprofile is a\n-\t\t\t\t# stand-alone make file fragment to be\n-\t\t\t\t# used only with itself.  We do not\n-\t\t\t\t# specifically use the\n-\t\t\t\t# TM_MULTILIB_OPTION framework because\n-\t\t\t\t# this shorthand is more\n-\t\t\t\t# pragmatic.\n-\t\t\t\ttmake_profile_file=\"arm/t-rmprofile\"\n-\t\t\t\t;;\n-\t\t\tdefault)\n-\t\t\t\t;;\n-\t\t\t*)\n-\t\t\t\techo \"Error: --with-multilib-list=${with_multilib_list} not supported.\" 1>&2\n-\t\t\t\texit 1\n-\t\t\t\t;;\n-\t\t\tesac\n+\t\t\tif test \"x${arm_multilibs}\" != xdefault ; then\n+\t\t\t\tfor arm_multilib in ${arm_multilibs}; do\n+\t\t\t\t\tcase ${arm_multilib} in\n+\t\t\t\t\taprofile|rmprofile)\n+\t\t\t\t\t\ttmake_profile_file=\"arm/t-multilib\"\n+\t\t\t\t\t\t;;\n+\t\t\t\t\t*)\n+\t\t\t\t\t\techo \"Error: --with-multilib-list=${with_multilib_list} not supported.\" 1>&2\n+\t\t\t\t\t\texit 1\n+\t\t\t\t\t\t;;\n+\t\t\t\t\tesac\n+\t\t\t\tdone\n \n \t\t\tif test \"x${tmake_profile_file}\" != x ; then\n \t\t\t\t# arm/t-aprofile and arm/t-rmprofile are only"}, {"sha": "b71cbda3e81316a8d268c13f7cf6da13801b7433", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=2f738ca53b64a4cde021f3274946b9426ee4fea5", "patch": "@@ -24,30 +24,13 @@\n # have their default values during the configure step.  We enforce\n # this during the top-level configury.\n \n-MULTILIB_OPTIONS     =\n-MULTILIB_DIRNAMES    =\n-MULTILIB_EXCEPTIONS  =\n-MULTILIB_MATCHES     =\n-MULTILIB_REUSE\t     =\n+# Arch and FPU variants to build libraries with\n \n-# We have the following hierachy:\n-#   ISA: A32 (.) or T32 (thumb)\n-#   Architecture: ARMv7-A (v7-a), ARMv7VE (v7ve), or ARMv8-A (v8-a).\n-#   FPU: VFPv3-D16 (fpv3), NEONv1 (simdv1), VFPv4-D16 (fpv4),\n-#        NEON-VFPV4 (simdvfpv4), NEON for ARMv8 (simdv8), or None (.).\n-#   Float-abi: Soft (.), softfp (softfp), or hard (hardfp).\n+MULTI_ARCH_OPTS_A       = march=armv7-a/march=armv7ve/march=armv8-a\n+MULTI_ARCH_DIRS_A       = v7-a v7ve v8-a\n \n-MULTILIB_OPTIONS       += mthumb\n-MULTILIB_DIRNAMES      += thumb\n-\n-MULTILIB_OPTIONS       += march=armv7-a/march=armv7ve/march=armv8-a\n-MULTILIB_DIRNAMES      += v7-a v7ve v8-a\n-\n-MULTILIB_OPTIONS       += mfpu=vfpv3-d16/mfpu=neon/mfpu=vfpv4-d16/mfpu=neon-vfpv4/mfpu=neon-fp-armv8\n-MULTILIB_DIRNAMES      += fpv3 simdv1 fpv4 simdvfpv4 simdv8\n-\n-MULTILIB_OPTIONS       += mfloat-abi=softfp/mfloat-abi=hard\n-MULTILIB_DIRNAMES      += softfp hard\n+MULTI_FPU_OPTS_A        = mfpu=vfpv3-d16/mfpu=neon/mfpu=vfpv4-d16/mfpu=neon-vfpv4/mfpu=neon-fp-armv8\n+MULTI_FPU_DIRS_A        = fpv3 simdv1 fpv4 simdvfpv4 simdv8\n \n \n # Option combinations to build library with\n@@ -71,7 +54,11 @@ MULTILIB_REQUIRED      += *march=armv8-a\n MULTILIB_REQUIRED      += *march=armv8-a/mfpu=neon-fp-armv8/mfloat-abi=*\n \n \n+# Matches\n+\n # CPU Matches\n+MULTILIB_MATCHES       += march?armv7-a=mcpu?marvell-pj4\n+MULTILIB_MATCHES       += march?armv7-a=mcpu?generic-armv7-a\n MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a8\n MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a9\n MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a5"}, {"sha": "642e731765534904b752d7e15fb6b68a3db2708e", "filename": "gcc/config/arm/t-multilib", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fconfig%2Farm%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fconfig%2Farm%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-multilib?ref=2f738ca53b64a4cde021f3274946b9426ee4fea5", "patch": "@@ -0,0 +1,69 @@\n+# Copyright (C) 2016 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This is a target makefile fragment that attempts to get\n+# multilibs built for the range of CPU's, FPU's and ABI's that\n+# are relevant for the ARM architecture.  It should not be used in\n+# conjunction with another make file fragment and assumes --with-arch,\n+# --with-cpu, --with-fpu, --with-float, --with-mode have their default\n+# values during the configure step.  We enforce this during the\n+# top-level configury.\n+\n+MULTILIB_OPTIONS     =\n+MULTILIB_DIRNAMES    =\n+MULTILIB_EXCEPTIONS  =\n+MULTILIB_MATCHES     =\n+MULTILIB_REUSE\t     =\n+\n+comma := ,\n+tm_multilib_list := $(subst $(comma), ,$(TM_MULTILIB_CONFIG))\n+\n+HAS_APROFILE := $(filter aprofile,$(tm_multilib_list))\n+HAS_RMPROFILE := $(filter rmprofile,$(tm_multilib_list))\n+\n+ifneq (,$(HAS_APROFILE))\n+include $(srcdir)/config/arm/t-aprofile\n+endif\n+ifneq (,$(HAS_RMPROFILE))\n+include $(srcdir)/config/arm/t-rmprofile\n+endif\n+SEP := $(and $(HAS_APROFILE),$(HAS_RMPROFILE),/)\n+\n+\n+# We have the following hierachy:\n+#   ISA: A32 (.) or T16/T32 (thumb)\n+#   Architecture: ARMv6-M (v6-m), ARMv7-M (v7-m), ARMv7E-M (v7e-m),\n+#                 ARMv7 (v7-ar), ARMv7-A (v7-a), ARMv7VE (v7ve),\n+#                 ARMv8-M Baseline (v8-m.base), ARMv8-M Mainline (v8-m.main)\n+#                 or ARMv8-A (v8-a).\n+#   FPU: VFPv3-D16 (fpv3), NEONv1 (simdv1), FPV4-SP-D16 (fpv4-sp),\n+#        VFPv4-D16 (fpv4), NEON-VFPV4 (simdvfpv4), FPV5-SP-D16 (fpv5-sp),\n+#        VFPv5-D16 (fpv5), NEON for ARMv8 (simdv8), or None (.).\n+#   Float-abi: Soft (.), softfp (softfp), or hard (hard).\n+\n+MULTILIB_OPTIONS       += mthumb\n+MULTILIB_DIRNAMES      += thumb\n+\n+MULTILIB_OPTIONS       += $(MULTI_ARCH_OPTS_A)$(SEP)$(MULTI_ARCH_OPTS_RM)\n+MULTILIB_DIRNAMES      += $(MULTI_ARCH_DIRS_A) $(MULTI_ARCH_DIRS_RM)\n+\n+MULTILIB_OPTIONS       += $(MULTI_FPU_OPTS_A)$(SEP)$(MULTI_FPU_OPTS_RM)\n+MULTILIB_DIRNAMES      += $(MULTI_FPU_DIRS_A) $(MULTI_FPU_DIRS_RM)\n+\n+MULTILIB_OPTIONS       += mfloat-abi=softfp/mfloat-abi=hard\n+MULTILIB_DIRNAMES      += softfp hard"}, {"sha": "8cd735110b68bd5bda8022798204245ea8ad1994", "filename": "gcc/config/arm/t-rmprofile", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fconfig%2Farm%2Ft-rmprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fconfig%2Farm%2Ft-rmprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-rmprofile?ref=2f738ca53b64a4cde021f3274946b9426ee4fea5", "patch": "@@ -24,33 +24,14 @@\n # values during the configure step.  We enforce this during the\n # top-level configury.\n \n-MULTILIB_OPTIONS     =\n-MULTILIB_DIRNAMES    =\n-MULTILIB_EXCEPTIONS  =\n-MULTILIB_MATCHES     =\n-MULTILIB_REUSE       =\n \n-# We have the following hierachy:\n-#   ISA: A32 (.) or T16/T32 (thumb).\n-#   Architecture: ARMv6S-M (v6-m), ARMv7-M (v7-m), ARMv7E-M (v7e-m),\n-#                 ARMv8-M Baseline (v8-m.base) or ARMv8-M Mainline (v8-m.main).\n-#   FPU: VFPv3-D16 (fpv3), FPV4-SP-D16 (fpv4-sp), FPV5-SP-D16 (fpv5-sp),\n-#        VFPv5-D16 (fpv5), or None (.).\n-#   Float-abi: Soft (.), softfp (softfp), or hard (hardfp).\n+# Arch and FPU variants to build libraries with\n \n-# Options to build libraries with\n+MULTI_ARCH_OPTS_RM      = march=armv6s-m/march=armv7-m/march=armv7e-m/march=armv7/march=armv8-m.base/march=armv8-m.main\n+MULTI_ARCH_DIRS_RM      = v6-m v7-m v7e-m v7-ar v8-m.base v8-m.main\n \n-MULTILIB_OPTIONS       += mthumb\n-MULTILIB_DIRNAMES      += thumb\n-\n-MULTILIB_OPTIONS       += march=armv6s-m/march=armv7-m/march=armv7e-m/march=armv7/march=armv8-m.base/march=armv8-m.main\n-MULTILIB_DIRNAMES      += v6-m v7-m v7e-m v7-ar v8-m.base v8-m.main\n-\n-MULTILIB_OPTIONS       += mfpu=vfpv3-d16/mfpu=fpv4-sp-d16/mfpu=fpv5-sp-d16/mfpu=fpv5-d16\n-MULTILIB_DIRNAMES      += fpv3 fpv4-sp fpv5-sp fpv5\n-\n-MULTILIB_OPTIONS       += mfloat-abi=softfp/mfloat-abi=hard\n-MULTILIB_DIRNAMES      += softfp hard\n+MULTI_FPU_OPTS_RM       = mfpu=vfpv3-d16/mfpu=fpv4-sp-d16/mfpu=fpv5-sp-d16/mfpu=fpv5-d16\n+MULTI_FPU_DIRS_RM       = fpv3 fpv4-sp fpv5-sp fpv5\n \n \n # Option combinations to build library with"}, {"sha": "b13fc1f6f4248ad731b31410d2e11d632d5b77f8", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f738ca53b64a4cde021f3274946b9426ee4fea5/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=2f738ca53b64a4cde021f3274946b9426ee4fea5", "patch": "@@ -1092,14 +1092,18 @@ for each target is given below.\n \n @table @code\n @item arm*-*-*\n-@var{list} is one of@code{default}, @code{aprofile} or @code{rmprofile}.\n-Specifying @code{default} is equivalent to omitting this option, ie. only the\n-default runtime library will be enabled.  Specifying @code{aprofile} or\n-@code{rmprofile} builds multilibs for a combination of ISA, architecture,\n-FPU available and floating-point ABI.\n+@var{list} is a comma separated list of @code{aprofile} and @code{rmprofile}\n+to build multilibs for A or R and M architecture profiles respectively.  Note\n+that, due to some limitation of the current multilib framework, using the\n+combined @code{aprofile,rmprofile} multilibs selects in some cases a less\n+optimal multilib than when using the multilib profile for the architecture\n+targetted.  The special value @code{default} is also accepted and is equivalent\n+to omitting the option, ie. only the default run-time library will be enabled.\n \n The table below gives the combination of ISAs, architectures, FPUs and\n floating-point ABIs for which multilibs are built for each accepted value.\n+The union of these options is considered when specifying both @code{aprofile}\n+and @code{rmprofile}.\n \n @multitable @columnfractions .15 .28 .30\n @item Option @tab aprofile @tab rmprofile"}]}