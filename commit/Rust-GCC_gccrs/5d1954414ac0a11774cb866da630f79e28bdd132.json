{"sha": "5d1954414ac0a11774cb866da630f79e28bdd132", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQxOTU0NDE0YWMwYTExNzc0Y2I4NjZkYTYzMGY3OWUyOGJkZDEzMg==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-11-05T08:10:05Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-11-05T08:10:05Z"}, "message": "(RTX_COST): Return actual costs for multiplication...\n\n(RTX_COST): Return actual costs for multiplication, not costs for\ntheoretical special cases that are not handled in the md.\n\nFrom-SVN: r6008", "tree": {"sha": "a1c38241c9de1820c1a1d40a8478512d0b24b373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1c38241c9de1820c1a1d40a8478512d0b24b373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d1954414ac0a11774cb866da630f79e28bdd132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1954414ac0a11774cb866da630f79e28bdd132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d1954414ac0a11774cb866da630f79e28bdd132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1954414ac0a11774cb866da630f79e28bdd132/comments", "author": null, "committer": null, "parents": [{"sha": "12a3cb7a2e2ba95aa90b951ce2b69a1088f36808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a3cb7a2e2ba95aa90b951ce2b69a1088f36808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12a3cb7a2e2ba95aa90b951ce2b69a1088f36808"}], "stats": {"total": 16, "additions": 1, "deletions": 15}, "files": [{"sha": "b5e33751fbf298ee9b373734a43193d5d99a65b1", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1954414ac0a11774cb866da630f79e28bdd132/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1954414ac0a11774cb866da630f79e28bdd132/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=5d1954414ac0a11774cb866da630f79e28bdd132", "patch": "@@ -1402,24 +1402,10 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n       return COSTS_N_INSNS (3);\t /* lsr #i,dn */\t\t\\\n     break;\t\t\t\t\t\t\t\\\n   case MULT:\t\t\t\t\t\t\t\\\n-    if (GET_CODE (XEXP (x, 1)) == CONST_INT\t\t\t\\\n-\t&& exact_log2 (INTVAL (XEXP (x, 1))) >= 0)\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\t/* A shift by a big integer takes an extra instruction.  */ \\\n-\tif (GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\\\n-\t    && (INTVAL (XEXP (X, 1)) == (1 << 16)))\t\t\\\n-\t  return COSTS_N_INSNS (2);\t /* clrw;swap */\t\\\n-\tif (GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\\\n-\t    && !(INTVAL (XEXP (X, 1)) > 1\t\t\t\\\n-\t\t && INTVAL (XEXP (X, 1)) <= 256))\t\t\\\n-\t  return COSTS_N_INSNS (3);\t /* lsr #i,dn */\t\\\n-\tbreak;\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    else if (GET_MODE (X) == QImode || GET_MODE (X) == HImode)\t\\\n+    if (GET_MODE (X) == QImode || GET_MODE (X) == HImode)\t\\\n       return COSTS_N_INSNS (MULW_COST);\t\t\t\t\\\n     else\t\t\t\t\t\t\t\\\n       return COSTS_N_INSNS (MULL_COST);\t\t\t\t\\\n-    break;\t\t\t\t\t\t\t\\\n   case DIV:\t\t\t\t\t\t\t\\\n   case UDIV:\t\t\t\t\t\t\t\\\n   case MOD:\t\t\t\t\t\t\t\\"}]}