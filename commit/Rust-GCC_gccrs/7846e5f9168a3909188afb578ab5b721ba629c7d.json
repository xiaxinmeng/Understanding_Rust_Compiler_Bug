{"sha": "7846e5f9168a3909188afb578ab5b721ba629c7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg0NmU1ZjkxNjhhMzkwOTE4OGFmYjU3OGFiNWI3MjFiYTYyOWM3ZA==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2008-09-22T16:12:51Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2008-09-22T16:12:51Z"}, "message": "mips.h (ISA_HAS_BADDU): New macro.\n\n\t* config/mips/mips.h (ISA_HAS_BADDU): New macro.\n\t* config/mips/mips.md (*baddu_si_eb, *baddu_si_el,\n\t*baddu_di<mode>): New patterns.\n\ntestsuite/\n\t* gcc.target/mips/octeon-baddu-1.c: New test.\n\nFrom-SVN: r140556", "tree": {"sha": "3d07cd6e995ed82bf798db17dc640c2079d295a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d07cd6e995ed82bf798db17dc640c2079d295a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7846e5f9168a3909188afb578ab5b721ba629c7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7846e5f9168a3909188afb578ab5b721ba629c7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7846e5f9168a3909188afb578ab5b721ba629c7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7846e5f9168a3909188afb578ab5b721ba629c7d/comments", "author": null, "committer": null, "parents": [{"sha": "8cf08dad4d4a9a6af03bc27de2501de9a3748d31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf08dad4d4a9a6af03bc27de2501de9a3748d31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cf08dad4d4a9a6af03bc27de2501de9a3748d31"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "feee6484e005c3bc2fdf108e04fc2373b669d256", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7846e5f9168a3909188afb578ab5b721ba629c7d", "patch": "@@ -1,3 +1,9 @@\n+2008-09-22  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* config/mips/mips.h (ISA_HAS_BADDU): New macro.\n+\t* config/mips/mips.md (*baddu_si_eb, *baddu_si_el,\n+\t*baddu_di<mode>): New patterns.\n+\n 2008-09-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/37145"}, {"sha": "02a8787e060390f902b2680500ddadae69492b5c", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=7846e5f9168a3909188afb578ab5b721ba629c7d", "patch": "@@ -1010,6 +1010,9 @@ enum mips_code_readable_setting {\n    ? TARGET_LLSC && !TARGET_MIPS16\t\\\n    : ISA_HAS_LL_SC)\n \n+/* ISA includes the baddu instruction.  */\n+#define ISA_HAS_BADDU\t\tTARGET_OCTEON\n+\n /* ISA includes the bbit* instructions.  */\n #define ISA_HAS_BBIT\t\tTARGET_OCTEON\n "}, {"sha": "f3fdaeaf45b44b857d64fce9bac90a0f61118d12", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=7846e5f9168a3909188afb578ab5b721ba629c7d", "patch": "@@ -1188,6 +1188,38 @@\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"extended_mips16\" \"yes\")])\n+\n+;; Combiner patterns for unsigned byte-add.\n+\n+(define_insn \"*baddu_si_eb\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+        (zero_extend:SI\n+\t (subreg:QI\n+\t  (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t   (match_operand:SI 2 \"register_operand\" \"d\")) 3)))]\n+  \"ISA_HAS_BADDU && BYTES_BIG_ENDIAN\"\n+  \"baddu\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"arith\")])\n+\n+(define_insn \"*baddu_si_el\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+        (zero_extend:SI\n+\t (subreg:QI\n+\t  (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t   (match_operand:SI 2 \"register_operand\" \"d\")) 0)))]\n+  \"ISA_HAS_BADDU && !BYTES_BIG_ENDIAN\"\n+  \"baddu\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"arith\")])\n+\n+(define_insn \"*baddu_di<mode>\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n+        (zero_extend:GPR\n+\t (truncate:QI\n+\t  (plus:DI (match_operand:DI 1 \"register_operand\" \"d\")\n+\t\t   (match_operand:DI 2 \"register_operand\" \"d\")))))]\n+  \"ISA_HAS_BADDU && TARGET_64BIT\"\n+  \"baddu\\\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"arith\")])\n \f\n ;;\n ;;  ...................."}, {"sha": "89851e52c9e1eb6f813b96a2c493eaa43cd89488", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7846e5f9168a3909188afb578ab5b721ba629c7d", "patch": "@@ -1,3 +1,7 @@\n+2008-09-22  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.target/mips/octeon-baddu-1.c: New test.\n+\n 2008-09-22  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR rtl-optimization/33642"}, {"sha": "97aacc58a2a2e5ab2eeb5795255b340ad3e15e1e", "filename": "gcc/testsuite/gcc.target/mips/octeon-baddu-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-baddu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7846e5f9168a3909188afb578ab5b721ba629c7d/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-baddu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-baddu-1.c?ref=7846e5f9168a3909188afb578ab5b721ba629c7d", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-mips-options \"-O -march=octeon\" } */\n+/* { dg-final { scan-assembler-times \"\\tbaddu\\t\" 4 } } */\n+/* { dg-final { scan-assembler-not \"\\tandi\\t\" } } */\n+\n+NOMIPS16 unsigned char\n+g (long long a, long long b)\n+{\n+  return a + b;\n+}\n+\n+NOMIPS16 unsigned long long\n+h (unsigned long long a, unsigned long long b)\n+{\n+  unsigned char c = a + b;\n+  return c;\n+}\n+\n+NOMIPS16 long long\n+ff (long long a, long long b)\n+{\n+  unsigned char c = a + b;\n+  return c;\n+}\n+\n+NOMIPS16 int\n+gg (int a, int b)\n+{\n+  return (a + b) & 0xff;\n+}"}]}