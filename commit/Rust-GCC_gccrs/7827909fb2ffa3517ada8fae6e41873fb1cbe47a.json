{"sha": "7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "node_id": "C_kwDOANBUbNoAKDc4Mjc5MDlmYjJmZmEzNTE3YWRhOGZhZTZlNDE4NzNmYjFjYmU0N2E", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-10-10T09:45:13Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-28T09:06:14Z"}, "message": "arm: improve tests and fix vdupq*\n\ngcc/ChangeLog:\n\n\t* config/arm/mve.md (mve_vdupq_n_f<mode>)\n\t(mve_vdupq_n_<supf><mode>, mve_vdupq_m_n_<supf><mode>)\n\t(mve_vdupq_m_n_f<mode>): Fix spacing.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_f16.c: Improve test.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_u8.c: Likewise.", "tree": {"sha": "2d6bc8989e4b5f8f7b71f73ac139eded90fbd38e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d6bc8989e4b5f8f7b71f73ac139eded90fbd38e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9fe7b23b82942faffcdf4803eda4ade7b708a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9fe7b23b82942faffcdf4803eda4ade7b708a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9fe7b23b82942faffcdf4803eda4ade7b708a8a"}], "stats": {"total": 626, "additions": 567, "deletions": 59}, "files": [{"sha": "6d5270281ecac079380b2aa3f0a361738f81978f", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -266,7 +266,7 @@\n \t VDUPQ_N_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vdup.%#<V_sz_elem>   %q0, %1\"\n+  \"vdup.%#<V_sz_elem>\\t%q0, %1\"\n   [(set_attr \"type\" \"mve_move\")\n ])\n \n@@ -435,7 +435,7 @@\n \t VDUPQ_N))\n   ]\n   \"TARGET_HAVE_MVE\"\n-  \"vdup.%#<V_sz_elem>   %q0, %1\"\n+  \"vdup.%#<V_sz_elem>\\t%q0, %1\"\n   [(set_attr \"type\" \"mve_move\")\n ])\n \n@@ -3046,7 +3046,7 @@\n \t VDUPQ_M_N))\n   ]\n   \"TARGET_HAVE_MVE\"\n-  \"vpst\\;vdupt.%#<V_sz_elem>\t%q0, %2\"\n+  \"vpst\\;vdupt.%#<V_sz_elem>\\t%q0, %2\"\n   [(set_attr \"type\" \"mve_move\")\n    (set_attr \"length\"\"8\")])\n \n@@ -3991,7 +3991,7 @@\n \t VDUPQ_M_N_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n-  \"vpst\\;vdupt.%#<V_sz_elem>\t%q0, %2\"\n+  \"vpst\\;vdupt.%#<V_sz_elem>\\t%q0, %2\"\n   [(set_attr \"type\" \"mve_move\")\n    (set_attr \"length\"\"8\")])\n "}, {"sha": "bfa471bcb31f13f0a630a28ce184f12bf7ecd90a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_m_n_f16.c", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_f16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,22 +1,57 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16x8_t inactive, float16_t a, mve_pred16_t p)\n {\n   return vdupq_m_n_f16 (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo1 (float16x8_t inactive, float16_t a, mve_pred16_t p)\n {\n   return vdupq_m (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+/*\n+**foo2:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+float16x8_t\n+foo2 (float16x8_t inactive, mve_pred16_t p)\n+{\n+  return vdupq_m (inactive, 1.1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e1dd8f58ad069f17d03e68b2180b29a487daf93a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_m_n_f32.c", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_f32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,22 +1,57 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32x4_t inactive, float32_t a, mve_pred16_t p)\n {\n   return vdupq_m_n_f32 (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo1 (float32x4_t inactive, float32_t a, mve_pred16_t p)\n {\n   return vdupq_m (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+/*\n+**foo2:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+float32x4_t\n+foo2 (float32x4_t inactive, mve_pred16_t p)\n+{\n+  return vdupq_m (inactive, 1.1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "52304ace03af8ca8394b171d402bb6d8dcf9861c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_m_n_s16.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,22 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo (int16x8_t inactive, int16_t a, mve_pred16_t p)\n {\n   return vdupq_m_n_s16 (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo1 (int16x8_t inactive, int16_t a, mve_pred16_t p)\n {\n   return vdupq_m (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "44a80c5d5bcb7909c1aaef318aefdd8d651a4d4f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_m_n_s32.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,22 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32x4_t inactive, int32_t a, mve_pred16_t p)\n {\n   return vdupq_m_n_s32 (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo1 (int32x4_t inactive, int32_t a, mve_pred16_t p)\n {\n   return vdupq_m (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1630a3b923441a55114984637ce4002626516db1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_m_n_s8.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_s8.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,22 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo (int8x16_t inactive, int8_t a, mve_pred16_t p)\n {\n   return vdupq_m_n_s8 (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.8\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo1 (int8x16_t inactive, int8_t a, mve_pred16_t p)\n {\n   return vdupq_m (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d3df8b6924879b777e7014d8782e0232b27a15a0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_m_n_u16.c", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,22 +1,57 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint16x8_t\n foo (uint16x8_t inactive, uint16_t a, mve_pred16_t p)\n {\n   return vdupq_m_n_u16 (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint16x8_t\n foo1 (uint16x8_t inactive, uint16_t a, mve_pred16_t p)\n {\n   return vdupq_m (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+/*\n+**foo2:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint16x8_t\n+foo2 (uint16x8_t inactive, mve_pred16_t p)\n+{\n+  return vdupq_m (inactive, 1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e6bb0cc2c38f7b3c71928739b40626a103aa5eb0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_m_n_u32.c", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,22 +1,57 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint32x4_t\n foo (uint32x4_t inactive, uint32_t a, mve_pred16_t p)\n {\n   return vdupq_m_n_u32 (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint32x4_t\n foo1 (uint32x4_t inactive, uint32_t a, mve_pred16_t p)\n {\n   return vdupq_m (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+/*\n+**foo2:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint32x4_t\n+foo2 (uint32x4_t inactive, mve_pred16_t p)\n+{\n+  return vdupq_m (inactive, 1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ad6f6d04ae330e7cdcaa4acf2332e6145145b6c2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_m_n_u8.c", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_m_n_u8.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,22 +1,57 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint8x16_t\n foo (uint8x16_t inactive, uint8_t a, mve_pred16_t p)\n {\n   return vdupq_m_n_u8 (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.8\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint8x16_t\n foo1 (uint8x16_t inactive, uint8_t a, mve_pred16_t p)\n {\n   return vdupq_m (inactive, a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n+/*\n+**foo2:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint8x16_t\n+foo2 (uint8x16_t inactive, mve_pred16_t p)\n+{\n+  return vdupq_m (inactive, 1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fc5a7933653b54cb1b41570ec58c9ac2484b72f4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_n_f16.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_f16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,13 +1,32 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvdup.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16_t a)\n {\n   return vdupq_n_f16 (a);\n }\n \n-/* { dg-final { scan-assembler \"vdup.16\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvdup.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+float16x8_t\n+foo1 ()\n+{\n+  return vdupq_n_f16 (1.1);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a6be82e5927eaf317cf019d05889a52602ceed61", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_n_f32.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_f32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,13 +1,32 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvdup.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32_t a)\n {\n   return vdupq_n_f32 (a);\n }\n \n-/* { dg-final { scan-assembler \"vdup.32\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvdup.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+float32x4_t\n+foo1 ()\n+{\n+  return vdupq_n_f32 (1.1);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f842b96c3b185b76e386d83268a901489173982c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_n_s16.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,13 +1,20 @@\n-/* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvdup.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo (int16_t a)\n {\n   return vdupq_n_s16 (a);\n }\n \n-/* { dg-final { scan-assembler \"vdup.16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "05cbff8fdae85709dabcd2ad4e3e655851e9ec93", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_n_s32.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,13 +1,20 @@\n-/* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvdup.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32_t a)\n {\n   return vdupq_n_s32 (a);\n }\n \n-/* { dg-final { scan-assembler \"vdup.32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1d141161604f306a9af277615b39f2cf35231616", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_n_s8.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_s8.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,13 +1,20 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvdup.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo (int8_t a)\n {\n   return vdupq_n_s8 (a);\n }\n \n-/* { dg-final { scan-assembler \"vdup.8\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4839d427e656e993976b759184754c4fb9108ec8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_n_u16.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,13 +1,32 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvdup.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint16x8_t\n foo (uint16_t a)\n {\n-    return vdupq_n_u16 (a);\n+  return vdupq_n_u16 (a);\n }\n \n-/* { dg-final { scan-assembler \"vdup.16\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvdup.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint16x8_t\n+foo1 ()\n+{\n+  return vdupq_n_u16 (1);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f0069eb72802b79663781134c3f9160b9e09480e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_n_u32.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,13 +1,32 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvdup.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint32x4_t\n foo (uint32_t a)\n {\n-    return vdupq_n_u32 (a);\n+  return vdupq_n_u32 (a);\n }\n \n-/* { dg-final { scan-assembler \"vdup.32\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvdup.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint32x4_t\n+foo1 ()\n+{\n+  return vdupq_n_u32 (1);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fe26687ae45a952d128680185eec19cbd9aee273", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_n_u8.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_n_u8.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,13 +1,32 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvdup.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint8x16_t\n foo (uint8_t a)\n {\n-    return vdupq_n_u8 (a);\n+  return vdupq_n_u8 (a);\n }\n \n-/* { dg-final { scan-assembler \"vdup.8\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvdup.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint8x16_t\n+foo1 ()\n+{\n+  return vdupq_n_u8 (1);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "11ebb47f94f45b1a775ddcd99ffc7fe8d33623af", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_x_n_f16.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_f16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,14 +1,40 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n float16x8_t\n foo (float16_t a, mve_pred16_t p)\n {\n   return vdupq_x_n_f16 (a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.16\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+float16x8_t\n+foo1 (mve_pred16_t p)\n+{\n+  return vdupq_x_n_f16 (1.1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4e79bd54f712827338e992401736483c110929ab", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_x_n_f32.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_f32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,14 +1,40 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n float32x4_t\n foo (float32_t a, mve_pred16_t p)\n {\n   return vdupq_x_n_f32 (a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.32\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+float32x4_t\n+foo1 (mve_pred16_t p)\n+{\n+  return vdupq_x_n_f32 (1.1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "90288777df7783f9ba957b6b0f2669bbe11c7808", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_x_n_s16.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,14 +1,24 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n foo (int16_t a, mve_pred16_t p)\n {\n   return vdupq_x_n_s16 (a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c4c906e06823d53bc4b0520734140ee942d9b00b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_x_n_s32.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,14 +1,24 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n foo (int32_t a, mve_pred16_t p)\n {\n   return vdupq_x_n_s32 (a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6234730827ee97d651a7fd4292f25e8bc5a95e77", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_x_n_s8.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_s8.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,14 +1,24 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n foo (int8_t a, mve_pred16_t p)\n {\n   return vdupq_x_n_s8 (a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.8\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "821fcddcab1952abfd0f8fe357d470c4f22b3f56", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_x_n_u16.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u16.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,14 +1,40 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint16x8_t\n foo (uint16_t a, mve_pred16_t p)\n {\n   return vdupq_x_n_u16 (a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.16\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.16\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint16x8_t\n+foo1 (mve_pred16_t p)\n+{\n+  return vdupq_x_n_u16 (1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "20125df6226d9a0208f9a20a3154ef169d1b74fe", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_x_n_u32.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u32.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,14 +1,40 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint32x4_t\n foo (uint32_t a, mve_pred16_t p)\n {\n   return vdupq_x_n_u32 (a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.32\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.32\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint32x4_t\n+foo1 (mve_pred16_t p)\n+{\n+  return vdupq_x_n_u32 (1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "defaaeebfcfecc930638e91553bfd0179e1d8c31", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vdupq_x_n_u8.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7827909fb2ffa3517ada8fae6e41873fb1cbe47a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvdupq_x_n_u8.c?ref=7827909fb2ffa3517ada8fae6e41873fb1cbe47a", "patch": "@@ -1,14 +1,40 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n uint8x16_t\n foo (uint8_t a, mve_pred16_t p)\n {\n   return vdupq_x_n_u8 (a, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vdupt.8\"  }  } */\n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvdupt.8\tq[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n+uint8x16_t\n+foo1 (mve_pred16_t p)\n+{\n+  return vdupq_x_n_u8 (1, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}]}