{"sha": "97d1ed67fc6a5773c8c00875bfa3616a457cf5f9", "node_id": "C_kwDOANBUbNoAKDk3ZDFlZDY3ZmM2YTU3NzNjOGMwMDg3NWJmYTM2MTZhNDU3Y2Y1Zjk", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-09-30T02:05:23Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-10-24T10:18:30Z"}, "message": "RISC-V: Support --target-help for -mcpu/-mtune\n\ngcc/ChangeLog:\n\n\t* common/config/riscv/riscv-common.cc (riscv_tunes): New.\n\t(riscv_get_valid_option_values): New.\n\t(TARGET_GET_VALID_OPTION_VALUES): New.\n\t* config/riscv/riscv-cores.def (RISCV_TUNE): New, define options\n\tfor tune here.\n\t(RISCV_CORE): Fix comment.\n\t* config/riscv/riscv.cc (riscv_tune_info_table): Move definition to\n\triscv-cores.def.", "tree": {"sha": "3a80ead3350a186cd8932fdff8e3a2a365437088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a80ead3350a186cd8932fdff8e3a2a365437088"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e9d9ed095df3d064cf9d91d46f3e5426c2a05a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e9d9ed095df3d064cf9d91d46f3e5426c2a05a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e9d9ed095df3d064cf9d91d46f3e5426c2a05a7"}], "stats": {"total": 90, "additions": 80, "deletions": 10}, "files": [{"sha": "697bfe435c8b436cc3df7fc1379079178eb2387f", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=97d1ed67fc6a5773c8c00875bfa3616a457cf5f9", "patch": "@@ -224,6 +224,14 @@ static const riscv_cpu_info riscv_cpu_tables[] =\n     {NULL, NULL, NULL}\n };\n \n+static const char *riscv_tunes[] =\n+{\n+#define RISCV_TUNE(TUNE_NAME, PIPELINE_MODEL, TUNE_INFO) \\\n+    TUNE_NAME,\n+#include \"../../../config/riscv/riscv-cores.def\"\n+    NULL\n+};\n+\n static const char *riscv_supported_std_ext (void);\n \n static riscv_subset_list *current_subset_list = NULL;\n@@ -1683,6 +1691,41 @@ riscv_compute_multilib (\n     return xstrdup (multilib_infos[best_match_multi_lib].path.c_str ());\n }\n \n+vec<const char *>\n+riscv_get_valid_option_values (int option_code,\n+\t\t\t       const char *prefix ATTRIBUTE_UNUSED)\n+{\n+  vec<const char *> v;\n+  v.create (0);\n+  opt_code opt = (opt_code) option_code;\n+\n+  switch (opt)\n+    {\n+    case OPT_mtune_:\n+      {\n+\tconst char **tune = &riscv_tunes[0];\n+\tfor (;*tune; ++tune)\n+\t  v.safe_push (*tune);\n+\n+\tconst riscv_cpu_info *cpu_info = &riscv_cpu_tables[0];\n+\tfor (;cpu_info->name; ++cpu_info)\n+\t  v.safe_push (cpu_info->name);\n+      }\n+      break;\n+    case OPT_mcpu_:\n+      {\n+\tconst riscv_cpu_info *cpu_info = &riscv_cpu_tables[0];\n+\tfor (;cpu_info->name; ++cpu_info)\n+\t  v.safe_push (cpu_info->name);\n+      }\n+      break;\n+    default:\n+      break;\n+    }\n+\n+  return v;\n+}\n+\n #undef TARGET_COMPUTE_MULTILIB\n #define TARGET_COMPUTE_MULTILIB riscv_compute_multilib\n #endif\n@@ -1701,4 +1744,7 @@ static const struct default_options riscv_option_optimization_table[] =\n #undef TARGET_HANDLE_OPTION\n #define TARGET_HANDLE_OPTION riscv_handle_option\n \n+#undef  TARGET_GET_VALID_OPTION_VALUES\n+#define TARGET_GET_VALID_OPTION_VALUES riscv_get_valid_option_values\n+\n struct gcc_targetm_common targetm_common = TARGETM_COMMON_INITIALIZER;"}, {"sha": "b84ad999ac14f773b88f4f779c658a7732954ef7", "filename": "gcc/config/riscv/riscv-cores.def", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9/gcc%2Fconfig%2Friscv%2Friscv-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9/gcc%2Fconfig%2Friscv%2Friscv-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-cores.def?ref=97d1ed67fc6a5773c8c00875bfa3616a457cf5f9", "patch": "@@ -17,19 +17,46 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n+/* This is a list of tune that implement RISC-V.\n+\n+   Before using #include to read this file, define a macro:\n+\n+      RISCV_TUNE(TUNE_NAME, PIPELINE_MODEL, TUNE_INFO)\n+\n+   The TUNE_NAME is the name of the micro-arch, represented as a string.\n+   The PIPELINE_MODEL is the pipeline model of the micro-arch, represented as a\n+   string, defined in riscv.md.\n+   The TUNE_INFO is the detail cost model for this core, represented as an\n+   identifier, reference to riscv.cc.  */\n+\n+#ifndef RISCV_TUNE\n+#define RISCV_TUNE(TUNE_NAME, PIPELINE_MODEL, TUNE_INFO)\n+#endif\n+\n+RISCV_TUNE(\"rocket\", generic, rocket_tune_info)\n+RISCV_TUNE(\"sifive-3-series\", generic, rocket_tune_info)\n+RISCV_TUNE(\"sifive-5-series\", generic, rocket_tune_info)\n+RISCV_TUNE(\"sifive-7-series\", generic, sifive_7_tune_info)\n+RISCV_TUNE(\"thead-c906\", generic, thead_c906_tune_info)\n+RISCV_TUNE(\"size\", generic, optimize_size_tune_info)\n+\n+#undef RISCV_TUNE\n+\n /* This is a list of cores that implement RISC-V.\n \n    Before using #include to read this file, define a macro:\n \n-      RISCV_CORE(CORE_NAME, ARCH, MICRO_ARCH, TUNE_INFO)\n+      RISCV_CORE(CORE_NAME, ARCH, MICRO_ARCH)\n \n    The CORE_NAME is the name of the core, represented as a string.\n    The ARCH is the default arch of the core, represented as a string,\n    can be NULL if no default arch.\n    The MICRO_ARCH is the name of the core for which scheduling decisions\n-   will be made, represented as an identifier.\n-   The TUNE_INFO is the detail cost model for this core, represented as an\n-   identifier, reference to riscv-tunes.def.  */\n+   will be made, represented as an identifier.  */\n+\n+#ifndef RISCV_CORE\n+#define RISCV_CORE(CORE_NAME, ARCH, MICRO_ARCH)\n+#endif\n \n RISCV_CORE(\"sifive-e20\",      \"rv32imc\",    \"rocket\")\n RISCV_CORE(\"sifive-e21\",      \"rv32imac\",   \"rocket\")"}, {"sha": "4e18a43539ab2c62582bcbc6603f526cf8663fb6", "filename": "gcc/config/riscv/riscv.cc", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9/gcc%2Fconfig%2Friscv%2Friscv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d1ed67fc6a5773c8c00875bfa3616a457cf5f9/gcc%2Fconfig%2Friscv%2Friscv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.cc?ref=97d1ed67fc6a5773c8c00875bfa3616a457cf5f9", "patch": "@@ -396,12 +396,9 @@ static const unsigned gpr_save_reg_order[] = {\n \n /* A table describing all the processors GCC knows about.  */\n static const struct riscv_tune_info riscv_tune_info_table[] = {\n-  { \"rocket\", generic, &rocket_tune_info },\n-  { \"sifive-3-series\", generic, &rocket_tune_info },\n-  { \"sifive-5-series\", generic, &rocket_tune_info },\n-  { \"sifive-7-series\", sifive_7, &sifive_7_tune_info },\n-  { \"thead-c906\", generic, &thead_c906_tune_info },\n-  { \"size\", generic, &optimize_size_tune_info },\n+#define RISCV_TUNE(TUNE_NAME, PIPELINE_MODEL, TUNE_INFO)\t\\\n+  { TUNE_NAME, PIPELINE_MODEL, & TUNE_INFO},\n+#include \"riscv-cores.def\"\n };\n \n void riscv_frame_info::reset(void)"}]}