{"sha": "bbcec105382edc476901620cfff1e47f9b9c3e76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJjZWMxMDUzODJlZGM0NzY5MDE2MjBjZmZmMWU0N2Y5YjljM2U3Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-12-18T11:26:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-12-18T11:26:57Z"}, "message": "error.c (interesting_scope_p): New fn.\n\n\t* error.c (interesting_scope_p): New fn.\n\t(dump_simple_decl): Use it.\n\t(dump_expr, case CONSTRUCTOR): Force a & for a PMF.\n\t(dump_expr, case OFFSET_REF): Print ->* if appropriate.\n\nFrom-SVN: r24372", "tree": {"sha": "33c224491c9b48ea7f3d62e27f8ac031d972c158", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33c224491c9b48ea7f3d62e27f8ac031d972c158"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbcec105382edc476901620cfff1e47f9b9c3e76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbcec105382edc476901620cfff1e47f9b9c3e76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbcec105382edc476901620cfff1e47f9b9c3e76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbcec105382edc476901620cfff1e47f9b9c3e76/comments", "author": null, "committer": null, "parents": [{"sha": "0197d76bfafb3d84b4df1b80b5e01f02a9272a37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0197d76bfafb3d84b4df1b80b5e01f02a9272a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0197d76bfafb3d84b4df1b80b5e01f02a9272a37"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "86901b8b63fd325d3b2fe2be1c987e651257730b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbcec105382edc476901620cfff1e47f9b9c3e76/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbcec105382edc476901620cfff1e47f9b9c3e76/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bbcec105382edc476901620cfff1e47f9b9c3e76", "patch": "@@ -1,3 +1,10 @@\n+1998-12-17  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* error.c (interesting_scope_p): New fn.\n+\t(dump_simple_decl): Use it.\n+\t(dump_expr, case CONSTRUCTOR): Force a & for a PMF.\n+\t(dump_expr, case OFFSET_REF): Print ->* if appropriate.\n+\n 1998-12-16  Mark Mitchell  <mark@markmitchell.com>\n \n \t* class.c (resolve_address_of_overloaded_function): Do conversion"}, {"sha": "d5e287798250ffbf607128f2e2085508976209cb", "filename": "gcc/cp/error.c", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbcec105382edc476901620cfff1e47f9b9c3e76/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbcec105382edc476901620cfff1e47f9b9c3e76/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=bbcec105382edc476901620cfff1e47f9b9c3e76", "patch": "@@ -114,6 +114,20 @@ init_error ()\n   scratch_firstobj = (char *)obstack_alloc (&scratch_obstack, 0);\n }\n \n+/* Returns nonzero if SCOPE is something we want to print for random decls.  */\n+\n+static int\n+interesting_scope_p (scope)\n+     tree scope;\n+{\n+  if (scope == NULL_TREE\n+      || scope == global_namespace)\n+    return 0;\n+\n+  return (TREE_CODE (scope) == NAMESPACE_DECL\n+\t  || AGGREGATE_TYPE_P (scope));\n+}\n+\n static void\n dump_qualifiers (t, p)\n      tree t;\n@@ -679,7 +693,7 @@ dump_simple_decl (t, type, v)\n       dump_type_prefix (type, v, 0);\n       OB_PUTC (' ');\n     }\n-  if (CP_DECL_CONTEXT (t) != global_namespace)\n+  if (interesting_scope_p (DECL_CONTEXT (t)))\n     {\n       dump_decl (DECL_CONTEXT (t), 0);\n       OB_PUTC2 (':',':');\n@@ -1559,7 +1573,7 @@ dump_expr (t, nop)\n \t  if (integer_all_onesp (idx))\n \t    {\n \t      tree pfn = PFN_FROM_PTRMEMFUNC (t);\n-\t      dump_expr (pfn, 0);\n+\t      dump_unary_op (\"&\", pfn, 0);\n \t      break;\n \t    }\n \t  if (TREE_CODE (idx) == INTEGER_CST\n@@ -1608,8 +1622,16 @@ dump_expr (t, nop)\n \t  }\n \telse\n \t  {\n-\t    dump_expr (TREE_OPERAND (t, 0), 0);\n-\t    OB_PUTS (\" .* \");\n+\t    if (TREE_CODE (ob) == INDIRECT_REF)\n+\t      {\n+\t\tdump_expr (TREE_OPERAND (ob, 0), 0);\n+\t\tOB_PUTS (\" ->* \");\n+\t      }\n+\t    else\n+\t      {\n+\t\tdump_expr (ob, 0);\n+\t\tOB_PUTS (\" .* \");\n+\t      }\n \t    dump_expr (TREE_OPERAND (t, 1), 0);\n \t  }\n \tbreak;"}]}