{"sha": "21b2a157ce0498394301452f8744bd782078825d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFiMmExNTdjZTA0OTgzOTQzMDE0NTJmODc0NGJkNzgyMDc4ODI1ZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-04-15T23:06:00Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-04-15T23:06:00Z"}, "message": "(do_store_flag): Before calling exact_log2, remove any\nsign extension bits.\n\nFrom-SVN: r11803", "tree": {"sha": "481dd3114d73287bce2553b87ca965273f1c5d11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/481dd3114d73287bce2553b87ca965273f1c5d11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21b2a157ce0498394301452f8744bd782078825d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21b2a157ce0498394301452f8744bd782078825d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21b2a157ce0498394301452f8744bd782078825d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21b2a157ce0498394301452f8744bd782078825d/comments", "author": null, "committer": null, "parents": [{"sha": "34f1bdc720b32aeacf3b9a1bfc5a6ef08b66a293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34f1bdc720b32aeacf3b9a1bfc5a6ef08b66a293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34f1bdc720b32aeacf3b9a1bfc5a6ef08b66a293"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "e29b404b69eb1fae6b9aae664aeeaee40ce137a0", "filename": "gcc/expr.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21b2a157ce0498394301452f8744bd782078825d/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21b2a157ce0498394301452f8744bd782078825d/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=21b2a157ce0498394301452f8744bd782078825d", "patch": "@@ -10558,10 +10558,21 @@ do_store_flag (exp, target, mode, only_cheap)\n       && TYPE_PRECISION (type) <= HOST_BITS_PER_WIDE_INT)\n     {\n       tree inner = TREE_OPERAND (arg0, 0);\n-      int bitnum = exact_log2 (INTVAL (expand_expr (TREE_OPERAND (arg0, 1),\n-\t\t\t\t\t\t    NULL_RTX, VOIDmode, 0)));\n+      HOST_WIDE_INT tem;\n+      int bitnum;\n       int ops_unsignedp;\n \n+      tem = INTVAL (expand_expr (TREE_OPERAND (arg0, 1),\n+\t\t\t\t NULL_RTX, VOIDmode, 0));\n+      /* In this case, immed_double_const will sign extend the value to make\n+\t it look the same on the host and target.  We must remove the\n+\t sign-extension before calling exact_log2, since exact_log2 will\n+\t fail for negative values.  */\n+      if (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT\n+\t  && BITS_PER_WORD == GET_MODE_BITSIZE (TYPE_MODE (type)))\n+\ttem = tem & (((HOST_WIDE_INT) 1 << BITS_PER_WORD) - 1);\n+      bitnum = exact_log2 (tem);\n+\n       /* If INNER is a right shift of a constant and it plus BITNUM does\n \t not overflow, adjust BITNUM and INNER.  */\n "}]}