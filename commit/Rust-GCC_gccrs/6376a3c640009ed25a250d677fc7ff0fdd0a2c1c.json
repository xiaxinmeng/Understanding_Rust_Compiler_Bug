{"sha": "6376a3c640009ed25a250d677fc7ff0fdd0a2c1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3NmEzYzY0MDAwOWVkMjVhMjUwZDY3N2ZjN2ZmMGZkZDBhMmMxYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T09:47:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T09:47:50Z"}, "message": "[multiple changes]\n\n2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute, case 'Loop_Entry): Handle\n\tproperly an attribute reference 'Loop_Entry that appears in the\n\tlist of indices of an indexed expression, to prevent an infinite\n\tloop in the compiler.\n\n2017-09-06  Bob Duff  <duff@adacore.com>\n\n\t* s-fileio.adb (Name): Do not raise Use_Error for temp files.\n\n2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Set_Membership):  If an alternative\n\tin a set membership is an overloaded enumeration literal, and\n\tthe type of the alternative is resolved from a previous one,\n\treplace the entity of the alternative as well as the type,\n\tto prevent inconsistencies between the entity and the type.\n\nFrom-SVN: r251761", "tree": {"sha": "83a5026f78a61947711ce133b262c40c83dc2a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83a5026f78a61947711ce133b262c40c83dc2a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/comments", "author": null, "committer": null, "parents": [{"sha": "8489c2956a08a7397d80cc21f67c1a1064c14cdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8489c2956a08a7397d80cc21f67c1a1064c14cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8489c2956a08a7397d80cc21f67c1a1064c14cdc"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "19a6d3aeff63c4681ee53b3c4c21089b4d48ae7f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6376a3c640009ed25a250d677fc7ff0fdd0a2c1c", "patch": "@@ -1,3 +1,22 @@\n+2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, case 'Loop_Entry): Handle\n+\tproperly an attribute reference 'Loop_Entry that appears in the\n+\tlist of indices of an indexed expression, to prevent an infinite\n+\tloop in the compiler.\n+\n+2017-09-06  Bob Duff  <duff@adacore.com>\n+\n+\t* s-fileio.adb (Name): Do not raise Use_Error for temp files.\n+\n+2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Set_Membership):  If an alternative\n+\tin a set membership is an overloaded enumeration literal, and\n+\tthe type of the alternative is resolved from a previous one,\n+\treplace the entity of the alternative as well as the type,\n+\tto prevent inconsistencies between the entity and the type.\n+\n 2017-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ali.ads (ALIs_Record): Add No_Component_Reordering component."}, {"sha": "c8b44bd1fd8e5bca76fc8b78033934fd5957ed9c", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=6376a3c640009ed25a250d677fc7ff0fdd0a2c1c", "patch": "@@ -742,8 +742,6 @@ package body System.File_IO is\n    begin\n       if File = null then\n          raise Status_Error with \"Name: file not open\";\n-      elsif File.Is_Temporary_File then\n-         raise Use_Error with \"Name: temporary file has no name\";\n       else\n          return File.Name.all (1 .. File.Name'Length - 1);\n       end if;"}, {"sha": "d7ee88e7bc5c15df16ffe834d9fac494e9b7e4be", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=6376a3c640009ed25a250d677fc7ff0fdd0a2c1c", "patch": "@@ -4377,7 +4377,14 @@ package body Sem_Attr is\n          --  When the attribute is part of an indexed component, find the first\n          --  expression as it will determine the semantics of 'Loop_Entry.\n \n-         if Nkind (Context) = N_Indexed_Component then\n+         --  If the attribute is itself an index in an indexed component, i.e.\n+         --  a member of a list, the context itself is not relevant (the code\n+         --  below would lead to an infinite loop) and the attribute applies\n+         --  to the enclosing loop.\n+\n+         if Nkind (Context) = N_Indexed_Component\n+           and then not Is_List_Member (N)\n+         then\n             E1 := First (Expressions (Context));\n             E2 := Next (E1);\n "}, {"sha": "cb50ee77fd838090859687ca73954a228b89ca7a", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6376a3c640009ed25a250d677fc7ff0fdd0a2c1c/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=6376a3c640009ed25a250d677fc7ff0fdd0a2c1c", "patch": "@@ -2935,11 +2935,20 @@ package body Sem_Ch4 is\n                   --  for all of them.\n \n                   Set_Etype (Alt, It.Typ);\n+\n+                  --  If the alternative is an enumeration literal, use\n+                  --  the one for this interpretation.\n+\n+                  if Is_Entity_Name (Alt) then\n+                     Set_Entity (Alt, It.Nam);\n+                  end if;\n+\n                   Get_Next_Interp (Index, It);\n \n                   if No (It.Typ) then\n                      Set_Is_Overloaded (Alt, False);\n                      Common_Type := Etype (Alt);\n+\n                   end if;\n \n                   Candidate_Interps := Alt;"}]}