{"sha": "11028a5379153307e5eef4b71b836e41b11551c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwMjhhNTM3OTE1MzMwN2U1ZWVmNGI3MWI4MzZlNDFiMTE1NTFjNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-10-08T00:08:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-10-08T00:08:23Z"}, "message": "class.c (build_vtable_entry_ref): Use finish_asm_stmt.\n\n\t* class.c (build_vtable_entry_ref): Use finish_asm_stmt.\n\n\t* class.c (finish_struct_1): Use simpler method of\n\tremoving elements of a singly-linked list which doesn't\n\tlose for classes without data members.\n\nFrom-SVN: r29859", "tree": {"sha": "d50a15941564c628c564a66f8e40867e6c137f53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d50a15941564c628c564a66f8e40867e6c137f53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11028a5379153307e5eef4b71b836e41b11551c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11028a5379153307e5eef4b71b836e41b11551c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11028a5379153307e5eef4b71b836e41b11551c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11028a5379153307e5eef4b71b836e41b11551c6/comments", "author": null, "committer": null, "parents": [{"sha": "45df36631616b48cde09691a9f4cfc23e6511ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45df36631616b48cde09691a9f4cfc23e6511ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45df36631616b48cde09691a9f4cfc23e6511ef1"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "45bde3958ddd16774ea58a24e853c668f552c7e4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11028a5379153307e5eef4b71b836e41b11551c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11028a5379153307e5eef4b71b836e41b11551c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=11028a5379153307e5eef4b71b836e41b11551c6", "patch": "@@ -1,3 +1,13 @@\n+1999-10-07  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* class.c (build_vtable_entry_ref): Use finish_asm_stmt.\n+\n+1999-10-07  Greg McGary  <gkm@gnu.org>\n+\n+\t* class.c (finish_struct_1): Use simpler method of\n+\tremoving elements of a singly-linked list which doesn't\n+\tlose for classes without data members.\n+\n 1999-10-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* friend.c (make_friend_class): Robustify."}, {"sha": "c9281d79c07f22b0def9309b8f6e6eabba79b241", "filename": "gcc/cp/class.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11028a5379153307e5eef4b71b836e41b11551c6/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11028a5379153307e5eef4b71b836e41b11551c6/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=11028a5379153307e5eef4b71b836e41b11551c6", "patch": "@@ -32,6 +32,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"splay-tree.h\"\n #include \"ggc.h\"\n+#include \"lex.h\"\n \n #include \"obstack.h\"\n #define obstack_chunk_alloc xmalloc\n@@ -465,8 +466,9 @@ build_vtable_entry_ref (basetype, vtbl, idx)\n   i = build_binary_op (MINUS_EXPR, i, i2);\n   i = build_tree_list (build_string (1, \"i\"), i);\n \n-  expand_asm_operands (build_string (sizeof(asm_stmt)-1, asm_stmt),\n-\t\t       NULL_TREE, chainon (s, i), NULL_TREE, 1, NULL, 0);\n+  finish_asm_stmt (ridpointers[RID_VOLATILE],\n+\t\t   build_string (sizeof(asm_stmt)-1, asm_stmt),\n+\t\t   NULL_TREE, chainon (s, i), NULL_TREE);\n }\n \n /* Given an object INSTANCE, return an expression which yields the\n@@ -3860,19 +3862,15 @@ finish_struct_1 (t)\n \n   my_friendly_assert (TYPE_FIELDS (t) == fields, 981117);\n \n-  /* Delete all zero-width bit-fields from the front of the fieldlist */\n-  while (fields && DECL_C_BIT_FIELD (fields)\n-\t && DECL_INITIAL (fields))\n-    fields = TREE_CHAIN (fields);\n-  /* Delete all such fields from the rest of the fields.  */\n-  for (x = fields; x;)\n-    {\n-      if (TREE_CHAIN (x) && DECL_C_BIT_FIELD (TREE_CHAIN (x))\n-\t  && DECL_INITIAL (TREE_CHAIN (x)))\n-\tTREE_CHAIN (x) = TREE_CHAIN (TREE_CHAIN (x));\n+  /* Delete all zero-width bit-fields from the fieldlist */\n+  {\n+    tree *fieldsp = &fields;\n+    while (*fieldsp && TREE_CODE (*fieldsp) == FIELD_DECL)\n+      if (DECL_C_BIT_FIELD (*fieldsp) && DECL_INITIAL (*fieldsp))\n+\t*fieldsp = TREE_CHAIN (*fieldsp);\n       else\n-\tx = TREE_CHAIN (x);\n-    }\n+\tfieldsp = &TREE_CHAIN (*fieldsp);\n+  }\n   TYPE_FIELDS (t) = fields;\n \n   if (TYPE_USES_VIRTUAL_BASECLASSES (t))"}]}