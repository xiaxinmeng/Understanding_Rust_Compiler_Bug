{"sha": "cbbf94032814561e9fbc7a5330b73d77bbcaa8ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JiZjk0MDMyODE0NTYxZTlmYmM3YTUzMzBiNzNkNzdiYmNhYThlZA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2005-05-02T18:01:58Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-05-02T18:01:58Z"}, "message": "re PR middle-end/19985 (executables created with -fprofile-arcs -ftest-coverage segfault in gcov_exit ())\n\n\tPR 19985\n\t* gcov-io.h: Declare gcov external functions hidden.\n\nFrom-SVN: r99109", "tree": {"sha": "f1b404ee0280c34b938bc2aae7e70019d5e28b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1b404ee0280c34b938bc2aae7e70019d5e28b83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbbf94032814561e9fbc7a5330b73d77bbcaa8ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbbf94032814561e9fbc7a5330b73d77bbcaa8ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbbf94032814561e9fbc7a5330b73d77bbcaa8ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbbf94032814561e9fbc7a5330b73d77bbcaa8ed/comments", "author": null, "committer": null, "parents": [{"sha": "000b62dcb872823d91cbab17d089122fbc8bbd8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000b62dcb872823d91cbab17d089122fbc8bbd8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/000b62dcb872823d91cbab17d089122fbc8bbd8f"}], "stats": {"total": 74, "additions": 48, "deletions": 26}, "files": [{"sha": "d3d7f07ea1288d591d32bf081f40f602fdd8af6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbbf94032814561e9fbc7a5330b73d77bbcaa8ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbbf94032814561e9fbc7a5330b73d77bbcaa8ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbbf94032814561e9fbc7a5330b73d77bbcaa8ed", "patch": "@@ -1,3 +1,8 @@\n+2005-05-02  Janis Johnson  <janis187@us.ibm.com>\n+\n+\tPR 19985\n+\t* gcov-io.h: Declare gcov external functions hidden.\n+\n 2005-05-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-ssa-uncprop.c (equiv_hash_elt, remove_equivalence,"}, {"sha": "b7492d725484f93b6f56e1e242c3e20176977e93", "filename": "gcc/gcov-io.h", "status": "modified", "additions": 43, "deletions": 26, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbbf94032814561e9fbc7a5330b73d77bbcaa8ed/gcc%2Fgcov-io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbbf94032814561e9fbc7a5330b73d77bbcaa8ed/gcc%2Fgcov-io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.h?ref=cbbf94032814561e9fbc7a5330b73d77bbcaa8ed", "patch": "@@ -225,11 +225,15 @@ typedef HOST_WIDEST_INT gcov_type;\n \n #endif /* !IN_LIBGCOV */\n \n-/* In gcov we want function linkage to be static. In libgcov we need\n-   these functions to be extern, so prefix them with __gcov.  In the\n-   compiler we want it extern, so that they can be accessed from\n-   elsewhere.  */\n+/* In gcov we want function linkage to be static.  In the compiler we want\n+   it extern, so that they can be accessed from elsewhere.  In libgcov we\n+   need these functions to be extern, so prefix them with __gcov.  In\n+   libgcov they must also be hidden so that the instance in the executable\n+   is not also used in a DSO.  */\n #if IN_LIBGCOV\n+\n+#include \"auto-host.h\"   /* for HAVE_GAS_HIDDEN */\n+\n #define gcov_var __gcov_var\n #define gcov_open __gcov_open\n #define gcov_close __gcov_close\n@@ -249,6 +253,16 @@ typedef HOST_WIDEST_INT gcov_type;\n #pragma GCC poison gcov_write_string gcov_write_tag gcov_write_length\n #pragma GCC poison gcov_read_string gcov_sync gcov_time gcov_magic\n \n+#ifdef HAVE_GAS_HIDDEN\n+#define ATTRIBUTE_HIDDEN  __attribute__ ((__visibility__ (\"hidden\")))\n+#else\n+#define ATTRIBUTE_HIDDEN\n+#endif\n+\n+#else\n+\n+#define ATTRIBUTE_HIDDEN\n+\n #endif\n \n #ifndef GCOV_LINKAGE\n@@ -428,20 +442,20 @@ struct gcov_info\n };\n \n /* Register a new object file module.  */\n-extern void __gcov_init (struct gcov_info *);\n+extern void __gcov_init (struct gcov_info *) ATTRIBUTE_HIDDEN;\n \n /* Called before fork, to avoid double counting.  */\n-extern void __gcov_flush (void);\n+extern void __gcov_flush (void) ATTRIBUTE_HIDDEN;\n \n /* The merge function that just sums the counters.  */\n-extern void __gcov_merge_add (gcov_type *, unsigned);\n+extern void __gcov_merge_add (gcov_type *, unsigned) ATTRIBUTE_HIDDEN;\n \n /* The merge function to choose the most common value.  */\n-extern void __gcov_merge_single (gcov_type *, unsigned);\n+extern void __gcov_merge_single (gcov_type *, unsigned) ATTRIBUTE_HIDDEN;\n \n /* The merge function to choose the most common difference between\n    consecutive values.  */\n-extern void __gcov_merge_delta (gcov_type *, unsigned);\n+extern void __gcov_merge_delta (gcov_type *, unsigned) ATTRIBUTE_HIDDEN;\n \n /* The profiler functions.  */\n extern void __gcov_interval_profiler (gcov_type *, gcov_type, int, unsigned); \n@@ -451,12 +465,13 @@ extern void __gcov_one_value_profiler (gcov_type *, gcov_type);\n #ifndef inhibit_libc\n /* The wrappers around some library functions..  */\n extern pid_t __gcov_fork (void);\n-extern int __gcov_execl (const char *, const char *, ...);\n-extern int __gcov_execlp (const char *, const char *, ...);\n-extern int __gcov_execle (const char *,  const char *, ...);\n-extern int __gcov_execv (const char *, char *const []);\n-extern int __gcov_execvp (const char *, char *const []);\n-extern int __gcov_execve (const char *, char  *const [], char *const []);\n+extern int __gcov_execl (const char *, const char *, ...) ATTRIBUTE_HIDDEN;\n+extern int __gcov_execlp (const char *, const char *, ...) ATTRIBUTE_HIDDEN;\n+extern int __gcov_execle (const char *,  const char *, ...) ATTRIBUTE_HIDDEN;\n+extern int __gcov_execv (const char *, char *const []) ATTRIBUTE_HIDDEN;\n+extern int __gcov_execvp (const char *, char *const []) ATTRIBUTE_HIDDEN;\n+extern int __gcov_execve (const char *, char  *const [], char *const [])\n+  ATTRIBUTE_HIDDEN;\n #endif\n \n #endif /* IN_LIBGCOV */\n@@ -488,7 +503,7 @@ GCOV_LINKAGE struct gcov_var\n   size_t alloc;\n   gcov_unsigned_t *buffer;\n #endif\n-} gcov_var;\n+} gcov_var ATTRIBUTE_HIDDEN;\n \n /* Functions for reading and writing gcov files. In libgcov you can\n    open the file for reading then writing. Elsewhere you can open the\n@@ -500,29 +515,31 @@ GCOV_LINKAGE struct gcov_var\n    functions for writing.  Your file may become corrupted if you break\n    these invariants.  */\n #if IN_LIBGCOV\n-GCOV_LINKAGE int gcov_open (const char */*name*/);\n+GCOV_LINKAGE int gcov_open (const char */*name*/) ATTRIBUTE_HIDDEN;\n #else\n GCOV_LINKAGE int gcov_open (const char */*name*/, int /*direction*/);\n GCOV_LINKAGE int gcov_magic (gcov_unsigned_t, gcov_unsigned_t);\n #endif\n-GCOV_LINKAGE int gcov_close (void);\n+GCOV_LINKAGE int gcov_close (void) ATTRIBUTE_HIDDEN;\n \n /* Available everywhere.  */\n static gcov_position_t gcov_position (void);\n static int gcov_is_error (void);\n \n-GCOV_LINKAGE gcov_unsigned_t gcov_read_unsigned (void);\n-GCOV_LINKAGE gcov_type gcov_read_counter (void);\n-GCOV_LINKAGE void gcov_read_summary (struct gcov_summary *);\n+GCOV_LINKAGE gcov_unsigned_t gcov_read_unsigned (void) ATTRIBUTE_HIDDEN;\n+GCOV_LINKAGE gcov_type gcov_read_counter (void) ATTRIBUTE_HIDDEN;\n+GCOV_LINKAGE void gcov_read_summary (struct gcov_summary *) ATTRIBUTE_HIDDEN;\n \n #if IN_LIBGCOV\n /* Available only in libgcov */\n-GCOV_LINKAGE void gcov_write_counter (gcov_type);\n-GCOV_LINKAGE void gcov_write_tag_length (gcov_unsigned_t, gcov_unsigned_t);\n+GCOV_LINKAGE void gcov_write_counter (gcov_type) ATTRIBUTE_HIDDEN;\n+GCOV_LINKAGE void gcov_write_tag_length (gcov_unsigned_t, gcov_unsigned_t)\n+    ATTRIBUTE_HIDDEN;\n GCOV_LINKAGE void gcov_write_summary (gcov_unsigned_t /*tag*/,\n-\t\t\t\t      const struct gcov_summary *);\n+\t\t\t\t      const struct gcov_summary *)\n+    ATTRIBUTE_HIDDEN;\n static void gcov_rewrite (void);\n-GCOV_LINKAGE void gcov_seek (gcov_position_t /*position*/);\n+GCOV_LINKAGE void gcov_seek (gcov_position_t /*position*/) ATTRIBUTE_HIDDEN;\n #else\n /* Available outside libgcov */\n GCOV_LINKAGE const char *gcov_read_string (void);\n@@ -532,7 +549,7 @@ GCOV_LINKAGE void gcov_sync (gcov_position_t /*base*/,\n \n #if !IN_GCOV\n /* Available outside gcov */\n-GCOV_LINKAGE void gcov_write_unsigned (gcov_unsigned_t);\n+GCOV_LINKAGE void gcov_write_unsigned (gcov_unsigned_t) ATTRIBUTE_HIDDEN;\n #endif\n \n #if !IN_GCOV && !IN_LIBGCOV"}]}