{"sha": "d0edecea00fdd32bce58217fe225de90342e4396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBlZGVjZWEwMGZkZDMyYmNlNTgyMTdmZTIyNWRlOTAzNDJlNDM5Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-11-10T11:35:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-11-10T11:35:08Z"}, "message": "decl.c (gnat_to_gnu_entity): Do not set DECL_ARTIFICIAL on the reused DECL node coming from a renamed object.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Do not set DECL_ARTIFICIAL\n\ton the reused DECL node coming from a renamed object.\n\tSet DECL_IGNORED_P on the DECL node built for renaming entities if they\n\tdon't need debug info.\n\nFrom-SVN: r166530", "tree": {"sha": "eb51c7f72d8cc87b357039832b52bc246eb4bd9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb51c7f72d8cc87b357039832b52bc246eb4bd9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0edecea00fdd32bce58217fe225de90342e4396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0edecea00fdd32bce58217fe225de90342e4396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0edecea00fdd32bce58217fe225de90342e4396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0edecea00fdd32bce58217fe225de90342e4396/comments", "author": null, "committer": null, "parents": [{"sha": "197a830e4355554df133c9bc54c75269cfb70ac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197a830e4355554df133c9bc54c75269cfb70ac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/197a830e4355554df133c9bc54c75269cfb70ac7"}], "stats": {"total": 63, "additions": 57, "deletions": 6}, "files": [{"sha": "0e522fddee17c53a77cb7b0f1b5149b48e41d3fc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0edecea00fdd32bce58217fe225de90342e4396/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0edecea00fdd32bce58217fe225de90342e4396/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d0edecea00fdd32bce58217fe225de90342e4396", "patch": "@@ -1,3 +1,10 @@\n+2010-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Do not set DECL_ARTIFICIAL\n+\ton the reused DECL node coming from a renamed object.\n+\tSet DECL_IGNORED_P on the DECL node built for renaming entities if they\n+\tdon't need debug info.\n+\n 2010-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (save_gnu_tree): Improve comments."}, {"sha": "718165386829f3c9ab5ee6d3bbffbbfc1f62ca8b", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0edecea00fdd32bce58217fe225de90342e4396/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0edecea00fdd32bce58217fe225de90342e4396/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=d0edecea00fdd32bce58217fe225de90342e4396", "patch": "@@ -4894,13 +4894,17 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \tSet_RM_Size (gnat_entity, annotate_value (rm_size (gnu_type)));\n     }\n \n-  if (!Comes_From_Source (gnat_entity) && DECL_P (gnu_decl))\n-    DECL_ARTIFICIAL (gnu_decl) = 1;\n+  /* If we really have a ..._DECL node, set a couple of flags on it.  But we\n+     cannot do that if we are reusing the ..._DECL node made for a renamed\n+     object, since the predicates don't apply to it but to GNAT_ENTITY.  */\n+  if (DECL_P (gnu_decl) && !(Present (Renamed_Object (gnat_entity)) && saved))\n+    {\n+      if (!Comes_From_Source (gnat_entity))\n+\tDECL_ARTIFICIAL (gnu_decl) = 1;\n \n-  if (!debug_info_p && DECL_P (gnu_decl)\n-      && TREE_CODE (gnu_decl) != FUNCTION_DECL\n-      && No (Renamed_Object (gnat_entity)))\n-    DECL_IGNORED_P (gnu_decl) = 1;\n+      if (!debug_info_p && TREE_CODE (gnu_decl) != FUNCTION_DECL)\n+\tDECL_IGNORED_P (gnu_decl) = 1;\n+    }\n \n   /* If we haven't already, associate the ..._DECL node that we just made with\n      the input GNAT entity node.  */"}, {"sha": "32ee4fabf6118d3005e4b78c1a3cc9d8afbbec42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0edecea00fdd32bce58217fe225de90342e4396/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0edecea00fdd32bce58217fe225de90342e4396/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0edecea00fdd32bce58217fe225de90342e4396", "patch": "@@ -1,3 +1,7 @@\n+2010-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/unchecked_convert7.adb: New test.\n+\n 2010-11-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46398"}, {"sha": "502459bba7b852c3dd486284b0d05561ce597716", "filename": "gcc/testsuite/gnat.dg/unchecked_convert7.adb", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0edecea00fdd32bce58217fe225de90342e4396/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0edecea00fdd32bce58217fe225de90342e4396/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert7.adb?ref=d0edecea00fdd32bce58217fe225de90342e4396", "patch": "@@ -0,0 +1,36 @@\n+-- { dg-do compile }\n+-- { dg-options \"-g -gnatVa\" }\n+\n+with Unchecked_Conversion;\n+\n+procedure Unchecked_Convert7 is\n+\n+  type BPA is array (1 .. 23) of Boolean;\n+  pragma Pack (BPA);\n+  for BPA'Size use 23;\n+\n+  subtype Byte is Natural range 0 .. 255;\n+\n+  type R is\n+    record\n+      S : Boolean;\n+      E : Byte;\n+      F : BPA;\n+    end record;\n+\n+  for R use\n+    record\n+      S at 0 range 0 .. 0;\n+      E at 0 range 1 .. 8;\n+      F at 0 range 9 .. 31;\n+    end record;\n+  for R'Size use 32;\n+\n+  function Conversion\n+    is new Unchecked_Conversion (Source => R, Target => Float);\n+\n+  F : Float := Conversion (R'(False, Byte'Last, (others => False)));\n+\n+begin\n+  null;\n+end;"}]}