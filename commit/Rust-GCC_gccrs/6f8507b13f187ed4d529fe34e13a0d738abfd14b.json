{"sha": "6f8507b13f187ed4d529fe34e13a0d738abfd14b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY4NTA3YjEzZjE4N2VkNGQ1MjlmZTM0ZTEzYTBkNzM4YWJmZDE0Yg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2003-06-26T19:09:56Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2003-06-26T19:09:56Z"}, "message": "demangle-expected: Add more GNU V3 testcases.\n\n2003-06-26  H.J. Lu <hongjiu.lu@intel.com>\n\n\t* testsuite/demangle-expected: Add more GNU V3 testcases.\n\nFrom-SVN: r68540", "tree": {"sha": "3399fb9766440ccc4efe6695ae1996c2557e42a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3399fb9766440ccc4efe6695ae1996c2557e42a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f8507b13f187ed4d529fe34e13a0d738abfd14b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f8507b13f187ed4d529fe34e13a0d738abfd14b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f8507b13f187ed4d529fe34e13a0d738abfd14b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f8507b13f187ed4d529fe34e13a0d738abfd14b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "343fd2c726cc22b177aa3b3e2195aaab73f49f92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343fd2c726cc22b177aa3b3e2195aaab73f49f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343fd2c726cc22b177aa3b3e2195aaab73f49f92"}], "stats": {"total": 266, "additions": 265, "deletions": 1}, "files": [{"sha": "99f2f0a695a9c5fb20285bb4623e4be7d1c336d3", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f8507b13f187ed4d529fe34e13a0d738abfd14b/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f8507b13f187ed4d529fe34e13a0d738abfd14b/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=6f8507b13f187ed4d529fe34e13a0d738abfd14b", "patch": "@@ -1,3 +1,7 @@\n+2003-06-26  H.J. Lu <hongjiu.lu@intel.com>\n+\n+\t* testsuite/demangle-expected: Add more GNU V3 testcases.\n+\n 2003-06-22  Zack Weinberg  <zack@codesourcery.com>\n \n \t* safe-ctype.c: Use HOST_CHARSET_ASCII and HOST_CHARSET_EBCDIC,"}, {"sha": "6be66e10b48b7139e0bae983f37ab10aaf3a1284", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 261, "deletions": 1, "changes": 262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f8507b13f187ed4d529fe34e13a0d738abfd14b/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f8507b13f187ed4d529fe34e13a0d738abfd14b/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=6f8507b13f187ed4d529fe34e13a0d738abfd14b", "patch": "@@ -2598,9 +2598,269 @@ _Utf58_0_1__1_2147483647__2147483648\n --format=gnu-v3\n St9bad_alloc\n std::bad_alloc\n+#\n+--format=gnu-v3\n+_ZN1f1fE\n+f::f\n+#\n+--format=gnu-v3\n+_Z1fv\n+f()\n+#\n+--format=gnu-v3\n+_Z1fi\n+f(int)\n+#\n+--format=gnu-v3\n+_Z3foo3bar\n+foo(bar)\n+#\n+--format=gnu-v3\n+_Zrm1XS_\n+operator%(X, X)\n+#\n+--format=gnu-v3\n+_ZplR1XS0_\n+operator+(X&, X&)\n+#\n+--format=gnu-v3\n+_ZlsRK1XS1_\n+operator<<(X const&, X const&)\n+#\n+--format=gnu-v3\n+_ZN3FooIA4_iE3barE\n+Foo<int[4]>::bar\n+#\n+--format=gnu-v3\n+_Z1fIiEvi\n+void f<int>(int)\n+#\n+--format=gnu-v3\n+_Z5firstI3DuoEvS0_\n+void first<Duo>(Duo)\n+#\n+--format=gnu-v3\n+_Z5firstI3DuoEvT_\n+void first<Duo>(Duo)\n+#\n+--format=gnu-v3\n+_Z3fooIiFvdEiEvv\n+void foo<int, void ()(double), int>()\n+#\n+--format=gnu-v3\n+_ZN1N1fE\n+N::f\n+#\n+--format=gnu-v3\n+_ZN6System5Sound4beepEv\n+System::Sound::beep()\n+#\n+--format=gnu-v3\n+_ZN5Arena5levelE\n+Arena::level\n+#\n+--format=gnu-v3\n+_ZN5StackIiiE5levelE\n+Stack<int, int>::level\n+#\n+--format=gnu-v3\n+_Z1fI1XEvPVN1AIT_E1TE\n+void f<X>(A<X>::T volatile*)\n+#\n+--format=gnu-v3\n+_ZngILi42EEvN1AIXplT_Li2EEE1TE\n+void operator-<42>(A<(42) + (2)>::T)\n+#\n+--format=gnu-v3\n+_Z4makeI7FactoryiET_IT0_Ev\n+Factory<int> make<Factory, int>()\n+#\n+--format=gnu-v3\n+_Z4makeI7FactoryiET_IT0_Ev\n+Factory<int> make<Factory, int>()\n+#\n+--format=gnu-v3\n+_Z3foo5Hello5WorldS0_S_\n+foo(Hello, World, World, Hello)\n+#\n+--format=gnu-v3\n+_Z3fooPM2ABi\n+foo(int AB::**)\n+#\n+--format=gnu-v3\n+_ZlsRSoRKSs\n+operator<<(std::ostream&, std::string const&)\n+#\n+--format=gnu-v3\n+_ZTI7a_class\n+typeinfo for a_class\n+#\n+--format=gnu-v3\n+U4_farrVKPi\n+int* restrict volatile const _far\n+# \n+--format=gnu-v3\n+_Z3fooILi2EEvRAplT_Li1E_i\n+void foo<2>(int (&) [(2) + (1)])\n+# \n+--format=gnu-v3\n+_Z1fM1AKFvvE\n+f(void (A::*)() const)\n+#\n+--format=gnu-v3\n+_Z3fooc\n+foo(char)\n+#\n+--format=gnu-v3\n+2CBIL_Z3foocEE\n+CB<foo(char)>\n+#\n+--format=gnu-v3\n+2CBIL_Z7IsEmptyEE\n+CB<IsEmpty>\n+#\n+--format=gnu-v3\n+_ZZN1N1fEiE1p\n+N::f(int)::p\n+#\n+--format=gnu-v3\n+_ZZN1N1fEiEs\n+N::f(int)::string literal\n+# \n+--format=gnu-v3\n+_Z1fPFvvEM1SFvvE\n+f(void (*)(), void (S::*)())\n+#\n+--format=gnu-v3\n+_ZN1N1TIiiE2mfES0_IddE\n+N::T<int, int>::mf(N::T<double, double>)\n+# \n+--format=gnu-v3\n+_ZSt5state\n+std::state\n+# \n+--format=gnu-v3\n+_ZNSt3_In4wardE\n+std::_In::ward\n+#\n+--format=gnu-v3\n+_Z1fKPFiiE\n+f(int (* const)(int))\n+#\n+--format=gnu-v3\n+_Z1fAszL_ZZNK1N1A1fEvE3foo_0E_i\n+f(int[sizeof(N::A::f() const::foo)])\n+#\n+--format=gnu-v3\n+_Z1fA37_iPS_\n+f(int[37], int (*) [37])\n+#\n+--format=gnu-v3\n+_Z1fM1AFivEPS0_\n+f(int (A::*)(), int (*)())\n+#\n+--format=gnu-v3\n+_Z1fPFPA1_ivE\n+f(int (*(*)()) [1])\n+#\n+--format=gnu-v3\n+_Z1fPKM1AFivE\n+f(int (A::* const*)())\n+#\n+--format=gnu-v3\n+_Z1jM1AFivEPS1_\n+j(int (A::*)(), int (A::**)())\n+#\n+--format=gnu-v3\n+_Z1sPA37_iPS0_\n+s(int (*) [37], int (**) [37])\n+#\n+--format=gnu-v3\n+_Z3fooA30_A_i\n+foo(int[30][])\n+#\n+--format=gnu-v3\n+_Z3kooPA28_A30_i\n+koo(int (*) [28][30])\n+#\n+--format=gnu-v3\n+_ZlsRKU3fooU4bart1XS0_\n+operator<<(X bart foo const&, X bart)\n+#\n+--format=gnu-v3\n+_ZlsRKU3fooU4bart1XS2_\n+operator<<(X bart foo const&, X bart foo const)\n+#\n+--format=gnu-v3\n+_Z1fM1AKFivE\n+f(int (A::*)() const)\n+#\n+--format=gnu-v3\n+_Z3absILi11EEvv\n+void abs<11>()\n+#\n+--format=gnu-v3\n+_ZN1AIfEcvT_IiEEv\n+A<float>::operator int<int>()\n+#\n+--format=gnu-v3\n+_ZN12libcw_app_ct10add_optionIS_EEvMT_FvPKcES3_cS3_S3_\n+void libcw_app_ct::add_option<libcw_app_ct>(void (libcw_app_ct::*)(char const*), char const*, char, char const*, char const*)\n+#\n+--format=gnu-v3\n+_ZGVN5libcw24_GLOBAL__N_cbll.cc0ZhUKa23compiler_bug_workaroundISt6vectorINS_13omanip_id_tctINS_5debug32memblk_types_manipulator_data_ctEEESaIS6_EEE3idsE\n+guard variable for libcw::(anonymous namespace)::compiler_bug_workaround<std::vector<libcw::omanip_id_tct<libcw::debug::memblk_types_manipulator_data_ct>, std::allocator<libcw::omanip_id_tct<libcw::debug::memblk_types_manipulator_data_ct> > > >::ids\n+#\n+--format=gnu-v3\n+_ZN5libcw5debug13cwprint_usingINS_9_private_12GlobalObjectEEENS0_17cwprint_using_tctIT_EERKS5_MS5_KFvRSt7ostreamE\n+libcw::debug::cwprint_using_tct<libcw::_private_::GlobalObject> libcw::debug::cwprint_using<libcw::_private_::GlobalObject>(libcw::_private_::GlobalObject const&, void (libcw::_private_::GlobalObject::*)(std::ostream&) const)\n+#\n+--format=gnu-v3\n+_ZNKSt14priority_queueIP27timer_event_request_base_ctSt5dequeIS1_SaIS1_EE13timer_greaterE3topEv\n+std::priority_queue<timer_event_request_base_ct*, std::deque<timer_event_request_base_ct*, std::allocator<timer_event_request_base_ct*> >, timer_greater>::top() const\n+#\n+--format=gnu-v3\n+_ZNKSt15_Deque_iteratorIP15memory_block_stRKS1_PS2_EeqERKS5_\n+std::_Deque_iterator<memory_block_st*, memory_block_st* const&, memory_block_st* const*>::operator==(std::_Deque_iterator<memory_block_st*, memory_block_st* const&, memory_block_st* const*> const&) const\n+#\n+--format=gnu-v3\n+_ZNKSt17__normal_iteratorIPK6optionSt6vectorIS0_SaIS0_EEEmiERKS6_\n+std::__normal_iterator<option const*, std::vector<option, std::allocator<option> > >::operator-(std::__normal_iterator<option const*, std::vector<option, std::allocator<option> > > const&) const\n+#\n+--format=gnu-v3\n+_ZNSbIcSt11char_traitsIcEN5libcw5debug27no_alloc_checking_allocatorEE12_S_constructIPcEES6_T_S7_RKS3_\n+char* std::basic_string<char, std::char_traits<char>, libcw::debug::no_alloc_checking_allocator>::_S_construct<char*>(char*, char*, libcw::debug::no_alloc_checking_allocator const&)\n+#\n+--format=gnu-v3\n+_Z1fI1APS0_PKS0_EvT_T0_T1_PA4_S3_M1CS8_\n+void f<A, A*, A const*>(A, A*, A const*, A const* (*) [4], A const* (* C::*) [4])\n+#\n+--format=gnu-v3\n+_Z3fooiPiPS_PS0_PS1_PS2_PS3_PS4_PS5_PS6_PS7_PS8_PS9_PSA_PSB_PSC_\n+foo(int, int*, int**, int***, int****, int*****, int******, int*******, int********, int*********, int**********, int***********, int************, int*************, int**************, int***************)\n+#\n+--format=gnu-v3\n+_ZSt1BISt1DIP1ARKS2_PS3_ES0_IS2_RS2_PS2_ES2_ET0_T_SB_SA_PT1_\n+std::D<A*, A*&, A**> std::B<std::D<A*, A* const&, A* const*>, std::D<A*, A*&, A**>, A*>(std::D<A*, A* const&, A* const*>, std::D<A*, A* const&, A* const*>, std::D<A*, A*&, A**>, A**)\n+#\n+--format=gnu-v3\n+_X11TransParseAddress\n+_X11TransParseAddress\n+#\n+--format=gnu-v3\n+_ZNSt13_Alloc_traitsISbIcSt18string_char_traitsIcEN5libcw5debug9_private_17allocator_adaptorIcSt24__default_alloc_templateILb0ELi327664EELb1EEEENS5_IS9_S7_Lb1EEEE15_S_instancelessE\n+std::_Alloc_traits<std::basic_string<char, std::string_char_traits<char>, libcw::debug::_private_::allocator_adaptor<char, std::__default_alloc_template<false, 327664>, true> >, libcw::debug::_private_::allocator_adaptor<std::basic_string<char, std::string_char_traits<char>, libcw::debug::_private_::allocator_adaptor<char, std::__default_alloc_template<false, 327664>, true> >, std::__default_alloc_template<false, 327664>, true> >::_S_instanceless\n+#\n+--format=gnu-v3\n+_GLOBAL__I__Z2fnv\n+global constructors keyed to fn()\n+#\n+--format=gnu-v3\n+_Z1rM1GFivEMS_KFivES_M1HFivES1_4whatIKS_E5what2IS8_ES3_\n+r(int (G::*)(), int (G::*)() const, G, int (H::*)(), int (G::*)(), what<G const>, what2<G const>, int (G::*)() const)\n # \n # This caused an infinite loop.\n # We still don't demangle this correctly, but at least we don't hang.\n --format=auto\n __CPR212____ct__Q3_3std141list__tm__128_Q2_3edm41THandle__tm__26_Q2_4emid15EMparticleChunkQ2_3std68allocator__tm__51_Q2_3edmJ37J14const_iteratorFRCQ3_3std18list__tm__7_Z1ZZ2Z8iterator\n-_Z1ZZ2Z::__CPR212____ct__Q3_3std141list__tm__128_Q2_3edm41THandle__tm__26_Q2_4emid15EMparticleChunkQ2_3std68allocator__tm__51_Q2_3edmJ37J14const_iteratorFRCQ3_3std18list__tm(iterator)\n+__CPR212____ct__Q3_3std141list__tm__128_Q2_3edm41THandle__tm__26_Q2_4emid15EMparticleChunkQ2_3std68allocator__tm__51_Q2_3edmJ37J14const_iteratorFRCQ3_3std18list__tm__7_Z1ZZ2Z8iterator"}]}