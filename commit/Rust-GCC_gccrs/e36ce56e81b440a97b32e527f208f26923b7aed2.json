{"sha": "e36ce56e81b440a97b32e527f208f26923b7aed2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM2Y2U1NmU4MWI0NDBhOTdiMzJlNTI3ZjIwOGYyNjkyM2I3YWVkMg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-12-11T16:46:26Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-12-11T16:48:20Z"}, "message": "arm: Auto-vectorization for MVE clean condition for vand and vorr expanders\n\nThe patch restores the unconditional definition of the VDQ iterator,\nand changes the conditions of the vand and vorr expanders to use\nARM_HAVE_<MODE>_ARITH.\n\n2020-12-11  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/\n\t* config/arm/iterators.md (VDQ): Remove TARGET_HAVE_MVE\n\tconditions.\n\t* config/arm/vec-common.md (and<mode>3): Use\n\tARM_HAVE_<MODE>_ARITH.\n\t(ior<mode>3): Likewise.", "tree": {"sha": "87b77fe05b49d7336857e301b8ea32c5a7c253a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87b77fe05b49d7336857e301b8ea32c5a7c253a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e36ce56e81b440a97b32e527f208f26923b7aed2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36ce56e81b440a97b32e527f208f26923b7aed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e36ce56e81b440a97b32e527f208f26923b7aed2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36ce56e81b440a97b32e527f208f26923b7aed2/comments", "author": null, "committer": null, "parents": [{"sha": "78e9cfe1e29902a887853142a5e417500fe90fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e9cfe1e29902a887853142a5e417500fe90fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e9cfe1e29902a887853142a5e417500fe90fc8"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "5fcb7afe5657b6d373d7ea314f53206cdde93c8d", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e36ce56e81b440a97b32e527f208f26923b7aed2/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e36ce56e81b440a97b32e527f208f26923b7aed2/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=e36ce56e81b440a97b32e527f208f26923b7aed2", "patch": "@@ -147,12 +147,7 @@\n (define_mode_iterator VN [V8HI V4SI V2DI])\n \n ;; All supported vector modes (except singleton DImode).\n-(define_mode_iterator VDQ [(V8QI \"!TARGET_HAVE_MVE\") V16QI\n-\t\t\t   (V4HI \"!TARGET_HAVE_MVE\") V8HI\n-\t\t\t   (V2SI \"!TARGET_HAVE_MVE\") V4SI\n-\t\t\t   (V4HF \"!TARGET_HAVE_MVE\") V8HF\n-\t\t\t   (V2SF \"!TARGET_HAVE_MVE\") V4SF\n-\t\t\t   (V2DI \"!TARGET_HAVE_MVE\")])\n+(define_mode_iterator VDQ [V8QI V16QI V4HI V8HI V2SI V4SI V4HF V8HF V2SF V4SF V2DI])\n \n ;; All supported floating-point vector modes (except V2DF).\n (define_mode_iterator VF [(V4HF \"TARGET_NEON_FP16INST\")"}, {"sha": "8d9c89c5b2bca2779c6920c46a34f2dcc2f66e54", "filename": "gcc/config/arm/vec-common.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e36ce56e81b440a97b32e527f208f26923b7aed2/gcc%2Fconfig%2Farm%2Fvec-common.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e36ce56e81b440a97b32e527f208f26923b7aed2/gcc%2Fconfig%2Farm%2Fvec-common.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvec-common.md?ref=e36ce56e81b440a97b32e527f208f26923b7aed2", "patch": "@@ -177,14 +177,12 @@\n   [(set (match_operand:VDQ 0 \"s_register_operand\" \"\")\n \t(and:VDQ (match_operand:VDQ 1 \"s_register_operand\" \"\")\n \t\t (match_operand:VDQ 2 \"neon_inv_logic_op2\" \"\")))]\n-  \"TARGET_NEON\n-   || TARGET_HAVE_MVE\"\n+  \"ARM_HAVE_<MODE>_ARITH\"\n )\n \n (define_expand \"ior<mode>3\"\n   [(set (match_operand:VDQ 0 \"s_register_operand\" \"\")\n \t(ior:VDQ (match_operand:VDQ 1 \"s_register_operand\" \"\")\n \t\t (match_operand:VDQ 2 \"neon_logic_op2\" \"\")))]\n-  \"TARGET_NEON\n-   || TARGET_HAVE_MVE\"\n+  \"ARM_HAVE_<MODE>_ARITH\"\n )"}]}