{"sha": "7c02e403d145989ed9f291123689baa96f455fb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MwMmU0MDNkMTQ1OTg5ZWQ5ZjI5MTEyMzY4OWJhYTk2ZjQ1NWZiNQ==", "commit": {"author": {"name": "Dmitriy Anisimkov", "email": "anisimko@adacore.com", "date": "2020-01-23T06:38:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-04T09:11:03Z"}, "message": "[Ada] Fix Is_Absolute_Path on Windows\n\n2020-06-04  Dmitriy Anisimkov  <anisimko@adacore.com>\n\ngcc/ada/\n\n\t* adaint.c (__gnat_is_absolute_path): Check for directory\n\tseparator after drive and colon.\n\t(IS_DIR_SEPARATOR): Define new inline substitution.", "tree": {"sha": "0cf8480459ac6e49586245d3c2f75fc69ae94f77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cf8480459ac6e49586245d3c2f75fc69ae94f77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c02e403d145989ed9f291123689baa96f455fb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c02e403d145989ed9f291123689baa96f455fb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c02e403d145989ed9f291123689baa96f455fb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c02e403d145989ed9f291123689baa96f455fb5/comments", "author": {"login": "anisimkov", "id": 15864134, "node_id": "MDQ6VXNlcjE1ODY0MTM0", "avatar_url": "https://avatars.githubusercontent.com/u/15864134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anisimkov", "html_url": "https://github.com/anisimkov", "followers_url": "https://api.github.com/users/anisimkov/followers", "following_url": "https://api.github.com/users/anisimkov/following{/other_user}", "gists_url": "https://api.github.com/users/anisimkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/anisimkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anisimkov/subscriptions", "organizations_url": "https://api.github.com/users/anisimkov/orgs", "repos_url": "https://api.github.com/users/anisimkov/repos", "events_url": "https://api.github.com/users/anisimkov/events{/privacy}", "received_events_url": "https://api.github.com/users/anisimkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51bc44b84aafd0bbdcd6cacfbbe2d20f5a15df6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51bc44b84aafd0bbdcd6cacfbbe2d20f5a15df6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51bc44b84aafd0bbdcd6cacfbbe2d20f5a15df6a"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "a4992000c017a8b0a22ecf3796e15f4406aa3ecf", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c02e403d145989ed9f291123689baa96f455fb5/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c02e403d145989ed9f291123689baa96f455fb5/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=7c02e403d145989ed9f291123689baa96f455fb5", "patch": "@@ -264,6 +264,9 @@ UINT __gnat_current_ccs_encoding;\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n+#define IS_DIR_SEPARATOR(c) ((c) == DIR_SEPARATOR)\n+#else\n+#define IS_DIR_SEPARATOR(c) ((c) == '/' || (c) == DIR_SEPARATOR)\n #endif\n \n /* Check for cross-compilation.  */\n@@ -1709,9 +1712,10 @@ __gnat_is_absolute_path (char *name, int length)\n   return 0;\n #else\n   return (length != 0) &&\n-     (*name == '/' || *name == DIR_SEPARATOR\n+     (IS_DIR_SEPARATOR(*name)\n #if defined (WINNT) || defined(__DJGPP__)\n-      || (length > 1 && ISALPHA (name[0]) && name[1] == ':')\n+      || (length > 2 && ISALPHA (name[0]) && name[1] == ':'\n+          && IS_DIR_SEPARATOR(name[2]))\n #endif\n \t  );\n #endif\n@@ -2845,7 +2849,7 @@ __gnat_locate_file_with_predicate (char *file_name, char *path_val,\n \n   /* If file_name include directory separator(s), try it first as\n      a path name relative to the current directory */\n-  for (ptr = file_name; *ptr && *ptr != '/' && *ptr != DIR_SEPARATOR; ptr++)\n+  for (ptr = file_name; *ptr && !IS_DIR_SEPARATOR(*ptr); ptr++)\n     ;\n \n   if (*ptr != 0)\n@@ -2886,7 +2890,7 @@ __gnat_locate_file_with_predicate (char *file_name, char *path_val,\n       if (*ptr == '\"')\n \tptr--;\n \n-      if (*ptr != '/' && *ptr != DIR_SEPARATOR)\n+      if (!IS_DIR_SEPARATOR(*ptr))\n         *++ptr = DIR_SEPARATOR;\n \n       strcpy (++ptr, file_name);"}]}