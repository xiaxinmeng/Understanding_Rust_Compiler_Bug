{"sha": "9a4d6480b8ef0b589169e0906154fc164b3a267c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE0ZDY0ODBiOGVmMGI1ODkxNjllMDkwNjE1NGZjMTY0YjNhMjY3Yw==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-08-15T21:47:32Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-08-15T21:47:32Z"}, "message": "Makefile.in (C_PRETTY_PRINT_H): Add c-pretty-print.h.\n\n[gcc/ChangeLog]\n2004-08-15  Ziemowit Laski  <zlaski@apple.com>\n\n       * Makefile.in (C_PRETTY_PRINT_H): Add c-pretty-print.h.\n       (c-lang.o): Depend on c-objc-common.h.\n       (c-objc-common.o): Depend on $(C_PRETTY_PRINT_H) and\n       c-objc-common.h; remove duplicate $(C_TREE_H) dependency.\n       * c-lang.c: Include c-objc-common.h.\n       (LANG_HOOKS_FINISH, LANG_HOOKS_INIT_OPTIONS,\n       LANG_HOOKS_INITIALIZE_DIAGNOSTICS, LANG_HOOKS_HANDLE_OPTION,\n       LANG_HOOKS_MISSING_ARGUMENT, LANG_HOOKS_POST_OPTIONS,\n       LANG_HOOKS_GET_ALIAS_SET, LANG_HOOKS_SAFE_FROM_P,\n       LANG_HOOKS_EXPAND_EXPR, LANG_HOOKS_MARK_ADDRESSABLE,\n       LANG_HOOKS_PARSE_FILE, LANG_HOOKS_TRUTHVALUE_CONVERSION,\n       LANG_HOOKS_FINISH_INCOMPLETE_DECL, LANG_HOOKS_UNSAFE_FOR_REEVAL,\n       LANG_HOOKS_STATICP, LANG_HOOKS_SET_DECL_ASSEMBLER_NAME,\n       LANG_HOOKS_NO_BODY_BLOCKS, LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL,\n       LANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_FUNCTION_ENTER_NESTED,\n       LANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_DUP_LANG_SPECIFIC_DECL,\n       LANG_HOOKS_DECL_UNINIT, LANG_HOOKS_RTL_EXPAND_STMT,\n       LANG_HOOKS_COMMON_ATTRIBUTE_TABLE, LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE,\n       LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN,\n       LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS,\n       LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P,\n       LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING,\n       LANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS,\n       LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN,\n       LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION, LANG_HOOKS_TYPE_FOR_MODE,\n       LANG_HOOKS_TYPE_FOR_SIZE, LANG_HOOKS_SIGNED_TYPE,\n       LANG_HOOKS_UNSIGNED_TYPE, LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE,\n       LANG_HOOKS_INCOMPLETE_TYPE_ERROR, LANG_HOOKS_TYPE_PROMOTES_TO,\n       LANG_HOOKS_REGISTER_BUILTIN_TYPE, LANG_HOOKS_WRITE_GLOBALS):\n       Move to c-objc-common.h.\n       * c-objc-common.c: Include c-objc-common.h.\n       * c-objc-common.h: New file.\n\n[gcc/objc/ChangeLog]\n2004-08-15  Ziemowit Laski  <zlaski@apple.com>\n\n       * Make-lang.in (objc/objc-lang.o): Depend on $(C_PRETTY_PRINT_H),\n       $(DIAGNOSTIC_H), c-objc-common.h and gtype-objc.h, but not on toplev.h.\n       (objc/objc-parse.o): Do not depend on gtype-objc.h.\n       * objc-act.c: Do not include gtype-objc.h.\n       (finish_file): Rename to objc_finish_file().\n       * objc-act.h (finish_file): Update copyright notice; remove prototype.\n       * objc-lang.c: Update copyright notice; include diagnostic.h,\n       c-objc-common.h, c-pretty-print.h and gtype-objc.h; do not include\n       toplev.h.\n       (finish_file): New hook routine.\n       (LANG_HOOKS_FINISH, LANG_HOOKS_INIT_OPTIONS,\n       LANG_HOOKS_INITIALIZE_DIAGNOSTICS, LANG_HOOKS_HANDLE_OPTION,\n       LANG_HOOKS_MISSING_ARGUMENT, LANG_HOOKS_POST_OPTIONS,\n       LANG_HOOKS_GET_ALIAS_SET, LANG_HOOKS_SAFE_FROM_P,\n       LANG_HOOKS_EXPAND_EXPR, LANG_HOOKS_MARK_ADDRESSABLE,\n       LANG_HOOKS_PARSE_FILE, LANG_HOOKS_TRUTHVALUE_CONVERSION,\n       LANG_HOOKS_FINISH_INCOMPLETE_DECL, LANG_HOOKS_UNSAFE_FOR_REEVAL,\n       LANG_HOOKS_STATICP, LANG_HOOKS_SET_DECL_ASSEMBLER_NAME,\n       LANG_HOOKS_NO_BODY_BLOCKS, LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL,\n       LANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_FUNCTION_ENTER_NESTED,\n       LANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_DUP_LANG_SPECIFIC_DECL,\n       LANG_HOOKS_DECL_UNINIT, LANG_HOOKS_RTL_EXPAND_STMT,\n       LANG_HOOKS_COMMON_ATTRIBUTE_TABLE, LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE,\n       LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN,\n       LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS,\n       LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P,\n       LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING,\n       LANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS,\n       LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN,\n       LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION, LANG_HOOKS_TYPE_FOR_MODE,\n       LANG_HOOKS_TYPE_FOR_SIZE, LANG_HOOKS_SIGNED_TYPE,\n       LANG_HOOKS_UNSIGNED_TYPE, LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE,\n       LANG_HOOKS_INCOMPLETE_TYPE_ERROR, LANG_HOOKS_TYPE_PROMOTES_TO,\n       LANG_HOOKS_REGISTER_BUILTIN_TYPE, LANG_HOOKS_WRITE_GLOBALS):\n       Move to c-objc-common.h.\n\nFrom-SVN: r86037", "tree": {"sha": "c3e8f860a2a9a8b5b2e3bce09b608aa48c4c8708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3e8f860a2a9a8b5b2e3bce09b608aa48c4c8708"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a4d6480b8ef0b589169e0906154fc164b3a267c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4d6480b8ef0b589169e0906154fc164b3a267c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4d6480b8ef0b589169e0906154fc164b3a267c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4d6480b8ef0b589169e0906154fc164b3a267c/comments", "author": null, "committer": null, "parents": [{"sha": "cbaaa7db2c1e139df1c3484a028de9ba42864bd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbaaa7db2c1e139df1c3484a028de9ba42864bd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbaaa7db2c1e139df1c3484a028de9ba42864bd2"}], "stats": {"total": 466, "additions": 244, "deletions": 222}, "files": [{"sha": "430dc1960e4de8c188b94c824decd16e23cedcf1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -1,3 +1,38 @@\n+2004-08-15  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* Makefile.in (C_PRETTY_PRINT_H): Add c-pretty-print.h.\n+\t(c-lang.o): Depend on c-objc-common.h.\n+\t(c-objc-common.o): Depend on $(C_PRETTY_PRINT_H) and \n+\tc-objc-common.h; remove duplicate $(C_TREE_H) dependency.\n+\t* c-lang.c: Include c-objc-common.h.\n+\t(LANG_HOOKS_FINISH, LANG_HOOKS_INIT_OPTIONS,\n+\tLANG_HOOKS_INITIALIZE_DIAGNOSTICS, LANG_HOOKS_HANDLE_OPTION,\n+\tLANG_HOOKS_MISSING_ARGUMENT, LANG_HOOKS_POST_OPTIONS,\n+\tLANG_HOOKS_GET_ALIAS_SET, LANG_HOOKS_SAFE_FROM_P, \n+\tLANG_HOOKS_EXPAND_EXPR, LANG_HOOKS_MARK_ADDRESSABLE, \n+\tLANG_HOOKS_PARSE_FILE, LANG_HOOKS_TRUTHVALUE_CONVERSION,\n+\tLANG_HOOKS_FINISH_INCOMPLETE_DECL, LANG_HOOKS_UNSAFE_FOR_REEVAL,\n+\tLANG_HOOKS_STATICP, LANG_HOOKS_SET_DECL_ASSEMBLER_NAME, \n+\tLANG_HOOKS_NO_BODY_BLOCKS, LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL,\n+\tLANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_FUNCTION_ENTER_NESTED,\n+\tLANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_DUP_LANG_SPECIFIC_DECL,\n+\tLANG_HOOKS_DECL_UNINIT, LANG_HOOKS_RTL_EXPAND_STMT,\n+\tLANG_HOOKS_COMMON_ATTRIBUTE_TABLE, LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE,\n+\tLANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN,\n+\tLANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS,\n+\tLANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P,\n+\tLANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING,\n+\tLANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS,\n+\tLANG_HOOKS_TREE_DUMP_DUMP_TREE_FN,\n+\tLANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION, LANG_HOOKS_TYPE_FOR_MODE,\n+\tLANG_HOOKS_TYPE_FOR_SIZE, LANG_HOOKS_SIGNED_TYPE,\n+\tLANG_HOOKS_UNSIGNED_TYPE, LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE,\n+\tLANG_HOOKS_INCOMPLETE_TYPE_ERROR, LANG_HOOKS_TYPE_PROMOTES_TO,\n+\tLANG_HOOKS_REGISTER_BUILTIN_TYPE, LANG_HOOKS_WRITE_GLOBALS):\n+\tMove to c-objc-common.h.\n+\t* c-objc-common.c: Include c-objc-common.h.\n+\t* c-objc-common.h: New file.\n+\n 2004-08-15  Andreas Tobler  <a.tobler@schweiz.ch>\n \t    Andrew Pinski  <pinskia@physics.uc.edu>\n "}, {"sha": "6f54478a5472762d46a9efd58bd7c8aaf9319119", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -729,7 +729,7 @@ TREE_FLOW_H = tree-flow.h tree-flow-inline.h tree-ssa-operands.h \\\n TREE_SSA_LIVE_H = tree-ssa-live.h $(PARTITION_H)\n PRETTY_PRINT_H = pretty-print.h input.h $(OBSTACK_H)\n DIAGNOSTIC_H = diagnostic.h diagnostic.def $(PRETTY_PRINT_H)\n-C_PRETTY_PRINT_H = $(PRETTY_PRINT_H) $(C_COMMON_H) $(TREE_H)\n+C_PRETTY_PRINT_H = c-pretty-print.h $(PRETTY_PRINT_H) $(C_COMMON_H) $(TREE_H)\n SCEV_H = tree-scalar-evolution.h $(GGC_H) tree-chrec.h\n \n #\f\n@@ -1371,7 +1371,8 @@ c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(\n     langhooks.h\n c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) $(C_PRETTY_PRINT_H) $(DIAGNOSTIC_H) \\\n-    $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h\n+    $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h \\\n+    c-objc-common.h\n stub-objc.o : stub-objc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n     $(GGC_H) $(C_COMMON_H)\n c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n@@ -1381,9 +1382,9 @@ c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n c-ppoutput.o : c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(C_COMMON_H) $(TREE_H) $(CPPLIB_H) $(srcdir)/../libcpp/internal.h $(TM_P_H) $(C_PRAGMA_H)\n c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(C_TREE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) $(EXPR_H) $(C_TREE_H) \\\n+    $(C_TREE_H) $(RTL_H) insn-config.h $(INTEGRATE_H) $(EXPR_H) \\\n     $(FLAGS_H) toplev.h tree-inline.h $(DIAGNOSTIC_H) $(VARRAY_H) \\\n-    langhooks.h $(GGC_H) $(TARGET_H) cgraph.h\n+    langhooks.h $(GGC_H) $(TARGET_H) cgraph.h $(C_PRETTY_PRINT_H) c-objc-common.h\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) $(FLAGS_H) toplev.h\n c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\"}, {"sha": "af4932a83ced2fb5de7364d087fb7c2ad9a1b16f", "filename": "gcc/c-lang.c", "status": "modified", "additions": 4, "deletions": 106, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -33,123 +33,21 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tree-inline.h\"\n #include \"diagnostic.h\"\n #include \"c-pretty-print.h\"\n+#include \"c-objc-common.h\"\n \n enum c_language_kind c_language = clk_c;\n \n-/* ### When changing hooks, consider if ObjC needs changing too!! ### */\n+/* Lang hooks common to C and ObjC are declared in c-objc-common.h;\n+   consequently, there should be very few hooks below.  */\n \n #undef LANG_HOOKS_NAME\n #define LANG_HOOKS_NAME \"GNU C\"\n-#undef LANG_HOOKS_IDENTIFIER_SIZE\n-#define LANG_HOOKS_IDENTIFIER_SIZE C_SIZEOF_STRUCT_LANG_IDENTIFIER\n #undef LANG_HOOKS_INIT\n #define LANG_HOOKS_INIT c_objc_common_init\n-#undef LANG_HOOKS_FINISH\n-#define LANG_HOOKS_FINISH c_common_finish\n-#undef LANG_HOOKS_INIT_OPTIONS\n-#define LANG_HOOKS_INIT_OPTIONS c_common_init_options\n-#undef LANG_HOOKS_INITIALIZE_DIAGNOSTICS\n-#define LANG_HOOKS_INITIALIZE_DIAGNOSTICS c_initialize_diagnostics\n-#undef LANG_HOOKS_HANDLE_OPTION\n-#define LANG_HOOKS_HANDLE_OPTION c_common_handle_option\n-#undef LANG_HOOKS_MISSING_ARGUMENT\n-#define LANG_HOOKS_MISSING_ARGUMENT c_common_missing_argument\n-#undef LANG_HOOKS_POST_OPTIONS\n-#define LANG_HOOKS_POST_OPTIONS c_common_post_options\n-#undef LANG_HOOKS_GET_ALIAS_SET\n-#define LANG_HOOKS_GET_ALIAS_SET c_common_get_alias_set\n-#undef LANG_HOOKS_EXPAND_EXPR\n-#define LANG_HOOKS_EXPAND_EXPR c_expand_expr\n-#undef LANG_HOOKS_EXPAND_DECL\n-#define LANG_HOOKS_EXPAND_DECL c_expand_decl\n-#undef LANG_HOOKS_MARK_ADDRESSABLE\n-#define LANG_HOOKS_MARK_ADDRESSABLE c_mark_addressable\n-#undef LANG_HOOKS_PARSE_FILE\n-#define LANG_HOOKS_PARSE_FILE c_common_parse_file\n-#undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n-#define LANG_HOOKS_TRUTHVALUE_CONVERSION c_objc_common_truthvalue_conversion\n-#undef LANG_HOOKS_FINISH_INCOMPLETE_DECL\n-#define LANG_HOOKS_FINISH_INCOMPLETE_DECL c_finish_incomplete_decl\n-#undef LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS\n-#define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n-#undef LANG_HOOKS_STATICP\n-#define LANG_HOOKS_STATICP c_staticp\n-#undef LANG_HOOKS_NO_BODY_BLOCKS\n-#define LANG_HOOKS_NO_BODY_BLOCKS true\n-#undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL\n-#define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL c_warn_unused_global_decl\n-#undef LANG_HOOKS_PRINT_IDENTIFIER\n-#define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n-#undef LANG_HOOKS_FUNCTION_ENTER_NESTED\n-#define LANG_HOOKS_FUNCTION_ENTER_NESTED c_push_function_context\n-#undef LANG_HOOKS_FUNCTION_LEAVE_NESTED\n-#define LANG_HOOKS_FUNCTION_LEAVE_NESTED c_pop_function_context\n-#undef LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P\n-#define LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P c_missing_noreturn_ok_p\n-#undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n-#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL c_dup_lang_specific_decl\n-\n-/* Attribute hooks.  */\n-#undef LANG_HOOKS_COMMON_ATTRIBUTE_TABLE\n-#define LANG_HOOKS_COMMON_ATTRIBUTE_TABLE c_common_attribute_table\n-#undef LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE\n-#define LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE c_common_format_attribute_table\n-\n-#undef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n-#define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\\n-  c_cannot_inline_tree_fn\n-#undef LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS\n-#define LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS \\\n-  c_disregard_inline_limits\n-#undef LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P\n-#define LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P \\\n-  anon_aggr_type_p\n-#undef LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING\n-#define LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING \\\n-  c_convert_parm_for_inlining\n-#undef LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN\n-#define LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN c_dump_tree\n-\n-#undef LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION\n-#define LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION c_expand_body\n-\n-#undef LANG_HOOKS_TYPE_FOR_MODE\n-#define LANG_HOOKS_TYPE_FOR_MODE c_common_type_for_mode\n-#undef LANG_HOOKS_TYPE_FOR_SIZE\n-#define LANG_HOOKS_TYPE_FOR_SIZE c_common_type_for_size\n-#undef LANG_HOOKS_SIGNED_TYPE\n-#define LANG_HOOKS_SIGNED_TYPE c_common_signed_type\n-#undef LANG_HOOKS_UNSIGNED_TYPE\n-#define LANG_HOOKS_UNSIGNED_TYPE c_common_unsigned_type\n-#undef LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE\n-#define LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE c_common_signed_or_unsigned_type\n-#undef LANG_HOOKS_INCOMPLETE_TYPE_ERROR\n-#define LANG_HOOKS_INCOMPLETE_TYPE_ERROR c_incomplete_type_error\n-#undef LANG_HOOKS_TYPE_PROMOTES_TO\n-#define LANG_HOOKS_TYPE_PROMOTES_TO c_type_promotes_to\n-#undef LANG_HOOKS_REGISTER_BUILTIN_TYPE\n-#define LANG_HOOKS_REGISTER_BUILTIN_TYPE c_register_builtin_type\n-\n-/* The C front end's scoping structure is very different from\n-   that expected by the language-independent code; it is best\n-   to disable getdecls.\n-   This means it must also provide its own write_globals.  */\n-\n-#undef LANG_HOOKS_GETDECLS\n-#define LANG_HOOKS_GETDECLS lhd_return_null_tree_v\n-#undef LANG_HOOKS_WRITE_GLOBALS\n-#define LANG_HOOKS_WRITE_GLOBALS c_write_global_declarations\n-\n-/* Hooks for tree gimplification.  */\n-#undef LANG_HOOKS_GIMPLIFY_EXPR\n-#define LANG_HOOKS_GIMPLIFY_EXPR c_gimplify_expr\n-\n #undef LANG_HOOKS_TYPES_COMPATIBLE_P\n #define LANG_HOOKS_TYPES_COMPATIBLE_P c_types_compatible_p\n \n-/* ### When changing hooks, consider if ObjC needs changing too!! ### */\n-\n-/* Each front end provides its own.  */\n+/* Each front end provides its own lang hook initializer.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n /* Tree code classes.  */"}, {"sha": "a4bb683ca937ca0c9a1cfbddd088e6bed977dc8e", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -38,6 +38,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"langhooks.h\"\n #include \"tree-mudflap.h\"\n #include \"target.h\"\n+#include \"c-objc-common.h\"\n \n static bool c_tree_printer (pretty_printer *, text_info *);\n "}, {"sha": "48b22a19d2b1b3136bbc2b676846eda6e289b791", "filename": "gcc/c-objc-common.h", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fc-objc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fc-objc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.h?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -0,0 +1,133 @@\n+/* Language hooks common to C and ObjC front ends.\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Contributed by Ziemowit Laski  <zlaski@apple.com>\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 2, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to the Free\n+Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+02111-1307, USA.  */\n+\n+#ifndef GCC_C_OBJC_COMMON\n+#define GCC_C_OBJC_COMMON\n+\n+/* In c-objc-common.c.  */\n+extern void c_initialize_diagnostics (diagnostic_context *);\n+\n+/* Lang hooks that are shared between C and ObjC are defined here.  Hooks\n+   specific to C or ObjC go in c-lang.c and objc/objc-lang.c, respectively.  */\n+\n+#undef LANG_HOOKS_IDENTIFIER_SIZE\n+#define LANG_HOOKS_IDENTIFIER_SIZE C_SIZEOF_STRUCT_LANG_IDENTIFIER\n+#undef LANG_HOOKS_FINISH\n+#define LANG_HOOKS_FINISH c_common_finish\n+#undef LANG_HOOKS_INIT_OPTIONS\n+#define LANG_HOOKS_INIT_OPTIONS c_common_init_options\n+#undef LANG_HOOKS_INITIALIZE_DIAGNOSTICS\n+#define LANG_HOOKS_INITIALIZE_DIAGNOSTICS c_initialize_diagnostics\n+#undef LANG_HOOKS_HANDLE_OPTION\n+#define LANG_HOOKS_HANDLE_OPTION c_common_handle_option\n+#undef LANG_HOOKS_MISSING_ARGUMENT\n+#define LANG_HOOKS_MISSING_ARGUMENT c_common_missing_argument\n+#undef LANG_HOOKS_POST_OPTIONS\n+#define LANG_HOOKS_POST_OPTIONS c_common_post_options\n+#undef LANG_HOOKS_GET_ALIAS_SET\n+#define LANG_HOOKS_GET_ALIAS_SET c_common_get_alias_set\n+#undef LANG_HOOKS_EXPAND_EXPR\n+#define LANG_HOOKS_EXPAND_EXPR c_expand_expr\n+#undef LANG_HOOKS_EXPAND_DECL\n+#define LANG_HOOKS_EXPAND_DECL c_expand_decl\n+#undef LANG_HOOKS_MARK_ADDRESSABLE\n+#define LANG_HOOKS_MARK_ADDRESSABLE c_mark_addressable\n+#undef LANG_HOOKS_PARSE_FILE\n+#define LANG_HOOKS_PARSE_FILE c_common_parse_file\n+#undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n+#define LANG_HOOKS_TRUTHVALUE_CONVERSION c_objc_common_truthvalue_conversion\n+#undef LANG_HOOKS_FINISH_INCOMPLETE_DECL\n+#define LANG_HOOKS_FINISH_INCOMPLETE_DECL c_finish_incomplete_decl\n+#undef LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS\n+#define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n+#undef LANG_HOOKS_STATICP\n+#define LANG_HOOKS_STATICP c_staticp\n+#undef LANG_HOOKS_NO_BODY_BLOCKS\n+#define LANG_HOOKS_NO_BODY_BLOCKS true\n+#undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL\n+#define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL c_warn_unused_global_decl\n+#undef LANG_HOOKS_PRINT_IDENTIFIER\n+#define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n+#undef LANG_HOOKS_FUNCTION_ENTER_NESTED\n+#define LANG_HOOKS_FUNCTION_ENTER_NESTED c_push_function_context\n+#undef LANG_HOOKS_FUNCTION_LEAVE_NESTED\n+#define LANG_HOOKS_FUNCTION_LEAVE_NESTED c_pop_function_context\n+#undef LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P\n+#define LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P c_missing_noreturn_ok_p\n+#undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n+#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL c_dup_lang_specific_decl\n+\n+/* Attribute hooks.  */\n+#undef LANG_HOOKS_COMMON_ATTRIBUTE_TABLE\n+#define LANG_HOOKS_COMMON_ATTRIBUTE_TABLE c_common_attribute_table\n+#undef LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE\n+#define LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE c_common_format_attribute_table\n+\n+#undef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n+#define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\\n+  c_cannot_inline_tree_fn\n+#undef LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS\n+#define LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS \\\n+  c_disregard_inline_limits\n+#undef LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P\n+#define LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P \\\n+  anon_aggr_type_p\n+#undef LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING\n+#define LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING \\\n+  c_convert_parm_for_inlining\n+#undef LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN\n+#define LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN c_dump_tree\n+\n+#undef LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION\n+#define LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION c_expand_body\n+\n+#undef LANG_HOOKS_TYPE_FOR_MODE\n+#define LANG_HOOKS_TYPE_FOR_MODE c_common_type_for_mode\n+#undef LANG_HOOKS_TYPE_FOR_SIZE\n+#define LANG_HOOKS_TYPE_FOR_SIZE c_common_type_for_size\n+#undef LANG_HOOKS_SIGNED_TYPE\n+#define LANG_HOOKS_SIGNED_TYPE c_common_signed_type\n+#undef LANG_HOOKS_UNSIGNED_TYPE\n+#define LANG_HOOKS_UNSIGNED_TYPE c_common_unsigned_type\n+#undef LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE\n+#define LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE c_common_signed_or_unsigned_type\n+#undef LANG_HOOKS_INCOMPLETE_TYPE_ERROR\n+#define LANG_HOOKS_INCOMPLETE_TYPE_ERROR c_incomplete_type_error\n+#undef LANG_HOOKS_TYPE_PROMOTES_TO\n+#define LANG_HOOKS_TYPE_PROMOTES_TO c_type_promotes_to\n+#undef LANG_HOOKS_REGISTER_BUILTIN_TYPE\n+#define LANG_HOOKS_REGISTER_BUILTIN_TYPE c_register_builtin_type\n+\n+/* The C front end's scoping structure is very different from\n+   that expected by the language-independent code; it is best\n+   to disable getdecls.\n+   This means it must also provide its own write_globals.  */\n+\n+#undef LANG_HOOKS_GETDECLS\n+#define LANG_HOOKS_GETDECLS lhd_return_null_tree_v\n+#undef LANG_HOOKS_WRITE_GLOBALS\n+#define LANG_HOOKS_WRITE_GLOBALS c_write_global_declarations\n+\n+/* Hooks for tree gimplification.  */\n+#undef LANG_HOOKS_GIMPLIFY_EXPR\n+#define LANG_HOOKS_GIMPLIFY_EXPR c_gimplify_expr\n+\n+#endif /* GCC_C_OBJC_COMMON */"}, {"sha": "d9f42f9df9051d1e36a1394f957a7ab23023aa44", "filename": "gcc/objc/ChangeLog", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -0,0 +1,37 @@\n+2004-08-15  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* Make-lang.in (objc/objc-lang.o): Depend on $(C_PRETTY_PRINT_H),\n+\t$(DIAGNOSTIC_H), c-objc-common.h and gtype-objc.h, but not on toplev.h.\n+\t(objc/objc-parse.o): Do not depend on gtype-objc.h.\n+\t* objc-act.c: Do not include gtype-objc.h.\n+\t(finish_file): Rename to objc_finish_file().\n+\t* objc-act.h (finish_file): Update copyright notice; remove prototype.\n+\t* objc-lang.c: Update copyright notice; include diagnostic.h,\n+\tc-objc-common.h, c-pretty-print.h and gtype-objc.h; do not include\n+\ttoplev.h.\n+\t(finish_file): New hook routine.\n+\t(LANG_HOOKS_FINISH, LANG_HOOKS_INIT_OPTIONS,\n+\tLANG_HOOKS_INITIALIZE_DIAGNOSTICS, LANG_HOOKS_HANDLE_OPTION,\n+\tLANG_HOOKS_MISSING_ARGUMENT, LANG_HOOKS_POST_OPTIONS,\n+\tLANG_HOOKS_GET_ALIAS_SET, LANG_HOOKS_SAFE_FROM_P, \n+\tLANG_HOOKS_EXPAND_EXPR, LANG_HOOKS_MARK_ADDRESSABLE, \n+\tLANG_HOOKS_PARSE_FILE, LANG_HOOKS_TRUTHVALUE_CONVERSION,\n+\tLANG_HOOKS_FINISH_INCOMPLETE_DECL, LANG_HOOKS_UNSAFE_FOR_REEVAL,\n+\tLANG_HOOKS_STATICP, LANG_HOOKS_SET_DECL_ASSEMBLER_NAME, \n+\tLANG_HOOKS_NO_BODY_BLOCKS, LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL,\n+\tLANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_FUNCTION_ENTER_NESTED,\n+\tLANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_DUP_LANG_SPECIFIC_DECL,\n+\tLANG_HOOKS_DECL_UNINIT, LANG_HOOKS_RTL_EXPAND_STMT,\n+\tLANG_HOOKS_COMMON_ATTRIBUTE_TABLE, LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE,\n+\tLANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN,\n+\tLANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS,\n+\tLANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P,\n+\tLANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING,\n+\tLANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS,\n+\tLANG_HOOKS_TREE_DUMP_DUMP_TREE_FN,\n+\tLANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION, LANG_HOOKS_TYPE_FOR_MODE,\n+\tLANG_HOOKS_TYPE_FOR_SIZE, LANG_HOOKS_SIGNED_TYPE,\n+\tLANG_HOOKS_UNSIGNED_TYPE, LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE,\n+\tLANG_HOOKS_INCOMPLETE_TYPE_ERROR, LANG_HOOKS_TYPE_PROMOTES_TO,\n+\tLANG_HOOKS_REGISTER_BUILTIN_TYPE, LANG_HOOKS_WRITE_GLOBALS):\n+\tMove to c-objc-common.h."}, {"sha": "a6d93b208d128811be91036dc26ff32c811160c9", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -59,8 +59,10 @@ cc1obj$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) $(BACKEND) $(LIBDEPS)\n # Objective C language specific files.\n \n objc/objc-lang.o : objc/objc-lang.c \\\n-   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) c-tree.h \\\n-   c-common.h toplev.h objc/objc-act.h langhooks.h $(LANGHOOKS_DEF_H)\n+   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(C_TREE_H) $(C_PRETTY_PRINT_H) $(DIAGNOSTIC_H) \\\n+   $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-objc.h \\\n+   c-objc-common.h objc/objc-act.h\n \n objc/objc-parse.o : objc/objc-parse.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n@@ -71,7 +73,7 @@ objc/objc-act.o : objc/objc-act.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) \\\n    $(EXPR_H) $(TARGET_H) $(C_TREE_H) diagnostic.h toplev.h flags.h \\\n    objc/objc-act.h input.h function.h output.h debug.h langhooks.h \\\n-   $(LANGHOOKS_DEF_H) gt-objc-objc-act.h gtype-objc.h\n+   $(LANGHOOKS_DEF_H) gt-objc-objc-act.h\n \n objc.srcextra: objc/objc-parse.c objc/objc-parse.y\n \t-cp -p $^ $(srcdir)/objc"}, {"sha": "a97ca68d50feeb6179c4b5861fd11894e59c751a", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -516,7 +516,7 @@ objc_init (void)\n }\n \n void\n-finish_file (void)\n+objc_finish_file (void)\n {\n   mark_referenced_methods ();\n \n@@ -9086,4 +9086,3 @@ lookup_objc_ivar (tree id)\n }\n \n #include \"gt-objc-objc-act.h\"\n-#include \"gtype-objc.h\""}, {"sha": "eb324b9c52070a68a47e9360626725d4ee0cb960", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -1,5 +1,5 @@\n /* Declarations for objc-act.c.\n-   Copyright (C) 1990, 2000, 2001, 2002, 2003\n+   Copyright (C) 1990, 2000, 2001, 2002, 2003, 2004\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -22,14 +22,14 @@ Boston, MA 02111-1307, USA.  */\n #ifndef GCC_OBJC_ACT_H\n #define GCC_OBJC_ACT_H\n \n-/*** Public Interface (procedures) ***/\n+/*** Language hooks ***/\n \n bool objc_init (void);\n const char *objc_printable_name (tree, int);\n+void objc_finish_file (void);\n \n /* used by yyparse */\n \n-void finish_file (void);\n tree start_class (enum tree_code, tree, tree, tree);\n tree continue_class (tree);\n void finish_class (tree);"}, {"sha": "0b657725306d8abd2718ef744a6b975b8c42e9c9", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 20, "deletions": 104, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4d6480b8ef0b589169e0906154fc164b3a267c/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=9a4d6480b8ef0b589169e0906154fc164b3a267c", "patch": "@@ -26,123 +26,28 @@ Boston, MA 02111-1307, USA.  */\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"c-common.h\"\n-#include \"toplev.h\"\n+#include \"ggc.h\"\n #include \"objc-act.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n+#include \"diagnostic.h\"\n+#include \"c-pretty-print.h\"\n+#include \"c-objc-common.h\"\n \n enum c_language_kind c_language = clk_objc;\n \n+/* Lang hooks common to C and ObjC are declared in c-objc-common.h;\n+   consequently, there should be very few hooks below.  */\n+\n #undef LANG_HOOKS_NAME\n #define LANG_HOOKS_NAME \"GNU Objective-C\"\n-#undef LANG_HOOKS_IDENTIFIER_SIZE\n-#define LANG_HOOKS_IDENTIFIER_SIZE C_SIZEOF_STRUCT_LANG_IDENTIFIER\n #undef LANG_HOOKS_INIT\n #define LANG_HOOKS_INIT objc_init\n-#undef LANG_HOOKS_FINISH\n-#define LANG_HOOKS_FINISH c_common_finish\n-#undef LANG_HOOKS_INIT_OPTIONS\n-#define LANG_HOOKS_INIT_OPTIONS c_common_init_options\n-#undef LANG_HOOKS_INITIALIZE_DIAGNOSTICS\n-#define LANG_HOOKS_INITIALIZE_DIAGNOSTICS c_initialize_diagnostics\n-#undef LANG_HOOKS_HANDLE_OPTION\n-#define LANG_HOOKS_HANDLE_OPTION c_common_handle_option\n-#undef LANG_HOOKS_HANDLE_FILENAME\n-#define LANG_HOOKS_HANDLE_FILENAME c_common_handle_filename\n-#undef LANG_HOOKS_MISSING_ARGUMENT\n-#define LANG_HOOKS_MISSING_ARGUMENT c_common_missing_argument\n-#undef LANG_HOOKS_POST_OPTIONS\n-#define LANG_HOOKS_POST_OPTIONS c_common_post_options\n-#undef LANG_HOOKS_GET_ALIAS_SET\n-#define LANG_HOOKS_GET_ALIAS_SET c_common_get_alias_set\n-#undef LANG_HOOKS_PARSE_FILE\n-#define LANG_HOOKS_PARSE_FILE c_common_parse_file\n-#undef LANG_HOOKS_EXPAND_EXPR\n-#define LANG_HOOKS_EXPAND_EXPR c_expand_expr\n-#undef LANG_HOOKS_EXPAND_DECL\n-#define LANG_HOOKS_EXPAND_DECL c_expand_decl\n-#undef LANG_HOOKS_MARK_ADDRESSABLE\n-#define LANG_HOOKS_MARK_ADDRESSABLE c_mark_addressable\n-#undef LANG_HOOKS_TRUTHVALUE_CONVERSION\n-#define LANG_HOOKS_TRUTHVALUE_CONVERSION c_objc_common_truthvalue_conversion\n-#undef LANG_HOOKS_FINISH_INCOMPLETE_DECL\n-#define LANG_HOOKS_FINISH_INCOMPLETE_DECL c_finish_incomplete_decl\n-#undef LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS\n-#define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n-#undef LANG_HOOKS_STATICP\n-#define LANG_HOOKS_STATICP c_staticp\n-#undef LANG_HOOKS_NO_BODY_BLOCKS\n-#define LANG_HOOKS_NO_BODY_BLOCKS true\n-#undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n-#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL c_dup_lang_specific_decl\n-#undef LANG_HOOKS_PRINT_IDENTIFIER\n-#define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n #undef LANG_HOOKS_DECL_PRINTABLE_NAME\n #define LANG_HOOKS_DECL_PRINTABLE_NAME objc_printable_name\n-#undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL\n-#define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL c_warn_unused_global_decl\n-\n-#undef LANG_HOOKS_FUNCTION_ENTER_NESTED\n-#define LANG_HOOKS_FUNCTION_ENTER_NESTED c_push_function_context\n-#undef LANG_HOOKS_FUNCTION_LEAVE_NESTED\n-#define LANG_HOOKS_FUNCTION_LEAVE_NESTED c_pop_function_context\n-#undef LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P\n-#define LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P c_missing_noreturn_ok_p\n-\n-/* Attribute hooks.  */\n-#undef LANG_HOOKS_COMMON_ATTRIBUTE_TABLE\n-#define LANG_HOOKS_COMMON_ATTRIBUTE_TABLE c_common_attribute_table\n-#undef LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE\n-#define LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE c_common_format_attribute_table\n-\n-/* Inlining hooks same as the C front end.  */\n-#undef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n-#define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\\n-  c_cannot_inline_tree_fn\n-#undef LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS\n-#define LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS \\\n-  c_disregard_inline_limits\n-#undef LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P\n-#define LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P \\\n-  anon_aggr_type_p\n-#undef LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING\n-#define LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING \\\n-  c_convert_parm_for_inlining\n-\n-#undef LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION\n-#define LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION c_expand_body\n-\n-#undef LANG_HOOKS_TYPE_FOR_MODE\n-#define LANG_HOOKS_TYPE_FOR_MODE c_common_type_for_mode\n-#undef LANG_HOOKS_TYPE_FOR_SIZE\n-#define LANG_HOOKS_TYPE_FOR_SIZE c_common_type_for_size\n-#undef LANG_HOOKS_SIGNED_TYPE\n-#define LANG_HOOKS_SIGNED_TYPE c_common_signed_type\n-#undef LANG_HOOKS_UNSIGNED_TYPE\n-#define LANG_HOOKS_UNSIGNED_TYPE c_common_unsigned_type\n-#undef LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE\n-#define LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE c_common_signed_or_unsigned_type\n-#undef LANG_HOOKS_INCOMPLETE_TYPE_ERROR\n-#define LANG_HOOKS_INCOMPLETE_TYPE_ERROR c_incomplete_type_error\n-#undef LANG_HOOKS_TYPE_PROMOTES_TO\n-#define LANG_HOOKS_TYPE_PROMOTES_TO c_type_promotes_to\n-#undef  LANG_HOOKS_GIMPLIFY_EXPR\n-#define LANG_HOOKS_GIMPLIFY_EXPR c_gimplify_expr\n-\n-/* The C front end's scoping structure is very different from\n-   that expected by the language-independent code; it is best\n-   to disable getdecls.\n-   This means it must also provide its own write_globals.  */\n-\n-#undef LANG_HOOKS_GETDECLS\n-#define LANG_HOOKS_GETDECLS lhd_return_null_tree_v\n-#undef LANG_HOOKS_WRITE_GLOBALS\n-#define LANG_HOOKS_WRITE_GLOBALS c_write_global_declarations\n-\n-/* Each front end provides its own hooks, for toplev.c.  */\n-const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n-/* Define the special tree codes that we use.  */\n+/* Each front end provides its own lang hook initializer.  */\n+const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n /* Table indexed by tree code giving a string containing a character\n    classifying the tree code.  */\n@@ -185,3 +90,14 @@ const char * const tree_code_name[] = {\n #include \"objc-tree.def\"\n };\n #undef DEFTREECODE\n+\n+/* Lang hook routines common to C and ObjC appear in c-objc-common.c;\n+   there should be very few (if any) routines below.  */\n+\n+void\n+finish_file (void)\n+{\n+  objc_finish_file ();\n+}\n+\n+#include \"gtype-objc.h\""}]}