{"sha": "4930c53ee69f18a6fd689527864d419ce0333e7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkzMGM1M2VlNjlmMThhNmZkNjg5NTI3ODY0ZDQxOWNlMDMzM2U3YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-04-12T20:02:47Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-04-12T20:02:47Z"}, "message": "re PR c++/85258 (ICE with invalid range-based for-loop)\n\n\tPR c++/85258\n\t* constexpr.c (reduced_constant_expression_p): Return false for null\n\ttrees.\n\n\t* g++.dg/parse/error61.C: New test.\n\nFrom-SVN: r259355", "tree": {"sha": "2ce0c031a7622545758ae62e0e2977a0ff82f60a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ce0c031a7622545758ae62e0e2977a0ff82f60a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4930c53ee69f18a6fd689527864d419ce0333e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4930c53ee69f18a6fd689527864d419ce0333e7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4930c53ee69f18a6fd689527864d419ce0333e7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4930c53ee69f18a6fd689527864d419ce0333e7a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed086e7e0a9f56c0e6f20236fb3cf2c64c4b4b71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed086e7e0a9f56c0e6f20236fb3cf2c64c4b4b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed086e7e0a9f56c0e6f20236fb3cf2c64c4b4b71"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "e3bc2d9b36e93fb130d64c9e4734ebdf5c502cde", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4930c53ee69f18a6fd689527864d419ce0333e7a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4930c53ee69f18a6fd689527864d419ce0333e7a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4930c53ee69f18a6fd689527864d419ce0333e7a", "patch": "@@ -1,3 +1,9 @@\n+2018-04-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/85258\n+\t* constexpr.c (reduced_constant_expression_p): Return false for null\n+\ttrees.\n+\n 2018-04-11  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/85032"}, {"sha": "82f14baaefde1be1e8dfadf54d5ec159b2a5370c", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4930c53ee69f18a6fd689527864d419ce0333e7a/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4930c53ee69f18a6fd689527864d419ce0333e7a/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=4930c53ee69f18a6fd689527864d419ce0333e7a", "patch": "@@ -1773,6 +1773,9 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n bool\n reduced_constant_expression_p (tree t)\n {\n+  if (t == NULL_TREE)\n+    return false;\n+\n   switch (TREE_CODE (t))\n     {\n     case PTRMEM_CST:\n@@ -1794,9 +1797,8 @@ reduced_constant_expression_p (tree t)\n \tfield = NULL_TREE;\n       FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (t), i, idx, val)\n \t{\n-\t  if (!val)\n-\t    /* We're in the middle of initializing this element.  */\n-\t    return false;\n+\t  /* If VAL is null, we're in the middle of initializing this\n+\t     element.  */\n \t  if (!reduced_constant_expression_p (val))\n \t    return false;\n \t  if (field)"}, {"sha": "73a358e6c1f9e139e622a9a541c232bcd983b1c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4930c53ee69f18a6fd689527864d419ce0333e7a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4930c53ee69f18a6fd689527864d419ce0333e7a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4930c53ee69f18a6fd689527864d419ce0333e7a", "patch": "@@ -1,3 +1,8 @@\n+2018-04-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/85258\n+\t* g++.dg/parse/error61.C: New test.\n+\n 2018-04-12  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c-c++-common/pr84955.c: Revert 259346."}, {"sha": "199e1aa721cfa19579f64b0684eebe88f3133510", "filename": "gcc/testsuite/g++.dg/parse/error61.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4930c53ee69f18a6fd689527864d419ce0333e7a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4930c53ee69f18a6fd689527864d419ce0333e7a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror61.C?ref=4930c53ee69f18a6fd689527864d419ce0333e7a", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/85258\n+// { dg-do compile { target c++11 } }\n+\n+template<int> void foo()\n+{\n+  int x[8];\n+  for (int& i, j : x) // { dg-error \"multiple\" }\n+    i = 0; // { dg-error \"local variable\" }\n+}\n+\n+void bar()\n+{\n+  foo<0>();\n+}"}]}