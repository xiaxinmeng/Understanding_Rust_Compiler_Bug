{"sha": "851ef03661397f78874d792ed893edf3b7ab4e54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUxZWYwMzY2MTM5N2Y3ODg3NGQ3OTJlZDg5M2VkZjNiN2FiNGU1NA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2000-12-18T10:16:26Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-12-18T10:16:26Z"}, "message": "c-lex.c (lex_lineno): Remove.\n\n        * c-lex.c (lex_lineno): Remove.\n        (init_c_lex, c_lex): Remove lex_lineno.\n        (cb_change_file): Update lineno correctly, both before calling\n        push_srcloc and before leaving the function.\n        (cb_def_pragma): Set lineno before outputting diagnostics.\n\nFrom-SVN: r38342", "tree": {"sha": "db463bd414e6865727f94ef194e4996997ab798e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db463bd414e6865727f94ef194e4996997ab798e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/851ef03661397f78874d792ed893edf3b7ab4e54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/851ef03661397f78874d792ed893edf3b7ab4e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/851ef03661397f78874d792ed893edf3b7ab4e54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/851ef03661397f78874d792ed893edf3b7ab4e54/comments", "author": null, "committer": null, "parents": [{"sha": "33ba48b6193690abc1e9ea10f2637240332613bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ba48b6193690abc1e9ea10f2637240332613bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33ba48b6193690abc1e9ea10f2637240332613bf"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "98711ba050063102ea27f2262c17de989c1b5831", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851ef03661397f78874d792ed893edf3b7ab4e54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851ef03661397f78874d792ed893edf3b7ab4e54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=851ef03661397f78874d792ed893edf3b7ab4e54", "patch": "@@ -1,3 +1,11 @@\n+2000-12-18  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * c-lex.c (lex_lineno): Remove.\n+        (init_c_lex, c_lex): Remove lex_lineno.\n+        (cb_change_file): Update lineno correctly, both before calling\n+        push_srcloc and before leaving the function.\n+        (cb_def_pragma): Set lineno before outputting diagnostics.\n+\n Sun Dec 17 18:45:41 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* print-tree.c (print_node): Print DECL_USER_ALIGN and TYPE_USER_ALIGN."}, {"sha": "072aee74be5f3cb58c8066fadb13d843572eec15", "filename": "gcc/c-lex.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851ef03661397f78874d792ed893edf3b7ab4e54/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851ef03661397f78874d792ed893edf3b7ab4e54/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=851ef03661397f78874d792ed893edf3b7ab4e54", "patch": "@@ -56,9 +56,6 @@ Boston, MA 02111-1307, USA.  */\n /* The original file name, before changing \"-\" to \"stdin\".  */\n static const char *orig_filename;\n \n-/* Private idea of the line number.  See discussion in c_lex().  */\n-static int lex_lineno;\n-\n /* We may keep statistics about how long which files took to compile.  */\n static int header_time, body_time;\n static splay_tree file_info_tree;\n@@ -129,9 +126,8 @@ init_c_lex (filename)\n   if (filename == 0 || !strcmp (filename, \"-\"))\n     filename = \"stdin\";\n \n-  /* Start it at 0, because check_newline is called at the very beginning\n-     and will increment it to 1.  */\n-  lineno = lex_lineno = 0;\n+  /* Start it at 0.  */\n+  lineno = 0;\n \n   return filename;\n }\n@@ -240,7 +236,7 @@ cb_change_file (pfile, fc)\n       /* Don't stack the main buffer on the input stack.  */\n       if (fc->from.filename)\n \t{\n-\t  lineno = lex_lineno;\n+\t  lineno = fc->from.lineno;\n \t  push_srcloc (fc->to.filename, 1);\n \t  input_file_stack->indent_level = indent_level;\n \t  debug_start_source_file (fc->to.filename);\n@@ -290,7 +286,7 @@ cb_change_file (pfile, fc)\n   update_header_times (fc->to.filename);\n   in_system_header = fc->sysp;\n   input_filename = fc->to.filename;\n-  lex_lineno = fc->to.lineno;\n+  lineno = fc->to.lineno;\t/* Do we need this?  */\n \n   /* Hook for C++.  */\n   extract_interface_info ();\n@@ -314,6 +310,7 @@ cb_def_pragma (pfile)\n       if (s.type == CPP_NAME)\n \tname = cpp_token_as_text (pfile, &s);\n \n+      lineno = cpp_get_line (parse_in)->line;\n       if (name)\n \twarning (\"ignoring #pragma %s %s\", space, name);\n       else\n@@ -950,10 +947,9 @@ c_lex (value)\n   /* The C++ front end does horrible things with the current line\n      number.  To ensure an accurate line number, we must reset it\n      every time we return a token.  */\n-  lex_lineno = cpp_get_line (parse_in)->line;\n+  lineno = cpp_get_line (parse_in)->line;\n \n   *value = NULL_TREE;\n-  lineno = lex_lineno;\n   type = tok.type;\n   switch (type)\n     {"}]}