{"sha": "f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRlNzM3NWE4YTE2N2U5OGRlMDVmMmYwYjM0YThmZDZmNTdlMGE5Ng==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-02-28T00:38:12Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-02-28T00:38:12Z"}, "message": "re PR fortran/20058 (Error on kind 16 hex data statement)\n\nPR fortran/20058\n* trans-types.c (gfc_max_integer_kind): Declare\n  (gfc_init_kinds): Initialize it.\n* gfortran.h (gfc_max_integer_kind): extern it.\n* primary.c (match_boz_constant): Use it; remove gfortran extension\n  of kind suffixes on BOZ literal constants\n\nFrom-SVN: r95643", "tree": {"sha": "cbc3880b0e8c64b79072dbafe871b8a955a65bf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbc3880b0e8c64b79072dbafe871b8a955a65bf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/comments", "author": null, "committer": null, "parents": [{"sha": "c7861585d36aca4c53aa894661e9c46013665d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7861585d36aca4c53aa894661e9c46013665d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7861585d36aca4c53aa894661e9c46013665d34"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "47211b86d20d4083a4e64c8fc5304a306f90003c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96", "patch": "@@ -1,3 +1,13 @@\n+2005-02-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/20058\n+\t* trans-types.c (gfc_max_integer_kind): Declare\n+\t(gfc_init_kinds): Initialize it.\n+\t* gfortran.h (gfc_max_integer_kind): extern it.\n+\t* primary.c (match_boz_constant): Use it; remove gfortran extension\n+\tof kind suffixes on BOZ literal constants\n+\n+\n 2005-02-27  Steven G. Kargl  <kargls@comcast.net>\n \n \t* arith.c (gfc_check_real_range):  Remove multiple returns"}, {"sha": "58efec944fb615b86a5c555ef69999b9b3614ddf", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96", "patch": "@@ -1556,6 +1556,7 @@ void gfc_arith_done_1 (void);\n int gfc_validate_kind (bt, int, bool);\n extern int gfc_index_integer_kind;\n extern int gfc_default_integer_kind;\n+extern int gfc_max_integer_kind;\n extern int gfc_default_real_kind;\n extern int gfc_default_double_kind;\n extern int gfc_default_character_kind;"}, {"sha": "b87d72a1830ae265b3a9ea85031ac15c1d000fa9", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96", "patch": "@@ -300,17 +300,15 @@ match_boz_constant (gfc_expr ** result)\n   match_digits (0, radix, buffer);\n   gfc_next_char ();  /* Eat delimiter.  */\n \n-  kind = get_kind ();\n-  if (kind == -1)\n-    return MATCH_ERROR;\n-  if (kind == -2)\n-    kind = gfc_default_integer_kind;\n-  else if (pedantic \n-\t   && (gfc_notify_std (GFC_STD_GNU, \"Extension: Kind parameter \"\n-\t\t\t       \"suffix to boz literal constant at %C.\")\n-\t       == FAILURE))\n-    return MATCH_ERROR;\n \n+  /* In section 5.2.5 and following C567 in the Fortran 2003 standard, we find\n+     \"If a data-stmt-constant is a boz-literal-constant, the corresponding\n+     variable shall be of type integer.  The boz-literal-constant is treated\n+     as if it were an int-literal-constant with a kind-param that specifies\n+     the representation method with the largest decimal exponent range\n+     supported by the processor.\"  */\n+\n+  kind = gfc_max_integer_kind;\n   e = gfc_convert_integer (buffer, kind, radix, &gfc_current_locus);\n \n   if (gfc_range_check (e) != ARITH_OK)"}, {"sha": "3ac068c0f115db0d17d474d686aa782994b80d6c", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=f4e7375a8a167e98de05f2f0b34a8fd6f57e0a96", "patch": "@@ -81,6 +81,7 @@ int gfc_index_integer_kind;\n /* The default kinds of the various types.  */\n \n int gfc_default_integer_kind;\n+int gfc_max_integer_kind;\n int gfc_default_real_kind;\n int gfc_default_double_kind;\n int gfc_default_character_kind;\n@@ -135,6 +136,9 @@ gfc_init_kinds (void)\n       i_index += 1;\n     }\n \n+  /* Set the maximum integer kind.  Used with at least BOZ constants.  */\n+  gfc_max_integer_kind = gfc_integer_kinds[i_index - 1].kind;\n+\n   for (r_index = 0, mode = MIN_MODE_FLOAT; mode <= MAX_MODE_FLOAT; mode++)\n     {\n       const struct real_format *fmt = REAL_MODE_FORMAT (mode);"}]}