{"sha": "bc9150d3354d869a668b18fa6e29ae575aaac5e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5MTUwZDMzNTRkODY5YTY2OGIxOGZhNmUyOWFlNTc1YWFhYzVlOA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-04-11T01:57:05Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-04-11T01:57:05Z"}, "message": "verify.cc (pop64): Removed.\n\n\t* verify.cc (pop64): Removed.\n\t(verify_instructions_0) <op_pop2>: Inline code.  Don't throw\n\texception if top-of-stack is narrow.\n\t(initialize_stack): Check to ensure that <init> is not static and\n\t<clinit> is.\n\nFrom-SVN: r65453", "tree": {"sha": "db48dc2c7d649aaa27bf51aacd0d1e699cf33b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db48dc2c7d649aaa27bf51aacd0d1e699cf33b3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc9150d3354d869a668b18fa6e29ae575aaac5e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9150d3354d869a668b18fa6e29ae575aaac5e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc9150d3354d869a668b18fa6e29ae575aaac5e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9150d3354d869a668b18fa6e29ae575aaac5e8/comments", "author": null, "committer": null, "parents": [{"sha": "06790e5fd57528a3ee2822d392ff918c1c49abb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06790e5fd57528a3ee2822d392ff918c1c49abb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06790e5fd57528a3ee2822d392ff918c1c49abb7"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "d4403ef6ad4ec19116e1dfc0a36146dd76f471d6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9150d3354d869a668b18fa6e29ae575aaac5e8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9150d3354d869a668b18fa6e29ae575aaac5e8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bc9150d3354d869a668b18fa6e29ae575aaac5e8", "patch": "@@ -1,3 +1,11 @@\n+2003-04-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* verify.cc (pop64): Removed.\n+\t(verify_instructions_0) <op_pop2>: Inline code.  Don't throw\n+\texception if top-of-stack is narrow.\n+\t(initialize_stack): Check to ensure that <init> is not static and\n+\t<clinit> is.\n+\n 2003-04-07  Aaron M. Renn (arenn@urbanophile.com)\n \n \t* java/io/ObjectStreamException"}, {"sha": "4a6ca45884965e5db7fda5cfae64a733d797ed5e", "filename": "libjava/verify.cc", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9150d3354d869a668b18fa6e29ae575aaac5e8/libjava%2Fverify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9150d3354d869a668b18fa6e29ae575aaac5e8/libjava%2Fverify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fverify.cc?ref=bc9150d3354d869a668b18fa6e29ae575aaac5e8", "patch": "@@ -1202,14 +1202,6 @@ class _Jv_BytecodeVerifier\n     return r;\n   }\n \n-  type pop64 ()\n-  {\n-    type r = pop_raw ();\n-    if (! r.iswide ())\n-      verify_fail (\"wide pop of narrow type\");\n-    return r;\n-  }\n-\n   type pop_type (type match)\n   {\n     match.promote ();\n@@ -2160,21 +2152,31 @@ class _Jv_BytecodeVerifier\n   bool initialize_stack ()\n   {\n     int var = 0;\n-    bool is_init = false;\n+    bool is_init = _Jv_equalUtf8Consts (current_method->self->name,\n+\t\t\t\t\tgcj::init_name);\n+    bool is_clinit = _Jv_equalUtf8Consts (current_method->self->name,\n+\t\t\t\t\t  gcj::clinit_name);\n \n     using namespace java::lang::reflect;\n     if (! Modifier::isStatic (current_method->self->accflags))\n       {\n \ttype kurr (current_class);\n-\tif (_Jv_equalUtf8Consts (current_method->self->name, gcj::init_name))\n+\tif (is_init)\n \t  {\n \t    kurr.set_uninitialized (type::SELF, this);\n \t    is_init = true;\n \t  }\n+\telse if (is_clinit)\n+\t  verify_fail (\"<clinit> method must be static\");\n \tset_variable (0, kurr);\n \tcurrent_state->set_this_type (kurr);\n \t++var;\n       }\n+    else\n+      {\n+\tif (is_init)\n+\t  verify_fail (\"<init> method must be non-static\");\n+      }\n \n     // We have to handle wide arguments specially here.\n     int arg_count = _Jv_count_arguments (current_method->self->signature);\n@@ -2525,7 +2527,11 @@ class _Jv_BytecodeVerifier\n \t    pop32 ();\n \t    break;\n \t  case op_pop2:\n-\t    pop64 ();\n+\t    {\n+\t      type t = pop_raw ();\n+\t      if (! t.iswide ())\n+\t\tpop32 ();\n+\t    }\n \t    break;\n \t  case op_dup:\n \t    {"}]}