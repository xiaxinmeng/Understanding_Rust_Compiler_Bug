{"sha": "91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkOGI0YmQ3YWQ2YWNkMzkwN2NiYTIzNDZjNzBjMTAxYzc5M2U5Zg==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-04-13T15:09:26Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-04-13T15:09:26Z"}, "message": "re PR c++/48574 (ICE)\n\nFix PR c++/48574\n\ngcc/cp/\n\n\t* class.c (fixed_type_or_null): We cannot determine the dynamic\n\ttype of a reference variable if its initializer is dependent.\n\ngcc/testsuite/\n\n\t* g++.dg/template/dependent-expr7.C: New test case.\n\nFrom-SVN: r172375", "tree": {"sha": "bfeedb41882a7eec47bc8d8ba31f40acaea8054e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfeedb41882a7eec47bc8d8ba31f40acaea8054e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/comments", "author": null, "committer": null, "parents": [{"sha": "ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9c349ec817c21ef7a72455a240cdc8f2c4926d"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "3745e1a1b71369bc4ec3985886061a5cd2774ecb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "patch": "@@ -1,3 +1,9 @@\n+2011-04-13  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/48574\n+\t* class.c (fixed_type_or_null): We cannot determine the dynamic\n+    \ttype of a reference variable if its initializer is dependent.\n+\n 2011-04-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48581"}, {"sha": "3216068811b22cadf7aa9f79c8aff42c08ac65ed", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "patch": "@@ -5939,6 +5939,7 @@ fixed_type_or_null (tree instance, int *nonnull, int *cdtorp)\n \t     itself.  */\n \t  if (TREE_CODE (instance) == VAR_DECL\n \t      && DECL_INITIAL (instance)\n+\t      && !type_dependent_expression_p (DECL_INITIAL (instance))\n \t      && !htab_find (ht, instance))\n \t    {\n \t      tree type;"}, {"sha": "f066a80ad707322421b6c1ed7e8401a0516d410d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "patch": "@@ -1,3 +1,8 @@\n+2011-04-13  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/48574\n+\t* g++.dg/template/dependent-expr7.C: New test case.\n+\n 2011-04-13  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/sfinae13.C: New."}, {"sha": "b2468203590e23903c81866d7d76c7a31f36eab1", "filename": "gcc/testsuite/g++.dg/template/dependent-expr7.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d8b4bd7ad6acd3907cba2346c70c101c793e9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr7.C?ref=91d8b4bd7ad6acd3907cba2346c70c101c793e9f", "patch": "@@ -0,0 +1,22 @@\n+// Origin PR c++/48574\n+// { dg-do compile }\n+\n+struct A\n+{\n+  virtual void foo();\n+};\n+\n+template <typename T>\n+void\n+bar(T x)\n+{\n+  A &b = *x;\n+  b.foo ();\n+}\n+\n+void\n+foo()\n+{\n+  A a;\n+  bar(&a);\n+}"}]}