{"sha": "98fff892cc285ce4fc076153ef8a601df70459ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmZmY4OTJjYzI4NWNlNGZjMDc2MTUzZWY4YTYwMWRmNzA0NTlmZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-10-26T10:22:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-10-26T10:22:43Z"}, "message": "libstdc++.exp ([check_v3_target_normal_mode]): Add.\n\n2010-10-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/lib/libstdc++.exp ([check_v3_target_normal_mode]): Add.\n\t* testsuite/lib/dg-options.exp ([dg-require-normal-mode]): Likewise.\n\t* testsuite/23_containers/headers/forward_list/synopsis.cc: Use the\n\tlatter.\n\t* testsuite/23_containers/headers/vector/synopsis.cc: Likewise.\n\t* testsuite/23_containers/headers/deque/synopsis.cc: Likewise.\n\t* testsuite/23_containers/headers/bitset/synopsis.cc: Likewise.\n\t* testsuite/23_containers/headers/list/synopsis.cc: Likewise.\n\t* testsuite/23_containers/headers/set/synopsis.cc: Likewise.\n\t* testsuite/23_containers/headers/map/synopsis.cc: Likewise.\n\nFrom-SVN: r165937", "tree": {"sha": "f34298658620ce66747de1460b763c821a92a680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f34298658620ce66747de1460b763c821a92a680"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98fff892cc285ce4fc076153ef8a601df70459ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fff892cc285ce4fc076153ef8a601df70459ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98fff892cc285ce4fc076153ef8a601df70459ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fff892cc285ce4fc076153ef8a601df70459ff/comments", "author": null, "committer": null, "parents": [{"sha": "6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f"}], "stats": {"total": 111, "additions": 97, "deletions": 14}, "files": [{"sha": "14e0b9f2f923d6c43203786e64415cdb8855561a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -1,3 +1,16 @@\n+2010-10-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/lib/libstdc++.exp ([check_v3_target_normal_mode]): Add.\n+\t* testsuite/lib/dg-options.exp ([dg-require-normal-mode]): Likewise.\n+\t* testsuite/23_containers/headers/forward_list/synopsis.cc: Use the\n+\tlatter.\n+\t* testsuite/23_containers/headers/vector/synopsis.cc: Likewise.\n+\t* testsuite/23_containers/headers/deque/synopsis.cc: Likewise.\n+\t* testsuite/23_containers/headers/bitset/synopsis.cc: Likewise.\n+\t* testsuite/23_containers/headers/list/synopsis.cc: Likewise.\n+\t* testsuite/23_containers/headers/set/synopsis.cc: Likewise.\n+\t* testsuite/23_containers/headers/map/synopsis.cc: Likewise.\n+\n 2010-10-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/forward_list.h (_Fwd_list_node_base::swap): Remove."}, {"sha": "0eccdf4bb71d336102f64fa08bf97a5fdbffea09", "filename": "libstdc++-v3/testsuite/23_containers/headers/bitset/synopsis.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fbitset%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fbitset%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fbitset%2Fsynopsis.cc?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -1,6 +1,7 @@\n // { dg-do compile }\n+// { dg-require-normal-mode \"\" }\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "137ed6155f157d4b336b77bf095dc750650df00b", "filename": "libstdc++-v3/testsuite/23_containers/headers/deque/synopsis.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fdeque%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fdeque%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fdeque%2Fsynopsis.cc?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -1,6 +1,7 @@\n // { dg-do compile }\n+// { dg-require-normal-mode \"\" }\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "73cd9c5b562506832e186fba1c30d60c2d6e276d", "filename": "libstdc++-v3/testsuite/23_containers/headers/forward_list/synopsis.cc", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fforward_list%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fforward_list%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fforward_list%2Fsynopsis.cc?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -1,7 +1,8 @@\n // { dg-do compile }\n+// { dg-require-normal-mode \"\" }\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -24,22 +25,28 @@ namespace std {\n   template <class T, class Allocator> class forward_list;\n \n   template <class T, class Allocator>\n-  bool operator==(const forward_list<T,Allocator>& x, const forward_list<T,Allocator>&);\n+  bool operator==(const forward_list<T,Allocator>& x,\n+\t\t  const forward_list<T,Allocator>&);\n \n   template <class T, class Allocator>\n-  bool operator< (const forward_list<T,Allocator>& x, const forward_list<T,Allocator>&);\n+  bool operator< (const forward_list<T,Allocator>& x,\n+\t\t  const forward_list<T,Allocator>&);\n \n   template <class T, class Allocator>\n-    bool operator!=(const forward_list<T,Allocator>& x, const forward_list<T,Allocator>&);\n+    bool operator!=(const forward_list<T,Allocator>& x,\n+\t\t    const forward_list<T,Allocator>&);\n \n   template <class T, class Allocator>\n-    bool operator> (const forward_list<T,Allocator>& x, const forward_list<T,Allocator>&);\n+    bool operator> (const forward_list<T,Allocator>& x,\n+\t\t    const forward_list<T,Allocator>&);\n \n   template <class T, class Allocator>\n-    bool operator>=(const forward_list<T,Allocator>& x, const forward_list<T,Allocator>&);\n+    bool operator>=(const forward_list<T,Allocator>& x,\n+\t\t    const forward_list<T,Allocator>&);\n \n   template <class T, class Allocator>\n-    bool operator<=(const forward_list<T,Allocator>& x, const forward_list<T,Allocator>&);\n+    bool operator<=(const forward_list<T,Allocator>& x,\n+\t\t    const forward_list<T,Allocator>&);\n \n   template <class T, class Allocator>\n     void swap(forward_list<T,Allocator>& x, forward_list<T,Allocator>& y);"}, {"sha": "7d44c7cd0627916bfa1be8f7c14784e262b14aba", "filename": "libstdc++-v3/testsuite/23_containers/headers/list/synopsis.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Flist%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Flist%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Flist%2Fsynopsis.cc?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -1,6 +1,7 @@\n // { dg-do compile }\n+// { dg-require-normal-mode \"\" }\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "0fc977c9df57545eaad72985783a4044c0982755", "filename": "libstdc++-v3/testsuite/23_containers/headers/map/synopsis.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fmap%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fmap%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fmap%2Fsynopsis.cc?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -1,6 +1,7 @@\n // { dg-do compile }\n+// { dg-require-normal-mode \"\" }\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "94ae348f6761a4650cdb42e7ef9a63287a3e7030", "filename": "libstdc++-v3/testsuite/23_containers/headers/set/synopsis.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fset%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fset%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fset%2Fsynopsis.cc?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -1,6 +1,7 @@\n // { dg-do compile }\n+// { dg-require-normal-mode \"\" }\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "e543e8fd316bb5b9234b1dc1a4f157d7f9cf10d7", "filename": "libstdc++-v3/testsuite/23_containers/headers/vector/synopsis.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fvector%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fvector%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Fvector%2Fsynopsis.cc?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -1,6 +1,7 @@\n // { dg-do compile }\n+// { dg-require-normal-mode \"\" }\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the"}, {"sha": "e8d7f3452ae9f465b21cef940efd475484b6e9ab", "filename": "libstdc++-v3/testsuite/lib/dg-options.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -35,6 +35,15 @@ proc dg-require-debug-mode { args } {\n     return\n }\n \n+proc dg-require-normal-mode { args } {\n+    if { ![ check_v3_target_normal_mode ] } {\n+\tupvar dg-do-what dg-do-what\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+\treturn\n+    }\n+    return\n+}\n+\n proc dg-require-parallel-mode { args } {\n     if { ![ check_v3_target_parallel_mode ] } {\n \tupvar dg-do-what dg-do-what"}, {"sha": "65ffa66e9b67831dea7865f519404c09281a2bfb", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 49, "deletions": 1, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98fff892cc285ce4fc076153ef8a601df70459ff/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=98fff892cc285ce4fc076153ef8a601df70459ff", "patch": "@@ -922,7 +922,6 @@ proc check_v3_target_debug_mode { } {\n \tset exe debug_mode[pid].exe\n \n \tset f [open $src \"w\"]\n-\tputs $f \"#include <string>\"\n \tputs $f \"#ifndef _GLIBCXX_DEBUG\"\n \tputs $f \"#  error No debug mode\"\n \tputs $f \"#endif\"\n@@ -942,6 +941,55 @@ proc check_v3_target_debug_mode { } {\n     return $et_debug_mode\n }\n \n+proc check_v3_target_normal_mode { } {\n+    global et_normal_mode\n+    global tool\t\n+\n+    if { ![info exists et_normal_mode_target_name] } {\n+\tset et_normal_mode_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_normal_mode_target_name } {\n+\tverbose \"check_v3_target_normal_mode: `$et_normal_mode_target_name'\" 2\n+\tset et_normal_mode_target_name $current_target\n+\tif [info exists et_normal_mode] {\n+\t    verbose \"check_v3_target_normal_mode: removing cached result\" 2\n+\t    unset et_normal_mode\n+\t}\n+    }\n+\n+    if [info exists et_normal_mode] {\n+\tverbose \"check_v3_target_normal_mode: using cached result\" 2\n+    } else {\n+\tset et_normal_mode 0\n+\n+\t# Set up and compile a C++ test program that depends\n+\t# on normal mode activated.\n+\tset src normal_mode[pid].cc\n+\tset exe normal_mode[pid].exe\n+\n+\tset f [open $src \"w\"]\n+\tputs $f \"#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PROFILE) || defined(_GLIBCXX_PARALLEL)\"\n+\tputs $f \"#  error No normal mode\"\n+\tputs $f \"#endif\"\n+\tputs $f \"int main()\"\n+\tputs $f \"{ return 0; }\"\n+\tclose $f\n+\n+\tset lines [v3_target_compile $src $exe executable \"\"]\n+\tfile delete $src\n+\n+\tif [string match \"\" $lines] {\n+\t    # No error message, compilation succeeded.\n+\t    set et_normal_mode 1\n+\t}\n+    }\n+    verbose \"check_v3_target_normal_mode: $et_normal_mode\" 2\n+    return $et_normal_mode\n+}\n+\n proc check_v3_target_parallel_mode { } {\n     global cxxflags\n     global v3-libgomp"}]}