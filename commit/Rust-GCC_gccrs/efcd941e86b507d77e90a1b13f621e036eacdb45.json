{"sha": "efcd941e86b507d77e90a1b13f621e036eacdb45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjZDk0MWU4NmI1MDdkNzdlOTBhMWIxM2Y2MjFlMDM2ZWFjZGI0NQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-03T12:44:41Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-08T17:24:39Z"}, "message": "c++: cleanup function name [PR 98531]\n\nThe next piece of 98531 is that in some cases we need to create a\ncleanup function to do the work (when the object is an array, or we're\nusing regular atexit).  We were not pushing that function's decl\nanywhere (not giving it a context) so streaming it failed.\n\nThis is a partial fix.  You'll notice we're naming these from a per-TU\ncounter.  I've captured that in PR98893.\n\n\tgcc/cp/\n\t* decl.c (start_cleanup_fn): Push function into\n\tnamespace.\n\tgcc/testsuite/\n\t* g++.dg/modules/pr98531-2.h: New.\n\t* g++.dg/modules/pr98531-2_a.H: New.\n\t* g++.dg/modules/pr98531-2_b.C: New.\n\t* g++.dg/modules/pr98531-3.h: New.\n\t* g++.dg/modules/pr98531-3_a.H: New.\n\t* g++.dg/modules/pr98531-3_b.C: New.", "tree": {"sha": "d71e89481b7c698f8f637cce70e001db66e173cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d71e89481b7c698f8f637cce70e001db66e173cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efcd941e86b507d77e90a1b13f621e036eacdb45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efcd941e86b507d77e90a1b13f621e036eacdb45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efcd941e86b507d77e90a1b13f621e036eacdb45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efcd941e86b507d77e90a1b13f621e036eacdb45/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57b17858a1b3719507ccad926fb57b05f26935f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b17858a1b3719507ccad926fb57b05f26935f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b17858a1b3719507ccad926fb57b05f26935f8"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "0aa49f91d5a118498c80920d080f686f9bac29dd", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=efcd941e86b507d77e90a1b13f621e036eacdb45", "patch": "@@ -8909,10 +8909,6 @@ static tree\n start_cleanup_fn (void)\n {\n   char name[32];\n-  tree fntype;\n-  tree fndecl;\n-  bool use_cxa_atexit = flag_use_cxa_atexit\n-\t\t\t&& !targetm.cxx.use_atexit_for_cxa_atexit ();\n \n   push_to_top_level ();\n \n@@ -8922,8 +8918,9 @@ start_cleanup_fn (void)\n   /* Build the name of the function.  */\n   sprintf (name, \"__tcf_%d\", start_cleanup_cnt++);\n   /* Build the function declaration.  */\n-  fntype = TREE_TYPE (get_atexit_fn_ptr_type ());\n-  fndecl = build_lang_decl (FUNCTION_DECL, get_identifier (name), fntype);\n+  tree fntype = TREE_TYPE (get_atexit_fn_ptr_type ());\n+  tree fndecl = build_lang_decl (FUNCTION_DECL, get_identifier (name), fntype);\n+  DECL_CONTEXT (fndecl) = FROB_CONTEXT (current_namespace);\n   /* It's a function with internal linkage, generated by the\n      compiler.  */\n   TREE_PUBLIC (fndecl) = 0;\n@@ -8934,16 +8931,16 @@ start_cleanup_fn (void)\n      emissions this way.  */\n   DECL_DECLARED_INLINE_P (fndecl) = 1;\n   DECL_INTERFACE_KNOWN (fndecl) = 1;\n-  /* Build the parameter.  */\n-  if (use_cxa_atexit)\n+  if (flag_use_cxa_atexit && !targetm.cxx.use_atexit_for_cxa_atexit ())\n     {\n+      /* Build the parameter.  */\n       tree parmdecl = cp_build_parm_decl (fndecl, NULL_TREE, ptr_type_node);\n       TREE_USED (parmdecl) = 1;\n       DECL_READ_P (parmdecl) = 1;\n       DECL_ARGUMENTS (fndecl) = parmdecl;\n     }\n \n-  pushdecl (fndecl);\n+  fndecl = pushdecl (fndecl, /*hidden=*/true);\n   start_preparsed_function (fndecl, NULL_TREE, SF_PRE_PARSED);\n \n   pop_lang_context ();"}, {"sha": "62d4c1d1f902ce2ba118f187293950ac164829e0", "filename": "gcc/testsuite/g++.dg/modules/pr98531-2.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2.h?ref=efcd941e86b507d77e90a1b13f621e036eacdb45", "patch": "@@ -0,0 +1,13 @@\n+\n+struct __waiters\n+{\n+  __waiters() noexcept;\n+  ~__waiters () noexcept;\n+\n+  static __waiters &_S_for()\n+  {\n+    static __waiters w;\n+    \n+    return w;\n+  }\n+};"}, {"sha": "757d68af297b11d2d1e6c292ed045d6a08148cf5", "filename": "gcc/testsuite/g++.dg/modules/pr98531-2_a.H", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2_a.H?ref=efcd941e86b507d77e90a1b13f621e036eacdb45", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options \"-fmodule-header -fno-use-cxa-atexit\" }\n+// PR c++ 98531  no-context __cxa_atexit\n+// { dg-module-cmi {} }\n+\n+#include \"pr98531-2.h\""}, {"sha": "b5fa4492e8a32bc9919bcd42952ff3674cd14899", "filename": "gcc/testsuite/g++.dg/modules/pr98531-2_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-2_b.C?ref=efcd941e86b507d77e90a1b13f621e036eacdb45", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy -fno-use-cxa-atexit\" }\n+\n+#include \"pr98531-2.h\"\n+import \"pr98531-2_a.H\";"}, {"sha": "a1a2f8a2e029b45916a913e1dcde7587aff4266e", "filename": "gcc/testsuite/g++.dg/modules/pr98531-3.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3.h?ref=efcd941e86b507d77e90a1b13f621e036eacdb45", "patch": "@@ -0,0 +1,13 @@\n+\n+struct __waiters\n+{\n+  __waiters() noexcept;\n+  ~__waiters () noexcept;\n+\n+  static __waiters &_S_for()\n+  {\n+    static __waiters w[2];\n+    \n+    return w[0];\n+  }\n+};"}, {"sha": "1c6267ae376fca4617bfc089493be8b8d84deac1", "filename": "gcc/testsuite/g++.dg/modules/pr98531-3_a.H", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3_a.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3_a.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3_a.H?ref=efcd941e86b507d77e90a1b13f621e036eacdb45", "patch": "@@ -0,0 +1,5 @@\n+// { dg-additional-options -fmodule-header }\n+// PR c++ 98531  no-context __tcf_0\n+// { dg-module-cmi {} }\n+\n+#include \"pr98531-3.h\""}, {"sha": "7e3e16d34fdceaf2c477640bf78305678e1f3af1", "filename": "gcc/testsuite/g++.dg/modules/pr98531-3_b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efcd941e86b507d77e90a1b13f621e036eacdb45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr98531-3_b.C?ref=efcd941e86b507d77e90a1b13f621e036eacdb45", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-fmodules-ts -fno-module-lazy\" }\n+\n+#include \"pr98531-3.h\"\n+import \"pr98531-3_a.H\";"}]}