{"sha": "1b12a13e40038d786ee0e3e757fe03905ec5eecb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIxMmExM2U0MDAzOGQ3ODZlZTBlM2U3NTdmZTAzOTA1ZWM1ZWVjYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-08-17T23:07:54Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-08-17T23:07:54Z"}, "message": "cp-tree.h (back_end_hook): New variable.\n\n\t* cp-tree.h (back_end_hook): New variable.\n\t* decl2.c (back_end_hook): Define it.\n\t(finish_file): If it's non-NULL, call it.\n\nFrom-SVN: r28741", "tree": {"sha": "87b552c0f355829468309897fcd610f3e14ddc58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87b552c0f355829468309897fcd610f3e14ddc58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b12a13e40038d786ee0e3e757fe03905ec5eecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b12a13e40038d786ee0e3e757fe03905ec5eecb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b12a13e40038d786ee0e3e757fe03905ec5eecb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b12a13e40038d786ee0e3e757fe03905ec5eecb/comments", "author": null, "committer": null, "parents": [{"sha": "47359a8efab153e0ed904d27f2672ba8271693b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47359a8efab153e0ed904d27f2672ba8271693b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47359a8efab153e0ed904d27f2672ba8271693b1"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "86b452ba63b7306b925496c931891b547014abf2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b12a13e40038d786ee0e3e757fe03905ec5eecb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b12a13e40038d786ee0e3e757fe03905ec5eecb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1b12a13e40038d786ee0e3e757fe03905ec5eecb", "patch": "@@ -1,5 +1,9 @@\n 1999-08-17  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* cp-tree.h (back_end_hook): New variable.\n+\t* decl2.c (back_end_hook): Define it.\n+\t(finish_file): If it's non-NULL, call it.\n+\n \t* decl.c (add_decl_to_level): New function.\n \t(push_local_binding): Use it.\n \t(find_binding): Fix typo in comment."}, {"sha": "6c585d4252a0ec00b3edd994f2ebbd3c8585dd52", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b12a13e40038d786ee0e3e757fe03905ec5eecb/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b12a13e40038d786ee0e3e757fe03905ec5eecb/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1b12a13e40038d786ee0e3e757fe03905ec5eecb", "patch": "@@ -613,6 +613,12 @@ extern int flag_permissive;\n \n extern int flag_access_control;\n \n+/* If this variable is defined to a non-NULL value, it will be called\n+   after the file has been completely parsed.  The argument will be\n+   the GLOBAL_NAMESPACE.  */\n+\n+extern void (*back_end_hook) PROTO((tree));\n+\n \f\n /* C++ language-specific tree codes.  */\n #define DEFTREECODE(SYM, NAME, TYPE, LENGTH) SYM,"}, {"sha": "7fd9be0be6a2a00f5072bb0366ec5c50d1a3831d", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b12a13e40038d786ee0e3e757fe03905ec5eecb/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b12a13e40038d786ee0e3e757fe03905ec5eecb/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=1b12a13e40038d786ee0e3e757fe03905ec5eecb", "patch": "@@ -476,6 +476,11 @@ int flag_vtable_gc;\n \n int flag_permissive;\n \n+/* If this variable is defined to a non-NULL value, it will be called\n+   after the file has been completely parsed.  */\n+\n+void (*back_end_hook) PROTO((tree));\n+\n /* Table of language-dependent -f options.\n    STRING is the option name.  VARIABLE is the address of the variable.\n    ON_VALUE is the value to store in VARIABLE\n@@ -3675,6 +3680,11 @@ finish_file ()\n   if (flag_dump_translation_unit)\n     dump_node_to_file (global_namespace, flag_dump_translation_unit);\n \n+  /* If there's some tool that wants to examine the entire translation\n+     unit, let it do so now.  */\n+  if (back_end_hook)\n+    (*back_end_hook) (global_namespace);\n+\n   this_time = get_run_time ();\n   parse_time -= this_time - start_time;\n   varconst_time += this_time - start_time;"}]}