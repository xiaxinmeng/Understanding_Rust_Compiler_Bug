{"sha": "01c712cb903689bd41733f098e8efbbe116511b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFjNzEyY2I5MDM2ODliZDQxNzMzZjA5OGU4ZWZiYmUxMTY1MTFiMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-05-19T13:31:01Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-05-19T13:31:01Z"}, "message": "Enable by default -Werror just for bootstrap-debug.mk and default build.\n\n2017-05-19  Martin Liska  <mliska@suse.cz>\n\n\t* configure.ac: Add --enable-werror-always just for\n\tbootstrap-debug (or none build config) and do not add it\n\twhen we are on a release branch.\n\t* configure: Regenerated.\n\nFrom-SVN: r248276", "tree": {"sha": "e448a9eb3c843b0dbe0bff7da9740e1dd8b00ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e448a9eb3c843b0dbe0bff7da9740e1dd8b00ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01c712cb903689bd41733f098e8efbbe116511b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c712cb903689bd41733f098e8efbbe116511b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c712cb903689bd41733f098e8efbbe116511b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c712cb903689bd41733f098e8efbbe116511b0/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a8a8d7bd28ef295b15f5b1c0cd17e73409c80a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a8a8d7bd28ef295b15f5b1c0cd17e73409c80a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a8a8d7bd28ef295b15f5b1c0cd17e73409c80a6"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "b75693b1ed4403d7c58e8c0b3693b91b1585d742", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c712cb903689bd41733f098e8efbbe116511b0/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c712cb903689bd41733f098e8efbbe116511b0/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=01c712cb903689bd41733f098e8efbbe116511b0", "patch": "@@ -1,3 +1,10 @@\n+2017-05-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure.ac: Add --enable-werror-always just for\n+\tbootstrap-debug (or none build config) and do not add it\n+\twhen we are on a release branch.\n+\t* configure: Regenerated.\n+\n 2017-05-18  Sheldon Lobo  <sheldon.lobo@oracle.com>\n \n \t* MAINTAINERS: Add self to Write After Approval"}, {"sha": "2c2fe644cfa8d6e0c59254bc9e339d4146062c15", "filename": "configure", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c712cb903689bd41733f098e8efbbe116511b0/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c712cb903689bd41733f098e8efbbe116511b0/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=01c712cb903689bd41733f098e8efbbe116511b0", "patch": "@@ -14587,19 +14587,23 @@ fi\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror;\n-else\n-  if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental; then\n-  enable_werror=yes\n-else\n-  enable_werror=no\n-fi\n fi\n \n case ${enable_werror} in\n   yes) stage2_werror_flag=\"--enable-werror-always\" ;;\n   *) stage2_werror_flag=\"\" ;;\n esac\n \n+if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental; then\n+  case $BUILD_CONFIG in\n+  bootstrap-debug)\n+      stage2_werror_flag=\"--enable-werror-always\" ;;\n+  \"\")\n+      stage2_werror_flag=\"--enable-werror-always\" ;;\n+  esac\n+fi\n+\n+\n \n # Enable --enable-host-shared.\n # Check whether --enable-host-shared was given."}, {"sha": "865dd543fa3fdf91697be00b76c2a65812dc3155", "filename": "configure.ac", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c712cb903689bd41733f098e8efbbe116511b0/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c712cb903689bd41733f098e8efbbe116511b0/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=01c712cb903689bd41733f098e8efbbe116511b0", "patch": "@@ -3461,16 +3461,21 @@ AC_SUBST(stage1_checking)\n # Enable -Werror in bootstrap stage2 and later.\n AC_ARG_ENABLE(werror,\n [AS_HELP_STRING([--enable-werror],\n-\t\t[enable -Werror in bootstrap stage2 and later])], [],\n-[if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental; then\n-  enable_werror=yes\n-else\n-  enable_werror=no\n-fi])\n+\t\t[enable -Werror in bootstrap stage2 and later])], [], [])\n case ${enable_werror} in\n   yes) stage2_werror_flag=\"--enable-werror-always\" ;;\n   *) stage2_werror_flag=\"\" ;;\n esac\n+\n+if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental; then\n+  case $BUILD_CONFIG in\n+  bootstrap-debug)\n+      stage2_werror_flag=\"--enable-werror-always\" ;;\n+  \"\")\n+      stage2_werror_flag=\"--enable-werror-always\" ;;\n+  esac\n+fi\n+\n AC_SUBST(stage2_werror_flag)\n \n # Enable --enable-host-shared."}]}