{"sha": "ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U1YzFjZjMxMDA0MTdlZjFjNjZlM2MwY2FhZmMzYjk1ZTI4ODQ4Yw==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-02-06T01:14:32Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-02-06T01:14:32Z"}, "message": "install.texi: Update automake and autoconf version requirements.\n\n2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* doc/install.texi:  Update automake and autoconf version\n\trequirements.  Note where to find gcj automake version.\n\n2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* Makefile.in (generate-manpages): Move dependencies to ...\n\t(man): here.\n\t* doc/makefile.texi: Document new targets.\n\t* doc/sourcebuild.texi (Make-lang.in): Document new langhooks.\n\nFrom-SVN: r77365", "tree": {"sha": "0b801a095b5fb310239b09469dbfe374641e7e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b801a095b5fb310239b09469dbfe374641e7e8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/comments", "author": null, "committer": null, "parents": [{"sha": "02ba6b2254446cc434f56b1e2bc6623220963a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ba6b2254446cc434f56b1e2bc6623220963a7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ba6b2254446cc434f56b1e2bc6623220963a7d"}], "stats": {"total": 85, "additions": 68, "deletions": 17}, "files": [{"sha": "1651cb0919f1debf1399c55ce6587748aef23c5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "patch": "@@ -1,3 +1,15 @@\n+2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* doc/install.texi:  Update automake and autoconf version\n+\trequirements.  Note where to find gcj automake version.\n+\n+2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* Makefile.in (generate-manpages): Move dependencies to ...\n+\t(man): here.\n+\t* doc/makefile.texi: Document new targets.\n+\t* doc/sourcebuild.texi (Make-lang.in): Document new langhooks.\n+\n 2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n \n \tPR/13485"}, {"sha": "8b94fc4271fe62e5f63371f729b8dcff20766b02", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "patch": "@@ -2687,7 +2687,9 @@ doc/gccinstall.dvi: $(TEXI_GCCINSTALL_FILES)\n \n MANFILES = doc/gcov.1 doc/cpp.1 doc/gcc.1 doc/gfdl.7 doc/gpl.7 doc/fsf-funding.7\n \n-generated-manpages: $(MANFILES) lang.man @GENINSRC@ srcman lang.srcman\n+generated-manpages: man \n+\n+man: $(MANFILES) lang.man @GENINSRC@ srcman lang.srcman\n \n srcman: $(MANFILES)\n \t-cp -p $^ $(srcdir)/doc"}, {"sha": "7486cd23e6eabee1007eb5d830bcdecd4c2b7cba", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "patch": "@@ -293,15 +293,24 @@ systems' @command{tar} programs will also work, only try GNU\n Necessary when modifying @file{configure.in}, @file{aclocal.m4}, etc.@:\n to regenerate @file{configure} and @file{config.in} files.  Most\n directories require autoconf 2.13 (exactly), but @file{libiberty},\n-@file{fastjar}, @file{libstdc++-v3}, and @file{gcc} require\n-autoconf 2.57 (exactly).\n+@file{fastjar}, @file{libstdc++-v3}, @file{libjava/libltdl}, and @file{gcc}\n+require autoconf 2.57 (exactly).\n \n-@item automake versions 1.4-p? and 1.7.?\n+@item automake versions 1.4-gcj and 1.7.9\n \n Necessary when modifying a @file{Makefile.am} file to regenerate its\n-associated @file{Makefile.in}.  Most directories require a 1.4 series\n-automake; @file{libstdc++-v3} and @file{fastjar} requires a 1.7 series\n-automake.\n+associated @file{Makefile.in}.\n+\n+Much of GCC does not use automake, so directly edit the @file{Makefile.in}\n+file.  Specifically this applies to the @file{gcc}, @file{intl},\n+@file{libf2c}, @file{libiberty}, @file{libobjc} directories as well as any\n+of their subdirectories.\n+\n+The @file{libstdc++-v3}, @file{libjava/libltdl}, and @file{fastjar}\n+directories require automake 1.7.9.  However, the Java directories, which\n+include @file{boehm-gc}, @file{libffi}, @file{libjava}, and @file{zlib},\n+require a modified version of automake 1.4 downloadable from\n+@uref{ftp://gcc.gnu.org/pub/java/automake-gcj-1.4.tar.gz}.\n \n @item gettext version 0.12 (or later)\n \n@@ -327,7 +336,7 @@ Necessary to regenerate @file{fixinc/fixincl.x} from\n \n Necessary to run the @file{fixinc} @command{make check}.\n \n-Necessary to regenerate the top level @file{Makefile.am} files from\n+Necessary to regenerate the top level @file{Makefile.in} file from\n @file{Makefile.tpl} and @file{Makefile.def}.\n \n @item GNU Bison version 1.28 (or later)"}, {"sha": "d39baa5f1aea2970070c4d77aae1d4d403574ba2", "filename": "gcc/doc/makefile.texi", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2Fdoc%2Fmakefile.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2Fdoc%2Fmakefile.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmakefile.texi?ref=ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "patch": "@@ -13,9 +13,17 @@ This is the default target.  Depending on what your build/host/target\n configuration is, it coordinates all the things that need to be built.\n \n @item doc\n-Produce info-formatted documentation.  Also, @samp{make dvi} is\n-available for DVI-formatted documentation, and @samp{make\n-generated-manpages} to generate man pages.\n+Produce info-formatted documentation and man pages.  Essentially it\n+calls @samp{make man} and @samp{make info}.\n+\n+@item dvi\n+Produce DVI-formatted documentation.\n+\n+@item man\n+Generate man pages.\n+\n+@item info\n+Generate info-formatted pages.\n \n @item mostlyclean\n Delete the files made while building the compiler.\n@@ -31,6 +39,16 @@ Distclean plus any file that can be generated from other files.  Note\n that additional tools may be required beyond what is normally needed to\n build gcc.\n \n+@item srcextra\n+Generates files in the source directory that do not exist in CVS but\n+should go into a release tarball.  One example is @file{gcc/c-parse.c}\n+which is generated from the CVS source file @file{gcc/c-parse.in}.\n+\n+@item srcinfo\n+@itemx srcman\n+Copies the info-formatted and manpage documentation into the source\n+directory usually for the purpose of generating a release tarball.\n+\n @item install\n Installs gcc.\n "}, {"sha": "908dd670b838a0f28e87258d4999494ff61ef947", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5c1cf3100417ef1c66e3c0caafc3b95e28848c/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=ce5c1cf3100417ef1c66e3c0caafc3b95e28848c", "patch": "@@ -565,23 +565,21 @@ FIXME: exactly what goes in each of these targets?\n Build an @command{etags} @file{TAGS} file in the language subdirectory\n in the source tree.\n @item info\n-Build info documentation for the front end, in the source directory.\n+Build info documentation for the front end, in the build directory.\n This target is only called by @samp{make bootstrap} if a suitable\n version of @command{makeinfo} is available, so does not need to check\n-for this, and should fail if an error occurs.  This hook is a\n-double-colon hook.\n+for this, and should fail if an error occurs.\n @item dvi\n Build DVI documentation for the front end, in the build directory.\n This should be done using @code{$(TEXI2DVI)}, with appropriate\n @option{-I} arguments pointing to directories of included files.\n This hook is a double-colon hook.\n-@item generated-manpages\n+@item man\n Build generated man pages for the front end from Texinfo manuals\n-(@pxref{Man Page Generation}), in the source directory.  This target\n+(@pxref{Man Page Generation}), in the build directory.  This target\n is only called if the necessary tools are available, but should ignore\n errors so as not to stop the build if errors occur; man pages are\n optional and the tools involved may be installed in a broken way.\n-This hook is a double-colon hook.\n @item install-normal\n FIXME: what is this target for?\n @item install-common\n@@ -595,6 +593,18 @@ that should be installed.  This hook is a double-colon hook.\n @item install-man\n Install man pages for the front end.  This target should ignore\n errors.\n+@item srcextra\n+Copies its dependencies into the source directory.  This generally should\n+be used for generated files such as @file{gcc/c-parse.c} which are not\n+present in CVS, but should be included in any release tarballs.  This\n+target will be executed during a bootstrap if\n+@samp{--enable-generated-files-in-srcdir} was specified as a\n+@file{configure} option.\n+@item srcinfo\n+@itemx srcman\n+Copies its dependencies into the source directory.  These targets will be\n+executed during a bootstrap if @samp{--enable-generated-files-in-srcdir}\n+was specified as a @file{configure} option.\n @item uninstall\n Uninstall files installed by installing the compiler.  This is\n currently documented not to be supported, so the hook need not do"}]}