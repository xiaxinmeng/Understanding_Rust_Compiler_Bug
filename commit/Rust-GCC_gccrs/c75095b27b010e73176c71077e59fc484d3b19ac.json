{"sha": "c75095b27b010e73176c71077e59fc484d3b19ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc1MDk1YjI3YjAxMGU3MzE3NmM3MTA3N2U1OWZjNDg0ZDNiMTlhYw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-08-10T21:35:09Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-08-10T21:35:09Z"}, "message": "sourcebuild.texi (compat testing): Document available test framework commands.\n\n2004-08-10  Janis Johnson  <janis187@us.ibm.com>\n\n\t* doc/sourcebuild.texi (compat testing): Document available test\n\tframework commands.  Use the preferred spelling of DejaGnu.\n\nFrom-SVN: r85768", "tree": {"sha": "54bde77695a8a64af7f819f82238d47e3507dfa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54bde77695a8a64af7f819f82238d47e3507dfa8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c75095b27b010e73176c71077e59fc484d3b19ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75095b27b010e73176c71077e59fc484d3b19ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c75095b27b010e73176c71077e59fc484d3b19ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75095b27b010e73176c71077e59fc484d3b19ac/comments", "author": null, "committer": null, "parents": [{"sha": "98975653223837f9835c7b626dde25c3647191a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98975653223837f9835c7b626dde25c3647191a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98975653223837f9835c7b626dde25c3647191a5"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "c36374ecf2d419bad7f169ee150601e876eaba38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c75095b27b010e73176c71077e59fc484d3b19ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c75095b27b010e73176c71077e59fc484d3b19ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c75095b27b010e73176c71077e59fc484d3b19ac", "patch": "@@ -1,3 +1,8 @@\n+2004-08-10  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/sourcebuild.texi (compat testing): Document available test\n+\tframework commands.  Use the preferred spelling of DejaGnu.\n+\n 2004-08-10  Daniel Berlin <dberlin@dberlin.org>\n \n \t* lambda.h: Add matrix type, and prototypes for remainder of"}, {"sha": "d2c4023cb1d4f83b0dab076788f9a6d004bb76c1", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c75095b27b010e73176c71077e59fc484d3b19ac/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c75095b27b010e73176c71077e59fc484d3b19ac/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=c75095b27b010e73176c71077e59fc484d3b19ac", "patch": "@@ -1072,7 +1072,7 @@ Language-independent support for testing @command{gcov}, and for checking\n that branch profiling produces expected values, is provided by the\n expect file @file{gcov.exp}.  @command{gcov} tests also rely on procedures\n in @file{gcc.dg.exp} to compile and run the test program.  A typical\n-@command{gcov} test contains the following DejaGNU commands within comments:\n+@command{gcov} test contains the following DejaGnu commands within comments:\n \n @smallexample\n @{ dg-options \"-fprofile-arcs -ftest-coverage\" @}\n@@ -1201,9 +1201,10 @@ Within each test, the main program and one functional piece are\n compiled by the GCC under test.  The other piece can be compiled by\n an alternate compiler.  If no alternate compiler is specified,\n then all three source files are all compiled by the GCC under test.\n-It's also possible to specify a pair of lists of compiler options,\n-one list for each compiler, so that each test will be compiled with\n-each pair of options.\n+You can specify pairs of sets of compiler options.  The first element\n+of such a pair specifies options used with the GCC under test, and the\n+second element of the pair specifies options used with the alternate\n+compiler.  Each test is compiled with each pair of options.\n \n @file{compat.exp} defines default pairs of compiler options.\n These can be overridden by defining the environment variable\n@@ -1224,11 +1225,13 @@ built a second time using @code{-fpic} by the compiler under test\n and @code{-fPIC -O2} by the alternate compiler.\n \n An alternate compiler is specified by defining an environment\n-variable; for C++ define @env{ALT_CXX_UNDER_TEST} to be the full\n-pathname of an installed compiler.  That will be written to the\n-@file{site.exp} file used by DejaGNU.  The default is to build each\n+variable to be the full pathname of an installed compiler; for C\n+define @env{ALT_CC_UNDER_TEST}, and for C++ define\n+@env{ALT_CXX_UNDER_TEST}.  These will be written to the\n+@file{site.exp} file used by DejaGnu.  The default is to build each\n test with the compiler under test using the first of each pair of\n compiler options from @env{COMPAT_OPTIONS}.  When\n+@env{ALT_CC_UNDER_TEST} or\n @env{ALT_CXX_UNDER_TEST} is @code{same}, each test is built using\n the compiler under test but with combinations of the options from\n @env{COMPAT_OPTIONS}.\n@@ -1253,3 +1256,23 @@ runtime support.  A test that fails for the alternate compiler but\n passes for the compiler under test probably tests for a bug that was\n fixed in the compiler under test but is present in the alternate\n compiler.\n+\n+The binary compatibility tests support a small number of test framework\n+commands that appear within comments in a test file.\n+\n+@table @code\n+@item dg-require-*\n+These commands can be used in @file{@var{testname}_main.@var{suffix}}\n+to skip the test if specific support is not available on the target.\n+\n+@item dg-options\n+The specified options are used for compiling this particular source\n+file, appended to the options from @env{COMPAT_OPTIONS}.  When this\n+command appears in @file{@var{testname}_main.@var{suffix}} the options\n+are also used to link the test program.\n+\n+@item dg-xfail-if\n+This command can be used in a secondary source file to specify that\n+compilation is expected to fail for particular options on particular\n+targets.\n+@end table"}]}