{"sha": "f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZiYmRlMjhjNDc3YzdjNWNiNGQ2YzRkM2U1NjFiMmQ0MjlhZmNjZg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-12-08T03:00:26Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-12-08T03:00:26Z"}, "message": "safe-ctype.h: New file.\n\ninclude:\n\t* safe-ctype.h: New file.\nlibiberty:\n\t* safe-ctype.c: New file.\n\t* Makefile.in (CFILES): Add safe-ctype.c.\n\t(REQUIRED_OFILES): Add safe-ctype.o.\n\n\t* argv.c: Define ISBLANK and use it, not isspace.\n\t* basename.c, cplus-dem.c, fnmatch.c, pexecute.c, strtod.c,\n\tstrtol.c, strtoul.c: Include safe-ctype.h, not ctype.h.  Use\n\tuppercase ctype macros.  Don't test ISUPPER(c)/ISLOWER(c)\n\tbefore calling TOLOWER(c)/TOUPPER(c).\ngcc:\n\t* Makefile.in (HOST_RTL): Add safe-ctype.o.\n\t(safe-ctype.o): New rule.\n\t* system.h: Include safe-ctype.h, not ctype.h.  No need to\n\twrap ctype macros.\n\n\t* cpphash.h: Zap IStable and related macros.  Define is_* in\n\tterms of safe-ctype.h macros.\n\t* cppinit.c: Delete the IStable and all related code.\n\n\t* tradcpp.c: Delete is_idchar, is_idstart, is_hor_space, and\n\tis_space arrays.  Delete initialize_char_syntax.  Change all\n\treferences to the above arrays to use macros instead.\n\t* tradcpp.h: Define is_idchar, is_idstart, is_space, and\n\tis_nvspace in terms of safe_ctype.h's macros.\n\t* tradcif.y: is_idchar, is_idstart are macros not arrays.\n\n\t* config/i370/i370.c, config/winnt/dirent.c,\n\tconfig/winnt/fixinc-nt.c, config/winnt/ld.c:\n\tUse uppercase ctype macros.  If we included ctype.h,\n\tinclude safe-ctype.h instead.\n\n\t* fixinc/fixfixes.c: Use uppercase ctype macros.  Don't test\n\tISLOWER(c) before calling TOUPPER(c).\n\t* fixinc/fixincl.c (extract_quoted_files): Simplify out some gunk.\n\t* fixinc/gnu-regex.c: Include safe-ctype.h, not ctype.h.  No need to\n\twrap ctype macros.  Don't test ISUPPER(x) before calling TOLOWER(x).\ngcc/ch:\n\t* lex.c: Don't bother checking whether ISUPPER(c) before\n\tcalling TOLOWER(c).  Don't bother checking whether isascii(c)\n\tbefore testing ISSPACE(c); ISSPACE(c) includes '\\n'.\ngcc/f:\n\t* Make-lang.in: Link f/fini with safe-ctype.o.\n\t* bad.c: Don't test ISUPPER(c) || ISLOWER(c) before calling TOUPPER(c).\n\t* com.c: Use TOUPPER, not ffesrc_toupper.\n\t* fini.c: Don't test ISALPHA(c) before calling TOUPPER(c)/TOLOWER(c).\n\t* intrin.c: Don't test IN_CTYPE_DOMAIN(c).\n\t* src.c: Delete ffesrc_toupper_ and ffesrc_tolower_ and their\n\tinitializing code; use TOUPPER and TOLOWER instead of\n\tffesrc_toupper and ffesrc_tolower.\n\t* src.h: Don't declare ffesrc_toupper_ or ffesrc_tolower_.\n\tDon't define ffesrc_toupper or ffesrc_tolower.\ngcc/java:\n\t* jvgenmain.c: Use ISPRINT not isascii.\n\nFrom-SVN: r38124", "tree": {"sha": "b03b87c4d027ec11c1f46fa69792393daa187ec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b03b87c4d027ec11c1f46fa69792393daa187ec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/comments", "author": null, "committer": null, "parents": [{"sha": "f3588f1aadd8d52686c3f18f7a07744a33bb4f6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3588f1aadd8d52686c3f18f7a07744a33bb4f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3588f1aadd8d52686c3f18f7a07744a33bb4f6d"}], "stats": {"total": 3215, "additions": 1641, "deletions": 1574}, "files": [{"sha": "ddb54b728fbecdb3c551383833f0a343633d9138", "filename": "gcc/ChangeLog", "status": "modified", "additions": 162, "deletions": 133, "changes": 295, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -1,31 +1,60 @@\n+2000-12-07  Zack Weinberg  <zack@wolery.stanford.edu>\n+\n+\t* Makefile.in (HOST_RTL): Add safe-ctype.o.\n+\t(safe-ctype.o): New rule.\n+\t* system.h: Include safe-ctype.h, not ctype.h.  No need to\n+\twrap ctype macros.\n+\n+\t* cpphash.h: Zap IStable and related macros.  Define is_* in\n+\tterms of safe-ctype.h macros.\n+\t* cppinit.c: Delete the IStable and all related code.\n+\n+\t* tradcpp.c: Delete is_idchar, is_idstart, is_hor_space, and\n+\tis_space arrays.  Delete initialize_char_syntax.  Change all\n+\treferences to the above arrays to use macros instead.\n+\t* tradcpp.h: Define is_idchar, is_idstart, is_space, and\n+\tis_nvspace in terms of safe_ctype.h's macros.\n+\t* tradcif.y: is_idchar, is_idstart are macros not arrays.\n+\n+\t* config/i370/i370.c, config/winnt/dirent.c,\n+\tconfig/winnt/fixinc-nt.c, config/winnt/ld.c:\n+\tUse uppercase ctype macros.  If we included ctype.h,\n+\tinclude safe-ctype.h instead.\n+\n+\t* fixinc/fixfixes.c: Use uppercase ctype macros.  Don't test\n+\tISLOWER(c) before calling TOUPPER(c).\n+\t* fixinc/fixincl.c (extract_quoted_files): Simplify out some gunk.\n+\t* fixinc/gnu-regex.c: Include safe-ctype.h, not ctype.h.  No need to\n+\twrap ctype macros.  Don't test ISUPPER(x) before calling TOLOWER(x).\n+\n 2000-12-07  DJ Delorie  <dj@redhat.com>\n \n \t* c-decl.c (grokdeclarator): preserve previous alignments when\n \trebuilding array types.\n \n 2000-12-07  Neil Booth  <neilb@earthling.net>\n \n-        * cppfiles.c (struct include_file): Move from cpphash.h.\n-        (_cpp_never_reread): New function.\n-        (open_file, read_include_file): Use it.\n-        (stack_include_file): Set the buffer's sysp according to the\n-        path in which the file was found.\n-        (find_include_file): Don't set sysp.\n-        (cpp_make_system_header, actual_directory): Update.\n-        (_cpp_execute_include): Do #include_next lookup handling here,\n-        not in cpplib.c.  Use _cpp_never_reread.\n-        * cpphash.h (struct_include_file): Remove.\n-        (struct cpp_buffer): New member sysp.\n-        (CPP_IN_SYSTEM_HEADER, _cpp_execute_include): Update.\n-        (_cpp_never_reread): New.\n-        * cpplib.c (read_line_number): Rename read_flag.  Rework slightly.\n-        (end_directive): Clear line_extension flag.\n-        (_cpp_handle_directive): Set line_extension flag for #number.\n-        (do_include_next): Handle path lookup in _cpp_execute_include.\n-        (do_line): Cleanup to use read_flag.  Don't allow flags in #line.\n-        (_cpp_do_file_change): Update.\n-        (do_pragma_once): Use cpp_never_reread.  Clean up.\n-        * cpplib.h (struct lexer_state): New member line_extension.\n+\t* cppfiles.c (struct include_file): Move from cpphash.h.\n+\t(_cpp_never_reread): New function.\n+\t(open_file, read_include_file): Use it.\n+\t(stack_include_file): Set the buffer's sysp according to the\n+\tpath in which the file was found.\n+\t(find_include_file): Don't set sysp.\n+\t(cpp_make_system_header, actual_directory): Update.\n+\t(_cpp_execute_include): Do #include_next lookup handling here,\n+\tnot in cpplib.c.  Use _cpp_never_reread.\n+\t* cpphash.h (struct_include_file): Remove.\n+\t(struct cpp_buffer): New member sysp.\n+\t(CPP_IN_SYSTEM_HEADER, _cpp_execute_include): Update.\n+\t(_cpp_never_reread): New.\n+\t* cpplib.c (read_line_number): Rename read_flag.  Rework slightly.\n+\t(end_directive): Clear line_extension flag.\n+\t(_cpp_handle_directive): Set line_extension flag for #number.\n+\t(do_include_next): Handle path lookup in _cpp_execute_include.\n+\t(do_line): Cleanup to use read_flag.  Don't allow flags in #line.\n+\t(_cpp_do_file_change): Update.\n+\t(do_pragma_once): Use cpp_never_reread.  Clean up.\n+\t* cpplib.h (struct lexer_state): New member line_extension.\n \n 2000-12-07  Richard Henderson  <rth@redhat.com>\n \n@@ -39,14 +68,14 @@\n \n 2000-12-07  Neil Booth  <neilb@earthling.net>\n \n-        * c-common.c (parse_in): Make a cpp_reader *.\n-        * cppfiles.c (_cpp_fake_include): Remove.\n-        * cpphash.h: Similarly.\n-        * cpplib.c (do_line): Don't call _cpp_fake_include.  A valid\n-        #line always creates a callback; FC_RENAME if there are no\n-        #line flags.\n-        * fix-header.c (read_scan_file): cpp_push_buffer cannot fail.\n-        The first EOF must be our get_char buffer.\n+\t* c-common.c (parse_in): Make a cpp_reader *.\n+\t* cppfiles.c (_cpp_fake_include): Remove.\n+\t* cpphash.h: Similarly.\n+\t* cpplib.c (do_line): Don't call _cpp_fake_include.  A valid\n+\t#line always creates a callback; FC_RENAME if there are no\n+\t#line flags.\n+\t* fix-header.c (read_scan_file): cpp_push_buffer cannot fail.\n+\tThe first EOF must be our get_char buffer.\n \n 2000-12-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -91,17 +120,17 @@\n \n 2000-12-06      Joel Sherrill <joel@OARcorp.com>\n \n-        * config.gcc (a29k*-*-rtems*, arm*-*-rtems*, c4x-*-rtems*, \n-        h8300-*-rtems*, hppa1.1-*-rtems, *mips*-*-rtems*): New targets.\n-        * config.gcc (*-rtems*): Add support for gthr-rtems.h.\n-        * gthr-rtems.h, config/a29k/rtems.h, config/arm/rtems-elf.h,\n-        config/h8300/rtems.h, config/mips/rtems.h: New files.\n+\t* config.gcc (a29k*-*-rtems*, arm*-*-rtems*, c4x-*-rtems*,\n+\th8300-*-rtems*, hppa1.1-*-rtems, *mips*-*-rtems*): New targets.\n+\t* config.gcc (*-rtems*): Add support for gthr-rtems.h.\n+\t* gthr-rtems.h, config/a29k/rtems.h, config/arm/rtems-elf.h,\n+\tconfig/h8300/rtems.h, config/mips/rtems.h: New files.\n \n 2000-12-06  Mark Kettenis  <kettenis@gnu.org>\n \n \t* config.gcc: Reorganize handling of *-*-gnu*, to share target\n \tspecific make details with Linux.  Update comments to clarify\n-        the distinction between GNU/Linux and GNU/Hurd.\n+\tthe distinction between GNU/Linux and GNU/Hurd.\n \n Wed Dec  6 19:22:02 2000  Jeffrey A Law  (law@cygnus.com)\n \n@@ -163,9 +192,9 @@ Wed Dec  6 21:03:41 2000  J\"orn Rennecke <amylaar@redhat.com>\n \t* final.c (final_addr_vec_align): Fix clipping to BIGGEST_ALIGNMENT.\n \n 2000-12-06  Sylvain Pion  <Sylvain.Pion@sophia.inria.fr>\n-\t  \n-        * cpplex.c (skip_escaped_newlines): Don't warn for spaces between\n-        backslash and newline, when inside a comment.\n+\n+\t* cpplex.c (skip_escaped_newlines): Don't warn for spaces between\n+\tbackslash and newline, when inside a comment.\n \n 2000-12-06  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -200,16 +229,16 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-12-05  Neil Booth  <neilb@earthling.net>\n \n-        * cppfiles.c (stack_include_file): Push zero-length buffers\n-        in case of failure.  Return void, as we don't fail any more.\n-        (read_include_file): Check for files we shouldn't re-read.\n-        Don't return an error code; errors are implied by marking the\n-        file NEVER_REREAD.\n-        (_cpp_execute_include): Move the recursion and in-macro checks\n-        here.  Update for stack_include_file not failing.\n-        * cpplib.c (cpp_push_buffer): Always succeed, since\n-        _cpp_execute_include performs the recursion check.  Tidy up.\n-        * cpplib.h (cpp_push_buffer): Update prototype.\n+\t* cppfiles.c (stack_include_file): Push zero-length buffers\n+\tin case of failure.  Return void, as we don't fail any more.\n+\t(read_include_file): Check for files we shouldn't re-read.\n+\tDon't return an error code; errors are implied by marking the\n+\tfile NEVER_REREAD.\n+\t(_cpp_execute_include): Move the recursion and in-macro checks\n+\there.  Update for stack_include_file not failing.\n+\t* cpplib.c (cpp_push_buffer): Always succeed, since\n+\t_cpp_execute_include performs the recursion check.  Tidy up.\n+\t* cpplib.h (cpp_push_buffer): Update prototype.\n \n 2000-12-05  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -276,7 +305,7 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* config/arm/arm.c (arm_override_options): Test 'insn_flags' not\n \t'tune_flags' for XScale nature.\n-\tRemove spurious test of HARD_FLOAT and XScale flags. \n+\tRemove spurious test of HARD_FLOAT and XScale flags.\n \n \t* config/arm/arm.md (umulsidi3adddi): Restore \"=&r\" register\n \tcontraint, accidentally changed during XScale contribution.\n@@ -294,13 +323,13 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-12-04  Neil Booth  <neilb@earthling.net>\n \n-        * tradcif.y: Move lexptr to top of file.  Add rule to handle\n-        assertions in conditional expressions.\n-        * tradcpp.c (parse_answer): Assertions do not need to go to\n-        end of line in conditional directives.\n-        (parse_assertion): Get first character of identifiers correct.\n-        (test_assertion): New function.\n-        * tradcpp.h (test_assertion): New prototype.\n+\t* tradcif.y: Move lexptr to top of file.  Add rule to handle\n+\tassertions in conditional expressions.\n+\t* tradcpp.c (parse_answer): Assertions do not need to go to\n+\tend of line in conditional directives.\n+\t(parse_assertion): Get first character of identifiers correct.\n+\t(test_assertion): New function.\n+\t* tradcpp.h (test_assertion): New prototype.\n \n 2000-12-01  Rodney Brown  <RodneyBrown@mynd.com>\n \n@@ -339,19 +368,19 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-12-04  Neil Booth  <neilb@earthling.net>\n \n-        * cppinternals.texi: New file.\n+\t* cppinternals.texi: New file.\n \n 2000-12-04  Neil Booth  <neilb@earthling.net>\n \n-        * cppfiles.c (cpp_make_system_header): Take 2 booleans,\n-        and operate on current buffer.\n-        (cpp_read_file): Rename _cpp_read_file.  \n-        * cpplib.c (do_line, do_pragma_system_header): Update calls to\n-        cpp_make_system_header.\n-        * fix-header.c: Similarly.\n-        * cpphash.h (_cpp_read_file): Move from... \n-        * cpplib.h: ... here.\n-        * cppinit.c (do_includes, cpp_start_read): Update appropriately.\n+\t* cppfiles.c (cpp_make_system_header): Take 2 booleans,\n+\tand operate on current buffer.\n+\t(cpp_read_file): Rename _cpp_read_file.\n+\t* cpplib.c (do_line, do_pragma_system_header): Update calls to\n+\tcpp_make_system_header.\n+\t* fix-header.c: Similarly.\n+\t* cpphash.h (_cpp_read_file): Move from...\n+\t* cpplib.h: ... here.\n+\t* cppinit.c (do_includes, cpp_start_read): Update appropriately.\n \n 2000-12-03  Kaveh R. Ghazi  <ghazi@teal.rutgers.edu>\n \n@@ -466,9 +495,9 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n 2000-12-03  Laurynas Biveinis  <lauras@softhome.net>\n \t    Bruce Korb  <bkorb@gnu.org>\n \n-        * Makefile.in: pass $(build_canonical) to mkfixinc.sh.\n-        * fixinc/mkfixinc.sh: accept build system name as an argument.\n-        Use it for choosing the fix build method.  Use the target for\n+\t* Makefile.in: pass $(build_canonical) to mkfixinc.sh.\n+\t* fixinc/mkfixinc.sh: accept build system name as an argument.\n+\tUse it for choosing the fix build method.  Use the target for\n \tselecting special fix rules.\n \n 2000-12-03  Bernd Schmidt  <bernds@redhat.co.uk>\n@@ -553,11 +582,11 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-12-03  Neil Booth  <neilb@earthling.net>\n \n-        * cppmacro.c (funlike_invocation_p): Re-disable macros enabled\n-        by contexts drops AFTER argument pre-expansion, so that they\n-        remain enabled during argument pre-expansion.\n-        (_cpp_pop_context): Unconditionally re-enable a macro when\n-        dropping a context level.\n+\t* cppmacro.c (funlike_invocation_p): Re-disable macros enabled\n+\tby contexts drops AFTER argument pre-expansion, so that they\n+\tremain enabled during argument pre-expansion.\n+\t(_cpp_pop_context): Unconditionally re-enable a macro when\n+\tdropping a context level.\n \n 2000-12-03  Manfred Hollstein  <manfredh@redhat.com>\n \n@@ -579,7 +608,7 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* c-common.c (c_common_nodes_and_builtins): Declare builtin\n \tstrcat, strncat, strspn and strcspn.\n-\t(string_ftype_string_cstring): Renamed from `string_ftype_ptr_ptr'. \n+\t(string_ftype_string_cstring): Renamed from `string_ftype_ptr_ptr'.\n \n \t* extend.texi (strcat, strcspn, strncat, strspn): Document new\n \tbuiltins.\n@@ -608,16 +637,16 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \t(do_ifndef): Likewise.\n \n 2000-12-02  Daniel Berlin  <dberlin@redhat.com>\n-            Bruce Korb  <bkorb@gnu.org>\n+\t    Bruce Korb  <bkorb@gnu.org>\n \n-        * fixinc/*: global substitute /__MSDOS__/SEPARATE_FIX_PROC/\n-        * fixinc/mkfixinc.sh: prepare to use Makefile.BEOS for *-*-beos*\n-        * fixinc/Makefile.DOS: define SEPARATE_FIX_PROC for build\n-        * fixinc/fixfix.c(wrap_fix): avoid wrapping files that\n-        use the \"__need_\" hackery.  It breaks them.\n-        * fixinc/fixincl.c(process - SEPARATE_FIX_PROC):\n-        Sometimes on DOS and BeOS the temp output file cannot be opened.\n-        Skip the file noisily.  Ought to be fixed instead.\n+\t* fixinc/*: global substitute /__MSDOS__/SEPARATE_FIX_PROC/\n+\t* fixinc/mkfixinc.sh: prepare to use Makefile.BEOS for *-*-beos*\n+\t* fixinc/Makefile.DOS: define SEPARATE_FIX_PROC for build\n+\t* fixinc/fixfix.c(wrap_fix): avoid wrapping files that\n+\tuse the \"__need_\" hackery.  It breaks them.\n+\t* fixinc/fixincl.c(process - SEPARATE_FIX_PROC):\n+\tSometimes on DOS and BeOS the temp output file cannot be opened.\n+\tSkip the file noisily.  Ought to be fixed instead.\n \n 2000-12-02  Bruce Korb  <bkorb@gnu.org>\n \n@@ -673,10 +702,10 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-12-02  Neil Booth  <neilb@earthling.net>\n \n-        * tradcpp.c (struct answer, parse_assertion, parse_answer,\n-        canonicalize_text, find_answer): New.\n-        (do_assert, do_unassert): Provide appropriate function bodies.\n-        (union hashval): New member answers.\n+\t* tradcpp.c (struct answer, parse_assertion, parse_answer,\n+\tcanonicalize_text, find_answer): New.\n+\t(do_assert, do_unassert): Provide appropriate function bodies.\n+\t(union hashval): New member answers.\n \n 2000-11-23  Marek Michalkiewicz  <marekm@linux.org.pl>\n \n@@ -703,7 +732,7 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-12-02  Neil Booth  <neilb@earthling.net>\n \n-        * cppexp.c (parse_number): Update diagnostic test.\n+\t* cppexp.c (parse_number): Update diagnostic test.\n \n 2000-12-02  Bernd Schmidt  <bernds@redhat.co.uk>\n \n@@ -720,7 +749,7 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* install.texi (Installation): Remove obsolete description for\n \tlibstdc++ which is now an integral part of GCC.\n-\t\n+\n 2000-12-01  Jim Blandy  <jimb@redhat.com>\n \n \t* dbxout.c (dbxout_parms): Correctly describe parameters passed by\n@@ -794,19 +823,19 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-12-01  Neil Booth  <neilb@earthling.net>\n \n-        * cppinit.c (initialize): Forgotten prototype.\n-        * cpplex.c (_cpp_lex_token): Loop until not skipping.\n-        Always clear PREV_WHITE upon meeting a new line.\n-        * cpplib.c (end_directive): Set pfile->skipping after\n-        skip_rest_of_line.\n-        * cpplib.h (cpp_reader): Remove macro_pos.\n-        * cppmacro.c (cpp_get_line): Don't do anything special inside\n-        macros.  \n-        (parse_arg): Add PREV_WHITE if a token appears after new lines.\n-        (funlike_invocation_p): Save and restore the output position\n-        over a successful check for a '('.\n-        (enter_macro_context): Delete uses of macro_pos.\n-        (cpp_get_token): Don't use pfile->skipping.\n+\t* cppinit.c (initialize): Forgotten prototype.\n+\t* cpplex.c (_cpp_lex_token): Loop until not skipping.\n+\tAlways clear PREV_WHITE upon meeting a new line.\n+\t* cpplib.c (end_directive): Set pfile->skipping after\n+\tskip_rest_of_line.\n+\t* cpplib.h (cpp_reader): Remove macro_pos.\n+\t* cppmacro.c (cpp_get_line): Don't do anything special inside\n+\tmacros.\n+\t(parse_arg): Add PREV_WHITE if a token appears after new lines.\n+\t(funlike_invocation_p): Save and restore the output position\n+\tover a successful check for a '('.\n+\t(enter_macro_context): Delete uses of macro_pos.\n+\t(cpp_get_token): Don't use pfile->skipping.\n \n 2000-12-01  Phil Edwards  <pme@sources.redhat.com>\n \n@@ -912,15 +941,15 @@ Tue Dec  5 20:09:14 2000  Jeffrey A Law  (law@cygnus.com)\n \tthe tail recursion sequence.\n \n 2000-11-30  J. David Anglin  <dave.anglin@nrc.ca>\n-            Bruce Korb  <bkorb@gnu.org>\n+\t    Bruce Korb  <bkorb@gnu.org>\n \n \t* fixinc/inclhack.def(): prevent dual double definition protection\n \t* fixinc/fixincl.x: regenerate\n \n 2000-11-29  Loren J. Rittle  <ljrittle@acm.org>\n \n-        * fixinc/Makefile.in (fixincl.x): Explicitly state the\n-        location of the generated file.\n+\t* fixinc/Makefile.in (fixincl.x): Explicitly state the\n+\tlocation of the generated file.\n \n 2000-11-30  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n@@ -949,12 +978,12 @@ Thu Nov 30 01:12:52 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-11-30  Neil Booth  <neilb@earthling.net>\n \n-        * objc/objc-act.c (lang_init, finish_file, maybe_objc_comptypes,\n-        maybe_objc_check_decl, build_objc_string_object,\n-        objc_declare_alias, objc_declare_class, build_message_expr,\n-        build_protocol_expr, build_selector_expr, build_encode_expr,\n-        get_class_ivars, start_class, start_protocol): Remove\n-        redundant code, assuming doing_objc_thang is true.\n+\t* objc/objc-act.c (lang_init, finish_file, maybe_objc_comptypes,\n+\tmaybe_objc_check_decl, build_objc_string_object,\n+\tobjc_declare_alias, objc_declare_class, build_message_expr,\n+\tbuild_protocol_expr, build_selector_expr, build_encode_expr,\n+\tget_class_ivars, start_class, start_protocol): Remove\n+\tredundant code, assuming doing_objc_thang is true.\n \n 2000-11-29  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n@@ -1048,10 +1077,10 @@ Thu Nov 30 01:12:52 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-11-29  Neil Booth  <neilb@earthling.net>\n \n-        * c-decl.c (c_decode_option): Don't handle -lang-objc.\n-        * objc/lang-options.h: Remove -lang-objc.\n-        * objc/lang-specs.h: Don't pass -lang-objc to cc1obj.\n-        * objc/objc-act.c (lang_init_options): Set c_language.\n+\t* c-decl.c (c_decode_option): Don't handle -lang-objc.\n+\t* objc/lang-options.h: Remove -lang-objc.\n+\t* objc/lang-specs.h: Don't pass -lang-objc to cc1obj.\n+\t* objc/objc-act.c (lang_init_options): Set c_language.\n \n 2000-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -1060,7 +1089,7 @@ Thu Nov 30 01:12:52 2000  Jeffrey A Law  (law@cygnus.com)\n \n 2000-11-29  Neil Booth  <neilb@earthling.net>\n \n-        * c-pragma.c (init_pragma): Update for parse_in type change.\n+\t* c-pragma.c (init_pragma): Update for parse_in type change.\n \n 2000-11-29  Laurynas Biveinis  <lauras@softhome.net>\n \n@@ -1129,8 +1158,8 @@ Wed Nov 29 00:08:23 2000  J\"orn Rennecke <amylaar@redhat.com>\n 2000-11-28  Neil Booth  <neilb@earthling.net>\n \n \t* c-common.h: Remove flag_digraphs.\n-\t* c-decl.c: Remove flag_digraphs.  \n-\t(c_decode_option): Don't set it. \n+\t* c-decl.c: Remove flag_digraphs.\n+\t(c_decode_option): Don't set it.\n \t* c-lex.c (init_c_lex): Don't do anything for digraphs.\n \n 2000-11-28  Richard Henderson  <rth@redhat.com>\n@@ -1246,7 +1275,7 @@ Tue Nov 28 09:53:50 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-11-27  Neil Booth  <neilb@earthling.net>\n \n-\t* cppinit.c (cpp_reader_init): Remove handling of warn_paste   \n+\t* cppinit.c (cpp_reader_init): Remove handling of warn_paste\n \tcommand line options.\n \t(cpp_handle_option): Similarly.\n \t* cpplib.h (struct cpp_options): Remove warn_paste.\n@@ -1300,7 +1329,7 @@ Mon Nov 27 17:22:56 MET 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* arm.md (arm_adddi3, adddi_sesidi_di, adddi_zesidi_di, arm_addsi3,\n \tarm_subsi3_insn, anddi_zesidi_di, arm_andsi3_insn, anddi_notdi_di,\n-\tanddi_notzesidi_di, anddi_notsesidi_di, arm_iorsi3, \n+\tanddi_notzesidi_di, anddi_notsesidi_di, arm_iorsi3,\n \tone_cmpldi2): Merge with splitters to create define_insn_and_split\n  \tpatterns.  Remove redundant splits.\n \t(peephole2 for add:SI of invalid immediate): New.\n@@ -1427,7 +1456,7 @@ Mon Nov 27 17:22:56 MET 2000  Jan Hubicka  <jh@suse.cz>\n \t* cpplib.h (struct cpp_reader): Remove lang_asm.\n \t(struct cpp_options): Remove c89. New members lang,\n \textended_numbers.\n-\t* cppexp.c (parse_number): Use them. \n+\t* cppexp.c (parse_number): Use them.\n \t* cpphash.h (VALID_SIGN): Use them.\n \t* cppinit.c (set_lang, cpp_start_read): Update.\n \t* cpplex.c (parse_string, _cpp_lex_token): Update.\n@@ -1600,7 +1629,7 @@ Sun Nov 26 10:02:37 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n 2000-11-24  Nick Clifton  <nickc@redhat.com>\n \n \t* config.gcc (v850-*-*): Define c_target_objs and\n-        cxx_target_objs.\n+\tcxx_target_objs.\n \n \t* config/v850/t-v850: Define how to build v850-c.o\n \n@@ -1632,7 +1661,7 @@ Sun Nov 26 10:02:37 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* config.gcc (extra_objs): Remove duplicate description.\n \t(c_target_objs): New variable.  Contains target specific\n \tobject files for the gcc C compiler only.\n-\t(cxx_target_objs): New variable.  Contains target specific \n+\t(cxx_target_objs): New variable.  Contains target specific\n \tobject files for the gxx C++ compiler only.\n \n \t* configure.in (c_target_objs): Substitute in the makefile.\n@@ -1681,7 +1710,7 @@ Fri Nov 24 22:37:41 2000  Denis Chertykov  <denisc@overta.ru>\n \t* config/avr/avr.c (out_tsthi,out_tstsi): Test simplification bug\n \tfixed.\n \t(machine_dependent_reorg): Wrong optimization based on\n-\tNOTICE_UPDATE_CC removed. \n+\tNOTICE_UPDATE_CC removed.\n \n Fri Nov 24 19:48:09 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n@@ -1824,19 +1853,19 @@ Thu Nov 23 01:01:32 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* cpplex.c (trigraph_ok): Ensure we don't warn twice.\n \t* cpplib.h (struct cpp_buffer): New member last_Wtrigraphs.\n-\t\n+\n 2000-11-22  Richard Henderson  <rth@redhat.com>\n \n \t* haifa-sched.c (sched_analyze_1): Don't special-case calls\n \tfor clobbering registers.\n \t(sched_analyze_2): Likewise.\n \t(sched_analyze): Zap reg_last_uses and reg_last_sets after calls.\n \n-2000-11-22  Chris Demetriou  <cgd@sibyte.com>  \n+2000-11-22  Chris Demetriou  <cgd@sibyte.com>\n \t    Neil Booth  <neilb@earthling.net>\n \n \t* gcc.c (validate_switches): Validate multiple switches named\n-\tin '|' (or) expressions in specs.  \n+\tin '|' (or) expressions in specs.\n \t(handle_braces): If more than 1 alternative in a '|' spec\n \tmatches, call do_spec1 just once.\n \n@@ -1846,7 +1875,7 @@ Thu Nov 23 01:01:32 2000  J\"orn Rennecke <amylaar@redhat.com>\n \t(TARGET_OPTIONS): Ditto.\n \t(OPTIMIZATION_OPTIONS): Temporarily turn off -frename-registers if\n \t-O3.\n-\t\n+\n Wed Nov 22 06:40:56 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* pa.c (hppa_encode_label): Account for addition of encoding\n@@ -1924,7 +1953,7 @@ Wed Nov 22 00:52:55 2000  J\"orn Rennecke <amylaar@redhat.com>\n \tTARGET_CPU_strongarm110 and TARGET_SPU_strongarm1100.\n \n \t* config.gcc: Accept --with-cpu=arm9 and --with-cpu=arm9tdmi.\n-\t\n+\n 2000-11-21  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (c_unsafe_for_reeval): New function.\n@@ -1955,7 +1984,7 @@ Wed Nov 22 00:52:55 2000  J\"orn Rennecke <amylaar@redhat.com>\n \t(all insn patterns): Use itanium_class, not type attributes.\n \tOccasionally split alternatives as necessary.\n \t(attr type): Compute from new attr itanium_class.\n-\t\n+\n 2000-11-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* tradcpp.c (output_line_command): Mark system headers as such in\n@@ -2102,7 +2131,7 @@ Wed Nov 22 00:52:55 2000  J\"orn Rennecke <amylaar@redhat.com>\n \t* ssa.c (ssa_rename_from_hash_function): Avoid needlessly casting\n \taway const-ness.\n \t* tradcpp.c (rescan, do_line, macroexpand, macarg): Use\n-\tISALNUM/ISDIGIT/ISPRINT, not isalnum/isdigit/isprint. \n+\tISALNUM/ISDIGIT/ISPRINT, not isalnum/isdigit/isprint.\n \t* varasm.c (const_str_htab_hash, const_str_htab_eq,\n \tcompare_constant_1, record_constant_1): Constify.\n \n@@ -2180,7 +2209,7 @@ Wed Nov 22 00:52:55 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-11-17  Jim Wilson  <wilson@redhat.com>\n \n-\t* config/ia64/ia64.c (emit_insn_group_barriers, case CALL_INSN): \n+\t* config/ia64/ia64.c (emit_insn_group_barriers, case CALL_INSN):\n \tDon't clear need_barrier is next_insn is a CALL_INSN, or has\n \tinstruction type B or UNKNOWN.\n "}, {"sha": "003e02082bb747ed5e9701e5704fb340cfdeef9d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -627,7 +627,7 @@ HOST_LIBS = $(USE_HOST_OBSTACK) $(USE_HOST_ALLOCA) $(USE_HOST_MALLOC)  \\\n \t    $(USE_HOST_VFPRINTF) $(USE_HOST_DOPRINT) $(HOST_CLIB)\n \n HOST_RTL = $(HOST_PREFIX)rtl.o $(HOST_PREFIX)bitmap.o \\\n-\t\t$(HOST_PREFIX)ggc-none.o gensupport.o hashtab.o\n+\t\t$(HOST_PREFIX)ggc-none.o gensupport.o hashtab.o safe-ctype.o\n \n HOST_PRINT = $(HOST_PREFIX)print-rtl.o\n HOST_ERRORS = $(HOST_PREFIX)errors.o\n@@ -1672,6 +1672,11 @@ hashtab.o: $(srcdir)/../libiberty/hashtab.c $(GCONFIG_H)\n \t$(LN_S) $(srcdir)/../libiberty/hashtab.c hashtab.c\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) hashtab.c\n \n+safe-ctype.o: $(srcdir)/../libiberty/safe-ctype.c $(GCONFIG_H)\n+\trm -f safe-ctype.c\n+\t$(LN_S) $(srcdir)/../libiberty/safe-ctype.c safe-ctype.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) safe-ctype.c\n+\n genconfig : genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t  genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)"}, {"sha": "5691da59beac0339cc80c36d3abdba59f7c4ef73", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 587, "deletions": 581, "changes": 1168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf"}, {"sha": "f747bef570a7b4b075072aa47b493f06149780ec", "filename": "gcc/ch/lex.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fch%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fch%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Flex.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -889,8 +889,7 @@ maybe_downcase (str)\n     return;\n   while (*str)\n     {\n-      if (ISUPPER ((unsigned char) *str))\n-\t*str = TOLOWER (*str);\n+      *str = TOLOWER (*str);\n       str++;\n     }\n }\n@@ -1526,9 +1525,9 @@ handle_generic_pragma (buffer)\n \t  * buff ++ = c;\n \t  c = getc (finput);\n \t}\n-      while (c != EOF && isascii (c) && ! ISSPACE (c) && c != '\\n'\n-\t     && buff < buffer + 128); /* XXX shared knowledge about size of buffer.  */\n-      \n+      while (c != EOF && ! ISSPACE (c) && buff < buffer + 128);\n+        /* XXX shared knowledge about size of buffer.  */\n+\n       ungetc (c, finput);\n       \n       * -- buff = 0;"}, {"sha": "2db1a01b9fc8e150cc5c808d8bfd91ce2f485efd", "filename": "gcc/config/i370/i370.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fconfig%2Fi370%2Fi370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fconfig%2Fi370%2Fi370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -906,19 +906,19 @@ mvs_need_alias (realname)\n      return 1;\n    if (strchr (realname, '_') != 0)\n      return 1;\n-   if (isupper (realname[0]))\n+   if (ISUPPER (realname[0]))\n      {\n        for (i = 1; i < j; i++)\n \t {\n-\t   if (islower (realname[i]))\n+\t   if (ISLOWER (realname[i]))\n \t     return 1;\n \t }\n      }\n    else\n      {\n        for (i = 1; i < j; i++)\n          {\n-\t   if (isupper (realname[i]))\n+\t   if (ISUPPER (realname[i]))\n \t     return 1;\n \t }\n      }\n@@ -951,9 +951,9 @@ mvs_get_alias (realname, aliasname)\n \n       c1 = realname[0];\n       c2 = realname[1];\n-      if (islower (c1)) c1 = toupper (c1);\n+      if (ISLOWER (c1)) c1 = TOUPPER (c1);\n       else if (c1 == '_') c1 = 'A';\n-      if (islower (c2)) c2 = toupper (c2);\n+      if (ISLOWER (c2)) c2 = TOUPPER (c2);\n       else if (c2 == '_' || c2 == '\\0') c2 = '#';\n \n       sprintf (aliasname, \"%c%c%06d\", c1, c2, mvs_hash_alias (realname));\n@@ -998,9 +998,9 @@ mvs_check_alias (realname, aliasname)\n \n       c1 = realname[0];\n       c2 = realname[1];\n-      if (islower (c1)) c1 = toupper (c1);\n+      if (ISLOWER (c1)) c1 = TOUPPER (c1);\n       else if (c1 == '_') c1 = 'A';\n-      if (islower (c2)) c2 = toupper (c2);\n+      if (ISLOWER (c2)) c2 = TOUPPER (c2);\n       else if (c2 == '_' || c2 == '\\0') c2 = '#';\n \n       sprintf (aliasname, \"%c%c%06d\", c1, c2, mvs_hash_alias (realname));"}, {"sha": "f20e1f7d597edf50d7bd2e66556f5a35939ca90b", "filename": "gcc/config/winnt/dirent.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fconfig%2Fwinnt%2Fdirent.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fconfig%2Fwinnt%2Fdirent.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt%2Fdirent.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -23,7 +23,7 @@\n \n #include <string.h>\n #include <limits.h>\n-#include <ctype.h>\n+#include <safe-ctype.h>\n #include <errno.h>\n #include <dirent.h>\n \n@@ -332,8 +332,8 @@ IsHPFSFileSystem (directory)\n     unsigned int\tnDrive;\n     char\t\tszCurDir [MAX_PATH];\n \n-    if (isalpha (directory[0]) && (directory[1] == ':'))\n-\tnDrive = toupper (directory[0]) - '@';\n+    if (ISALPHA (directory[0]) && (directory[1] == ':'))\n+\tnDrive = TOUPPER (directory[0]) - '@';\n \n     else\n     {"}, {"sha": "f7e1a35d09417990b9847bb4443bc3e5820d0158", "filename": "gcc/config/winnt/fixinc-nt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fconfig%2Fwinnt%2Ffixinc-nt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fconfig%2Fwinnt%2Ffixinc-nt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt%2Ffixinc-nt.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -64,7 +64,7 @@ newname (olddirname)\n   char *newname = strdup (olddirname);\n \n   if ((strlen (newname) >= 2)\n-      && (isalpha (newname[0]) && newname[1] == ':'))\n+      && (ISALPHA (newname[0]) && newname[1] == ':'))\n     newname [1] = '-';\n   else if ((strlen (newname) >= 1) \n            && (newname [0] == '/' || newname [0] == '\\\\'))"}, {"sha": "b02d1ede2295c9e1af8579b3df02b912afaa330d", "filename": "gcc/config/winnt/ld.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fconfig%2Fwinnt%2Fld.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fconfig%2Fwinnt%2Fld.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt%2Fld.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -86,7 +86,7 @@ locate_file (file_name, path_val)\n \n   /* Handle absolute pathnames */\n   if (file_name [0] == '/' || file_name [0] == DIR_SEPARATOR\n-      || isalpha (file_name [0]) && file_name [1] == ':')\n+      || ISALPHA (file_name [0]) && file_name [1] == ':')\n     {\n       strncpy (buf, file_name, sizeof buf);\n       buf[sizeof buf - 1] = '\\0';"}, {"sha": "e27290aca5117f18f7645a91b08df07f09254ef2", "filename": "gcc/cpphash.h", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -135,39 +135,30 @@ struct cpp_buffer\n   unsigned char sysp;\n };\n \n-/* Character classes.\n+/* Character classes.  Based on the more primitive macros in safe-ctype.h.\n    If the definition of `numchar' looks odd to you, please look up the\n    definition of a pp-number in the C standard [section 6.4.8 of C99].\n \n    In the unlikely event that characters other than \\r and \\n enter\n    the set is_vspace, the macro handle_newline() in cpplex.c must be\n    updated.  */\n-#define ISidnum\t\t0x01\t/* a-zA-Z0-9_ */\n-#define ISidstart\t0x02\t/* _a-zA-Z */\n-#define ISnumstart\t0x04\t/* 0-9 */\n-#define IShspace\t0x08\t/* ' ' \\t */\n-#define ISvspace\t0x10\t/* \\r \\n */\n-#define ISspace\t\t0x20\t/* ' ' \\t \\r \\n \\f \\v \\0 */\n-\n #define _dollar_ok(x)\t((x) == '$' && CPP_OPTION (pfile, dollars_in_ident))\n \n-#define is_idchar(x)\t((_cpp_IStable[x] & ISidnum) || _dollar_ok(x))\n-#define is_idstart(x)\t((_cpp_IStable[x] & ISidstart) || _dollar_ok(x))\n-#define is_numchar(x)\t(_cpp_IStable[x] & ISidnum)\n-#define is_numstart(x)\t(_cpp_IStable[x] & ISnumstart)\n-#define is_hspace(x)\t(_cpp_IStable[x] & IShspace)\n-#define is_vspace(x)\t(_cpp_IStable[x] & ISvspace)\n-#define is_nvspace(x)\t((_cpp_IStable[x] & (ISspace | ISvspace)) == ISspace)\n-#define is_space(x)\t(_cpp_IStable[x] & ISspace)\n+#define is_idchar(x)\t(ISIDNUM(x) || _dollar_ok(x))\n+#define is_numchar(x)\tISIDNUM(x)\n+#define is_idstart(x)\t(ISIDST(x) || _dollar_ok(x))\n+#define is_numstart(x)\tISDIGIT(x)\n+#define is_hspace(x)\tISBLANK(x)\n+#define is_vspace(x)\tIS_VSPACE(x)\n+#define is_nvspace(x)\tIS_NVSPACE(x)\n+#define is_space(x)\tIS_SPACE_OR_NUL(x)\n \n-/* These tables are constant if they can be initialized at compile time,\n+/* This table is constant if it can be initialized at compile time,\n    which is the case if cpp was compiled with GCC >=2.7, or another\n    compiler that supports C99.  */\n #if HAVE_DESIGNATED_INITIALIZERS\n-extern const unsigned char _cpp_IStable[UCHAR_MAX + 1];\n extern const unsigned char _cpp_trigraph_map[UCHAR_MAX + 1];\n #else\n-extern unsigned char _cpp_IStable[UCHAR_MAX + 1];\n extern unsigned char _cpp_trigraph_map[UCHAR_MAX + 1];\n #endif\n "}, {"sha": "9bed926aacbf7418e71ebd6432513c93ac90e330", "filename": "gcc/cppinit.c", "status": "modified", "additions": 2, "deletions": 43, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -125,9 +125,6 @@ enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };\n    runtime.  */\n #if HAVE_DESIGNATED_INITIALIZERS\n \n-#define init_IStable()  /* Nothing.  */\n-#define ISTABLE __extension__ const U_CHAR _cpp_IStable[UCHAR_MAX + 1] = {\n-\n #define init_trigraph_map()  /* Nothing.  */\n #define TRIGRAPH_MAP \\\n __extension__ const U_CHAR _cpp_trigraph_map[UCHAR_MAX + 1] = {\n@@ -137,10 +134,6 @@ __extension__ const U_CHAR _cpp_trigraph_map[UCHAR_MAX + 1] = {\n \n #else\n \n-#define ISTABLE unsigned char _cpp_IStable[UCHAR_MAX + 1] = { 0 }; \\\n- static void init_IStable PARAMS ((void)) { \\\n- unsigned char *x = _cpp_IStable;\n-\n #define TRIGRAPH_MAP U_CHAR _cpp_trigraph_map[UCHAR_MAX + 1] = { 0 }; \\\n  static void init_trigraph_map PARAMS ((void)) { \\\n  unsigned char *x = _cpp_trigraph_map;\n@@ -150,45 +143,13 @@ __extension__ const U_CHAR _cpp_trigraph_map[UCHAR_MAX + 1] = {\n \n #endif\n \n-#define A(x) s(x, ISidnum|ISidstart)\n-#define N(x) s(x, ISidnum|ISnumstart)\n-#define H(x) s(x, IShspace|ISspace)\n-#define V(x) s(x, ISvspace|ISspace)\n-#define S(x) s(x, ISspace)\n-\n-ISTABLE\n-  A('_')\n-\n-  A('a') A('b') A('c') A('d') A('e') A('f') A('g') A('h') A('i')\n-  A('j') A('k') A('l') A('m') A('n') A('o') A('p') A('q') A('r')\n-  A('s') A('t') A('u') A('v') A('w') A('x') A('y') A('z')\n-\n-  A('A') A('B') A('C') A('D') A('E') A('F') A('G') A('H') A('I')\n-  A('J') A('K') A('L') A('M') A('N') A('O') A('P') A('Q') A('R')\n-  A('S') A('T') A('U') A('V') A('W') A('X') A('Y') A('Z')\n-\n-  N('1') N('2') N('3') N('4') N('5') N('6') N('7') N('8') N('9') N('0')\n-\n-  H(' ') H('\\t')\n-\n-  V('\\n') V('\\r')\n-\n-  S('\\0') S('\\v') S('\\f')\n-END\n-\n TRIGRAPH_MAP\n   s('=', '#')\ts(')', ']')\ts('!', '|')\n   s('(', '[')\ts('\\'', '^')\ts('>', '}')\n   s('/', '\\\\')\ts('<', '{')\ts('-', '~')\n END\n \n-#undef A\n-#undef N\n-#undef H\n-#undef V\n-#undef S\n #undef s\n-#undef ISTABLE\n #undef END\n #undef TRIGRAPH_MAP\n \n@@ -507,11 +468,9 @@ initialize ()\n   qsort (cl_options, N_OPTS, sizeof (struct cl_option), opt_comp);\n #endif\n \n-  /* Set up the trigraph map and the IStable.  These don't need to do\n-     anything if we were compiled with a compiler that supports C99\n-     designated initializers.  */\n+  /* Set up the trigraph map.  This doesn't need to do anything if we were\n+     compiled with a compiler that supports C99 designated initializers.  */\n   init_trigraph_map ();\n-  init_IStable ();\n \n   initialized = 1;\n }"}, {"sha": "3087b75e43998fe1eb6d3b46c04e6b8dc6b58eb1", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -1,3 +1,16 @@\n+2000-12-07  Zack Weinberg  <zack@wolery.stanford.edu>\n+\n+\t* Make-lang.in: Link f/fini with safe-ctype.o.\n+\t* bad.c: Don't test ISUPPER(c) || ISLOWER(c) before calling TOUPPER(c).\n+\t* com.c: Use TOUPPER, not ffesrc_toupper.\n+\t* fini.c: Don't test ISALPHA(c) before calling TOUPPER(c)/TOLOWER(c).\n+\t* intrin.c: Don't test IN_CTYPE_DOMAIN(c).\n+\t* src.c: Delete ffesrc_toupper_ and ffesrc_tolower_ and their\n+\tinitializing code; use TOUPPER and TOLOWER instead of\n+\tffesrc_toupper and ffesrc_tolower.\n+\t* src.h: Don't declare ffesrc_toupper_ or ffesrc_tolower_.\n+\tDon't define ffesrc_toupper or ffesrc_tolower.\n+\n 2000-11-28  Richard Henderson  <rth@redhat.com>\n \n \t* com.c (ffecom_member_phase2_): Set TREE_USED on the debugging decl.\n@@ -35,11 +48,11 @@ Thu Nov 23 02:18:57 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n Sun Nov 19 17:29:22 2000  Matthias Klose  <doko@marvin.itso-berlin.de>\n \n-        * g77.texi (Floating-point precision): Adjust example\n-        to work with glibc (>= 2.1).\n+\t* g77.texi (Floating-point precision): Adjust example\n+\tto work with glibc (>= 2.1).\n+\n+Sat Nov 18 13:54:49 2000  Matthias Klose  <doko@cs.tu-berlin.de>\n \n-Sat Nov 18 13:54:49 2000  Matthias Klose  <doko@cs.tu-berlin.de> \n- \n \t* g77.texi (Floating-point Exception Handling): Adjust\n \texample to work with glibc (>= 2.1).\n \n@@ -149,7 +162,7 @@ Thu Oct 12 22:28:51 2000  Mark Mitchell  <mark@codesourcery.com>\n \t(ffeste_R842): Likewise.\n \t(ffeste_R843): Likewise.\n \t(ffeste_R1001): Likewise.\n-\t\n+\n 2000-10-05  Richard Henderson  <rth@cygnus.com>\n \n \t* com.c (finish_function): Don't init can_reach_end.\n@@ -188,9 +201,9 @@ Sun Oct  1 11:43:44 2000  Mark Mitchell  <mark@codesourcery.com>\n \t* intrin.def: Adjust DEFIMP definition of LOG10, (float) MOD.\n \n 2000-08-21  Nix  <nix@esperi.demon.co.uk>\n-        \n-        * lang-specs.h: Do not process -o or run the assembler if\n-        -fsyntax-only.  Use %j instead of /dev/null.\n+\n+\t* lang-specs.h: Do not process -o or run the assembler if\n+\t-fsyntax-only.  Use %j instead of /dev/null.\n \n 2000-08-21  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -210,7 +223,7 @@ Sun Oct  1 11:43:44 2000  Mark Mitchell  <mark@codesourcery.com>\n \t* news.texi: Ditto.\n \n 2000-08-11  G. Helffrich  <george@gly.bris.ac.uk>\n-            Toon Moene  <toon@moene.indiv.nluug.nl>\n+\t    Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* com.c (ffecom_transform_equiv_): Make EQUIVALENCEs addressable\n \tso that debug info can be attached to their storage."}, {"sha": "6af053630d94753937854795480418fa7f914072", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -137,9 +137,9 @@ f/str-op.h f/str-op.j: f/fini$(build_exeext) f/str-op.fin\n f/str-ot.h f/str-ot.j: f/fini$(build_exeext) f/str-ot.fin\n \t./f/fini$(build_exeext) $(srcdir)/f/str-ot.fin f/str-ot.j f/str-ot.h\n \n-f/fini$(build_exeext): f/fini.o f/proj-h.o\n+f/fini$(build_exeext): f/fini.o f/proj-h.o safe-ctype.o\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o f/fini$(build_exeext) \\\n-\t\tf/fini.o f/proj-h.o\n+\t\tf/fini.o f/proj-h.o safe-ctype.o\n \n f/fini.o:\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\"}, {"sha": "f34253f7a6f4934b68975d9a0892e153c6e95509", "filename": "gcc/f/bad.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fbad.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fbad.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -457,7 +457,7 @@ ffebad_finish ()\n   if (ffebad_places_ == 0)\n     {\n       /* Didn't output \"warning:\" string, capitalize it for message.  */\n-      if ((s[0] != '\\0') && ISALPHA (s[0]) && ISLOWER (s[0]))\n+      if (s[0] != '\\0')\n \t{\n \t  char c;\n "}, {"sha": "82d99d837ed8f423cc40a3d7f58a075837519c0f", "filename": "gcc/f/com.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -1840,7 +1840,7 @@ ffecom_build_f2c_string_ (int i, const char *s)\n       tmp = &space[0];\n \n     for (p = s, q = tmp; *p != '\\0'; ++p, ++q)\n-      *q = ffesrc_toupper (*p);\n+      *q = TOUPPER (*p);\n     *q = '\\0';\n \n     t = build_string (i, tmp);"}, {"sha": "0fabf37d9241f781f5039862fe325ebd8d99e413", "filename": "gcc/f/fini.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Ffini.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Ffini.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ffini.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -381,15 +381,9 @@ main (int argc, char **argv)\n       for (i = 0; i < newname->namelen; ++i)\n \t{\n \t  cc = buf[i];\n-\t  if (ISALPHA (cc))\n-\t    {\n-\t      newname->name_uc[i] = TOUPPER (cc);\n-\t      newname->name_lc[i] = TOLOWER (cc);\n-\t      newname->name_ic[i] = cc;\n-\t    }\n-\t  else\n-\t    newname->name_uc[i] = newname->name_lc[i] = newname->name_ic[i]\n-\t      = cc;\n+\t  newname->name_uc[i] = TOUPPER (cc);\n+\t  newname->name_lc[i] = TOLOWER (cc);\n+\t  newname->name_ic[i] = cc;\n \t}\n       newname->name_uc[i] = newname->name_lc[i] = newname->name_ic[i] = '\\0';\n "}, {"sha": "0bc6d0e0c93a7dd2027b683edc84f6739b77991a", "filename": "gcc/f/intrin.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fintrin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fintrin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintrin.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -1581,10 +1581,6 @@ ffeintrin_init_0 ()\n       p3 = ffeintrin_names_[i].name_ic;\n       for (; *p1 != '\\0' && *p2 != '\\0' && *p3 != '\\0'; ++p1, ++p2, ++p3)\n \t{\n-\t  if (! IN_CTYPE_DOMAIN (*p1)\n-\t      || ! IN_CTYPE_DOMAIN (*p2)\n-\t      || ! IN_CTYPE_DOMAIN (*p3))\n-\t    break;\n \t  if ((ISDIGIT (*p1) || (*p1 == '_')) && (*p1 == *p2) && (*p1 == *p3))\n \t    continue;\n \t  if (! ISUPPER ((unsigned char)*p1) || ! ISLOWER ((unsigned char)*p2)"}, {"sha": "28c55cccf4fccfbd1fed2984a311eb055d4e22c5", "filename": "gcc/f/src.c", "status": "modified", "additions": 14, "deletions": 32, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fsrc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fsrc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsrc.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -32,16 +32,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"src.h\"\n #include \"top.h\"\n \n-/* This array does a toupper (), but any valid char type is valid as an\n-   index and returns identity if not a lower-case character.  */\n-\n-char ffesrc_toupper_[256];\n-\n-/* This array does a tolower (), but any valid char type is valid as an\n-   index and returns identity if not an upper-case character.  */\n-\n-char ffesrc_tolower_[256];\n-\n /* This array is set up so that, given a source-mapped character, the result\n    of indexing into this array will match an upper-cased character depending\n    on the source-mapped character's case and the established ffe_case_match()\n@@ -113,18 +103,10 @@ ffesrc_init_1 ()\n       ffesrc_char_match_noninit_[i] = i;\n       ffesrc_char_source_[i] = i;\n       ffesrc_char_internal_init_[i] = i;\n-      ffesrc_toupper_[i] = i;\n-      ffesrc_tolower_[i] = i;\n       ffesrc_bad_symbol_init_[i] = FFEBAD;\n       ffesrc_bad_symbol_noninit_[i] = FFEBAD;\n     }\n \n-  for (i = 'A'; i <= 'Z'; ++i)\n-    ffesrc_tolower_[i] = TOLOWER (i);\n-\n-  for (i = 'a'; i <= 'z'; ++i)\n-    ffesrc_toupper_[i] = TOUPPER (i);\n-\n   ffesrc_check_symbol_ = (ffe_case_symbol () != FFE_caseNONE);\n \n   ffesrc_ok_match_init_upper_ = (ffe_case_match () != FFE_caseLOWER);\n@@ -230,8 +212,8 @@ ffesrc_strcmp_1ns2i (ffeCase mcase, const char *var, int len,\n       for (; len > 0; --len, ++var, ++str_ic)\n \t{\n \t  c = ffesrc_char_source (*var);\t/* Transform source. */\n-\t  c = ffesrc_toupper (c);\t/* Upcase source. */\n-\t  d = ffesrc_toupper (*str_ic);\t/* Upcase InitialCaps char. */\n+\t  c = TOUPPER (c);\t\t\t/* Upcase source. */\n+\t  d = TOUPPER (*str_ic);\t\t/* Upcase InitialCaps char. */\n \t  if (c != d)\n \t    {\n \t      if ((d != '\\0') && (c < d))\n@@ -246,7 +228,7 @@ ffesrc_strcmp_1ns2i (ffeCase mcase, const char *var, int len,\n       for (; len > 0; --len, ++var, ++str_ic)\n \t{\n \t  c = ffesrc_char_source (*var);\t/* Transform source. */\n-\t  d = ffesrc_toupper (*str_ic);\t/* Transform InitialCaps char. */\n+\t  d = TOUPPER (*str_ic);\t/* Transform InitialCaps char. */\n \t  if (c != d)\n \t    {\n \t      if ((d != '\\0') && (c < d))\n@@ -261,7 +243,7 @@ ffesrc_strcmp_1ns2i (ffeCase mcase, const char *var, int len,\n       for (; len > 0; --len, ++var, ++str_ic)\n \t{\n \t  c = ffesrc_char_source (*var);\t/* Transform source. */\n-\t  d = ffesrc_tolower (*str_ic);\t/* Transform InitialCaps char. */\n+\t  d = TOLOWER (*str_ic);\t/* Transform InitialCaps char. */\n \t  if (c != d)\n \t    {\n \t      if ((d != '\\0') && (c < d))\n@@ -279,14 +261,14 @@ ffesrc_strcmp_1ns2i (ffeCase mcase, const char *var, int len,\n \t  d = *str_ic;\t\t/* No transform of InitialCaps char. */\n \t  if (c != d)\n \t    {\n-\t      c = ffesrc_toupper (c);\n-\t      d = ffesrc_toupper (d);\n+\t      c = TOUPPER (c);\n+\t      d = TOUPPER (d);\n \t      while ((len > 0) && (c == d))\n \t\t{\t\t/* Skip past equivalent (case-ins) chars. */\n \t\t  --len, ++var, ++str_ic;\n \t\t  if (len > 0)\n-\t\t    c = ffesrc_toupper (*var);\n-\t\t  d = ffesrc_toupper (*str_ic);\n+\t\t    c = TOUPPER (*var);\n+\t\t  d = TOUPPER (*str_ic);\n \t\t}\n \t      if ((d != '\\0') && (c < d))\n \t\treturn -1;\n@@ -323,7 +305,7 @@ ffesrc_strcmp_2c (ffeCase mcase, const char *var, const char *str_uc,\n     case FFE_caseNONE:\n       for (; *var != '\\0'; ++var, ++str_uc)\n \t{\n-\t  c = ffesrc_toupper (*var);\t/* Upcase source. */\n+\t  c = TOUPPER (*var);\t/* Upcase source. */\n \t  if (c != *str_uc)\n \t    {\n \t      if ((*str_uc != '\\0') && (c < *str_uc))\n@@ -349,11 +331,11 @@ ffesrc_strcmp_2c (ffeCase mcase, const char *var, const char *str_uc,\n \t{\n \t  if (*var != *str_ic)\n \t    {\n-\t      c = ffesrc_toupper (*var);\n+\t      c = TOUPPER (*var);\n \t      while ((c != '\\0') && (c == *str_uc))\n \t\t{\t\t/* Skip past equivalent (case-ins) chars. */\n \t\t  ++var, ++str_uc;\n-\t\t  c = ffesrc_toupper (*var);\n+\t\t  c = TOUPPER (*var);\n \t\t}\n \t      if ((*str_uc != '\\0') && (c < *str_uc))\n \t\treturn -1;\n@@ -393,7 +375,7 @@ ffesrc_strncmp_2c (ffeCase mcase, const char *var, const char *str_uc,\n     case FFE_caseNONE:\n       for (; len > 0; ++var, ++str_uc, --len)\n \t{\n-\t  c = ffesrc_toupper (*var);\t/* Upcase source. */\n+\t  c = TOUPPER (*var);\t/* Upcase source. */\n \t  if (c != *str_uc)\n \t    {\n \t      if (c < *str_uc)\n@@ -417,12 +399,12 @@ ffesrc_strncmp_2c (ffeCase mcase, const char *var, const char *str_uc,\n \t{\n \t  if (*var != *str_ic)\n \t    {\n-\t      c = ffesrc_toupper (*var);\n+\t      c = TOUPPER (*var);\n \t      while ((len > 0) && (c == *str_uc))\n \t\t{\t\t/* Skip past equivalent (case-ins) chars. */\n \t\t  --len, ++var, ++str_uc;\n \t\t  if (len > 0)\n-\t\t    c = ffesrc_toupper (*var);\n+\t\t    c = TOUPPER (*var);\n \t\t}\n \t      if ((len > 0) && (c < *str_uc))\n \t\treturn -1;"}, {"sha": "666bd853056d7f00f533d1aed2606dd07e64b056", "filename": "gcc/f/src.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fsrc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ff%2Fsrc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsrc.h?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -33,8 +33,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"bad.h\"\n #include \"top.h\"\n \n-extern char ffesrc_toupper_[256];\n-extern char ffesrc_tolower_[256];\n extern char ffesrc_char_match_init_[256];\n extern char ffesrc_char_match_noninit_[256];\n extern char ffesrc_char_source_[256];\n@@ -136,8 +134,6 @@ int ffesrc_strncmp_2c (ffeCase mcase, const char *var, const char *str_uc,\n #define ffesrc_terminate_2()\n #define ffesrc_terminate_3()\n #define ffesrc_terminate_4()\n-#define ffesrc_toupper(c) (ffesrc_toupper_[(unsigned int) (c)])\n-#define ffesrc_tolower(c) (ffesrc_tolower_[(unsigned int) (c)])\n \n /* End of #include file. */\n "}, {"sha": "05e70089461157e9d9d609315e656f0ccd7a0e8b", "filename": "gcc/fixinc/fixfixes.c", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ffixinc%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ffixinc%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixfixes.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -156,7 +156,7 @@ emit_gnu_type ( text, rm )\n     char* pD = z_TYPE;\n \n     while (ps < pe)\n-      *(pD++) = toupper( *(pd++) = *(ps++) );\n+      *(pD++) = TOUPPER( *(pd++) = *(ps++) );\n \n     *pD = *pd = NUL;\n   }\n@@ -612,20 +612,16 @@ FIX_PROC_HEAD( wrap_fix )\n                 \"wrap-fix\" );\n \n   for (;;) {\n-    char ch = *(pz_src++);\n+    char ch = *pz_src++;\n \n-    if (ISLOWER (ch))\n-      *(pz_dst++) = TOUPPER ( ch );\n-\n-    else if (ISALNUM ( ch ))\n-      *(pz_dst++) = ch;\n-\n-    else if (ch == NUL) {\n-      *(pz_dst++) = ch;\n+    if (ch == NUL) {\n+      *pz_dst++ = ch;\n       break;\n+    } else if (! ISALNUM (ch)) {\n+      *pz_dst++ = '_';\n+    } else {\n+      *pz_dst++ = TOUPPER (ch);\n     }\n-    else\n-      *(pz_dst++) = '_';\n \n     if (++len >= sizeof( z_fixname )) {\n       void* p = xmalloc( len + strlen( pz_src ) + 1 );"}, {"sha": "195dbfe4de644777e471c5eeaf2e68c8d9a4fcaa", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -771,14 +771,8 @@ extract_quoted_files (pz_data, pz_fixed_file, p_re_match)\n       pz_incl_quot += p_re_match->rm_so;\n \n       /*  Skip forward to the included file name */\n-      while (ISSPACE (*pz_incl_quot))\n+      while (*pz_incl_quot != '\"')\n         pz_incl_quot++;\n-      /* ISSPACE() may evaluate its argument more than once!  */\n-      while (++pz_incl_quot, ISSPACE (*pz_incl_quot))\n-        ;\n-      pz_incl_quot += sizeof (\"include\") - 1;\n-      while (*pz_incl_quot++ != '\"')\n-        ;\n \n       if (quoted_file_exists (pz_src_dir, pz_fixed_file, pz_incl_quot))\n         {"}, {"sha": "4b71a4dd2f9be98728fd06e4b34e281395fa7645", "filename": "gcc/fixinc/gnu-regex.c", "status": "modified", "additions": 5, "deletions": 45, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ffixinc%2Fgnu-regex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ffixinc%2Fgnu-regex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fgnu-regex.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -198,50 +198,10 @@ init_syntax_once ()\n /* GCC LOCAL: call it gnu-regex.h, not regex.h, to avoid name conflicts */\n #include \"gnu-regex.h\"\n \n-/* isalpha etc. are used for the character classes.  */\n-#include <ctype.h>\n-\n-/* Jim Meyering writes:\n-\n-   \"... Some ctype macros are valid only for character codes that\n-   isascii says are ASCII (SGI's IRIX-4.0.5 is one such system --when\n-   using /bin/cc or gcc but without giving an ansi option).  So, all\n-   ctype uses should be through macros like ISPRINT...  If\n-   STDC_HEADERS is defined, then autoconf has verified that the ctype\n-   macros don't need to be guarded with references to isascii. ...\n-   Defining isascii to 1 should let any compiler worth its salt\n-   eliminate the && through constant folding.\"\n-   Solaris defines some of these symbols so we must undefine them first.  */\n-\n-#undef ISASCII\n-#if defined STDC_HEADERS || (!defined isascii && !defined HAVE_ISASCII)\n-# define ISASCII(c) 1\n-#else\n-# define ISASCII(c) isascii(c)\n-#endif\n-\n-#ifdef isblank\n-# define ISBLANK(c) (ISASCII (c) && isblank (c))\n-#else\n-# define ISBLANK(c) ((c) == ' ' || (c) == '\\t')\n-#endif\n-#ifdef isgraph\n-# define ISGRAPH(c) (ISASCII (c) && isgraph (c))\n-#else\n-# define ISGRAPH(c) (ISASCII (c) && isprint (c) && !isspace (c))\n-#endif\n-\n-#undef ISPRINT\n-#define ISPRINT(c) (ISASCII (c) && isprint (c))\n-#define ISDIGIT(c) (ISASCII (c) && isdigit (c))\n-#define ISALNUM(c) (ISASCII (c) && isalnum (c))\n-#define ISALPHA(c) (ISASCII (c) && isalpha (c))\n-#define ISCNTRL(c) (ISASCII (c) && iscntrl (c))\n-#define ISLOWER(c) (ISASCII (c) && islower (c))\n-#define ISPUNCT(c) (ISASCII (c) && ispunct (c))\n-#define ISSPACE(c) (ISASCII (c) && isspace (c))\n-#define ISUPPER(c) (ISASCII (c) && isupper (c))\n-#define ISXDIGIT(c) (ISASCII (c) && isxdigit (c))\n+/* ISALPHA etc. are used for the character classes.  */\n+/* GCC LOCAL: use libiberty's safe-ctype.h, don't bother defining\n+   wrapper macros ourselves.  */\n+#include <safe-ctype.h>\n \n #ifndef NULL\n # define NULL (void *)0\n@@ -5613,7 +5573,7 @@ regcomp (preg, pattern, cflags)\n \n       /* Map uppercase characters to corresponding lowercase ones.  */\n       for (i = 0; i < CHAR_SET_SIZE; i++)\n-        preg->translate[i] = ISUPPER (i) ? tolower (i) : i;\n+        preg->translate[i] = TOLOWER (i);\n     }\n   else\n     preg->translate = NULL;"}, {"sha": "edfa93930a09636b90b4fecce9723d231e055c70", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 371, "deletions": 367, "changes": 738, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -1,3 +1,7 @@\n+2000-12-07  Zack Weinberg  <zack@wolery.stanford.edu>\n+\n+\t* jvgenmain.c: Use ISPRINT not isascii.\n+\n 2000-12-06  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (end_artificial_method_body): Fixed typo.\n@@ -181,7 +185,7 @@ Thu Nov 23 02:19:14 2000  J\"orn Rennecke <amylaar@redhat.com>\n \tis being accessed as an outer field.\n \n 2000-10-29  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n- \n+\n \t* Make-lang.in (LIBGCJ_ZIP_FILE): Define with `$(prefix)'.\n \tFixes gcj/365.\n \n@@ -231,7 +235,7 @@ Thu Nov 23 02:19:14 2000  J\"orn Rennecke <amylaar@redhat.com>\n 2000-10-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gjavah.c (NEED_PEEK_ATTRIBUTE, NEED_SKIP_ATTRIBUTE): Define\n-\t\n+\n \t* jcf-reader.c (peek_attribute, skip_attribute): Only define\n \twhen requested.\n \n@@ -299,7 +303,7 @@ Thu Nov 23 02:19:14 2000  J\"orn Rennecke <amylaar@redhat.com>\n \t(build_outer_field_access): Access to this$<n> built from\n \tcurrent_class, not its outer context.\n \t(build_access_to_thisn): Fixed leading comment. Tidied things up.\n-\t(resolve_qualified_expression_name): Handle `T.this' and `T.this.f()'. \n+\t(resolve_qualified_expression_name): Handle `T.this' and `T.this.f()'.\n \t(patch_method_invocation): Use `is_static_flag' when already\n \tinitialized.\n \t(patch_newarray): Removed assignment in ternary operator.\n@@ -349,23 +353,23 @@ Thu Nov 23 02:19:14 2000  J\"orn Rennecke <amylaar@redhat.com>\n \ton local finals.\n \t(java_complete_expand_methods): Loop to set\n \tTYPE_HAS_FINAL_VARIABLE. Call\n-\t`reset_final_variable_local_assignment_flag' and \n+\t`reset_final_variable_local_assignment_flag' and\n \t`check_final_variable_local_assignment_flag' accordingly before\n \tand after constructor expansion. Call\n \t`reset_static_final_variable_assignment_flag'\n-\tbefore expanding <clinit> and after call \n+\tbefore expanding <clinit> and after call\n \t`check_static_final_variable_assignment_flag' if the\n \tcurrent_class isn't an interface. After all methods have been\n \texpanded, call `check_final_variable_global_assignment_flag' and\n \t`check_static_final_variable_assignment_flag' if the current class\n-\tis an interface. \n+\tis an interface.\n \t(maybe_yank_clinit): Fixed typo in comment.\n \t(build_outer_field_access_methods): Removed old sanity check. Use\n \tFIELD_INNER_ACCESS_P. Call MAYBE_CREATE_VAR_LANG_DECL_SPECIFIC.\n \tDon't create access methods for finals.\n \t(resolve_field_access): Use `CLASS_FINAL_VARIABLE_P'.\n \t(java_complete_tree): Likewise. Reset DECL_FIELD_FINAL_IUD if\n-\texisting DECL_INIT has been processed. \n+\texisting DECL_INIT has been processed.\n \t(java_complete_lhs): Likewise.\n \t(check_final_assignment): Filter input on `lvalue''s TREE_CODE.\n \tTest for COMPONENT_REF to get to the FIELD_DECL. Implemented new\n@@ -378,7 +382,7 @@ Thu Nov 23 02:19:14 2000  J\"orn Rennecke <amylaar@redhat.com>\n 2000-10-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Make-lang.in (parse.c, parse-scan.c): Create atomically.\n-\t\n+\n \t* Makefile.in (parse.c, parse-scan.c): Likewise.\n \n 2000-10-12  Mark Mitchell  <mark@codesourcery.com>\n@@ -452,7 +456,7 @@ Thu Nov 23 02:19:14 2000  J\"orn Rennecke <amylaar@redhat.com>\n \t* typeck.c (build_java_array_type): Likewise.\n \t(parse_signature_string): Likewise.\n \t(build_java_signature): Likewise.\n-\t\n+\n 2000-10-12  Tom Tromey  <tromey@cygnus.com>\n \n \tFix for PR gcj/356:\n@@ -591,7 +595,7 @@ Wed Sep 13 11:50:35 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* parse.y (goal): Add more roots.\n \t(mark_parser_ctxt): New function.\n \t* typeck.c: Include ggc.h.\n-\t\n+\n 2000-09-29  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (maybe_yank_clinit): Also keep <clinit> if its body\n@@ -659,7 +663,7 @@ Wed Sep 13 11:50:35 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(class_in_current_package): Likewise.\n \t(argument_types_convertible): Likewise.\n \t(patch_cast): Rename wfl_op parameter to avoid macro conflicts.\n-\t\n+\n 2000-09-14  Tom Tromey  <tromey@cygnus.com>\n \n \t* lex.h: Use HAVE_ICONV_H, not HAVE_ICONV.\n@@ -753,7 +757,7 @@ Wed Sep 13 11:50:35 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 2000-08-15  Bryce McKinlay  <bryce@albatross.co.nz>\n \n-\t* parse.y (do_resolve_class): Also explore superclasses of \n+\t* parse.y (do_resolve_class): Also explore superclasses of\n \tintermediate enclosing contexts when searching for inner classes.\n \n 2000-08-11  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n@@ -774,7 +778,7 @@ Wed Sep 13 11:50:35 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \ta multiple-word record.\n \t(get_boehm_type_descriptor): Use the procedure marking descriptor for\n \tjava.lang.Class.\n-\t\n+\n 2000-08-31  Mike Stump  <mrs@wrs.com>\n \n \t* Make-lang.in (jc1$(exeext), gcjh$(exeext), jv-scan$(exeext),\n@@ -813,7 +817,7 @@ Wed Sep 13 11:50:35 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \tcombining to make a jlong. Fixes gcj/321.\n \n 2000-08-21  Nix  <nix@esperi.demon.co.uk>\n-        \n+\n \t* lang-specs.h: Do not process -o or run the assembler if\n \t-fsyntax-only.\n \n@@ -981,7 +985,7 @@ Sun Aug  6 00:47:24 2000  Ovidiu Predescu  <ovidiu@cup.hp.com>\n \ttarget interface.\n \n 2000-07-27  Tom Tromey  <tromey@cygnus.com>\n-            Anthony Green  <green@cygnus.com>\n+\t    Anthony Green  <green@cygnus.com>\n \t    Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* class.c (make_class_data): Create vtable for abstract classes.\n@@ -1043,13 +1047,13 @@ Sun Aug  6 00:47:24 2000  Ovidiu Predescu  <ovidiu@cup.hp.com>\n \n 2000-07-19  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (simple_name:): Reject `$' in type names.\n+\t* parse.y (simple_name:): Reject `$' in type names.\n \t(resolve_type_during_patch): Use `type' as a second\n \targument to resolve_no_layout. Fixes gcj/257.\n \n 2000-07-18  Bryce McKinlay  <bryce@albatross.co.nz>\n \n-\t* parse.y (find_most_specific_methods_list): Select the only \n+\t* parse.y (find_most_specific_methods_list): Select the only\n \tnon-abstract method even if max has been set.\n \tFixes gcj/285, gcj/298.\n \n@@ -1168,10 +1172,10 @@ Sun Aug  6 00:47:24 2000  Ovidiu Predescu  <ovidiu@cup.hp.com>\n \n 2000-07-02  Bryce McKinlay  <bryce@albatross.co.nz>\n \n-        * gjavah.c (HANDLE_METHOD): Call print_method_info with a NULL stream\n-        argument on the first pass for CNI as well as JNI.\n-        (print_method_info): Set up method name on the first pass only.\n-\t\n+\t* gjavah.c (HANDLE_METHOD): Call print_method_info with a NULL stream\n+\targument on the first pass for CNI as well as JNI.\n+\t(print_method_info): Set up method name on the first pass only.\n+\n 2000-07-01  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (parser_qualified_classname): Removed parameter\n@@ -1295,7 +1299,7 @@ Sun Aug  6 00:47:24 2000  Ovidiu Predescu  <ovidiu@cup.hp.com>\n \n \t* java-tree.h (LABEL_RETURN_LABELS, LABEL_PENDING_CHAIN):  Don't\n \tdefine in terms of DECL_RESULT, as that fails when --enable-checking.\n-\t\n+\n 2000-06-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* jcf-write.c (CHECK_PUT): Add static prototype.  Make pointer\n@@ -1422,7 +1426,7 @@ Fri Jun  2 16:48:55 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* parse.y (resolve_field_access): Call the appropriate <clinit>\n \tbefore accessing the length of a static array. Craft a decl for\n \tthe field while its time. Fixes PR gcj/129.\n- \n+\n 2000-05-01  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (resolve_package): Correctly set `*next' (was off by\n@@ -1431,7 +1435,7 @@ Fri Jun  2 16:48:55 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n Thu Apr 27 17:47:34 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-\t* jcf-parse.c (jcf_parse_source): Reset current_class and \n+\t* jcf-parse.c (jcf_parse_source): Reset current_class and\n  \tcurrent_function_decl to NULL before parsing a new file.\n \n Thu Apr 27 17:25:33 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n@@ -1441,11 +1445,11 @@ Thu Apr 27 17:25:33 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 2000-04-17  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (maybe_yank_clinit): New function.\n-        (maybe_generate_pre_expand_clinit): Always link <clinit> at the\n-        end of the list of methods belonging to a class.\n-        (java_complete_expand_method): Check whether <clinit> is really\n-        necessary and expand it accordingly.\n+\t* parse.y (maybe_yank_clinit): New function.\n+\t(maybe_generate_pre_expand_clinit): Always link <clinit> at the\n+\tend of the list of methods belonging to a class.\n+\t(java_complete_expand_method): Check whether <clinit> is really\n+\tnecessary and expand it accordingly.\n \n 2000-04-17  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -1613,8 +1617,8 @@ Mon Apr 24 14:59:36 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 2000-04-24  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (source_start_java_method): Deleted unecessary code.\n-        (patch_method_invocation): Fixed comment.\n+\t* parse.y (source_start_java_method): Deleted unecessary code.\n+\t(patch_method_invocation): Fixed comment.\n \n 2000-04-24  Robert Lipe <robertlipe@usa.net>\n \n@@ -1690,12 +1694,12 @@ Thu Apr 20 18:20:58 2000  Jason Schroeder  <shrode@subnature.com>\n \n 2000-04-17  Bryce McKinlay  <bryce@albatross.co.nz>\n \n-\t* gjavah.c (print_name_for_stub_or_jni): Don't prefix method names \n+\t* gjavah.c (print_name_for_stub_or_jni): Don't prefix method names\n \twith a newline, for CNI.\n-\t(print_stub_or_jni): Print a space or newline before method name for \n+\t(print_stub_or_jni): Print a space or newline before method name for\n \tCNI as well as JNI.\n \t(print_cxx_classname): Don't write leading \"::\" in CNI stub method.\n-\t(process_file): Include gcj/cni.h if generating CNI stubs.      \n+\t(process_file): Include gcj/cni.h if generating CNI stubs.\n \n 2000-04-16  Tom Tromey  <tromey@cygnus.com>\n \n@@ -1714,7 +1718,7 @@ Thu Apr 20 18:20:58 2000  Jason Schroeder  <shrode@subnature.com>\n \n \t* jcf-write.c (generate_bytecode_insns): At invokation time,\n \talways relate an interface method to the type of its selector.\n-\t\n+\n 2000-04-05  Tom Tromey  <tromey@cygnus.com>\n \n \tFix for PR gcj/2:\n@@ -1885,7 +1889,7 @@ Fri Mar 17 08:09:14 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* expr.c (java_array_data_offset): Use int_bit_position.\n \t(build_newarray, build_anewarray): Use host_integerp and tree_low_cst.\n \t(build_invokevirtual): Use tree_low_cst and do computations with trees.\n-\t\n+\n 2000-03-16  Tom Tromey  <tromey@cygnus.com>\n \n \t* lang.c (flag_hash_synchronization): New global.\n@@ -1952,8 +1956,8 @@ Tue Mar 14 17:15:41 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 2000-02-14  Andrew Haley  <aph@cygnus.com>\n \n-        * check-init.c (check_init): Add new cases for unary and binary\n-        tree nodes.\n+\t* check-init.c (check_init): Add new cases for unary and binary\n+\ttree nodes.\n \n 2000-03-13  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -2004,7 +2008,7 @@ Mon Mar 13 11:36:51 2000  Hans Boehm <boehm@acm.org>\n \n \t* parse.y (qualify_ambiguous_name): Properly handle expressions\n \tusing `null'.\n-\t\n+\n 2000-03-07  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (check_final_assignment): Extended to process\n@@ -2018,7 +2022,7 @@ Mon Mar 13 11:36:51 2000  Hans Boehm <boehm@acm.org>\n \t* parse.y (patch_string): Call force_evaluation_order on the\n \tcompleted string concatenation tree.\n \t* expr.c (force_evaluation_order): Call force_evaluation_order on\n-        function's arguments too.\n+\tfunction's arguments too.\n \n Mon Mar  6 18:07:07 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n@@ -2099,7 +2103,7 @@ Thu Mar  2 15:18:33 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* java-tree.h (LOCAL_CLASS_P): New flag usage and macro.\n \t(PURE_INNER_CLASS_DECL_P, PURE_INNER_CLASS_TYPE_P): New macros.\n-\t* jcf-dump.c (HANDLE_INNERCLASSES_ATTRIBUTE): New macro.  \n+\t* jcf-dump.c (HANDLE_INNERCLASSES_ATTRIBUTE): New macro.\n \t* jcf-parse.c (HANDLE_INNERCLASSES_ATTRIBUTE): Likewise.\n \t(jcf_parse): New local `current'. Load innerclasses seen in outer\n \tcontext being processed.\n@@ -2241,7 +2245,7 @@ Thu Feb 17 13:20:58 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n 2000-02-16  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* Makefile.in (PARSE_C, PARSE_SCAN_C): Move dependencies on\n-\tlex.c, lex.h, and PARSE_H to...                            \n+\tlex.c, lex.h, and PARSE_H to...\n \t(parse.o, parse-scan.o): ...here, respectively.\n \n \t* lex.c: Split out code that may trigger SIGFPE from yylex()\n@@ -2275,7 +2279,7 @@ Thu Feb 17 13:20:58 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(jcf-dump.o, gjavah.o, jv-scan.o): Depend on version.h.\n \n \t* gjavah.c: Include version.h.\n-\t\n+\n \t* jcf-dump.c: Likewise.\n \n \t* jv-scan.c: Likewise.\n@@ -2332,22 +2336,22 @@ Thu Feb 10 12:52:09 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 2000-02-09  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * class.c (layout_class): Set and test CLASS_BEING_LAIDOUT.\n-        Generate error message if circularity is detected. New static\n-        local `list'.\n-        * java-tree.h (CLASS_BEING_LAIDOUT): New flag usage, new macro.  *\n-        * jcf-write.c (generate_bytecode_insns): Very simply handle\n-        SAVE_EXPR.\n-        * parse.y (java_check_circular_reference): Use\n-        `cyclic_inheritance_report' during report, if necessary.\n-        (java_complete_lhs): fixed comment with `THROW_EXPR:' case. Avoid\n-        walking NEW_ARRAY_INIT twice.\n+\t* class.c (layout_class): Set and test CLASS_BEING_LAIDOUT.\n+\tGenerate error message if circularity is detected. New static\n+\tlocal `list'.\n+\t* java-tree.h (CLASS_BEING_LAIDOUT): New flag usage, new macro.  *\n+\t* jcf-write.c (generate_bytecode_insns): Very simply handle\n+\tSAVE_EXPR.\n+\t* parse.y (java_check_circular_reference): Use\n+\t`cyclic_inheritance_report' during report, if necessary.\n+\t(java_complete_lhs): fixed comment with `THROW_EXPR:' case. Avoid\n+\twalking NEW_ARRAY_INIT twice.\n \n 2000-02-09  Tom Tromey  <tromey@cygnus.com>\n \n-        * parse.y (check_class_interface_creation): Allow inner classes to\n-        be `private' or `protected', check modifiers' consistency. Prevent\n-        block local classes from bearing any modifiers.\n+\t* parse.y (check_class_interface_creation): Allow inner classes to\n+\tbe `private' or `protected', check modifiers' consistency. Prevent\n+\tblock local classes from bearing any modifiers.\n \n 2000-02-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -2361,30 +2365,30 @@ Thu Feb 10 12:52:09 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(maybe_poplevels): Remove unused variable.\n \t(force_poplevels): Ditto.\n \t(struct binding_level): Add comment.\n-\t\n+\n 2000-02-07  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * jcf-write.c (generate_classfile): Don't consider\n-        pre-initialization with reference value (use <clinit> instead.)\n-        * parse.y (java_fix_constructors): No generated constructor for\n-        interfaces.\n-        (build_outer_field_access): Removed debug message.\n-        (outer_field_expanded_access_p): Adapted to bytecode generation.\n-        (build_outer_field_access_method): Use fix_method_argument_names.\n-        (build_outer_method_access_method): Fixed indentation. Added\n-        comment. Handle access method generation for static and also void\n-        methods.\n-        (build_access_to_thisn): Inserted debug message.\n-        (maybe_build_thisn_access_method): Use fix_method_argument_names.\n-        (resolve_qualified_expression_name): Fixed comment.\n-        (not_accessible_p): Adapted to bytecode generation. Added comment.\n-        (patch_method_invocation): Added comment.\n-        (maybe_use_access_method): Fixed leading comment. Handle static\n-        methods.\n-        (java_complete_lhs): Don't shortcut handling of initialized upon\n-        declaration String type static fields when generating bytecode.\n-        (patch_unaryop): Handle outer field access when generating\n-        bytecode.\n+\t* jcf-write.c (generate_classfile): Don't consider\n+\tpre-initialization with reference value (use <clinit> instead.)\n+\t* parse.y (java_fix_constructors): No generated constructor for\n+\tinterfaces.\n+\t(build_outer_field_access): Removed debug message.\n+\t(outer_field_expanded_access_p): Adapted to bytecode generation.\n+\t(build_outer_field_access_method): Use fix_method_argument_names.\n+\t(build_outer_method_access_method): Fixed indentation. Added\n+\tcomment. Handle access method generation for static and also void\n+\tmethods.\n+\t(build_access_to_thisn): Inserted debug message.\n+\t(maybe_build_thisn_access_method): Use fix_method_argument_names.\n+\t(resolve_qualified_expression_name): Fixed comment.\n+\t(not_accessible_p): Adapted to bytecode generation. Added comment.\n+\t(patch_method_invocation): Added comment.\n+\t(maybe_use_access_method): Fixed leading comment. Handle static\n+\tmethods.\n+\t(java_complete_lhs): Don't shortcut handling of initialized upon\n+\tdeclaration String type static fields when generating bytecode.\n+\t(patch_unaryop): Handle outer field access when generating\n+\tbytecode.\n \n Thu Feb  3 20:23:19 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -2400,31 +2404,31 @@ Thu Feb  3 20:23:19 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 2000-01-25  Andrew Haley  <aph@cygnus.com>\n \n-        * java-except.h (struct eh_range): Add `expanded' field.\n-        (maybe_start_try): Add end_pc arg.\n-        (maybe_end_try): Ditto.\n+\t* java-except.h (struct eh_range): Add `expanded' field.\n+\t(maybe_start_try): Add end_pc arg.\n+\t(maybe_end_try): Ditto.\n \t* java-tree.h (force_poplevels): new function.\n-        * expr.c (expand_byte_code): Don't call maybe_start_try or\n-        maybe_end_try.\n-        * except.c (add_handler): Reset expanded.\n-        (expand_start_java_handler): Set expanded.\n-        (check_start_handlers): Don't expand a start handler that's\n-        already been expanded.\n-        (maybe_start_try): Add end_pc arg.  Only expand a handler which\n-        ends after end_pc.\n+\t* expr.c (expand_byte_code): Don't call maybe_start_try or\n+\tmaybe_end_try.\n+\t* except.c (add_handler): Reset expanded.\n+\t(expand_start_java_handler): Set expanded.\n+\t(check_start_handlers): Don't expand a start handler that's\n+\talready been expanded.\n+\t(maybe_start_try): Add end_pc arg.  Only expand a handler which\n+\tends after end_pc.\n \t(expand_end_java_handler): call force_poplevels.\n \t(force_poplevels): new function.\n-        * decl.c (binding_level): Add start_pc of binding level.\n-        (maybe_pushlevels): Call maybe_start_try when pushing binding\n-        levels.\n-        (maybe_poplevels): Call maybe_end_try when popping binding levels.\n-        (LARGEST_PC): Define.\n-        (clear_binding_level): Use LARGEST_PC.\n+\t* decl.c (binding_level): Add start_pc of binding level.\n+\t(maybe_pushlevels): Call maybe_start_try when pushing binding\n+\tlevels.\n+\t(maybe_poplevels): Call maybe_end_try when popping binding levels.\n+\t(LARGEST_PC): Define.\n+\t(clear_binding_level): Use LARGEST_PC.\n \n \t* java-tree.h (DEBUG_JAVA_BINDING_LEVELS): new define.\n \t* decl.c (DEBUG_JAVA_BINDING_LEVELS): new define.\n \t(binding_depth, is_class_level, current_pc): new variables.\n-        (struct binding_level): ditto.\n+\t(struct binding_level): ditto.\n \t(indent): new function.\n \t(push_jvm_slot): add debugging info.\n \t(maybe_pushlevels): ditto.\n@@ -2433,11 +2437,11 @@ Thu Feb  3 20:23:19 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(poplevel): ditto.\n \t(start_java_method): ditto.\n \t(give_name_to_locals): comment only.\n-\t* except.c (binding_depth, is_class_level, current_pc): \n+\t* except.c (binding_depth, is_class_level, current_pc):\n \tnew variables.\n \t(expand_start_java_handler): add debugging info.\n \t(expand_end_java_handler): ditto.\n-\t\n+\n 2000-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gjavah.c (overloaded_jni_method_exists_p): Add prototype.\n@@ -2483,7 +2487,7 @@ Wed Feb  2 18:43:37 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(patch_return): Forbid return in instance initializers.\n \t(patch_throw_statement): Enforce exception handling in the context\n \tof instance initializers.\n-\t\n+\n 2000-02-03  Tom Tromey  <tromey@cygnus.com>\n \n \t* Make-lang.in (java.mostlyclean): Remove executables in\n@@ -2565,7 +2569,7 @@ Tue Feb  1 14:59:35 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(SKIP_THIS_AND_ARTIFICIAL_PARMS): Use DECL_FINIT_P.\n \t(AIPL_FUNCTION_FINIT_INVOCATION): Replaces\n \tAIPL_FUNCTION_COMPLETED_INVOCATION.\n-\t(AIPL_FUNCTION_CTOR_INVOCATION): Replaces \n+\t(AIPL_FUNCTION_CTOR_INVOCATION): Replaces\n \tAIPL_FUNCTION_INVOCATION_READY.\n \t(AIPL_FUNCTION_DECLARATION): New enum entry.\n \t* parse.y (reorder_static_initialized): New function.\n@@ -2591,7 +2595,7 @@ Tue Feb  1 14:59:35 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(fix_constructors): Don't patch constructor parameters list.\n \t(patch_method_invocation): Use new AIPL enum values. Reverse\n \talias initializer list for anonymous classes.\n-\t\n+\n 2000-01-30  Anthony Green  <green@redhat.com>\n \n \t* jcf-write.c (generate_bytecode_insns): Use TYPE_IS_WIDE to\n@@ -2671,9 +2675,9 @@ Fri Jan 28 20:10:57 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 2000-01-27  Andrew Haley  <aph@cygnus.com>\n \n-        * jcf-write.c (emit_goto): RESERVE 3 bytes for insn.\n-        (emit_if): Ditto.\n-        (emit_jsr): Ditto.\n+\t* jcf-write.c (emit_goto): RESERVE 3 bytes for insn.\n+\t(emit_if): Ditto.\n+\t(emit_jsr): Ditto.\n \n 2000-01-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -2724,7 +2728,7 @@ Fri Jan 28 20:10:57 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* xref.h: Likewise.\n \t* zextract.c: Likewise.\n \t* zipfile.h: Likewise.\n-\t\n+\n 2000-01-18  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* class.c (make_class): Use MAYBE_CREATE_TYPE_TYPE_LANG_SPECIFIC.\n@@ -2779,7 +2783,7 @@ Fri Jan 28 20:10:57 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* typeck.c (build_java_signature): Use TYPE_SIGNATURE and\n \tMAYBE_CREATE_TYPE_TYPE_LANG_SPECIFIC.\n \t(set_java_signature): Likewise.\n-\t\n+\n Mon Jan 18 14:30:09 2000  Joerg Brunsmann  <joerg.brunsmann@fernuni-hagen.de>\n \n \t* gjavah.c: Delete ACC_VISIBILITY define.\n@@ -2850,7 +2854,7 @@ Fri Jan 14 00:14:24 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tconstructors.\n \t(search_loop): Use FOR_LOOP_P.\n \t(labeled_block_contains_loop_p): Likewise.\n-\t\n+\n Wed Jan 12 00:38:47 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* class.c (set_super_info): Set CLASS_STATIC when appropriate.\n@@ -2861,7 +2865,7 @@ Wed Jan 12 00:38:47 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(layout_class_method): Use ID_FINIT_P, DECL_CLINIT_P and\n  \tID_INIT_P.\n \t* decl.c (access0_identifier_node): New global.\n-\t(init_decl_processing): access0_identifier_node initialized. \n+\t(init_decl_processing): access0_identifier_node initialized.\n \t(pushdecl): Set DECL_CONTEXT only on non type decls.\n \t* expr.c (lookup_field): Lookup inner class fields in enclosing\n  \tcontexts.\n@@ -2895,7 +2899,7 @@ Wed Jan 12 00:38:47 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(GET_CPC_LIST, CPC_INNER_P, GET_CPC, GET_CPC_UN, GET_CPC_UN_MODE,\n  \tGET_CPC_DECL_NODE, GET_ENCLOSING_CPC, GET_NEXT_ENCLOSING_CPC,\n  \tGET_ENCLOSING_CPC_CONTEXT): New macros.\n-\t(PUSH_CPC, PUSH_ERROR, POP_CPC): New macros.\t\n+\t(PUSH_CPC, PUSH_ERROR, POP_CPC): New macros.\n \t(do_resolve_class): Added extra argument in prototype.\n \t* parse.y (resolve_class): Added extra argument in prototype.\n \t(maybe_create_class_interface_decl): Likewise.\n@@ -2957,7 +2961,7 @@ Wed Jan 12 00:38:47 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tparser context when processing an inner class. Push the\n  \tinitialized fields list. raw_name added as an extra argument to\n  \tmaybe_create_class_interface_decl. Add the private this$<n>\n- \tfield. \n+ \tfield.\n \t(duplicate_declaration_error_p): Use GET_CPC when calling find_field.\n \t(register_fields): Get the class type from GET_CPC and handle\n  \tprevious errors.  Added code to handle the creation of static\n@@ -3026,7 +3030,7 @@ Wed Jan 12 00:38:47 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(check_thrown_exceptions): Use DECL_FINIT_P and DECL_INIT_P.\n \t* verify.c (verify_jvm_instructions): Use ID_CLINIT_P and\n  \tID_INIT_P.\n-\t\n+\n 2000-01-16  Anthony Green  <green@cygnus.com>\n \n \t* parse.y (build_string_concatenation): Only use\n@@ -3062,7 +3066,7 @@ Thu Jan  6 00:54:10 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* jcf-write.c (generate_bytecode_conditional): Fixed indentation in\n \tmethod invocation and typo in conditional expression.\n-        (generate_bytecode_insns): COND_EXPR can be part of a binop. Issue\n+\t(generate_bytecode_insns): COND_EXPR can be part of a binop. Issue\n  \tthe appropriate NOTE_POP.\n \t* parse.y (patch_binop): Shift value mask to feature the right\n  \ttype.\n@@ -3092,7 +3096,7 @@ Thu Jan  6 00:54:10 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* jcf-parse.c (yyparse): Likewise.\n \n \t* jv-scan.c (main): Likewise.\n-\t\n+\n 1999-12-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* parse.h (ABSTRACT_CHECK, JCONSTRUCTOR_CHECK,\n@@ -3147,8 +3151,8 @@ Fri Dec 24 00:25:29 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(java_debug_context_do): New prototype and function.\n \t(java_debug_context): Likewise.\n \t(do_resolve_class): Use already parsed package names to qualify\n- \tand lookup class candidate. \n-\t(java_pre_expand_clinit): Removed unnecessary local variable.\t\n+ \tand lookup class candidate.\n+\t(java_pre_expand_clinit): Removed unnecessary local variable.\n \n 1999-12-17  Tom Tromey  <tromey@cygnus.com>\n \n@@ -3162,7 +3166,7 @@ Thu Dec 16 00:09:45 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tattempting to use it.\n \t(expand_java_field_op): Allow final field assignments to take\n  \tplace in $finit$.\n-\t* typeck.c (convert): Return error_mark_node if expr is null. \n+\t* typeck.c (convert): Return error_mark_node if expr is null.\n \n 1999-12-14  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -3188,7 +3192,7 @@ Thu Dec 16 00:09:45 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \tdecl argument instead of current_class.\n \t* typeck.c (lookup_java_method): Take WFLs in method names into\n \taccount.\n-\t\n+\n Tue Dec 14 14:20:16 1999  Per Bothner  <per@bothner.com>\n \n \t* class.c (make_class_data): flag_keep_inline_functions to keep\n@@ -3197,12 +3201,12 @@ Tue Dec 14 14:20:16 1999  Per Bothner  <per@bothner.com>\n 1999-12-15  Anthony Green  <green@cygnus.com>\n \n \t* check-init.c (check_init): Take into account both types of\n-        `throw's when checking for uninitialized variables.\n+\t`throw's when checking for uninitialized variables.\n \n Fri Dec 10 21:53:45 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (java_complete_lhs): Force convertion of array\n-        dimensions to int_type_node, that's what runtime's ABI expects.\n+\t* parse.y (java_complete_lhs): Force convertion of array\n+\tdimensions to int_type_node, that's what runtime's ABI expects.\n \n Fri Dec 10 16:13:48 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -3216,16 +3220,16 @@ Fri Dec 10 16:13:48 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \tdecl.c (init_decl_processing): Add _Jv_Sjlj_Throw.\n \texpr.c (build_java_athrow): Add support for sjlj-exceptions.\n \tjava-tree.h: Ditto.\n-\tjcf-write.c: Ditto.\t\n+\tjcf-write.c: Ditto.\n \n Wed Dec  8 15:33:26 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * expr.c (java_lang_expand_expr): Switch to permanent obstack\n-        before calling expand_eh_region_start and expand_start_all_catch.\n-        * except.c (expand_start_java_handler): Switch to permanent\n-        obstack before calling expand_eh_region_start.\n-        (expand_end_java_handler): Switch to permanent obstack before\n-        calling expand_start_all_catch.\n+\t* expr.c (java_lang_expand_expr): Switch to permanent obstack\n+\tbefore calling expand_eh_region_start and expand_start_all_catch.\n+\t* except.c (expand_start_java_handler): Switch to permanent\n+\tobstack before calling expand_eh_region_start.\n+\t(expand_end_java_handler): Switch to permanent obstack before\n+\tcalling expand_start_all_catch.\n \n 1999-12-5  Anthony Green  <green@cygnus.com>\n \n@@ -3236,24 +3240,24 @@ Wed Dec  8 15:33:26 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n Wed Dec  1 04:25:06 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * except.c (expand_end_java_handler): Call\n-        expand_resume_after_catch and end_catch_handler.\n+\t* except.c (expand_end_java_handler): Call\n+\texpand_resume_after_catch and end_catch_handler.\n \n Tue Nov 30 12:36:15 1999  Anthony Green  <green@cygnus.com>\n \n-        * verify.c (verify_jvm_instructions): Create new return label\n-        chain if non existant (don't rely on the verified state of the jsr\n-        target.)\n+\t* verify.c (verify_jvm_instructions): Create new return label\n+\tchain if non existant (don't rely on the verified state of the jsr\n+\ttarget.)\n \n Tue Nov 30 12:28:34 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * jcf-write.c (generate_bytecode_insns): Fixed indentation for\n-        COMPOUND_EXPR and FIX_TRUNC_EXPR cases.\n+\t* jcf-write.c (generate_bytecode_insns): Fixed indentation for\n+\tCOMPOUND_EXPR and FIX_TRUNC_EXPR cases.\n \n-        * parse.y (patch_assignment): Removed bogus final class test on\n-        lhs when checking on whether to emit an ArrayStoreException runtime\n-        check.\n-        * expr.c (expand_java_arraystore): Likewise. \n+\t* parse.y (patch_assignment): Removed bogus final class test on\n+\tlhs when checking on whether to emit an ArrayStoreException runtime\n+\tcheck.\n+\t* expr.c (expand_java_arraystore): Likewise.\n \n 1999-11-28 Anthony Green <green@cygnus.com>\n \n@@ -3262,18 +3266,18 @@ Tue Nov 30 12:28:34 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n Wed Nov 24 17:33:26 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * jcf-parse.c (saw_java_source): Global variable removed.\n-        (read_class): Don't use `saw_java_source'. Added extra braces.\n-        (yyparse): Code setting `saw_java_source' removed.\n+\t* jcf-parse.c (saw_java_source): Global variable removed.\n+\t(read_class): Don't use `saw_java_source'. Added extra braces.\n+\t(yyparse): Code setting `saw_java_source' removed.\n \n 1999-11-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* except.c (emit_handlers): Zero catch_clauses after emitting them.\n \n Tue Nov 23 17:29:40 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * verify.c (merge_type_state): Non verified subroutines being\n-        considered more than once to trigger passive type merge.\n+\t* verify.c (merge_type_state): Non verified subroutines being\n+\tconsidered more than once to trigger passive type merge.\n \n Tue Nov 23 10:55:18 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -3306,7 +3310,7 @@ Wed Nov 17 21:09:28 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n Thu Nov 11 01:57:14 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (lookup_method_invoke): Use lang_printable_name to\n+\t* parse.y (lookup_method_invoke): Use lang_printable_name to\n  \treliably build the type name during error report. Fixes PR gcj/97.\n \n 1999-11-09  Tom Tromey  <tromey@cygnus.com>\n@@ -3331,7 +3335,7 @@ Thu Nov  4 16:27:01 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (resolve_qualified_expression_name): Handle PLUS_EXPR.\n \t(qualify_ambiguous_name): Likewise.\n-\t\n+\n Wed Nov  3 15:20:02 MST 1999  Godmar Back <gback@cs.utah.edu>\n \n \t* typeck.c: (lookup_java_method):  search all inherited\n@@ -3342,7 +3346,7 @@ Mon Nov  1 23:42:00 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* parse.y (method_header:): Issue error message for rule `type\n  \terror'.\n \t(synchronized:): Error report when not using synchronized.\n-\t\n+\n Mon Nov  1 01:32:48 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (resolve_qualified_expression_name): Prevent `this' from\n@@ -3512,7 +3516,7 @@ Thu Sep 16 15:42:39 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* jcf-io.c (open_in_zip, find_class): Use xstrdup, not strdup.\n \n \t* jcf-parse.c (jcf_out_of_synch, yyparse): Likewise.\n-\t\n+\n \t* jcf-path.c (add_entry): Likewise.\n \n \t* jcf.h (ALLOC, REALLOC): Use xmalloc/xrealloc, not malloc/realloc.\n@@ -3550,7 +3554,7 @@ Sun Sep 12 23:30:09 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t(main_class_name, jvgenmain_spec, lang_specific_driver):\n \tConstify a char*.\n \t(lang_specific_driver): All calls to the function pointer\n-\tparameter now explicitly call `fatal'. \n+\tparameter now explicitly call `fatal'.\n \n Sat Sep 11 16:46:44 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -3749,24 +3753,24 @@ Wed Aug 18 13:17:15 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n Tue Aug 17 22:51:44 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (java_refold): Added prototype.\n+\t* parse.y (java_refold): Added prototype.\n \n Tue Aug 17 21:48:41 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (BINOP_COMPOUND_CANDIDATES): New macro.\n-        (java_stabilize_reference): Removed unnecessary `else'.\n-        (java_complete_lhs): Set flag to remember boolean. Call\n-        java_refold. Added comments.\n-        (java_decl_equiv): New function.\n-        (binop_compound_p): Likewise.\n-        (java_refold): Likewise.\n-        (patch_unaryop): Striped static field access assigned to decl and\n-        op. Changed promotion scheme for ++/-- operators.\n-        (search_loop): New function.\n-        (labeled_block_contains_loop_p): Likewise.\n-        (patch_loop_statement): Call labeled_block_contains_loop_p. Added\n-        comment.\n-        (patch_bc_statement): Call search_loop. Fixed comment.\n+\t* parse.y (BINOP_COMPOUND_CANDIDATES): New macro.\n+\t(java_stabilize_reference): Removed unnecessary `else'.\n+\t(java_complete_lhs): Set flag to remember boolean. Call\n+\tjava_refold. Added comments.\n+\t(java_decl_equiv): New function.\n+\t(binop_compound_p): Likewise.\n+\t(java_refold): Likewise.\n+\t(patch_unaryop): Striped static field access assigned to decl and\n+\top. Changed promotion scheme for ++/-- operators.\n+\t(search_loop): New function.\n+\t(labeled_block_contains_loop_p): Likewise.\n+\t(patch_loop_statement): Call labeled_block_contains_loop_p. Added\n+\tcomment.\n+\t(patch_bc_statement): Call search_loop. Fixed comment.\n \n 1999-08-14  Anthony Green  <green@cygnus.com>\n \n@@ -3842,7 +3846,7 @@ Tue Aug\t10 00:28:31 1999  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \tstatic prototypes.\n \t(put_decl_string, lang_print_error): Constify a char*.\n \t(lang_init): Remove redundant extern prototype.\n-\t\n+\n \t* mangle.c (emit_unicode_mangled_name): Constify a char*.\n \n \t* typeck.c (convert_ieee_real_to_integer, parse_signature_type):\n@@ -3855,20 +3859,20 @@ Tue Aug\t10 00:28:31 1999  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \t(verify_jvm_instructions): Constify a char*.\n \n \t* xref.c (xref_flag_value): Likewise.\n-\t\n+\n \t* xref.h (xref_flag_value): Likewise.\n \n \t* zextract.c (makeword, makelong): Add static prototypes.\n \t(makeword, makelong): Constify a uch*.\n \n 1999-08-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * lang.c (java_dummy_print): Constify a char*.\n-        (lang_print_error): Likewise.\n-        (lang_init): Remove redundant prototype for `print_error_function'.\n-        (lang_init_source): Likewise.\n-        (lang_identify): Constify a char*.\n-\t\n+\t* lang.c (java_dummy_print): Constify a char*.\n+\t(lang_print_error): Likewise.\n+\t(lang_init): Remove redundant prototype for `print_error_function'.\n+\t(lang_init_source): Likewise.\n+\t(lang_identify): Constify a char*.\n+\n 1999-08-09  Tom Tromey  <tromey@cygnus.com>\n \n \t* javaop.h (WORD_TO_FLOAT): only inline if building with gcc.\n@@ -4003,29 +4007,29 @@ Thu Jul 22 12:41:12 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 1999-07-15  Andrew Haley  <aph@cygnus.com>\n \n-        * lang.c (flag_use_divide_subroutine): New variable.\n-        * typeck.c: (convert_ieee_real_to_integer): Bounds check\n-        fp-to-integer conversion.\n-        (convert): Call convert_ieee_real_to_integer when flag_fast_math\n-        is not set.\n-\n-        * expr.c (build_java_soft_divmod): New function.\n-        (build_java_binop): Call build_java_soft_divmod if\n-        flag_use_divide_subroutine is set.\n-        * decl.c: soft_idiv_node, soft_irem_node, soft_ldiv_node, tree\n-        soft_lrem_node: new builtin functions.\n-        (init_decl_processing) Initialize the new builtins.\n-        * java-tree.h soft_idiv_node, soft_irem_node, soft_ldiv_node, tree\n-        soft_lrem_node: new builtin functions.\n-        (build_java_soft_divmod): New function.\n-        * parse.y: Call build_java_soft_divmod if\n-        flag_use_divide_subroutine is set.\n-        * parse.c: Rebuilt.\n-\n-        * jvspec.c (lang_specific_driver): Always allow an extra arg (for\n-        a --specs= arg) even if not linking.\n-        * lang-options.h (DEFINE_LANG_NAME (\"Java\")): Add\n-        -fuse-divide-subroutine\n+\t* lang.c (flag_use_divide_subroutine): New variable.\n+\t* typeck.c: (convert_ieee_real_to_integer): Bounds check\n+\tfp-to-integer conversion.\n+\t(convert): Call convert_ieee_real_to_integer when flag_fast_math\n+\tis not set.\n+\n+\t* expr.c (build_java_soft_divmod): New function.\n+\t(build_java_binop): Call build_java_soft_divmod if\n+\tflag_use_divide_subroutine is set.\n+\t* decl.c: soft_idiv_node, soft_irem_node, soft_ldiv_node, tree\n+\tsoft_lrem_node: new builtin functions.\n+\t(init_decl_processing) Initialize the new builtins.\n+\t* java-tree.h soft_idiv_node, soft_irem_node, soft_ldiv_node, tree\n+\tsoft_lrem_node: new builtin functions.\n+\t(build_java_soft_divmod): New function.\n+\t* parse.y: Call build_java_soft_divmod if\n+\tflag_use_divide_subroutine is set.\n+\t* parse.c: Rebuilt.\n+\n+\t* jvspec.c (lang_specific_driver): Always allow an extra arg (for\n+\ta --specs= arg) even if not linking.\n+\t* lang-options.h (DEFINE_LANG_NAME (\"Java\")): Add\n+\t-fuse-divide-subroutine\n \n Tue Jul 20 13:20:05 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -4034,11 +4038,11 @@ Tue Jul 20 13:20:05 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tcompatibility.\n \t(check_thrown_exceptions): Reject exceptions thrown in\n  \tinitializer. Error message tuned.\n-\t\n+\n 1999-07-14  Andrew Haley  <aph@cygnus.com>\n \n-        * expr.c (expand_expr): Do not return the last statement in a\n-        block as the block's value.\n+\t* expr.c (expand_expr): Do not return the last statement in a\n+\tblock as the block's value.\n \n Sat Jul  3 22:26:32 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -4099,7 +4103,7 @@ Wed Jun 23 14:37:15 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tcompiling to class file a void method with an empty method body.\n   \tAs a side effect, the bytecode backend will generate the\n  \tappropriate `return' instruction.\n-\t\n+\n Tue Jun 22 20:43:49 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (lookup_package_type_and_set_next): New function prototype.\n@@ -4113,17 +4117,17 @@ Tue Jun 22 20:43:49 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 1999-06-21  Andrew Haley  <aph@cygnus.com>\n \n-        * except.c (find_handler_in_range): The upper limit for exception\n-        ranges is exclusive, not inclusive: (start <= pc < end).  \n-        (link_handler): find child pointer which points to outer by\n-        searching sibling list: previous code incorrectly assumed that\n-        outer->outer->first_child must point to outer.\n-        * verify.c (verify_jvm_instructions): FIXME added to code for\n-        `athrow'.\n-        (verify_jvm_instructions): Do not assume that the last block\n-        processed in a subroutine is a block which ends with a `ret'\n-        instruction.  With some control flows it is possible that the last\n-        block ends with an `athrow'.\n+\t* except.c (find_handler_in_range): The upper limit for exception\n+\tranges is exclusive, not inclusive: (start <= pc < end).\n+\t(link_handler): find child pointer which points to outer by\n+\tsearching sibling list: previous code incorrectly assumed that\n+\touter->outer->first_child must point to outer.\n+\t* verify.c (verify_jvm_instructions): FIXME added to code for\n+\t`athrow'.\n+\t(verify_jvm_instructions): Do not assume that the last block\n+\tprocessed in a subroutine is a block which ends with a `ret'\n+\tinstruction.  With some control flows it is possible that the last\n+\tblock ends with an `athrow'.\n \n Mon Jun 14 13:13:39 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -4183,9 +4187,9 @@ Wed Jun  2 10:35:13 1999  Anthony Green  <green@cygnus.com>\n \n Fri May 28 18:22:45 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (lookup_field_wrapper): Unified returned value to NULL\n-          or the searched field decl.\n-\t\n+\t* parse.y (lookup_field_wrapper): Unified returned value to NULL\n+\t  or the searched field decl.\n+\n Fri May 28 11:34:05 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (fold_constant_for_init): Convert numerical constant\n@@ -4211,19 +4215,19 @@ Wed May 26 15:33:06 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tCONVERT_EXPR might specify a type as a WFL.\n \n Tue May 25 15:06:13 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n- \n-        * parse.y (patch_assignment): Save the rhs before using it as an\n-        argument to _Jv_CheckArrayStore.\n- \n+\n+\t* parse.y (patch_assignment): Save the rhs before using it as an\n+\targument to _Jv_CheckArrayStore.\n+\n Tue May 25 11:23:59 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* lex.c (java_parse_doc_section): Fixed `tag' buffer size.\n \n Mon May 24 13:26:00 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * lex.c (java_lex): Accepts `+' or `-' after the beginning of a\n-        floating point litteral only when the exponent indicator has been\n-        parsed.\n+\t* lex.c (java_lex): Accepts `+' or `-' after the beginning of a\n+\tfloating point litteral only when the exponent indicator has been\n+\tparsed.\n \n Sat May 22 13:54:41 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -4332,12 +4336,12 @@ Thu May 13 13:23:38 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* xref.c (xref_get_data): New function, defined.\n \t* xref.h (xref_get_data): New function, declared.\n \t(XREF_GET_DATA): Use xref_get_data.\n-\t\n+\n 1999-05-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * gjavah.c (print_include): Cast the result of `strlen' to int\n-        when comparing against a signed value.\n-        (add_namelet): Likewise.\n+\t* gjavah.c (print_include): Cast the result of `strlen' to int\n+\twhen comparing against a signed value.\n+\t(add_namelet): Likewise.\n \n 1999-05-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -4356,10 +4360,10 @@ Thu May 13 13:23:38 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n 1999-05-11  Andrew Haley  <aph@cygnus.com>\n \n-        * parse.y (source_end_java_method): If the current method contains\n-        any exception handlers, force asynchronous_exceptions: this is\n-        necessary because signal handlers in libjava may throw exceptions.\n-        * decl.c (end_java_method): Ditto.\n+\t* parse.y (source_end_java_method): If the current method contains\n+\tany exception handlers, force asynchronous_exceptions: this is\n+\tnecessary because signal handlers in libjava may throw exceptions.\n+\t* decl.c (end_java_method): Ditto.\n \n 1999-05-11  Tom Tromey  <tromey@cygnus.com>\n \n@@ -4428,7 +4432,7 @@ Fri Apr 30 17:54:40 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* lang-options.h: Added `-Wredundant-modifers' and\n \t`-Wunusupported-jdk11' flags and help text.\n \t* lang.c (lang_decode_option): Added support for\n- \t`-Wunsupported-jdk11' and `-Wredundant-modifiers'. \n+ \t`-Wunsupported-jdk11' and `-Wredundant-modifiers'.\n \tflag_static_local_jdk11 and flag_redundant set accordingly.\n \t* lex.c (java_lex): Call BUILD_OPERATOR on CCB_TK.\n \t* parse.h (EXPR_WFL_ADD_COL): New macro.\n@@ -4517,7 +4521,7 @@ Wed Apr 21 11:13:36 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(java_expand_classes): Abort if errors were encountered.\n \t(java_complete_lhs): If the cross reference flag is set, wrap\n  \tfield DECL node around a WFL when resolving expression name.\n-\t\n+\n Mon Apr 19 14:44:48 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* lang.c (lang_decode_option): Fixed returned value when parsing\n@@ -4564,8 +4568,8 @@ Tue Apr  6 23:15:52 1999  Jeffrey A Law  (law@cygnus.com)\n \n Tue Apr  6 15:15:51 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n-        * parse.y (patch_assignment): Added ArrayStoreException runtime\n-        check.\n+\t* parse.y (patch_assignment): Added ArrayStoreException runtime\n+\tcheck.\n \n 1999-04-06  Per Bothner  <bothner@cygnus.com>\n \n@@ -4584,7 +4588,7 @@ Mon Apr  5 16:06:09 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* gjavah.c: Include math.h earlier.  Include tree.h/java-tree.h.\n \t(main_jcf): Don't define.\n \t(process_file): Don't set `main_jcf'.\n-\t\n+\n \t* java-tree.h (main_jcf): Don't declare.\n \n \t* jcf-parse.c (main_jcf): Add static definition.\n@@ -4593,26 +4597,26 @@ Mon Apr  5 16:06:09 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n Mon Apr  5 15:43:51 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * class.c (add_method_1): Cast the argument of `bzero' to PTR.\n+\t* class.c (add_method_1): Cast the argument of `bzero' to PTR.\n \n-        * decl.c (copy_lang_decl): Likewise for `bcopy'.\n+\t* decl.c (copy_lang_decl): Likewise for `bcopy'.\n \n-        * jcf-depend.c: Include \"config.h\", not <config.h>.\n+\t* jcf-depend.c: Include \"config.h\", not <config.h>.\n \n-        * jcf-parse.c (jcf_figure_file_type): Cast the arguments of\n+\t* jcf-parse.c (jcf_figure_file_type): Cast the arguments of\n \t`bcopy' to PTR.\n \n-        * jcf-path.c: Include \"config.h\", not <config.h>.\n+\t* jcf-path.c: Include \"config.h\", not <config.h>.\n \n-        * lex.c: Don't include various system header files.\n+\t* lex.c: Don't include various system header files.\n \t(java_init_lex): Cast the argument of `bzero' to PTR\n \n-        * parse-scan.y (java_push_parser_context): Likewise.\n+\t* parse-scan.y (java_push_parser_context): Likewise.\n \n-        * parse.y (java_push_parser_context): Likewise.\n+\t* parse.y (java_push_parser_context): Likewise.\n \t(patch_bc_statement): Match format specifier to variable argument.\n \n-        * xref.c: Don't include <stdio.h>.\n+\t* xref.c: Don't include <stdio.h>.\n \n Mon Apr  5 11:24:19 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -4634,10 +4638,10 @@ Mon Apr  5 11:24:19 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n Wed Mar 31 11:00:32 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * Makefile.in (keyword.h): Generate using gperf language 'C', not\n-        'KR-C', so gperf uses the `const' keyword on strings.\n+\t* Makefile.in (keyword.h): Generate using gperf language 'C', not\n+\t'KR-C', so gperf uses the `const' keyword on strings.\n \n-        * keyword.gperf (java_keyword): Const-ify a char*.\n+\t* keyword.gperf (java_keyword): Const-ify a char*.\n \n Tue Mar 30 11:31:53 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -4659,7 +4663,7 @@ Sun Mar 28 22:12:10 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* lex.c: Fix comment so as not to contain an embedded `/*'.\n \n \t* verify.c (verify_jvm_instructions): Remove unused variable\n-\t`self_type'.\t\n+\t`self_type'.\n \n Sat Mar 27 15:49:18 1999  Per Bothner  <bothner@cygnus.com>\n \n@@ -4742,7 +4746,7 @@ Tue Mar 23 10:05:27 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \tEnsure calls to `build_wfl_node' pass the proper arguments.\n \t(create_class): Remove unused variable `super_decl'.\n \t(get_printable_method_name): Initialize variable `name'.\n-\t\n+\n Mon Mar 22 20:14:26 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* Changelog: Fixed 1999-03-22 typos.\n@@ -4836,7 +4840,7 @@ Sun Mar 21 08:30:30 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \tparse_class_file): Add static prototype.\n \t(find_in_current_zip): Match definition to existing static\n \tprototype.\n-\t\n+\n \t* jcf-write.c: Include jcf.h before tree.h/java-tree.h.\n \t(alloc_chunk, append_chunk, append_chunk_copy, gen_jcf_label,\n \tfinish_jcf_block, define_jcf_label, get_jcf_label_here,\n@@ -4860,7 +4864,7 @@ Sun Mar 21 08:30:30 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* lex.c (java_parse_escape_sequence): Add static prototype.\n   \t(java_allocate_new_line): Match definition to existing static\n  \tprototype.\n-\t\n+\n \t* mangle.c Include tree.h/java-tree.h.\n \t(unicode_mangling_length, emit_unicode_mangled_name,\n \tappend_gpp_mangled_name, append_gpp_mangled_classtype): Const-ify.\n@@ -4873,7 +4877,7 @@ Sun Mar 21 08:30:30 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \tprototypes.\n \n \t* zipfile.h (opendir_in_zip, open_in_zip): Prototype.\n-\t\n+\n 1999-03-19  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (find_applicable_accessible_methods_list): Extend the\n@@ -4960,7 +4964,7 @@ Fri Mar 12 19:42:55 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \tagainst one.  Likewise for a jlong.\n \t(add_namelet): Likewise cast a `sizeof' to an int when comparing\n \tagainst a signed quantity.\n-\t\n+\n \t* jcf-dump.c (print_signature_type): Remove unused variable `digit'.\n \t(print_signature): Don't needlessly dereference variable `str'\n \n@@ -4981,17 +4985,17 @@ Fri Mar 12 19:42:55 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n 1999-03-12  Andrew Haley  <aph@cygnus.com>\n \n \t* jcf-path.c (add_entry): alloca len+2 rather than len+1 bytes;\n-        we'll need a directory separator and a null character.\n+\twe'll need a directory separator and a null character.\n \n Wed Mar 10 23:20:11 1999  Per Bothner  <bothner@cygnus.com>\n \n \t* jcf-write.c (generate_bytecode_insns):  Handle __builtin_fmod, for %.\n \n   Tue Mar  9 11:52:08 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n-  \n+\n  \t* parse.y (method_header): Don't set ACC_ABSTRACT flags on\n   \tinterfaces.\n-  \n+\n Fri Mar  5 15:17:29 1999  Per Bothner  <bothner@cygnus.com>\n \n \t* lex.c (java_parse_end_comment):  Take extra parameter (next char).\n@@ -5039,7 +5043,7 @@ Sat Mar  6 11:17:16 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t(find_in_current_zip): Likewise.  Also remove unused parameter,\n \tall callers changed.\n \t(read_class): Initialize variable `saved_pos'.\n-\t\n+\n \t* jcf-reader.c (jcf_parse_preamble): Mark variables\n \t`minor_version' and `major_version' with ATTRIBUTE_UNUSED.\n \n@@ -5171,14 +5175,14 @@ Fri Feb 19 15:35:01 1999  Per Bothner  <bothner@cygnus.com>\n \n \t* parse.y (java_complete_lhs):  Ignore an empty statement in a\n \tCOMPOUND_EXPR.  Don't complain about empty statement after return.\n-\t\n+\n Fri Feb 19 13:00:56 1999  Per Bothner  <bothner@cygnus.com>\n \n \t* parse.y (obtain_incomplete_type):  Don't wrap unknown types\n \tin TREE_LIST - just chain the POINTER_TYPEs together.\n \t(resolve_class):  If type already resolved, return decl.\n \tAfter resolving, update TREE_TYPE(class_type), and name (if array).\n-\t* parse.h (do_resolve_class), parse.y:  Make non-static.\t\n+\t* parse.h (do_resolve_class), parse.y:  Make non-static.\n \t* class.c (maybe_layout_super_class):  Take this_class argument.\n \tDo do_resolve_class if necessary.\n \t(layout_class, layout_class_methods): Adjust calls appropriately.\n@@ -5219,18 +5223,18 @@ Wed Feb  3 12:38:43 1999  Per Bothner  <bothner@cygnus.com>\n 1999-02-17  Andrew Haley  <aph@cygnus.com>\n \n \t* class.c (build_utf8_ref): Back out broken patch which was\n-        intended to to output signatures using '.' as a separator.\n+\tintended to to output signatures using '.' as a separator.\n \n-        * class.c (make_class_data): Output signatures using '.' as a\n-        separator, rather than '/'.\n-        (mangled_classname): Likewise.\n-        (make_field_value): Likewise.\n-        (make_method_value): Likewise.\n-        * constants.c (alloc_class_constant): Likewise.\n-        * expr.c (build_invokeinterface): Likewise.\n+\t* class.c (make_class_data): Output signatures using '.' as a\n+\tseparator, rather than '/'.\n+\t(mangled_classname): Likewise.\n+\t(make_field_value): Likewise.\n+\t(make_method_value): Likewise.\n+\t* constants.c (alloc_class_constant): Likewise.\n+\t* expr.c (build_invokeinterface): Likewise.\n \n Thu Feb 11 21:25:51 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n- \n+\n  \t* parse.y (valid_builtin_assignconv_identity_widening_p): Got rid\n  \tof an ancient workaround.\n \n@@ -5240,7 +5244,7 @@ Wed Feb 10 23:27:33 1999  Jeffrey A Law  (law@cygnus.com)\n \there anymore.\n \n 1999-02-10  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n-\t\n+\n \t* lex.c (yylex): Encode \\0 as UTF8.\n \n 1999-02-10  Tom Tromey  <tromey@cygnus.com>\n@@ -5269,11 +5273,11 @@ Tue Feb  9 19:31:09 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n Mon Feb  8 11:50:50 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.h: DECL_P renamed JDECL_P.\n-        * parse.y: DECL_P replaced by JDECL_P.\n-        (build_array_from_name): Always use pointer's type.\n-        (patch_bc_statement): Extra code to search continue target in a\n-        for loop. Fixed comments. Continue target is current loop when\n-        unlabeled.\n+\t* parse.y: DECL_P replaced by JDECL_P.\n+\t(build_array_from_name): Always use pointer's type.\n+\t(patch_bc_statement): Extra code to search continue target in a\n+\tfor loop. Fixed comments. Continue target is current loop when\n+\tunlabeled.\n \n 1999-02-05  Andrew Haley  <aph@cygnus.com>\n \n@@ -5290,8 +5294,8 @@ Mon Feb  8 11:50:50 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n Wed Feb  3 22:50:17 1999  Marc Espie <Marc.Espie@liafa.jussieu.fr>\n \n-        * Make-lang.in ($(GCJ)(exeext)): Remove choose-temp.o, pexecute.o and\n-        mkstemp.o.  Get them from libiberty now.\n+\t* Make-lang.in ($(GCJ)(exeext)): Remove choose-temp.o, pexecute.o and\n+\tmkstemp.o.  Get them from libiberty now.\n \n Tue Feb  2 19:49:12 1999  Jeffrey A Law  (law@cygnus.com)\n \n@@ -5310,7 +5314,7 @@ Tue Feb  2 10:39:47 1999  Per Bothner  <bothner@cygnus.com>\n \n \t* jcf-write.c (generate_bytecode_insns):  For REAL_CST that is 0 or 1,\n \tgenerate special [fd]const_[01] instructions.\n-\t\n+\n \t* jcf-parse.c (yyparse):  Don't emit_register_classes if -fsyntax-only.\n \n \t* verify.c (verify_jvm_instructions):  Do INVALIDATE_PC after\n@@ -5323,7 +5327,7 @@ Mon Feb  1 20:44:47 1999  Per Bothner  <bothner@cygnus.com>\n \n \t* parse.y (java_complete_lhs):  Don't complain about unreachable\n \texit condition in a do-while statement.\n-\t\n+\n Fri Jan 29 18:19:02 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* lex.c (java_read_char): Fixed utf8 decoding.\n@@ -5403,10 +5407,10 @@ Wed Jan 27 10:19:29 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n Mon Jan 25 17:39:19 1999  Andrew Haley  <aph@cygnus.com>\n \n-        * except.c, java-except.h (expand_resume_after_catch): new\n-        function.\n-        * expr.c (java_lang_expand_expr): call expand_resume_after_catch\n-        to branch back to main flow of control after a catch block.\n+\t* except.c, java-except.h (expand_resume_after_catch): new\n+\tfunction.\n+\t* expr.c (java_lang_expand_expr): call expand_resume_after_catch\n+\tto branch back to main flow of control after a catch block.\n \n Sat Jan 23 23:02:43 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -5510,10 +5514,10 @@ Sat Jan 23 23:02:43 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* verify.c (check_pending_block): Add the `const' keyword to a char*.\n \t(verify_jvm_instructions): Likewise.  Remove unused variables\n \t`field_name' and `default_val'.\n-\t\n+\n \t* zextract.c: Include config.h and system.h.  Remove redundant\n \tOS header includes.\n-\t\n+\n \t* zipfile.h: Prototype `read_zip_archive'.\n \n Thu Jan 21 16:00:06 1999  Andrew Haley  <aph@cygnus.com>\n@@ -5526,7 +5530,7 @@ Thu Jan 21 15:21:49 1999  Andrew Haley  <aph@cygnus.com>\n \t* typeck.c (convert_ieee_real_to_integer): New function.\n \t(convert): When not using fast-math and using hardware fp, convert\n  \tan IEEE NaN to zero.\n- \n+\n 1999-01-18  Andrew Haley  <aph@cygnus.com>\n \n \t* parse.y (patch_binop): Do a type conversion from signed to\n@@ -5547,7 +5551,7 @@ Sun Jan 17 21:55:42 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* Makefile.in (zextract.o): Add dependencies.\n \n-        * Makefile.in: Do not put ^Ls at the start of a line.\n+\t* Makefile.in: Do not put ^Ls at the start of a line.\n \n Fri Jan 15 20:16:20 1999  Per Bothner  <bothner@cygnus.com>\n \n@@ -5575,7 +5579,7 @@ Fri Jan 15 20:16:20 1999  Per Bothner  <bothner@cygnus.com>\n \tMODIFY_EXPR.  Without this, code for the assignement may not be\n \tgenerated at all and the synchronized statement will read an\n \tuninitialized variable.\n-  \t\n+\n Wed Jan 13 01:24:54 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* class.c (maybe_layout_super_class): Fixed returned value.\n@@ -5647,7 +5651,7 @@ Wed Jan  6 17:19:46 1999  Per Bothner  <bothner@cygnus.com>\n \t* expr.c (java_lang_expand_expr):  For a static array constructor\n \tof primitive elements, allocate the array itself statically.\n \tDisabled until we can set the vtable field statically.\n-\t\n+\n \t* check-init.c:  New file.  Checks for definite assignment.\n \t* Makefile.in (JAVA_OBJS):  Add check-init.o.\n \t* parse.y (java_complete_expand_method): Call check_for_initialization.\n@@ -5667,7 +5671,7 @@ Wed Jan  6 16:20:06 1999  Per Bothner  <bothner@cygnus.com>\n \n Tue Jan  5 22:15:40 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * Make-lang.in ($(GCJ).o): Depend on prefix.h.\n+\t* Make-lang.in ($(GCJ).o): Depend on prefix.h.\n \n Tue Dec 22 11:25:19 1998  Per Bothner  <bothner@cygnus.com>\n \n@@ -5677,7 +5681,7 @@ Tue Dec 22 11:25:19 1998  Per Bothner  <bothner@cygnus.com>\n \t* jcf-write.c (CHECK_PUT):  Add (void) cast to avoid -Wall warnings.\n \t(localvar_alloc):  Change return type to void,\n \t(emit_unop):  Remove unused variable size.\n-\t\n+\n \t* jcf-write.c (struct jcf_block):  Add new union.\n \t(PENDING_CLEANUP_PC, PENDING_EXIT_PC, UNDEFINED_PC):  New macros.\n \t(call_cleanups):  New functions.\n@@ -5689,7 +5693,7 @@ Tue Dec 22 11:25:19 1998  Per Bothner  <bothner@cygnus.com>\n \tcompleting operands to patch_synchronized_statement.\n \tSupport CLEANUP_POINT_EXPR, WITH_CLEANUP_EXPR.\n \t(patch_synchronized_statement): Re-write suing CLEANUP_POINT_EXPR and\n-\tWITH_CLEANUP_EXPR instead of TRY_EXPR.\t\n+\tWITH_CLEANUP_EXPR instead of TRY_EXPR.\n \n Sun Dec 20 16:15:44 1998  John F. Carr  <jfc@mit.edu>\n \n@@ -5955,7 +5959,7 @@ Sun Dec  6 13:45:00 1998  Per Bothner  <bothner@cygnus.com>\n \t* java-tree.h (CALL_USING_SUPER):  New macro.\n \t* parse.y (patch_invoke):  Remove im local variable.\n  \t(patch_method_invocation, patch_invoke):  Don't pass super parameter.\n-\t(patch_invoke):  Use CALL_USING_SUPER instead of from_super parameter. \n+\t(patch_invoke):  Use CALL_USING_SUPER instead of from_super parameter.\n \t(resolve_qualified_expression_name):  Maybe set CALL_USING_SUPER.\n \n \t* jcf-write.c (get_access_flags):  Fix typo ACC_PUBLIC -> ACC_FINAL.\n@@ -5997,7 +6001,7 @@ Thu Dec  3 17:11:12 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(declare_local_variables): Use PROMOTE_RECORD_IF_COMPLETE.\n \t(java_layout_seen_class_methods): New function.\n \t(java_layout_classes): Call java_layout_seen_class_methods.\n-\t\n+\n Thu Dec  3 15:56:50 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* parse,y (patch_synchronized_statement):  Set CAN_COMPLETE_NORMALLY.\n@@ -6045,7 +6049,7 @@ Fri Nov 27 13:20:51 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* Makefile.in (jc1, jv-scan): Link with $(SUBDIR_OBSTACK).\n \n \t* jv-scan.c: Fix xmalloc prototype.  Provide an xmalloc definition.\n-\t\n+\n \t* jvgenmain.c: Remove the xmalloc prototype, we get it from\n \tlibiberty.h.  Provide an xmalloc definition.\n \n@@ -6175,7 +6179,7 @@ Tue Nov 24 16:34:33 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(java_expand_classes): Check for errors up front.\n \t(patch_method_invocation): Class to search is resolved and laid\n  \tout.\n-\t\n+\n Tue Nov 24 12:57:13 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* expr.c (java_lang_expand_expr):  Add missing emit_queue.\n@@ -6317,7 +6321,7 @@ Wed Nov 18 23:54:53 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tlayout argument exception type.\n \t(purge_unchecked_exceptions): Use IS_UNCHECKED_EXCEPTION_P instead\n  \tof IS_UNCHECKED_EXPRESSION_P.\n-\t\n+\n Wed Nov 18 14:21:48 1998  Anthony Green  <green@cygnus.com>\n \n \t* jcf-parse.c (yyparse): Open class file in binary mode.\n@@ -6433,7 +6437,7 @@ Thu Nov 12 14:15:07 1998  Per Bothner  <bothner@cygnus.com>\n \tas part of recursive scan of block.\n \t(java_expand_switch ):  Removed - inlined into java_lang_expand_expr.\n \t(patch_switch_statement):  Most tests move dinto java_complete_tree.\n-\t\n+\n \t* parse.y:  Make various production be non-typed (void).\n \t* parse.y (parse_error):  Merged into issue_warning_error_from_context.\n \t* parse.y (add_stmt_to_compound):  Don't create/change extra node.\n@@ -6448,7 +6452,7 @@ Thu Nov 12 14:15:07 1998  Per Bothner  <bothner@cygnus.com>\n \t(generate_bytecode_conditional):  Handle REAL_TYPE comparisons.\n \t(generate_bytecode_insns):  Support REAL_CST, switch statements,\n \texception handling, method calls, object/array creation, and more.\n-\t\n+\n \t* class.c:  Remove some unused variables.\n \t* constants.c (find_string_constant):  New function.\n \t(count_constant_pool_bytes):  Fix to correctly handle wide constants.\n@@ -6804,7 +6808,7 @@ Wed Oct 28 08:03:31 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(patch_return): Take constructors into account.\n \t(patch_conditional_expr): New function.\n \t* typeck.c (build_java_signature): Removed unnecessary empty line.\n-\t\n+\n Wed Oct 28 00:46:15 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* Makefile.in (jcf-dump, gcjh): Link in $(LIBS) too.\n@@ -6961,7 +6965,7 @@ Tue Oct 20 09:15:38 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tfclose and CLASS_FROM_SOURCE_P marking.\n \t(parse_source_file): New local variables remember_for_generation\n  \tand filename. Mark parsed file name identifier node. Removed block\n- \texecuted when parse_only was null. Set remember_for_generation. \n+ \texecuted when parse_only was null. Set remember_for_generation.\n \tUse it as an argument to java_pop_parser_context.\n \t(yyparse): New local variables several_files, list, next node and\n  \tcurrent_file_list. Split ampersand separated file names into\n@@ -6972,7 +6976,7 @@ Tue Oct 20 09:15:38 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tto ctxp_for_generation list accordingly.\n \t(java_complete_expand_methods): Fixed indentation.\n \t(java_expand_classes): New function.\n-\t\n+\n Sat Oct 17 11:25:21 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* Makefile.in:  Link with libiberty.a instead of memmove.o.\n@@ -7005,7 +7009,7 @@ Fri Oct 16 10:59:01 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tfield was found is null.\n \t(qualify_ambiguous_name): Sweep through all successive array\n  \tdimensions.\n-\t\n+\n Wed Oct 14 18:21:29 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* java-tree.h (pop_labeled_block, lang_printable_name,\n@@ -7242,7 +7246,7 @@ Tue Oct 13 03:50:28 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tpurge_unchecked_exceptions): New functions.\n \t* typeck.c (lookup_argument_method): Allow WFL in place of method\n  \tDECL_NAME during method definition check\n-\t\n+\n 1998-10-09  Tom Tromey  <tromey@cygnus.com>\n \n \t* gjavah.c (decode_signature_piece): New function.\n@@ -7365,7 +7369,7 @@ Fri Oct  2 17:22:52 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(build_jump_to_finally, build_try_statement, java_get_catch_block,\n  \tpatch_try_statement): New functions.\n \t* typeck.c (match_java_method): Function deleted.\n-\t\n+\n Fri Oct  2 13:48:36 1998  Anthony Green  <green@cygnus.com>\n \n \t* jvspec.c: jvgenmain_spec uses different temporary file names.\n@@ -7621,7 +7625,7 @@ Fri Sep  4 10:42:05 1998  Tom Tromey  <tromey@cygnus.com>\n Thu Sep  3 18:04:09 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* gjavah.c:  Support new -prepend -add -append flags.\n-\t(print_method_info):  Method is not virtual if class is final.\t\n+\t(print_method_info):  Method is not virtual if class is final.\n \n Thu Sep  3 12:03:53 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -7766,7 +7770,7 @@ Wed Aug 19 17:57:07 1998  Warren Levy  <warrenl@cygnus.com>\n  \tsoft_anewarray; adjust args passed.\n \t* expr.c (build_anewarray): Adjust args for soft_anewarray_node to\n  \tmatch _Jv_NewObjectArray.\n-\t\n+\n Wed Aug 19 09:33:23 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* decl.c (push_labeled_block, pop_labeled_block): New functions.\n@@ -7796,7 +7800,7 @@ Wed Aug 19 09:33:23 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tgenerate_labeled_block, complete_labeled_statement,\n  \tbuild_bc_statement, patch_bc_statement, patch_loop_statement,\n  \tbuild_new_loop, build_loop_body, complete_loop_body): New function\n- \tdeclarations.  \n+ \tdeclarations.\n \t* parse.y (java_warning_count): New global variable.\n \t(label_id): New static variable.\n \t(BREAK_TK, CONTINUE_TK): Token tagged <operator>.\n@@ -7843,7 +7847,7 @@ Wed Aug 19 09:33:23 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tpatch_bc_statement, patch_exit_expr): New functions.\n \t* typeck.c (build_java_signature): Build argument signature before\n  \tenclosing it in between parenthesis.\n-\t\n+\n Mon Aug 17 17:44:24 1998  Warren Levy  <warrenl@cygnus.com>\n \n \t* Make-lang.in (JAVA_SRCS): Created for dependencies * Makefile.in\n@@ -7862,7 +7866,7 @@ Thu Aug 13 14:34:07 1998  Warren Levy  <warrenl@cygnus.com>\n  \tsoft_badarrayindex.  Use _Jv_CheckCast, not soft_checkcast.  Use\n  \t_Jv_CheckArrayStore, not soft_checkarraystore.  Use\n  \t_Jv_LookupInterfaceMethod, not soft_lookupinterfacemethod.\n-\t\n+\n Wed Aug 12 14:23:13 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* decl.c, java-tree.h (this_identifier_node, super_identifier_node,\n@@ -7892,9 +7896,9 @@ Tue Aug 11 11:31:55 1998  Per Bothner  <bothner@cygnus.com>\n \t* typeck.c (lookup_argument_method):  New function.\n \t* parse.y (java_check_regular_methods):  Use lookup_argument_method\n \tinstead of lookup_java_method2 followed by lookup_java_method.\n-\t\n+\n \t* parse.y (check_method_redefinition):  Minor optimization.\n-\t\n+\n \t* jcf-write.c (generate_bytecode_insns):  Handle RETURN_EXPR,\n \tMINUS_EXPR, MULT_EXPR, TRUNC_DIV_EXPR, and RDIV_EXPR.\n \n@@ -7964,7 +7968,7 @@ Wed Jul 29 13:19:03 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(refine_accessible_methods_list): Merged two conditions in test.\n \t(java_complete_class): Sanity check on stabilize_ref gone.\n \t* zextract.c (read_zip_archive): Cast lseek second argument to long.\n-\t\n+\n Tue Jul 28 21:39:22 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* class.c (hashUtf8String):  Fix - use new JavaSoft specification.\n@@ -8056,7 +8060,7 @@ Wed Jul 22 14:39:00 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tJAVA_THIS_EXPR, CALL_CONSTRUCTOR_P): Macro definition moved in\n  \tjava-tree.h.\n \t* jcf-parse.c (init_outgoing_cpool): Set current_constant_pool_data_ref\n-\tto NULL \n+\tto NULL\n \t* jcf.h (jcf_out_of_synch): New extern function prototype.\n \t* parse.h: Static/global function implemented in parse.y\n  \tprototyped and declarations moved at the end of the file.\n@@ -8116,7 +8120,7 @@ Wed Jul 22 14:39:00 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tchanged into NULLs.\n \t(not_initialized_as_it_should_p): Comply with the new DECL_P.\n \t(java_complete_tree): New case fo RETURN_EXPR. Process function\n- \tcall arguments in separate function. \n+ \tcall arguments in separate function.\n \t(complete_function_arguments): New function.\n \t(build_method_invocation): Don't use CALL_EXPR_FROM_PRIMARY_P\n  \tanymore.\n@@ -8130,7 +8134,7 @@ Wed Jul 22 14:39:00 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(buid_this): Build a WFL with `kw_this' instead of a FIELD_DECL.\n \t(build_return, patch_return): New functions.\n \t* typeck.c (lookup_java_constructor): Fixed typo in comment.\n-\t\n+\n Tue Jul 21 12:10:04 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* constants.c (find_name_and_type_constant, find_fieldref_index,\n@@ -8149,7 +8153,7 @@ Tue Jul 21 12:10:04 1998  Per Bothner  <bothner@cygnus.com>\n \t(code_buffer_grow, push_constant1, push_constant2, push_int_const,\n \tpush_long_const, field_op, adjust_typed_op, maybe_wide):\n \tNew functions used by generate_bytecode_insn.\n-\t\n+\n \t* typeck.c (signature_include_return):  Remove variable.\n \t(push_java_argument_signature, build_java_argument_signature):  New.\n \t(build_java_signature):  Use push_java_argument_signature.\n@@ -8171,7 +8175,7 @@ Thu Jul 16 15:29:20 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tby safe_layout_class.\n \t* expr.c (build_java_array_length_access): Removed static storage\n  \tclass in the function definition.\n-\t(build_java_arraynull_check): Likewise.  \n+\t(build_java_arraynull_check): Likewise.\n \tAlso fixed typos in two comments.\n \t* lex.c (java_init_lex): Initialize static global kw_length.\n \t(java_lex): Use BUILD_OPERATOR on RETURN_TK.\n@@ -8350,7 +8354,7 @@ Wed Jul  8 03:01:32 1998  Jeffrey A Law  (law@cygnus.com)\n \t* decl.c: Likewise.\n \t* lang.c (flag_new_exceptions): Get via extern now.\n \t(lang_init_options): New functions.  Turn on flag_new_exceptions.\n-\t\n+\n Tue Jul  7 12:56:48 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* lex.c (java_lex): Return 0 when we see an invalid character in\n@@ -8532,7 +8536,7 @@ Thu Jul  2 16:53:16 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \ttypo in error message.\n \t(patch_unary_op): Extract location information from the node.\n \t(build_array_ref, patch_array_ref): New functions.\n-\t\n+\n Wed Jul  1 13:11:36 1998  Tom Tromey  <tromey@cygnus.com>\n \n \t* expr.c (expand_java_INSTANCEOF): Changed calling convention to\n@@ -8577,7 +8581,7 @@ Tue Jun 23 10:17:09 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \t* lang.c (flag_new_exceptions): Make this this default.\n \t* decl.c (end_java_method): Call emit_handlers.\n \t* except.c (method_init_exceptions): Set language code and version.\n-\t(expand_start_java_handler): Enable exception, and call \n+\t(expand_start_java_handler): Enable exception, and call\n \texpand_eh_region_start.\n \t(expand_end_java_handler): Enable exception, and set up catch blocks.\n \t(emit_handlers): New routine to generate the saved handlers.\n@@ -8601,7 +8605,7 @@ Fri Jun 12 11:31:24 1998  Per Bothner  <bothner@cygnus.com>\n \tFinally, I wrote code which can generate a .class file (including its\n \tconstant pool) from the RECORD_TYPE of a class.  This is a big step\n \ton the way to compiling Java source into .class files.\n-\t\n+\n \t* jcf-write.c:  New file. Writes out a RECORD_TYPE as a .class file.\n \t* Makefile.in (JAVA_OBJS):  Added jcf-write.o.\n \n@@ -8622,7 +8626,7 @@ Fri Jun 12 11:31:24 1998  Per Bothner  <bothner@cygnus.com>\n \t(set_constant_entry, find_constant1, find_constant2,\n \tfind_class_constant, count_constant_pool_bytes, write_constant_pool,\n \tfind_utf8_constant, find_class_or_string_constant):  New functions.\n-\t\n+\n \t* jcf-parse.c (load_class):  Don't save/restore tree-constant_pool.\n  \t(get_constant):  Use current_jcf.cpool instead of tree_constant_pool.\n \t(give_name_to_class, get_class_constant):  Likewise.\n@@ -8741,7 +8745,7 @@ Tue Jun  9 18:12:46 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \twfl_operator. Improved error message on shift distance.\n \t(build_unaryop, build_incdec, build_cast, patch_unaryop,\n  \tpatch_cast): New functions.\n-\t\n+\n Fri Jun  5 18:03:07 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* jvspec.c:  New file.\n@@ -8767,7 +8771,7 @@ Tue Jun  2 15:19:19 1998  Per Bothner  <bothner@cygnus.com>\n \t* class.c:  Moved classname-mangling-rekated code to ...\n \t* mangle.c:  ... this new file.\n \t* jvgenmain.c:  New program (needs mangle.c) to generate main program.\n-\t* Makefile.in:  Update for above changes.\t \n+\t* Makefile.in:  Update for above changes.\n \n Mon Jun  1 09:58:36 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -8799,46 +8803,46 @@ Mon Jun  1 09:58:36 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tmessages and issue messages on both operands if their types are\n  \tdifferent. Force fixed type into node. Handle all binary\n  \toperators.\n-\t\n+\n Wed May 27 10:30:31 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* java-tree.h (COMPOUND_ASSIGN_P, INITIALIZED_P): New macros.\n-        * lex.c (java_lex): Use BUILD_OPERATOR and BUILD_OPERATOR2 to\n-        build operator node and return tokens.\n-        * lex.h (BUILD_OPERATOR, BUILD_OPERATOR2): New macros.\n+\t* lex.c (java_lex): Use BUILD_OPERATOR and BUILD_OPERATOR2 to\n+\tbuild operator node and return tokens.\n+\t* lex.h (BUILD_OPERATOR, BUILD_OPERATOR2): New macros.\n \t* parse.h (java_complete_tree): Changed returned type in prototype.\n \t(build_method_invocation, build_assignment, patch_assignment,\n  \tpatch_binop): New static function declarations.\n-        (JFLOAT_TYPE_P, JNUMERIC_TYPE_P, JPRIMITIVE_TYPE_P, JSTRING_P,\n+\t(JFLOAT_TYPE_P, JNUMERIC_TYPE_P, JPRIMITIVE_TYPE_P, JSTRING_P,\n  \tBUILD_EXPR_WFL): New macros.\n \t* parse.y (enum tree_code binop_lookup[]): New static for token to\n  \tTREE_CODE lookup.\n \t(%union): Parser union has new sub-structure `operator'.\n-        (ASSIGN_TK, MULT_ASSIGN_TK, DIV_ASSIGN_TK, REM_ASSIGN_TK,\n-        PLUS_ASSIGN_TK, MINUS_ASSIGN_TK, LS_ASSIGN_TK, SRS_ASSIGN_TK,\n-        ZRS_ASSIGN_TK, AND_ASSIGN_TK, XOR_ASSIGN_TK, OR_ASSIGN_TK,\n-        ASSIGN_ANY_TK): Tokens tagged `operator'.\n+\t(ASSIGN_TK, MULT_ASSIGN_TK, DIV_ASSIGN_TK, REM_ASSIGN_TK,\n+\tPLUS_ASSIGN_TK, MINUS_ASSIGN_TK, LS_ASSIGN_TK, SRS_ASSIGN_TK,\n+\tZRS_ASSIGN_TK, AND_ASSIGN_TK, XOR_ASSIGN_TK, OR_ASSIGN_TK,\n+\tASSIGN_ANY_TK): Tokens tagged `operator'.\n \t(EQ_TK, GTE_TK, ZRS_TK, SRS_TK, GT_TK, LTE_TK, LS_TK, BOOL_AND_TK,\n  \tAND_TK, BOOL_OR_TK, OR_TK, INCR_TK, PLUS_TK, DECR_TK, MINUS_TK,\n  \tMULT_TK, DIV_TK, XOR_TK, REM_TK, NEQ_TK, NEG_TK, REL_QM_TK,\n  \tREL_CL_TK, NOT_TK, LT_TK): Tokens tagged `operator'.\n-        (assignment_operator:): Rule tagged `operator'.\n+\t(assignment_operator:): Rule tagged `operator'.\n \t(expression_statement:): Re-installed default rule.\n-        (method_invocation:): Sub rules call build_method_invocation.\n+\t(method_invocation:): Sub rules call build_method_invocation.\n \t(postfix_expression:): Don't attempt to resolve name here. Just\n  \treturn an ID.\n \t(multiplicative_expression:): Sub-rules build corresponding binop\n  \texpression node.\n \t(additive_expression:, shift_expression:, and_expression:,\n  \texclusive_or_expression:, inclusive_or_expression:): Likewise.\n-        (assignment:): Sub rule invoke build_assignment.\n-        (assignment_operator:): Default rules on sub rules.\n+\t(assignment:): Sub rule invoke build_assignment.\n+\t(assignment_operator:): Default rules on sub rules.\n \t(force_error): Added documentation on this variable.\n-        (declare_local_variables): Build initialization calling\n-        build_assignment.\n-        (expand_start_java_method): Removed unused rtx declaration. Mark\n+\t(declare_local_variables): Build initialization calling\n+\tbuild_assignment.\n+\t(expand_start_java_method): Removed unused rtx declaration. Mark\n  \targuments as already initialized.\n-        (java_method_add_stmt): Type of built COMPOUND_EXPR set to NULL.\n+\t(java_method_add_stmt): Type of built COMPOUND_EXPR set to NULL.\n \t(java_complete_expand_methods): Don't process next method if\n  \tcompletion of the previous one triggered errors.\n \t(java_complete_expand_method): Call source_end_java_method if no\n@@ -9007,7 +9011,7 @@ Thu May 12 13:44:27 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tfurther. Complete function's arguments.\n  \t(build_expr_block, enter_block, exit_block, lookup_name_in_blocks,\n  \tmaybe_absorb_scoping_blocks): New functions.\n-\t\n+\n Mon Apr 27 10:50:05 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* jcf-io.c (find_class): Reset jcf->java_source after JCF_ZERO, if\n@@ -9084,7 +9088,7 @@ Mon Apr 27 10:50:05 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(add_superinterfaces): List of unresolved interfaces is\n  \tgone. Unresolved interfaces are directly added to the current\n  \tdependencies list.\n-\t(create_interface): Second pass shortcut removed. \n+\t(create_interface): Second pass shortcut removed.\n \tctpx->modifier_ctx access through MODIFIER_WFL.\n \t(create_class): Second pass shortcut removed. Call to\n  \tregister_incomplete_type replaces the call to\n@@ -9158,7 +9162,7 @@ Mon Apr 20 18:26:57 1998  Per Bothner  <bothner@cygnus.com>\n \t* typeck.c (convert):  Handle conversion to pointers (for convenience).\n \t* verify.c (verify_jvm_instructions):  Use get_type_from_signature\n \tinstead of lookup_field to handle missing fields.\n-\t\n+\n \t* jcf-parse.c (process_zip_dir):  Set java_source.\n \n 1998-04-20  Brendan Kehoe  <brendan@cygnus.com>\n@@ -9174,12 +9178,12 @@ Tue Apr 14 15:59:54 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tparser context.\n \t* lex.c (java_init_lex): Chain a WFL node to the import on demand\n  \tlist. ctxp->modifier_ctx zeroed according to its new\n- \tdefinition. ctxp->filename initialized. Removed \n+ \tdefinition. ctxp->filename initialized. Removed\n \tJAVA_MODIFIER_CTX_UNMARK.\n \t(java_unget_unicode): Update the character based column position.\n \t(java_allocate_new_line): ref_count not used anymore. Always free\n  \tctxp->p_line. Initialize c_line->char_col to 0.\n-\t(java_get_unicode): Update the character based column position. \n+\t(java_get_unicode): Update the character based column position.\n \t(java_lex): Use ctxp->elc to store current position in source\n  \tfile, at the beginning of the parsed token. Set modifier_ctx entry\n  \tcorresponding to the parse modifier to a WFL node. Return a WFL\n@@ -9206,10 +9210,10 @@ Tue Apr 14 15:59:54 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(struct parser_ctxt): Added comments on fields. modifier_ctx is\n  \tnow an array of tree nodes. Deleted fields line_list and\n  \te_line. New field elc, to replace e_line.\n-\t* parse.y (array_type:): Build WFL node. \n+\t* parse.y (array_type:): Build WFL node.\n \t(qualified_name:): Build a single WFL node out of two. Retain\n  \tthe location information of the first node in the resulting node.\n-\t(package_declaration:): Use package name as a WFL node \n+\t(package_declaration:): Use package name as a WFL node\n \t(single_type_import_declaration:): Use imported name as a WFL node.\n \t(type_import_on_demand_declaration:): Use root of the imported\n  \tpackages as a WFL node.\n@@ -9274,7 +9278,7 @@ Tue Apr 14 15:59:54 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(build_invoke): cl used as a WFL node when calling build_expr_wfl.\n \t(lookup_method_invoke): cl is now a WFL node. Added missing\n  \tIDENTIFIER_POINTER to class type decl name.\n-\t\n+\n Tue Apr 14 15:23:29 1998  Dave Brolley  <brolley@cygnus.com>\n \n \t* lang.c (init_parse): Now returns char* containing the filename.\n@@ -9424,8 +9428,8 @@ Mon Mar 16 17:25:19 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tNew functions.\n \t* typeck.c (build_java_signature): Properly end method signature\n  \tif return type skipped.\n-\t(match_java_method): New function.\t\n-\t\n+\t(match_java_method): New function.\n+\n Mon Mar 16 10:40:47 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* jcf-io.c (find_classfile):  If USE_JCF_STDIO, fopen in binary mode.\n@@ -9476,7 +9480,7 @@ Wed Feb 25 08:55:49 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(source_end_java_method, java_method_add_stmt): New functions.\n \t(java_generate_parsed_class): No longer exists.\n  \t(java_layout_parsed_class, java_register_parsed_class): New functions.\n-\t(resolve_expression_name): New function.\t\n+\t(resolve_expression_name): New function.\n \n Thu Feb 12 11:54:28 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n@@ -9790,7 +9794,7 @@ Fri Oct 17 15:56:37 1997  Per Bothner  <bothner@cygnus.com>\n \n \t* java-tree.h (PUSH_FIELD):  Set DECL_ARTIFICIAL.\n \t* class.c (make_class_data):  Don't build fields_decl if no fields.\n-\tWhen building fields_decl, skip if DECL_ARTIFICAL.  \n+\tWhen building fields_decl, skip if DECL_ARTIFICAL.\n \n \t* expr.c (java_stack_swap):  Update stack_type_map.\n \t* verify.c (merge_types):  Handle array types better.\n@@ -9894,7 +9898,7 @@ Wed Oct  1 11:26:10 1997  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* zextract.c (read_zip_archive): Now takes into account the\n  \textra_field field.\n \t* expr.c (can_widen_reference_to): Modified to handle sub-interfaces.\n-\t\n+\n Sat Sep 20 12:44:28 1997  Per Bothner  <bothner@cygnus.com>\n \n \t* constants.c, java-tree.h (build_internal_class_name):  New function.\n@@ -9953,7 +9957,7 @@ Thu Sep 11 19:45:18 1997  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* expr.c (can_widen_reference_to): Added comment to interface\n \thandling, fixed typo.\n \t(lookup_field): Now uses CLASS_P() to correct FIXME\n-\t(expand_invoke): Verification on public && !static && \n+\t(expand_invoke): Verification on public && !static &&\n \t!abstract moved into soft_lookupinterfacemethod (kaffe).\n \tUse Object class dtable if objectref is an array when expanding\n \tinvokeinterface.\n@@ -9980,7 +9984,7 @@ Thu Sep 11 11:57:32 1997  Per Bothner  <bothner@cygnus.com>\n \tthan looking for no-longer-existing static decl starting with _CL.\n \t* typeck.c (parse_signature_type):  Promote array element type\n \tif it is a RECORD_TYPE.\n-\t\n+\n Wed Sep 10 16:09:23 1997  Per Bothner  <bothner@cygnus.com>\n \n \t* class.c (push_class_static_dummy_field):  New function.\n@@ -10027,10 +10031,10 @@ Wed Sep  3 16:13:23 1997  Per Bothner  <bothner@cygnus.com>\n \t* verify.c (merge_types):  Treat all promoted integral types as equal.\n \t* constants.c (build_constants_constructor):  To force creation of\n  \tcurrent_constant_pool_data_ref, call build_constant_data_ref.\n-\t\n+\n \t* javaop.def (lload):  Fix typo.\n \t* jcf-dump.c (main):  Clear filename to prevent possibly-bad free.\n-\t\n+\n Tue Sep  2 17:37:25 1997  Brendan Kehoe  <brendan@lisa.cygnus.com>\n \n \t* parse.c: Don't include function.h.\n@@ -10041,7 +10045,7 @@ Wed Aug 27 18:33:04 1997  Per Bothner  <bothner@cygnus.com>\n \t* Makefile.in (JAVA_OBJS):  Add except.o\n \t* expr.c:  Temporary warning about unimplemented exceptions.\n \t* verify.c:  Verify exception handlers.\n-\t\n+\n \t* jcf-dump.c (disassemble_method):  Print exception table.\n \n Wed Aug 27 13:26:58 1997  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n@@ -10058,7 +10062,7 @@ Wed Aug 27 13:26:58 1997  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n  \tdtable_type.\n \t(can_widen_reference_to): Now handles interfaces.\n \t* decl.c (init_decl_processing): New global variable\n- \tsoft_lookupinterfacemethod_node, declared in java-tree.h. \n+ \tsoft_lookupinterfacemethod_node, declared in java-tree.h.\n \tCall set_super_info on string_type_node.\n \t* java-tree.h (CLASS_INTERFACE, CLASS_ABSTRACT, CLASS_SUPER): Now\n \tdefined.\n@@ -10100,12 +10104,12 @@ Wed Aug 20 14:34:34 1997  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* expr.c (build_java_jsr, build_java_ret): New functions\n \t(JSR,PRE): New macros\n \t(PRE_TABLE_SWITCH, PRE_LOOKUP_SWITCH): Fixed and secured.\n-\t(verify_jvm_instructions): tableswitch, lookupswitch, \n+\t(verify_jvm_instructions): tableswitch, lookupswitch,\n \tmonitorenter, monitorexit, goto_w: verified.\n \t(LOOKUP_SWITCH, TABLE_SWITCH): Fixed generation of default: label\n \t(build_java_monitor): New function.\n \t(MONITOR_OPERATION): Modified to call build_java_monitor()\n-\t(verify_jvm_instructions): Started a thorough verification of \n+\t(verify_jvm_instructions): Started a thorough verification of\n \tinvoke* bytecodes.\n \n Tue Aug 19 13:35:49 1997  Per Bothner  <bothner@cygnus.com>\n@@ -10130,7 +10134,7 @@ Tue Aug 19 13:35:49 1997  Per Bothner  <bothner@cygnus.com>\n \tfatal on an error.  Also handle subroutines.\n \t(verify_jvm_instructions):  Handle errors from push_poending_block.\n \tSupport jsr and ret instructions.\n-\t\n+\n Tue Aug 19 13:33:36 1997  Per Bothner  <bothner@cygnus.com>\n \n \t* jcf-io.c (find_classfile):  Fix thinko.\n@@ -10177,7 +10181,7 @@ Thu Aug  7 23:08:24 1997  Per Bothner  <bothner@cygnus.com>\n \tImplement acmpeq, acmpne, pop, pop2, swap, checkcast, instanceof.\n \tImprove newarray, anewarray, ?aload, athrow,\n \t* java-tree.h (LABEL_CHANGED):  New macro.\n-\t\n+\n Tue Aug  5 12:21:27 1997  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* decl.c (soft_athrow_node): New global variable initialized.\n@@ -10197,7 +10201,7 @@ Tue Aug  5 12:21:27 1997  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \tto Use The Right Things.\n \t(pop_type): Accept CHAR/BYTE/BOOLEAN/SHORT promoted type as\n  \tcompatible with INT. BOOLEAN is made equivalent to BYTE.\n-\t(OPCODE_athrow, OPCODE_aconst_null, OPCODE_ifnull, \n+\t(OPCODE_athrow, OPCODE_aconst_null, OPCODE_ifnull,\n \tOPCODE_ifnonnull): Now supported.\n \t(build_java_athrow): New function.\n \n@@ -10230,7 +10234,7 @@ Fri Aug  1 11:37:09 1997  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* expr.c (build_java_arraynull_check, build_java_arrayaccess,\n \tbuild_java_array_length_access, expand_java_arrayload,\n \texpand_java_arraystore, expand_java_array_length,\n-\texpand_java_multianewarray, expand_java_anewarray, \n+\texpand_java_multianewarray, expand_java_anewarray,\n \tbuild_java_check_indexed_type, is_array_type_p,\n \tbuild_java_throw_out_of_bound_exception): New functions.\n \t(STORE_INTERNAL): Now forces type of the decl to be type of the value.\n@@ -10269,7 +10273,7 @@ Fri Jul 25 11:44:21 1997  Per Bothner  <bothner@cygnus.com>\n \tclass_type_node and and method_type_node to match kaffe 0.9.1.\n \t* class.c (make_method_value, make_class_data):  Update\n \tinitializations to match.\n-\t\n+\n Wed Jul 16 17:17:50 1997  Per Bothner  <bothner@cygnus.com>\n \n \t* class.c (unicode_mangling_length, emit_unicode_mangled_name,\n@@ -10281,7 +10285,7 @@ Wed Jul 16 17:17:50 1997  Per Bothner  <bothner@cygnus.com>\n \tto a one-element array.\n \t(build_constants_constructor):  Set DECL_SIZE from complete array type.\n \t* decl.c:  Rename class_type, object_type etc to class_type_node,\n-\tobject_type_node etc.  Make former inherit from latter. \n+\tobject_type_node etc.  Make former inherit from latter.\n \t* expr.c (expand_invoke):  Add cast of function address.\n \t* java-tree.h (TYPE_ARRAY_ELEMENT, PUSH_SUPER_VALUE):  New.\n \t* parse.c (yyparse):  Don't call layout_class here.\n@@ -10329,7 +10333,7 @@ Tue Jun  3 10:14:31 1997  Per Bothner  <bothner@cygnus.com>\n \t(build_java_signature):  New function - build Java signature of type.\n \t(set_java_signature):  New function - cache signature with type.\n \t(lookup_java_method):  New function.\n-\t\n+\n Tue May  6 22:08:24 1997  Per Bothner  <bothner@deneb.cygnus.com>\n \n \t* class.c (ident_subst):  Take extra SUFFIX parameter.\n@@ -10389,7 +10393,7 @@ Thu Oct 24 14:10:16 1996  Per Bothner  <bothner@deneb.cygnus.com>\n \n \t* jcf.h:  Make NEW_CPOOL the default.\n \t* jcf.h, jcf-reader.c, parse.c:  Remove support for !NEW_CPOOL.\n-\t\n+\n Thu Oct 24 13:52:45 1996  Per Bothner  <bothner@deneb.cygnus.com>\n \n \tNew directory."}, {"sha": "485639510c1b95bf0ce81d44719a09f8e4dc7344", "filename": "gcc/java/jvgenmain.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fjava%2Fjvgenmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fjava%2Fjvgenmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvgenmain.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -144,7 +144,7 @@ main (int argc, const char **argv)\n       fprintf (stream, \"  \\\"\");\n       for (p = &argv[i][2]; *p; ++p)\n \t{\n-\t  if (! isascii (*p))\n+\t  if (! ISPRINT (*p))\n \t    fprintf (stream, \"\\\\%o\", *p);\n \t  else if (*p == '\\\\' || *p == '\"')\n \t    fprintf (stream, \"\\\\%c\", *p);"}, {"sha": "754fc242d70ee079ee8c7d322bab5ace7290d460", "filename": "gcc/system.h", "status": "modified", "additions": 5, "deletions": 84, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -75,91 +75,12 @@ extern int fputs_unlocked PARAMS ((const char *, FILE *));\n # endif\n #endif\n \n-#include <ctype.h>\n+/* There are an extraordinary number of issues with <ctype.h>.\n+   The last straw is that it varies with the locale.  Use libiberty's\n+   replacement instead.  */\n+#include <safe-ctype.h>\n \n-/* Jim Meyering writes:\n-\n-   \"... Some ctype macros are valid only for character codes that\n-   isascii says are ASCII (SGI's IRIX-4.0.5 is one such system --when\n-   using /bin/cc or gcc but without giving an ansi option).  So, all\n-   ctype uses should be through macros like ISPRINT...  If\n-   STDC_HEADERS is defined, then autoconf has verified that the ctype\n-   macros don't need to be guarded with references to isascii. ...\n-   Defining isascii to 1 should let any compiler worth its salt\n-   eliminate the && through constant folding.\"\n-\n-   Bruno Haible adds:\n-\n-   \"... Furthermore, isupper(c) etc. have an undefined result if c is\n-   outside the range -1 <= c <= 255. One is tempted to write isupper(c)\n-   with c being of type `char', but this is wrong if c is an 8-bit\n-   character >= 128 which gets sign-extended to a negative value.\n-   The macro ISUPPER protects against this as well.\"  */\n-\n-#if defined (STDC_HEADERS) || (!defined (isascii) && !defined (HAVE_ISASCII)) || defined(HOST_EBCDIC)\n-# define IN_CTYPE_DOMAIN(c) 1\n-#else\n-# define IN_CTYPE_DOMAIN(c) isascii(c)\n-#endif\n-\n-/* The ctype functions are often implemented as macros which do\n-   lookups in arrays using the parameter as the offset.  If the ctype\n-   function parameter is a char, then gcc will (appropriately) warn\n-   that a \"subscript has type char\".  Using a (signed) char as a subscript\n-   is bad because you may get negative offsets and thus it is not 8-bit\n-   safe.  The CTYPE_CONV macro ensures that the parameter is cast to an\n-   unsigned char when a char is passed in.  When an int is passed in, the\n-   parameter is left alone so we don't lose EOF.\n-*/\n-\n-#define CTYPE_CONV(CH) \\\n-  (sizeof(CH) == sizeof(unsigned char) ? (int)(unsigned char)(CH) : (int)(CH))\n-\n-\n-/* WARNING!  The argument to the ctype replacement macros below is\n-   evaluated more than once so it must not have side effects!  */\n-\n-#ifdef isblank\n-# define ISBLANK(c) (IN_CTYPE_DOMAIN (c) && isblank (CTYPE_CONV(c)))\n-#else\n-# define ISBLANK(c) ((c) == ' ' || (c) == '\\t')\n-#endif\n-#ifdef isgraph\n-# define ISGRAPH(c) (IN_CTYPE_DOMAIN (c) && isgraph (CTYPE_CONV(c)))\n-#else\n-# define ISGRAPH(c) (IN_CTYPE_DOMAIN (c) && isprint (CTYPE_CONV(c)) && !isspace (CTYPE_CONV(c)))\n-#endif\n-\n-#define ISPRINT(c) (IN_CTYPE_DOMAIN (c) && isprint (CTYPE_CONV(c)))\n-#define ISALNUM(c) (IN_CTYPE_DOMAIN (c) && isalnum (CTYPE_CONV(c)))\n-#define ISALPHA(c) (IN_CTYPE_DOMAIN (c) && isalpha (CTYPE_CONV(c)))\n-#define ISCNTRL(c) (IN_CTYPE_DOMAIN (c) && iscntrl (CTYPE_CONV(c)))\n-#define ISLOWER(c) (IN_CTYPE_DOMAIN (c) && islower (CTYPE_CONV(c)))\n-#define ISPUNCT(c) (IN_CTYPE_DOMAIN (c) && ispunct (CTYPE_CONV(c)))\n-#define ISSPACE(c) (IN_CTYPE_DOMAIN (c) && isspace (CTYPE_CONV(c)))\n-#define ISUPPER(c) (IN_CTYPE_DOMAIN (c) && isupper (CTYPE_CONV(c)))\n-#define ISXDIGIT(c) (IN_CTYPE_DOMAIN (c) && isxdigit (CTYPE_CONV(c)))\n-#define ISDIGIT_LOCALE(c) (IN_CTYPE_DOMAIN (c) && isdigit (CTYPE_CONV(c)))\n-\n-#if STDC_HEADERS\n-# define TOLOWER(c) (tolower (CTYPE_CONV(c)))\n-# define TOUPPER(c) (toupper (CTYPE_CONV(c)))\n-#else\n-# define TOLOWER(c) (ISUPPER (c) ? tolower (CTYPE_CONV(c)) : (c))\n-# define TOUPPER(c) (ISLOWER (c) ? toupper (CTYPE_CONV(c)) : (c))\n-#endif\n-\n-/* ISDIGIT differs from ISDIGIT_LOCALE, as follows:\n-   - Its arg may be any int or unsigned int; it need not be an unsigned char.\n-   - It's guaranteed to evaluate its argument exactly once.\n-   - It's typically faster.\n-   Posix 1003.2-1992 section 2.5.2.1 page 50 lines 1556-1558 says that\n-   only '0' through '9' are digits.  Prefer ISDIGIT to ISDIGIT_LOCALE unless\n-   it's important to use the locale's definition of `digit' even when the\n-   host does not conform to Posix.  */\n-#define ISDIGIT(c) ((unsigned) (c) - '0' <= 9)\n-\n-/* Define a default escape character; its different for EBCDIC.  */\n+/* Define a default escape character; it's different for EBCDIC.  */\n #ifndef TARGET_ESC\n #define TARGET_ESC 033\n #endif"}, {"sha": "1cc7aa8dbcfe082778f55b48dc584eb97a56f55e", "filename": "gcc/tradcif.y", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ftradcif.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ftradcif.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcif.y?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -402,21 +402,21 @@ yylex ()\n   if (c >= '0' && c <= '9') {\n     /* It's a number */\n     for (namelen = 0;\n-\t c = tokstart[namelen], is_idchar[c] || c == '.'; \n+\t c = tokstart[namelen], is_idchar (c) || c == '.'; \n \t namelen++)\n       ;\n     return parse_number (namelen);\n   }\n   \n-  if (!is_idstart[c]) {\n+  if (!is_idstart (c)) {\n     yyerror (\"Invalid token in expression\");\n     return ERROR;\n   }\n   \n   /* It is a name.  See how long it is.  */\n   \n   for (namelen = 0;\n-       is_idchar[(int)(unsigned char)tokstart[namelen]];\n+       is_idchar (tokstart[namelen]);\n        namelen++)\n     ;\n   "}, {"sha": "2117903ef2b0963c34ab4f0e82812bf92bc74b91", "filename": "gcc/tradcpp.c", "status": "modified", "additions": 64, "deletions": 119, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ftradcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ftradcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -376,7 +376,6 @@ static void output_line_command PARAMS ((FILE_BUF *, FILE_BUF *,\n \n static int eval_if_expression\tPARAMS ((const U_CHAR *, int));\n \n-static void initialize_char_syntax\tPARAMS ((void));\n static void initialize_builtins\tPARAMS ((void));\n static void run_directive\tPARAMS ((const char *, size_t,\n \t\t\t\t\t enum node_type));\n@@ -424,17 +423,8 @@ struct directive directive_table[] = {\n   {  -1, 0, \"\", T_UNUSED},\n };\n \n-/* table to tell if char can be part of a C identifier. */\n-U_CHAR is_idchar[256];\n-/* table to tell if char can be first char of a c identifier. */\n-U_CHAR is_idstart[256];\n-/* table to tell if c is horizontal space.  */\n-U_CHAR is_hor_space[256];\n-/* table to tell if c is horizontal or vertical space.  */\n-U_CHAR is_space[256];\n-\n-#define SKIP_WHITE_SPACE(p) do { while (is_hor_space[*p]) p++; } while (0)\n-#define SKIP_ALL_WHITE_SPACE(p) do { while (is_space[*p]) p++; } while (0)\n+#define SKIP_WHITE_SPACE(p) do { while (is_nvspace(*p)) p++; } while (0)\n+#define SKIP_ALL_WHITE_SPACE(p) do { while (is_space(*p)) p++; } while (0)\n   \n int errors = 0;\t\t\t/* Error counter for exit code */\n \n@@ -522,9 +512,6 @@ main (argc, argv)\n   in_fname = NULL;\n   out_fname = NULL;\n \n-  /* Initialize is_idchar to allow $.  */\n-  initialize_char_syntax ();\n-\n   no_line_commands = 0;\n   dump_macros = 0;\n   no_output = 0;\n@@ -726,11 +713,7 @@ main (argc, argv)\n   if (user_label_prefix == 0)\n     user_label_prefix = USER_LABEL_PREFIX;\n \n-  /* Initialize is_idchar.  */\n-  initialize_char_syntax ();\n-\n-  /* Install __LINE__, etc.  Must follow initialize_char_syntax\n-     and option processing.  */\n+  /* Install __LINE__, etc.  Must follow option processing.  */\n   initialize_builtins ();\n \n   /* Do defines specified with -D and undefines specified with -U.  */\n@@ -1052,14 +1035,14 @@ name_newline_fix (bp)\n \n   /* What follows the backslash-newlines is not embarrassing.  */\n \n-  if (count == 0 || !is_idchar[*p])\n+  if (count == 0 || !is_idchar (*p))\n     return;\n \n   /* Copy all potentially embarrassing characters\n      that follow the backslash-newline pairs\n      down to where the pairs originally started.  */\n \n-  while (is_idchar[*p])\n+  while (is_idchar (*p))\n     *bp++ = *p++;\n \n   /* Now write the same number of pairs after the embarrassing chars.  */\n@@ -1463,7 +1446,7 @@ do { ip = &instack[indepth];\t\t\\\n \t    /* If expanding a macro arg, keep the newline -.  */\n \t    *obp++ = '-';\n \t  }\n-\t} else if (is_space[*ibp]) {\n+\t} else if (is_space (*ibp)) {\n \t  /* Newline Space does not prevent expansion of preceding token\n \t     so expand the preceding token and then come back.  */\n \t  if (ident_length > 0)\n@@ -1514,7 +1497,7 @@ do { ip = &instack[indepth];\t\t\\\n \tibp--;\n \t/* If we have an identifier that ends here, process it now, so\n \t   we get the right error for recursion.  */\n-\tif (ident_length && ! is_idchar[*instack[indepth - 1].bufp]) {\n+\tif (ident_length && ! is_idchar (*instack[indepth - 1].bufp)) {\n \t  redo_char = 1;\n \t  goto randomchar;\n \t}\n@@ -1642,7 +1625,7 @@ do { ip = &instack[indepth];\t\t\\\n \t\t      *obp++ = '/';\n \t\t    }\n \t\t  }\n-\t\t  else if (is_space[*ibp]) {\n+\t\t  else if (is_space (*ibp)) {\n \t\t    *obp++ = *ibp++;\n \t\t    if (ibp[-1] == '\\n') {\n \t\t      if (ip->macro == 0) {\n@@ -1837,7 +1820,7 @@ handle_directive (ip, op)\n   bp = ip->bufp;\n   /* Skip whitespace and \\-newline.  */\n   while (1) {\n-    if (is_hor_space[*bp])\n+    if (is_nvspace (*bp))\n       bp++;\n     else if (*bp == '/' && (newline_fix (bp + 1), bp[1]) == '*') {\n       ip->bufp = bp;\n@@ -1854,12 +1837,12 @@ handle_directive (ip, op)\n \n   cp = bp;\n   while (1) {\n-    if (is_idchar[*cp])\n+    if (is_idchar (*cp))\n       cp++;\n     else {\n       if (*cp == '\\\\' && cp[1] == '\\n')\n \tname_newline_fix (cp);\n-      if (is_idchar[*cp])\n+      if (is_idchar (*cp))\n \tcp++;\n       else break;\n     }\n@@ -1996,11 +1979,11 @@ handle_directive (ip, op)\n \t    if (*xp == '\\n') {\n \t      xp++;\n \t      cp--;\n-\t      if (cp != buf && is_space[cp[-1]]) {\n-\t\twhile (cp != buf && is_space[cp[-1]]) cp--;\n+\t      if (cp != buf && is_space (cp[-1])) {\n+\t\twhile (cp != buf && is_space(cp[-1])) cp--;\n \t\tcp++;\n \t\tSKIP_WHITE_SPACE (xp);\n-\t      } else if (is_space[*xp]) {\n+\t      } else if (is_space (*xp)) {\n \t\t*cp++ = *xp++;\n \t\tSKIP_WHITE_SPACE (xp);\n \t      }\n@@ -2172,11 +2155,11 @@ special_symbol (hp, op)\n       SKIP_WHITE_SPACE (ip->bufp);\n     }\n \n-    if (!is_idstart[*ip->bufp])\n+    if (!is_idstart (*ip->bufp))\n       goto oops;\n     if (lookup (ip->bufp, -1, -1))\n       buf = \" 1 \";\n-    while (is_idchar[*ip->bufp])\n+    while (is_idchar (*ip->bufp))\n       ++ip->bufp;\n     SKIP_WHITE_SPACE (ip->bufp);\n     if (paren) {\n@@ -2235,7 +2218,7 @@ do_include (buf, limit, op)\n   SKIP_WHITE_SPACE (fbeg);\n   /* Discard trailing whitespace so we can easily see\n      if we have parsed all the significant chars we were given.  */\n-  while (limit != fbeg && is_hor_space[limit[-1]]) limit--;\n+  while (limit != fbeg && is_nvspace (limit[-1])) limit--;\n \n   switch (*fbeg++) {\n   case '\\\"':\n@@ -2514,17 +2497,17 @@ do_define (buf, limit, op)\n \n   bp = buf;\n \n-  while (is_hor_space[*bp])\n+  while (is_nvspace (*bp))\n     bp++;\n \n   symname = bp;\t\t\t/* remember where it starts */\n-  while (is_idchar[*bp] && bp < limit) {\n+  while (is_idchar (*bp) && bp < limit) {\n     bp++;\n   }\n   sym_length = bp - symname;\n   if (sym_length == 0)\n     error (\"invalid macro name\");\n-  else if (!is_idstart[*symname]) {\n+  else if (!is_idstart (*symname)) {\n     U_CHAR *msg;\t\t\t/* what pain... */\n     msg = (U_CHAR *) alloca (sym_length + 1);\n     memcpy (msg, symname, sym_length);\n@@ -2556,11 +2539,11 @@ do_define (buf, limit, op)\n       temp->argno = argno++;\n       arg_ptrs = temp;\n \n-      if (!is_idstart[*bp])\n+      if (!is_idstart (*bp))\n \twarning (\"parameter name starts with a digit in #define\");\n \n       /* Find the end of the arg name.  */\n-      while (is_idchar[*bp]) {\n+      while (is_idchar (*bp)) {\n \tbp++;\n       }\n       temp->length = bp - temp->name;\n@@ -2581,7 +2564,7 @@ do_define (buf, limit, op)\n     }\n \n     ++bp;\t\t\t/* skip paren */\n-    while (is_hor_space[*bp])\t/* and leading whitespace */\n+    while (is_nvspace (*bp))\t/* and leading whitespace */\n       ++bp;\n     /* now everything from bp before limit is the definition. */\n     defn = collect_expansion (bp, limit, argno, arg_ptrs);\n@@ -2608,7 +2591,7 @@ do_define (buf, limit, op)\n     }\n   } else {\n     /* simple expansion or empty definition; skip leading whitespace */\n-    while (is_hor_space[*bp])\n+    while (is_nvspace (*bp))\n       ++bp;\n     /* now everything from bp before limit is the definition. */\n     defn = collect_expansion (bp, limit, -1, 0);\n@@ -2689,17 +2672,17 @@ comp_def_part (first, beg1, len1, beg2, len2, last)\n   register const U_CHAR *end1 = beg1 + len1;\n   register const U_CHAR *end2 = beg2 + len2;\n   if (first) {\n-    while (beg1 != end1 && is_space[*beg1]) beg1++;\n-    while (beg2 != end2 && is_space[*beg2]) beg2++;\n+    while (beg1 != end1 && is_space (*beg1)) beg1++;\n+    while (beg2 != end2 && is_space (*beg2)) beg2++;\n   }\n   if (last) {\n-    while (beg1 != end1 && is_space[end1[-1]]) end1--;\n-    while (beg2 != end2 && is_space[end2[-1]]) end2--;\n+    while (beg1 != end1 && is_space (end1[-1])) end1--;\n+    while (beg2 != end2 && is_space (end2[-1])) end2--;\n   }\n   while (beg1 != end1 && beg2 != end2) {\n-    if (is_space[*beg1] && is_space[*beg2]) {\n-      while (beg1 != end1 && is_space[*beg1]) beg1++;\n-      while (beg2 != end2 && is_space[*beg2]) beg2++;\n+    if (is_space (*beg1) && is_space (*beg2)) {\n+      while (beg1 != end1 && is_space (*beg1)) beg1++;\n+      while (beg2 != end2 && is_space (*beg2)) beg2++;\n     } else if (*beg1 == *beg2) {\n       beg1++; beg2++;\n     } else break;\n@@ -2756,8 +2739,8 @@ collect_expansion (buf, end, nargs, arglist)\n   /* Find end of leading whitespace.  */\n   limit = end;\n   p = buf;\n-  while (p < limit && is_space[limit[-1]]) limit--;\n-  while (p < limit && is_space[*p]) p++;\n+  while (p < limit && is_space (limit[-1])) limit--;\n+  while (p < limit && is_space (*p)) p++;\n \n   /* Allocate space for the text in the macro definition.\n      Leading and trailing whitespace chars need 2 bytes each.\n@@ -2776,7 +2759,7 @@ collect_expansion (buf, end, nargs, arglist)\n   p = buf;\n \n   /* Convert leading whitespace to Newline-markers.  */\n-  while (p < limit && is_space[*p]) {\n+  while (p < limit && is_space (*p)) {\n     *exp_p++ = '\\n';\n     *exp_p++ = *p++;\n   }\n@@ -2826,15 +2809,15 @@ collect_expansion (buf, end, nargs, arglist)\n       break;\n     }\n \n-    if (is_idchar[c] && nargs > 0) {\n+    if (is_idchar (c) && nargs > 0) {\n       U_CHAR *id_beg = p - 1;\n       int id_len;\n \n       --exp_p;\n-      while (p != limit && is_idchar[*p]) p++;\n+      while (p != limit && is_idchar (*p)) p++;\n       id_len = p - id_beg;\n \n-      if (is_idstart[c]) {\n+      if (is_idstart (c)) {\n \tregister struct arglist *arg;\n \n \tfor (arg = arglist; arg != NULL; arg = arg->next) {\n@@ -2887,7 +2870,7 @@ collect_expansion (buf, end, nargs, arglist)\n \n   if (limit < end) {\n     /* Convert trailing whitespace to Newline-markers.  */\n-    while (limit < end && is_space[*limit]) {\n+    while (limit < end && is_space (*limit)) {\n       *exp_p++ = '\\n';\n       *exp_p++ = *limit++;\n     }\n@@ -2941,7 +2924,7 @@ do_line (buf, limit, op)\n     bp++;\n \n #if 0 /* #line 10\"foo.c\" is supposed to be allowed.  */\n-  if (*bp && !is_space[*bp]) {\n+  if (*bp && !is_space (*bp)) {\n     error (\"invalid format #line command\");\n     return;\n   }\n@@ -3030,7 +3013,7 @@ do_undef (buf, limit, op)\n \n   SKIP_WHITE_SPACE (buf);\n \n-  if (! strncmp ((const char *)buf, \"defined\", 7) && ! is_idchar[buf[7]])\n+  if (! strncmp ((const char *)buf, \"defined\", 7) && ! is_idchar (buf[7]))\n     warning (\"undefining `defined'\");\n \n   while ((hp = lookup (buf, -1, -1)) != NULL) {\n@@ -3121,11 +3104,11 @@ parse_assertion (buf, limit, answerp, type)\n   unsigned int len;\n \n   bp = symname;\n-  if (bp < climit && is_idstart[*bp])\n+  if (bp < climit && is_idstart (*bp))\n     {\n       do\n \tbp++;\n-      while (bp < climit && is_idchar[*bp]);\n+      while (bp < climit && is_idchar (*bp));\n     }\n   len = bp - symname;\n \n@@ -3177,9 +3160,9 @@ test_assertion (pbuf)\n \n       /* Yuk.  We update pbuf to point after the assertion test.\n \t First, move past the identifier.  */\n-      if (is_space[*buf])\n+      if (is_space (*buf))\n \tbuf++;\n-      while (is_idchar[*buf])\n+      while (is_idchar (*buf))\n \tbuf++;\n       /* If we have an answer, we need to move past the parentheses.  */\n       if (answer)\n@@ -3292,11 +3275,11 @@ canonicalize_text (buf, limit, climit)\n \n   for (dest = result; buf < limit;)\n     {\n-      if (! is_space[*buf])\n+      if (! is_space (*buf))\n \t*dest++ = *buf++;\n       else\n \t{\n-\t  while (++buf < limit && is_space [*buf])\n+\t  while (++buf < limit && is_space (*buf))\n \t    ;\n \t  if (dest != result && buf != limit)\n \t    *dest++ = ' ';\n@@ -3411,10 +3394,10 @@ do_xifdef (buf, limit, type)\n \n   /* Discard leading and trailing whitespace.  */\n   SKIP_WHITE_SPACE (buf);\n-  while (limit != buf && is_hor_space[limit[-1]]) limit--;\n+  while (limit != buf && is_nvspace (limit[-1])) limit--;\n \n   /* Find the end of the identifier at the beginning.  */\n-  for (end = buf; is_idchar[*end]; end++);\n+  for (end = buf; is_idchar (*end); end++);\n \n   if (end == buf)\n     skip = (type == T_IFDEF);\n@@ -3521,7 +3504,7 @@ skip_if_group (ip, any)\n \t If not, this # is not special.  */\n       bp = beg_of_line;\n       while (1) {\n-\tif (is_hor_space[*bp])\n+\tif (is_nvspace (*bp))\n \t  bp++;\n \telse if (*bp == '\\\\' && bp[1] == '\\n')\n \t  bp += 2;\n@@ -3545,7 +3528,7 @@ skip_if_group (ip, any)\n \n       /* Skip whitespace and \\-newline.  */\n       while (1) {\n-\tif (is_hor_space[*bp])\n+\tif (is_nvspace (*bp))\n \t  bp++;\n \telse if (*bp == '\\\\' && bp[1] == '\\n')\n \t  bp += 2;\n@@ -3565,12 +3548,12 @@ skip_if_group (ip, any)\n \t symbol-constituents so that we end up with a contiguous name.  */\n \n       while (1) {\n-\tif (is_idchar[*bp])\n+\tif (is_idchar (*bp))\n \t  bp++;\n \telse {\n \t  if (*bp == '\\\\' && bp[1] == '\\n')\n \t    name_newline_fix (bp);\n-\t  if (is_idchar[*bp])\n+\t  if (is_idchar (*bp))\n \t    bp++;\n \t  else break;\n \t}\n@@ -3579,7 +3562,7 @@ skip_if_group (ip, any)\n       for (kt = directive_table; kt->length >= 0; kt++) {\n \tIF_STACK_FRAME *temp;\n \tif (strncmp ((const char *)cp, kt->name, kt->length) == 0\n-\t    && !is_idchar[cp[kt->length]]) {\n+\t    && !is_idchar (cp[kt->length])) {\n \n \t  /* If we are asked to return on next directive,\n \t     do so now.  */\n@@ -3926,7 +3909,7 @@ macroexpand (hp, op)\n     if (i == 1) {\n       register const U_CHAR *bp = args[0].raw;\n       register const U_CHAR *lim = bp + args[0].raw_length;\n-      while (bp != lim && is_space[*bp]) bp++;\n+      while (bp != lim && is_space (*bp)) bp++;\n       if (bp == lim)\n \ti = 0;\n     }\n@@ -3994,10 +3977,10 @@ macroexpand (hp, op)\n \t  int c;\n \t  i = 0;\n \t  while (i < arglen\n-\t\t && (c = arg->raw[i], is_space[c]))\n+\t\t && (c = arg->raw[i], is_space (c)))\n \t    i++;\n \t  while (i < arglen\n-\t\t && (c = arg->raw[arglen - 1], is_space[c]))\n+\t\t && (c = arg->raw[arglen - 1], is_space (c)))\n \t    arglen--;\n \t  for (; i < arglen; i++) {\n \t    c = arg->raw[i];\n@@ -4012,13 +3995,13 @@ macroexpand (hp, op)\n \t    /* Internal sequences of whitespace are replaced by one space\n \t       except within an string or char token.  */\n \t    if (! in_string\n-\t\t&& (c == '\\n' ? arg->raw[i+1] == '\\n' : is_space[c])) {\n+\t\t&& (c == '\\n' ? arg->raw[i+1] == '\\n' : is_space (c))) {\n \t      while (1) {\n \t\t/* Note that Newline Space does occur within whitespace\n \t\t   sequences; consider it part of the sequence.  */\n-\t\tif (c == '\\n' && is_space[arg->raw[i+1]])\n+\t\tif (c == '\\n' && is_space (arg->raw[i+1]))\n \t\t  i += 2;\n-\t\telse if (c != '\\n' && is_space[c])\n+\t\telse if (c != '\\n' && is_space (c))\n \t\t  i++;\n \t\telse break;\n \t\tc = arg->raw[i];\n@@ -4054,8 +4037,8 @@ macroexpand (hp, op)\n \t  const U_CHAR *l1 = p1 + arg->raw_length;\n \n \t  if (ap->raw_before) {\n-\t    while (p1 != l1 && is_space[*p1]) p1++;\n-\t    while (p1 != l1 && is_idchar[*p1])\n+\t    while (p1 != l1 && is_space (*p1)) p1++;\n+\t    while (p1 != l1 && is_idchar (*p1))\n \t      xbuf[totlen++] = *p1++;\n \t    /* Delete any no-reexpansion marker that follows\n \t       an identifier at the beginning of the argument\n@@ -4067,7 +4050,7 @@ macroexpand (hp, op)\n \t    /* Arg is concatenated after: delete trailing whitespace,\n \t       whitespace markers, and no-reexpansion markers.  */\n \t    while (p1 != l1) {\n-\t      if (is_space[l1[-1]]) l1--;\n+\t      if (is_space (l1[-1])) l1--;\n \t      else if (l1[-1] == '-') {\n \t\tconst U_CHAR *p2 = l1 - 1;\n \t\t/* If a `-' is preceded by an odd number of newlines then it\n@@ -4681,7 +4664,7 @@ install (name, len, type, hash)\n \n   if (len < 0) {\n     p = name;\n-    while (is_idchar[*p])\n+    while (is_idchar (*p))\n       p++;\n     len = p - name;\n   }\n@@ -4725,7 +4708,7 @@ lookup (name, len, hash)\n   register HASHNODE *bucket;\n \n   if (len < 0) {\n-    for (bp = name; is_idchar[*bp]; bp++) ;\n+    for (bp = name; is_idchar (*bp); bp++) ;\n     len = bp - name;\n   }\n \n@@ -4896,44 +4879,6 @@ dump_arg_n (defn, argnum)\n     p++;\n   }\n }\n-\f\n-/* Initialize syntactic classifications of characters.  */\n-static void\n-initialize_char_syntax ()\n-{\n-  register int i;\n-\n-  /*\n-   * Set up is_idchar and is_idstart tables.  These should be\n-   * faster than saying (is_alpha (c) || c == '_'), etc.\n-   * Must do set up these things before calling any routines tthat\n-   * refer to them.\n-   */\n-  for (i = 'a'; i <= 'z'; i++) {\n-    is_idchar[i - 'a' + 'A'] = 1;\n-    is_idchar[i] = 1;\n-    is_idstart[i - 'a' + 'A'] = 1;\n-    is_idstart[i] = 1;\n-  }\n-  for (i = '0'; i <= '9'; i++)\n-    is_idchar[i] = 1;\n-  is_idchar['_'] = 1;\n-  is_idstart['_'] = 1;\n-\n-  /* horizontal space table */\n-  is_hor_space[' '] = 1;\n-  is_hor_space['\\t'] = 1;\n-  is_hor_space['\\v'] = 1;\n-  is_hor_space['\\f'] = 1;\n-  is_hor_space['\\r'] = 1;\n-\n-  is_space[' '] = 1;\n-  is_space['\\t'] = 1;\n-  is_space['\\v'] = 1;\n-  is_space['\\f'] = 1;\n-  is_space['\\n'] = 1;\n-  is_space['\\r'] = 1;\n-}\n \n /* Initialize the built-in macros.  */\n #define DSC(x) U x, sizeof x - 1"}, {"sha": "f4c9ff34e3de54402f305b4276e898b9ff1a7645", "filename": "gcc/tradcpp.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ftradcpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/gcc%2Ftradcpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.h?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -36,7 +36,9 @@ extern struct hashnode *lookup PARAMS ((const unsigned char *, int, int));\n extern int parse_c_expression PARAMS ((const char *));  /* in tradcif.y */\n extern int test_assertion PARAMS ((unsigned char **));\n \n-/* some external tables of character types */\n-extern unsigned char is_idstart[], is_idchar[];\n+#define is_idchar(x)\tISIDNUM(x)\n+#define is_idstart(x)\tISIDST(x)\n+#define is_space(x)\tISSPACE(x)\n+#define is_nvspace(x)\tIS_NVSPACE(x)\n \n #endif /* ! _TRADCPP_H_ */"}, {"sha": "69c04ad6dbf1d7cecf94fc45f2a8f97f21ca1f55", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -1,3 +1,7 @@\n+2000-12-07  Zack Weinberg  <zack@wolery.stanford.edu>\n+\n+\t* safe-ctype.h: New file.\n+\n 2000-12-06  Rodney Brown  <RodneyBrown@mynd.com>\n \n \t* getopt.h obstack.h: Standarize copyright statement."}, {"sha": "977653c75a2fb40ba43433c3075b7830ad77d573", "filename": "include/safe-ctype.h", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/include%2Fsafe-ctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/include%2Fsafe-ctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fsafe-ctype.h?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -0,0 +1,105 @@\n+/* <ctype.h> replacement macros.\n+\n+   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Contributed by Zack Weinberg <zackw@stanford.edu>.\n+\n+This file is part of the libiberty library.\n+Libiberty is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Library General Public\n+License as published by the Free Software Foundation; either\n+version 2 of the License, or (at your option) any later version.\n+\n+Libiberty is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+Library General Public License for more details.\n+\n+You should have received a copy of the GNU Library General Public\n+License along with libiberty; see the file COPYING.LIB.  If\n+not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This is a compatible replacement of the standard C library's <ctype.h>\n+   with the following properties:\n+\n+   - Implements all isxxx() macros required by C99.\n+   - Also implements some character classes useful when\n+     parsing C-like languages.\n+   - Does not change behavior depending on the current locale.\n+   - Behaves properly for all values in the range of a signed or\n+     unsigned char.\n+\n+   To avoid conflicts, this header defines the isxxx functions in upper\n+   case, e.g. ISALPHA not isalpha.  */\n+\n+#ifndef SAFE_CTYPE_H\n+#define SAFE_CTYPE_H\n+\n+#ifdef isalpha\n+ #error \"safe-ctype.h and ctype.h may not be used simultaneously\"\n+#else\n+\n+/* Categories.  */\n+\n+enum {\n+  /* In C99 */\n+  _sch_isblank  = 0x0001,\t/* space \\t */\n+  _sch_iscntrl  = 0x0002,\t/* nonprinting characters */\n+  _sch_isdigit  = 0x0004,\t/* 0-9 */\n+  _sch_islower  = 0x0008,\t/* a-z */\n+  _sch_isprint  = 0x0010,\t/* any printing character including ' ' */\n+  _sch_ispunct  = 0x0020,\t/* all punctuation */\n+  _sch_isspace  = 0x0040,\t/* space \\t \\n \\r \\f \\v */\n+  _sch_isupper  = 0x0080,\t/* A-Z */\n+  _sch_isxdigit = 0x0100,\t/* 0-9A-Fa-f */\n+\n+  /* Extra categories useful to cpplib.  */\n+  _sch_isidst\t= 0x0200,\t/* A-Za-z_ */\n+  _sch_isvsp    = 0x0400,\t/* \\n \\r */\n+  _sch_isnvsp   = 0x0800,\t/* space \\t \\f \\v \\0 */\n+\n+  /* Combinations of the above.  */\n+  _sch_isalpha  = _sch_isupper|_sch_islower,\t/* A-Za-z */\n+  _sch_isalnum  = _sch_isalpha|_sch_isdigit,\t/* A-Za-z0-9 */\n+  _sch_isidnum  = _sch_isidst|_sch_isdigit,\t/* A-Za-z0-9_ */\n+  _sch_isgraph  = _sch_isalnum|_sch_ispunct,\t/* isprint and not space */\n+  _sch_iscppsp  = _sch_isvsp|_sch_isnvsp\t/* isspace + \\0 */\n+};\n+\n+/* This code fundamentally assumes that a byte is 8 bits.  Test this\n+   at compile time.  */\n+\n+extern int a_byte_isnt_eight_bits[(unsigned char)256 == 0 ? 1 : -1];\n+\n+/* Character classification.  */\n+extern const unsigned short _sch_istable[256];\n+\n+#define _sch_test(c, bit) (_sch_istable[(int)(unsigned char)(c)] & (bit))\n+\n+#define ISALPHA(c)  _sch_test(c, _sch_isalpha)\n+#define ISALNUM(c)  _sch_test(c, _sch_isalnum)\n+#define ISBLANK(c)  _sch_test(c, _sch_isblank)\n+#define ISCNTRL(c)  _sch_test(c, _sch_iscntrl)\n+#define ISDIGIT(c)  _sch_test(c, _sch_isdigit)\n+#define ISGRAPH(c)  _sch_test(c, _sch_isgraph)\n+#define ISLOWER(c)  _sch_test(c, _sch_islower)\n+#define ISPRINT(c)  _sch_test(c, _sch_isprint)\n+#define ISPUNCT(c)  _sch_test(c, _sch_ispunct)\n+#define ISSPACE(c)  _sch_test(c, _sch_isspace)\n+#define ISUPPER(c)  _sch_test(c, _sch_isupper)\n+#define ISXDIGIT(c) _sch_test(c, _sch_isxdigit)\n+\n+#define ISIDNUM(c)\t_sch_test(c, _sch_isidnum)\n+#define ISIDST(c)\t_sch_test(c, _sch_isidst)\n+#define IS_VSPACE(c)\t_sch_test(c, _sch_isvsp)\n+#define IS_NVSPACE(c)\t_sch_test(c, _sch_isnvsp)\n+#define IS_SPACE_OR_NUL(c)\t_sch_test(c, _sch_iscppsp)\n+\n+/* Character transformation.  */\n+extern const unsigned char  _sch_toupper[256];\n+extern const unsigned char  _sch_tolower[256];\n+#define TOUPPER(c) _sch_toupper[(int)(unsigned char)(c)]\n+#define TOLOWER(c) _sch_tolower[(int)(unsigned char)(c)]\n+\n+#endif /* no ctype.h */\n+#endif /* SAFE_CTYPE_H */"}, {"sha": "6e2b3e9818329662ddb4b95aeda4c4cb3780b971", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -1,3 +1,15 @@\n+2000-12-07  Zack Weinberg  <zack@wolery.stanford.edu>\n+\n+\t* safe-ctype.c: New file.\n+\t* Makefile.in (CFILES): Add safe-ctype.c.\n+\t(REQUIRED_OFILES): Add safe-ctype.o.\n+\n+\t* argv.c: Define ISBLANK and use it, not isspace.\n+\t* basename.c, cplus-dem.c, fnmatch.c, pexecute.c, strtod.c,\n+\tstrtol.c, strtoul.c: Include safe-ctype.h, not ctype.h.  Use\n+\tuppercase ctype macros.  Don't test ISUPPER(c)/ISLOWER(c)\n+\tbefore calling TOLOWER(c)/TOUPPER(c).\n+\n 2000-12-07  Mike Stump  <mrs@wrs.com>\n \n \t* Makefile.in (distclean): When cleaning, remove testsuite.\n@@ -13,7 +25,7 @@\n \t* cplus-dem.c: Likewise.\n \t(current_demangling_style): Now auto_demangling.\n \t(cplus_demangle): Try v3 demangling if AUTO_DEMANGLING.\n-\t(main): Use standard symbol chars for auto_demangling.\t\n+\t(main): Use standard symbol chars for auto_demangling.\n \n 2000-11-26  Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "238902b274fa20dc5e8b6d21539fc8dc78214a32", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -128,22 +128,22 @@ CFILES = asprintf.c alloca.c argv.c atexit.c basename.c bcmp.c bcopy.c\t      \\\n \tbzero.c calloc.c choose-temp.c clock.c concat.c cplus-dem.c\t      \\\n         cp-demangle.c dyn-string.c fdmatch.c fnmatch.c getcwd.c\t\t      \\\n \tgetpwd.c getopt.c getopt1.c getpagesize.c getruntime.c\t\t      \\\n-\tfloatformat.c hashtab.c hex.c index.c insque.c md5.c memchr.c memcmp.c\\\n-\tmemcpy.c memmove.c memset.c mkstemps.c objalloc.c obstack.c\t      \\\n+\tfloatformat.c hashtab.c hex.c index.c insque.c md5.c memchr.c         \\\n+\tmemcmp.c memcpy.c memmove.c memset.c mkstemps.c objalloc.c obstack.c  \\\n \tpartition.c pexecute.c putenv.c random.c rename.c rindex.c setenv.c   \\\n-\tsigsetmask.c sort.c spaces.c splay-tree.c strcasecmp.c strncasecmp.c  \\\n-\tstrchr.c strdup.c strerror.c strncmp.c strrchr.c strsignal.c strstr.c \\\n-\tstrtod.c strtol.c strtoul.c tmpnam.c vasprintf.c vfork.c vfprintf.c   \\\n-\tvprintf.c vsprintf.c waitpid.c xatexit.c xexit.c xmalloc.c\t      \\\n-\txmemdup.c xstrdup.c xstrerror.c\n+\tsigsetmask.c safe-ctype.c sort.c spaces.c splay-tree.c strcasecmp.c   \\\n+\tstrncasecmp.c strchr.c strdup.c strerror.c strncmp.c strrchr.c        \\\n+\tstrsignal.c strstr.c strtod.c strtol.c strtoul.c tmpnam.c vasprintf.c \\\n+\tvfork.c vfprintf.c vprintf.c vsprintf.c waitpid.c xatexit.c xexit.c   \\\n+\txmalloc.c xmemdup.c xstrdup.c xstrerror.c\n \n # These are always included in the library.\n-REQUIRED_OFILES = argv.o choose-temp.o concat.o cplus-dem.o cp-demangle.o \\\n-\tdyn-string.o fdmatch.o fnmatch.o getopt.o getopt1.o getpwd.o\t  \\\n+REQUIRED_OFILES = argv.o choose-temp.o concat.o cplus-dem.o cp-demangle.o     \\\n+\tdyn-string.o fdmatch.o fnmatch.o getopt.o getopt1.o getpwd.o          \\\n \tgetruntime.o hashtab.o hex.o floatformat.o md5.o objalloc.o obstack.o \\\n-\tpartition.o pexecute.o sort.o spaces.o splay-tree.o strerror.o\t  \\\n-\tstrsignal.o xatexit.o xexit.o xmalloc.o xmemdup.o xstrdup.o\t  \\\n-\txstrerror.o\n+\tpartition.o pexecute.o safe-ctype.o sort.o spaces.o splay-tree.o      \\\n+\tstrerror.o strsignal.o xatexit.o xexit.o xmalloc.o xmemdup.o          \\\n+\txstrdup.o xstrerror.o\n \n $(TARGETLIB): $(REQUIRED_OFILES) $(EXTRA_OFILES) $(LIBOBJS) $(ALLOCA)\n \trm -f $(TARGETLIB)"}, {"sha": "7aec9c04cf13b0a58e80e60c493e43696a7bf90e", "filename": "libiberty/argv.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fargv.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -25,10 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n \n-#ifdef isspace\n-#undef isspace\n-#endif\n-#define isspace(ch) ((ch) == ' ' || (ch) == '\\t')\n+#define ISBLANK(ch) ((ch) == ' ' || (ch) == '\\t')\n \n /*  Routines imported from standard C runtime libraries. */\n \n@@ -227,7 +224,7 @@ char *input;\n       do\n \t{\n \t  /* Pick off argv[argc] */\n-\t  while (isspace (*input))\n+\t  while (ISBLANK (*input))\n \t    {\n \t      input++;\n \t    }\n@@ -260,7 +257,7 @@ char *input;\n \t  arg = copybuf;\n \t  while (*input != EOS)\n \t    {\n-\t      if (isspace (*input) && !squote && !dquote && !bsquote)\n+\t      if (ISBLANK (*input) && !squote && !dquote && !bsquote)\n \t\t{\n \t\t  break;\n \t\t}\n@@ -326,7 +323,7 @@ char *input;\n \t  argc++;\n \t  argv[argc] = NULL;\n \n-\t  while (isspace (*input))\n+\t  while (ISBLANK (*input))\n \t    {\n \t      input++;\n \t    }"}, {"sha": "ca089ebbc5ae59951af6074dd4c2146d3eb52aff", "filename": "libiberty/basename.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fbasename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fbasename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fbasename.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -20,7 +20,7 @@ BUGS\n \n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n-#include <ctype.h>\n+#include \"safe-ctype.h\"\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n@@ -50,7 +50,7 @@ basename (name)\n \n #if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n   /* Skip over the disk name in MSDOS pathnames. */\n-  if (isalpha (name[0]) && name[1] == ':') \n+  if (ISALPHA (name[0]) && name[1] == ':') \n     name += 2;\n #endif\n "}, {"sha": "a42f45e6426b1727a439d71850b37916afa2c44d", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 33, "deletions": 32, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -34,7 +34,8 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #endif\n \n-#include <ctype.h>\n+#include \"safe-ctype.h\"\n+\n #include <sys/types.h>\n #include <string.h>\n #include <stdio.h>\n@@ -544,10 +545,10 @@ consume_count (type)\n {\n   int count = 0;\n \n-  if (! isdigit ((unsigned char)**type))\n+  if (! ISDIGIT ((unsigned char)**type))\n     return -1;\n \n-  while (isdigit ((unsigned char)**type))\n+  while (ISDIGIT ((unsigned char)**type))\n     {\n       count *= 10;\n \n@@ -558,7 +559,7 @@ consume_count (type)\n \t ten.  */\n       if ((count % 10) != 0)\n \t{\n-\t  while (isdigit ((unsigned char) **type))\n+\t  while (ISDIGIT ((unsigned char) **type))\n \t    (*type)++;\n \t  return -1;\n \t}\n@@ -584,7 +585,7 @@ consume_count_with_underscores (mangled)\n   if (**mangled == '_')\n     {\n       (*mangled)++;\n-      if (!isdigit ((unsigned char)**mangled))\n+      if (!ISDIGIT ((unsigned char)**mangled))\n \treturn -1;\n \n       idx = consume_count (mangled);\n@@ -716,8 +717,8 @@ cplus_demangle_opname (opname, result, options)\n \t}\n     }\n   else if (opname[0] == '_' && opname[1] == '_'\n-\t   && islower((unsigned char)opname[2])\n-\t   && islower((unsigned char)opname[3]))\n+\t   && ISLOWER((unsigned char)opname[2])\n+\t   && ISLOWER((unsigned char)opname[3]))\n     {\n       if (opname[4] == '\\0')\n \t{\n@@ -1003,8 +1004,8 @@ ada_demangle (mangled, option)\n \t     sizeof (char));\n   demangled = demangling_buffer;\n   \n-  if (isdigit ((unsigned char) mangled[len0 - 1])) {\n-    for (i = len0 - 2; i >= 0 && isdigit ((unsigned char) mangled[i]); i -= 1)\n+  if (ISDIGIT ((unsigned char) mangled[len0 - 1])) {\n+    for (i = len0 - 2; i >= 0 && ISDIGIT ((unsigned char) mangled[i]); i -= 1)\n       ;\n     if (i > 1 && mangled[i] == '_' && mangled[i - 1] == '_')\n       {\n@@ -1018,7 +1019,7 @@ ada_demangle (mangled, option)\n       }\n   }\n   \n-  for (i = 0, j = 0; i < len0 && ! isalpha ((unsigned char)mangled[i]);\n+  for (i = 0, j = 0; i < len0 && ! ISALPHA ((unsigned char)mangled[i]);\n        i += 1, j += 1)\n     demangled[j] = mangled[i];\n   \n@@ -1042,7 +1043,7 @@ ada_demangle (mangled, option)\n   demangled[j] = '\\000';\n   \n   for (i = 0; demangled[i] != '\\0'; i += 1)\n-    if (isupper ((unsigned char)demangled[i]) || demangled[i] == ' ')\n+    if (ISUPPER ((unsigned char)demangled[i]) || demangled[i] == ' ')\n       goto Suppress;\n \n   if (! changed)\n@@ -1532,7 +1533,7 @@ demangle_signature (work, mangled, declp)\n             if (HP_DEMANGLING)\n               {\n                 (*mangled)++;\n-                while (**mangled && isdigit ((unsigned char)**mangled))\n+                while (**mangled && ISDIGIT ((unsigned char)**mangled))\n                   (*mangled)++;\n               }\n             else\n@@ -1865,7 +1866,7 @@ demangle_real_value (work, mangled, s)\n       string_appendn (s, \"-\", 1);\n       (*mangled)++;\n     }\n-  while (isdigit ((unsigned char)**mangled))\n+  while (ISDIGIT ((unsigned char)**mangled))\n     {\n       string_appendn (s, *mangled, 1);\n       (*mangled)++;\n@@ -1874,7 +1875,7 @@ demangle_real_value (work, mangled, s)\n     {\n       string_appendn (s, \".\", 1);\n       (*mangled)++;\n-      while (isdigit ((unsigned char)**mangled))\n+      while (ISDIGIT ((unsigned char)**mangled))\n \t{\n \t  string_appendn (s, *mangled, 1);\n \t  (*mangled)++;\n@@ -1884,7 +1885,7 @@ demangle_real_value (work, mangled, s)\n     {\n       string_appendn (s, \"e\", 1);\n       (*mangled)++;\n-      while (isdigit ((unsigned char)**mangled))\n+      while (ISDIGIT ((unsigned char)**mangled))\n \t{\n \t  string_appendn (s, *mangled, 1);\n \t  (*mangled)++;\n@@ -2735,20 +2736,20 @@ demangle_prefix (work, mangled, declp)\n     }\n   else if (work -> static_type)\n     {\n-      if (!isdigit ((unsigned char)scan[0]) && (scan[0] != 't'))\n+      if (!ISDIGIT ((unsigned char)scan[0]) && (scan[0] != 't'))\n \t{\n \t  success = 0;\n \t}\n     }\n   else if ((scan == *mangled)\n-\t   && (isdigit ((unsigned char)scan[2]) || (scan[2] == 'Q')\n+\t   && (ISDIGIT ((unsigned char)scan[2]) || (scan[2] == 'Q')\n \t       || (scan[2] == 't') || (scan[2] == 'K') || (scan[2] == 'H')))\n     {\n       /* The ARM says nothing about the mangling of local variables.\n \t But cfront mangles local variables by prepending __<nesting_level>\n \t to them. As an extension to ARM demangling we handle this case.  */\n       if ((LUCID_DEMANGLING || ARM_DEMANGLING || HP_DEMANGLING)\n-\t  && isdigit ((unsigned char)scan[2]))\n+\t  && ISDIGIT ((unsigned char)scan[2]))\n \t{\n \t  *mangled = scan + 2;\n \t  consume_count (mangled);\n@@ -2785,7 +2786,7 @@ demangle_prefix (work, mangled, declp)\n       /* EDG template? */\n       demangle_arm_hp_template (work, mangled, strlen (*mangled), declp);\n     }\n-  else if ((scan == *mangled) && !isdigit ((unsigned char)scan[2])\n+  else if ((scan == *mangled) && !ISDIGIT ((unsigned char)scan[2])\n \t   && (scan[2] != 't'))\n     {\n       /* Mangled name starts with \"__\".  Skip over any leading '_' characters,\n@@ -2907,7 +2908,7 @@ gnu_special (work, mangled, declp)\n \t\t\t\t\t   1);\n \t      break;\n \t    default:\n-\t      if (isdigit((unsigned char)*mangled[0]))\n+\t      if (ISDIGIT((unsigned char)*mangled[0]))\n \t\t{\n \t\t  n = consume_count(mangled);\n \t\t  /* We may be seeing a too-large size, or else a\n@@ -3434,13 +3435,13 @@ get_count (type, count)\n   const char *p;\n   int n;\n \n-  if (!isdigit ((unsigned char)**type))\n+  if (!ISDIGIT ((unsigned char)**type))\n     return (0);\n   else\n     {\n       *count = **type - '0';\n       (*type)++;\n-      if (isdigit ((unsigned char)**type))\n+      if (ISDIGIT ((unsigned char)**type))\n \t{\n \t  p = *type;\n \t  n = *count;\n@@ -3450,7 +3451,7 @@ get_count (type, count)\n \t      n += *p - '0';\n \t      p++;\n \t    }\n-\t  while (isdigit ((unsigned char)*p));\n+\t  while (ISDIGIT ((unsigned char)*p));\n \t  if (*p == '_')\n \t    {\n \t      *type = p + 1;\n@@ -3580,7 +3581,7 @@ do_type (work, mangled, result)\n \t    if (**mangled != 'Q')\n \t      string_prepend (&decl, SCOPE_STRING (work));\n \n-\t    if (isdigit ((unsigned char)**mangled))\n+\t    if (ISDIGIT ((unsigned char)**mangled))\n \t      {\n \t\tn = consume_count (mangled);\n \t\tif (n == -1\n@@ -3900,7 +3901,7 @@ demangle_fund_type (work, mangled, result)\n       break;\n     case 'G':\n       (*mangled)++;\n-      if (!isdigit ((unsigned char)**mangled))\n+      if (!ISDIGIT ((unsigned char)**mangled))\n \t{\n \t  success = 0;\n \t  break;\n@@ -4012,12 +4013,12 @@ do_hpacc_template_const_value (work, mangled, result)\n     }\n \n   /* We have to be looking at an integer now */\n-  if (!(isdigit ((unsigned char)**mangled)))\n+  if (!(ISDIGIT ((unsigned char)**mangled)))\n     return 0;\n \n   /* We only deal with integral values for template\n      parameters -- so it's OK to look only for digits */\n-  while (isdigit ((unsigned char)**mangled))\n+  while (ISDIGIT ((unsigned char)**mangled))\n     {\n       char_str[0] = **mangled;\n       string_append (result, char_str);\n@@ -4096,10 +4097,10 @@ snarf_numeric_literal (args, arg)\n   else if (**args == '+')\n     (*args)++;\n \n-  if (!isdigit ((unsigned char)**args))\n+  if (!ISDIGIT ((unsigned char)**args))\n     return 0;\n \n-  while (isdigit ((unsigned char)**args))\n+  while (ISDIGIT ((unsigned char)**args))\n     {\n       char_str[0] = **args;\n       string_append (arg, char_str);\n@@ -4663,8 +4664,8 @@ demangle_function_name (work, mangled, declp, scan)\n \t}\n     }\n   else if (declp->b[0] == '_' && declp->b[1] == '_'\n-\t   && islower((unsigned char)declp->b[2])\n-\t   && islower((unsigned char)declp->b[3]))\n+\t   && ISLOWER((unsigned char)declp->b[2])\n+\t   && ISLOWER((unsigned char)declp->b[3]))\n     {\n       if (declp->b[4] == '\\0')\n \t{\n@@ -5125,7 +5126,7 @@ main (argc, argv)\n \t  int i = 0;\n \t  c = getchar ();\n \t  /* Try to read a label.  */\n-\t  while (c != EOF && (isalnum (c) || strchr (valid_symbols, c)))\n+\t  while (c != EOF && (ISALNUM (c) || strchr (valid_symbols, c)))\n \t    {\n \t      if (i >= MBUF_SIZE-1)\n \t\tbreak;"}, {"sha": "68f3e26799617c09e6379fe3a105f347bd28ac2e", "filename": "libiberty/fnmatch.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Ffnmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Ffnmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffnmatch.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -45,8 +45,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include <errno.h>\n #include <fnmatch.h>\n-#include <ctype.h>\n-\n+#include <safe-ctype.h>\n \n /* Comment out all this code if we are using the GNU C Library, and are not\n    actually compiling the library itself.  This code is part of the GNU C\n@@ -74,8 +73,7 @@ fnmatch (pattern, string, flags)\n   register const char *p = pattern, *n = string;\n   register unsigned char c;\n \n-/* Note that this evalutes C many times.  */\n-#define FOLD(c)\t((flags & FNM_CASEFOLD) && isupper (c) ? tolower (c) : (c))\n+#define FOLD(c)\t((flags & FNM_CASEFOLD) ? TOLOWER (c) : (c))\n \n   while ((c = *p++) != '\\0')\n     {"}, {"sha": "32943af59ef3e6052c57cd36232edf9d8cc9237d", "filename": "libiberty/pexecute.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpexecute.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -41,12 +41,12 @@ extern int errno;\n #ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n #endif\n-#define ISSPACE (x) isspace(x)\n #ifdef HAVE_SYS_WAIT_H\n #include <sys/wait.h>\n #endif\n \n #include \"libiberty.h\"\n+#include \"safe-ctype.h\"\n \n /* stdin file number.  */\n #define STDIN_FILE_NO 0"}, {"sha": "b6722a26684b2e281415719001eabe65e0edd608", "filename": "libiberty/safe-ctype.c", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fsafe-ctype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fsafe-ctype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsafe-ctype.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -0,0 +1,162 @@\n+/* <ctype.h> replacement macros.\n+\n+   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Contributed by Zack Weinberg <zackw@stanford.edu>.\n+\n+This file is part of the libiberty library.\n+Libiberty is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Library General Public\n+License as published by the Free Software Foundation; either\n+version 2 of the License, or (at your option) any later version.\n+\n+Libiberty is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+Library General Public License for more details.\n+\n+You should have received a copy of the GNU Library General Public\n+License along with libiberty; see the file COPYING.LIB.  If\n+not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This is a compatible replacement of the standard C library's <ctype.h>\n+   with the following properties:\n+\n+   - Implements all isxxx() macros required by C99.\n+   - Also implements some character classes useful when\n+     parsing C-like languages.\n+   - Does not change behavior depending on the current locale.\n+   - Behaves properly for all values in the range of a signed or\n+     unsigned char.  */\n+\n+#include <safe-ctype.h>\n+#include <stdio.h>  /* for EOF */\n+\n+/* Shorthand */\n+#define bl _sch_isblank\n+#define cn _sch_iscntrl\n+#define di _sch_isdigit\n+#define is _sch_isidst\n+#define lo _sch_islower\n+#define nv _sch_isnvsp\n+#define pn _sch_ispunct\n+#define pr _sch_isprint\n+#define sp _sch_isspace\n+#define up _sch_isupper\n+#define vs _sch_isvsp\n+#define xd _sch_isxdigit\n+\n+/* Masks.  */\n+#define L  lo|is   |pr\t/* lower case letter */\n+#define XL lo|is|xd|pr\t/* lowercase hex digit */\n+#define U  up|is   |pr\t/* upper case letter */\n+#define XU up|is|xd|pr\t/* uppercase hex digit */\n+#define D  di   |xd|pr\t/* decimal digit */\n+#define P  pn      |pr\t/* punctuation */\n+#define _  pn|is   |pr\t/* underscore */\n+\n+#define C           cn\t/* control character */\n+#define Z  nv      |cn\t/* NUL */\n+#define M  nv|sp   |cn\t/* cursor movement: \\f \\v */\n+#define V  vs|sp   |cn\t/* vertical space: \\r \\n */\n+#define T  nv|sp|bl|cn\t/* tab */\n+#define S  nv|sp|bl|pr\t/* space */\n+\n+/* Are we ASCII? */\n+#if '\\n' == 0x0A && ' ' == 0x20 && '0' == 0x30 \\\n+  && 'A' == 0x41 && 'a' == 0x61 && '!' == 0x21 \\\n+  && EOF == -1\n+\n+const unsigned short _sch_istable[256] =\n+{\n+  Z,  C,  C,  C,   C,  C,  C,  C,   /* NUL SOH STX ETX  EOT ENQ ACK BEL */\n+  C,  T,  V,  M,   M,  V,  C,  C,   /* BS  HT  LF  VT   FF  CR  SO  SI  */\n+  C,  C,  C,  C,   C,  C,  C,  C,   /* DLE DC1 DC2 DC3  DC4 NAK SYN ETB */\n+  C,  C,  C,  C,   C,  C,  C,  C,   /* CAN EM  SUB ESC  FS  GS  RS  US  */\n+  S,  P,  P,  P,   P,  P,  P,  P,   /* SP  !   \"   #    $   %   &   '   */\n+  P,  P,  P,  P,   P,  P,  P,  P,   /* (   )   *   +    ,   -   .   /   */\n+  D,  D,  D,  D,   D,  D,  D,  D,   /* 0   1   2   3    4   5   6   7   */\n+  D,  D,  P,  P,   P,  P,  P,  P,   /* 8   9   :   ;    <   =   >   ?   */\n+  P, XU, XU, XU,  XU, XU, XU,  U,   /* @   A   B   C    D   E   F   G   */\n+  U,  U,  U,  U,   U,  U,  U,  U,   /* H   I   J   K    L   M   N   O   */\n+  U,  U,  U,  U,   U,  U,  U,  U,   /* P   Q   R   S    T   U   V   W   */\n+  U,  U,  U,  P,   P,  P,  P,  _,   /* X   Y   Z   [    \\   ]   ^   _   */\n+  P, XL, XL, XL,  XL, XL, XL,  L,   /* `   a   b   c    d   e   f   g   */\n+  L,  L,  L,  L,   L,  L,  L,  L,   /* h   i   j   k    l   m   n   o   */\n+  L,  L,  L,  L,   L,  L,  L,  L,   /* p   q   r   s    t   u   v   w   */\n+  L,  L,  L,  P,   P,  P,  P,  C,   /* x   y   z   {    |   }   ~   DEL */\n+\n+  /* high half of unsigned char is locale-specific, so all tests are\n+     false in \"C\" locale */\n+  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,\n+  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,\n+  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,\n+  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,\n+\n+  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,\n+  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,\n+  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,\n+  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,\n+};\n+\n+const unsigned char _sch_tolower[256] =\n+{\n+   0,  1,  2,  3,   4,  5,  6,  7,   8,  9, 10, 11,  12, 13, 14, 15,\n+  16, 17, 18, 19,  20, 21, 22, 23,  24, 25, 26, 27,  28, 29, 30, 31,\n+  32, 33, 34, 35,  36, 37, 38, 39,  40, 41, 42, 43,  44, 45, 46, 47,\n+  48, 49, 50, 51,  52, 53, 54, 55,  56, 57, 58, 59,  60, 61, 62, 63,\n+  64,\n+\n+  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n+  'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n+\n+  91, 92, 93, 94, 95, 96,\n+\n+  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n+  'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n+\n+ 123,124,125,126,127,\n+\n+ 128,129,130,131, 132,133,134,135, 136,137,138,139, 140,141,142,143,\n+ 144,145,146,147, 148,149,150,151, 152,153,154,155, 156,157,158,159,\n+ 160,161,162,163, 164,165,166,167, 168,169,170,171, 172,173,174,175,\n+ 176,177,178,179, 180,181,182,183, 184,185,186,187, 188,189,190,191,\n+\n+ 192,193,194,195, 196,197,198,199, 200,201,202,203, 204,205,206,207,\n+ 208,209,210,211, 212,213,214,215, 216,217,218,219, 220,221,222,223,\n+ 224,225,226,227, 228,229,230,231, 232,233,234,235, 236,237,238,239,\n+ 240,241,242,243, 244,245,246,247, 248,249,250,251, 252,253,254,255,\n+};\n+\n+const unsigned char _sch_toupper[256] =\n+{\n+   0,  1,  2,  3,   4,  5,  6,  7,   8,  9, 10, 11,  12, 13, 14, 15,\n+  16, 17, 18, 19,  20, 21, 22, 23,  24, 25, 26, 27,  28, 29, 30, 31,\n+  32, 33, 34, 35,  36, 37, 38, 39,  40, 41, 42, 43,  44, 45, 46, 47,\n+  48, 49, 50, 51,  52, 53, 54, 55,  56, 57, 58, 59,  60, 61, 62, 63,\n+  64,\n+\n+  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n+  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n+\n+  91, 92, 93, 94, 95, 96,\n+\n+  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n+  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n+\n+ 123,124,125,126,127,\n+\n+ 128,129,130,131, 132,133,134,135, 136,137,138,139, 140,141,142,143,\n+ 144,145,146,147, 148,149,150,151, 152,153,154,155, 156,157,158,159,\n+ 160,161,162,163, 164,165,166,167, 168,169,170,171, 172,173,174,175,\n+ 176,177,178,179, 180,181,182,183, 184,185,186,187, 188,189,190,191,\n+\n+ 192,193,194,195, 196,197,198,199, 200,201,202,203, 204,205,206,207,\n+ 208,209,210,211, 212,213,214,215, 216,217,218,219, 220,221,222,223,\n+ 224,225,226,227, 228,229,230,231, 232,233,234,235, 236,237,238,239,\n+ 240,241,242,243, 244,245,246,247, 248,249,250,251, 252,253,254,255,\n+};\n+\n+#else\n+ #error \"Unsupported host character set\"\n+#endif /* not ASCII */"}, {"sha": "b1243acb6b3f0237f35ff0e779e4e7698d85757c", "filename": "libiberty/strtod.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fstrtod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fstrtod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrtod.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -22,7 +22,7 @@ the resulting executable to be covered by the GNU General Public License.\n This exception does not however invalidate any other reasons why\n the executable file might be covered by the GNU General Public License. */\n \n-#include <ctype.h>\n+#include \"safe-ctype.h\"\n \n extern double atof ();\n \n@@ -42,7 +42,7 @@ strtod (str, ptr)\n   \n   p = str;\n   \n-  while (isspace (*p))\n+  while (ISSPACE (*p))\n     ++p;\n   \n   if (*p == '+' || *p == '-')\n@@ -88,10 +88,10 @@ strtod (str, ptr)\n     }\n \n   /* digits, with 0 or 1 periods in it.  */\n-  if (isdigit (*p) || *p == '.')\n+  if (ISDIGIT (*p) || *p == '.')\n     {\n       int got_dot = 0;\n-      while (isdigit (*p) || (!got_dot && *p == '.'))\n+      while (ISDIGIT (*p) || (!got_dot && *p == '.'))\n \t{\n \t  if (*p == '.')\n \t    got_dot = 1;\n@@ -105,9 +105,9 @@ strtod (str, ptr)\n \t  i = 1;\n \t  if (p[i] == '+' || p[i] == '-')\n \t    ++i;\n-\t  if (isdigit (p[i]))\n+\t  if (ISDIGIT (p[i]))\n \t    {\n-\t      while (isdigit (p[i]))\n+\t      while (ISDIGIT (p[i]))\n \t\t++i;\n \t      *ptr = p + i;\n \t      return atof (str);"}, {"sha": "7095c7254bed03516ad86ed8681069f36ab6dd09", "filename": "libiberty/strtol.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fstrtol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fstrtol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrtol.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -37,15 +37,11 @@\n #ifdef HAVE_SYS_PARAM_H\n #include <sys/param.h>\n #endif\n-#include <ctype.h>\n #include <errno.h>\n #ifdef NEED_DECLARATION_ERRNO\n extern int errno;\n #endif\n-#if 0\n-#include <stdlib.h>\n-#endif\n-#include \"ansidecl.h\"\n+#include \"safe-ctype.h\"\n \n /* FIXME: It'd be nice to configure around these, but the include files are too\n    painful.  These macros should at least be more portable than hardwired hex\n@@ -88,7 +84,7 @@ strtol(nptr, endptr, base)\n \t */\n \tdo {\n \t\tc = *s++;\n-\t} while (isspace(c));\n+\t} while (ISSPACE(c));\n \tif (c == '-') {\n \t\tneg = 1;\n \t\tc = *s++;\n@@ -124,10 +120,10 @@ strtol(nptr, endptr, base)\n \tcutlim = cutoff % (unsigned long)base;\n \tcutoff /= (unsigned long)base;\n \tfor (acc = 0, any = 0;; c = *s++) {\n-\t\tif (isdigit(c))\n+\t\tif (ISDIGIT(c))\n \t\t\tc -= '0';\n-\t\telse if (isalpha(c))\n-\t\t\tc -= isupper(c) ? 'A' - 10 : 'a' - 10;\n+\t\telse if (ISALPHA(c))\n+\t\t\tc -= ISUPPER(c) ? 'A' - 10 : 'a' - 10;\n \t\telse\n \t\t\tbreak;\n \t\tif (c >= base)"}, {"sha": "ce969339bc25bef8ad49a27f8071e5d21e3549e5", "filename": "libiberty/strtoul.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fstrtoul.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf/libiberty%2Fstrtoul.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrtoul.c?ref=f6bbde28c477c7c5cb4d6c4d3e561b2d429afccf", "patch": "@@ -74,7 +74,7 @@ strtoul(nptr, endptr, base)\n \t */\n \tdo {\n \t\tc = *s++;\n-\t} while (isspace(c));\n+\t} while (ISSPACE(c));\n \tif (c == '-') {\n \t\tneg = 1;\n \t\tc = *s++;\n@@ -91,10 +91,10 @@ strtoul(nptr, endptr, base)\n \tcutoff = (unsigned long)ULONG_MAX / (unsigned long)base;\n \tcutlim = (unsigned long)ULONG_MAX % (unsigned long)base;\n \tfor (acc = 0, any = 0;; c = *s++) {\n-\t\tif (isdigit(c))\n+\t\tif (ISDIGIT(c))\n \t\t\tc -= '0';\n-\t\telse if (isalpha(c))\n-\t\t\tc -= isupper(c) ? 'A' - 10 : 'a' - 10;\n+\t\telse if (ISALPHA(c))\n+\t\t\tc -= ISUPPER(c) ? 'A' - 10 : 'a' - 10;\n \t\telse\n \t\t\tbreak;\n \t\tif (c >= base)"}]}