{"sha": "a96533d5e5ec94af81be2c74a41d8f67fb809cfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2NTMzZDVlNWVjOTRhZjgxYmUyYzc0YTQxZDhmNjdmYjgwOWNmZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-01-18T19:26:21Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-18T19:26:21Z"}, "message": "200x-xx-xx Nathan Sidwell <nathan@codesourcery.com>\n\ngcc/\n200x-xx-xx  Nathan Sidwell  <nathan@codesourcery.com>\n\n\t* config.gcc (m68k-*-aout*, m68k-*-coff*, m68020-*-elf*, m68k-*-elf*)\n\t(m68010-*-netbsdelf*, m68k*-*-netbsdelf*, m68k*-*-openbsd*)\n\t(m68k-*-uclinuxoldabi, m68k-*-uclinux*, m68k-*-linux*)\n\t(m68k-*-rtems*): Use tm_file rather than m68k/m68k.h and\n\texplicitly set MOTOROLA to 1.\n\t* config/m68k/m68k.h (MOTOROLA): Simplify definition accordingly.\n\nFrom-SVN: r120916", "tree": {"sha": "050540105d714d1bdabc22dc8c4dfda9a537c393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/050540105d714d1bdabc22dc8c4dfda9a537c393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a96533d5e5ec94af81be2c74a41d8f67fb809cfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96533d5e5ec94af81be2c74a41d8f67fb809cfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96533d5e5ec94af81be2c74a41d8f67fb809cfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96533d5e5ec94af81be2c74a41d8f67fb809cfe/comments", "author": null, "committer": null, "parents": [{"sha": "c68b561665a8ad664ed5f08c85f1b9ba7b406623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68b561665a8ad664ed5f08c85f1b9ba7b406623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68b561665a8ad664ed5f08c85f1b9ba7b406623"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "929686b7903e47e99a8b1bec7bdacde93a6c68bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96533d5e5ec94af81be2c74a41d8f67fb809cfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96533d5e5ec94af81be2c74a41d8f67fb809cfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a96533d5e5ec94af81be2c74a41d8f67fb809cfe", "patch": "@@ -1,3 +1,12 @@\n+2007-01-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config.gcc (m68k-*-aout*, m68k-*-coff*, m68020-*-elf*, m68k-*-elf*)\n+\t(m68010-*-netbsdelf*, m68k*-*-netbsdelf*, m68k*-*-openbsd*)\n+\t(m68k-*-uclinuxoldabi, m68k-*-uclinux*, m68k-*-linux*)\n+\t(m68k-*-rtems*): Use tm_file rather than m68k/m68k.h and\n+\texplicitly set MOTOROLA to 1.\n+\t* config/m68k/m68k.h (MOTOROLA): Simplify definition accordingly.\n+\n 2007-01-18  Richard Sandiford  <richard@codesourcery.com>\n \t    Nathan Sidwell  <nathan@codesourcery.com>\n "}, {"sha": "7a911fffe38c448e15880fd36353ce0c3bede79a", "filename": "gcc/config.gcc", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96533d5e5ec94af81be2c74a41d8f67fb809cfe/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96533d5e5ec94af81be2c74a41d8f67fb809cfe/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=a96533d5e5ec94af81be2c74a41d8f67fb809cfe", "patch": "@@ -1480,32 +1480,32 @@ m68hc12-*-*|m6812-*-*)\n m68k-*-aout*)\n \tdefault_m68k_cpu=68020\n \ttmake_file=m68k/t-m68kbare\n-\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kemb.h m68k/m68k-aout.h libgloss.h\"\n+\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kemb.h m68k/m68k-aout.h libgloss.h\"\n \t;;\n m68k-*-coff*)\n \tdefault_m68k_cpu=68020\n \ttmake_file=m68k/t-m68kbare\n-\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n-\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kemb.h dbxcoff.h m68k/coff.h dbx.h\"\n+\ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n+\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kemb.h dbxcoff.h m68k/coff.h dbx.h\"\n \tuse_fixproto=yes\n \t;;\n m68020-*-elf* | m68k-*-elf*)\n \tdefault_m68k_cpu=68020\n-\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h\"\n-\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n+\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h\"\n+\ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \ttmake_file=m68k/t-m68kelf\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n m68010-*-netbsdelf* | m68k*-*-netbsdelf*)\n \tdefault_m68k_cpu=68020\n \ttm_file=\"${tm_file} dbxelf.h elfos.h netbsd.h netbsd-elf.h m68k/netbsd-elf.h\"\n-\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n+\ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \t;;\n m68k*-*-openbsd*)\n \tdefault_m68k_cpu=68020\n \t# needed to unconfuse gdb\n \ttm_defines=\"${tm_defines} OBSD_OLD_GAS\"\n-\ttm_file=\"m68k/m68k.h openbsd.h m68k/openbsd.h\"\n+\ttm_file=\"${tm_file} openbsd.h m68k/openbsd.h\"\n \ttmake_file=\"t-libc-ok t-openbsd m68k/t-openbsd\"\n \t# we need collect2 until our bug is fixed...\n \tuse_collect2=yes\n@@ -1514,17 +1514,17 @@ m68k-*-uclinuxoldabi*)\t\t# Motorola m68k/ColdFire running uClinux\n \t\t\t\t# with uClibc, using the original\n \t\t\t\t# m68k-elf-based ABI\n \tdefault_m68k_cpu=68020\n-\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/uclinux-oldabi.h\"\n- \ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n+\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/uclinux-oldabi.h\"\n+ \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \ttmake_file=m68k/t-uclinux\n \tuse_fixproto=no\n \t;;\n m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux\n \t\t\t\t# with uClibc, using the new GNU/Linux-style\n \t\t\t\t# ABI.\n \tdefault_m68k_cpu=68020\n-\ttm_file=\"m68k/m68k.h dbxelf.h elfos.h svr4.h linux.h flat.h m68k/linux.h m68k/uclinux.h\"\n- \ttm_defines=\"${tm_defines} MOTOROLA USE_GAS UCLIBC_DEFAULT=1\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h linux.h flat.h m68k/linux.h m68k/uclinux.h\"\n+ \ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS UCLIBC_DEFAULT=1\"\n \textra_options=\"${extra_options} linux.opt\"\n \ttmake_file=m68k/t-uclinux\n \tuse_fixproto=no\n@@ -1533,9 +1533,9 @@ m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# with ELF format using glibc 2\n \t\t\t\t# aka the GNU/Linux C library 6.\n \tdefault_m68k_cpu=68020\n-\ttm_file=\"m68k/m68k.h dbxelf.h elfos.h svr4.h linux.h m68k/linux.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h linux.h m68k/linux.h\"\n \textra_options=\"${extra_options} m68k/ieee.opt\"\n-\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n+\ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \t# if not configured with --enable-sjlj-exceptions, bump the\n \t# libgcc version number\n \tif test x$sjlj != x1; then\n@@ -1545,8 +1545,8 @@ m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n m68k-*-rtems*)\n \tdefault_m68k_cpu=68020\n \ttmake_file=\"m68k/t-m68kbare m68k/t-crtstuff t-rtems m68k/t-rtems\"\n-\ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h\"\n-\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n+\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h\"\n+\ttm_defines=\"${tm_defines} MOTOROLA=1 USE_GAS\"\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n mcore-*-elf)"}, {"sha": "434c25d76a971e759db3afa98e2a7a724367f668", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96533d5e5ec94af81be2c74a41d8f67fb809cfe/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96533d5e5ec94af81be2c74a41d8f67fb809cfe/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=a96533d5e5ec94af81be2c74a41d8f67fb809cfe", "patch": "@@ -23,13 +23,11 @@ Boston, MA 02110-1301, USA.  */\n    if-statements and ?: on it.  This way we have compile-time error checking\n    for both the MOTOROLA and MIT code paths.  We do rely on the host compiler\n    to optimize away all constant tests.  */\n-#ifdef MOTOROLA\n-# undef MOTOROLA\n-# define MOTOROLA 1  /* Use the Motorola assembly syntax.  */\n+#if MOTOROLA  /* Use the Motorola assembly syntax.  */\n # define TARGET_VERSION fprintf (stderr, \" (68k, Motorola syntax)\")\n #else\n-# define TARGET_VERSION fprintf (stderr, \" (68k, MIT syntax)\")\n # define MOTOROLA 0  /* Use the MIT assembly syntax.  */\n+# define TARGET_VERSION fprintf (stderr, \" (68k, MIT syntax)\")\n #endif\n \n /* Handle --with-cpu default option from configure script.  */"}]}