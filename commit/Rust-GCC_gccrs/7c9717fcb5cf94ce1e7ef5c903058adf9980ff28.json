{"sha": "7c9717fcb5cf94ce1e7ef5c903058adf9980ff28", "node_id": "C_kwDOANBUbNoAKDdjOTcxN2ZjYjVjZjk0Y2UxZTdlZjVjOTAzMDU4YWRmOTk4MGZmMjg", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-22T22:29:21Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-22T22:29:21Z"}, "message": "analyzer: fix 'errno' on Solaris and OS X [PR107807]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/107807\n\t* region-model-impl-calls.cc (register_known_functions): Register\n\t\"___errno\" and \"__error\" as synonyms  for \"__errno_location\".\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/107807\n\t* gcc.dg/analyzer/errno-___errno.c: New test.\n\t* gcc.dg/analyzer/errno-__error.c: New test.\n\t* gcc.dg/analyzer/errno-global-var.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "9e72e9f6a5423412cd7714ee825fa2ad68c6fae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e72e9f6a5423412cd7714ee825fa2ad68c6fae1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bd31b33daa3c7635d886ff2cebd915748db2084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd31b33daa3c7635d886ff2cebd915748db2084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd31b33daa3c7635d886ff2cebd915748db2084"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "23a21d752cf70fdb57f61605e6147352485ac299", "filename": "gcc/analyzer/region-model-impl-calls.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc?ref=7c9717fcb5cf94ce1e7ef5c903058adf9980ff28", "patch": "@@ -1953,6 +1953,20 @@ register_known_functions (known_function_manager &kfm)\n     kfm.add (\"error_at_line\", make_unique<kf_error> (5));\n   }\n \n+  /* Other implementations of C standard library.  */\n+  {\n+    /* According to PR 107807 comment #2, Solaris implements \"errno\"\n+       like this:\n+\t extern int *___errno(void) __attribute__((__const__));\n+\t #define errno (*(___errno()))\n+       and OS X like this:\n+\t extern int * __error(void);\n+\t #define errno (*__error())\n+       Add these as synonyms for \"__errno_location\".  */\n+    kfm.add (\"___errno\", make_unique<kf_errno_location> ());\n+    kfm.add (\"__error\", make_unique<kf_errno_location> ());\n+  }\n+\n   /* C++ support functions.  */\n   {\n     kfm.add (\"operator new\", make_unique<kf_operator_new> ());"}, {"sha": "17ff8b7de9dc291c5197b6bff01f2897c70daff1", "filename": "gcc/testsuite/gcc.dg/analyzer/errno-___errno.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-___errno.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-___errno.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-___errno.c?ref=7c9717fcb5cf94ce1e7ef5c903058adf9980ff28", "patch": "@@ -0,0 +1,29 @@\n+#include \"analyzer-decls.h\"\n+\n+/* According to PR 107807 comment #2, Solaris implements \"errno\"\n+   like this:  */\n+\n+extern int *___errno(void) __attribute__((__const__));\n+#define errno (*(___errno()))\n+\n+\n+extern void external_fn (void);\n+\n+int test_reading_errno (void)\n+{\n+  return errno;\n+}\n+\n+void test_setting_errno (int val)\n+{\n+  errno = val;\n+}\n+\n+void test_storing_to_errno (int val)\n+{\n+  __analyzer_eval (errno == val); /* { dg-warning \"UNKNOWN\" } */\n+  errno = val;\n+  __analyzer_eval (errno == val); /* { dg-warning \"TRUE\" } */\n+  external_fn ();\n+  __analyzer_eval (errno == val); /* { dg-warning \"UNKNOWN\" } */\n+}"}, {"sha": "19bc4f937f629fd0257d7e8cd52facc6234a8802", "filename": "gcc/testsuite/gcc.dg/analyzer/errno-__error.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-__error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-__error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-__error.c?ref=7c9717fcb5cf94ce1e7ef5c903058adf9980ff28", "patch": "@@ -0,0 +1,28 @@\n+#include \"analyzer-decls.h\"\n+\n+/* According to PR 107807 comment #2, OS X implements \"errno\"\n+   like this:  */\n+\n+extern int * __error(void);\n+#define errno (*__error())\n+\n+extern void external_fn (void);\n+\n+int test_reading_errno (void)\n+{\n+  return errno;\n+}\n+\n+void test_setting_errno (int val)\n+{\n+  errno = val;\n+}\n+\n+void test_storing_to_errno (int val)\n+{\n+  __analyzer_eval (errno == val); /* { dg-warning \"UNKNOWN\" } */\n+  errno = val;\n+  __analyzer_eval (errno == val); /* { dg-warning \"TRUE\" } */\n+  external_fn ();\n+  __analyzer_eval (errno == val); /* { dg-warning \"UNKNOWN\" } */\n+}"}, {"sha": "fdf1b17cecc4febcfc0a045eb7f74adfff026408", "filename": "gcc/testsuite/gcc.dg/analyzer/errno-global-var.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-global-var.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9717fcb5cf94ce1e7ef5c903058adf9980ff28/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-global-var.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ferrno-global-var.c?ref=7c9717fcb5cf94ce1e7ef5c903058adf9980ff28", "patch": "@@ -0,0 +1,26 @@\n+#include \"analyzer-decls.h\"\n+\n+/* \"errno\" declared as a global var.  */\n+\n+extern int errno;\n+\n+extern void external_fn (void);\n+\n+int test_reading_errno (void)\n+{\n+  return errno;\n+}\n+\n+void test_setting_errno (int val)\n+{\n+  errno = val;\n+}\n+\n+void test_storing_to_errno (int val)\n+{\n+  __analyzer_eval (errno == val); /* { dg-warning \"UNKNOWN\" } */\n+  errno = val;\n+  __analyzer_eval (errno == val); /* { dg-warning \"TRUE\" } */\n+  external_fn ();\n+  __analyzer_eval (errno == val); /* { dg-warning \"UNKNOWN\" } */  \n+}"}]}