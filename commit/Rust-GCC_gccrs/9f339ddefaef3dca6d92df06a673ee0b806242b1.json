{"sha": "9f339ddefaef3dca6d92df06a673ee0b806242b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzMzlkZGVmYWVmM2RjYTZkOTJkZjA2YTY3M2VlMGI4MDYyNDJiMQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2002-01-13T23:23:40Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2002-01-13T23:23:40Z"}, "message": "md.texi (Modifiers): Document the '*' constraint for the user.\n\n\t* doc/md.texi (Modifiers): Document the '*' constraint for the\n\tuser.\n\n\t* doc/md.texi (Machine Constraints): Add constraints for xstormy16.\n\t* doc/extend.texi (Function Attributes): 'interrupt' is valid\n\tfor xstormy16 too.\n\nFrom-SVN: r48823", "tree": {"sha": "cb5a74be928979903664129f21ca16ad2a72f72d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb5a74be928979903664129f21ca16ad2a72f72d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f339ddefaef3dca6d92df06a673ee0b806242b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f339ddefaef3dca6d92df06a673ee0b806242b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f339ddefaef3dca6d92df06a673ee0b806242b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f339ddefaef3dca6d92df06a673ee0b806242b1/comments", "author": null, "committer": null, "parents": [{"sha": "02a10130ff7e8ba65646253a4fea78aeef6ab5c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a10130ff7e8ba65646253a4fea78aeef6ab5c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a10130ff7e8ba65646253a4fea78aeef6ab5c2"}], "stats": {"total": 86, "additions": 81, "deletions": 5}, "files": [{"sha": "a3ddc7195cefc5a467f092bf0eb0e50b76c04f8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f339ddefaef3dca6d92df06a673ee0b806242b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f339ddefaef3dca6d92df06a673ee0b806242b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f339ddefaef3dca6d92df06a673ee0b806242b1", "patch": "@@ -1,3 +1,12 @@\n+2002-01-13  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* doc/md.texi (Modifiers): Document the '*' constraint for the\n+\tuser.\n+\n+\t* doc/md.texi (Machine Constraints): Add constraints for xstormy16.\n+\t* doc/extend.texi (Function Attributes): 'interrupt' is valid\n+\tfor xstormy16 too.\n+\n 2002-01-13  Richard Henderson  <rth@redhat.com>\n \n \t* reload.c (find_reloads): Use a hard reg destination as reload reg"}, {"sha": "5b2802ca347b7e71c5f691dd6736c23a9b560737", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f339ddefaef3dca6d92df06a673ee0b806242b1/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f339ddefaef3dca6d92df06a673ee0b806242b1/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=9f339ddefaef3dca6d92df06a673ee0b806242b1", "patch": "@@ -2283,10 +2283,10 @@ this option to work correctly.\n \n @item interrupt\n @cindex interrupt handler functions\n-Use this option on the ARM, AVR and M32R/D ports to indicate that the\n-specified function is an interrupt handler.  The compiler will generate\n-function entry and exit sequences suitable for use in an interrupt\n-handler when this attribute is present.\n+Use this option on the ARM, AVR, M32R/D and Xstormy16 ports to indicate\n+that the specified function is an interrupt handler.  The compiler will\n+generate function entry and exit sequences suitable for use in an\n+interrupt handler when this attribute is present.\n \n Note, interrupt handlers for the H8/300, H8/300H and SH processors can\n be specified via the @code{interrupt_handler} attribute."}, {"sha": "77331927d4ab4be7ab6643db59f3d1bfa644206f", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 68, "deletions": 1, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f339ddefaef3dca6d92df06a673ee0b806242b1/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f339ddefaef3dca6d92df06a673ee0b806242b1/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=9f339ddefaef3dca6d92df06a673ee0b806242b1", "patch": "@@ -1261,13 +1261,13 @@ Says that all following characters, up to the next comma, are to be\n ignored as a constraint.  They are significant only for choosing\n register preferences.\n \n-@ifset INTERNALS\n @cindex @samp{*} in constraint\n @item *\n Says that the following character should be ignored when choosing\n register preferences.  @samp{*} has no effect on the meaning of the\n constraint as a constraint, and no effect on reloading.\n \n+@ifset INTERNALS\n Here is an example: the 68000 has an instruction to sign-extend a\n halfword in a data register, and can also sign-extend a value by\n copying it into an address register.  While either kind of register is\n@@ -2001,6 +2001,73 @@ Symbolic constant suitable for use with the @code{larl} instruction\n \n @end table\n \n+@item Xstormy16---@file{stormy16.h}\n+@table @code\n+@item a\n+Register r0.\n+\n+@item b\n+Register r1.\n+\n+@item c\n+Register r2.\n+\n+@item d\n+Register r8.\n+\n+@item e\n+Registers r0 through r7.\n+\n+@item t\n+Registers r0 and r1.\n+\n+@item y\n+The carry register.\n+\n+@item z\n+Registers r8 and r9.\n+\n+@item I\n+A constant between 0 and 3 inclusive.\n+\n+@item J\n+A constant that has exactly one bit set.\n+\n+@item K\n+A constant that has exactly one bit clear.\n+\n+@item L\n+A constant between 0 and 255 inclusive.\n+\n+@item M\n+A constant between -255 and 0 inclusive.\n+\n+@item N\n+A constant between -3 and 0 inclusive.\n+\n+@item O\n+A constant between 1 and 4 inclusive.\n+\n+@item P\n+A constant between -4 and -1 inclusive.\n+\n+@item Q\n+A memory reference that is a stack push.\n+\n+@item R\n+A memory reference that is a stack pop.\n+\n+@item S\n+A memory reference that refers to an constant address of known value.\n+\n+@item T\n+The register indicated by Rx (not implemented yet).\n+\n+@item U\n+A constant that is not between 2 and 15 inclusive.\n+\n+@end table\n+\n @end table\n \n @ifset INTERNALS"}]}