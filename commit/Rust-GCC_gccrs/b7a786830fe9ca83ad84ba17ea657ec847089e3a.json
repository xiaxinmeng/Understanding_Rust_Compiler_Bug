{"sha": "b7a786830fe9ca83ad84ba17ea657ec847089e3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdhNzg2ODMwZmU5Y2E4M2FkODRiYTE3ZWE2NTdlYzg0NzA4OWUzYQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2013-03-08T22:26:37Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2013-03-08T22:26:37Z"}, "message": "trans-mem.c (expand_transaction): Do not set PR_INSTRUMENTEDCODE if GTMA_HAS_NO_INSTRUMENTATION.\n\n\t* trans-mem.c (expand_transaction): Do not set PR_INSTRUMENTEDCODE\n\tif GTMA_HAS_NO_INSTRUMENTATION.\n\t(generate_tm_state): Keep GTMA_HAS_NO_INSTRUMENTATION bit.\n\t(ipa_tm_transform_transaction): Set GTMA_HAS_NO_INSTRUMENTATION.\n\t* gimple.h (GTMA_HAS_NO_INSTRUMENTATION): Define.\n\t* gimple-pretty-print.c (dump_gimple_transaction): Handle\n\tGTMA_HAS_NO_INSTRUMENTATION.\n\nFrom-SVN: r196562", "tree": {"sha": "a216d949954f2fa084d0f5e143e1be32b84e03fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a216d949954f2fa084d0f5e143e1be32b84e03fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7a786830fe9ca83ad84ba17ea657ec847089e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a786830fe9ca83ad84ba17ea657ec847089e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7a786830fe9ca83ad84ba17ea657ec847089e3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a786830fe9ca83ad84ba17ea657ec847089e3a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd1e666505bb187f71f02bba5bdc17ff885ce243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1e666505bb187f71f02bba5bdc17ff885ce243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1e666505bb187f71f02bba5bdc17ff885ce243"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "7a4de2537e7bf7f7596d0352ccdcf870621c0dc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7a786830fe9ca83ad84ba17ea657ec847089e3a", "patch": "@@ -1,3 +1,15 @@\n+2013-02-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* trans-mem.c (expand_transaction): Do not set PR_INSTRUMENTEDCODE\n+\tif GTMA_HAS_NO_INSTRUMENTATION.\n+\t(generate_tm_state): Keep GTMA_HAS_NO_INSTRUMENTATION bit.\n+\t(ipa_tm_transform_transaction): Set GTMA_HAS_NO_INSTRUMENTATION.\n+\t* gimple.h (GTMA_HAS_NO_INSTRUMENTATION): Define.\n+\t* gimple-pretty-print.c (dump_gimple_transaction): Handle\n+\tGTMA_HAS_NO_INSTRUMENTATION.\n+\n+2013-02-25  Aldy Hernandez  <aldyh@redhat.com>\n+\n 2013-03-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/gnu-user.h (LIBTSAN_EARLY_SPEC): Don't link against"}, {"sha": "8c24a57d6d64fbd0fe2af6c3b59bfef0684a9b40", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=b7a786830fe9ca83ad84ba17ea657ec847089e3a", "patch": "@@ -1399,6 +1399,11 @@ dump_gimple_transaction (pretty_printer *buffer, gimple gs, int spc, int flags)\n \t\t  pp_string (buffer, \"GTMA_DOES_GO_IRREVOCABLE \");\n \t\t  subcode &= ~GTMA_DOES_GO_IRREVOCABLE;\n \t\t}\n+\t      if (subcode & GTMA_HAS_NO_INSTRUMENTATION)\n+\t\t{\n+\t\t  pp_string (buffer, \"GTMA_HAS_NO_INSTRUMENTATION \");\n+\t\t  subcode &= ~GTMA_HAS_NO_INSTRUMENTATION;\n+\t\t}\n \t      if (subcode)\n \t\tpp_printf (buffer, \"0x%x \", subcode);\n \t      pp_string (buffer, \"]\");"}, {"sha": "1bbd7d76a11ad83e9ef7568069a2e99db5a511e1", "filename": "gcc/gimple.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=b7a786830fe9ca83ad84ba17ea657ec847089e3a", "patch": "@@ -661,6 +661,9 @@ struct GTY(()) gimple_statement_omp_atomic_store {\n    tell the runtime that it should begin the transaction in\n    serial-irrevocable mode.  */\n #define GTMA_DOES_GO_IRREVOCABLE\t(1u << 6)\n+/* The transaction contains no instrumentation code whatsover, most\n+   likely because it is guaranteed to go irrevocable upon entry.  */\n+#define GTMA_HAS_NO_INSTRUMENTATION\t(1u << 7)\n \n struct GTY(()) gimple_statement_transaction\n {"}, {"sha": "6cfd3e47924069c638e3b89ee4a6ddcfa78e16dc", "filename": "gcc/testsuite/gcc.dg/tm/instrumented-mask.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Finstrumented-mask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Finstrumented-mask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftm%2Finstrumented-mask.c?ref=b7a786830fe9ca83ad84ba17ea657ec847089e3a", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fgnu-tm -fdump-tree-tmmark\" } */\n+\n+/* If we're sure to go irrevocable, as in the case below, do not pass\n+   PR_INSTRUMENTEDCODE to the run-time if there is nothing\n+   instrumented within the transaction.  */\n+\n+int\n+main()\n+{\n+  __transaction_relaxed { __asm__(\"\"); }\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \" instrumentedCode\" 0 \"tmmark\" } } */\n+/* { dg-final { cleanup-tree-dump \"tmmark\" } } */"}, {"sha": "b0f18b552bbbe8455b93df69dccf916c35086684", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7a786830fe9ca83ad84ba17ea657ec847089e3a/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=b7a786830fe9ca83ad84ba17ea657ec847089e3a", "patch": "@@ -2602,7 +2602,7 @@ expand_transaction (struct tm_region *region, void *data ATTRIBUTE_UNUSED)\n       flags |= PR_HASNOABORT;\n     if ((subcode & GTMA_HAVE_STORE) == 0)\n       flags |= PR_READONLY;\n-    if (inst_edge)\n+    if (inst_edge && !(subcode & GTMA_HAS_NO_INSTRUMENTATION))\n       flags |= PR_INSTRUMENTEDCODE;\n     if (uninst_edge)\n       flags |= PR_UNINSTRUMENTEDCODE;\n@@ -2806,7 +2806,8 @@ generate_tm_state (struct tm_region *region, void *data ATTRIBUTE_UNUSED)\n \n       if (subcode & GTMA_DOES_GO_IRREVOCABLE)\n \tsubcode &= (GTMA_DECLARATION_MASK | GTMA_DOES_GO_IRREVOCABLE\n-\t\t    | GTMA_MAY_ENTER_IRREVOCABLE);\n+\t\t    | GTMA_MAY_ENTER_IRREVOCABLE\n+\t\t    | GTMA_HAS_NO_INSTRUMENTATION);\n       else\n \tsubcode &= GTMA_DECLARATION_MASK;\n       gimple_transaction_set_subcode (region->transaction_stmt, subcode);\n@@ -5069,8 +5070,9 @@ ipa_tm_transform_transaction (struct cgraph_node *node)\n \t  && bitmap_bit_p (d->irrevocable_blocks_normal,\n \t\t\t   region->entry_block->index))\n \t{\n-\t  transaction_subcode_ior (region, GTMA_DOES_GO_IRREVOCABLE);\n-\t  transaction_subcode_ior (region, GTMA_MAY_ENTER_IRREVOCABLE);\n+\t  transaction_subcode_ior (region, GTMA_DOES_GO_IRREVOCABLE\n+\t\t\t\t           | GTMA_MAY_ENTER_IRREVOCABLE\n+\t\t\t\t   \t   | GTMA_HAS_NO_INSTRUMENTATION);\n \t  continue;\n \t}\n "}]}