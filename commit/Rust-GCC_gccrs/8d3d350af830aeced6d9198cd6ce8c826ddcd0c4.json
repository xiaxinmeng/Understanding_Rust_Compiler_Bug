{"sha": "8d3d350af830aeced6d9198cd6ce8c826ddcd0c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQzZDM1MGFmODMwYWVjZWQ2ZDkxOThjZDZjZThjODI2ZGRjZDBjNA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-09-05T10:21:46Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-09-05T10:21:46Z"}, "message": "[PATCH AArch64] Remove varargs from aarch64_simd_expand_args\n\n        * config/aarch64/aarch64-builtins.c (aarch64_simd_expand_args): Replace\n        varargs with pointer parameter.\n        (aarch64_simd_expand_builtin): pass pointer into previous.\n\nFrom-SVN: r214945", "tree": {"sha": "cbbb57fc6805b6f710f0ea9b56566010f155045c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbbb57fc6805b6f710f0ea9b56566010f155045c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d3d350af830aeced6d9198cd6ce8c826ddcd0c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3d350af830aeced6d9198cd6ce8c826ddcd0c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d3d350af830aeced6d9198cd6ce8c826ddcd0c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3d350af830aeced6d9198cd6ce8c826ddcd0c4/comments", "author": null, "committer": null, "parents": [{"sha": "2f8a1720301c8efe6c450136769c8ec53bea097e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8a1720301c8efe6c450136769c8ec53bea097e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f8a1720301c8efe6c450136769c8ec53bea097e"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "9bf532b9a9e049a7d948e5702005028a0b1134e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3d350af830aeced6d9198cd6ce8c826ddcd0c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3d350af830aeced6d9198cd6ce8c826ddcd0c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d3d350af830aeced6d9198cd6ce8c826ddcd0c4", "patch": "@@ -1,3 +1,9 @@\n+2014-09-05  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64-builtins.c (aarch64_simd_expand_args): Replace\n+\tvarargs with pointer parameter.\n+\t(aarch64_simd_expand_builtin): pass pointer into previous.\n+\n 2014-09-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/cortex-a53.md (cortex_a53_alu_shift): Add alu_ext,"}, {"sha": "5e2f85edc3dcaa0028d372f4e178127fe4bbbda8", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3d350af830aeced6d9198cd6ce8c826ddcd0c4/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3d350af830aeced6d9198cd6ce8c826ddcd0c4/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=8d3d350af830aeced6d9198cd6ce8c826ddcd0c4", "patch": "@@ -862,9 +862,8 @@ typedef enum\n \n static rtx\n aarch64_simd_expand_args (rtx target, int icode, int have_retval,\n-\t\t\t  tree exp, ...)\n+\t\t\t  tree exp, builtin_simd_arg *args)\n {\n-  va_list ap;\n   rtx pat;\n   tree arg[SIMD_MAX_BUILTIN_ARGS];\n   rtx op[SIMD_MAX_BUILTIN_ARGS];\n@@ -878,11 +877,9 @@ aarch64_simd_expand_args (rtx target, int icode, int have_retval,\n \t  || !(*insn_data[icode].operand[0].predicate) (target, tmode)))\n     target = gen_reg_rtx (tmode);\n \n-  va_start (ap, exp);\n-\n   for (;;)\n     {\n-      builtin_simd_arg thisarg = (builtin_simd_arg) va_arg (ap, int);\n+      builtin_simd_arg thisarg = args[argc];\n \n       if (thisarg == SIMD_ARG_STOP)\n \tbreak;\n@@ -918,8 +915,6 @@ aarch64_simd_expand_args (rtx target, int icode, int have_retval,\n \t}\n     }\n \n-  va_end (ap);\n-\n   if (have_retval)\n     switch (argc)\n       {\n@@ -1033,12 +1028,7 @@ aarch64_simd_expand_builtin (int fcode, tree exp, rtx target)\n   /* The interface to aarch64_simd_expand_args expects a 0 if\n      the function is void, and a 1 if it is not.  */\n   return aarch64_simd_expand_args\n-\t  (target, icode, !is_void, exp,\n-\t   args[1],\n-\t   args[2],\n-\t   args[3],\n-\t   args[4],\n-\t   SIMD_ARG_STOP);\n+\t  (target, icode, !is_void, exp, &args[1]);\n }\n \n rtx"}]}