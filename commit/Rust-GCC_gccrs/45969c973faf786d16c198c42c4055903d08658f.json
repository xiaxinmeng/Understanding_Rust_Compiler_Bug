{"sha": "45969c973faf786d16c198c42c4055903d08658f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU5NjljOTczZmFmNzg2ZDE2YzE5OGM0MmM0MDU1OTAzZDA4NjU4Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2015-10-23T10:46:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T10:46:27Z"}, "message": "gnat1drv.adb (Adjust_Global_Switches): Adjust settings.\n\n2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Adjust settings.\n\t* sem.adb (Semantics): Remove special case.\n\nFrom-SVN: r229230", "tree": {"sha": "3b564c9735e23e369354db53fdf6f01c517ec7ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b564c9735e23e369354db53fdf6f01c517ec7ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45969c973faf786d16c198c42c4055903d08658f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45969c973faf786d16c198c42c4055903d08658f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45969c973faf786d16c198c42c4055903d08658f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45969c973faf786d16c198c42c4055903d08658f/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88ebcde507cc5dec4ed951ac15aa03e4f8d66fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ebcde507cc5dec4ed951ac15aa03e4f8d66fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ebcde507cc5dec4ed951ac15aa03e4f8d66fa3"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "b66d29ff12b7639c5539c7498fd026aadfebf05a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45969c973faf786d16c198c42c4055903d08658f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45969c973faf786d16c198c42c4055903d08658f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=45969c973faf786d16c198c42c4055903d08658f", "patch": "@@ -1,3 +1,8 @@\n+2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Adjust settings.\n+\t* sem.adb (Semantics): Remove special case.\n+\n 2015-10-23  Gary Dismukes  <dismukes@adacore.com>\n \n \t* bindgen.adb, restrict.adb: Minor spelling/grammar fixes."}, {"sha": "88cc9c0b8b0b2d44492d0086cf8cb0c5e0f1262e", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45969c973faf786d16c198c42c4055903d08658f/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45969c973faf786d16c198c42c4055903d08658f/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=45969c973faf786d16c198c42c4055903d08658f", "patch": "@@ -136,17 +136,34 @@ procedure Gnat1drv is\n          Unnest_Subprogram_Mode := True;\n       end if;\n \n-      --  -gnatd.V or -gnatd.u enables special C expansion mode\n+      --  -gnatd.u enables special C expansion mode\n \n-      if Debug_Flag_Dot_VV or Debug_Flag_Dot_U then\n+      if Debug_Flag_Dot_U then\n          Modify_Tree_For_C := True;\n       end if;\n \n-      --  Other flags set if we are generating C code\n+      --  Set all flags required when generating C code (-gnatd.V)\n \n       if Debug_Flag_Dot_VV then\n          Generate_C_Code := True;\n+         Modify_Tree_For_C := True;\n          Unnest_Subprogram_Mode := True;\n+\n+         --  Enable some restrictions systematically to simplify the generated\n+         --  code. Note that restriction checks are also disabled in C mode,\n+         --  see Restrict.Check_Restriction.\n+\n+         Restrict.Restrictions.Set   (No_Exception_Registration)       := True;\n+         Restrict.Restrictions.Set   (No_Initialize_Scalars)           := True;\n+         Restrict.Restrictions.Set   (No_Task_Hierarchy)               := True;\n+         Restrict.Restrictions.Set   (No_Abort_Statements)             := True;\n+         Restrict.Restrictions.Set   (Max_Asynchronous_Select_Nesting) := True;\n+         Restrict.Restrictions.Value (Max_Asynchronous_Select_Nesting) := 0;\n+\n+         --  Set operating mode to Generate_Code to benefit from full front-end\n+         --  expansion (e.g. generics).\n+\n+         Operating_Mode := Generate_Code;\n       end if;\n \n       --  -gnatd.E sets Error_To_Warning mode, causing selected error messages\n@@ -229,6 +246,7 @@ procedure Gnat1drv is\n          --  user specified Restrictions pragmas are ignored, see\n          --  Sem_Prag.Process_Restrictions_Or_Restriction_Warnings.\n \n+         Restrict.Restrictions.Set   (No_Exception_Registration)       := True;\n          Restrict.Restrictions.Set   (No_Initialize_Scalars)           := True;\n          Restrict.Restrictions.Set   (No_Task_Hierarchy)               := True;\n          Restrict.Restrictions.Set   (No_Abort_Statements)             := True;"}, {"sha": "aaaaf40bb0af80473cda356367adc0a648eab6a7", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45969c973faf786d16c198c42c4055903d08658f/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45969c973faf786d16c198c42c4055903d08658f/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=45969c973faf786d16c198c42c4055903d08658f", "patch": "@@ -505,16 +505,14 @@ package body Restrict is\n       --  In GNATprove mode restrictions are checked, except for\n       --  No_Initialize_Scalars, which is implicitly set in gnat1drv.adb.\n \n-      --  Just checking, SPARK does not allow restrictions to be set ???\n-\n       if CodePeer_Mode\n         or else (GNATprove_Mode and then R = No_Initialize_Scalars)\n       then\n          return;\n       end if;\n \n-      --  In SPARK mode, issue an error for any use of class-wide, even if the\n-      --  No_Dispatch restriction is not set.\n+      --  In SPARK 05 mode, issue an error for any use of class-wide, even if\n+      --  the No_Dispatch restriction is not set.\n \n       if R = No_Dispatch then\n          Check_SPARK_05_Restriction (\"class-wide is not allowed\", N);"}, {"sha": "819bcd5d959261b75d7f56cb625f5229034f253c", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45969c973faf786d16c198c42c4055903d08658f/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45969c973faf786d16c198c42c4055903d08658f/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=45969c973faf786d16c198c42c4055903d08658f", "patch": "@@ -1446,10 +1446,6 @@ package body Sem is\n \n              or else Debug_Flag_X\n \n-             --  Or if we are generating C code\n-\n-             or else Generate_C_Code\n-\n              --  Or if in configuration run-time mode. We do this so we get\n              --  error messages about missing entities in the run-time even\n              --  if we are compiling in -gnatc (no code generation) mode."}]}