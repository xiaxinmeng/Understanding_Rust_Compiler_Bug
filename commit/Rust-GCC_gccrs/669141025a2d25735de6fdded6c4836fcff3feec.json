{"sha": "669141025a2d25735de6fdded6c4836fcff3feec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY5MTQxMDI1YTJkMjU3MzVkZTZmZGRlZDZjNDgzNmZjZmYzZmVlYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-09-02T12:23:04Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-09-02T12:23:04Z"}, "message": "re PR fortran/33276 (465.tonto in SPEC CPU 2006 fails to compile)\n\ngcc/fortran/\n\n2007-09-02  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR fortran/33276\n\t* array.c (expand_iterator): Initialize frame.prev.\n\ngcc/testsuite/\n\n2007-09-02  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR fortran/33276\n\t* gfortran.fortran-torture/compile/pr33276.f90: New.\n\nFrom-SVN: r128024", "tree": {"sha": "63bf9e707a079a0ef3f1c54b5d986476e3c1582b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63bf9e707a079a0ef3f1c54b5d986476e3c1582b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/669141025a2d25735de6fdded6c4836fcff3feec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/669141025a2d25735de6fdded6c4836fcff3feec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/669141025a2d25735de6fdded6c4836fcff3feec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/669141025a2d25735de6fdded6c4836fcff3feec/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ead8827dd68112fe99b434d62614ab9aaec7f9de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead8827dd68112fe99b434d62614ab9aaec7f9de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead8827dd68112fe99b434d62614ab9aaec7f9de"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "00f798a8702b42abc49cd84a8987ca3fa11c6dfa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/669141025a2d25735de6fdded6c4836fcff3feec/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/669141025a2d25735de6fdded6c4836fcff3feec/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=669141025a2d25735de6fdded6c4836fcff3feec", "patch": "@@ -1,3 +1,8 @@\n+2007-09-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR fortran/33276\n+\t* array.c (expand_iterator): Initialize frame.prev.\n+\n 2007-08-31  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33232"}, {"sha": "0c30b3374cc582a264b1c44f3e913f2b8870677e", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/669141025a2d25735de6fdded6c4836fcff3feec/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/669141025a2d25735de6fdded6c4836fcff3feec/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=669141025a2d25735de6fdded6c4836fcff3feec", "patch": "@@ -1281,6 +1281,7 @@ expand_iterator (gfc_constructor *c)\n \n   mpz_init (trip);\n   mpz_init (frame.value);\n+  frame.prev = NULL;\n \n   start = gfc_copy_expr (c->iterator->start);\n   if (gfc_simplify_expr (start, 1) == FAILURE)"}, {"sha": "3efc89695ee523a660ae163f7b057925bfeae33a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/669141025a2d25735de6fdded6c4836fcff3feec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/669141025a2d25735de6fdded6c4836fcff3feec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=669141025a2d25735de6fdded6c4836fcff3feec", "patch": "@@ -1,3 +1,8 @@\n+2007-09-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR fortran/33276\n+\t* gfortran.fortran-torture/compile/pr33276.f90: New.\n+\n 2007-09-02  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR middle-end/33272"}, {"sha": "0eaac1a494d8a1a476ae0513a41758689d8ac56b", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/pr33276.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/669141025a2d25735de6fdded6c4836fcff3feec/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr33276.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/669141025a2d25735de6fdded6c4836fcff3feec/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr33276.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr33276.f90?ref=669141025a2d25735de6fdded6c4836fcff3feec", "patch": "@@ -0,0 +1,27 @@\n+! PR fortran/33276\n+! this used to crash due to an uninitialized variable in expand_iterator.\n+\n+module foo\n+   type buffer_type\n+   integer(kind=kind(1)) :: item_end\n+   character(256) :: string\n+   end type\n+   type textfile_type\n+   type(buffer_type) :: buffer\n+   end type\n+contains\n+   function rest_of_line(self) result(res)\n+    type(textfile_type) :: self\n+     intent(inout) :: self\n+     character(128) :: res\n+     res = self%buffer%string(self%buffer%item_end+1: )\n+   end function\n+\n+   subroutine read_intvec_ptr(v)\n+      integer(kind=kind(1)), dimension(:), pointer :: v\n+      integer(kind=kind(1)) :: dim,f,l,i\n+\n+     if (dim>0) then; v = (/ (i, i=f,l)    /)\n+     end if\n+   end subroutine\n+end"}]}