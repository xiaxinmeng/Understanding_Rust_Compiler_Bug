{"sha": "6098b63e5b28dc8955a4f58d03c7223f04de06a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA5OGI2M2U1YjI4ZGM4OTU1YTRmNThkMDNjNzIyM2YwNGRlMDZhNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-01T00:29:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-01T00:29:55Z"}, "message": "(STATIC_CHAIN_REGNUM): Use %g2; %g1 is reserved for prologue.\n\n(TRAMPOLINE_TEMPLATE, INITIALIZE_TRAMPOLINE): Swap useage of %g1 and %g2.\n\nFrom-SVN: r6171", "tree": {"sha": "cafc4f897d7c9a5d30e07b5ed37b738e3a3ff80e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cafc4f897d7c9a5d30e07b5ed37b738e3a3ff80e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6098b63e5b28dc8955a4f58d03c7223f04de06a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6098b63e5b28dc8955a4f58d03c7223f04de06a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6098b63e5b28dc8955a4f58d03c7223f04de06a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6098b63e5b28dc8955a4f58d03c7223f04de06a5/comments", "author": null, "committer": null, "parents": [{"sha": "f74c83fd7a46fdeda1c0980a3dd63bd74e9daaf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f74c83fd7a46fdeda1c0980a3dd63bd74e9daaf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f74c83fd7a46fdeda1c0980a3dd63bd74e9daaf4"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "42a91efb26a3d135a291b540692484afe7d7c540", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6098b63e5b28dc8955a4f58d03c7223f04de06a5/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6098b63e5b28dc8955a4f58d03c7223f04de06a5/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=6098b63e5b28dc8955a4f58d03c7223f04de06a5", "patch": "@@ -449,9 +449,9 @@ extern int leaf_function;\n /* Base register for access to arguments of the function.  */\n #define ARG_POINTER_REGNUM 30\n \n-/* Register in which static-chain is passed to a function.  */\n-/* ??? */\n-#define STATIC_CHAIN_REGNUM 1\n+/* Register in which static-chain is passed to a function.  This must\n+   not be a register used by the prologue.  */\n+#define STATIC_CHAIN_REGNUM 2\n \n /* Register which holds offset table for position-independent\n    data references.  */\n@@ -994,17 +994,17 @@ extern union tree_node *current_function_decl;\n    of a trampoline, leaving space for the variable parts.  */\n \n /* On the sparc, the trampoline contains five instructions:\n-     sethi #TOP_OF_FUNCTION,%g2\n-     or #BOTTOM_OF_FUNCTION,%g2,%g2\n-     sethi #TOP_OF_STATIC,%g1\n-     jmp g2\n-     or #BOTTOM_OF_STATIC,%g1,%g1  */\n+     sethi #TOP_OF_FUNCTION,%g1\n+     or #BOTTOM_OF_FUNCTION,%g1,%g1\n+     sethi #TOP_OF_STATIC,%g2\n+     jmp g1\n+     or #BOTTOM_OF_STATIC,%g2,%g2  */\n #define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n   ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n   ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n-  ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x81C08000));\t\\\n+  ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x81C04000));\t\\\n   ASM_OUTPUT_INT (FILE, gen_rtx (CONST_INT, VOIDmode, 0x00000000));\t\\\n }\n \n@@ -1041,16 +1041,16 @@ extern union tree_node *current_function_decl;\n   rtx g2_ori = gen_rtx (HIGH, SImode,\t\t\t\t\t\\\n \t\t\tgen_rtx (CONST_INT, VOIDmode, 0x8410A000));\t\\\n   rtx tem = gen_reg_rtx (SImode);\t\t\t\t\t\\\n-  emit_move_insn (tem, g2_sethi);\t\t\t\t\t\\\n+  emit_move_insn (tem, g1_sethi);\t\t\t\t\t\\\n   emit_insn (gen_iorsi3 (high_fn, high_fn, tem));\t\t\t\\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 0)), high_fn);\\\n-  emit_move_insn (tem, g2_ori);\t\t\t\t\t\t\\\n+  emit_move_insn (tem, g1_ori);\t\t\t\t\t\t\\\n   emit_insn (gen_iorsi3 (low_fn, low_fn, tem));\t\t\t\t\\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 4)), low_fn);\\\n-  emit_move_insn (tem, g1_sethi);\t\t\t\t\t\\\n+  emit_move_insn (tem, g2_sethi);\t\t\t\t\t\\\n   emit_insn (gen_iorsi3 (high_cxt, high_cxt, tem));\t\t\t\\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 8)), high_cxt);\\\n-  emit_move_insn (tem, g1_ori);\t\t\t\t\t\t\\\n+  emit_move_insn (tem, g2_ori);\t\t\t\t\t\t\\\n   emit_insn (gen_iorsi3 (low_cxt, low_cxt, tem));\t\t\t\\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 16)), low_cxt);\\\n   emit_insn (gen_rtx (UNSPEC_VOLATILE, VOIDmode,\t\t\t\\"}]}