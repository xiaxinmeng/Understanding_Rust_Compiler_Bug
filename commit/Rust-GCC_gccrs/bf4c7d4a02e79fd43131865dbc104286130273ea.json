{"sha": "bf4c7d4a02e79fd43131865dbc104286130273ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY0YzdkNGEwMmU3OWZkNDMxMzE4NjVkYmMxMDQyODYxMzAyNzNlYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-05-13T03:37:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-05-13T03:37:38Z"}, "message": "re PR debug/53235 (20120504 broke -fdebug-types-section)\n\n\tPR debug/53235\n\t* dwarf2out.c (build_local_stub): Prefer DW_AT_signature for\n\tcomdat types.\n\nFrom-SVN: r187435", "tree": {"sha": "ba75bafce5e1edf6239cec3f9f0c5c92787698e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba75bafce5e1edf6239cec3f9f0c5c92787698e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf4c7d4a02e79fd43131865dbc104286130273ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4c7d4a02e79fd43131865dbc104286130273ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf4c7d4a02e79fd43131865dbc104286130273ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4c7d4a02e79fd43131865dbc104286130273ea/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e08946f4acff8507d5bd1b8d27419238621500e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08946f4acff8507d5bd1b8d27419238621500e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e08946f4acff8507d5bd1b8d27419238621500e9"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "305bd5c5819fec763f067a07f9db7d77a937aa71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4c7d4a02e79fd43131865dbc104286130273ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4c7d4a02e79fd43131865dbc104286130273ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf4c7d4a02e79fd43131865dbc104286130273ea", "patch": "@@ -1,3 +1,9 @@\n+2012-05-12  Jason Merrill  <jason@redhat.com>\n+\n+\tPR debug/53235\n+\t* dwarf2out.c (build_local_stub): Prefer DW_AT_signature for\n+\tcomdat types.\n+\n 2012-05-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* function.c (requires_stack_frame_p): If the function can throw"}, {"sha": "9ba65fb8bac4085cd018bcb869de7652e8de637d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 17, "deletions": 22, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4c7d4a02e79fd43131865dbc104286130273ea/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4c7d4a02e79fd43131865dbc104286130273ea/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=bf4c7d4a02e79fd43131865dbc104286130273ea", "patch": "@@ -6929,36 +6929,31 @@ static int\n build_local_stub (void **slot, void *data)\n {\n   struct external_ref *ref_p = (struct external_ref *)*slot;\n-  dw_die_ref cu = (dw_die_ref) data;\n-  dw_die_ref type = ref_p->type;\n-  dw_die_ref stub = NULL;\n \n-  if (ref_p->stub == NULL && ref_p->n_refs > 1)\n+  if (ref_p->stub == NULL && ref_p->n_refs > 1 && !dwarf_strict)\n     {\n-      if (!dwarf_strict)\n-\t{\n-\t  /* If we aren't being strict, use a typedef with no name\n-\t     to just forward to the real type.  In strict DWARF, a\n-\t     typedef must have a name.  */\n-\t  stub = new_die (DW_TAG_typedef, cu, NULL_TREE);\n-\t  add_AT_die_ref (stub, DW_AT_type, type);\n-\t}\n-      else if (type->comdat_type_p)\n+      /* We have multiple references to this type, so build a small stub.\n+\t Both of these forms are a bit dodgy from the perspective of the\n+\t DWARF standard, since technically they should have names.  */\n+      dw_die_ref cu = (dw_die_ref) data;\n+      dw_die_ref type = ref_p->type;\n+      dw_die_ref stub = NULL;\n+\n+      if (type->comdat_type_p)\n \t{\n-\t  /* If we refer to this type via sig8, we can use a simple\n-\t     declaration; this is larger than the typedef, but strictly\n-\t     correct.  */\n+\t  /* If we refer to this type via sig8, use AT_signature.  */\n \t  stub = new_die (type->die_tag, cu, NULL_TREE);\n-\t  add_AT_string (stub, DW_AT_name, get_AT_string (type, DW_AT_name));\n-\t  add_AT_flag (stub, DW_AT_declaration, 1);\n \t  add_AT_die_ref (stub, DW_AT_signature, type);\n \t}\n-\n-      if (stub)\n+      else\n \t{\n-\t  stub->die_mark++;\n-\t  ref_p->stub = stub;\n+\t  /* Otherwise, use a typedef with no name.  */\n+\t  stub = new_die (DW_TAG_typedef, cu, NULL_TREE);\n+\t  add_AT_die_ref (stub, DW_AT_type, type);\n \t}\n+\n+      stub->die_mark++;\n+      ref_p->stub = stub;\n     }\n   return 1;\n }"}]}