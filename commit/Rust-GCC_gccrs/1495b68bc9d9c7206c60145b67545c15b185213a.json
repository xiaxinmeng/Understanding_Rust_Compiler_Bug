{"sha": "1495b68bc9d9c7206c60145b67545c15b185213a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ5NWI2OGJjOWQ5YzcyMDZjNjAxNDViNjc1NDVjMTViMTg1MjEzYQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-07-16T23:04:24Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-07-16T23:04:24Z"}, "message": "rs6000: New testsuite selectors\n\nThis introduces four new selectors for use with Power testcases:\nlongdouble64, ppc_float128, ppc_float128_insns, powerpc_vsx.\n\n\ngcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_longdouble64,\n\tcheck_effective_target_ppc_float128,\n\tcheck_effective_target_ppc_float128_insns,\n\tcheck_effective_target_powerpc_vsx): New.\n\nFrom-SVN: r262756", "tree": {"sha": "8096f2bf226bf504eb9341eb7b11a616b83404a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8096f2bf226bf504eb9341eb7b11a616b83404a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1495b68bc9d9c7206c60145b67545c15b185213a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1495b68bc9d9c7206c60145b67545c15b185213a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1495b68bc9d9c7206c60145b67545c15b185213a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1495b68bc9d9c7206c60145b67545c15b185213a/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "831bac26205314490d8a15940f5bd59b030ca503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831bac26205314490d8a15940f5bd59b030ca503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831bac26205314490d8a15940f5bd59b030ca503"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "1aa9b490edd8e6c788882c6ee8efe2031701b463", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1495b68bc9d9c7206c60145b67545c15b185213a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1495b68bc9d9c7206c60145b67545c15b185213a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1495b68bc9d9c7206c60145b67545c15b185213a", "patch": "@@ -1,3 +1,10 @@\n+2018-07-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* lib/target-supports.exp (check_effective_target_longdouble64,\n+\tcheck_effective_target_ppc_float128,\n+\tcheck_effective_target_ppc_float128_insns,\n+\tcheck_effective_target_powerpc_vsx): New.\n+\n 2018-07-16  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* lib/target-supports.exp (check_ppc_float128_hw_available): Fix"}, {"sha": "c2d814cf8c692e5939ec71c43a50c5bd52554b2b", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1495b68bc9d9c7206c60145b67545c15b185213a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1495b68bc9d9c7206c60145b67545c15b185213a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=1495b68bc9d9c7206c60145b67545c15b185213a", "patch": "@@ -2684,6 +2684,15 @@ proc check_effective_target_longdouble128 { } {\n     }]\n }\n \n+# Return 1 if the target supports long double of 64 bits,\n+# 0 otherwise.\n+\n+proc check_effective_target_longdouble64 { } {\n+    return [check_no_compiler_messages longdouble64 object {\n+\tint dummy[sizeof(long double) == 8 ? 1 : -1];\n+    }]\n+}\n+\n # Return 1 if the target supports double of 64 bits,\n # 0 otherwise.\n \n@@ -5141,6 +5150,36 @@ proc check_effective_target_powerpc_float128_hw_ok { } {\n     }\n }\n \n+# Return 1 if current options define float128, 0 otherwise.\n+\n+proc check_effective_target_ppc_float128 { } {\n+    return [check_no_compiler_messages_nocache ppc_float128 object {\n+\t#ifndef __FLOAT128__\n+\t  nope no good\n+\t#endif\n+    }]\n+}\n+\n+# Return 1 if current options generate float128 insns, 0 otherwise.\n+\n+proc check_effective_target_ppc_float128_insns { } {\n+    return [check_no_compiler_messages_nocache ppc_float128 object {\n+\t#ifndef __FLOAT128_HARDWARE__\n+\t  nope no good\n+\t#endif\n+    }]\n+}\n+\n+# Return 1 if current options generate VSX instructions, 0 otherwise.\n+\n+proc check_effective_target_powerpc_vsx { } {\n+    return [check_no_compiler_messages_nocache powerpc_vsx object {\n+\t#ifndef __VSX__\n+\t  nope no vsx\n+\t#endif\n+    }]\n+}\n+\n # Return 1 if this is a PowerPC target supporting -mvsx\n \n proc check_effective_target_powerpc_vsx_ok { } {"}]}