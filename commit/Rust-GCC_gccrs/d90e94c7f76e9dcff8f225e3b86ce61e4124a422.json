{"sha": "d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwZTk0YzdmNzZlOWRjZmY4ZjIyNWUzYjg2Y2U2MWU0MTI0YTQyMg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2007-04-06T09:13:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:13:42Z"}, "message": "a-coprnu.ads, a-cohata.ads, a-chtgop.ads, a-chtgop.adb, a-cgcaso.ads, a-cgarso.ads, a-secain.ads, a-slcain.ads, a-shcain.ads, a-chtgke.ads, a-chtgke.ads, a-coprnu.ads, a-contai.ads, a-chtgke.ads, a-chtgke.adb, a-stwiha.ads, a-strhas.ads, a-lfztio.ads, a-liztio.ads, a-llfzti.ads, a-llizti.ads, a-sfztio.ads, a-siztio.ads, a-ssizti.ads, a-stzfix.ads, a-stzhas.ads, a-szuzha.ads, a-tiunio.ads, a-wwunio.ads, a-ztcoio.ads, a-ztinio.ads, a-zttest.ads, a-zzunio.ads, a-astaco.ads, a-charac.ads, a-chlat1.ads, ada.ads, a-dynpri.ads, a-flteio.ads, a-fwteio.ads, a-inteio.ads, a-intnam.ads, a-ioexce.ads, a-iwteio.ads, a-lfteio.ads, a-lfwtio.ads, a-liteio.ads, a-liwtio.ads, a-llftio.ads, a-llfwti.ads, a-llitio.ads, a-lliwti.ads, a-ncelfu.ads, a-ngcefu.ads, a-ngelfu.ads, a-nlcefu.ads, a-nlcoty.ads, a-nlelfu.ads, a-nllcef.ads, a-nllcty.ads, a-nllefu.ads, a-nscefu.ads, a-nscoty.ads, a-nselfu.ads, a-nucoty.ads, a-nuelfu.ads, a-numeri.ads, a-sfteio.ads, a-sfwtio.ads, a-siteio.ads, a-siwtio.ads, a-ssitio.ads, a-ssiwti.ads, a-storio.ads, a-strfix.ads, a-string.ads, a-stwifi.ads, a-titest.ads, a-unccon.ads, a-uncdea.ads, a-wtcoio.ads, a-wtinio.ads, a-wttest.ads, calendar.ads, directio.ads, i-c.ads, ioexcept.ads, machcode.ads, sequenio.ads, text_io.ads, unchconv.ads, unchdeal.ads, a-widcha.ads, a-zchara.ads, a-stboha.ads, a-stfiha.ads, a-coteio.ads, a-envvar.ads, a-lcteio.ads, a-llctio.ads, a-scteio.ads, a-swbwha.ads, a-swfwha.ads, a-szbzha.ads, a-szfzha.ads, a-tiboio.ads, a-wwboio.ads, a-zzboio.ads, a-dispat.ads, a-tgdico.ads, expander.adb, g-socket.ads, par-labl.adb, sinput-c.adb, s-tarest.ads, s-stchop.ads, g-expect-vms.adb, s-taprop-lynxos.adb, s-taprop-tru64.adb, s-taprop-irix.adb, s-taprop-hpux-dce.adb, s-traceb-hpux.adb, s-taprop-linux.adb, s-taprop-dummy.adb, s-osprim-unix.adb, s-osprim-solaris.adb, s-taprop-solaris.adb, s-taprop-vms.adb, s-osprim-mingw.adb, s-taprop-mingw.adb, s-osprim-posix.adb, s-taprop-posix.adb, a-exexpr-gcc.adb, a-ststio.adb, a-ststio.ads, a-textio.adb, a-textio.ads, a-tideau.adb, a-tideau.ads, a-witeio.adb, a-witeio.ads, a-wtdeau.adb, a-wtdeau.ads, g-calend.adb, g-calend.ads, g-dirope.adb, g-expect.ads, gnatchop.adb, g-spipat.adb, g-spipat.ads, s-direio.adb, s-direio.ads, s-fatgen.adb, s-fatgen.ads, s-parint.adb, s-sequio.adb, s-sequio.ads, s-taprop.ads, s-valdec.adb, s-valdec.ads, s-valint.adb, s-valint.ads, s-vallld.adb, s-vallld.ads, s-vallli.adb, s-vallli.ads, s-valllu.adb, s-valllu.ads, s-valrea.adb, s-valrea.ads, s-valuns.adb, s-valuns.ads, s-valuti.adb, s-valuti.ads, xref_lib.adb, s-stchop.adb, i-vxwork-x86.ads, a-crbtgo.ads, a-crbtgo.adb, a-coorse.ads, a-coorse.adb, a-cohama.ads, a-cohama.adb, a-ciorse.ads, a-ciorse.adb, a-cihama.ads, a-cihama.adb, a-chtgop.ads, a-chtgop.ads, a-coormu.adb, a-ciormu.adb, a-cihase.adb, a-cihase.ads, a-cohase.adb, a-cohase.ads, a-swuwha.ads, a-ciormu.ads, a-coormu.ads, a-rbtgso.ads, a-stunha.ads, a-ciorma.adb, a-coorma.adb, a-ztdeau.adb, a-ztdeau.ads, a-ztexio.adb, a-ztexio.ads...\n\n2007-04-06  Javier Miranda  <miranda@adacore.com>\n\t    Matt Heaney  <heaney@adacore.com>\n\t    Robert Dewar  <dewar@adacore.com>\n\n\ta-coprnu.ads, a-cohata.ads, a-chtgop.ads, a-chtgop.adb, a-cgcaso.ads,\n\ta-cgarso.ads, a-secain.ads, a-slcain.ads, a-shcain.ads, a-chtgke.ads,\n\ta-chtgke.ads, a-coprnu.ads, a-contai.ads, a-chtgke.ads, a-chtgke.adb,\n\ta-stwiha.ads, a-strhas.ads, a-lfztio.ads, a-liztio.ads, a-llfzti.ads,\n\ta-llizti.ads, a-sfztio.ads, a-siztio.ads, a-ssizti.ads, a-stzfix.ads,\n\ta-stzhas.ads, a-szuzha.ads, a-tiunio.ads, a-wwunio.ads, a-ztcoio.ads,\n\ta-ztinio.ads, a-zttest.ads, a-zzunio.ads, a-astaco.ads, a-charac.ads,\n\ta-chlat1.ads, ada.ads, a-dynpri.ads, a-flteio.ads, a-fwteio.ads,\n\ta-inteio.ads, a-intnam.ads, a-ioexce.ads, a-iwteio.ads, a-lfteio.ads,\n\ta-lfwtio.ads, a-liteio.ads, a-liwtio.ads, a-llftio.ads, a-llfwti.ads,\n\ta-llitio.ads, a-lliwti.ads, a-ncelfu.ads, a-ngcefu.ads, a-ngelfu.ads,\n\ta-nlcefu.ads, a-nlcoty.ads, a-nlelfu.ads, a-nllcef.ads, a-nllcty.ads,\n\ta-nllefu.ads, a-nscefu.ads, a-nscoty.ads, a-nselfu.ads, a-nucoty.ads,\n\ta-nuelfu.ads, a-numeri.ads, a-sfteio.ads, a-sfwtio.ads, a-siteio.ads,\n\ta-siwtio.ads, a-ssitio.ads, a-ssiwti.ads, a-storio.ads, a-strfix.ads,\n\ta-string.ads, a-stwifi.ads, a-titest.ads, a-unccon.ads, a-uncdea.ads,\n\ta-wtcoio.ads, a-wtinio.ads, a-wttest.ads, calendar.ads, directio.ads,\n\ti-c.ads, ioexcept.ads, machcode.ads, sequenio.ads, text_io.ads,\n\tunchconv.ads, unchdeal.ads, a-widcha.ads, a-zchara.ads, a-stboha.ads,\n\ta-stfiha.ads, a-coteio.ads, a-envvar.ads, a-lcteio.ads, a-llctio.ads,\n\ta-scteio.ads, a-swbwha.ads, a-swfwha.ads, a-szbzha.ads, a-szfzha.ads,\n\ta-tiboio.ads, a-wwboio.ads, a-zzboio.ads, a-dispat.ads, a-tgdico.ads,\n\texpander.adb, g-socket.ads, par-labl.adb, sinput-c.adb, s-tarest.ads,\n\ts-stchop.ads, g-expect-vms.adb, s-taprop-lynxos.adb,\n\ts-taprop-tru64.adb, s-taprop-irix.adb,\n\ts-taprop-hpux-dce.adb, s-traceb-hpux.adb,\n\ts-taprop-linux.adb, s-taprop-dummy.adb, s-osprim-unix.adb,\n\ts-osprim-solaris.adb, s-taprop-solaris.adb, s-taprop-vms.adb,\n\ts-osprim-mingw.adb, s-taprop-mingw.adb, s-osprim-posix.adb, \n\ts-taprop-posix.adb, a-exexpr-gcc.adb, a-ststio.adb, a-ststio.ads, \n\ta-textio.adb, a-textio.ads, a-tideau.adb, a-tideau.ads, a-witeio.adb, \n\ta-witeio.ads, a-wtdeau.adb, a-wtdeau.ads, g-calend.adb, g-calend.ads, \n\tg-dirope.adb, g-expect.ads, gnatchop.adb, g-spipat.adb, g-spipat.ads, \n\ts-direio.adb, s-direio.ads, s-fatgen.adb, s-fatgen.ads, s-parint.adb, \n\ts-sequio.adb, s-sequio.ads, s-taprop.ads, s-valdec.adb, s-valdec.ads, \n\ts-valint.adb, s-valint.ads, s-vallld.adb, s-vallld.ads, s-vallli.adb, \n\ts-vallli.ads, s-valllu.adb, s-valllu.ads, s-valrea.adb, s-valrea.ads, \n\ts-valuns.adb, s-valuns.ads, s-valuti.adb, s-valuti.ads, xref_lib.adb, \n\ts-stchop.adb, i-vxwork-x86.ads, a-crbtgo.ads, a-crbtgo.adb, \n\ta-coorse.ads, a-coorse.adb, a-cohama.ads, a-cohama.adb, a-ciorse.ads, \n\ta-ciorse.adb, a-cihama.ads, a-cihama.adb, a-chtgop.ads, a-chtgop.ads, \n\ta-coormu.adb, a-ciormu.adb, a-cihase.adb, a-cihase.ads, a-cohase.adb, \n\ta-cohase.ads, a-swuwha.ads, a-ciormu.ads, a-coormu.ads, a-rbtgso.ads,\n\ta-stunha.ads, a-ciorma.adb, a-coorma.adb, a-ztdeau.adb, a-ztdeau.ads, \n\ta-ztexio.adb, a-ztexio.ads: Addition of null-exclusion to anonymous\n\taccess types.\n\tUpdate documentation.\n\tMinor rewording.\n\nFrom-SVN: r123538", "tree": {"sha": "166fbaa89fa43adbb98799a1535fe88c72c45bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/166fbaa89fa43adbb98799a1535fe88c72c45bf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96a94ff460518b9ac4d4d2e81299bedcdd310d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a94ff460518b9ac4d4d2e81299bedcdd310d49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96a94ff460518b9ac4d4d2e81299bedcdd310d49"}], "stats": {"total": 1719, "additions": 994, "deletions": 725}, "files": [{"sha": "3200c7ecdaffe6ddbdd6935b645762600193cc41", "filename": "gcc/ada/a-astaco.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-astaco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-astaco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-astaco.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "77281b5ef454c31a5019e72cb9b86b134921c526", "filename": "gcc/ada/a-cgarso.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cgarso.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cgarso.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cgarso.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "30af8b812e1e8e50867220d0c654468c92f7435b", "filename": "gcc/ada/a-charac.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-charac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-charac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-charac.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "634d295b272c5d3b6f9237955f71fb99d0b4f923", "filename": "gcc/ada/a-chlat1.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-chlat1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-chlat1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chlat1.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "4aa9ed3b22e7572fc4bd89121f9e3297b38fab78", "filename": "gcc/ada/a-chtgke.adb", "status": "modified", "additions": 99, "deletions": 57, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-chtgke.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-chtgke.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgke.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -37,9 +37,9 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n    --------------------------\n \n    procedure Delete_Key_Sans_Free\n-     (HT   : in out Hash_Table_Type;\n-      Key  : Key_Type;\n-      X    : out Node_Access)\n+     (HT  : in out Hash_Table_Type;\n+      Key : Key_Type;\n+      X   : out Node_Access)\n    is\n       Indx : Hash_Type;\n       Prev : Node_Access;\n@@ -59,7 +59,8 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n \n       if Equivalent_Keys (Key, X) then\n          if HT.Busy > 0 then\n-            raise Program_Error;\n+            raise Program_Error with\n+              \"attempt to tamper with elements (container is busy)\";\n          end if;\n          HT.Buckets (Indx) := Next (X);\n          HT.Length := HT.Length - 1;\n@@ -76,7 +77,8 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n \n          if Equivalent_Keys (Key, X) then\n             if HT.Busy > 0 then\n-               raise Program_Error;\n+               raise Program_Error with\n+                 \"attempt to tamper with elements (container is busy)\";\n             end if;\n             Set_Next (Node => Prev, Next => Next (X));\n             HT.Length := HT.Length - 1;\n@@ -130,7 +132,8 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n    begin\n       if B = null then\n          if HT.Busy > 0 then\n-            raise Program_Error;\n+            raise Program_Error with\n+              \"attempt to tamper with elements (container is busy)\";\n          end if;\n \n          if HT.Length = Count_Type'Last then\n@@ -159,7 +162,8 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n       end loop;\n \n       if HT.Busy > 0 then\n-         raise Program_Error;\n+         raise Program_Error with\n+           \"attempt to tamper with elements (container is busy)\";\n       end if;\n \n       if HT.Length = Count_Type'Last then\n@@ -184,91 +188,129 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n       return Hash (Key) mod HT.Buckets'Length;\n    end Index;\n \n-   ---------------------\n-   -- Replace_Element --\n-   ---------------------\n+   -----------------------------\n+   -- Generic_Replace_Element --\n+   -----------------------------\n \n    procedure Generic_Replace_Element\n      (HT   : in out Hash_Table_Type;\n       Node : Node_Access;\n       Key  : Key_Type)\n    is\n-   begin\n       pragma Assert (HT.Length > 0);\n+      pragma Assert (Node /= null);\n+\n+      Old_Hash : constant Hash_Type := Hash (Node);\n+      Old_Indx : constant Hash_Type := Old_Hash mod HT.Buckets'Length;\n+\n+      New_Hash : constant Hash_Type := Hash (Key);\n+      New_Indx : constant Hash_Type := New_Hash mod HT.Buckets'Length;\n \n+      New_Bucket : Node_Access renames HT.Buckets (New_Indx);\n+      N, M       : Node_Access;\n+\n+   begin\n       if Equivalent_Keys (Key, Node) then\n-         pragma Assert (Hash (Key) = Hash (Node));\n+         pragma Assert (New_Hash = Old_Hash);\n \n          if HT.Lock > 0 then\n             raise Program_Error with\n               \"attempt to tamper with cursors (container is locked)\";\n          end if;\n \n+         --  We can change a node's key to Key (that's what Assign is for), but\n+         --  only if Key is not already in the hash table. (In a unique-key\n+         --  hash table as this one a key is mapped to exactly one node only.)\n+         --  The exception is when Key is mapped to Node, in which case the\n+         --  change is allowed.\n+\n          Assign (Node, Key);\n+         pragma Assert (Hash (Node) = New_Hash);\n+         pragma Assert (Equivalent_Keys (Key, Node));\n          return;\n       end if;\n \n-      declare\n-         J : Hash_Type;\n-         K : constant Hash_Type := Index (HT, Key);\n-         B : Node_Access renames HT.Buckets (K);\n-         N : Node_Access := B;\n-         M : Node_Access;\n+      --  Key is not equivalent to Node, so we now have to determine if it's\n+      --  equivalent to some other node in the hash table. This is the case\n+      --  irrespective of whether Key is in the same or a different bucket from\n+      --  Node.\n \n-      begin\n-         while N /= null loop\n-            if Equivalent_Keys (Key, N) then\n-               raise Program_Error with\n-                 \"attempt to replace existing element\";\n-            end if;\n-\n-            N := Next (N);\n-         end loop;\n+      N := New_Bucket;\n+      while N /= null loop\n+         if Equivalent_Keys (Key, N) then\n+            pragma Assert (N /= Node);\n+            raise Program_Error with\n+              \"attempt to replace existing element\";\n+         end if;\n \n-         J := Hash (Node);\n+         N := Next (N);\n+      end loop;\n \n-         if J = K then\n-            if HT.Lock > 0 then\n-               raise Program_Error with\n-                 \"attempt to tamper with cursors (container is locked)\";\n-            end if;\n+      --  We have determined that Key is not already in the hash table, so\n+      --  the change is tenatively allowed. We now perform the standard\n+      --  checks to determine whether the hash table is locked (because you\n+      --  cannot change an element while it's in use by Query_Element or\n+      --  Update_Element), or if the container is busy (because moving a\n+      --  node to a different bucket would interfere with iteration).\n \n-            Assign (Node, Key);\n-            return;\n-         end if;\n+      if Old_Indx = New_Indx then\n+         --  The node is already in the bucket implied by Key. In this case\n+         --  we merely change its value without moving it.\n \n-         if HT.Busy > 0 then\n+         if HT.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements (container is busy)\";\n+              \"attempt to tamper with cursors (container is locked)\";\n          end if;\n \n          Assign (Node, Key);\n+         pragma Assert (Hash (Node) = New_Hash);\n+         pragma Assert (Equivalent_Keys (Key, Node));\n+         return;\n+      end if;\n \n-         N := HT.Buckets (J);\n-         pragma Assert (N /= null);\n+      --  The node is a bucket different from the bucket implied by Key.\n \n-         if N = Node then\n-            HT.Buckets (J) := Next (Node);\n+      if HT.Busy > 0 then\n+         raise Program_Error with\n+           \"attempt to tamper with elements (container is busy)\";\n+      end if;\n \n-         else\n-            pragma Assert (HT.Length > 1);\n+      --  Do the assignment first, before moving the node, so that if Assign\n+      --  propagates an exception, then the hash table will not have been\n+      --  modified (except for any possible side-effect Assign had on Node).\n \n-            loop\n-               M := Next (N);\n-               pragma Assert (M /= null);\n+      Assign (Node, Key);\n+      pragma Assert (Hash (Node) = New_Hash);\n+      pragma Assert (Equivalent_Keys (Key, Node));\n \n-               if M = Node then\n-                  Set_Next (Node => N, Next => Next (Node));\n-                  exit;\n-               end if;\n+      --  Now we can safely remove the node from its current bucket\n \n-               N := M;\n-            end loop;\n-         end if;\n+      N := HT.Buckets (Old_Indx);\n+      pragma Assert (N /= null);\n \n-         Set_Next (Node => Node, Next => B);\n-         B := Node;\n-      end;\n+      if N = Node then\n+         HT.Buckets (Old_Indx) := Next (Node);\n+\n+      else\n+         pragma Assert (HT.Length > 1);\n+\n+         loop\n+            M := Next (N);\n+            pragma Assert (M /= null);\n+\n+            if M = Node then\n+               Set_Next (Node => N, Next => Next (Node));\n+               exit;\n+            end if;\n+\n+            N := M;\n+         end loop;\n+      end if;\n+\n+      --  Now we link the node into its new bucket (corresponding to Key)\n+\n+      Set_Next (Node => Node, Next => New_Bucket);\n+      New_Bucket := Node;\n    end Generic_Replace_Element;\n \n end Ada.Containers.Hash_Tables.Generic_Keys;"}, {"sha": "833976acacebd8a69c8f6bb471a3cf3c592ddd3a", "filename": "gcc/ada/a-chtgke.ads", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-chtgke.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-chtgke.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgke.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -9,10 +9,6 @@\n --                                                                          --\n --          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n@@ -34,6 +30,9 @@\n -- This unit was originally developed by Matthew J Heaney.                  --\n ------------------------------------------------------------------------------\n \n+--  Hash_Table_Type is used to implement hashed containers. This package\n+--  declares hash-table operations that depend on keys.\n+\n generic\n    with package HT_Types is\n      new Generic_Hash_Table_Types (<>);\n@@ -61,13 +60,18 @@ package Ada.Containers.Hash_Tables.Generic_Keys is\n      (HT  : Hash_Table_Type;\n       Key : Key_Type) return Hash_Type;\n    pragma Inline (Index);\n+   --  Returns the bucket number (array index value) for the given key\n \n    procedure Delete_Key_Sans_Free\n-     (HT   : in out Hash_Table_Type;\n-      Key  : Key_Type;\n-      X    : out Node_Access);\n+     (HT  : in out Hash_Table_Type;\n+      Key : Key_Type;\n+      X   : out Node_Access);\n+   --  Removes the node (if any) with the given key from the hash table,\n+   --  without deallocating it. Program_Error is raised if the hash\n+   --  table is busy.\n \n    function Find (HT : Hash_Table_Type; Key : Key_Type) return Node_Access;\n+   --  Returns the node (if any) corresponding to the given key\n \n    generic\n       with function New_Node (Next : Node_Access) return Node_Access;\n@@ -76,6 +80,11 @@ package Ada.Containers.Hash_Tables.Generic_Keys is\n       Key      : Key_Type;\n       Node     : out Node_Access;\n       Inserted : out Boolean);\n+   --  Attempts to insert a new node with the given key into the hash table.\n+   --  If a node with that key already exists in the table, then that node\n+   --  is returned and Inserted returns False. Otherwise New_Node is called\n+   --  to allocate a new node, and Inserted returns True. Program_Error is\n+   --  raised if the hash table is busy.\n \n    generic\n       with function Hash (Node : Node_Access) return Hash_Type;\n@@ -84,5 +93,15 @@ package Ada.Containers.Hash_Tables.Generic_Keys is\n      (HT   : in out Hash_Table_Type;\n       Node : Node_Access;\n       Key  : Key_Type);\n+   --  Assigns Key to Node, possibly changing its equivalence class. If Node\n+   --  is in the same equivalence class as Key (that is, it's already in the\n+   --  bucket implied by Key), then if the hash table is locked then\n+   --  Program_Error is raised; otherwise Assign is called to assign Key to\n+   --  Node. If Node is in a different bucket from Key, then Program_Error is\n+   --  raised if the hash table is busy. Otherwise it Assigns Key to Node and\n+   --  moves the Node from its current bucket to the bucket implied by Key.\n+   --  Note that it is never proper to assign to Node a key value already\n+   --  in the map, and so if Key is equivalent to some other node then\n+   --  Program_Error is raised.\n \n end Ada.Containers.Hash_Tables.Generic_Keys;"}, {"sha": "03154219be67fa04f52a4d75642fc002ef4f5935", "filename": "gcc/ada/a-chtgop.ads", "status": "modified", "additions": 69, "deletions": 8, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-chtgop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-chtgop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgop.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -7,13 +7,32 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n--- GNAT.  In accordance with the copyright of that document, you can freely --\n--- copy and modify this specification,  provided that if you redistribute a --\n--- modified version,  any changes that you have made are clearly indicated. --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- This unit was originally developed by Matthew J Heaney.                  --\n ------------------------------------------------------------------------------\n \n+--  Hash_Table_Type is used to implement hashed containers. This package\n+--  declares hash-table operations that do not depend on keys.\n+\n with Ada.Streams;\n \n generic\n@@ -39,67 +58,109 @@ package Ada.Containers.Hash_Tables.Generic_Operations is\n    pragma Preelaborate;\n \n    procedure Free_Hash_Table (Buckets : in out Buckets_Access);\n+   --  First frees the nodes in all non-null buckets of Buckets, and then frees\n+   --  the Buckets array itself.\n \n    function Index\n      (Buckets : Buckets_Type;\n       Node    : Node_Access) return Hash_Type;\n    pragma Inline (Index);\n+   --  Uses the hash value of Node to compute its Buckets array index\n \n    function Index\n      (Hash_Table : Hash_Table_Type;\n       Node       : Node_Access) return Hash_Type;\n    pragma Inline (Index);\n+   --  Uses the hash value of Node to compute its Hash_Table buckets array\n+   --  index.\n \n    procedure Adjust (HT : in out Hash_Table_Type);\n+   --  Used to implement controlled Adjust. It is assumed that HT has the value\n+   --  of the bit-wise copy that immediately follows controlled Finalize.\n+   --  Adjust first allocates a new buckets array for HT (having the same\n+   --  length as the source), and then allocates a copy of each node of source.\n \n    procedure Finalize (HT : in out Hash_Table_Type);\n+   --  Used to implement controlled Finalize. It first calls Clear to\n+   --  deallocate any remaining nodes, and then deallocates the buckets array.\n \n    generic\n       with function Find\n         (HT  : Hash_Table_Type;\n          Key : Node_Access) return Boolean;\n    function Generic_Equal\n      (L, R : Hash_Table_Type) return Boolean;\n+   --  Used to implement hashed container equality. For each node in hash table\n+   --  L, it calls Find to search for an equivalent item in hash table R. If\n+   --  Find returns False for any node then Generic_Equal terminates\n+   --  immediately and returns False. Otherwise if Find returns True for every\n+   --  node then Generic_Equal returns True.\n \n    procedure Clear (HT : in out Hash_Table_Type);\n+   --  Deallocates each node in hash table HT. (Note that it only deallocates\n+   --  the nodes, not the buckets array.)  Program_Error is raised if the hash\n+   --  table is busy.\n \n    procedure Move (Target, Source : in out Hash_Table_Type);\n+   --  Moves (not copies) the buckets array and nodes from Source to\n+   --  Target. Program_Error is raised if Source is busy. The Target is first\n+   --  cleared to deallocate its nodes (implying that Program_Error is also\n+   --  raised if Target is busy). Source is empty following the move.\n \n    function Capacity (HT : Hash_Table_Type) return Count_Type;\n+   --  Returns the length of the buckets array\n \n    procedure Reserve_Capacity\n      (HT : in out Hash_Table_Type;\n       N  : Count_Type);\n+   --  If N is greater than the current capacity, then it expands the buckets\n+   --  array to at least the value N. If N is less than the current capacity,\n+   --  then it contracts the buckets array. In either case existing nodes are\n+   --  rehashed onto the new buckets array, and the old buckets array is\n+   --  deallocated. Program_Error is raised if the hash table is busy.\n \n    procedure Delete_Node_Sans_Free\n      (HT : in out Hash_Table_Type;\n       X  : Node_Access);\n+   --  Removes node X from the hash table without deallocating the node\n \n    function First (HT : Hash_Table_Type) return Node_Access;\n+   --  Returns the head of the list in the first (lowest-index) non-empty\n+   --  bucket.\n \n    function Next\n      (HT   : Hash_Table_Type;\n       Node : Node_Access) return Node_Access;\n+   --  Returns the node that immediately follows Node. This corresponds to\n+   --  either the next node in the same bucket, or (if Node is the last node in\n+   --  its bucket) the head of the list in the first non-empty bucket that\n+   --  follows.\n \n    generic\n       with procedure Process (Node : Node_Access);\n    procedure Generic_Iteration (HT : Hash_Table_Type);\n+   --  Calls Process for each node in hash table HT\n \n    generic\n       use Ada.Streams;\n       with procedure Write\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access);\n    procedure Generic_Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       HT     : Hash_Table_Type);\n+   --  Used to implement the streaming attribute for hashed containers. It\n+   --  calls Write for each node to write its value into Stream.\n \n    generic\n       use Ada.Streams;\n-      with function New_Node (Stream : access Root_Stream_Type'Class)\n+      with function New_Node (Stream : not null access Root_Stream_Type'Class)\n          return Node_Access;\n    procedure Generic_Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       HT     : out Hash_Table_Type);\n+   --  Used to implement the streaming attribute for hashed containers. It\n+   --  first clears hash table HT, then populates the hash table by calling\n+   --  New_Node for each item in Stream.\n \n end Ada.Containers.Hash_Tables.Generic_Operations;"}, {"sha": "8b9c545422cf3dd44e623b8f80da0190db27d58b", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -72,15 +72,15 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    pragma Inline (Next);\n \n    function Read_Node\n-     (Stream : access Root_Stream_Type'Class) return Node_Access;\n+     (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n \n    procedure Set_Next (Node : Node_Access; Next : Node_Access);\n    pragma Inline (Set_Next);\n \n    function Vet (Position : Cursor) return Boolean;\n \n    procedure Write_Node\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Node   : Node_Access);\n \n    --------------------------\n@@ -772,15 +772,15 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    procedure Read_Nodes is new HT_Ops.Generic_Read (Read_Node);\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Map)\n    is\n    begin\n       Read_Nodes (Stream, Container.HT);\n    end Read;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor)\n    is\n    begin\n@@ -792,7 +792,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    ---------------\n \n    function Read_Node\n-     (Stream : access Root_Stream_Type'Class) return Node_Access\n+     (Stream : not null access Root_Stream_Type'Class) return Node_Access\n    is\n       Node : Node_Access := new Node_Type;\n \n@@ -1050,15 +1050,15 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    procedure Write_Nodes is new HT_Ops.Generic_Write (Write_Node);\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Map)\n    is\n    begin\n       Write_Nodes (Stream, Container.HT);\n    end Write;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor)\n    is\n    begin\n@@ -1070,7 +1070,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    ----------------\n \n    procedure Write_Node\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Node   : Node_Access)\n    is\n    begin"}, {"sha": "6d0e883fd1d18de44188d9f6231d39ee719f504c", "filename": "gcc/ada/a-cihama.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -198,13 +198,13 @@ private\n       end record;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor);\n \n    for Cursor'Write use Write;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor);\n \n    for Cursor'Read use Read;\n@@ -214,13 +214,13 @@ private\n       Node      => null);\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Map);\n \n    for Map'Write use Write;\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Map);\n \n    for Map'Read use Read;"}, {"sha": "12acb459eb5114307cd0435dc69b57ad96e740f8", "filename": "gcc/ada/a-cihase.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cihase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cihase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -84,7 +84,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n    function Next (Node : Node_Access) return Node_Access;\n    pragma Inline (Next);\n \n-   function Read_Node (Stream : access Root_Stream_Type'Class)\n+   function Read_Node (Stream : not null access Root_Stream_Type'Class)\n      return Node_Access;\n    pragma Inline (Read_Node);\n \n@@ -94,7 +94,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n    function Vet (Position : Cursor) return Boolean;\n \n    procedure Write_Node\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Node   : Node_Access);\n    pragma Inline (Write_Node);\n \n@@ -1094,15 +1094,15 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n    ----------\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set)\n    is\n    begin\n       Read_Nodes (Stream, Container.HT);\n    end Read;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor)\n    is\n    begin\n@@ -1114,7 +1114,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n    ---------------\n \n    function Read_Node\n-     (Stream : access Root_Stream_Type'Class) return Node_Access\n+     (Stream : not null access Root_Stream_Type'Class) return Node_Access\n    is\n       X : Element_Access := new Element_Type'(Element_Type'Input (Stream));\n \n@@ -1730,15 +1730,15 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n    -----------\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set)\n    is\n    begin\n       Write_Nodes (Stream, Container.HT);\n    end Write;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor)\n    is\n    begin\n@@ -1750,7 +1750,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n    ----------------\n \n    procedure Write_Node\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Node   : Node_Access)\n    is\n    begin"}, {"sha": "6dab3bfdcdbec230637ea6c20c5b0bd9c8e4ecf2", "filename": "gcc/ada/a-cihase.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -241,13 +241,13 @@ private\n       end record;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor);\n \n    for Cursor'Write use Write;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor);\n \n    for Cursor'Read use Read;\n@@ -257,13 +257,13 @@ private\n                    Node      => null);\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set);\n \n    for Set'Write use Write;\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set);\n \n    for Set'Read use Read;"}, {"sha": "794fc44771b3d5f03e4b09ca1db4b4a201ef9582", "filename": "gcc/ada/a-ciorma.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -1048,7 +1048,7 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n       Container : out Map)\n    is\n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access;\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n       pragma Inline (Read_Node);\n \n       procedure Read is\n@@ -1059,7 +1059,7 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n       ---------------\n \n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access\n       is\n          Node : Node_Access := new Node_Type;\n       begin\n@@ -1326,7 +1326,7 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n       Container : Map)\n    is\n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access);\n       pragma Inline (Write_Node);\n \n@@ -1338,7 +1338,7 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n       ----------------\n \n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access)\n       is\n       begin"}, {"sha": "f097fdc833b4c09b0a84639f15c27c01aa6c5ea3", "filename": "gcc/ada/a-ciormu.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -1508,11 +1508,11 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n    ----------\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set)\n    is\n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access;\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n       pragma Inline (Read_Node);\n \n       procedure Read is\n@@ -1523,7 +1523,7 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n       ---------------\n \n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access\n       is\n          Node : Node_Access := new Node_Type;\n       begin\n@@ -1542,7 +1542,7 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n    end Read;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor)\n    is\n    begin\n@@ -1823,11 +1823,11 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n    -----------\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set)\n    is\n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access);\n       pragma Inline (Write_Node);\n \n@@ -1839,7 +1839,7 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n       ----------------\n \n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access)\n       is\n       begin\n@@ -1853,7 +1853,7 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n    end Write;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor)\n    is\n    begin"}, {"sha": "518ab351072058187231cee10ee1cf3ee729b15a", "filename": "gcc/ada/a-ciormu.ads", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -277,25 +277,27 @@ private\n    end record;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor);\n \n    for Cursor'Write use Write;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor);\n \n    for Cursor'Read use Read;\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n-   procedure Write (Stream : access Root_Stream_Type'Class; Container : Set);\n+   procedure Write\n+     (Stream    : not null access Root_Stream_Type'Class;\n+      Container : Set);\n \n    for Set'Write use Write;\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set);\n \n    for Set'Read use Read;"}, {"sha": "51a882a93abe75f67299434ac6b9733ec83a47f5", "filename": "gcc/ada/a-ciorse.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -1382,11 +1382,11 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    ----------\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set)\n    is\n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access;\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n       pragma Inline (Read_Node);\n \n       procedure Read is\n@@ -1397,7 +1397,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n       ---------------\n \n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access\n       is\n          Node : Node_Access := new Node_Type;\n \n@@ -1418,7 +1418,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    end Read;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor)\n    is\n    begin\n@@ -1717,11 +1717,11 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    -----------\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set)\n    is\n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access);\n       pragma Inline (Write_Node);\n \n@@ -1733,7 +1733,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n       ----------------\n \n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access)\n       is\n       begin\n@@ -1747,7 +1747,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n    end Write;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor)\n    is\n    begin"}, {"sha": "895a31796cff36fe400ada4de2380503f885fd07", "filename": "gcc/ada/a-ciorse.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -281,27 +281,27 @@ private\n    end record;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor);\n \n    for Cursor'Write use Write;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor);\n \n    for Cursor'Read use Read;\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set);\n \n    for Set'Write use Write;\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set);\n \n    for Set'Read use Read;"}, {"sha": "b00e9770fc8587a4ec2287eaf0b3883658a91f91", "filename": "gcc/ada/a-cohama.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -65,7 +65,7 @@ package body Ada.Containers.Hashed_Maps is\n    pragma Inline (Next);\n \n    function Read_Node\n-     (Stream : access Root_Stream_Type'Class) return Node_Access;\n+     (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n    pragma Inline (Read_Node);\n \n    procedure Set_Next (Node : Node_Access; Next : Node_Access);\n@@ -74,7 +74,7 @@ package body Ada.Containers.Hashed_Maps is\n    function Vet (Position : Cursor) return Boolean;\n \n    procedure Write_Node\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Node   : Node_Access);\n    pragma Inline (Write_Node);\n \n@@ -703,15 +703,15 @@ package body Ada.Containers.Hashed_Maps is\n    ----------\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Map)\n    is\n    begin\n       Read_Nodes (Stream, Container.HT);\n    end Read;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor)\n    is\n    begin\n@@ -723,7 +723,7 @@ package body Ada.Containers.Hashed_Maps is\n    ---------------\n \n    function Read_Node\n-     (Stream : access Root_Stream_Type'Class) return Node_Access\n+     (Stream : not null access Root_Stream_Type'Class) return Node_Access\n    is\n       Node : Node_Access := new Node_Type;\n \n@@ -924,15 +924,15 @@ package body Ada.Containers.Hashed_Maps is\n    -----------\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Map)\n    is\n    begin\n       Write_Nodes (Stream, Container.HT);\n    end Write;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor)\n    is\n    begin\n@@ -944,7 +944,7 @@ package body Ada.Containers.Hashed_Maps is\n    ----------------\n \n    procedure Write_Node\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Node   : Node_Access)\n    is\n    begin"}, {"sha": "a0bbad4e955b9aedcc4738392c748180a537882c", "filename": "gcc/ada/a-cohama.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -192,13 +192,13 @@ private\n    use Ada.Streams;\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Map);\n \n    for Map'Write use Write;\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Map);\n \n    for Map'Read use Read;\n@@ -215,13 +215,13 @@ private\n       end record;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor);\n \n    for Cursor'Read use Read;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor);\n \n    for Cursor'Write use Write;"}, {"sha": "2328e3f33657304f2d0a938da57d5e025beaf1ae", "filename": "gcc/ada/a-cohase.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -85,7 +85,7 @@ package body Ada.Containers.Hashed_Sets is\n    function Next (Node : Node_Access) return Node_Access;\n    pragma Inline (Next);\n \n-   function Read_Node (Stream : access Root_Stream_Type'Class)\n+   function Read_Node (Stream : not null access Root_Stream_Type'Class)\n      return Node_Access;\n    pragma Inline (Read_Node);\n \n@@ -95,7 +95,7 @@ package body Ada.Containers.Hashed_Sets is\n    function Vet (Position : Cursor) return Boolean;\n \n    procedure Write_Node\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Node   : Node_Access);\n    pragma Inline (Write_Node);\n \n@@ -1009,15 +1009,15 @@ package body Ada.Containers.Hashed_Sets is\n    ----------\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n-      Container :    out Set)\n+     (Stream    : not null access Root_Stream_Type'Class;\n+      Container : out Set)\n    is\n    begin\n       Read_Nodes (Stream, Container.HT);\n    end Read;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor)\n    is\n    begin\n@@ -1028,7 +1028,7 @@ package body Ada.Containers.Hashed_Sets is\n    -- Read_Node --\n    ---------------\n \n-   function Read_Node (Stream : access Root_Stream_Type'Class)\n+   function Read_Node (Stream : not null access Root_Stream_Type'Class)\n      return Node_Access\n    is\n       Node : Node_Access := new Node_Type;\n@@ -1561,15 +1561,15 @@ package body Ada.Containers.Hashed_Sets is\n    -----------\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set)\n    is\n    begin\n       Write_Nodes (Stream, Container.HT);\n    end Write;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor)\n    is\n    begin\n@@ -1581,7 +1581,7 @@ package body Ada.Containers.Hashed_Sets is\n    ----------------\n \n    procedure Write_Node\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Node   : Node_Access)\n    is\n    begin"}, {"sha": "5c32f51b53e5771a45004c7826c4cac47860281e", "filename": "gcc/ada/a-cohase.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -238,27 +238,27 @@ private\n       end record;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor);\n \n    for Cursor'Write use Write;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor);\n \n    for Cursor'Read use Read;\n \n    No_Element : constant Cursor := (Container => null, Node => null);\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set);\n \n    for Set'Write use Write;\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set);\n \n    for Set'Read use Read;"}, {"sha": "a453d6bacad1f09f3d76b5e92d6ccf13da4bdb2b", "filename": "gcc/ada/a-contai.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-contai.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-contai.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-contai.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "f6823d4f7b223e2c115f4999771ecc2f64145102", "filename": "gcc/ada/a-coorma.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -962,7 +962,7 @@ package body Ada.Containers.Ordered_Maps is\n       Container : out Map)\n    is\n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access;\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n       pragma Inline (Read_Node);\n \n       procedure Read is\n@@ -973,7 +973,7 @@ package body Ada.Containers.Ordered_Maps is\n       ---------------\n \n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access\n       is\n          Node : Node_Access := new Node_Type;\n       begin\n@@ -1206,7 +1206,7 @@ package body Ada.Containers.Ordered_Maps is\n       Container : Map)\n    is\n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access);\n       pragma Inline (Write_Node);\n \n@@ -1218,7 +1218,7 @@ package body Ada.Containers.Ordered_Maps is\n       ----------------\n \n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access)\n       is\n       begin"}, {"sha": "8000c9911108c739b8c4ce458d322ec4d195ded9", "filename": "gcc/ada/a-coormu.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -1425,11 +1425,11 @@ package body Ada.Containers.Ordered_Multisets is\n    ----------\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set)\n    is\n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access;\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n       pragma Inline (Read_Node);\n \n       procedure Read is\n@@ -1440,7 +1440,7 @@ package body Ada.Containers.Ordered_Multisets is\n       ---------------\n \n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access\n       is\n          Node : Node_Access := new Node_Type;\n       begin\n@@ -1459,7 +1459,7 @@ package body Ada.Containers.Ordered_Multisets is\n    end Read;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor)\n    is\n    begin\n@@ -1729,11 +1729,11 @@ package body Ada.Containers.Ordered_Multisets is\n    -----------\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set)\n    is\n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access);\n       pragma Inline (Write_Node);\n \n@@ -1745,7 +1745,7 @@ package body Ada.Containers.Ordered_Multisets is\n       ----------------\n \n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access)\n       is\n       begin\n@@ -1759,7 +1759,7 @@ package body Ada.Containers.Ordered_Multisets is\n    end Write;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor)\n    is\n    begin"}, {"sha": "df300130e76d4531885901e8fe9ede08ad082227", "filename": "gcc/ada/a-coormu.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -282,27 +282,27 @@ private\n    end record;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor);\n \n    for Cursor'Write use Write;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor);\n \n    for Cursor'Read use Read;\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set);\n \n    for Set'Write use Write;\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set);\n \n    for Set'Read use Read;"}, {"sha": "3cd02332c3c52dc856f552472d9bf654f1e8d360", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -1297,11 +1297,11 @@ package body Ada.Containers.Ordered_Sets is\n    ----------\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set)\n    is\n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access;\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n       pragma Inline (Read_Node);\n \n       procedure Read is\n@@ -1312,7 +1312,7 @@ package body Ada.Containers.Ordered_Sets is\n       ---------------\n \n       function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access\n       is\n          Node : Node_Access := new Node_Type;\n \n@@ -1333,7 +1333,7 @@ package body Ada.Containers.Ordered_Sets is\n    end Read;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor)\n    is\n    begin\n@@ -1618,11 +1618,11 @@ package body Ada.Containers.Ordered_Sets is\n    -----------\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set)\n    is\n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access);\n       pragma Inline (Write_Node);\n \n@@ -1634,7 +1634,7 @@ package body Ada.Containers.Ordered_Sets is\n       ----------------\n \n       procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access)\n       is\n       begin\n@@ -1648,7 +1648,7 @@ package body Ada.Containers.Ordered_Sets is\n    end Write;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor)\n    is\n    begin"}, {"sha": "47208653ef4d2467428a00421791b45cd491e9bc", "filename": "gcc/ada/a-coorse.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -270,27 +270,27 @@ private\n    end record;\n \n    procedure Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : Cursor);\n \n    for Cursor'Write use Write;\n \n    procedure Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Item   : out Cursor);\n \n    for Cursor'Read use Read;\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n    procedure Write\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : Set);\n \n    for Set'Write use Write;\n \n    procedure Read\n-     (Stream    : access Root_Stream_Type'Class;\n+     (Stream    : not null access Root_Stream_Type'Class;\n       Container : out Set);\n \n    for Set'Read use Read;"}, {"sha": "0f832d125e6a7f3a39e61bb4c034a96c62ebd75d", "filename": "gcc/ada/a-coprnu.ads", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coprnu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coprnu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coprnu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,13 +6,34 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n--- GNAT.  In accordance with the copyright of that document, you can freely --\n--- copy and modify this specification,  provided that if you redistribute a --\n--- modified version,  any changes that you have made are clearly indicated. --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- This unit was originally developed by Matthew J Heaney.                  --\n ------------------------------------------------------------------------------\n \n+--  This package declares the prime numbers array used to implement hashed\n+--  containers. Bucket arrays are always allocated with a prime-number\n+--  length (computed using To_Prime below), as this produces better scatter\n+--  when hash values are folded.\n+\n package Ada.Containers.Prime_Numbers is\n    pragma Pure;\n \n@@ -27,5 +48,6 @@ package Ada.Containers.Prime_Numbers is\n       1610612741, 3221225473, 4294967291);\n \n    function To_Prime (Length : Count_Type) return Hash_Type;\n+   --  Returns the smallest value in Primes not less than Length\n \n end Ada.Containers.Prime_Numbers;"}, {"sha": "abba889ecdfa3fb4f1d185ee17791b1d9b0c8f01", "filename": "gcc/ada/a-coteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-coteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "4afce91a4f31f0904d26ceac65cb1b5c7f312f7a", "filename": "gcc/ada/a-crbtgo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-crbtgo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-crbtgo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgo.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -698,7 +698,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n    ------------------\n \n    procedure Generic_Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Tree   : in out Tree_Type)\n    is\n       N : Count_Type'Base;\n@@ -776,7 +776,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n    -------------------\n \n    procedure Generic_Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Tree   : Tree_Type)\n    is\n       procedure Process (Node : Node_Access);"}, {"sha": "a55e65f8e8951eda4df8e03f29032a4a978add76", "filename": "gcc/ada/a-crbtgo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-crbtgo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-crbtgo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgo.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -137,10 +137,10 @@ package Ada.Containers.Red_Black_Trees.Generic_Operations is\n \n    generic\n       with procedure Write_Node\n-        (Stream : access Root_Stream_Type'Class;\n+        (Stream : not null access Root_Stream_Type'Class;\n          Node   : Node_Access);\n    procedure Generic_Write\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Tree   : Tree_Type);\n    --  Used to implement stream attribute T'Write. Generic_Write\n    --  first writes the number of nodes into Stream, then calls\n@@ -149,9 +149,9 @@ package Ada.Containers.Red_Black_Trees.Generic_Operations is\n    generic\n       with procedure Clear (Tree : in out Tree_Type);\n       with function Read_Node\n-        (Stream : access Root_Stream_Type'Class) return Node_Access;\n+        (Stream : not null access Root_Stream_Type'Class) return Node_Access;\n    procedure Generic_Read\n-     (Stream : access Root_Stream_Type'Class;\n+     (Stream : not null access Root_Stream_Type'Class;\n       Tree   : in out Tree_Type);\n    --  Used to implement stream attribute T'Read. Generic_Read\n    --  first clears Tree. It then reads the number of nodes out of"}, {"sha": "b350ae0eb619d7817dc0764db426f370bf1738fe", "filename": "gcc/ada/a-dispat.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-dispat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-dispat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dispat.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,9 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n---                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "03e02d635477794e403171e14946143e34c04b7d", "filename": "gcc/ada/a-dynpri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-dynpri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-dynpri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dynpri.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "a2415603e4ebdd71abd540e5df02bd10797a064d", "filename": "gcc/ada/a-envvar.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-envvar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-envvar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-envvar.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,13 +6,11 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2005-2006, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --\n----                                                                          --\n+--                                                                          --\n ------------------------------------------------------------------------------\n \n package Ada.Environment_Variables is"}, {"sha": "4b6f904c2e774f520a151abc9a9c2888782ccd5b", "filename": "gcc/ada/a-exexpr-gcc.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-exexpr-gcc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-exexpr-gcc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr-gcc.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -179,7 +179,7 @@ package body Exception_Propagation is\n      (UW_Version   : Integer;\n       UW_Phases    : Unwind_Action;\n       UW_Eclass    : Exception_Class;\n-      UW_Exception : access GNAT_GCC_Exception;\n+      UW_Exception : not null access GNAT_GCC_Exception;\n       UW_Context   : System.Address;\n       UW_Argument  : System.Address) return Unwind_Reason_Code;\n    --  Hook called at each step of the forced unwinding we perform to\n@@ -191,11 +191,11 @@ package body Exception_Propagation is\n    --  __gnat stubs for these.\n \n    procedure Unwind_RaiseException\n-     (UW_Exception : access GNAT_GCC_Exception);\n+     (UW_Exception : not null access GNAT_GCC_Exception);\n    pragma Import (C, Unwind_RaiseException, \"__gnat_Unwind_RaiseException\");\n \n    procedure Unwind_ForcedUnwind\n-     (UW_Exception : access GNAT_GCC_Exception;\n+     (UW_Exception : not null access GNAT_GCC_Exception;\n       UW_Handler   : System.Address;\n       UW_Argument  : System.Address);\n    pragma Import (C, Unwind_ForcedUnwind, \"__gnat_Unwind_ForcedUnwind\");\n@@ -353,7 +353,7 @@ package body Exception_Propagation is\n      (UW_Version   : Integer;\n       UW_Phases    : Unwind_Action;\n       UW_Eclass    : Exception_Class;\n-      UW_Exception : access GNAT_GCC_Exception;\n+      UW_Exception : not null access GNAT_GCC_Exception;\n       UW_Context   : System.Address;\n       UW_Argument  : System.Address) return Unwind_Reason_Code\n    is"}, {"sha": "caf4e9b7534e1fcb837697d71b094f9e4dfff9f5", "filename": "gcc/ada/a-flteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-flteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-flteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-flteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "e87e08a9ca3d8557f9fb6b740abff5b2c5e4d507", "filename": "gcc/ada/a-fwteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-fwteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-fwteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-fwteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "b2b3867a5bd4aff1288427d3dc008dcf6de34568", "filename": "gcc/ada/a-inteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-inteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-inteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-inteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "e055d6aa17e9ad905958ef75fdf9f21fd2458a7b", "filename": "gcc/ada/a-intnam.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-intnam.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-intnam.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "43239ddb066f9146fd2fa819bff1878216c6c485", "filename": "gcc/ada/a-ioexce.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ioexce.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ioexce.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ioexce.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "dc53046eab7f6cb9c389323a933b3326c01dd9e0", "filename": "gcc/ada/a-iwteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-iwteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-iwteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-iwteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "f9da97c8da09bf2a149669a3f844f17ad4372ee3", "filename": "gcc/ada/a-lcteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lcteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lcteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-lcteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "1477047e3ad36addcf7b0b160bccadf70e26062e", "filename": "gcc/ada/a-lfteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lfteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lfteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-lfteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "86361414e46ffd680f8dccc3e7d41759bf5223a5", "filename": "gcc/ada/a-lfwtio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lfwtio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lfwtio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-lfwtio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "f1719b148a721b0457b2b9d4979c6a8f81e8bd3a", "filename": "gcc/ada/a-lfztio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lfztio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lfztio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-lfztio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "535f6b0d57bcd3c8ca71d9fe2b4a887b7fe56bcd", "filename": "gcc/ada/a-liteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-liteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-liteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-liteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "56fad9a67a8840151ee9a1afcefd645d2a17f978", "filename": "gcc/ada/a-liwtio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-liwtio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-liwtio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-liwtio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "100ef0a6a9efc8ae1b045654116c8c01a560859b", "filename": "gcc/ada/a-liztio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-liztio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-liztio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-liztio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "3b53bf7c76d59cd1409535833dcfe2ed9c777b58", "filename": "gcc/ada/a-llctio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llctio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llctio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-llctio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "589232d02400b4a2d082fce57c68693025319dec", "filename": "gcc/ada/a-llftio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llftio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llftio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-llftio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "b26aecdb94c48ef197fed70859dcd4a6565477d1", "filename": "gcc/ada/a-llfwti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llfwti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llfwti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-llfwti.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "fa92ef40a6520c56d2e618c5ce2dadc73ecb694a", "filename": "gcc/ada/a-llfzti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llfzti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llfzti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-llfzti.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "e1537276d1a6b2c7ea109418167e864f8c216f90", "filename": "gcc/ada/a-llitio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llitio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llitio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-llitio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "13a0f21436bdee8d58f9c98b3630819cb9630ed8", "filename": "gcc/ada/a-lliwti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lliwti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-lliwti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-lliwti.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "09d3219f35075f05e9d40998fd9c04ef77130bc1", "filename": "gcc/ada/a-llizti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llizti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-llizti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-llizti.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "e81730f08cdc9a92f3ee561e0ce05d5e381254a2", "filename": "gcc/ada/a-ncelfu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ncelfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ncelfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ncelfu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "576c84ab267f04232898218d33e98f79f8baade4", "filename": "gcc/ada/a-ngcefu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ngcefu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ngcefu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcefu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "d84828a7ccb6b4ecec8938c2a1844b1ba7bc0bc5", "filename": "gcc/ada/a-ngelfu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ngelfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ngelfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "9e985dfca6ab8cfa5b07ff38872aff13b1bf7709", "filename": "gcc/ada/a-nlcefu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nlcefu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nlcefu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nlcefu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "6eb4fc3b9922e9fb48fdc8f594434699244a37a8", "filename": "gcc/ada/a-nlcoty.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nlcoty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nlcoty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nlcoty.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "10b33e9cb3c7a9dc8ddb033a1e2dfa702db05053", "filename": "gcc/ada/a-nlelfu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nlelfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nlelfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nlelfu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "2867e1dbb0371b771aed0dd1a3ff0e2a80250843", "filename": "gcc/ada/a-nllcef.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nllcef.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nllcef.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nllcef.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "a6081c28b2123a1f51352d6935f35161fd20d656", "filename": "gcc/ada/a-nllcty.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nllcty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nllcty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nllcty.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "7089fc3efb0daef2721039cc7b324c907f359bf5", "filename": "gcc/ada/a-nllefu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nllefu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nllefu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nllefu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "ac89d051c87078081b44a230b793290814c3038d", "filename": "gcc/ada/a-nscefu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nscefu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nscefu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nscefu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "e58b0b56e581e03653572460ec563f49cb0cd97d", "filename": "gcc/ada/a-nscoty.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nscoty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nscoty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nscoty.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "10b04acdeb9432ef838acafa3cdc0ac2c505f5c4", "filename": "gcc/ada/a-nselfu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nselfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nselfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nselfu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "3b04a2712d039956cbcf493b7ed43f30806a7cf3", "filename": "gcc/ada/a-nucoty.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nucoty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nucoty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nucoty.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "149939babea13b193dd7807aee0781f25fd5c255", "filename": "gcc/ada/a-nuelfu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nuelfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-nuelfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nuelfu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "998e24bc28f55922d843d0e18498161045ea6099", "filename": "gcc/ada/a-numeri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-numeri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-numeri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numeri.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "c39dc6e3fce99706b9ef0f9b66be1a0c78bf5a46", "filename": "gcc/ada/a-rbtgso.ads", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-rbtgso.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-rbtgso.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgso.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -59,25 +59,51 @@ package Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n    pragma Pure;\n \n    procedure Union (Target : in out Tree_Type; Source : Tree_Type);\n+   --  Attempts to insert each element of Source in Target. If Target is\n+   --  busy then Program_Error is raised. We say \"attempts\" here because\n+   --  if these are unique-element sets, then the insertion should fail\n+   --  (not insert a new item) when the insertion item from Source is\n+   --  equivalent to an item already in Target. If these are multisets\n+   --  then of course the attempt should always succeed.\n \n    function Union (Left, Right : Tree_Type) return Tree_Type;\n+   --  Makes a copy of Left, and attempts to insert each element of\n+   --  Right into the copy, then returns the copy.\n \n    procedure Intersection (Target : in out Tree_Type; Source : Tree_Type);\n+   --  Removes elements from Target that are not equivalent to items in\n+   --  Source. If Target is busy then Program_Error is raised.\n \n    function Intersection (Left, Right : Tree_Type) return Tree_Type;\n+   --  Returns a set comprising all the items in Left equivalent to items in\n+   --  Right.\n \n    procedure Difference (Target : in out Tree_Type; Source : Tree_Type);\n+   --  Removes elements from Target that are equivalent to items in Source. If\n+   --  Target is busy then Program_Error is raised.\n \n    function Difference (Left, Right : Tree_Type) return Tree_Type;\n+   --  Returns a set comprising all the items in Left not equivalent to items\n+   --  in Right.\n \n    procedure Symmetric_Difference\n      (Target : in out Tree_Type;\n       Source : Tree_Type);\n+   --  Removes from Target elements that are equivalent to items in Source, and\n+   --  inserts into Target items from Source not equivalent elements in\n+   --  Target. If Target is busy then Program_Error is raised.\n \n    function Symmetric_Difference (Left, Right : Tree_Type) return Tree_Type;\n+   --  Returns a set comprising the union of the elements in Left not\n+   --  equivalent to items in Right, and the elements in Right not equivalent\n+   --  to items in Left.\n \n    function Is_Subset (Subset : Tree_Type; Of_Set : Tree_Type) return Boolean;\n+   --  Returns False if Subset contains at least one element not equivalent to\n+   --  any item in Of_Set; returns True otherwise.\n \n    function Overlap (Left, Right : Tree_Type) return Boolean;\n+   --  Returns True if at least one element of Left is equivalent to an item in\n+   --  Right; returns False otherwise.\n \n end Ada.Containers.Red_Black_Trees.Generic_Set_Operations;"}, {"sha": "d9ceb2f9c2749a854ec63a0275278d6da5fd7a49", "filename": "gcc/ada/a-scteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-scteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-scteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-scteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "38f2ef04f57fa84457c671b1e522ea1da39546ab", "filename": "gcc/ada/a-secain.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-secain.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-secain.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-secain.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "a1f18cd8555e8b5fd6aace86ba358227f877e26f", "filename": "gcc/ada/a-sfteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-sfteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-sfteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sfteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "3ac134e939e275b3243a1bf878e3386648f34fea", "filename": "gcc/ada/a-sfwtio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-sfwtio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-sfwtio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sfwtio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "bc34e5d5a828a607dd7ee4cbcf87f48deba46c16", "filename": "gcc/ada/a-sfztio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-sfztio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-sfztio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sfztio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "c7263b602fed353a42667631fd911bfb167f0d35", "filename": "gcc/ada/a-shcain.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-shcain.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-shcain.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-shcain.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "de45c22cce1467b613453770072be0a89eeff8e2", "filename": "gcc/ada/a-siteio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-siteio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-siteio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-siteio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "aa1a2d4562b6c9cf3bf642a3b3ab84fdd2382a09", "filename": "gcc/ada/a-siwtio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-siwtio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-siwtio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-siwtio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "3d6f5cdf17c2d31e255c528b55da2193ea61b152", "filename": "gcc/ada/a-siztio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-siztio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-siztio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-siztio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "2bb2d1ad4c7a62e6c358a4115252725dad2d2b6f", "filename": "gcc/ada/a-slcain.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-slcain.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-slcain.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-slcain.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "98b0540889e420aeed488a4b691002f61442fcfc", "filename": "gcc/ada/a-ssitio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ssitio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ssitio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ssitio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "5f6934ba60def84668d2f678e4fcf64fdd67682e", "filename": "gcc/ada/a-ssiwti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ssiwti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ssiwti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ssiwti.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "13bfda846667ba8483c1fd6cd5559aa436a3562e", "filename": "gcc/ada/a-ssizti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ssizti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ssizti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ssizti.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "876af2a5df3f85371596e2ccd68065bdfefece3f", "filename": "gcc/ada/a-stboha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stboha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stboha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stboha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "aba42e7c678fff97e7ac344675a2b31ec86be559", "filename": "gcc/ada/a-stfiha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stfiha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stfiha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stfiha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "db0a70bbe4fdece473ff3b29f30439a3e9a2fa32", "filename": "gcc/ada/a-storio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-storio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-storio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-storio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "875219a1c9bdfcb62dff480c727cebc131cac4ee", "filename": "gcc/ada/a-strfix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-strfix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-strfix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strfix.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "7d33bf7d019cbbf2066a4d26e43762cff703b2ed", "filename": "gcc/ada/a-strhas.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-strhas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-strhas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strhas.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "51ca10247215efd49858e020fb2de27685858d46", "filename": "gcc/ada/a-string.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-string.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-string.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-string.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "d1084d64b5bf4a5df39a205551deccbff7f1861c", "filename": "gcc/ada/a-ststio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ststio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ststio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -76,7 +76,7 @@ package body Ada.Streams.Stream_IO is\n \n    --  No special processing required for closing Stream_IO file\n \n-   procedure AFCB_Close (File : access Stream_AFCB) is\n+   procedure AFCB_Close (File : not null access Stream_AFCB) is\n       pragma Warnings (Off, File);\n    begin\n       null;\n@@ -86,7 +86,7 @@ package body Ada.Streams.Stream_IO is\n    -- AFCB_Free --\n    ---------------\n \n-   procedure AFCB_Free (File : access Stream_AFCB) is\n+   procedure AFCB_Free (File : not null access Stream_AFCB) is\n       type FCB_Ptr is access all Stream_AFCB;\n       FT : FCB_Ptr := FCB_Ptr (File);\n "}, {"sha": "edcec9a139a89440fab63dd3a7a2be091de335ac", "filename": "gcc/ada/a-ststio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ststio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ststio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -176,8 +176,8 @@ private\n \n    function AFCB_Allocate (Control_Block : Stream_AFCB) return FCB.AFCB_Ptr;\n \n-   procedure AFCB_Close (File : access Stream_AFCB);\n-   procedure AFCB_Free  (File : access Stream_AFCB);\n+   procedure AFCB_Close (File : not null access Stream_AFCB);\n+   procedure AFCB_Free  (File : not null access Stream_AFCB);\n \n    procedure Read\n      (File : in out Stream_AFCB;"}, {"sha": "1e45bdb5abca6c5e298a056eccb7157d3efc1763", "filename": "gcc/ada/a-stunha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stunha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stunha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stunha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "5d9ea3f584d3689ae16a46fe79ecdd334f0db1fc", "filename": "gcc/ada/a-stwifi.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stwifi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stwifi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwifi.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "f8f0b52fb94f8e1b2e6ae8cc59d376971411d660", "filename": "gcc/ada/a-stwiha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stwiha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stwiha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "4c3f80b4bdbdacfb0a3b2905ea9b149d07dcfdd5", "filename": "gcc/ada/a-stzfix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stzfix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stzfix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzfix.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "dea0ff14670a99f85303278456a04d51bfbce26a", "filename": "gcc/ada/a-stzhas.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stzhas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-stzhas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzhas.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "6a4fba76ffe02d64c52bbc1f0ad16d596618a595", "filename": "gcc/ada/a-swbwha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-swbwha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-swbwha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-swbwha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "c42d54cd56a8885122f8c8ff2197cb9524cb7341", "filename": "gcc/ada/a-swfwha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-swfwha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-swfwha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-swfwha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "69cf76227a4dc9939f3cbd727db1c2303e321ee6", "filename": "gcc/ada/a-swuwha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-swuwha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-swuwha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-swuwha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "42c6452d4f13b4d7d2c0bd4e2c2b88e8f8a44fed", "filename": "gcc/ada/a-szbzha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-szbzha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-szbzha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-szbzha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "fbc6e87908b43762ca60e9202123dfe564d6d05f", "filename": "gcc/ada/a-szfzha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-szfzha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-szfzha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-szfzha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "94bed28eb90f5999cc2dbe732adbe383bdc31109", "filename": "gcc/ada/a-szuzha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-szuzha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-szuzha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-szuzha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "aa566dac23032ebab02aae88cf9d4e72f57c6bc0", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -69,7 +69,7 @@ package body Ada.Text_IO is\n    -- AFCB_Close --\n    ----------------\n \n-   procedure AFCB_Close (File : access Text_AFCB) is\n+   procedure AFCB_Close (File : not null access Text_AFCB) is\n    begin\n       --  If the file being closed is one of the current files, then close\n       --  the corresponding current file. It is not clear that this action\n@@ -91,7 +91,7 @@ package body Ada.Text_IO is\n    -- AFCB_Free --\n    ---------------\n \n-   procedure AFCB_Free (File : access Text_AFCB) is\n+   procedure AFCB_Free (File : not null access Text_AFCB) is\n       type FCB_Ptr is access all Text_AFCB;\n       FT : FCB_Ptr := FCB_Ptr (File);\n "}, {"sha": "dec8ee7f891c244f9590d23e282600a8cf080068", "filename": "gcc/ada/a-textio.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-textio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-textio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -370,8 +370,8 @@ private\n \n    function AFCB_Allocate (Control_Block : Text_AFCB) return FCB.AFCB_Ptr;\n \n-   procedure AFCB_Close (File : access Text_AFCB);\n-   procedure AFCB_Free  (File : access Text_AFCB);\n+   procedure AFCB_Close (File : not null access Text_AFCB);\n+   procedure AFCB_Free  (File : not null access Text_AFCB);\n \n    procedure Read\n      (File : in out Text_AFCB;"}, {"sha": "d1150fd5991a52d0f2182fb34874909f1a8548aa", "filename": "gcc/ada/a-tgdico.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tgdico.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tgdico.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tgdico.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --\n@@ -19,10 +19,12 @@ pragma Warnings (Off);\n generic\n    type T (<>) is abstract tagged limited private;\n    type Parameters (<>) is limited private;\n-   with function Constructor (Params : access Parameters) return T is abstract;\n+   with function Constructor (Params : not null access Parameters) return T\n+     is abstract;\n \n function Ada.Tags.Generic_Dispatching_Constructor\n-  (The_Tag : Tag; Params : access Parameters) return T'Class;\n+  (The_Tag : Tag;\n+   Params  : not null access Parameters) return T'Class;\n pragma Preelaborate_05 (Generic_Dispatching_Constructor);\n pragma Import (Intrinsic, Generic_Dispatching_Constructor);\n --  Note: the reason that we use Preelaborate_05 here is so that this will"}, {"sha": "1824c1d2c50e7e51b2cab510e8eba490805e9eca", "filename": "gcc/ada/a-tiboio.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tiboio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tiboio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiboio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,9 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "06a41ee791dfa483ab4e4f361c10847bd5d66cb7", "filename": "gcc/ada/a-tideau.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tideau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tideau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideau.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -103,7 +103,7 @@ package body Ada.Text_IO.Decimal_Aux is\n \n    function Gets_Dec\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Integer\n    is\n       Pos  : aliased Integer;\n@@ -127,7 +127,7 @@ package body Ada.Text_IO.Decimal_Aux is\n \n    function Gets_LLD\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Long_Long_Integer\n    is\n       Pos  : aliased Integer;"}, {"sha": "7d513aee55aebfc2a54800ea4467b7e2d741b659", "filename": "gcc/ada/a-tideau.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tideau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tideau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideau.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -69,12 +69,12 @@ private package Ada.Text_IO.Decimal_Aux is\n \n    function Gets_Dec\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Integer;\n \n    function Gets_LLD\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Long_Long_Integer;\n \n    procedure Puts_Dec"}, {"sha": "93cf47aad7be16242a011490ae2c88441f8aac92", "filename": "gcc/ada/a-titest.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-titest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-titest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-titest.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "ea5caecf599a064540f9985934ca6571788379e0", "filename": "gcc/ada/a-tiunio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tiunio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-tiunio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiunio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "ffa84d9fad2b1436e59809aeebabc27f7f828055", "filename": "gcc/ada/a-unccon.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-unccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-unccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-unccon.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "d566b4b343fff701203ceef670329a3f9d39c372", "filename": "gcc/ada/a-uncdea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-uncdea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-uncdea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-uncdea.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "a5dde73f43c25901459d140ac6bf68f0a3bee1ee", "filename": "gcc/ada/a-widcha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-widcha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-widcha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-widcha.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "07e3fd268710111e32a790623fc7fc1f9d869bcd", "filename": "gcc/ada/a-witeio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -96,7 +96,7 @@ package body Ada.Wide_Text_IO is\n    -- AFCB_Close --\n    ----------------\n \n-   procedure AFCB_Close (File : access Wide_Text_AFCB) is\n+   procedure AFCB_Close (File : not null access Wide_Text_AFCB) is\n    begin\n       --  If the file being closed is one of the current files, then close\n       --  the corresponding current file. It is not clear that this action\n@@ -118,7 +118,7 @@ package body Ada.Wide_Text_IO is\n    -- AFCB_Free --\n    ---------------\n \n-   procedure AFCB_Free (File : access Wide_Text_AFCB) is\n+   procedure AFCB_Free (File : not null access Wide_Text_AFCB) is\n       type FCB_Ptr is access all Wide_Text_AFCB;\n       FT : FCB_Ptr := FCB_Ptr (File);\n "}, {"sha": "70636a711d5dd0e572a363e1684bfed2cea00ec3", "filename": "gcc/ada/a-witeio.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-witeio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-witeio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -393,8 +393,8 @@ private\n \n    function AFCB_Allocate (Control_Block : Wide_Text_AFCB) return FCB.AFCB_Ptr;\n \n-   procedure AFCB_Close (File : access Wide_Text_AFCB);\n-   procedure AFCB_Free  (File : access Wide_Text_AFCB);\n+   procedure AFCB_Close (File : not null access Wide_Text_AFCB);\n+   procedure AFCB_Free  (File : not null access Wide_Text_AFCB);\n \n    procedure Read\n      (File : in out Wide_Text_AFCB;"}, {"sha": "31fab2b6f229c7f6a6d59c38e6956d3deda0297d", "filename": "gcc/ada/a-wtcoio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wtcoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wtcoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtcoio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "fd6cc2eea42cc152dff4ef3549f4dcab4590e5e9", "filename": "gcc/ada/a-wtdeau.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wtdeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wtdeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeau.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -103,7 +103,7 @@ package body Ada.Wide_Text_IO.Decimal_Aux is\n \n    function Gets_Dec\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Integer\n    is\n       Pos  : aliased Integer;\n@@ -128,7 +128,7 @@ package body Ada.Wide_Text_IO.Decimal_Aux is\n \n    function Gets_LLD\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Long_Long_Integer\n    is\n       Pos  : aliased Integer;"}, {"sha": "b469a3574e361e66e90eac8aea00a61d251cf5a5", "filename": "gcc/ada/a-wtdeau.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wtdeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wtdeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeau.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -54,12 +54,12 @@ private package Ada.Wide_Text_IO.Decimal_Aux is\n \n    function Gets_Dec\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Integer;\n \n    function Gets_LLD\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Long_Long_Integer;\n \n    procedure Put_Dec"}, {"sha": "b078ee379bb177a1593708bfa14c504939a1b028", "filename": "gcc/ada/a-wtinio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wtinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wtinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtinio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "7c180ff182f48c0441c9de5acda3a1602cc0fb5b", "filename": "gcc/ada/a-wttest.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wttest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wttest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wttest.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "2b8dd2a16a6f614d38a75a87a050b63cc77b868d", "filename": "gcc/ada/a-wwboio.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wwboio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wwboio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wwboio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,9 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "de044c580e0a8e055bfde9f58f2caa2345ac8e5e", "filename": "gcc/ada/a-wwunio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wwunio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-wwunio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wwunio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "d8d5f9f50bb6d5160d021cf966f0958646f53de7", "filename": "gcc/ada/a-zchara.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-zchara.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-zchara.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zchara.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "866fd879c642f4dc10114f2a813a2a6bd4b490c7", "filename": "gcc/ada/a-ztcoio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztcoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztcoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztcoio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "d36d34fb8bd6120c01ef872b65a4eeb6bfbaf6d4", "filename": "gcc/ada/a-ztdeau.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztdeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztdeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztdeau.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -103,7 +103,7 @@ package body Ada.Wide_Wide_Text_IO.Decimal_Aux is\n \n    function Gets_Dec\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Integer\n    is\n       Pos  : aliased Integer;\n@@ -128,7 +128,7 @@ package body Ada.Wide_Wide_Text_IO.Decimal_Aux is\n \n    function Gets_LLD\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Long_Long_Integer\n    is\n       Pos  : aliased Integer;"}, {"sha": "e61bc93ffc5684541e6d40e93fbaab76d340d9eb", "filename": "gcc/ada/a-ztdeau.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztdeau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztdeau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztdeau.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,12 +54,12 @@ private package Ada.Wide_Wide_Text_IO.Decimal_Aux is\n \n    function Gets_Dec\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Integer;\n \n    function Gets_LLD\n      (From  : String;\n-      Last  : access Positive;\n+      Last  : not null access Positive;\n       Scale : Integer) return Long_Long_Integer;\n \n    procedure Put_Dec"}, {"sha": "47de699ba705c4926199818ea3bbc390476abf6c", "filename": "gcc/ada/a-ztexio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztexio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztexio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -96,7 +96,7 @@ package body Ada.Wide_Wide_Text_IO is\n    -- AFCB_Close --\n    ----------------\n \n-   procedure AFCB_Close (File : access Wide_Wide_Text_AFCB) is\n+   procedure AFCB_Close (File : not null access Wide_Wide_Text_AFCB) is\n    begin\n       --  If the file being closed is one of the current files, then close\n       --  the corresponding current file. It is not clear that this action\n@@ -118,7 +118,7 @@ package body Ada.Wide_Wide_Text_IO is\n    -- AFCB_Free --\n    ---------------\n \n-   procedure AFCB_Free (File : access Wide_Wide_Text_AFCB) is\n+   procedure AFCB_Free (File : not null access Wide_Wide_Text_AFCB) is\n       type FCB_Ptr is access all Wide_Wide_Text_AFCB;\n       FT : FCB_Ptr := FCB_Ptr (File);\n "}, {"sha": "e200b17c32eff4c92e9cdb893dc035d09bdc054b", "filename": "gcc/ada/a-ztexio.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztexio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztexio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -395,8 +395,8 @@ private\n    function AFCB_Allocate\n      (Control_Block : Wide_Wide_Text_AFCB) return FCB.AFCB_Ptr;\n \n-   procedure AFCB_Close (File : access Wide_Wide_Text_AFCB);\n-   procedure AFCB_Free  (File : access Wide_Wide_Text_AFCB);\n+   procedure AFCB_Close (File : not null access Wide_Wide_Text_AFCB);\n+   procedure AFCB_Free  (File : not null access Wide_Wide_Text_AFCB);\n \n    procedure Read\n      (File : in out Wide_Wide_Text_AFCB;"}, {"sha": "4358e7b1e68d9c6279b97668fcd672d3e3f2db3f", "filename": "gcc/ada/a-ztinio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-ztinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztinio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "1599253d20ff3bebc4f1574fffe80ffd3f628651", "filename": "gcc/ada/a-zttest.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-zttest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-zttest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zttest.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "68157e965d7d27d7eb580c7d080bb3e04eb359eb", "filename": "gcc/ada/a-zzboio.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-zzboio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-zzboio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zzboio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,9 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1997-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "1695b06298a081a4133146128658bf7f5c0bfae6", "filename": "gcc/ada/a-zzunio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-zzunio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fa-zzunio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zzunio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "8c860110f92d23147b4760a3f4e90628948121c6", "filename": "gcc/ada/ada.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fada.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fada.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "7b13a6f2389e9efe8a95c4988d477f8c527953ea", "filename": "gcc/ada/calendar.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fcalendar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fcalendar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcalendar.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "b69ca4467e16c13f833daf5eabf455512f93c4e4", "filename": "gcc/ada/directio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fdirectio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fdirectio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdirectio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "103716a98b380458213f7cfe02819b794796923f", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 23, "deletions": 25, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -55,10 +55,10 @@ package body Expander is\n    -- Local Data --\n    ----------------\n \n-   --  The following table is used to save values of the Expander_Active\n-   --  flag when they are saved by Expander_Mode_Save_And_Set. We use an\n-   --  extendible table (which is a bit of overkill) because it is easier\n-   --  than figuring out a maximum value or bothering with range checks!\n+   --  The following table is used to save values of the Expander_Active flag\n+   --  when they are saved by Expander_Mode_Save_And_Set. We use an extendible\n+   --  table (which is a bit of overkill) because it is easier than figuring\n+   --  out a maximum value or bothering with range checks!\n \n    package Expander_Flags is new Table.Table (\n      Table_Component_Type => Boolean,\n@@ -74,17 +74,16 @@ package body Expander is\n \n    procedure Expand (N : Node_Id) is\n    begin\n-      --  If we were analyzing a default expression the Full_Analysis flag\n-      --  must be off. If we are in expansion mode then we must be\n-      --  performing a full analysis. If we are analyzing a generic then\n-      --  Expansion must be off.\n+      --  If we were analyzing a default expression the Full_Analysis flag must\n+      --  be off. If we are in expansion mode then we must be performing a full\n+      --  analysis. If we are analyzing a generic then Expansion must be off.\n \n       pragma Assert\n         (not (Full_Analysis and then In_Default_Expression)\n-         and then (Full_Analysis or else not Expander_Active)\n-         and then not (Inside_A_Generic and then Expander_Active));\n+          and then (Full_Analysis or else not Expander_Active)\n+          and then not (Inside_A_Generic and then Expander_Active));\n \n-      --  There are three reasons for the Expander_Active flag to be false.\n+      --  There are three reasons for the Expander_Active flag to be false\n       --\n       --  The first is when are not generating code. In this mode the\n       --  Full_Analysis flag indicates whether we are performing a complete\n@@ -93,19 +92,18 @@ package body Expander is\n       --  info on this.\n       --\n       --  The second reason for the Expander_Active flag to be False is that\n-      --  we are performing a pre-analysis. During pre-analysis all\n-      --  expansion activity is turned off to make sure nodes are\n-      --  semantically decorated but no extra nodes are generated.  This is\n-      --  for instance needed for the first pass of aggregate semantic\n-      --  processing. Note that in this case the Full_Analysis flag is set\n-      --  to False because the node will subsequently be re-analyzed with\n-      --  expansion on (see the spec of sem).\n+      --  we are performing a pre-analysis. During pre-analysis all expansion\n+      --  activity is turned off to make sure nodes are semantically decorated\n+      --  but no extra nodes are generated. This is for instance needed for\n+      --  the first pass of aggregate semantic processing. Note that in this\n+      --  case the Full_Analysis flag is set to False because the node will\n+      --  subsequently be re-analyzed with expansion on (see the spec of sem).\n \n       --  Finally, expansion is turned off in a regular compilation if there\n       --  are serious errors. In that case there will be no further expansion,\n       --  but one cleanup action may be required: if a transient scope was\n-      --  created (e.g. for a function that returns an unconstrained type)\n-      --  the scope may still be on the stack, and must be removed explicitly,\n+      --  created (e.g. for a function that returns an unconstrained type) the\n+      --  scope may still be on the stack, and must be removed explicitly,\n       --  given that the expansion actions that would normally process it will\n       --  not take place. This prevents cascaded errors due to stack mismatch.\n \n@@ -129,8 +127,8 @@ package body Expander is\n          Debug_A_Entry (\"expanding  \", N);\n \n          --  Processing depends on node kind. For full details on the expansion\n-         --  activity required in each case, see bodies of corresponding\n-         --  expand routines\n+         --  activity required in each case, see bodies of corresponding expand\n+         --  routines.\n \n          begin\n             case Nkind (N) is\n@@ -490,9 +488,9 @@ package body Expander is\n       Expander_Active := Expander_Flags.Table (Expander_Flags.Last);\n       Expander_Flags.Decrement_Last;\n \n-      --  Keep expander off if serious errors detected. In this case we do\n-      --  not need expansion, and continued expansion may cause cascaded\n-      --  errors or compiler bombs.\n+      --  Keep expander off if serious errors detected. In this case we do not\n+      --  need expansion, and continued expansion may cause cascaded errors or\n+      --  compiler bombs.\n \n       if Serious_Errors_Detected /= 0 then\n          Expander_Active := False;"}, {"sha": "3fec4a093e8098adae97919a811c34015e934064", "filename": "gcc/ada/g-calend.adb", "status": "modified", "additions": 37, "deletions": 34, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2005, AdaCore                     --\n+--                     Copyright (C) 1999-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,13 +41,13 @@ package body GNAT.Calendar is\n    -----------------\n \n    function Day_In_Year (Date : Time) return Day_In_Year_Number is\n-      Year  : Year_Number;\n-      Month : Month_Number;\n-      Day   : Day_Number;\n-      Dsecs : Day_Duration;\n+      Year     : Year_Number;\n+      Month    : Month_Number;\n+      Day      : Day_Number;\n+      Day_Secs : Day_Duration;\n \n    begin\n-      Split (Date, Year, Month, Day, Dsecs);\n+      Split (Date, Year, Month, Day, Day_Secs);\n \n       return Julian_Day (Year, Month, Day) - Julian_Day (Year, 1, 1) + 1;\n    end Day_In_Year;\n@@ -57,13 +57,13 @@ package body GNAT.Calendar is\n    -----------------\n \n    function Day_Of_Week (Date : Time) return Day_Name is\n-      Year  : Year_Number;\n-      Month : Month_Number;\n-      Day   : Day_Number;\n-      Dsecs : Day_Duration;\n+      Year     : Year_Number;\n+      Month    : Month_Number;\n+      Day      : Day_Number;\n+      Day_Secs : Day_Duration;\n \n    begin\n-      Split (Date, Year, Month, Day, Dsecs);\n+      Split (Date, Year, Month, Day, Day_Secs);\n \n       return Day_Name'Val ((Julian_Day (Year, Month, Day)) mod 7);\n    end Day_Of_Week;\n@@ -90,8 +90,8 @@ package body GNAT.Calendar is\n    -- Julian_Day --\n    ----------------\n \n-   --  Julian_Day is used to by Day_Of_Week and Day_In_Year. Note\n-   --  that this implementation is not expensive.\n+   --  Julian_Day is used to by Day_Of_Week and Day_In_Year. Note that this\n+   --  implementation is not expensive.\n \n    function Julian_Day\n      (Year  : Year_Number;\n@@ -178,21 +178,21 @@ package body GNAT.Calendar is\n       Second     : out Second_Number;\n       Sub_Second : out Second_Duration)\n    is\n-      Dsecs : Day_Duration;\n-      Secs  : Natural;\n+      Day_Secs : Day_Duration;\n+      Secs     : Natural;\n \n    begin\n-      Split (Date, Year, Month, Day, Dsecs);\n+      Split (Date, Year, Month, Day, Day_Secs);\n \n-      if Dsecs = 0.0 then\n+      if Day_Secs = 0.0 then\n          Secs := 0;\n       else\n-         Secs := Natural (Dsecs - 0.5);\n+         Secs := Natural (Day_Secs - 0.5);\n       end if;\n \n-      Sub_Second := Second_Duration (Dsecs - Day_Duration (Secs));\n-      Hour       := Hour_Number (Secs / 3600);\n-      Secs       := Secs mod 3600;\n+      Sub_Second := Second_Duration (Day_Secs - Day_Duration (Secs));\n+      Hour       := Hour_Number (Secs / 3_600);\n+      Secs       := Secs mod 3_600;\n       Minute     := Minute_Number (Secs / 60);\n       Second     := Second_Number (Secs mod 60);\n    end Split;\n@@ -228,23 +228,25 @@ package body GNAT.Calendar is\n       Second     : Second_Number;\n       Sub_Second : Second_Duration := 0.0) return Time\n    is\n-      Dsecs : constant Day_Duration :=\n-                Day_Duration (Hour * 3600 + Minute * 60 + Second) +\n-                                                             Sub_Second;\n+      Day_Secs : constant Day_Duration :=\n+                   Day_Duration (Hour   * 3_600) +\n+                   Day_Duration (Minute *    60) +\n+                   Day_Duration (Second)         +\n+                                 Sub_Second;\n    begin\n-      return Time_Of (Year, Month, Day, Dsecs);\n+      return Time_Of (Year, Month, Day, Day_Secs);\n    end Time_Of;\n \n    -----------------\n    -- To_Duration --\n    -----------------\n \n-   function To_Duration (T : access timeval) return Duration is\n+   function To_Duration (T : not null access timeval) return Duration is\n \n       procedure timeval_to_duration\n-        (T    : access timeval;\n-         sec  : access C.long;\n-         usec : access C.long);\n+        (T    : not null access timeval;\n+         sec  : not null access C.long;\n+         usec : not null access C.long);\n       pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n \n       Micro : constant := 10**6;\n@@ -260,9 +262,12 @@ package body GNAT.Calendar is\n    -- To_Timeval --\n    ----------------\n \n-   function To_Timeval  (D : Duration) return timeval is\n+   function To_Timeval (D : Duration) return timeval is\n \n-      procedure duration_to_timeval (Sec, Usec : C.long; T : access timeval);\n+      procedure duration_to_timeval\n+        (Sec  : C.long;\n+         Usec : C.long;\n+         T : not null access timeval);\n       pragma Import (C, duration_to_timeval, \"__gnat_duration_to_timeval\");\n \n       Micro  : constant := 10**6;\n@@ -288,9 +293,7 @@ package body GNAT.Calendar is\n    -- Week_In_Year --\n    ------------------\n \n-   function Week_In_Year\n-     (Date : Ada.Calendar.Time) return Week_In_Year_Number\n-   is\n+   function Week_In_Year (Date : Time) return Week_In_Year_Number is\n       Year       : Year_Number;\n       Month      : Month_Number;\n       Day        : Day_Number;"}, {"sha": "e8b43456371e50d1798c6cfba87d070161c5bb89", "filename": "gcc/ada/g-calend.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -106,7 +106,7 @@ package GNAT.Calendar is\n \n    type timeval is private;\n \n-   function To_Duration (T : access timeval) return Duration;\n+   function To_Duration (T : not null access timeval) return Duration;\n    function To_Timeval  (D : Duration) return timeval;\n \n private"}, {"sha": "99ce7ea349e7a41863e8226df8e79dd5d89c31d8", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -661,7 +661,7 @@ package body GNAT.Directory_Operations is\n       function readdir_gnat\n         (Directory : System.Address;\n          Buffer    : System.Address;\n-         Last      : access Integer) return System.Address;\n+         Last      : not null access Integer) return System.Address;\n       pragma Import (C, readdir_gnat, \"__gnat_readdir\");\n \n    begin"}, {"sha": "55ede6536c92a75100e99ba736b374e624566f64", "filename": "gcc/ada/g-expect-vms.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-expect-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-expect-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect-vms.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -95,7 +95,7 @@ package body GNAT.Expect is\n    procedure Kill (Pid : Process_Id; Sig_Num : Integer);\n    pragma Import (C, Kill, \"decc$kill\");\n \n-   function Create_Pipe (Pipe : access Pipe_Type) return Integer;\n+   function Create_Pipe (Pipe : not null access Pipe_Type) return Integer;\n    pragma Import (C, Create_Pipe, \"__gnat_pipe\");\n \n    function Poll\n@@ -769,7 +769,7 @@ package body GNAT.Expect is\n      (Command    : String;\n       Arguments  : GNAT.OS_Lib.Argument_List;\n       Input      : String;\n-      Status     : access Integer;\n+      Status     : not null access Integer;\n       Err_To_Out : Boolean := False) return String\n    is\n       use GNAT.Expect;\n@@ -1096,9 +1096,9 @@ package body GNAT.Expect is\n    procedure Set_Up_Communications\n      (Pid        : in out Process_Descriptor;\n       Err_To_Out : Boolean;\n-      Pipe1      : access Pipe_Type;\n-      Pipe2      : access Pipe_Type;\n-      Pipe3      : access Pipe_Type)\n+      Pipe1      : not null access Pipe_Type;\n+      Pipe2      : not null access Pipe_Type;\n+      Pipe3      : not null access Pipe_Type)\n    is\n    begin\n       --  Create the pipes"}, {"sha": "7cc1bad531f5e4b2c30908dfa387f4ca18024142", "filename": "gcc/ada/g-expect.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-expect.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-expect.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2005, AdaCore                     --\n+--                     Copyright (C) 2000-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -229,7 +229,7 @@ package GNAT.Expect is\n      (Command    : String;\n       Arguments  : GNAT.OS_Lib.Argument_List;\n       Input      : String;\n-      Status     : access Integer;\n+      Status     : not null access Integer;\n       Err_To_Out : Boolean := False) return String;\n    --  Execute Command with the specified Arguments and Input, and return the\n    --  generated standard output data as a single string. If Err_To_Out is\n@@ -555,9 +555,9 @@ private\n    procedure Set_Up_Communications\n      (Pid        : in out Process_Descriptor;\n       Err_To_Out : Boolean;\n-      Pipe1      : access Pipe_Type;\n-      Pipe2      : access Pipe_Type;\n-      Pipe3      : access Pipe_Type);\n+      Pipe1      : not null access Pipe_Type;\n+      Pipe2      : not null access Pipe_Type;\n+      Pipe3      : not null access Pipe_Type);\n    --  Set up all the communication pipes and file descriptors prior to\n    --  spawning the child process.\n \n@@ -601,7 +601,7 @@ private\n    --  possibly in future child units providing extensions to this package.\n \n    procedure Portable_Execvp\n-     (Pid  : access Process_Id;\n+     (Pid  : not null access Process_Id;\n       Cmd  : String;\n       Args : System.Address);\n    pragma Import (C, Portable_Execvp, \"__gnat_expect_portable_execvp\");"}, {"sha": "b585a2164201195f005dad453f68443ecc8f2a61", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -881,8 +881,7 @@ package GNAT.Sockets is\n    type Stream_Access is access all Ada.Streams.Root_Stream_Type'Class;\n    --  Same interface as Ada.Streams.Stream_IO\n \n-   function Stream\n-     (Socket : Socket_Type) return Stream_Access;\n+   function Stream (Socket : Socket_Type) return Stream_Access;\n    --  Create a stream associated with a stream-based socket that is\n    --  already connected.\n \n@@ -892,8 +891,7 @@ package GNAT.Sockets is\n    --  Create a stream associated with a datagram-based socket that is already\n    --  bound. Send_To is the socket address to which messages are being sent.\n \n-   function Get_Address\n-     (Stream : Stream_Access) return Sock_Addr_Type;\n+   function Get_Address (Stream : Stream_Access) return Sock_Addr_Type;\n    --  Return the socket address from which the last message was received\n \n    procedure Free is new Ada.Unchecked_Deallocation\n@@ -921,8 +919,7 @@ package GNAT.Sockets is\n    --  Extract a Socket from socket set Item. Socket is set to\n    --  No_Socket when the set is empty.\n \n-   function Is_Empty\n-     (Item : Socket_Set_Type) return Boolean;\n+   function Is_Empty (Item : Socket_Set_Type) return Boolean;\n    --  Return True iff Item is empty\n \n    function Is_Set"}, {"sha": "af6afc233f3e598b3294143ba13d0e8a65b7cee2", "filename": "gcc/ada/g-spipat.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-spipat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-spipat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -1646,7 +1646,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_Any_CS, 1, EOP, Str));\n    end Any;\n \n-   function Any (Str : access VString) return Pattern is\n+   function Any (Str : not null access VString) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_Any_VP, 1, EOP, VString_Ptr (Str)));\n    end Any;\n@@ -1825,7 +1825,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_Break_CS, 1, EOP, Str));\n    end Break;\n \n-   function Break (Str : access VString) return Pattern is\n+   function Break (Str : not null access VString) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_Break_VP, 1, EOP, VString_Ptr (Str)));\n    end Break;\n@@ -1859,7 +1859,7 @@ package body GNAT.Spitbol.Patterns is\n       return BreakX_Make (new PE'(PC_BreakX_CS, 3, N, Str));\n    end BreakX;\n \n-   function BreakX (Str : access VString) return Pattern is\n+   function BreakX (Str : not null access VString) return Pattern is\n    begin\n       return BreakX_Make (new PE'(PC_BreakX_VP, 3, N, VString_Ptr (Str)));\n    end BreakX;\n@@ -2779,7 +2779,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_Len_NF, 1, EOP, Count));\n    end Len;\n \n-   function Len (Count : access Natural) return Pattern is\n+   function Len (Count : not null access Natural) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_Len_NP, 1, EOP, Natural_Ptr (Count)));\n    end Len;\n@@ -3266,7 +3266,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_NotAny_CS, 1, EOP, Str));\n    end NotAny;\n \n-   function NotAny (Str : access VString) return Pattern is\n+   function NotAny (Str : not null access VString) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_NotAny_VP, 1, EOP, VString_Ptr (Str)));\n    end NotAny;\n@@ -3300,7 +3300,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_NSpan_CS, 1, EOP, Str));\n    end NSpan;\n \n-   function NSpan (Str : access VString) return Pattern is\n+   function NSpan (Str : not null access VString) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_NSpan_VP, 1, EOP, VString_Ptr (Str)));\n    end NSpan;\n@@ -3324,7 +3324,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_Pos_NF, 1, EOP, Count));\n    end Pos;\n \n-   function Pos (Count : access Natural) return Pattern is\n+   function Pos (Count : not null access Natural) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_Pos_NP, 1, EOP, Natural_Ptr (Count)));\n    end Pos;\n@@ -3394,7 +3394,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_RPos_NF, 1, EOP, Count));\n    end Rpos;\n \n-   function Rpos (Count : access Natural) return Pattern is\n+   function Rpos (Count : not null access Natural) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_RPos_NP, 1, EOP, Natural_Ptr (Count)));\n    end Rpos;\n@@ -3413,7 +3413,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_RTab_NF, 1, EOP, Count));\n    end Rtab;\n \n-   function Rtab (Count : access Natural) return Pattern is\n+   function Rtab (Count : not null access Natural) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_RTab_NP, 1, EOP, Natural_Ptr (Count)));\n    end Rtab;\n@@ -3500,7 +3500,7 @@ package body GNAT.Spitbol.Patterns is\n    -- Setcur --\n    ------------\n \n-   function Setcur (Var : access Natural) return Pattern is\n+   function Setcur (Var : not null access Natural) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_Setcur, 1, EOP, Natural_Ptr (Var)));\n    end Setcur;\n@@ -3529,7 +3529,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_Span_CS, 1, EOP, Str));\n    end Span;\n \n-   function Span (Str : access VString) return Pattern is\n+   function Span (Str : not null access VString) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_Span_VP, 1, EOP, VString_Ptr (Str)));\n    end Span;\n@@ -3628,7 +3628,7 @@ package body GNAT.Spitbol.Patterns is\n       return (AFC with 0, new PE'(PC_Tab_NF, 1, EOP, Count));\n    end Tab;\n \n-   function Tab (Count : access Natural) return Pattern is\n+   function Tab (Count : not null access Natural) return Pattern is\n    begin\n       return (AFC with 0, new PE'(PC_Tab_NP, 1, EOP, Natural_Ptr (Count)));\n    end Tab;"}, {"sha": "fd1281c8ce70d63d39e82d4beddf8e028f98c945", "filename": "gcc/ada/g-spipat.ads", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-spipat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fg-spipat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spipat.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1997-2005, AdaCore                     --\n+--                     Copyright (C) 1997-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -782,7 +782,7 @@ package GNAT.Spitbol.Patterns is\n    function Any    (Str : VString)                          return Pattern;\n    function Any    (Str : Character)                        return Pattern;\n    function Any    (Str : Character_Set)                    return Pattern;\n-   function Any    (Str : access VString)                   return Pattern;\n+   function Any    (Str : not null access VString)          return Pattern;\n    function Any    (Str : VString_Func)                     return Pattern;\n    --  Constructs a pattern that matches a single character that is one of\n    --  the characters in the given argument. The pattern fails if the current\n@@ -797,7 +797,7 @@ package GNAT.Spitbol.Patterns is\n    function Break  (Str : VString)                          return Pattern;\n    function Break  (Str : Character)                        return Pattern;\n    function Break  (Str : Character_Set)                    return Pattern;\n-   function Break  (Str : access VString)                   return Pattern;\n+   function Break  (Str : not null access VString)          return Pattern;\n    function Break  (Str : VString_Func)                     return Pattern;\n    --  Constructs a pattern that matches a (possibly null) string which\n    --  is immediately followed by a character in the given argument. This\n@@ -809,7 +809,7 @@ package GNAT.Spitbol.Patterns is\n    function BreakX (Str : VString)                          return Pattern;\n    function BreakX (Str : Character)                        return Pattern;\n    function BreakX (Str : Character_Set)                    return Pattern;\n-   function BreakX (Str : access VString)                   return Pattern;\n+   function BreakX (Str : not null access VString)          return Pattern;\n    function BreakX (Str : VString_Func)                     return Pattern;\n    --  Like Break, but the pattern attempts to extend on a failure to find\n    --  the next occurrence of a character in Str, and only fails when the\n@@ -833,7 +833,7 @@ package GNAT.Spitbol.Patterns is\n    --  one attempt is made to match P, without trying alternatives.\n \n    function Len    (Count : Natural)                        return Pattern;\n-   function Len    (Count : access Natural)                 return Pattern;\n+   function Len    (Count : not null access Natural)        return Pattern;\n    function Len    (Count : Natural_Func)                   return Pattern;\n    --  Constructs a pattern that matches exactly the given number of\n    --  characters. The pattern fails if fewer than this number of characters\n@@ -843,7 +843,7 @@ package GNAT.Spitbol.Patterns is\n    function NotAny (Str : VString)                          return Pattern;\n    function NotAny (Str : Character)                        return Pattern;\n    function NotAny (Str : Character_Set)                    return Pattern;\n-   function NotAny (Str : access VString)                   return Pattern;\n+   function NotAny (Str : not null access VString)          return Pattern;\n    function NotAny (Str : VString_Func)                     return Pattern;\n    --  Constructs a pattern that matches a single character that is not\n    --  one of the characters in the given argument. The pattern Fails if\n@@ -853,14 +853,14 @@ package GNAT.Spitbol.Patterns is\n    function NSpan  (Str : VString)                          return Pattern;\n    function NSpan  (Str : Character)                        return Pattern;\n    function NSpan  (Str : Character_Set)                    return Pattern;\n-   function NSpan  (Str : access VString)                   return Pattern;\n+   function NSpan  (Str : not null access VString)          return Pattern;\n    function NSpan  (Str : VString_Func)                     return Pattern;\n    --  Constructs a pattern that matches the longest possible string\n    --  consisting entirely of characters from the given argument. The\n    --  string may be empty, so this pattern always succeeds.\n \n    function Pos    (Count : Natural)                        return Pattern;\n-   function Pos    (Count : access Natural)                 return Pattern;\n+   function Pos    (Count : not null access Natural)        return Pattern;\n    function Pos    (Count : Natural_Func)                   return Pattern;\n    --  Constructs a pattern that matches the null string if exactly Count\n    --  characters have already been matched, and otherwise fails.\n@@ -870,19 +870,19 @@ package GNAT.Spitbol.Patterns is\n    --  unmatched characters in the pattern.\n \n    function Rpos   (Count : Natural)                        return Pattern;\n-   function Rpos   (Count : access Natural)                 return Pattern;\n+   function Rpos   (Count : not null access Natural)        return Pattern;\n    function Rpos   (Count : Natural_Func)                   return Pattern;\n    --  Constructs a pattern that matches the null string if exactly Count\n    --  characters remain to be matched in the string, and otherwise fails.\n \n    function Rtab   (Count : Natural)                        return Pattern;\n-   function Rtab   (Count : access Natural)                 return Pattern;\n+   function Rtab   (Count : not null access Natural)        return Pattern;\n    function Rtab   (Count : Natural_Func)                   return Pattern;\n    --  Constructs a pattern that matches from the current location until\n    --  exactly Count characters remain to be matched in the string. The\n    --  pattern fails if fewer than Count characters remain to be matched.\n \n-   function Setcur (Var : access Natural)                   return Pattern;\n+   function Setcur (Var : not null access Natural)          return Pattern;\n    --  Constructs a pattern that matches the null string, and assigns the\n    --  current cursor position in the string. This value is the number of\n    --  characters matched so far. So it is zero at the start of the match.\n@@ -891,7 +891,7 @@ package GNAT.Spitbol.Patterns is\n    function Span   (Str : VString)                          return Pattern;\n    function Span   (Str : Character)                        return Pattern;\n    function Span   (Str : Character_Set)                    return Pattern;\n-   function Span   (Str : access VString)                   return Pattern;\n+   function Span   (Str : not null access VString)          return Pattern;\n    function Span   (Str : VString_Func)                     return Pattern;\n    --  Constructs a pattern that matches the longest possible string\n    --  consisting entirely of characters from the given argument. The\n@@ -904,7 +904,7 @@ package GNAT.Spitbol.Patterns is\n    --  infinite alternation of null strings.\n \n    function Tab    (Count : Natural)                        return Pattern;\n-   function Tab    (Count : access Natural)                 return Pattern;\n+   function Tab    (Count : not null access Natural)        return Pattern;\n    function Tab    (Count : Natural_Func)                   return Pattern;\n    --  Constructs a pattern that from the current location until Count\n    --  characters have been matched. The pattern fails if more than Count"}, {"sha": "086548c5b8128ee72302bfc8b099e0df75912be4", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005, AdaCore                     --\n+--                     Copyright (C) 1998-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -240,12 +240,14 @@ procedure Gnatchop is\n    end record;\n \n    function Get_EOL\n-     (Source : access String;\n+     (Source : not null access String;\n       Start  : Positive)\n       return   EOL_String;\n    --  Return the line terminator used in the passed string\n \n-   procedure Parse_EOL (Source : access String; Ptr : in out Positive);\n+   procedure Parse_EOL\n+     (Source : not null access String;\n+      Ptr    : in out Positive);\n    --  On return Source (Ptr) is the first character of the next line\n    --  or EOF. Source.all must be terminated by EOF.\n \n@@ -255,12 +257,14 @@ procedure Gnatchop is\n    --  completes, False if some system error (e.g. failure to read the\n    --  offset information) occurs.\n \n-   procedure Parse_Offset_Info (Chop_File : File_Num; Source : access String);\n+   procedure Parse_Offset_Info\n+     (Chop_File : File_Num;\n+      Source    : not null access String);\n    --  Parses the output of the compiler indicating the offsets\n    --  and names of the compilation units in Chop_File.\n \n    procedure Parse_Token\n-     (Source    : access String;\n+     (Source    : not null access String;\n       Ptr       : in out Positive;\n       Token_Ptr : out Positive);\n    --  Skips any separators and stores the start of the token in Token_Ptr.\n@@ -324,7 +328,7 @@ procedure Gnatchop is\n    --  of line sequence to be written at the end of the pragma.\n \n    procedure Write_Unit\n-     (Source  : access String;\n+     (Source  : not null access String;\n       Num     : Unit_Num;\n       TS_Time : OS_Time;\n       Success : out Boolean);\n@@ -462,7 +466,7 @@ procedure Gnatchop is\n    -------------\n \n    function Get_EOL\n-     (Source : access String;\n+     (Source : not null access String;\n       Start  : Positive)\n       return   EOL_String\n    is\n@@ -576,7 +580,9 @@ procedure Gnatchop is\n    -- Parse_EOL --\n    ---------------\n \n-   procedure Parse_EOL (Source : access String; Ptr : in out Positive) is\n+   procedure Parse_EOL\n+     (Source : not null access String;\n+      Ptr    : in out Positive) is\n    begin\n       --  Skip to end of line\n \n@@ -705,7 +711,7 @@ procedure Gnatchop is\n \n    procedure Parse_Offset_Info\n      (Chop_File : File_Num;\n-      Source    : access String)\n+      Source    : not null access String)\n    is\n       First_Unit : constant Unit_Num := Unit.Last + 1;\n       Bufferg    : String_Access     := null;\n@@ -944,7 +950,7 @@ procedure Gnatchop is\n    -----------------\n \n    procedure Parse_Token\n-     (Source    : access String;\n+     (Source    : not null access String;\n       Ptr       : in out Positive;\n       Token_Ptr : out Positive)\n    is\n@@ -1607,7 +1613,7 @@ procedure Gnatchop is\n    ----------------\n \n    procedure Write_Unit\n-     (Source  : access String;\n+     (Source  : not null access String;\n       Num     : Unit_Num;\n       TS_Time : OS_Time;\n       Success : out Boolean)"}, {"sha": "1882e8fa40be96dc5583dfae6963ddf9bf7f3b07", "filename": "gcc/ada/i-c.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fi-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fi-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-c.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "3c317b8d50b86bce67098c7c8bfa411884502b03", "filename": "gcc/ada/i-vxwork-x86.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fi-vxwork-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fi-vxwork-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwork-x86.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---                     Copyright (C) 1999-2005, AdaCore                     --\n+--                     Copyright (C) 1999-2006, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -155,16 +155,16 @@ package Interfaces.VxWorks is\n    procedure intVecGet2\n      (vector       : Interrupt_Vector;\n       pFunction    : out VOIDFUNCPTR;\n-      pIdtGate     : access int;\n-      pIdtSelector : access int);\n+      pIdtGate     : not null access int;\n+      pIdtSelector : not null access int);\n    --  Binding to the C routine intVecGet2. Use this to get the\n    --  existing handler for later restoral\n \n    procedure intVecSet2\n      (vector       : Interrupt_Vector;\n       pFunction    : VOIDFUNCPTR;\n-      pIdtGate     : access int;\n-      pIdtSelector : access int);\n+      pIdtGate     : not null access int;\n+      pIdtSelector : not null access int);\n    --  Binding to the C routine intVecSet2. Use this to restore a\n    --  handler obtained using intVecGet2\n "}, {"sha": "0473ff32bdfd083c631b70153398921e617e9bd7", "filename": "gcc/ada/ioexcept.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fioexcept.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fioexcept.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fioexcept.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "55e1ae594d8e8c49178a71c022de7ceaa0b078ff", "filename": "gcc/ada/machcode.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fmachcode.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fmachcode.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmachcode.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,12 +6,13 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-   with System.Machine_Code;\n-   package Machine_Code renames System.Machine_Code;\n+with System.Machine_Code;\n+\n+package Machine_Code renames System.Machine_Code;"}, {"sha": "fe50b7b061163a3e0fa61c83da085e2e7be203e0", "filename": "gcc/ada/par-labl.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fpar-labl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fpar-labl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-labl.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -477,7 +477,6 @@ procedure Labl is\n \n begin\n    Next_Label_Elmt := First_Elmt (Label_List);\n-\n    while Present (Next_Label_Elmt) loop\n       Label_Node := Node (Next_Label_Elmt);\n "}, {"sha": "33c94985f8c4ecf8e87b8690e038b9b6ea054451", "filename": "gcc/ada/s-direio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -74,7 +74,7 @@ package body System.Direct_IO is\n \n    --  No special processing required for Direct_IO close\n \n-   procedure AFCB_Close (File : access Direct_AFCB) is\n+   procedure AFCB_Close (File : not null access Direct_AFCB) is\n       pragma Unreferenced (File);\n \n    begin\n@@ -85,7 +85,7 @@ package body System.Direct_IO is\n    -- AFCB_Free --\n    ---------------\n \n-   procedure AFCB_Free (File : access Direct_AFCB) is\n+   procedure AFCB_Free (File : not null access Direct_AFCB) is\n \n       type FCB_Ptr is access all Direct_AFCB;\n "}, {"sha": "a43ebb67fc7d64f0258e74449d4f5c1fd12448c3", "filename": "gcc/ada/s-direio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -66,8 +66,8 @@ package System.Direct_IO is\n \n    function AFCB_Allocate (Control_Block : Direct_AFCB) return FCB.AFCB_Ptr;\n \n-   procedure AFCB_Close (File : access Direct_AFCB);\n-   procedure AFCB_Free  (File : access Direct_AFCB);\n+   procedure AFCB_Close (File : not null access Direct_AFCB);\n+   procedure AFCB_Free  (File : not null access Direct_AFCB);\n \n    procedure Read\n      (File : in out Direct_AFCB;"}, {"sha": "f591a6992506f132be14c294d9ceb7ff31679507", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -759,7 +759,7 @@ package body System.Fat_Gen is\n    --  in Exp_Attr by using the Valid functions in Vax_Float_Operations rather\n    --  than the corresponding instantiation of this function.\n \n-   function Valid (X : access T) return Boolean is\n+   function Valid (X : not null access T) return Boolean is\n \n       IEEE_Emin : constant Integer := T'Machine_Emin - 1;\n       IEEE_Emax : constant Integer := T'Machine_Emax - 1;"}, {"sha": "748e5170a027d1f723f0447417d0cca4ae532e9a", "filename": "gcc/ada/s-fatgen.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-fatgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-fatgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,7 +89,7 @@ package System.Fat_Gen is\n \n    function Unbiased_Rounding (X : T)                       return T;\n \n-   function Valid (X : access T) return Boolean;\n+   function Valid (X : not null access T) return Boolean;\n    --  This function checks if the object of type T referenced by X\n    --  is valid, and returns True/False accordingly. The parameter is\n    --  passed by reference (access) here, as the object of type T may"}, {"sha": "41e3033418f00fd2b62ffaf4707d12cddd9ca39a", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -4,9 +4,9 @@\n --                                                                          --\n --                  S Y S T E M . O S _ P R I M I T I V E S                 --\n --                                                                          --\n---                                  B o d y                                 --\n+--                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,16 +51,17 @@ package body System.OS_Primitives is\n    type BOOL is new Boolean;\n    for BOOL'Size use Interfaces.C.unsigned_long'Size;\n \n-   procedure GetSystemTimeAsFileTime (lpFileTime : access Long_Long_Integer);\n+   procedure GetSystemTimeAsFileTime\n+     (lpFileTime : not null access Long_Long_Integer);\n    pragma Import (Stdcall, GetSystemTimeAsFileTime, \"GetSystemTimeAsFileTime\");\n \n    function QueryPerformanceCounter\n-     (lpPerformanceCount : access LARGE_INTEGER) return BOOL;\n+     (lpPerformanceCount : not null access LARGE_INTEGER) return BOOL;\n    pragma Import\n      (Stdcall, QueryPerformanceCounter, \"QueryPerformanceCounter\");\n \n    function QueryPerformanceFrequency\n-     (lpFrequency : access LARGE_INTEGER) return BOOL;\n+     (lpFrequency : not null access LARGE_INTEGER) return BOOL;\n    pragma Import\n      (Stdcall, QueryPerformanceFrequency, \"QueryPerformanceFrequency\");\n \n@@ -241,9 +242,29 @@ package body System.OS_Primitives is\n    -----------------\n \n    procedure Timed_Delay (Time : Duration; Mode : Integer) is\n+\n+      function Mode_Clock return Duration;\n+      pragma Inline (Mode_Clock);\n+      --  Return the current clock value using either the monotonic clock or\n+      --  standard clock depending on the Mode value.\n+\n+      ----------------\n+      -- Mode_Clock --\n+      ----------------\n+\n+      function Mode_Clock return Duration is\n+      begin\n+         case Mode is\n+            when Absolute_RT =>\n+               return Monotonic_Clock;\n+            when others =>\n+               return Clock;\n+         end case;\n+      end Mode_Clock;\n+\n       Rel_Time   : Duration;\n       Abs_Time   : Duration;\n-      Check_Time : Duration := Monotonic_Clock;\n+      Check_Time : Duration := Mode_Clock;\n \n    begin\n       if Mode = Relative then\n@@ -257,7 +278,7 @@ package body System.OS_Primitives is\n       if Rel_Time > 0.0 then\n          loop\n             Sleep (DWORD (Rel_Time * 1000.0));\n-            Check_Time := Monotonic_Clock;\n+            Check_Time := Mode_Clock;\n \n             exit when Abs_Time <= Check_Time;\n "}, {"sha": "59a72374d525ff4860fd478fbe4c1278de9a72da", "filename": "gcc/ada/s-osprim-posix.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-osprim-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-osprim-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-posix.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,7 +56,7 @@ package body System.OS_Primitives is\n    pragma Convention (C, struct_timeval);\n \n    function gettimeofday\n-     (tv : access struct_timeval;\n+     (tv : not null access struct_timeval;\n       tz : struct_timezone_ptr) return Integer;\n    pragma Import (C, gettimeofday, \"gettimeofday\");\n \n@@ -66,7 +66,7 @@ package body System.OS_Primitives is\n    end record;\n    pragma Convention (C, timespec);\n \n-   function nanosleep (rqtp, rmtp : access timespec) return Integer;\n+   function nanosleep (rqtp, rmtp : not null access timespec) return Integer;\n    pragma Import (C, nanosleep, \"nanosleep\");\n \n    -----------"}, {"sha": "b97093357829da70cc692e4c5a3a2c1ced433f07", "filename": "gcc/ada/s-osprim-solaris.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-osprim-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-osprim-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-solaris.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,7 +48,7 @@ package body System.OS_Primitives is\n    pragma Convention (C, struct_timeval);\n \n    procedure gettimeofday\n-     (tv : access struct_timeval;\n+     (tv : not null access struct_timeval;\n       tz : Address := Null_Address);\n    pragma Import (C, gettimeofday, \"gettimeofday\");\n \n@@ -57,7 +57,7 @@ package body System.OS_Primitives is\n       readfds,\n       writefds,\n       exceptfds : Address := Null_Address;\n-      timeout   : access struct_timeval);\n+      timeout   : not null access struct_timeval);\n    pragma Import (C, C_select, \"select\");\n \n    -----------"}, {"sha": "719551f9dfae01252119c086f328810c9ac1554d", "filename": "gcc/ada/s-osprim-unix.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-osprim-unix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-osprim-unix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-unix.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,7 +48,7 @@ package body System.OS_Primitives is\n    pragma Convention (C, struct_timeval);\n \n    procedure gettimeofday\n-     (tv : access struct_timeval;\n+     (tv : not null access struct_timeval;\n       tz : Address := Null_Address);\n    pragma Import (C, gettimeofday, \"gettimeofday\");\n \n@@ -57,7 +57,7 @@ package body System.OS_Primitives is\n       readfds,\n       writefds,\n       exceptfds : Address := Null_Address;\n-      timeout   : access struct_timeval);\n+      timeout   : not null access struct_timeval);\n    pragma Import (C, C_select, \"select\");\n \n    -----------"}, {"sha": "f8bcdcc0bb88eda00801e00c787fecb3ad2ca493", "filename": "gcc/ada/s-parint.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-parint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-parint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                   (Dummy body for non-distributed case)                  --\n --                                                                          --\n---          Copyright (C) 1995-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -311,8 +311,8 @@ package body System.Partition_Interface is\n    --------------------\n \n    function Same_Partition\n-      (Left  : access RACW_Stub_Type;\n-       Right : access RACW_Stub_Type) return Boolean\n+      (Left  : not null access RACW_Stub_Type;\n+       Right : not null access RACW_Stub_Type) return Boolean\n    is\n       pragma Unreferenced (Left);\n       pragma Unreferenced (Right);"}, {"sha": "72f2e2b3bf21aa48d3a09483ca38005674743d8b", "filename": "gcc/ada/s-sequio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-sequio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-sequio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sequio.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -59,7 +59,7 @@ package body System.Sequential_IO is\n \n    --  No special processing required for Sequential_IO close\n \n-   procedure AFCB_Close (File : access Sequential_AFCB) is\n+   procedure AFCB_Close (File : not null access Sequential_AFCB) is\n       pragma Warnings (Off, File);\n \n    begin\n@@ -70,7 +70,7 @@ package body System.Sequential_IO is\n    -- AFCB_Free --\n    ---------------\n \n-   procedure AFCB_Free (File : access Sequential_AFCB) is\n+   procedure AFCB_Free (File : not null access Sequential_AFCB) is\n \n       type FCB_Ptr is access all Sequential_AFCB;\n "}, {"sha": "d263ec33f45a9dd2fcb804f49b4bc988275bb112", "filename": "gcc/ada/s-sequio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-sequio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-sequio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sequio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -48,8 +48,8 @@ package System.Sequential_IO is\n    function AFCB_Allocate\n      (Control_Block : Sequential_AFCB) return FCB.AFCB_Ptr;\n \n-   procedure AFCB_Close (File : access Sequential_AFCB);\n-   procedure AFCB_Free  (File : access Sequential_AFCB);\n+   procedure AFCB_Close (File : not null access Sequential_AFCB);\n+   procedure AFCB_Free  (File : not null access Sequential_AFCB);\n \n    procedure Read\n      (File : in out Sequential_AFCB;"}, {"sha": "c0577afe7fec2892978b72eb8d2bff9d5c8a5b76", "filename": "gcc/ada/s-stchop.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-stchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-stchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1999-2006 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This is the general implementation of this package. There is a VxWorks\n---  specific version of this package (5zstchop.adb). This file should\n+--  specific version of this package (s-stchop-vxworks.adb). This file should\n --  be kept synchronized with it.\n \n pragma Restrictions (No_Elaboration_Code);\n@@ -50,7 +50,8 @@ package body System.Stack_Checking.Operations is\n \n    Kilobyte : constant := 1024;\n \n-   function Set_Stack_Info (Stack : access Stack_Access) return Stack_Access;\n+   function Set_Stack_Info\n+     (Stack : not null access Stack_Access) return Stack_Access;\n \n    --  The function Set_Stack_Info is the actual function that updates\n    --  the cache containing a pointer to the Stack_Info. It may also\n@@ -90,7 +91,7 @@ package body System.Stack_Checking.Operations is\n    --------------------\n \n    function Set_Stack_Info\n-     (Stack : access Stack_Access) return Stack_Access\n+     (Stack : not null access Stack_Access) return Stack_Access\n    is\n       type Frame_Mark is null record;\n       Frame_Location : Frame_Mark;"}, {"sha": "1c2f2a7ef918bc34944baee547bf35b0dc806f1a", "filename": "gcc/ada/s-stchop.ads", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-stchop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-stchop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -31,12 +31,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides a implementation of stack checking operations\n---  using comparison with stack base and limit.\n+--  This package provides a implementation of stack checking operations using\n+--  comparison with stack base and limit.\n \n pragma Restrictions (No_Elaboration_Code);\n---  We want to guarantee the absence of elaboration code because the\n---  binder does not handle references to this package.\n+--  We want to guarantee the absence of elaboration code because the binder\n+--  does not handle references to this package.\n \n pragma Polling (Off);\n --  Turn off polling, we do not want polling to take place during stack\n@@ -46,22 +46,20 @@ package System.Stack_Checking.Operations is\n    pragma Preelaborate;\n \n    procedure Update_Stack_Cache (Stack : Stack_Access);\n-   --  Set the stack cache for the current task. Note that this is only\n-   --  for optimization purposes, nothing can be assumed about the\n-   --  contents of the cache at any time, see Set_Stack_Info.\n+   --  Set the stack cache for the current task. Note that this is only for\n+   --  optimization purposes, nothing can be assumed about the contents of the\n+   --  cache at any time, see Set_Stack_Info.\n \n    procedure Invalidate_Stack_Cache (Any_Stack : Stack_Access);\n-   --  Invalidate cache entries for the task T that owns Any_Stack.\n-   --  This causes the Set_Stack_Info function to be called during\n-   --  the next stack check done by T. This can be used to interrupt\n-   --  task T asynchronously.\n+   --  Invalidate cache entries for the task T that owns Any_Stack. This causes\n+   --  the Set_Stack_Info function to be called during the next stack check\n+   --  done by T. This can be used to interrupt task T asynchronously.\n    --  Stack_Check should be called in loops for this to work reliably.\n \n    function Stack_Check (Stack_Address : System.Address) return Stack_Access;\n-   --  This version of Stack_Check should not be inlined.\n+   --  This version of Stack_Check should not be inlined\n \n private\n-\n    Cache : aliased Stack_Access := Null_Stack;\n \n    pragma Export (C, Cache, \"_gnat_stack_cache\");"}, {"sha": "894ec292dae5735db911209f55344218af77bd28", "filename": "gcc/ada/s-taprop-dummy.adb", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-dummy.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2005, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2006, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -144,12 +144,12 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n    begin\n       null;\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n    begin\n       null;\n    end Finalize_Lock;\n@@ -204,13 +204,14 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n    begin\n       null;\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level) is\n    begin\n       null;\n    end Initialize_Lock;\n@@ -264,7 +265,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Ceiling_Violation := False;\n    end Read_Lock;\n@@ -343,7 +345,7 @@ package body System.Task_Primitives.Operations is\n    -- Sleep --\n    -----------\n \n-   procedure Sleep (Self_ID : Task_Id; Reason  : System.Tasking.Task_States) is\n+   procedure Sleep (Self_ID : Task_Id; Reason : System.Tasking.Task_States) is\n    begin\n       null;\n    end Sleep;\n@@ -412,12 +414,13 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n    begin\n       null;\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False) is\n    begin\n       null;\n    end Unlock;\n@@ -448,13 +451,14 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Ceiling_Violation := False;\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L           : access RTS_Lock;\n+     (L           : not null access RTS_Lock;\n       Global_Lock : Boolean := False)\n    is\n    begin"}, {"sha": "4b43f1cde5c23344a1c5e58676808638957ef1c5", "filename": "gcc/ada/s-taprop-hpux-dce.adb", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-hpux-dce.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -239,7 +239,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n       Attributes : aliased pthread_mutexattr_t;\n       Result     : Interfaces.C.int;\n@@ -265,7 +265,8 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level) is\n       pragma Unreferenced (Level);\n \n       Attributes : aliased pthread_mutexattr_t;\n@@ -295,14 +296,14 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L.L'Access);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L);\n@@ -313,7 +314,9 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean)\n+   is\n       Result : Interfaces.C.int;\n \n    begin\n@@ -330,7 +333,7 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L : access RTS_Lock; Global_Lock : Boolean := False)\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n    begin\n@@ -353,7 +356,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -362,14 +366,16 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_unlock (L.L'Access);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n       Result : Interfaces.C.int;\n    begin\n       if not Single_Lock or else Global_Lock then"}, {"sha": "4b7b170ebc157a3dfaac8791a71ae6d38cf93abb", "filename": "gcc/ada/s-taprop-irix.adb", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-irix.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -238,7 +238,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n       Attributes : aliased pthread_mutexattr_t;\n       Result     : Interfaces.C.int;\n@@ -273,7 +273,9 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level)\n+   is\n       pragma Unreferenced (Level);\n \n       Attributes : aliased pthread_mutexattr_t;\n@@ -314,14 +316,14 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L);\n@@ -332,7 +334,9 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean)\n+   is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_lock (L);\n@@ -344,7 +348,7 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L           : access RTS_Lock;\n+     (L           : not null access RTS_Lock;\n       Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n@@ -368,7 +372,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -377,14 +382,16 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_unlock (L);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n       Result : Interfaces.C.int;\n \n    begin"}, {"sha": "c945f5c9d7ea1222a4ba89cfc43e9e0fdfe62b99", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -267,7 +267,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n       pragma Unreferenced (Prio);\n \n@@ -283,7 +283,9 @@ package body System.Task_Primitives.Operations is\n       end if;\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level)\n+   is\n       pragma Unreferenced (Level);\n \n       Result : Interfaces.C.int;\n@@ -302,14 +304,14 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L);\n@@ -320,7 +322,9 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean)\n+   is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_lock (L);\n@@ -332,7 +336,7 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L           : access RTS_Lock;\n+     (L           : not null access RTS_Lock;\n       Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n@@ -356,7 +360,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -365,14 +370,16 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_unlock (L);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n       Result : Interfaces.C.int;\n    begin\n       if not Single_Lock or else Global_Lock then"}, {"sha": "272d8981aa685a56c559c2794d12013c95dbc331", "filename": "gcc/ada/s-taprop-lynxos.adb", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-lynxos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-lynxos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-lynxos.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -256,7 +256,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n       Attributes : aliased pthread_mutexattr_t;\n       Result : Interfaces.C.int;\n@@ -284,7 +284,9 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level)\n+   is\n       pragma Unreferenced (Level);\n \n       Attributes : aliased pthread_mutexattr_t;\n@@ -314,14 +316,14 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L.Mutex'Access);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L);\n@@ -332,7 +334,9 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean)\n+   is\n       Result : Interfaces.C.int;\n       T : constant Task_Id := Self;\n \n@@ -361,7 +365,7 @@ package body System.Task_Primitives.Operations is\n    --  No tricks on RTS_Locks\n \n    procedure Write_Lock\n-     (L : access RTS_Lock; Global_Lock : Boolean := False)\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n    begin\n@@ -384,7 +388,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -393,7 +398,7 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n       T : constant Task_Id := Self;\n \n@@ -408,7 +413,9 @@ package body System.Task_Primitives.Operations is\n       end if;\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n       Result : Interfaces.C.int;\n    begin\n       if not Single_Lock or else Global_Lock then\n@@ -432,7 +439,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Sleep\n      (Self_ID : Task_Id;\n-      Reason   : System.Tasking.Task_States)\n+      Reason  : System.Tasking.Task_States)\n    is\n       pragma Unreferenced (Reason);\n       Result : Interfaces.C.int;"}, {"sha": "5656932face1f44cd18a477c1b7f37890ff413a1", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -168,23 +168,23 @@ package body System.Task_Primitives.Operations is\n    -- Condition Variable Functions --\n    ----------------------------------\n \n-   procedure Initialize_Cond (Cond : access Condition_Variable);\n+   procedure Initialize_Cond (Cond : not null access Condition_Variable);\n    --  Initialize given condition variable Cond\n \n-   procedure Finalize_Cond (Cond : access Condition_Variable);\n+   procedure Finalize_Cond (Cond : not null access Condition_Variable);\n    --  Finalize given condition variable Cond\n \n-   procedure Cond_Signal (Cond : access Condition_Variable);\n+   procedure Cond_Signal (Cond : not null access Condition_Variable);\n    --  Signal condition variable Cond\n \n    procedure Cond_Wait\n-     (Cond : access Condition_Variable;\n-      L    : access RTS_Lock);\n+     (Cond : not null access Condition_Variable;\n+      L    : not null access RTS_Lock);\n    --  Wait on conditional variable Cond, using lock L\n \n    procedure Cond_Timed_Wait\n-     (Cond      : access Condition_Variable;\n-      L         : access RTS_Lock;\n+     (Cond      : not null access Condition_Variable;\n+      L         : not null access RTS_Lock;\n       Rel_Time  : Duration;\n       Timed_Out : out Boolean;\n       Status    : out Integer);\n@@ -198,7 +198,7 @@ package body System.Task_Primitives.Operations is\n    -- Initialize_Cond --\n    ---------------------\n \n-   procedure Initialize_Cond (Cond : access Condition_Variable) is\n+   procedure Initialize_Cond (Cond : not null access Condition_Variable) is\n       hEvent : HANDLE;\n \n    begin\n@@ -214,7 +214,7 @@ package body System.Task_Primitives.Operations is\n    --  No such problem here, DosCloseEventSem has been derived.\n    --  What does such refer to in above comment???\n \n-   procedure Finalize_Cond (Cond : access Condition_Variable) is\n+   procedure Finalize_Cond (Cond : not null access Condition_Variable) is\n       Result : BOOL;\n    begin\n       Result := CloseHandle (HANDLE (Cond.all));\n@@ -225,7 +225,7 @@ package body System.Task_Primitives.Operations is\n    -- Cond_Signal --\n    -----------------\n \n-   procedure Cond_Signal (Cond : access Condition_Variable) is\n+   procedure Cond_Signal (Cond : not null access Condition_Variable) is\n       Result : BOOL;\n    begin\n       Result := SetEvent (HANDLE (Cond.all));\n@@ -243,8 +243,8 @@ package body System.Task_Primitives.Operations is\n    --                  L is locked.\n \n    procedure Cond_Wait\n-     (Cond : access Condition_Variable;\n-      L    : access RTS_Lock)\n+     (Cond : not null access Condition_Variable;\n+      L    : not null access RTS_Lock)\n    is\n       Result      : DWORD;\n       Result_Bool : BOOL;\n@@ -276,8 +276,8 @@ package body System.Task_Primitives.Operations is\n    --                  L is locked.\n \n    procedure Cond_Timed_Wait\n-     (Cond      : access Condition_Variable;\n-      L         : access RTS_Lock;\n+     (Cond      : not null access Condition_Variable;\n+      L         : not null access RTS_Lock;\n       Rel_Time  : Duration;\n       Timed_Out : out Boolean;\n       Status    : out Integer)\n@@ -385,15 +385,17 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n    begin\n       InitializeCriticalSection (L.Mutex'Access);\n       L.Owner_Priority := 0;\n       L.Priority := Prio;\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level)\n+   is\n       pragma Unreferenced (Level);\n    begin\n       InitializeCriticalSection (CRITICAL_SECTION (L.all)'Unrestricted_Access);\n@@ -403,12 +405,12 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n    begin\n       DeleteCriticalSection (L.Mutex'Access);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n    begin\n       DeleteCriticalSection (CRITICAL_SECTION (L.all)'Unrestricted_Access);\n    end Finalize_Lock;\n@@ -417,7 +419,8 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       L.Owner_Priority := Get_Priority (Self);\n \n@@ -432,7 +435,7 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L           : access RTS_Lock;\n+     (L           : not null access RTS_Lock;\n       Global_Lock : Boolean := False)\n    is\n    begin\n@@ -453,7 +456,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -462,12 +466,13 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n    begin\n       LeaveCriticalSection (L.Mutex'Access);\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False) is\n    begin\n       if not Single_Lock or else Global_Lock then\n          LeaveCriticalSection (CRITICAL_SECTION (L.all)'Unrestricted_Access);"}, {"sha": "315db0e8e56b78b38e179af8394250a38662ed10", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -287,7 +287,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n       Attributes : aliased pthread_mutexattr_t;\n       Result : Interfaces.C.int;\n@@ -327,7 +327,9 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level)\n+   is\n       pragma Warnings (Off, Level);\n \n       Attributes : aliased pthread_mutexattr_t;\n@@ -372,15 +374,15 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n \n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n       Result : Interfaces.C.int;\n \n    begin\n@@ -392,7 +394,9 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean)\n+   is\n       Result : Interfaces.C.int;\n \n    begin\n@@ -405,7 +409,7 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L           : access RTS_Lock;\n+     (L           : not null access RTS_Lock;\n       Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n@@ -431,7 +435,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -440,15 +445,17 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n \n    begin\n       Result := pthread_mutex_unlock (L);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n       Result : Interfaces.C.int;\n \n    begin\n@@ -474,7 +481,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Sleep\n      (Self_ID : Task_Id;\n-      Reason   : System.Tasking.Task_States)\n+      Reason  : System.Tasking.Task_States)\n    is\n       pragma Warnings (Off, Reason);\n \n@@ -949,12 +956,19 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n \n       if T.Common.Task_Info /= Default_Scope then\n+         case T.Common.Task_Info is\n+            when System.Task_Info.Process_Scope =>\n+               Result := pthread_attr_setscope\n+                           (Attributes'Access, PTHREAD_SCOPE_PROCESS);\n+\n+            when System.Task_Info.System_Scope =>\n+               Result := pthread_attr_setscope\n+                           (Attributes'Access, PTHREAD_SCOPE_SYSTEM);\n \n-         --  We are assuming that Scope_Type has the same values than the\n-         --  corresponding C macros\n+            when System.Task_Info.Default_Scope =>\n+               Result := 0;\n+         end case;\n \n-         Result := pthread_attr_setscope\n-           (Attributes'Access, Task_Info_Type'Pos (T.Common.Task_Info));\n          pragma Assert (Result = 0);\n       end if;\n "}, {"sha": "c17bf6d958ff89c0300e3e00c998de34d661d492", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -168,8 +168,8 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Handler\n      (Sig     : Signal;\n-      Code    : access siginfo_t;\n-      Context : access ucontext_t);\n+      Code    : not null access siginfo_t;\n+      Context : not null access ucontext_t);\n    --  Target-dependent binding of inter-thread Abort signal to\n    --  the raising of the Abort_Signal exception.\n    --  See also comments in 7staprop.adb\n@@ -259,8 +259,8 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Handler\n      (Sig     : Signal;\n-      Code    : access siginfo_t;\n-      Context : access ucontext_t)\n+      Code    : not null access siginfo_t;\n+      Context : not null access ucontext_t)\n    is\n       pragma Unreferenced (Sig);\n       pragma Unreferenced (Code);\n@@ -535,7 +535,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n       Result : Interfaces.C.int;\n \n@@ -555,7 +555,7 @@ package body System.Task_Primitives.Operations is\n    end Initialize_Lock;\n \n    procedure Initialize_Lock\n-     (L     : access RTS_Lock;\n+     (L     : not null access RTS_Lock;\n       Level : Lock_Level)\n    is\n       Result : Interfaces.C.int;\n@@ -575,7 +575,7 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n \n    begin\n@@ -584,7 +584,7 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n       Result : Interfaces.C.int;\n \n    begin\n@@ -597,7 +597,9 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean)\n+   is\n       Result : Interfaces.C.int;\n \n    begin\n@@ -637,7 +639,7 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L          : access RTS_Lock;\n+     (L          : not null access RTS_Lock;\n      Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n@@ -667,7 +669,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -676,7 +679,7 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n       Result  : Interfaces.C.int;\n \n    begin\n@@ -700,7 +703,9 @@ package body System.Task_Primitives.Operations is\n       end if;\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n       Result : Interfaces.C.int;\n    begin\n       if not Single_Lock or else Global_Lock then"}, {"sha": "cf959e35e12e27a7bcf32e5e07a0ad8554f04591", "filename": "gcc/ada/s-taprop-tru64.adb", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-tru64.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -242,7 +242,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock\n      (Prio : System.Any_Priority;\n-      L    : access Lock)\n+      L    : not null access Lock)\n    is\n       Attributes : aliased pthread_mutexattr_t;\n       Result     : Interfaces.C.int;\n@@ -271,7 +271,9 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level)\n+   is\n       pragma Unreferenced (Level);\n \n       Attributes : aliased pthread_mutexattr_t;\n@@ -301,14 +303,14 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L.L'Access);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L);\n@@ -319,7 +321,9 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean)\n+   is\n       Result         : Interfaces.C.int;\n       Self_ID        : Task_Id;\n       All_Tasks_Link : Task_Id;\n@@ -350,7 +354,7 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L : access RTS_Lock; Global_Lock : Boolean := False)\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n    begin\n@@ -373,7 +377,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -382,14 +387,16 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_unlock (L.L'Access);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n       Result : Interfaces.C.int;\n    begin\n       if not Single_Lock or else Global_Lock then"}, {"sha": "f96534b45eb02c7faa11372d3b59e40225d3e662", "filename": "gcc/ada/s-taprop-vms.adb", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vms.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -197,7 +197,9 @@ package body System.Task_Primitives.Operations is\n    --  Therefore rasing Storage_Error in the following routines\n    --  should be able to be handled safely.\n \n-   procedure Initialize_Lock (Prio : System.Any_Priority; L : access Lock) is\n+   procedure Initialize_Lock\n+     (Prio : System.Any_Priority; L : not null access Lock)\n+   is\n       Attributes : aliased pthread_mutexattr_t;\n       Result     : Interfaces.C.int;\n \n@@ -223,7 +225,9 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result = 0);\n    end Initialize_Lock;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level)\n+   is\n       pragma Unreferenced (Level);\n \n       Attributes : aliased pthread_mutexattr_t;\n@@ -266,14 +270,14 @@ package body System.Task_Primitives.Operations is\n    -- Finalize_Lock --\n    -------------------\n \n-   procedure Finalize_Lock (L : access Lock) is\n+   procedure Finalize_Lock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L.L'Access);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n-   procedure Finalize_Lock (L : access RTS_Lock) is\n+   procedure Finalize_Lock (L : not null access RTS_Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_destroy (L);\n@@ -284,7 +288,9 @@ package body System.Task_Primitives.Operations is\n    -- Write_Lock --\n    ----------------\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean)\n+   is\n       Self_ID        : constant Task_Id := Self;\n       All_Tasks_Link : constant Task_Id := Self.Common.All_Tasks_Link;\n       Current_Prio   : System.Any_Priority;\n@@ -312,7 +318,7 @@ package body System.Task_Primitives.Operations is\n    end Write_Lock;\n \n    procedure Write_Lock\n-     (L           : access RTS_Lock;\n+     (L           : not null access RTS_Lock;\n       Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n@@ -336,7 +342,8 @@ package body System.Task_Primitives.Operations is\n    -- Read_Lock --\n    ---------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean) is\n    begin\n       Write_Lock (L, Ceiling_Violation);\n    end Read_Lock;\n@@ -345,14 +352,16 @@ package body System.Task_Primitives.Operations is\n    -- Unlock --\n    ------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Unlock (L : not null access Lock) is\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_mutex_unlock (L.L'Access);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False)\n+   is\n       Result : Interfaces.C.int;\n    begin\n       if not Single_Lock or else Global_Lock then"}, {"sha": "aca25c3cd2f612a4ddc1825c92c5404d617e3341", "filename": "gcc/ada/s-taprop.ads", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-taprop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -137,8 +137,10 @@ package System.Task_Primitives.Operations is\n    --  call specified below. See locking rules in System.Tasking (spec) for\n    --  more details.\n \n-   procedure Initialize_Lock (Prio : System.Any_Priority; L : access Lock);\n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level);\n+   procedure Initialize_Lock\n+     (Prio : System.Any_Priority; L : not null access Lock);\n+   procedure Initialize_Lock\n+     (L : not null access RTS_Lock; Level : Lock_Level);\n    pragma Inline (Initialize_Lock);\n    --  Initialize a lock object.\n    --\n@@ -160,15 +162,18 @@ package System.Task_Primitives.Operations is\n    --\n    --  These operations raise Storage_Error if a lack of storage is detected.\n \n-   procedure Finalize_Lock (L : access Lock);\n-   procedure Finalize_Lock (L : access RTS_Lock);\n+   procedure Finalize_Lock (L : not null access Lock);\n+   procedure Finalize_Lock (L : not null access RTS_Lock);\n    pragma Inline (Finalize_Lock);\n    --  Finalize a lock object, freeing any resources allocated by the\n    --  corresponding Initialize_Lock operation.\n \n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean);\n-   procedure Write_Lock (L : access RTS_Lock; Global_Lock : Boolean := False);\n-   procedure Write_Lock (T : ST.Task_Id);\n+   procedure Write_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean);\n+   procedure Write_Lock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False);\n+   procedure Write_Lock\n+     (T : ST.Task_Id);\n    pragma Inline (Write_Lock);\n    --  Lock a lock object for write access. After this operation returns,\n    --  the calling task holds write permission for the lock object. No other\n@@ -192,7 +197,8 @@ package System.Task_Primitives.Operations is\n    --  holds T's lock, or has interrupt-level priority. Finalization of the\n    --  per-task lock is implicit in Exit_Task.\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean);\n+   procedure Read_Lock\n+     (L : not null access Lock; Ceiling_Violation : out Boolean);\n    pragma Inline (Read_Lock);\n    --  Lock a lock object for read access. After this operation returns,\n    --  the calling task has non-exclusive read permission for the logical\n@@ -214,9 +220,12 @@ package System.Task_Primitives.Operations is\n    --  potential write access, and (3) implementations of priority ceiling\n    --  locking that make a reader-writer distinction have higher overhead.\n \n-   procedure Unlock (L : access Lock);\n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False);\n-   procedure Unlock (T : ST.Task_Id);\n+   procedure Unlock\n+     (L : not null access Lock);\n+   procedure Unlock\n+     (L : not null access RTS_Lock; Global_Lock : Boolean := False);\n+   procedure Unlock\n+     (T : ST.Task_Id);\n    pragma Inline (Unlock);\n    --  Unlock a locked lock object.\n    --"}, {"sha": "1525bd9ea1e4c0e0a6c42266a33bfbf03a4c63ce", "filename": "gcc/ada/s-tarest.ads", "status": "modified", "additions": 28, "deletions": 31, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-tarest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-tarest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -144,10 +144,10 @@ package System.Tasking.Restricted.Stages is\n    --  Priority is the task's priority (assumed to be in the\n    --  System.Any_Priority'Range)\n    --\n-   --  Stack_Address is the start address of the stack associated to the\n-   --  task, in case it has been preallocated by the compiler; it is equal\n-   --  to Null_Address when the stack needs to be allocated by the\n-   --  underlying operating system.\n+   --  Stack_Address is the start address of the stack associated to the task,\n+   --  in case it has been preallocated by the compiler; it is equal to\n+   --  Null_Address when the stack needs to be allocated by the underlying\n+   --  operating system.\n    --\n    --  Size is the stack size of the task to create\n    --\n@@ -156,21 +156,19 @@ package System.Tasking.Restricted.Stages is\n    --\n    --  State is the compiler generated task's procedure body\n    --\n-   --  Discriminants is a pointer to a limited record whose discriminants\n-   --  are those of the task to create. This parameter should be passed as\n-   --  the single argument to State.\n+   --  Discriminants is a pointer to a limited record whose discriminants are\n+   --  those of the task to create. This parameter should be passed as the\n+   --  single argument to State.\n    --\n    --  Elaborated is a pointer to a Boolean that must be set to true on exit\n    --  if the task could be sucessfully elaborated.\n    --\n    --  Chain is a linked list of task that needs to be created. On exit,\n-   --  Created_Task.Activation_Link will be Chain.T_ID, and Chain.T_ID\n-   --  will be Created_Task (e.g the created task will be linked at the front\n-   --  of Chain).\n+   --  Created_Task.Activation_Link will be Chain.T_ID, and Chain.T_ID will be\n+   --  Created_Task (the created task will be linked at the front of Chain).\n    --\n-   --  Task_Image is a string created by the compiler that the\n-   --  run time can store to ease the debugging and the\n-   --  Ada.Task_Identification facility.\n+   --  Task_Image is a string created by the compiler that the run time can\n+   --  store to ease the debugging and the Ada.Task_Identification facility.\n    --\n    --  Created_Task is the resulting task.\n    --\n@@ -188,29 +186,28 @@ package System.Tasking.Restricted.Stages is\n    --  version of this procedure had code to reverse the chain, so as to\n    --  activate the tasks in the order of declaration. This might be nice, but\n    --  it is not needed if priority-based scheduling is supported, since all\n-   --  the activated tasks synchronize on the activators lock before they\n-   --  start activating and so they should start activating in priority order.\n+   --  the activated tasks synchronize on the activators lock before they start\n+   --  activating and so they should start activating in priority order.\n \n    procedure Complete_Restricted_Activation;\n-   --  Compiler interface only. Do not call from within the RTS.\n-   --  This should be called from the task body at the end of\n-   --  the elaboration code for its declarative part.\n-   --  Decrement the count of tasks to be activated by the activator and\n-   --  wake it up so it can check to see if all tasks have been activated.\n-   --  Except for the environment task, which should never call this procedure,\n-   --  T.Activator should only be null iff T has completed activation.\n+   --  Compiler interface only. Do not call from within the RTS. This should be\n+   --  called from the task body at the end of the elaboration code for its\n+   --  declarative part. Decrement the count of tasks to be activated by the\n+   --  activator and wake it up so it can check to see if all tasks have been\n+   --  activated. Except for the environment task, which should never call this\n+   --  procedure, T.Activator should only be null iff T has completed\n+   --  activation.\n \n    procedure Complete_Restricted_Task;\n-   --  Compiler interface only. Do not call from within the RTS.\n-   --  This should be called from an implicit at-end handler\n-   --  associated with the task body, when it completes.\n-   --  From this point, the current task will become not callable.\n-   --  If the current task have not completed activation, this should be done\n-   --  now in order to wake up the activator (the environment task).\n+   --  Compiler interface only. Do not call from within the RTS. This should be\n+   --  called from an implicit at-end handler associated with the task body,\n+   --  when it completes. From this point, the current task will become not\n+   --  callable. If the current task have not completed activation, this should\n+   --  be done now in order to wake up the activator (the environment task).\n \n    function Restricted_Terminated (T : Task_Id) return Boolean;\n-   --  Compiler interface only. Do not call from within the RTS.\n-   --  This is called by the compiler to implement the 'Terminated attribute.\n+   --  Compiler interface only. Do not call from within the RTS. This is called\n+   --  by the compiler to implement the 'Terminated attribute.\n    --\n    --  source code:\n    --     T1'Terminated"}, {"sha": "c2718af3f6043fc5a19861277840f220c79c4fdf", "filename": "gcc/ada/s-traceb-hpux.adb", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-traceb-hpux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-traceb-hpux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traceb-hpux.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2005, AdaCore                     --\n+--                     Copyright (C) 1999-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -228,17 +228,18 @@ package body System.Traceback is\n    --  of shared library code, the offset from the beginning of the library\n    --  is expected as Pc.\n \n-   procedure U_init_frame_record (Frame : access CFD);\n+   procedure U_init_frame_record (Frame : not null access CFD);\n    pragma Import (C, U_init_frame_record, \"U_init_frame_record\");\n \n-   procedure U_prep_frame_rec_for_unwind (Frame : access CFD);\n+   procedure U_prep_frame_rec_for_unwind (Frame : not null access CFD);\n    pragma Import (C, U_prep_frame_rec_for_unwind,\n                     \"U_prep_frame_rec_for_unwind\");\n \n    --  Fetch the description data of the frame in which these two procedures\n    --  are called.\n \n-   function U_get_u_rlo (Cur : access CFD; Prev : access PFD) return Integer;\n+   function U_get_u_rlo\n+     (Cur : not null access CFD; Prev : not null access PFD) return Integer;\n    pragma Import (C, U_get_u_rlo, \"U_IS_STUB_OR_CALLX\");\n    --  From a complete current frame with a return location possibly located\n    --  into a linker generated stub, and basic information about the previous\n@@ -251,8 +252,8 @@ package body System.Traceback is\n    --  in a shared library, or something non null otherwise.\n \n    function U_get_previous_frame_x\n-     (current_frame  : access CFD;\n-      previous_frame : access PFD;\n+     (current_frame  : not null access CFD;\n+      previous_frame : not null access PFD;\n       previous_size  : Integer) return Integer;\n    pragma Import (C, U_get_previous_frame_x, \"U_get_previous_frame_x\");\n    --  Fetch the data describing the \"previous\" frame relatively to the\n@@ -316,23 +317,24 @@ package body System.Traceback is\n \n       --  The backtracing process needs a set of subprograms :\n \n-      function UWD_For_RLO_Of (Frame : access CFD) return UWD_Ptr;\n+      function UWD_For_RLO_Of (Frame : not null access CFD) return UWD_Ptr;\n       --  Return an access to the unwind descriptor for the caller of\n       --  a given frame, using only the provided return location.\n \n-      function UWD_For_Caller_Of (Frame : access CFD) return UWD_Ptr;\n+      function UWD_For_Caller_Of (Frame : not null access CFD) return UWD_Ptr;\n       --  Return an access to the unwind descriptor for the user code caller\n       --  of a given frame, or null if the information is not available.\n \n-      function Pop_Frame (Frame : access CFD) return Boolean;\n+      function Pop_Frame (Frame : not null access CFD) return Boolean;\n       --  Update the provided machine state structure so that it reflects\n       --  the state one call frame \"above\" the initial one.\n       --\n       --  Return True if the operation has been successful, False otherwise.\n       --  Failure typically occurs when the top of the call stack has been\n       --  reached.\n \n-      function Prepare_For_Unwind_Of (Frame : access CFD) return Boolean;\n+      function Prepare_For_Unwind_Of\n+        (Frame : not null access CFD) return Boolean;\n       --  Perform the necessary adaptations to the machine state before\n       --  calling the unwinder. Currently used for the specific case of\n       --  dynamically sized previous frames.\n@@ -345,7 +347,7 @@ package body System.Traceback is\n       -- Pop_Frame --\n       ---------------\n \n-      function Pop_Frame (Frame : access CFD) return Boolean is\n+      function Pop_Frame (Frame : not null access CFD) return Boolean is\n          Up_Frame    : aliased PFD;\n          State_Ready : Boolean;\n \n@@ -391,7 +393,8 @@ package body System.Traceback is\n       -- Prepare_State_For_Unwind_Of --\n       ---------------------------------\n \n-      function Prepare_For_Unwind_Of (Frame : access CFD) return Boolean\n+      function Prepare_For_Unwind_Of\n+        (Frame : not null access CFD) return Boolean\n       is\n          Caller_UWD    : UWD_Ptr;\n          FP_Adjustment : Integer;\n@@ -453,7 +456,7 @@ package body System.Traceback is\n       -- UWD_For_Caller_Of --\n       -----------------------\n \n-      function UWD_For_Caller_Of (Frame : access CFD) return UWD_Ptr\n+      function UWD_For_Caller_Of (Frame : not null access CFD) return UWD_Ptr\n       is\n          UWD_Access : UWD_Ptr;\n \n@@ -499,7 +502,7 @@ package body System.Traceback is\n       -- UWD_For_RLO_Of --\n       --------------------\n \n-      function UWD_For_RLO_Of (Frame : access CFD) return UWD_Ptr\n+      function UWD_For_RLO_Of (Frame : not null access CFD) return UWD_Ptr\n       is\n          UWD_Address : Address;\n "}, {"sha": "3af5cad34a05c9c6f49d6e5b4292ae7266e89777", "filename": "gcc/ada/s-valdec.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valdec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valdec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valdec.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,7 +46,7 @@ package body System.Val_Dec is\n \n    function Scan_Decimal\n      (Str   : String;\n-      Ptr   : access Integer;\n+      Ptr   : not null access Integer;\n       Max   : Integer;\n       Scale : Integer) return Integer\n    is"}, {"sha": "61d9c076cd0ef397ac2d035366ad221532c81ef9", "filename": "gcc/ada/s-valdec.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valdec.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1992-2005, Free Software Foundation, Inc.       --\n+--            Copyright (C) 1992-2006, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,7 +40,7 @@ package System.Val_Dec is\n \n    function Scan_Decimal\n      (Str   : String;\n-      Ptr   : access Integer;\n+      Ptr   : not null access Integer;\n       Max   : Integer;\n       Scale : Integer) return Integer;\n    --  This function scans the string starting at Str (Ptr.all) for a valid"}, {"sha": "1e2524b390cb864c5e6a1d4283c9c88e55b0b820", "filename": "gcc/ada/s-valint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valint.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -43,7 +43,7 @@ package body System.Val_Int is\n \n    function Scan_Integer\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return Integer\n    is\n       Uval : Unsigned;"}, {"sha": "8b8a4c7a5ca910457d6250b32e81514d223df6d8", "filename": "gcc/ada/s-valint.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valint.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@ package System.Val_Int is\n \n    function Scan_Integer\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return Integer;\n    --  This function scans the string starting at Str (Ptr.all) for a valid\n    --  integer according to the syntax described in (RM 3.5(43)). The substring"}, {"sha": "95a7271c0bb1110902511249430f0a7b4c08cc9f", "filename": "gcc/ada/s-vallld.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-vallld.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-vallld.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vallld.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,7 +45,7 @@ package body System.Val_LLD is\n \n    function Scan_Long_Long_Decimal\n      (Str   : String;\n-      Ptr   : access Integer;\n+      Ptr   : not null access Integer;\n       Max   : Integer;\n       Scale : Integer) return Long_Long_Integer\n    is"}, {"sha": "caed56e21b596a1367b37bb1c168f16756c01d09", "filename": "gcc/ada/s-vallld.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-vallld.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-vallld.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vallld.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,7 +40,7 @@ package System.Val_LLD is\n \n    function Scan_Long_Long_Decimal\n      (Str   : String;\n-      Ptr   : access Integer;\n+      Ptr   : not null access Integer;\n       Max   : Integer;\n       Scale : Integer) return Long_Long_Integer;\n    --  This function scans the string starting at Str (Ptr.all) for a valid"}, {"sha": "20f160c939facb5b5518e3c8781dacfa2aad49c9", "filename": "gcc/ada/s-vallli.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-vallli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-vallli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vallli.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -43,7 +43,7 @@ package body System.Val_LLI is\n \n    function Scan_Long_Long_Integer\n      (Str  : String;\n-      Ptr  : access Integer;\n+      Ptr  : not null access Integer;\n       Max  : Integer) return Long_Long_Integer\n    is\n       Uval : Long_Long_Unsigned;"}, {"sha": "c5c1bf9f856a76d022fa520feb68847c9569f063", "filename": "gcc/ada/s-vallli.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-vallli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-vallli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vallli.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@ package System.Val_LLI is\n \n    function Scan_Long_Long_Integer\n      (Str  : String;\n-      Ptr  : access Integer;\n+      Ptr  : not null access Integer;\n       Max  : Integer) return Long_Long_Integer;\n    --  This function scans the string starting at Str (Ptr.all) for a valid\n    --  integer according to the syntax described in (RM 3.5(43)). The substring"}, {"sha": "abbbaa440f04e98bc36890a534ab1aefa789ae57", "filename": "gcc/ada/s-valllu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valllu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valllu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valllu.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -42,7 +42,7 @@ package body System.Val_LLU is\n \n    function Scan_Raw_Long_Long_Unsigned\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return Long_Long_Unsigned\n    is\n       P : Integer;\n@@ -271,7 +271,7 @@ package body System.Val_LLU is\n \n    function Scan_Long_Long_Unsigned\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return Long_Long_Unsigned\n    is\n       Start : Positive;"}, {"sha": "88a6e4cd915f2d22fe12daf2da4493045cedf877", "filename": "gcc/ada/s-valllu.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valllu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valllu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valllu.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -41,7 +41,7 @@ package System.Val_LLU is\n \n    function Scan_Raw_Long_Long_Unsigned\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return System.Unsigned_Types.Long_Long_Unsigned;\n    --  This function scans the string starting at Str (Ptr.all) for a valid\n    --  integer according to the syntax described in (RM 3.5(43)). The substring\n@@ -71,7 +71,7 @@ package System.Val_LLU is\n \n    function Scan_Long_Long_Unsigned\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return System.Unsigned_Types.Long_Long_Unsigned;\n    --  Same as Scan_Raw_Long_Long_Unsigned, except scans optional leading\n    --  blanks, and an optional leading plus sign."}, {"sha": "60f48739dab350234199a9fc848de39a0f80ac1c", "filename": "gcc/ada/s-valrea.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valrea.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,7 +42,7 @@ package body System.Val_Real is\n \n    function Scan_Real\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return Long_Long_Float\n    is\n       procedure Reset;"}, {"sha": "0c3510dc3230420feb5068989f1074592700fa68", "filename": "gcc/ada/s-valrea.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valrea.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,7 @@ package System.Val_Real is\n \n    function Scan_Real\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return Long_Long_Float;\n    --  This function scans the string starting at Str (Ptr.all) for a valid\n    --  real literal according to the syntax described in (RM 3.5(43)). The"}, {"sha": "3d09321f21061d26b8c3dc6b1ccc14b4b2adc221", "filename": "gcc/ada/s-valuns.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valuns.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valuns.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valuns.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -42,7 +42,7 @@ package body System.Val_Uns is\n \n    function Scan_Raw_Unsigned\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return Unsigned\n    is\n       P : Integer;\n@@ -268,7 +268,7 @@ package body System.Val_Uns is\n \n    function Scan_Unsigned\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return Unsigned\n    is\n       Start : Positive;"}, {"sha": "80695dd386c047b36efd99f4edb1320fc644e469", "filename": "gcc/ada/s-valuns.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valuns.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valuns.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valuns.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -41,7 +41,7 @@ package System.Val_Uns is\n \n    function Scan_Raw_Unsigned\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return System.Unsigned_Types.Unsigned;\n    --  This function scans the string starting at Str (Ptr.all) for a valid\n    --  integer according to the syntax described in (RM 3.5(43)). The substring\n@@ -71,7 +71,7 @@ package System.Val_Uns is\n \n    function Scan_Unsigned\n      (Str : String;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer) return System.Unsigned_Types.Unsigned;\n    --  Same as Scan_Raw_Unsigned, except scans optional leading\n    --  blanks, and an optional leading plus sign."}, {"sha": "f2ed3217e2bc186eb846c76e05a654f08583ee8b", "filename": "gcc/ada/s-valuti.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valuti.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valuti.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valuti.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -81,7 +81,7 @@ package body System.Val_Util is\n \n    function Scan_Exponent\n      (Str  : String;\n-      Ptr  : access Integer;\n+      Ptr  : not null access Integer;\n       Max  : Integer;\n       Real : Boolean := False) return Integer\n    is\n@@ -165,7 +165,7 @@ package body System.Val_Util is\n \n    procedure Scan_Plus_Sign\n      (Str   : String;\n-      Ptr   : access Integer;\n+      Ptr   : not null access Integer;\n       Max   : Integer;\n       Start : out Positive)\n    is\n@@ -209,7 +209,7 @@ package body System.Val_Util is\n \n    procedure Scan_Sign\n      (Str   : String;\n-      Ptr   : access Integer;\n+      Ptr   : not null access Integer;\n       Max   : Integer;\n       Minus : out Boolean;\n       Start : out Positive)\n@@ -286,7 +286,7 @@ package body System.Val_Util is\n    procedure Scan_Underscore\n      (Str : String;\n       P   : in out Natural;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer;\n       Ext : Boolean)\n    is"}, {"sha": "90422e888163db4bda7f0ed27e9b0f30dea939e2", "filename": "gcc/ada/s-valuti.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valuti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fs-valuti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valuti.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -49,7 +49,7 @@ package System.Val_Util is\n \n    procedure Scan_Sign\n      (Str   : String;\n-      Ptr   : access Integer;\n+      Ptr   : not null access Integer;\n       Max   : Integer;\n       Minus : out Boolean;\n       Start : out Positive);\n@@ -72,15 +72,15 @@ package System.Val_Util is\n \n    procedure Scan_Plus_Sign\n      (Str   : String;\n-      Ptr   : access Integer;\n+      Ptr   : not null access Integer;\n       Max   : Integer;\n       Start : out Positive);\n    --  Same as Scan_Sign, but allows only plus, not minus.\n    --  This is used for modular types.\n \n    function Scan_Exponent\n      (Str  : String;\n-      Ptr  : access Integer;\n+      Ptr  : not null access Integer;\n       Max  : Integer;\n       Real : Boolean := False) return Integer;\n    --  Called to scan a possible exponent. Str, Ptr, Max are as described above\n@@ -101,7 +101,7 @@ package System.Val_Util is\n    procedure Scan_Underscore\n      (Str : String;\n       P   : in out Natural;\n-      Ptr : access Integer;\n+      Ptr : not null access Integer;\n       Max : Integer;\n       Ext : Boolean);\n    --  Called if an underscore is encountered while scanning digits. Str (P)"}, {"sha": "7fdf72d782fb6c4abf101cfb685dd90770f302e3", "filename": "gcc/ada/sequenio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fsequenio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fsequenio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsequenio.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "f762602778ea1c1ca53d3eef7b1f6ba525b78d1a", "filename": "gcc/ada/sinput-c.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fsinput-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fsinput-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -24,12 +24,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Namet;  use Namet;\n+with Opt;    use Opt;\n+with System; use System;\n+\n with Ada.Unchecked_Conversion;\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n-with Namet;       use Namet;\n-with Opt;         use Opt;\n-with System;      use System;\n \n package body Sinput.C is\n "}, {"sha": "9c213e9a4fd3aaf7ebbeb038f8b312299b6100ef", "filename": "gcc/ada/text_io.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Ftext_io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Ftext_io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftext_io.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "7937020874ab4144f2cf61be907b08c2d9096826", "filename": "gcc/ada/unchconv.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Funchconv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Funchconv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funchconv.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "4735a5207914507c89d073db40963bae2a685ec8", "filename": "gcc/ada/unchdeal.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Funchdeal.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Funchdeal.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funchdeal.ads?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --"}, {"sha": "d48a99480fefa81917ca1032dee36231abb73ac0", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90e94c7f76e9dcff8f225e3b86ce61e4124a422/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=d90e94c7f76e9dcff8f225e3b86ce61e4124a422", "patch": "@@ -53,7 +53,7 @@ package body Xref_Lib is\n    --  the .ali files\n \n    procedure Parse_EOL\n-     (Source                 : access String;\n+     (Source                 : not null access String;\n       Ptr                    : in out Positive;\n       Skip_Continuation_Line : Boolean := False);\n    --  On return Source (Ptr) is the first character of the next line\n@@ -98,7 +98,7 @@ package body Xref_Lib is\n    --  The entity will never be reported as unreferenced by gnatxref -u\n \n    procedure Parse_Token\n-     (Source    : access String;\n+     (Source    : not null access String;\n       Ptr       : in out Positive;\n       Token_Ptr : out Positive);\n    --  Skips any separators and stores the start of the token in Token_Ptr.\n@@ -107,7 +107,7 @@ package body Xref_Lib is\n    --  and ASCII.HT. Parse_Token will never skip to the next line.\n \n    procedure Parse_Number\n-     (Source : access String;\n+     (Source : not null access String;\n       Ptr    : in out Positive;\n       Number : out Natural);\n    --  Skips any separators and parses Source upto the first character that\n@@ -694,7 +694,7 @@ package body Xref_Lib is\n    ---------------\n \n    procedure Parse_EOL\n-     (Source                 : access String;\n+     (Source                 : not null access String;\n       Ptr                    : in out Positive;\n       Skip_Continuation_Line : Boolean := False)\n    is\n@@ -1143,7 +1143,7 @@ package body Xref_Lib is\n    ------------------\n \n    procedure Parse_Number\n-     (Source : access String;\n+     (Source : not null access String;\n       Ptr    : in out Positive;\n       Number : out Natural)\n    is\n@@ -1167,7 +1167,7 @@ package body Xref_Lib is\n    -----------------\n \n    procedure Parse_Token\n-     (Source    : access String;\n+     (Source    : not null access String;\n       Ptr       : in out Positive;\n       Token_Ptr : out Positive)\n    is"}]}