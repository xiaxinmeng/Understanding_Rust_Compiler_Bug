{"sha": "1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRkYzQ3YzA1ZTgwYWVkM2MzZWM1YjYzNmRkNzA2YzBkMDI2NGRiYw==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-10-16T09:55:32Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-10-16T09:55:32Z"}, "message": "aarch64.h (AARCH64_FL_DOTPROD): New.\n\n2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n\n\t* config/aarch64/aarch64.h (AARCH64_FL_DOTPROD): New.\n\t(AARCH64_ISA_DOTPROD, TARGET_DOTPROD): New.\n\t* config/aarch64/aarch64-c.c (aarch64_update_cpp_builtins): Add TARGET_DOTPROD.\n\t* config/aarch64/aarch64-option-extensions.def (dotprod): New.\n\t* config/aarch64/aarch64-cores.def (cortex-a55, cortex-a75): Enable TARGET_DOTPROD.\n\t(cortex-a75.cortex-a55): Likewise.\n\t* doc/invoke.texi (aarch64-feature-modifiers): Document dotprod.\n\nFrom-SVN: r253782", "tree": {"sha": "8e4a19452bdc43f17e9a6d84ba0e5d2c6bde6dbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4a19452bdc43f17e9a6d84ba0e5d2c6bde6dbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e109ba7bf7ff0b9bb1e7111303ded2c7011a1a"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "f4228ff23856b552cb48b6e1d5816a5f65658dbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "patch": "@@ -1,3 +1,13 @@\n+2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/aarch64.h (AARCH64_FL_DOTPROD): New.\n+\t(AARCH64_ISA_DOTPROD, TARGET_DOTPROD): New.\n+\t* config/aarch64/aarch64-c.c (aarch64_update_cpp_builtins): Add TARGET_DOTPROD.\n+\t* config/aarch64/aarch64-option-extensions.def (dotprod): New.\n+\t* config/aarch64/aarch64-cores.def (cortex-a55, cortex-a75): Enable TARGET_DOTPROD.\n+\t(cortex-a75.cortex-a55): Likewise.\n+\t* doc/invoke.texi (aarch64-feature-modifiers): Document dotprod.\n+\n 2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/arm/arm-builtins.c (arm_unsigned_uternop_qualifiers): New."}, {"sha": "c7d866f3b567bbb55bf2c5152c9d0729fc2eff2c", "filename": "gcc/config/aarch64/aarch64-c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fconfig%2Faarch64%2Faarch64-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fconfig%2Faarch64%2Faarch64-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-c.c?ref=1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "patch": "@@ -106,6 +106,7 @@ aarch64_update_cpp_builtins (cpp_reader *pfile)\n \n \n   aarch64_def_or_undef (TARGET_CRC32, \"__ARM_FEATURE_CRC32\", pfile);\n+  aarch64_def_or_undef (TARGET_DOTPROD, \"__ARM_FEATURE_DOTPROD\", pfile);\n \n   cpp_undef (pfile, \"__AARCH64_CMODEL_TINY__\");\n   cpp_undef (pfile, \"__AARCH64_CMODEL_SMALL__\");"}, {"sha": "16e44855872112c81db349e098f932edd52117be", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "patch": "@@ -83,8 +83,8 @@ AARCH64_CORE(\"thunderx2t99\",  thunderx2t99,  thunderx2t99, 8_1A,  AARCH64_FL_FOR\n /* ARMv8.2-A Architecture Processors.  */\n \n /* ARM ('A') cores. */\n-AARCH64_CORE(\"cortex-a55\",  cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC, cortexa53, 0x41, 0xd05, -1)\n-AARCH64_CORE(\"cortex-a75\",  cortexa75, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC, cortexa73, 0x41, 0xd0a, -1)\n+AARCH64_CORE(\"cortex-a55\",  cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa53, 0x41, 0xd05, -1)\n+AARCH64_CORE(\"cortex-a75\",  cortexa75, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa73, 0x41, 0xd0a, -1)\n \n /* ARMv8-A big.LITTLE implementations.  */\n \n@@ -95,6 +95,6 @@ AARCH64_CORE(\"cortex-a73.cortex-a53\",  cortexa73cortexa53, cortexa53, 8A,  AARCH\n \n /* ARM DynamIQ big.LITTLE configurations.  */\n \n-AARCH64_CORE(\"cortex-a75.cortex-a55\",  cortexa75cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC, cortexa73, 0x41, AARCH64_BIG_LITTLE (0xd0a, 0xd05), -1)\n+AARCH64_CORE(\"cortex-a75.cortex-a55\",  cortexa75cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa73, 0x41, AARCH64_BIG_LITTLE (0xd0a, 0xd05), -1)\n \n #undef AARCH64_CORE"}, {"sha": "2c808f0b9ef7ca037239040d6fd0b57c664c12e1", "filename": "gcc/config/aarch64/aarch64-option-extensions.def", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def?ref=1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "patch": "@@ -43,8 +43,8 @@\n AARCH64_OPT_EXTENSION(\"fp\", AARCH64_FL_FP, 0, AARCH64_FL_SIMD | AARCH64_FL_CRYPTO | AARCH64_FL_F16, \"fp\")\n \n /* Enabling \"simd\" also enables \"fp\".\n-   Disabling \"simd\" also disables \"crypto\".  */\n-AARCH64_OPT_EXTENSION(\"simd\", AARCH64_FL_SIMD, AARCH64_FL_FP, AARCH64_FL_CRYPTO, \"asimd\")\n+   Disabling \"simd\" also disables \"crypto\" and \"dotprod\".  */\n+AARCH64_OPT_EXTENSION(\"simd\", AARCH64_FL_SIMD, AARCH64_FL_FP, AARCH64_FL_CRYPTO | AARCH64_FL_DOTPROD, \"asimd\")\n \n /* Enabling \"crypto\" also enables \"fp\", \"simd\".\n    Disabling \"crypto\" just disables \"crypto\".  */\n@@ -67,4 +67,8 @@ AARCH64_OPT_EXTENSION(\"rcpc\", AARCH64_FL_RCPC, 0, 0, \"lrcpc\")\n    Disabling \"rdma\" just disables \"rdma\".  */\n AARCH64_OPT_EXTENSION(\"rdma\", AARCH64_FL_RDMA, AARCH64_FL_FP | AARCH64_FL_SIMD, 0, \"asimdrdm\")\n \n+/* Enabling \"dotprod\" also enables \"simd\".\n+   Disabling \"dotprod\" only disables \"dotprod\".  */\n+AARCH64_OPT_EXTENSION(\"dotprod\", AARCH64_FL_DOTPROD, AARCH64_FL_SIMD, 0, \"asimddp\")\n+\n #undef AARCH64_OPT_EXTENSION"}, {"sha": "98d93c69e23b6ddcf77985f142eeec3684826739", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "patch": "@@ -136,14 +136,15 @@ extern unsigned aarch64_architecture_version;\n #define AARCH64_FL_CRC        (1 << 3)\t/* Has CRC.  */\n /* ARMv8.1-A architecture extensions.  */\n #define AARCH64_FL_LSE\t      (1 << 4)  /* Has Large System Extensions.  */\n-#define AARCH64_FL_RDMA\t      (1 << 5)  /* Has Round Double Multiply Add.  */\n-#define AARCH64_FL_V8_1\t      (1 << 6)  /* Has ARMv8.1-A extensions.  */\n+#define AARCH64_FL_RDMA       (1 << 5)  /* Has Round Double Multiply Add.  */\n+#define AARCH64_FL_V8_1       (1 << 6)  /* Has ARMv8.1-A extensions.  */\n /* ARMv8.2-A architecture extensions.  */\n-#define AARCH64_FL_V8_2\t      (1 << 8)  /* Has ARMv8.2-A features.  */\n+#define AARCH64_FL_V8_2       (1 << 8)  /* Has ARMv8.2-A features.  */\n #define AARCH64_FL_F16\t      (1 << 9)  /* Has ARMv8.2-A FP16 extensions.  */\n /* ARMv8.3-A architecture extensions.  */\n-#define AARCH64_FL_V8_3\t      (1 << 10)  /* Has ARMv8.3-A features.  */\n-#define AARCH64_FL_RCPC\t      (1 << 11)  /* Has support for RCpc model.  */\n+#define AARCH64_FL_V8_3       (1 << 10)  /* Has ARMv8.3-A features.  */\n+#define AARCH64_FL_RCPC       (1 << 11)  /* Has support for RCpc model.  */\n+#define AARCH64_FL_DOTPROD    (1 << 12)  /* Has ARMv8.2-A Dot Product ins.  */\n \n /* Has FP and SIMD.  */\n #define AARCH64_FL_FPSIMD     (AARCH64_FL_FP | AARCH64_FL_SIMD)\n@@ -172,6 +173,7 @@ extern unsigned aarch64_architecture_version;\n #define AARCH64_ISA_V8_2\t   (aarch64_isa_flags & AARCH64_FL_V8_2)\n #define AARCH64_ISA_F16\t\t   (aarch64_isa_flags & AARCH64_FL_F16)\n #define AARCH64_ISA_V8_3\t   (aarch64_isa_flags & AARCH64_FL_V8_3)\n+#define AARCH64_ISA_DOTPROD\t   (aarch64_isa_flags & AARCH64_FL_DOTPROD)\n \n /* Crypto is an optional extension to AdvSIMD.  */\n #define TARGET_CRYPTO (TARGET_SIMD && AARCH64_ISA_CRYPTO)\n@@ -186,6 +188,9 @@ extern unsigned aarch64_architecture_version;\n #define TARGET_FP_F16INST (TARGET_FLOAT && AARCH64_ISA_F16)\n #define TARGET_SIMD_F16INST (TARGET_SIMD && AARCH64_ISA_F16)\n \n+/* Dot Product is an optional extension to AdvSIMD enabled through +dotprod.  */\n+#define TARGET_DOTPROD (TARGET_SIMD && AARCH64_ISA_DOTPROD)\n+\n /* ARMv8.3-A features.  */\n #define TARGET_ARMV8_3\t(AARCH64_ISA_V8_3)\n "}, {"sha": "b358e09b45d6019d7053cd677907f9aee9a3c7bd", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1ddc47c05e80aed3c3ec5b636dd706c0d0264dbc", "patch": "@@ -14382,6 +14382,8 @@ Enable FP16 extension.  This also enables floating-point instructions.\n Enable the RcPc extension.  This does not change code generation from GCC,\n but is passed on to the assembler, enabling inline asm statements to use\n instructions from the RcPc extension.\n+@item dotprod\n+Enable the Dot Product extension.  This also enables Advanced SIMD instructions.\n \n @end table\n "}]}