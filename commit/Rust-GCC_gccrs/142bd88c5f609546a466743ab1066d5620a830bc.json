{"sha": "142bd88c5f609546a466743ab1066d5620a830bc", "node_id": "C_kwDOANBUbNoAKDE0MmJkODhjNWY2MDk1NDZhNDY2NzQzYWIxMDY2ZDU2MjBhODMwYmM", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-02-15T10:47:51Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-02-15T10:51:35Z"}, "message": "testsuite, objective-c: Fix a testcase on Windows.\n\nWindows needs to use uintptr_t to represent an integral pointer type (long\nis not the right type there).\n\nPatch from 'nightstike'.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/testsuite/ChangeLog:\n\n\t* obj-c++.dg/proto-lossage-4.mm: Use uintptr_t for integral pointer\n\trepresentations.", "tree": {"sha": "da2ff1920c4e1da2245504086372d3480ccc2ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da2ff1920c4e1da2245504086372d3480ccc2ce9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/142bd88c5f609546a466743ab1066d5620a830bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/142bd88c5f609546a466743ab1066d5620a830bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/142bd88c5f609546a466743ab1066d5620a830bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/142bd88c5f609546a466743ab1066d5620a830bc/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b1b1b2d691d5cee4ebc40a01974ad5bccab22f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1b1b2d691d5cee4ebc40a01974ad5bccab22f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b1b1b2d691d5cee4ebc40a01974ad5bccab22f9"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "ff053bec7d0b6dcccdcd3b6eadaf5282e78f62e9", "filename": "gcc/testsuite/obj-c++.dg/proto-lossage-4.mm", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/142bd88c5f609546a466743ab1066d5620a830bc/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-4.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/142bd88c5f609546a466743ab1066d5620a830bc/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-4.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-4.mm?ref=142bd88c5f609546a466743ab1066d5620a830bc", "patch": "@@ -6,24 +6,26 @@\n /* One-line substitute for objc/objc.h */\n typedef struct objc_object { struct objc_class *class_pointer; } *id;\n \n+typedef __UINTPTR_TYPE__ uintptr_t;\n+\n @protocol Proto\n-- (long)someValue;\n+- (uintptr_t)someValue;\n @end\n \n @interface Obj\n-- (long)anotherValue;\n+- (uintptr_t)anotherValue;\n @end\n \n-long foo(void) {\n-  long receiver = 2;\n+uintptr_t foo(void) {\n+  uintptr_t receiver = 2;\n   Obj *objrcvr;\n   Obj <Proto> *objrcvr2;\n \n   /* NB: Since 'receiver' is an invalid ObjC message receiver, the compiler\n      should warn but then search for methods as if we were messaging 'id'.  */\n \n-  receiver += [receiver someValue]; /* { dg-warning \"invalid receiver type .long int.\" } */\n-  receiver += [receiver anotherValue]; /* { dg-warning \"invalid receiver type .long int.\" } */\n+  receiver += [receiver someValue]; /* { dg-warning \"invalid receiver type .uintptr_t.\" } */\n+  receiver += [receiver anotherValue]; /* { dg-warning \"invalid receiver type .uintptr_t.\" } */\n \n   receiver += [(Obj *)receiver someValue]; /* { dg-warning \".Obj. may not respond to .\\\\-someValue.\" } */\n /* { dg-error \"invalid conversion\" \"\" { target *-*-* } .-1 } */"}]}