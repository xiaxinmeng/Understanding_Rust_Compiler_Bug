{"sha": "61051ee5cfd59ee292984641d02caac85f6dfac3", "node_id": "C_kwDOANBUbNoAKDYxMDUxZWU1Y2ZkNTllZTI5Mjk4NDY0MWQwMmNhYWM4NWY2ZGZhYzM", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-30T09:47:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-30T11:14:33Z"}, "message": "tree-optimization/67196 - normalize use predicates earlier\n\nThe following makes sure to have use predicates simplified and\nnormalized before doing uninit_analysis::overlap because that\notherwise cannot pick up all flag setting cases.  This fixes\nhalf of the issue in PR67196 and conveniently resolves the\nXFAIL in gcc.dg/uninit-pred-7_a.c.\n\n\tPR tree-optimization/67196\n\t* gimple-predicate-analysis.cc (uninit_analysis::is_use_guarded):\n\tSimplify and normalize use prediates before first use.\n\n\t* gcc.dg/uninit-pred-7_a.c: Un-XFAIL.", "tree": {"sha": "dce5070db0c79cf98cbdf42918ff60dc04b8b7a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dce5070db0c79cf98cbdf42918ff60dc04b8b7a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61051ee5cfd59ee292984641d02caac85f6dfac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61051ee5cfd59ee292984641d02caac85f6dfac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61051ee5cfd59ee292984641d02caac85f6dfac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61051ee5cfd59ee292984641d02caac85f6dfac3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70b2e511fe4a55a0c3fc7538c86c8851babd585f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b2e511fe4a55a0c3fc7538c86c8851babd585f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b2e511fe4a55a0c3fc7538c86c8851babd585f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f8c63d24537a1d83aac28def6a4b51ed3dbbdb65", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61051ee5cfd59ee292984641d02caac85f6dfac3/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61051ee5cfd59ee292984641d02caac85f6dfac3/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=61051ee5cfd59ee292984641d02caac85f6dfac3", "patch": "@@ -2105,6 +2105,9 @@ uninit_analysis::is_use_guarded (gimple *use_stmt, basic_block use_bb,\n   if (!init_use_preds (use_preds, def_bb, use_bb))\n     return false;\n \n+  use_preds.simplify (use_stmt, /*is_use=*/true);\n+  use_preds.normalize (use_stmt, /*is_use=*/true);\n+\n   /* Try to prune the dead incoming phi edges.  */\n   if (!overlap (phi, opnds, visited, use_preds))\n     {\n@@ -2124,9 +2127,6 @@ uninit_analysis::is_use_guarded (gimple *use_stmt, basic_block use_bb,\n       m_phi_def_preds.normalize (phi);\n     }\n \n-  use_preds.simplify (use_stmt, /*is_use=*/true);\n-  use_preds.normalize (use_stmt, /*is_use=*/true);\n-\n   /* Return true if the predicate guarding the valid definition (i.e.,\n      *THIS) is a superset of the predicate guarding the use (i.e.,\n      USE_PREDS).  */"}, {"sha": "c2ba2a4248d707b8d2bd6d112d525c4d89984c8a", "filename": "gcc/testsuite/gcc.dg/uninit-pred-7_a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61051ee5cfd59ee292984641d02caac85f6dfac3/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pred-7_a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61051ee5cfd59ee292984641d02caac85f6dfac3/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pred-7_a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pred-7_a.c?ref=61051ee5cfd59ee292984641d02caac85f6dfac3", "patch": "@@ -23,7 +23,7 @@ int foo (int n, int l, int m, int r)\n       blah(v); /* { dg-bogus \"uninitialized\" \"bogus warning\" } */\n \n   if ( l )\n-      blah(v); /* { dg-bogus \"uninitialized\" \"bogus warning\" { xfail *-*-* } } */\n+      blah(v); /* { dg-bogus \"uninitialized\" \"bogus warning\" } */\n \n   return 0;\n }"}]}