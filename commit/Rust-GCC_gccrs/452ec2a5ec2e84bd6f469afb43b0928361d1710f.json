{"sha": "452ec2a5ec2e84bd6f469afb43b0928361d1710f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUyZWMyYTVlYzJlODRiZDZmNDY5YWZiNDNiMDkyODM2MWQxNzEwZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-29T08:36:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-29T08:36:04Z"}, "message": "re PR middle-end/69537 (Incorrect -Wmaybe-uninitialized warning with enum variable)\n\n2016-01-29  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/69537\n\t* match.pd: Allow all integral types when simplifying a\n\twidening or sign-changing conversion.\n\n\t* gcc.dg/uninit-21.c: New testcase.\n\nFrom-SVN: r232968", "tree": {"sha": "ad43494ad4d3cf0ebf9982485057ffb3a052ddef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad43494ad4d3cf0ebf9982485057ffb3a052ddef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/452ec2a5ec2e84bd6f469afb43b0928361d1710f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/452ec2a5ec2e84bd6f469afb43b0928361d1710f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/452ec2a5ec2e84bd6f469afb43b0928361d1710f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/452ec2a5ec2e84bd6f469afb43b0928361d1710f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8dffffd00c45584f9adc10472a7ad8907ea1c7f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dffffd00c45584f9adc10472a7ad8907ea1c7f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dffffd00c45584f9adc10472a7ad8907ea1c7f4"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "48c16d15af014bfe2945614c062e2c452e9ba56c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452ec2a5ec2e84bd6f469afb43b0928361d1710f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452ec2a5ec2e84bd6f469afb43b0928361d1710f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=452ec2a5ec2e84bd6f469afb43b0928361d1710f", "patch": "@@ -1,3 +1,9 @@\n+2016-01-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/69537\n+\t* match.pd: Allow all integral types when simplifying a\n+\twidening or sign-changing conversion.\n+\n 2016-01-28  Sebastian Pop  <s.pop@samsung.com>\n \n \t* graphite-isl-ast-to-gimple.c (get_rename_from_scev): Revert assert"}, {"sha": "63134114bdb6b9e7aaaa5eb059c6099fca727d2d", "filename": "gcc/match.pd", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452ec2a5ec2e84bd6f469afb43b0928361d1710f/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452ec2a5ec2e84bd6f469afb43b0928361d1710f/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=452ec2a5ec2e84bd6f469afb43b0928361d1710f", "patch": "@@ -2121,7 +2121,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (for cmp (simple_comparison)\n  (simplify\n   (cmp (convert@0 @00) (convert?@1 @10))\n-  (if (TREE_CODE (TREE_TYPE (@0)) == INTEGER_TYPE\n+  (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n        /* Disable this optimization if we're casting a function pointer\n \t  type on targets that require function pointer canonicalization.  */\n        && !(targetm.have_canonicalize_funcptr_for_compare ()"}, {"sha": "3c271847f7c7b2162bef10f2b12b5acd172b6a62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452ec2a5ec2e84bd6f469afb43b0928361d1710f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452ec2a5ec2e84bd6f469afb43b0928361d1710f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=452ec2a5ec2e84bd6f469afb43b0928361d1710f", "patch": "@@ -1,3 +1,8 @@\n+2016-01-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/69537\n+\t* gcc.dg/uninit-21.c: New testcase.\n+\n 2016-01-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/69459"}, {"sha": "68e2c6dbe50ea8ec31690bb525c9a14796ea9267", "filename": "gcc/testsuite/gcc.dg/uninit-21.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452ec2a5ec2e84bd6f469afb43b0928361d1710f/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452ec2a5ec2e84bd6f469afb43b0928361d1710f/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-21.c?ref=452ec2a5ec2e84bd6f469afb43b0928361d1710f", "patch": "@@ -0,0 +1,33 @@\n+/* PR69537, spurious warning because of a missed optimization. */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wuninitialized\" } */\n+\n+enum clnt_stat {\n+ RPC_SUCCESS=0,\n+ RPC_CANTENCODEARGS=1,\n+};\n+ \n+int do_ypcall_tr ();\n+ \n+static int\n+yp_master (char **outname)\n+{\n+  // Replacing enum clnt_stat with int avoids the warning.\n+  enum clnt_stat result;\n+  result = do_ypcall_tr ();\n+  if (result != 0)\n+    return result;\n+  *outname = __builtin_strdup (\"foo\");\n+  return 0;\n+}\n+ \n+int\n+yp_update (void)\n+{\n+  char *master;\n+  int r;\n+  if ((r = yp_master (&master)) != 0)\n+    return r;\n+  __builtin_free (master); /* { dg-bogus \"uninitialized\" } */\n+  return 0;\n+}"}]}