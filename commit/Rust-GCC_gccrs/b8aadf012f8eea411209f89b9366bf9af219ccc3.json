{"sha": "b8aadf012f8eea411209f89b9366bf9af219ccc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhYWRmMDEyZjhlZWE0MTEyMDlmODliOTM2NmJmOWFmMjE5Y2NjMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-15T08:48:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-15T08:48:39Z"}, "message": "[multiple changes]\n\n2009-04-15  Gary Dismukes  <dismukes@adacore.com>\n\n\t* a-tasatt.adb: Fix typo, plus minor reformatting\n\n\t* sem_ch3.ads: Add missing hyphen (\"class wide\" => \"class-wide\").\n\n\t* sem_ch10.adb: Add missing hyphen (\"use visible\" => \"use-visible\").\n\n2009-04-15  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Private_Extension_Declaration): Verify that a\n\tprivate extension whose parent is a synchronized interface carries an\n\texplicit synchronized keyword.\n\nFrom-SVN: r146084", "tree": {"sha": "0202fadd4d6c949ffd9cc3e229f03dd3cc43a67b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0202fadd4d6c949ffd9cc3e229f03dd3cc43a67b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8aadf012f8eea411209f89b9366bf9af219ccc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aadf012f8eea411209f89b9366bf9af219ccc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8aadf012f8eea411209f89b9366bf9af219ccc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aadf012f8eea411209f89b9366bf9af219ccc3/comments", "author": null, "committer": null, "parents": [{"sha": "a808ba1bfb211375b09524976ce1d92950b45411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a808ba1bfb211375b09524976ce1d92950b45411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a808ba1bfb211375b09524976ce1d92950b45411"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "caf4b88855c838afe170093a616c66a400556271", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b8aadf012f8eea411209f89b9366bf9af219ccc3", "patch": "@@ -1,3 +1,17 @@\n+2009-04-15  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* a-tasatt.adb: Fix typo, plus minor reformatting\n+\n+\t* sem_ch3.ads: Add missing hyphen (\"class wide\" => \"class-wide\").\n+\n+\t* sem_ch10.adb: Add missing hyphen (\"use visible\" => \"use-visible\").\n+\n+2009-04-15  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Private_Extension_Declaration): Verify that a\n+\tprivate extension whose parent is a synchronized interface carries an\n+\texplicit synchronized keyword.\n+\n 2009-04-15  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_smem.adb (Make_Shared_Var_Procs): For a protected type,"}, {"sha": "b1a6b2da52d070c8ed6ba6c793f318eb01c5400e", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=b8aadf012f8eea411209f89b9366bf9af219ccc3", "patch": "@@ -719,9 +719,9 @@ begin\n                In_Use := In_Use or Two_To_J;\n                Local.Index := J;\n \n-               --  This unchecked conversions can give a warning when the\n-               --  alignment is incorrect, but it will not be used in such a\n-               --  case anyway, so the warning can be safely ignored.\n+               --  This unchecked conversion can give a warning when the\n+               --  alignment is incorrect, but it will not be used in such\n+               --  a case anyway, so the warning can be safely ignored.\n \n                pragma Warnings (Off);\n                To_Attribute_Handle (Local.Initial_Value'Access).all :="}, {"sha": "a5a25fd8a79b3f1901e43a34913d1df4d3c993ab", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=b8aadf012f8eea411209f89b9366bf9af219ccc3", "patch": "@@ -1292,7 +1292,7 @@ package body Sem_Ch10 is\n          --  the implicit with's on parent units.\n \n          --  Skip use clauses at this stage, since we don't want to do any\n-         --  installing of potentially use visible entities until we\n+         --  installing of potentially use-visible entities until we\n          --  actually install the complete context (in Install_Context).\n          --  Otherwise things can get installed in the wrong context.\n "}, {"sha": "b577aa3ac5e027acf303eaec46635f32b22a8d51", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b8aadf012f8eea411209f89b9366bf9af219ccc3", "patch": "@@ -3337,6 +3337,18 @@ package body Sem_Ch3 is\n             Error_Msg_NE (\"parent type& of limited extension must be limited\",\n               N, Parent_Type);\n          end if;\n+\n+      --  A consequence of 3.9.4 (6/2) and 7.3 (2.2/2) is that a private\n+      --  extension with a synchronized parent must be explicitly declared\n+      --  synchronized, because the full view will be a synchronized type.\n+\n+      elsif Is_Interface (Parent_Type)\n+        and then Is_Synchronized_Interface (Parent_Type)\n+        and then not Synchronized_Present (N)\n+      then\n+         Error_Msg_NE\n+           (\"private extension of& must be explicitly synchronized\",\n+             N, Parent_Type);\n       end if;\n    end Analyze_Private_Extension_Declaration;\n "}, {"sha": "9375070125b082e7c59bc535d5514af506526d8d", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aadf012f8eea411209f89b9366bf9af219ccc3/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=b8aadf012f8eea411209f89b9366bf9af219ccc3", "patch": "@@ -177,10 +177,10 @@ package Sem_Ch3 is\n \n    procedure Make_Class_Wide_Type (T : Entity_Id);\n    --  A Class_Wide_Type is created for each tagged type definition. The\n-   --  attributes of a class wide type are inherited from those of the type T.\n+   --  attributes of a class-wide type are inherited from those of the type T.\n    --  If T is introduced by a private declaration, the corresponding class\n    --  wide type is created at the same time, and therefore there is a private\n-   --  and a full declaration for the class wide type as well.\n+   --  and a full declaration for the class-wide type as well.\n \n    function OK_For_Limited_Init_In_05 (Exp : Node_Id) return Boolean;\n    --  Presuming Exp is an expression of an inherently limited type, returns"}]}