{"sha": "3613473ab1765efc8e60b8e030eb1919af0b20e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYxMzQ3M2FiMTc2NWVmYzhlNjBiOGUwMzBlYjE5MTlhZjBiMjBlMw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-06-28T20:30:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-20T12:31:37Z"}, "message": "[Ada] Fix shadowing in conditions for inlining\n\ngcc/ada/\n\n\t* inline.adb (Has_Excluded_Declaration): Rename and reduce scope\n\tof a local variable.", "tree": {"sha": "546a5e73ff49058aac93a978a8f87e04911805e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/546a5e73ff49058aac93a978a8f87e04911805e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3613473ab1765efc8e60b8e030eb1919af0b20e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3613473ab1765efc8e60b8e030eb1919af0b20e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3613473ab1765efc8e60b8e030eb1919af0b20e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3613473ab1765efc8e60b8e030eb1919af0b20e3/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2175b50b74dd03df45b4efb792029848c4a76381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2175b50b74dd03df45b4efb792029848c4a76381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2175b50b74dd03df45b4efb792029848c4a76381"}], "stats": {"total": 55, "additions": 29, "deletions": 26}, "files": [{"sha": "84e2bc866b9c5438a7d855d2ffbdf6593b36a939", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3613473ab1765efc8e60b8e030eb1919af0b20e3/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3613473ab1765efc8e60b8e030eb1919af0b20e3/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=3613473ab1765efc8e60b8e030eb1919af0b20e3", "patch": "@@ -4215,8 +4215,6 @@ package body Inline is\n      (Subp  : Entity_Id;\n       Decls : List_Id) return Boolean\n    is\n-      D : Node_Id;\n-\n       function Is_Unchecked_Conversion (D : Node_Id) return Boolean;\n       --  Nested subprograms make a given body ineligible for inlining, but\n       --  we make an exception for instantiations of unchecked conversion.\n@@ -4250,6 +4248,10 @@ package body Inline is\n            and then Is_Intrinsic_Subprogram (Conv);\n       end Is_Unchecked_Conversion;\n \n+      --  Local variables\n+\n+      Decl : Node_Id;\n+\n    --  Start of processing for Has_Excluded_Declaration\n \n    begin\n@@ -4259,19 +4261,19 @@ package body Inline is\n          return False;\n       end if;\n \n-      D := First (Decls);\n-      while Present (D) loop\n+      Decl := First (Decls);\n+      while Present (Decl) loop\n \n          --  First declarations universally excluded\n \n-         if Nkind (D) = N_Package_Declaration then\n+         if Nkind (Decl) = N_Package_Declaration then\n             Cannot_Inline\n-              (\"cannot inline & (nested package declaration)?\", D, Subp);\n+              (\"cannot inline & (nested package declaration)?\", Decl, Subp);\n             return True;\n \n-         elsif Nkind (D) = N_Package_Instantiation then\n+         elsif Nkind (Decl) = N_Package_Instantiation then\n             Cannot_Inline\n-              (\"cannot inline & (nested package instantiation)?\", D, Subp);\n+              (\"cannot inline & (nested package instantiation)?\", Decl, Subp);\n             return True;\n          end if;\n \n@@ -4280,51 +4282,52 @@ package body Inline is\n          if Back_End_Inlining then\n             null;\n \n-         elsif Nkind (D) = N_Task_Type_Declaration\n-           or else Nkind (D) = N_Single_Task_Declaration\n+         elsif Nkind (Decl) = N_Task_Type_Declaration\n+           or else Nkind (Decl) = N_Single_Task_Declaration\n          then\n             Cannot_Inline\n-              (\"cannot inline & (nested task type declaration)?\", D, Subp);\n+              (\"cannot inline & (nested task type declaration)?\", Decl, Subp);\n             return True;\n \n-         elsif Nkind (D) = N_Protected_Type_Declaration\n-           or else Nkind (D) = N_Single_Protected_Declaration\n+         elsif Nkind (Decl) in N_Protected_Type_Declaration\n+                             | N_Single_Protected_Declaration\n          then\n             Cannot_Inline\n               (\"cannot inline & (nested protected type declaration)?\",\n-               D, Subp);\n+               Decl, Subp);\n             return True;\n \n-         elsif Nkind (D) = N_Subprogram_Body then\n+         elsif Nkind (Decl) = N_Subprogram_Body then\n             Cannot_Inline\n-              (\"cannot inline & (nested subprogram)?\", D, Subp);\n+              (\"cannot inline & (nested subprogram)?\", Decl, Subp);\n             return True;\n \n-         elsif Nkind (D) = N_Function_Instantiation\n-           and then not Is_Unchecked_Conversion (D)\n+         elsif Nkind (Decl) = N_Function_Instantiation\n+           and then not Is_Unchecked_Conversion (Decl)\n          then\n             Cannot_Inline\n-              (\"cannot inline & (nested function instantiation)?\", D, Subp);\n+              (\"cannot inline & (nested function instantiation)?\", Decl, Subp);\n             return True;\n \n-         elsif Nkind (D) = N_Procedure_Instantiation then\n+         elsif Nkind (Decl) = N_Procedure_Instantiation then\n             Cannot_Inline\n-              (\"cannot inline & (nested procedure instantiation)?\", D, Subp);\n+              (\"cannot inline & (nested procedure instantiation)?\",\n+               Decl, Subp);\n             return True;\n \n          --  Subtype declarations with predicates will generate predicate\n          --  functions, i.e. nested subprogram bodies, so inlining is not\n          --  possible.\n \n-         elsif Nkind (D) = N_Subtype_Declaration\n-           and then Present (Aspect_Specifications (D))\n+         elsif Nkind (Decl) = N_Subtype_Declaration\n+           and then Present (Aspect_Specifications (Decl))\n          then\n             declare\n                A    : Node_Id;\n                A_Id : Aspect_Id;\n \n             begin\n-               A := First (Aspect_Specifications (D));\n+               A := First (Aspect_Specifications (Decl));\n                while Present (A) loop\n                   A_Id := Get_Aspect_Id (Chars (Identifier (A)));\n \n@@ -4334,7 +4337,7 @@ package body Inline is\n                   then\n                      Cannot_Inline\n                        (\"cannot inline & (subtype declaration with \"\n-                        & \"predicate)?\", D, Subp);\n+                        & \"predicate)?\", Decl, Subp);\n                      return True;\n                   end if;\n \n@@ -4343,7 +4346,7 @@ package body Inline is\n             end;\n          end if;\n \n-         Next (D);\n+         Next (Decl);\n       end loop;\n \n       return False;"}]}