{"sha": "c2fee3de3b9b15b903841cc1d6679a627ccbbebe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJmZWUzZGUzYjliMTViOTAzODQxY2MxZDY2NzlhNjI3Y2NiYmViZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-08-03T01:55:37Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-08-03T01:55:37Z"}, "message": "re PR fortran/22491 (character array parameters do not reduce)\n\n\tPR fortran/22491\n\t* expr.c (simplify_parameter_variable): Do not copy the subobject\n\treferences if the expression value is a constant.\n\n\t* expr.c (gfc_simplify_expr): Evaluate constant substrings.\n\nFrom-SVN: r102676", "tree": {"sha": "d711a71b0305354c02ba3670d2e1ff750f76045b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d711a71b0305354c02ba3670d2e1ff750f76045b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2fee3de3b9b15b903841cc1d6679a627ccbbebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fee3de3b9b15b903841cc1d6679a627ccbbebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2fee3de3b9b15b903841cc1d6679a627ccbbebe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fee3de3b9b15b903841cc1d6679a627ccbbebe/comments", "author": null, "committer": null, "parents": [{"sha": "75ec95c8cde7f027c874a12dd4f1c7c21607a588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ec95c8cde7f027c874a12dd4f1c7c21607a588", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ec95c8cde7f027c874a12dd4f1c7c21607a588"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "b2a74525edefeee093636aeac352e285e5003abc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fee3de3b9b15b903841cc1d6679a627ccbbebe/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fee3de3b9b15b903841cc1d6679a627ccbbebe/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c2fee3de3b9b15b903841cc1d6679a627ccbbebe", "patch": "@@ -1,3 +1,11 @@\n+2005-08-02  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR fortran/22491\n+\t* expr.c (simplify_parameter_variable): Do not copy the subobject\n+\treferences if the expression value is a constant.\n+\n+\t* expr.c (gfc_simplify_expr): Evaluate constant substrings.\n+\n 2005-07-31  Jerry DeLisle  <jvdelisle@verizon.net>\n \n \t* intrinsic.texi: Add documentation for exponent, floor, and fnum and"}, {"sha": "e36137110628c4159a7b5c378d2b603b9a9ed454", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fee3de3b9b15b903841cc1d6679a627ccbbebe/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fee3de3b9b15b903841cc1d6679a627ccbbebe/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=c2fee3de3b9b15b903841cc1d6679a627ccbbebe", "patch": "@@ -1068,7 +1068,8 @@ simplify_parameter_variable (gfc_expr * p, int type)\n   try t;\n \n   e = gfc_copy_expr (p->symtree->n.sym->value);\n-  if (p->ref)\n+  /* Do not copy subobject refs for constant.  */\n+  if (e->expr_type != EXPR_CONSTANT && p->ref != NULL)\n     e->ref = copy_ref (p->ref);\n   t = gfc_simplify_expr (e, type);\n \n@@ -1130,7 +1131,28 @@ gfc_simplify_expr (gfc_expr * p, int type)\n       if (simplify_ref_chain (p->ref, type) == FAILURE)\n \treturn FAILURE;\n \n-      /* TODO: evaluate constant substrings.  */\n+      if (gfc_is_constant_expr (p))\n+\t{\n+\t  char *s;\n+\t  int start, end;\n+\n+\t  gfc_extract_int (p->ref->u.ss.start, &start);\n+\t  start--;  /* Convert from one-based to zero-based.  */\n+\t  gfc_extract_int (p->ref->u.ss.end, &end);\n+\t  s = gfc_getmem (end - start + 1);\n+\t  memcpy (s, p->value.character.string + start, end - start);\n+\t  s[end] = '\\0';  /* TODO: C-style string for debugging.  */\n+\t  gfc_free (p->value.character.string);\n+\t  p->value.character.string = s;\n+\t  p->value.character.length = end - start;\n+\t  p->ts.cl = gfc_get_charlen ();\n+\t  p->ts.cl->next = gfc_current_ns->cl_list;\n+\t  gfc_current_ns->cl_list = p->ts.cl;\n+\t  p->ts.cl->length = gfc_int_expr (p->value.character.length);\n+\t  gfc_free_ref_list (p->ref);\n+\t  p->ref = NULL;\n+\t  p->expr_type = EXPR_CONSTANT;\n+\t}\n       break;\n \n     case EXPR_OP:"}]}