{"sha": "8c3db96e6425846bc1f7760c382369ff671e45c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMzZGI5NmU2NDI1ODQ2YmMxZjc3NjBjMzgyMzY5ZmY2NzFlNDVjNg==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2011-12-20T08:08:30Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2011-12-20T08:08:30Z"}, "message": "aclocal.m4: Assume strncmp works in cross case.\n\n2011-12-20  Tristan Gingold  <gingold@adacore.com>\n\n\t* aclocal.m4: Assume strncmp works in cross case.\n\t* configure: Regenerate\n\nFrom-SVN: r182520", "tree": {"sha": "659be630311c0f21dc97d85780fe010fd89983a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/659be630311c0f21dc97d85780fe010fd89983a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c3db96e6425846bc1f7760c382369ff671e45c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3db96e6425846bc1f7760c382369ff671e45c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c3db96e6425846bc1f7760c382369ff671e45c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3db96e6425846bc1f7760c382369ff671e45c6/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f172beec4a9f1f225b3d0cca973f26f376d9556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f172beec4a9f1f225b3d0cca973f26f376d9556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f172beec4a9f1f225b3d0cca973f26f376d9556"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "734cf8cf9c729f179d856340909cedd50c31031f", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3db96e6425846bc1f7760c382369ff671e45c6/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3db96e6425846bc1f7760c382369ff671e45c6/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8c3db96e6425846bc1f7760c382369ff671e45c6", "patch": "@@ -1,3 +1,8 @@\n+2011-12-20  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* aclocal.m4: Assume strncmp works in cross case.\n+\t* configure: Regenerate\n+\n 2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* configure: Regenerate."}, {"sha": "bf8a907100f9d2107df899e538e6a47f6fcd3058", "filename": "libiberty/aclocal.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3db96e6425846bc1f7760c382369ff671e45c6/libiberty%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3db96e6425846bc1f7760c382369ff671e45c6/libiberty%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Faclocal.m4?ref=8c3db96e6425846bc1f7760c382369ff671e45c6", "patch": "@@ -72,7 +72,7 @@ main ()\n   exit (0);\n }\n ], ac_cv_func_strncmp_works=yes, ac_cv_func_strncmp_works=no,\n-  ac_cv_func_strncmp_works=no)\n+  ac_cv_func_strncmp_works=yes)\n rm -f core core.* *.core])\n if test $ac_cv_func_strncmp_works = no ; then\n   AC_LIBOBJ([strncmp])"}, {"sha": "0b943857b754c5c37e41e4e736cf17826ebeca70", "filename": "libiberty/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3db96e6425846bc1f7760c382369ff671e45c6/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3db96e6425846bc1f7760c382369ff671e45c6/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=8c3db96e6425846bc1f7760c382369ff671e45c6", "patch": "@@ -6824,7 +6824,7 @@ if test \"${ac_cv_func_strncmp_works+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   if test \"$cross_compiling\" = yes; then :\n-  ac_cv_func_strncmp_works=no\n+  ac_cv_func_strncmp_works=yes\n else\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */"}]}