{"sha": "2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkyMmZlOWVjYzZlZTJmOThjYTY5M2JmZDQ3ZWFmNTJmY2FiMmU5Mw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-12-13T01:05:20Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-12-13T01:05:20Z"}, "message": "Define SMALL_REGISTER_CLASSES with a value\n\nFrom-SVN: r13303", "tree": {"sha": "ea457004df6e5bf450528ca178573b5a87337cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea457004df6e5bf450528ca178573b5a87337cd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/comments", "author": null, "committer": null, "parents": [{"sha": "f95182a4a947cb4edc01f282c7dbfe81502a7914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95182a4a947cb4edc01f282c7dbfe81502a7914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95182a4a947cb4edc01f282c7dbfe81502a7914"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "83a97f8979c90af6e9a80694c1b63b2c008baff1", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "patch": "@@ -946,7 +946,7 @@ enum reg_class\n    rtl to be used as spill registers but prevents the compiler from\n    extending the lifetime of these registers. */\n \n-#define SMALL_REGISTER_CLASSES\n+#define SMALL_REGISTER_CLASSES 1\n \n /* Macros to check register numbers against specific register classes.  */\n "}, {"sha": "8e42f47f5a73dbbeda485b7342e0d30815409fc8", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "patch": "@@ -568,7 +568,7 @@ enum reg_class {\n    rtl to be used as spill registers but prevents the compiler from\n    extending the lifetime of these registers. */\n \n-#define SMALL_REGISTER_CLASSES\n+#define SMALL_REGISTER_CLASSES 1\n \f\n /* Define a data type for recording info about an argument list\n    during the scan of that argument list.  This data type should"}, {"sha": "241650f99f61c8c70f859c5f9b36fe7df4715db1", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "patch": "@@ -706,7 +706,7 @@ enum reg_class\n    rtl to be used as spill registers but prevents the compiler from\n    extending the lifetime of these registers. */\n \n-#define SMALL_REGISTER_CLASSES\n+#define SMALL_REGISTER_CLASSES 1\n \n #define QI_REG_P(X) \\\n   (REG_P (X) && REGNO (X) < 4)"}, {"sha": "9f755c1227e0d3d4df5c486477b8f2feb27bfaca", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "patch": "@@ -378,7 +378,7 @@ enum reg_class { NO_REGS, MUL_REGS, GENERAL_REGS, LOAD_FPU_REGS, NO_LOAD_FPU_REG\n #define N_REG_CLASSES (int) LIM_REG_CLASSES\n \n /* have to allow this till cmpsi/tstsi are fixed in a better way !! */\n-#define SMALL_REGISTER_CLASSES \n+#define SMALL_REGISTER_CLASSES 1\n \n /* Since GENERAL_REGS is the same class as ALL_REGS,\n    don't give it a different class number; just make it an alias.  */"}, {"sha": "c8ffd38d91873b80a79ef941f71021c3e46bb0b4", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=2922fe9ecc6ee2f98ca693bfd47eaf52fcab2e93", "patch": "@@ -527,7 +527,7 @@ extern int regno_reg_class[];\n    rtl to be used as spill registers but prevents the compiler from\n    extending the lifetime of these registers.  */\n \n-#define SMALL_REGISTER_CLASSES\n+#define SMALL_REGISTER_CLASSES 1\n \n /* The order in which register should be allocated.  */\n #define REG_ALLOC_ORDER \\"}]}