{"sha": "1c69865d5bfff305c220b3032978f0c5324c8adf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM2OTg2NWQ1YmZmZjMwNWMyMjBiMzAzMjk3OGYwYzUzMjRjOGFkZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-10-12T15:31:29Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-10-12T15:31:29Z"}, "message": "Allocate attr_value_list with xmalloc rather than alloca\n\nFrom-SVN: r8261", "tree": {"sha": "d034641d75967896c29c04661e8c7d61d7978164", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d034641d75967896c29c04661e8c7d61d7978164"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c69865d5bfff305c220b3032978f0c5324c8adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c69865d5bfff305c220b3032978f0c5324c8adf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c69865d5bfff305c220b3032978f0c5324c8adf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c69865d5bfff305c220b3032978f0c5324c8adf/comments", "author": null, "committer": null, "parents": [{"sha": "361f165377fe422717c6a5034343d02a04a472f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/361f165377fe422717c6a5034343d02a04a472f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/361f165377fe422717c6a5034343d02a04a472f7"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "aaed2343f49cea27ba98d5a989fa26a458a6e8d2", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c69865d5bfff305c220b3032978f0c5324c8adf/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c69865d5bfff305c220b3032978f0c5324c8adf/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=1c69865d5bfff305c220b3032978f0c5324c8adf", "patch": "@@ -310,6 +310,7 @@ static int length_used;\n static int num_delays;\n static int have_annul_true, have_annul_false;\n static int num_units;\n+static int num_insn_ents;\n \n /* Used as operand to `operate_exp':  */\n \n@@ -2545,6 +2546,8 @@ remove_insn_ent (av, ie)\n   av->num_insns--;\n   if (ie->insn_code == -1)\n     av->has_asm_insn = 0;\n+\n+  num_insn_ents--;\n }\n \n /* Insert an insn entry in an attribute value list.  */\n@@ -2559,6 +2562,8 @@ insert_insn_ent (av, ie)\n   av->num_insns++;\n   if (ie->insn_code == -1)\n     av->has_asm_insn = 1;\n+\n+  num_insn_ents++;\n }\n \f\n /* This is a utility routine to take an expression that is a tree of either\n@@ -3293,6 +3298,7 @@ optimize_attrs ()\n \t\t\t   struct attr_desc * attr;\n \t\t\t   struct attr_value_list *next; };\n   struct attr_value_list **insn_code_values;\n+  struct attr_value_list *ivbuf;\n   struct attr_value_list *iv;\n \n   /* For each insn code, make a list of all the insn_ent's for it,\n@@ -3308,20 +3314,29 @@ optimize_attrs ()\n   /* Offset the table address so we can index by -2 or -1.  */\n   insn_code_values += 2;\n \n+  /* Allocate the attr_value_list structures using xmalloc rather than\n+     alloca, because using alloca can overflow the maximum permitted\n+     stack limit on SPARC Lynx.  */\n+  iv = ivbuf = ((struct attr_value_list *)\n+\t\txmalloc (num_insn_ents * sizeof (struct attr_value_list)));\n+\n   for (i = 0; i < MAX_ATTRS_INDEX; i++)\n     for (attr = attrs[i]; attr; attr = attr->next)\n       for (av = attr->first_value; av; av = av->next)\n \tfor (ie = av->first_insn; ie; ie = ie->next)\n \t  {\n-\t    iv = ((struct attr_value_list *)\n-\t\t  alloca (sizeof (struct attr_value_list)));\n \t    iv->attr = attr;\n \t    iv->av = av;\n \t    iv->ie = ie;\n \t    iv->next = insn_code_values[ie->insn_code];\n \t    insn_code_values[ie->insn_code] = iv;\n+\t    iv++;\n \t  }\n \n+  /* Sanity check on num_insn_ents.  */\n+  if (iv != ivbuf + num_insn_ents)\n+    abort ();\n+\n   /* Process one insn code at a time.  */\n   for (i = -2; i < insn_code_number; i++)\n     {\n@@ -3371,6 +3386,8 @@ optimize_attrs ()\n \t    }\n \t}\n     }\n+\n+  free (ivbuf);\n }\n \n #if 0"}]}