{"sha": "1e1b864906576c1e8ccd53595a727fc393fc0074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUxYjg2NDkwNjU3NmMxZThjY2Q1MzU5NWE3MjdmYzM5M2ZjMDA3NA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-11-14T18:54:18Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-11-14T18:54:18Z"}, "message": "re PR target/17279 (internal compiler error with 128 bit integers)\n\n2004-11-14  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR c/17279\n        * c-common.c (c_common_nodes_and_builtins): Ask the back-end if we\n        support TImode before adding __int128_t and __uint128_t types.\n\nFrom-SVN: r90627", "tree": {"sha": "d498fe969d71adf50f58b365942aea5e54c164e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d498fe969d71adf50f58b365942aea5e54c164e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e1b864906576c1e8ccd53595a727fc393fc0074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1b864906576c1e8ccd53595a727fc393fc0074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1b864906576c1e8ccd53595a727fc393fc0074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1b864906576c1e8ccd53595a727fc393fc0074/comments", "author": null, "committer": null, "parents": [{"sha": "d6f6ef21b2b8035f65eeea8ce73ad11245f56608", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6f6ef21b2b8035f65eeea8ce73ad11245f56608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6f6ef21b2b8035f65eeea8ce73ad11245f56608"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "d6adbcb662b813f79e1669ea595930232d9fe65f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e1b864906576c1e8ccd53595a727fc393fc0074/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e1b864906576c1e8ccd53595a727fc393fc0074/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e1b864906576c1e8ccd53595a727fc393fc0074", "patch": "@@ -1,3 +1,9 @@\n+2004-11-14  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR c/17279\n+\t* c-common.c (c_common_nodes_and_builtins): Ask the back-end if we\n+\tsupport TImode before adding __int128_t and __uint128_t types.\n+\n 2004-11-14  Dorit Naishlos  <dorit@il.ibm.com>\n \n \tPR tree-opt/18400"}, {"sha": "ba77501ebb3d8c7f70873bebb3d385cf23d55a58", "filename": "gcc/c-common.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e1b864906576c1e8ccd53595a727fc393fc0074/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e1b864906576c1e8ccd53595a727fc393fc0074/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=1e1b864906576c1e8ccd53595a727fc393fc0074", "patch": "@@ -2950,9 +2950,10 @@ c_common_nodes_and_builtins (void)\n   lang_hooks.decls.pushdecl (build_decl (TYPE_DECL, NULL_TREE,\n \t\t\t\t\t intDI_type_node));\n #if HOST_BITS_PER_WIDE_INT >= 64\n-  lang_hooks.decls.pushdecl (build_decl (TYPE_DECL,\n-\t\t\t\t\t get_identifier (\"__int128_t\"),\n-\t\t\t\t\t intTI_type_node));\n+  if (targetm.scalar_mode_supported_p (TImode))\n+    lang_hooks.decls.pushdecl (build_decl (TYPE_DECL,\n+\t\t\t\t\t   get_identifier (\"__int128_t\"),\n+\t\t\t\t\t   intTI_type_node));\n #endif\n   lang_hooks.decls.pushdecl (build_decl (TYPE_DECL, NULL_TREE,\n \t\t\t\t\t unsigned_intQI_type_node));\n@@ -2963,9 +2964,10 @@ c_common_nodes_and_builtins (void)\n   lang_hooks.decls.pushdecl (build_decl (TYPE_DECL, NULL_TREE,\n \t\t\t\t\t unsigned_intDI_type_node));\n #if HOST_BITS_PER_WIDE_INT >= 64\n-  lang_hooks.decls.pushdecl (build_decl (TYPE_DECL,\n-\t\t\t\t\t get_identifier (\"__uint128_t\"),\n-\t\t\t\t\t unsigned_intTI_type_node));\n+  if (targetm.scalar_mode_supported_p (TImode))\n+    lang_hooks.decls.pushdecl (build_decl (TYPE_DECL,\n+\t\t\t\t\t   get_identifier (\"__uint128_t\"),\n+\t\t\t\t\t   unsigned_intTI_type_node));\n #endif\n \n   /* Create the widest literal types.  */"}]}