{"sha": "b2e519796c72be6179052d738b0b645b926ab23a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJlNTE5Nzk2YzcyYmU2MTc5MDUyZDczOGIwYjY0NWI5MjZhYjIzYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-09-25T07:51:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-09-25T07:51:51Z"}, "message": "re PR tree-optimization/53663 (inconsistent inline handling of bool within union)\n\n2012-09-25  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53663\n\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Conditional\n\tnative encode/interpret translation on VN_WALKREWRITE.\n\n\t* gcc.dg/torture/pr53663-1.c: New testcase.\n\t* gcc.dg/torture/pr53663-2.c: Likewise.\n\t* gcc.dg/torture/pr53663-3.c: Likewise.\n\nFrom-SVN: r191694", "tree": {"sha": "f7a0c4b55d01c93be4fab5798dc573d9d80f6bc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7a0c4b55d01c93be4fab5798dc573d9d80f6bc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2e519796c72be6179052d738b0b645b926ab23a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e519796c72be6179052d738b0b645b926ab23a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2e519796c72be6179052d738b0b645b926ab23a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e519796c72be6179052d738b0b645b926ab23a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fe7fbd5dfbb38e1d7fc4e3f5dea2f51eb8a9bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe7fbd5dfbb38e1d7fc4e3f5dea2f51eb8a9bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fe7fbd5dfbb38e1d7fc4e3f5dea2f51eb8a9bf7"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "8bcade673c28b65002541dd394a3dc5d9cefc9ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2e519796c72be6179052d738b0b645b926ab23a", "patch": "@@ -1,3 +1,9 @@\n+2012-09-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53663\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Conditional\n+\tnative encode/interpret translation on VN_WALKREWRITE.\n+\n 2012-09-24  Dehao Chen  <dehao@google.com>\n \n \t* tree-cfg.c (move_stmt_op): Reset the expr block only"}, {"sha": "d94545905e9c94a20be8016b6fa4323e4f14e5a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b2e519796c72be6179052d738b0b645b926ab23a", "patch": "@@ -1,3 +1,10 @@\n+2012-09-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53663\n+\t* gcc.dg/torture/pr53663-1.c: New testcase.\n+\t* gcc.dg/torture/pr53663-2.c: Likewise.\n+\t* gcc.dg/torture/pr53663-3.c: Likewise.\n+\n 2012-09-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/pr50725.c: Change 'long' to 'long long'."}, {"sha": "3392ddecb51b750aab66766f707b6c97a856ba91", "filename": "gcc/testsuite/gcc.dg/torture/pr53663-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-1.c?ref=b2e519796c72be6179052d738b0b645b926ab23a", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+union u\n+{\n+  int i;\n+  _Bool b;\n+};\n+\n+void f(union u * vp, union u v)\n+{\n+  *vp = v;\n+}\n+\n+int main()\n+{\n+  union u v;\n+  union u v1;\n+  union u v2;\n+\n+  v.i = 10;\n+  f(&v1, v);\n+\n+  v.b = 0;\n+  f(&v2, v);\n+  if (v2.b != 0)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "9589a9e205408bd42b224029cfe770f8dbd2d544", "filename": "gcc/testsuite/gcc.dg/torture/pr53663-2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-2.c?ref=b2e519796c72be6179052d738b0b645b926ab23a", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+union u\n+{\n+  int i;\n+  short f;\n+} v;\n+\n+short foo (short *f)\n+{\n+  *f = 1;\n+  v.i = 0;\n+  v.f = 0;\n+  return *f;\n+}\n+\n+int main()\n+{\n+  if (foo (&v.f) != 0)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "96af5db10aca3fbed4d02817d423cf0630a1d2a7", "filename": "gcc/testsuite/gcc.dg/torture/pr53663-3.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53663-3.c?ref=b2e519796c72be6179052d738b0b645b926ab23a", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+union u\n+{\n+  int i;\n+  float f;\n+} v;\n+\n+float foo (float *f)\n+{\n+  *f = 1;\n+  v.i = 0;\n+  v.f = 0.;\n+  return *f;\n+}\n+\n+int main()\n+{\n+  if (foo (&v.f) != 0.)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "9e62ebe2e18a21e184a3e26fb1f529570d507b8d", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e519796c72be6179052d738b0b645b926ab23a/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=b2e519796c72be6179052d738b0b645b926ab23a", "patch": "@@ -1555,7 +1555,8 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_)\n \n   /* 3) Assignment from a constant.  We can use folds native encode/interpret\n      routines to extract the assigned bits.  */\n-  else if (CHAR_BIT == 8 && BITS_PER_UNIT == 8\n+  else if (vn_walk_kind == VN_WALKREWRITE\n+\t   && CHAR_BIT == 8 && BITS_PER_UNIT == 8\n \t   && ref->size == maxsize\n \t   && maxsize % BITS_PER_UNIT == 0\n \t   && offset % BITS_PER_UNIT == 0"}]}