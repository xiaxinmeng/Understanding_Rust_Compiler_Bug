{"sha": "0763f3ab57d26a2b05ba36aecf044fb90c4c1327", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc2M2YzYWI1N2QyNmEyYjA1YmEzNmFlY2YwNDRmYjkwYzRjMTMyNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T12:08:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-14T12:08:06Z"}, "message": "(build_module_descriptor, really_start_method): Pass extra parm to\nstart_function.\n\nFrom-SVN: r9945", "tree": {"sha": "cf352ce673576ccc2089b7a708db785aed622b19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf352ce673576ccc2089b7a708db785aed622b19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0763f3ab57d26a2b05ba36aecf044fb90c4c1327", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0763f3ab57d26a2b05ba36aecf044fb90c4c1327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0763f3ab57d26a2b05ba36aecf044fb90c4c1327", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0763f3ab57d26a2b05ba36aecf044fb90c4c1327/comments", "author": null, "committer": null, "parents": [{"sha": "79d101f8fa999436270c9f8dfaacf2310327b1ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d101f8fa999436270c9f8dfaacf2310327b1ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d101f8fa999436270c9f8dfaacf2310327b1ad"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e0dfcd83b3bf2d05273927cab48fc6ce5b7421f7", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0763f3ab57d26a2b05ba36aecf044fb90c4c1327/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0763f3ab57d26a2b05ba36aecf044fb90c4c1327/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=0763f3ab57d26a2b05ba36aecf044fb90c4c1327", "patch": "@@ -1682,7 +1682,7 @@ build_module_descriptor ()\n \t\t\t\t      tree_cons (NULL_TREE, NULL_TREE,\n \t\t\t\t\t\t void_list_node),\n \t\t\t\t      NULL_TREE),\n-\t\t    NULL_TREE, 0);\n+\t\t    NULL_TREE, NULL_TREE, 0);\n #if 0 /* This should be turned back on later\n \t for the systems where collect is not needed.  */\n     /* Make these functions nonglobal\n@@ -6960,7 +6960,7 @@ really_start_method (method, parmlist)\n       method_decl = ret_decl;\n \n       /* Fool the parser into thinking it is starting a function. */\n-      start_function (decl_specs, method_decl, NULL_TREE, 0);\n+      start_function (decl_specs, method_decl, NULL_TREE, NULL_TREE, 0);\n \n       /* Unhook: this has the effect of restoring the abstract declarator. */\n       TREE_OPERAND (save_expr, 0) = NULL_TREE;\n@@ -6971,7 +6971,7 @@ really_start_method (method, parmlist)\n       TREE_VALUE (TREE_TYPE (method)) = method_decl;\n \n       /* Fool the parser into thinking it is starting a function. */\n-      start_function (decl_specs, method_decl, NULL_TREE, 0);\n+      start_function (decl_specs, method_decl, NULL_TREE, NULL_TREE, 0);\n \n       /* Unhook: this has the effect of restoring the abstract declarator. */\n       TREE_VALUE (TREE_TYPE (method)) = NULL_TREE;"}]}