{"sha": "1cb1fe669961c25d26c1ea92c1896f51ceeef898", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNiMWZlNjY5OTYxYzI1ZDI2YzFlYTkyYzE4OTZmNTFjZWVlZjg5OA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-02-19T14:49:59Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-02-19T14:49:59Z"}, "message": "rtlanal.c (insn_first_p): Fix return value for insn == reference.\n\n\t* rtlanal.c (insn_first_p): Fix return value for insn == reference.\n\t* loop.c (strength_reduce, check_final_value, check_dbra_loop):\n\tUse loop_insn_first_p.\n\nFrom-SVN: r25321", "tree": {"sha": "fb2ec476871399a96596787b20690a0bf5ec2d0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb2ec476871399a96596787b20690a0bf5ec2d0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cb1fe669961c25d26c1ea92c1896f51ceeef898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb1fe669961c25d26c1ea92c1896f51ceeef898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cb1fe669961c25d26c1ea92c1896f51ceeef898", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cb1fe669961c25d26c1ea92c1896f51ceeef898/comments", "author": null, "committer": null, "parents": [{"sha": "cea0198ed908c7377b58611eff287588808b96f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea0198ed908c7377b58611eff287588808b96f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea0198ed908c7377b58611eff287588808b96f8"}], "stats": {"total": 44, "additions": 21, "deletions": 23}, "files": [{"sha": "a1946ef7246b7a711904853469f915eb591c3e55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1fe669961c25d26c1ea92c1896f51ceeef898/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1fe669961c25d26c1ea92c1896f51ceeef898/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cb1fe669961c25d26c1ea92c1896f51ceeef898", "patch": "@@ -1,3 +1,10 @@\n+Fri Feb 19 22:47:01 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* rtlanal.c (insn_first_p): Fix return value for insn == reference.\n+\n+\t* loop.c (strength_reduce, check_final_value, check_dbra_loop):\n+\tUse loop_insn_first_p.\n+\n Fri Feb 19 15:49:26 1999  Michael Meissner  <meissner@cygnus.com>\n \t\t\t  David Edelsohn  <edelsohn@mhpcc.edu>\n "}, {"sha": "962736f9f6a9efcd2df1435fbd704a933e80f41d", "filename": "gcc/loop.c", "status": "modified", "additions": 10, "deletions": 21, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1fe669961c25d26c1ea92c1896f51ceeef898/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1fe669961c25d26c1ea92c1896f51ceeef898/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=1cb1fe669961c25d26c1ea92c1896f51ceeef898", "patch": "@@ -3784,13 +3784,7 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t\t  && (! condjump_p (insn)\n \t\t      || (JUMP_LABEL (insn) != 0\n \t\t\t  && JUMP_LABEL (insn) != scan_start\n-\t\t\t  && (INSN_UID (JUMP_LABEL (insn)) >= max_uid_for_loop\n-\t\t\t      || (INSN_UID (p) < max_uid_for_loop\n-\t\t\t\t  ? (INSN_LUID (JUMP_LABEL (insn))\n-\t\t\t\t     <= INSN_LUID (p))\n-\t\t\t\t  : (INSN_UID (insn) >= max_uid_for_loop\n-\t\t\t\t     || (INSN_LUID (JUMP_LABEL (insn))\n-\t\t\t\t\t < INSN_LUID (insn))))))))\n+\t\t\t  && ! loop_insn_first_p (p, JUMP_LABEL (insn)))))\n \t\t{\n \t\t  maybe_multiple = 1;\n \t\t  break;\n@@ -3856,7 +3850,7 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \n       if (not_every_iteration && GET_CODE (p) == CODE_LABEL\n \t  && no_labels_between_p (p, loop_end)\n-\t  && insn_first_p (p, loop_cont))\n+\t  && loop_insn_first_p (p, loop_cont))\n \tnot_every_iteration = 0;\n     }\n \n@@ -4031,7 +4025,7 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t         in-between when biv_toal_increment returns nonzero both times\n \t\t but we test it here in case some day some real cfg analysis\n \t\t gets used to set always_computable.  */\n-\t      && ((insn_first_p (bl2->biv->insn, bl->biv->insn)\n+\t      && ((loop_insn_first_p (bl2->biv->insn, bl->biv->insn)\n \t\t   && no_labels_between_p (bl2->biv->insn, bl->biv->insn))\n \t\t  || (! reg_used_between_p (bl->biv->src_reg, bl->biv->insn,\n \t\t\t\t\t    bl2->biv->insn)\n@@ -4090,7 +4084,7 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t\t      && ! reg_used_between_p (giv, bl->init_insn, loop_start))\n \t\t    delete_insn (bl->init_insn);\n \t\t}\n-\t      else if (! insn_first_p (bl2->biv->insn, bl->biv->insn))\n+\t      else if (! loop_insn_first_p (bl2->biv->insn, bl->biv->insn))\n \t\t{\n \t\t  rtx p = PREV_INSN (giv_insn);\n \t\t  while (INSN_UID (p) >= max_uid_for_loop)\n@@ -4453,7 +4447,7 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \n       if (not_every_iteration && GET_CODE (p) == CODE_LABEL\n \t  && no_labels_between_p (p, loop_end)\n-\t  && insn_first_p (p, loop_cont))\n+\t  && loop_insn_first_p (p, loop_cont))\n \tnot_every_iteration = 0;\n     }\n \n@@ -5664,13 +5658,10 @@ check_final_value (v, loop_start, loop_end, n_iterations)\n \n \t      if (GET_CODE (p) == JUMP_INSN && JUMP_LABEL (p)\n \t\t  && LABEL_NAME (JUMP_LABEL (p))\n-\t\t  && ((INSN_UID (JUMP_LABEL (p)) >= max_uid_for_loop)\n-\t\t      || (INSN_UID (v->insn) >= max_uid_for_loop)\n-\t\t      || (INSN_UID (last_giv_use) >= max_uid_for_loop)\n-\t\t      || (INSN_LUID (JUMP_LABEL (p)) < INSN_LUID (v->insn)\n-\t\t\t  && INSN_LUID (JUMP_LABEL (p)) > INSN_LUID (loop_start))\n-\t\t      || (INSN_LUID (JUMP_LABEL (p)) > INSN_LUID (last_giv_use)\n-\t\t\t  && INSN_LUID (JUMP_LABEL (p)) < INSN_LUID (loop_end))))\n+\t\t  && ((loop_insn_first_p (JUMP_LABEL (p), v->insn)\n+\t\t       && loop_insn_first_p (loop_start, JUMP_LABEL (p)))\n+\t\t      || (loop_insn_first_p (last_giv_use, JUMP_LABEL (p))\n+\t\t\t  && loop_insn_first_p (JUMP_LABEL (p), loop_end))))\n \t\t{\n \t\t  v->replaceable = 0;\n \t\t  v->not_replaceable = 1;\n@@ -7749,9 +7740,7 @@ check_dbra_loop (loop_end, insn_count, loop_start, loop_info)\n \t\t  if (v->giv_type == DEST_REG\n \t\t      && reg_mentioned_p (v->dest_reg,\n \t\t\t\t\t  XEXP (loop_store_mems, 0))\n-\t\t      && (INSN_UID (v->insn) >= max_uid_for_loop\n-\t\t\t  || (INSN_LUID (v->insn)\n-\t\t\t      > INSN_LUID (first_loop_store_insn))))\n+\t\t      && loop_insn_first_p (first_loop_store_insn, v->insn))\n \t\t    reversible_mem_store = 0;\n \t\t}\n \t    }"}, {"sha": "41744d747a2a920312015329b41624f1b10a483f", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cb1fe669961c25d26c1ea92c1896f51ceeef898/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cb1fe669961c25d26c1ea92c1896f51ceeef898/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=1cb1fe669961c25d26c1ea92c1896f51ceeef898", "patch": "@@ -2212,10 +2212,12 @@ insn_first_p (insn, reference)\n \n   for (p = insn, q = reference; ; p = NEXT_INSN (p), q = NEXT_INSN (q))\n     {\n-      if (p == reference || ! q)\n-\treturn 1;\n+      /* Start with test for not first so that INSN == REFERENCE yields not\n+\t first.  */\n       if (q == insn || ! p)\n \treturn 0;\n+      if (p == reference || ! q)\n+\treturn 1;\n     }\n }\n "}]}