{"sha": "e8e66971cdc6d1390d47a227899e2e340ff44d66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlNjY5NzFjZGM2ZDEzOTBkNDdhMjI3ODk5ZTJlMzQwZmY0NGQ2Ng==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2020-01-24T11:24:25Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2020-01-24T11:24:25Z"}, "message": "Add `--with-toolexeclibdir=' configuration option\n\nProvide means, in the form of a `--with-toolexeclibdir=' configuration\noption, to override the default installation directory for target\nlibraries, otherwise known as $toolexeclibdir.  This is so that it is\npossible to get newly-built libraries, particularly the shared ones,\ninstalled in a common place, so that they can be readily used by the\ntarget system as their host libraries, possibly over NFS, without a need\nto manually copy them over from the currently hardcoded location they\nwould otherwise be installed in.\n\nIn the presence of the `--enable-version-specific-runtime-libs' option\nand for configurations building native GCC the option is ignored.\n\n\tconfig/\n\t* toolexeclibdir.m4: New file.\n\n\tgcc/\n\t* doc/install.texi (Cross-Compiler-Specific Options): Document\n\t`--with-toolexeclibdir' option.\n\n\tlibada/\n\t* Makefile.in (configure_deps): Add `toolexeclibdir.m4'.\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* configure: Regenerate.\n\n\tlibatomic/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n\tlibffi/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* man/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n\tlibgcc/\n\t* Makefile.in (configure_deps): Add `toolexeclibdir.m4'.\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* configure: Regenerate.\n\n\tlibgfortran/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n\tlibgomp/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n\tlibhsail-rt/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n\tlibitm/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n\tlibobjc/\n\t* Makefile.in (aclocal_deps): Add `toolexeclibdir.m4'.\n\t* aclocal.m4: Include `toolexeclibdir.m4'.\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* configure: Regenerate.\n\n\tliboffloadmic/\n\t* plugin/configure.ac: Handle `--with-toolexeclibdir='.\n\t* plugin/Makefile.in: Regenerate.\n\t* plugin/aclocal.m4: Regenerate.\n\t* plugin/configure: Regenerate.\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n\tlibphobos/\n\t* m4/druntime.m4: Handle `--with-toolexeclibdir='.\n\t* m4/Makefile.in: Regenerate.\n\t* libdruntime/Makefile.in: Regenerate.\n\t* src/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n\tlibquadmath/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n\tlibsanitizer/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* asan/Makefile.in: Regenerate.\n\t* interception/Makefile.in: Regenerate.\n\t* libbacktrace/Makefile.in: Regenerate.\n\t* lsan/Makefile.in: Regenerate.\n\t* sanitizer_common/Makefile.in: Regenerate.\n\t* tsan/Makefile.in: Regenerate.\n\t* ubsan/Makefile.in: Regenerate.\n\n\tlibssp/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n\tlibstdc++-v3/\n\t* acinclude.m4: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* doc/Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.in: Regenerate.\n\t* po/Makefile.in: Regenerate.\n\t* python/Makefile.in: Regenerate.\n\t* src/Makefile.in: Regenerate.\n\t* src/c++11/Makefile.in: Regenerate.\n\t* src/c++17/Makefile.in: Regenerate.\n\t* src/c++98/Makefile.in: Regenerate.\n\t* src/filesystem/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n\tlibvtv/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\n\tzlib/\n\t* configure.ac: Handle `--with-toolexeclibdir='.\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.", "tree": {"sha": "553c62c0b065ea104cf6378f46a4ef31b2d5f84d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/553c62c0b065ea104cf6378f46a4ef31b2d5f84d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8e66971cdc6d1390d47a227899e2e340ff44d66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e66971cdc6d1390d47a227899e2e340ff44d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8e66971cdc6d1390d47a227899e2e340ff44d66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e66971cdc6d1390d47a227899e2e340ff44d66/comments", "author": null, "committer": null, "parents": [{"sha": "e3fe0070c189e214d51cfc314591b6ffa526fb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3fe0070c189e214d51cfc314591b6ffa526fb2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3fe0070c189e214d51cfc314591b6ffa526fb2f"}], "stats": {"total": 1096, "additions": 1009, "deletions": 87}, "files": [{"sha": "9c8e40af124621b1699ecff31d8d0032ffac95fa", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,7 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* toolexeclibdir.m4: New file.\n+\n 2019-09-10  Christophe Lyon  <christophe.lyon@st.com>\n \n \t* futex.m4: Handle *-uclinux*."}, {"sha": "5dd89786219f5f3125f70f0534a806629dcc4ab8", "filename": "config/toolexeclibdir.m4", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/config%2Ftoolexeclibdir.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/config%2Ftoolexeclibdir.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Ftoolexeclibdir.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -0,0 +1,31 @@\n+dnl toolexeclibdir override support.\n+dnl Copyright (C) 2020  Free Software Foundation, Inc.\n+dnl\n+dnl This program is free software; you can redistribute it and/or modify\n+dnl it under the terms of the GNU General Public License as published by\n+dnl the Free Software Foundation; either version 3, or (at your option)\n+dnl any later version.\n+dnl\n+dnl This program is distributed in the hope that it will be useful,\n+dnl but WITHOUT ANY WARRANTY; without even the implied warranty of\n+dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+dnl GNU General Public License for more details.\n+dnl\n+dnl You should have received a copy of the GNU General Public License\n+dnl along with this program; see the file COPYING3.  If not see\n+dnl <http://www.gnu.org/licenses/>.\n+\n+AC_DEFUN([GCC_WITH_TOOLEXECLIBDIR],\n+[AC_ARG_WITH(toolexeclibdir,\n+  [AS_HELP_STRING([--with-toolexeclibdir=DIR],\n+\t\t  [install libraries built with a cross compiler within DIR])],\n+  [dnl\n+case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac],\n+  [with_toolexeclibdir=no])\n+])"}, {"sha": "f15f03a4a6da7dc2e4f66dda6baac31aee7b4578", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,8 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* doc/install.texi (Cross-Compiler-Specific Options): Document\n+\t`--with-toolexeclibdir' option.\n+\n 2020-01-24  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* target.def (flags_regnum): Also mention effect on delay slot filling."}, {"sha": "6ffafacff5054055f5b59a10534c1e71f40e319a", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -2207,6 +2207,10 @@ target if target binutils supported.\n The following options only apply to building cross compilers.\n \n @table @code\n+@item --with-toolexeclibdir=@var{dir}\n+Specify the installation directory for libraries built with a cross compiler.\n+The default is @option{$@{gcc_tooldir@}/lib}.\n+\n @item --with-sysroot\n @itemx --with-sysroot=@var{dir}\n Tells GCC to consider @var{dir} as the root of a tree that contains"}, {"sha": "8eda1ebe4c1e390907842ac25be3a28866218f6f", "filename": "libada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,9 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* Makefile.in (configure_deps): Add `toolexeclibdir.m4'.\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* configure: Regenerate.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "e6347a57ce899ab7ceffba4b24aabae1730b8b3d", "filename": "libada/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -186,6 +186,7 @@ configure_deps = \\\n \t$(srcdir)/../config/multi.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n \t$(srcdir)/../config/picflag.m4 \\\n+\t$(srcdir)/../config/toolexeclibdir.m4 \\\n \t$(srcdir)/../config/unwind_ipinfo.m4\n \n $(srcdir)/configure: @MAINT@ $(configure_deps)"}, {"sha": "162d9731f260dc77d2548f61de200e08fa9cec8b", "filename": "libada/configure", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libada%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libada%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -704,6 +704,7 @@ enable_option_checking\n with_build_libsubdir\n enable_version_specific_runtime_libs\n enable_maintainer_mode\n+with_toolexeclibdir\n enable_multilib\n enable_shared\n with_system_libunwind\n@@ -1339,6 +1340,9 @@ Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n   --with-build-libsubdir=DIR  Directory where to find libraries for build system\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-system-libunwind use installed libunwind\n   --with-gcc-major-version-only\n                           use only GCC major number in filesystem paths\n@@ -2249,6 +2253,22 @@ else\n fi\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Default to --enable-multilib\n # Check whether --enable-multilib was given.\n if test \"${enable_multilib+set}\" = set; then :\n@@ -2301,7 +2321,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "2810fe18f0947b4079d34b6c4765104ff307f8b0", "filename": "libada/configure.ac", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libada%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libada%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -19,6 +19,7 @@ sinclude(../config/acx.m4)\n sinclude(../config/multi.m4)\n sinclude(../config/override.m4)\n sinclude(../config/picflag.m4)\n+sinclude(../config/toolexeclibdir.m4)\n sinclude(../config/unwind_ipinfo.m4)\n \n AC_INIT\n@@ -67,6 +68,8 @@ AC_ARG_ENABLE([maintainer-mode],\n   [MAINT='#'])\n AC_SUBST([MAINT])dnl\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n AM_ENABLE_MULTILIB(, ..)\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n@@ -83,7 +86,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "4aeaadb189c5739845301e2bdb80910183630333", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,11 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "acf8839a919ab65c79546cf6a9aef152da68f044", "filename": "libatomic/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -106,6 +106,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\"}, {"sha": "80e24219d7d16178f69ad6057f2f1bc046041706", "filename": "libatomic/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1194,6 +1194,7 @@ m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n m4_include([../config/stdint.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../config/warnings.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "8cad97e878a0f07e1110a7194e22301cdf3f8a70", "filename": "libatomic/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -794,6 +794,7 @@ enable_version_specific_runtime_libs\n enable_generated_files_in_srcdir\n enable_silent_rules\n enable_multilib\n+with_toolexeclibdir\n enable_dependency_tracking\n enable_shared\n enable_static\n@@ -1459,6 +1460,9 @@ Optional Features:\n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -3343,6 +3347,22 @@ fi\n ac_config_commands=\"$ac_config_commands default-1\"\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${enable_version_specific_runtime_libs} in\n@@ -3358,7 +3378,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -11360,7 +11387,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11363 \"configure\"\n+#line 11390 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11466,7 +11493,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11469 \"configure\"\n+#line 11496 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "b8df11b4bf3f8740f4f4c83410d8171ef1a0c1f6", "filename": "libatomic/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -84,6 +84,8 @@ target_alias=${target_alias-$host_alias}\n AM_INIT_AUTOMAKE([1.9.0 foreign no-dist -Wall -Wno-portability -Wno-override])\n AM_ENABLE_MULTILIB(, ..)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${enable_version_specific_runtime_libs} in\n@@ -99,7 +101,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "15bb3a4505e376d14bbb4b02af17acf2c2d7ab30", "filename": "libatomic/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libatomic%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Ftestsuite%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -97,6 +97,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/warnings.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\"}, {"sha": "47648d31abd15fb2edb7166639c95276a2dce077", "filename": "libffi/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,13 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* man/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2019-09-27  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* configure: Regenerate."}, {"sha": "f7786ff3fd1106682753df938e99656e6cf97d27", "filename": "libffi/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -103,6 +103,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "9c8c88f8ca643709f9f0c72293d40acf68e5c57e", "filename": "libffi/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1193,6 +1193,7 @@ m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "ca0a2965c7a5ef3567a3d7975283be1f3bb30f19", "filename": "libffi/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -813,6 +813,7 @@ enable_debug\n enable_structs\n enable_raw_api\n enable_purify_safety\n+with_toolexeclibdir\n enable_symvers\n with_gcc_major_version_only\n '\n@@ -1476,6 +1477,9 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-gcc-major-version-only\n                           use only GCC major number in filesystem paths\n \n@@ -11557,7 +11561,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11560 \"configure\"\n+#line 11564 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11663,7 +11667,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11666 \"configure\"\n+#line 11670 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16177,10 +16181,33 @@ $as_echo \"#define USING_PURIFY 1\" >>confdefs.h\n fi\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n if test -n \"$with_cross_host\" &&\n    test x\"$with_cross_host\" != x\"no\"; then\n   toolexecdir='$(exec_prefix)/$(target_alias)'\n-  toolexeclibdir='$(toolexecdir)/lib'\n+  case ${with_toolexeclibdir} in\n+    no)\n+      toolexeclibdir='$(toolexecdir)/lib'\n+      ;;\n+    *)\n+      toolexeclibdir=${with_toolexeclibdir}\n+      ;;\n+  esac\n else\n   toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n   toolexeclibdir='$(libdir)'"}, {"sha": "93e655803e702c2234cea1a610924b6ed20d75a3", "filename": "libffi/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -332,10 +332,19 @@ AC_ARG_ENABLE(purify-safety,\n     AC_DEFINE(USING_PURIFY, 1, [Define this if you are using Purify and want to suppress spurious messages.])\n   fi)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n if test -n \"$with_cross_host\" &&\n    test x\"$with_cross_host\" != x\"no\"; then\n   toolexecdir='$(exec_prefix)/$(target_alias)'\n-  toolexeclibdir='$(toolexecdir)/lib'\n+  case ${with_toolexeclibdir} in\n+    no)\n+      toolexeclibdir='$(toolexecdir)/lib'\n+      ;;\n+    *)\n+      toolexeclibdir=${with_toolexeclibdir}\n+      ;;\n+  esac\n else\n   toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n   toolexeclibdir='$(libdir)'"}, {"sha": "99da8410d8b64c7f27c1bdc75ad3643868ddb353", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -97,6 +97,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "754691095f715cacba2bad7a991f9c5318e51e99", "filename": "libffi/man/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Fman%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Fman%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -96,6 +96,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "31e9cf520b832aa2bd7f035d42d1bbe87c5f61b7", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -96,6 +96,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "0920265f60abceb9a1e3691b65b3f05ff320c7f7", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,9 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* Makefile.in (configure_deps): Add `toolexeclibdir.m4'.\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* configure: Regenerate.\n+\n 2020-01-23  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n \n \t* config/mips/gnustack.h: Check for TARGET_LIBC_GNUSTACK also."}, {"sha": "851e7657d07bd1e1b9de0f93fb742070bb6752c0", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -165,6 +165,7 @@ AUTOCONF = autoconf\n configure_deps = \\\n \t$(srcdir)/../config/enable.m4 \\\n \t$(srcdir)/../config/tls.m4 \\\n+\t$(srcdir)/../config/toolexeclibdir.m4 \\\n \t$(srcdir)/../config/acx.m4 \\\n \t$(srcdir)/../config/no-executables.m4 \\\n \t$(srcdir)/../config/lib-ld.m4 \\"}, {"sha": "ab8d4713196553ba93f306ff39e23175f1c857a1", "filename": "libgcc/configure", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -705,6 +705,7 @@ enable_gcov\n enable_vtable_verify\n with_aix_soname\n enable_version_specific_runtime_libs\n+with_toolexeclibdir\n with_slibdir\n enable_maintainer_mode\n with_build_libsubdir\n@@ -1369,6 +1370,9 @@ Optional Packages:\n   --with-aix-soname=aix|svr4|both\n                           shared library versioning (aka \"SONAME\") variant to\n                           provide on AIX\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-slibdir=DIR      shared libraries in DIR LIBDIR\n   --with-build-libsubdir=DIR  Directory where to find libraries for build system\n   --with-system-libunwind use installed libunwind\n@@ -2464,14 +2468,37 @@ fi\n $as_echo \"$version_specific_libs\" >&6; }\n \n \n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n+\n # Check whether --with-slibdir was given.\n if test \"${with_slibdir+set}\" = set; then :\n   withval=$with_slibdir; slibdir=\"$with_slibdir\"\n else\n   if test \"${version_specific_libs}\" = yes; then\n   slibdir='$(libsubdir)'\n elif test -n \"$with_cross_host\" && test x\"$with_cross_host\" != x\"no\"; then\n-  slibdir='$(exec_prefix)/$(host_noncanonical)/lib'\n+  case ${with_toolexeclibdir} in\n+    no)\n+      slibdir='$(exec_prefix)/$(host_noncanonical)/lib'\n+      ;;\n+    *)\n+      slibdir=${with_toolexeclibdir}\n+      ;;\n+  esac\n else\n   slibdir='$(libdir)'\n fi\n@@ -2701,7 +2728,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_noncanonical)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_noncanonical)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "85979da9ae58211969174862f142755d40a57a03", "filename": "libgcc/configure.ac", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -2,6 +2,7 @@ dnl Process this file with autoconf to produce a configure script.\n \n sinclude(../config/enable.m4)\n sinclude(../config/tls.m4)\n+sinclude(../config/toolexeclibdir.m4)\n sinclude(../config/acx.m4)\n sinclude(../config/no-executables.m4)\n sinclude(../config/lib-ld.m4)\n@@ -113,16 +114,25 @@ AC_ARG_ENABLE(version-specific-runtime-libs,\n [version_specific_libs=no])\n AC_MSG_RESULT($version_specific_libs)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n AC_ARG_WITH(slibdir,\n [  --with-slibdir=DIR      shared libraries in DIR [LIBDIR]],\n slibdir=\"$with_slibdir\",\n-if test \"${version_specific_libs}\" = yes; then\n+[if test \"${version_specific_libs}\" = yes; then\n   slibdir='$(libsubdir)'\n elif test -n \"$with_cross_host\" && test x\"$with_cross_host\" != x\"no\"; then\n-  slibdir='$(exec_prefix)/$(host_noncanonical)/lib'\n+  case ${with_toolexeclibdir} in\n+    no)\n+      slibdir='$(exec_prefix)/$(host_noncanonical)/lib'\n+      ;;\n+    *)\n+      slibdir=${with_toolexeclibdir}\n+      ;;\n+  esac\n else\n   slibdir='$(libdir)'\n-fi)\n+fi])\n AC_SUBST(slibdir)\n \n # Command-line options.\n@@ -168,7 +178,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_noncanonical)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_noncanonical)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "fe7e48040cd19949d9d187b128a760f18cb19180", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,10 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/93234"}, {"sha": "a6804c1d4cf368aacd56a6815c634d87f74cef27", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -167,6 +167,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../config/acx.m4 \\"}, {"sha": "89e5496db5edf7ffd4a61d813493581355ed4ed4", "filename": "libgfortran/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1174,6 +1174,7 @@ m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n m4_include([../config/stdint.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])"}, {"sha": "8ba6831c8b13579b4fb89cd12320e7e50d12f18a", "filename": "libgfortran/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -809,6 +809,7 @@ enable_silent_rules\n enable_maintainer_mode\n enable_multilib\n enable_dependency_tracking\n+with_toolexeclibdir\n enable_cet\n enable_symvers\n with_gnu_ld\n@@ -1480,6 +1481,9 @@ Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n   --with-build-libsubdir=DIR  Directory where to find libraries for build system\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n@@ -5173,6 +5177,22 @@ $as_echo \"$ac_cv_safe_to_define___extensions__\" >&6; }\n \n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -5188,7 +5208,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -12692,7 +12719,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12695 \"configure\"\n+#line 12722 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12798,7 +12825,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12801 \"configure\"\n+#line 12828 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "b2b9ee994aa7ab5b69c8fcb7eb4ab118069b87bf", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -86,6 +86,8 @@ fi\n \n AC_USE_SYSTEM_EXTENSIONS\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -101,7 +103,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "b8fa7d457d8395c41ab3e780789f638841c920d0", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,11 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2020-01-24  Frederik Harwath  <frederik@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c-c++-common/acc_get_property-aux.c"}, {"sha": "7c426caeb682fdd1e8a1c1fd4eeeebb8347e4731", "filename": "libgomp/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -133,10 +133,12 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lthostflags.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n-\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../ltoptions.m4 \\\n-\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n-\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\\n-\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../config/cet.m4 \\\n+\t$(top_srcdir)/../config/tls.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n+\t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n+\t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n \t$(top_srcdir)/plugin/configfrag.ac $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)"}, {"sha": "55d9d71895a2a869dc33d94df7c0b110c07f7df3", "filename": "libgomp/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1177,6 +1177,7 @@ m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n m4_include([../config/tls.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])"}, {"sha": "06fb40b7418933c841308de01eb6b85b4ee0d95d", "filename": "libgomp/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -826,6 +826,7 @@ enable_version_specific_runtime_libs\n enable_generated_files_in_srcdir\n enable_silent_rules\n enable_multilib\n+with_toolexeclibdir\n enable_dependency_tracking\n enable_shared\n enable_static\n@@ -1505,6 +1506,9 @@ Optional Features:\n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -3501,6 +3505,22 @@ fi\n ac_config_commands=\"$ac_config_commands default-1\"\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${enable_version_specific_runtime_libs} in\n@@ -3516,7 +3536,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -11405,7 +11432,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11408 \"configure\"\n+#line 11435 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11511,7 +11538,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11514 \"configure\"\n+#line 11541 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "be53881f4495b50abd8f977003f8bd6253b01a7e", "filename": "libgomp/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -64,6 +64,8 @@ target_alias=${target_alias-$host_alias}\n AM_INIT_AUTOMAKE([1.9.0 foreign no-dist -Wall -Wno-portability -Wno-override])\n AM_ENABLE_MULTILIB(, ..)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${enable_version_specific_runtime_libs} in\n@@ -79,7 +81,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "bf1776117f7d63d5c37f9a89076000ef7c2fc12e", "filename": "libgomp/testsuite/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libgomp%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -99,10 +99,12 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lthostflags.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n-\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/../ltoptions.m4 \\\n-\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n-\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\\n-\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../config/cet.m4 \\\n+\t$(top_srcdir)/../config/tls.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n+\t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n+\t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n+\t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n \t$(top_srcdir)/plugin/configfrag.ac $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)"}, {"sha": "5f32d42e9d7ece8cdbc23318b732eb6f270ac962", "filename": "libhsail-rt/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libhsail-rt%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,10 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "84ad4127c368586b7a4e19b5601d3dca39d1df57", "filename": "libhsail-rt/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libhsail-rt%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -139,6 +139,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.ac"}, {"sha": "0e98ed6070ccc1a31e5b242747712da82806a262", "filename": "libhsail-rt/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libhsail-rt%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1171,6 +1171,7 @@ m4_include([../config/acx.m4])\n m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "49d529c8f5fe0f05c5084053e129a3709f15e253", "filename": "libhsail-rt/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libhsail-rt%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -773,6 +773,7 @@ enable_silent_rules\n enable_maintainer_mode\n enable_dependency_tracking\n enable_version_specific_runtime_libs\n+with_toolexeclibdir\n enable_shared\n enable_static\n with_pic\n@@ -1435,6 +1436,9 @@ Optional Features:\n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -4653,6 +4657,22 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_version_specific_runtime_libs\" >&5\n $as_echo \"$enable_version_specific_runtime_libs\" >&6; }\n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${enable_version_specific_runtime_libs} in\n@@ -4668,7 +4688,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -11212,7 +11239,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11215 \"configure\"\n+#line 11242 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11318,7 +11345,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11321 \"configure\"\n+#line 11348 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "f024b64ad93b66e0528e3c4348fa8a0f2e03b874", "filename": "libhsail-rt/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libhsail-rt%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libhsail-rt%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -69,6 +69,8 @@ ler-specific directory]),\n   [enable_version_specific_runtime_libs=no])\n AC_MSG_RESULT($enable_version_specific_runtime_libs)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${enable_version_specific_runtime_libs} in\n@@ -84,7 +86,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "feccd160330df2f4a582740fb53352c3fc4ada86", "filename": "libitm/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,11 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "7f53ea9b9db3c0a059c6158a31650e01680f9715", "filename": "libitm/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -107,6 +107,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/tls.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/weakref.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\"}, {"sha": "4f65f6944b743c4ea478b1bbda569519c331b22d", "filename": "libitm/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1199,6 +1199,7 @@ m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n m4_include([../config/stdint.m4])\n m4_include([../config/tls.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../config/weakref.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "97db1bc8845c0c9974facb216be608019bca22ad", "filename": "libitm/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -802,6 +802,7 @@ enable_version_specific_runtime_libs\n enable_generated_files_in_srcdir\n enable_silent_rules\n enable_multilib\n+with_toolexeclibdir\n enable_dependency_tracking\n enable_shared\n enable_static\n@@ -1472,6 +1473,9 @@ Optional Features:\n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -3527,6 +3531,22 @@ fi\n ac_config_commands=\"$ac_config_commands default-1\"\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${enable_version_specific_runtime_libs} in\n@@ -3542,7 +3562,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -12037,7 +12064,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12040 \"configure\"\n+#line 12067 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12143,7 +12170,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12146 \"configure\"\n+#line 12173 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "9422889112e289f9dd5a41103aa289013b6521e9", "filename": "libitm/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -78,6 +78,8 @@ target_alias=${target_alias-$host_alias}\n AM_INIT_AUTOMAKE([1.9.0 foreign no-dist -Wall -Wno-portability -Wno-override])\n AM_ENABLE_MULTILIB(, ..)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${enable_version_specific_runtime_libs} in\n@@ -93,7 +95,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "120696d1c25cdfe05190f1b04b3bc1588c829a35", "filename": "libitm/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libitm%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -102,6 +102,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n \t$(top_srcdir)/../config/tls.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/weakref.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\"}, {"sha": "db7fce7df1700bbf55e22575eaf25f47c711a48f", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,10 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* Makefile.in (aclocal_deps): Add `toolexeclibdir.m4'.\n+\t* aclocal.m4: Include `toolexeclibdir.m4'.\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* configure: Regenerate.\n+\n 2020-01-01  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR libobjc/93099"}, {"sha": "46c8540701086c3f83b0df3c07dd1d300c9fe05a", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -293,6 +293,7 @@ aclocal_deps = \\\n \t$(srcdir)/../config/multi.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n \t$(srcdir)/../config/proginstall.m4 \\\n+\t$(srcdir)/../config/toolexeclibdir.m4 \\\n \t$(srcdir)/../ltoptions.m4 \\\n \t$(srcdir)/../ltsugar.m4 \\\n \t$(srcdir)/../ltversion.m4 \\"}, {"sha": "9ac0f645b52b8341effc86b3cd0e57e5aa7a2ae6", "filename": "libobjc/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -153,4 +153,5 @@ m4_include([../config/cet.m4])\n m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([acinclude.m4])"}, {"sha": "46124b2a9e01e7e4c93c213b244e3939cc98e102", "filename": "libobjc/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -746,6 +746,7 @@ with_target_subdir\n with_cross_host\n enable_version_specific_runtime_libs\n enable_multilib\n+with_toolexeclibdir\n enable_cet\n enable_maintainer_mode\n enable_shared\n@@ -1402,6 +1403,9 @@ Optional Packages:\n   --with-target-subdir=SUBDIR\n                            configuring in a subdirectory\n   --with-cross-host=HOST  configuring with a cross compiler\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -2502,6 +2506,22 @@ case $srcdir in\n esac\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -2517,7 +2537,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_noncanonical)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_noncanonical)'\n       toolexeclibdir='$(libdir)'\n@@ -10748,7 +10775,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10751 \"configure\"\n+#line 10778 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10854,7 +10881,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10857 \"configure\"\n+#line 10884 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "9c8aa829cd7bb66a67cceeb5c15608008f03f1f3", "filename": "libobjc/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -76,6 +76,8 @@ case $srcdir in\n esac\n AC_SUBST(glibcpp_srcdir)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -91,7 +93,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_noncanonical)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_noncanonical)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "2c3cfffef2dede9a2f1f6f50f60eb9825a0c7489", "filename": "liboffloadmic/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,14 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* plugin/configure.ac: Handle `--with-toolexeclibdir='.\n+\t* plugin/Makefile.in: Regenerate.\n+\t* plugin/aclocal.m4: Regenerate.\n+\t* plugin/configure: Regenerate.\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-01-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* plugin/libgomp-plugin-intelmic.cpp (GOMP_OFFLOAD_get_property):"}, {"sha": "43abc5a40e8dce06987a2c81690c27a999062ae2", "filename": "liboffloadmic/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -126,6 +126,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.ac"}, {"sha": "31a2695c10ebc2246492941e3468a56ebd842061", "filename": "liboffloadmic/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1172,6 +1172,7 @@ m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "cd011799a6c01b1c7b00b7676db9e454afc24822", "filename": "liboffloadmic/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -775,6 +775,7 @@ enable_maintainer_mode\n enable_dependency_tracking\n enable_multilib\n enable_version_specific_runtime_libs\n+with_toolexeclibdir\n enable_shared\n enable_static\n with_pic\n@@ -1437,6 +1438,9 @@ Optional Features:\n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -5293,6 +5297,22 @@ else\n fi\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir.\n # Also toolexecdir, though it's only used in toolexeclibdir.\n case ${enable_version_specific_runtime_libs} in\n@@ -5308,7 +5328,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -11403,7 +11430,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11406 \"configure\"\n+#line 11433 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11509,7 +11536,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11512 \"configure\"\n+#line 11539 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "f64f182e8efa72d68499c59eb38c00e226274d8a", "filename": "liboffloadmic/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -79,6 +79,8 @@ case \"$enable_liboffloadmic\" in\n esac\n AM_CONDITIONAL(LIBOFFLOADMIC_HOST, [test x\"$enable_liboffloadmic\" = xhost])\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir.\n # Also toolexecdir, though it's only used in toolexeclibdir.\n case ${enable_version_specific_runtime_libs} in\n@@ -94,7 +96,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "8d5ad0025c221fb1c10a331d49fe0d823b4442ef", "filename": "liboffloadmic/plugin/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fplugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fplugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -123,6 +123,7 @@ subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../config/acx.m4 \\\n \t$(top_srcdir)/../../config/depstand.m4 \\\n+\t$(top_srcdir)/../../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../../config/lead-dot.m4 \\\n \t$(top_srcdir)/../../config/multi.m4 \\\n \t$(top_srcdir)/../../config/override.m4 \\"}, {"sha": "9fa1d1216c13e3d991f682b7fbde3663ac986446", "filename": "liboffloadmic/plugin/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fplugin%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fplugin%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1169,6 +1169,7 @@ AC_SUBST([am__untar])\n \n m4_include([../../config/acx.m4])\n m4_include([../../config/depstand.m4])\n+m4_include([../../config/toolexeclibdir.m4])\n m4_include([../../config/lead-dot.m4])\n m4_include([../../config/multi.m4])\n m4_include([../../config/override.m4])"}, {"sha": "cf485223f41d558c10ad6fc62d5081658d8642e2", "filename": "liboffloadmic/plugin/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fplugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fplugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -771,6 +771,7 @@ enable_maintainer_mode\n enable_dependency_tracking\n enable_multilib\n enable_version_specific_runtime_libs\n+with_toolexeclibdir\n enable_shared\n enable_static\n with_pic\n@@ -1434,6 +1435,9 @@ Optional Features:\n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -4542,6 +4546,22 @@ fi\n $as_echo \"$enable_version_specific_runtime_libs\" >&6; }\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir.\n # Also toolexecdir, though it's only used in toolexeclibdir.\n case ${enable_version_specific_runtime_libs} in\n@@ -4557,7 +4577,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -11050,7 +11077,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11053 \"configure\"\n+#line 11080 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11156,7 +11183,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11159 \"configure\"\n+#line 11186 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "cbcd0130d0517e3a69dd9ef457083635a091e22a", "filename": "liboffloadmic/plugin/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fplugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/liboffloadmic%2Fplugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/liboffloadmic%2Fplugin%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -95,6 +95,8 @@ AC_ARG_ENABLE([version-specific-runtime-libs],\n AC_MSG_RESULT($enable_version_specific_runtime_libs)\n \n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir.\n # Also toolexecdir, though it's only used in toolexeclibdir.\n case ${enable_version_specific_runtime_libs} in\n@@ -110,7 +112,14 @@ case ${enable_version_specific_runtime_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "285dfa515b639a4bfd2413a5a06410bf9bf56f21", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,14 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* m4/druntime.m4: Handle `--with-toolexeclibdir='.\n+\t* m4/Makefile.in: Regenerate.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\t* src/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "4e6d044852553b93e7e0ad0ebaa8a9d9b37c32bb", "filename": "libphobos/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -111,6 +111,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "899592de39414d553361405d720616b398b46664", "filename": "libphobos/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -876,6 +876,7 @@ m4_include([../config/acx.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "741e23ea7a854a457d346fb320165137060e58dc", "filename": "libphobos/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -837,6 +837,7 @@ with_libbacktrace\n with_target_system_zlib\n with_cross_host\n enable_version_specific_runtime_libs\n+with_toolexeclibdir\n enable_libphobos\n '\n       ac_precious_vars='build_alias\n@@ -1504,6 +1505,9 @@ Optional Packages:\n   --with-target-system-zlib={yes,no,auto}\n                           use installed libz (default: no)\n   --with-cross-host=HOST  configuring with a cross compiler\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11640,7 +11644,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11643 \"configure\"\n+#line 11647 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11746,7 +11750,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11749 \"configure\"\n+#line 11753 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15237,6 +15241,22 @@ fi\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $version_specific_libs\" >&5\n $as_echo \"$version_specific_libs\" >&6; }\n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n   # Version-specific runtime libs processing.\n   if test $version_specific_libs = yes; then\n     libphobos_toolexecdir='${libdir}/gcc/${host_alias}'\n@@ -15246,7 +15266,14 @@ $as_echo \"$version_specific_libs\" >&6; }\n     # Install a library built with a cross compiler in tooldir, not libdir.\n     if test -n \"$with_cross_host\" && test x\"$with_cross_host\" != x\"no\"; then\n       libphobos_toolexecdir='${exec_prefix}/${host_alias}'\n-      libphobos_toolexeclibdir='${toolexecdir}/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  libphobos_toolexeclibdir='${toolexecdir}/lib'\n+\t  ;;\n+\t*)\n+\t  libphobos_toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       libphobos_toolexecdir='${libdir}/gcc/${host_alias}'\n       libphobos_toolexeclibdir='${libdir}'"}, {"sha": "63422308c65dcffd8f22b5fb51f2b1282a94b6b7", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -136,6 +136,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "3b6e474488ddc591ef419c168c400ebaa211d8eb", "filename": "libphobos/m4/druntime.m4", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Fm4%2Fdruntime.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Fm4%2Fdruntime.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fm4%2Fdruntime.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -80,6 +80,8 @@ AC_DEFUN([DRUNTIME_INSTALL_DIRECTORIES],\n     [version_specific_libs=no])\n   AC_MSG_RESULT($version_specific_libs)\n \n+  GCC_WITH_TOOLEXECLIBDIR\n+\n   # Version-specific runtime libs processing.\n   if test $version_specific_libs = yes; then\n     libphobos_toolexecdir='${libdir}/gcc/${host_alias}'\n@@ -89,7 +91,14 @@ AC_DEFUN([DRUNTIME_INSTALL_DIRECTORIES],\n     # Install a library built with a cross compiler in tooldir, not libdir.\n     if test -n \"$with_cross_host\" && test x\"$with_cross_host\" != x\"no\"; then\n       libphobos_toolexecdir='${exec_prefix}/${host_alias}'\n-      libphobos_toolexeclibdir='${toolexecdir}/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  libphobos_toolexeclibdir='${toolexecdir}/lib'\n+\t  ;;\n+\t*)\n+\t  libphobos_toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       libphobos_toolexecdir='${libdir}/gcc/${host_alias}'\n       libphobos_toolexeclibdir='${libdir}'"}, {"sha": "c30b66d086c907725d8c12b07f22aa4c05350368", "filename": "libphobos/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -96,6 +96,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "72e6d04793b305a1441fc85def9fe133a37f4a65", "filename": "libphobos/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libphobos%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -96,6 +96,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\"}, {"sha": "0b1db14d8d6d3a82f5fefc967954fea726edf3f8", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,10 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "8c0112122585353ca74b4a411e0ae42eaf74c40c", "filename": "libquadmath/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -100,6 +100,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "f15cc0b9f0813ce2a20684bb9b961b93de99dba1", "filename": "libquadmath/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1174,6 +1174,7 @@ m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/no-executables.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])"}, {"sha": "339e80944e6ddf0b7064b35a78972864ae04f2c3", "filename": "libquadmath/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -786,6 +786,7 @@ enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n+with_toolexeclibdir\n enable_symvers\n enable_cet\n enable_generated_files_in_srcdir\n@@ -1451,6 +1452,9 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-gcc-major-version-only\n                           use only GCC major number in filesystem paths\n \n@@ -10810,7 +10814,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10813 \"configure\"\n+#line 10817 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10916,7 +10920,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10919 \"configure\"\n+#line 10923 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12088,6 +12092,22 @@ ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -12103,7 +12123,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "f9d745e60ca4102e1dba260adb0218e69d59f4c9", "filename": "libquadmath/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libquadmath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -82,6 +82,8 @@ if test \"x$GCC\" != \"xyes\"; then\n fi\n AC_PROG_CPP\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -97,7 +99,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "16b45a48b6fec212423e21f8d4de6ba76c1a34ab", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,17 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* asan/Makefile.in: Regenerate.\n+\t* interception/Makefile.in: Regenerate.\n+\t* libbacktrace/Makefile.in: Regenerate.\n+\t* lsan/Makefile.in: Regenerate.\n+\t* sanitizer_common/Makefile.in: Regenerate.\n+\t* tsan/Makefile.in: Regenerate.\n+\t* ubsan/Makefile.in: Regenerate.\n+\n 2019-11-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/92154"}, {"sha": "02c7f70ac6578a3e93a490ce8bd2c54fc0693c50", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -105,6 +105,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "85f72c2eb4797ece69bd7d5fe0496915b4c5060a", "filename": "libsanitizer/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1194,6 +1194,7 @@ m4_include([../config/libstdc++-raw-cxx.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n m4_include([../config/stdint.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])"}, {"sha": "bad15b7984f4e39d8e8272932d193251d99928ef", "filename": "libsanitizer/asan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -102,6 +102,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "0c56bdf2d7d48292564aa74e71dd51d5bf10c4e2", "filename": "libsanitizer/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -806,6 +806,7 @@ enable_version_specific_runtime_libs\n enable_dependency_tracking\n enable_silent_rules\n enable_maintainer_mode\n+with_toolexeclibdir\n enable_shared\n enable_static\n with_pic\n@@ -1470,6 +1471,9 @@ Optional Features:\n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -5012,6 +5016,22 @@ fi\n \n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -5027,7 +5047,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -12334,7 +12361,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12337 \"configure\"\n+#line 12364 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12440,7 +12467,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12443 \"configure\"\n+#line 12470 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "a0950c29ebe2c0bf862ffe08f9a441c554da3220", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -29,6 +29,8 @@ GCC_LIBSTDCXX_RAW_CXX_FLAGS\n AM_INIT_AUTOMAKE(foreign no-dist)\n AM_MAINTAINER_MODE\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -44,7 +46,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "c8868faa0c37043e8292b55ca090c781ea773d0a", "filename": "libsanitizer/interception/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Finterception%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Finterception%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -98,6 +98,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "8e6507872e75aa9248a7496d7973752a69eb9f19", "filename": "libsanitizer/libbacktrace/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flibbacktrace%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -129,6 +129,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "acc76ca1342aff47fb092d3482ee2a7e0e4bafa2", "filename": "libsanitizer/lsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Flsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Flsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -100,6 +100,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "450651b4f5b78788eef6c7d16a0f0f9fcfd46afc", "filename": "libsanitizer/sanitizer_common/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fsanitizer_common%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fsanitizer_common%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -104,6 +104,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "74896427edfe8349e86a8078abd0b0599c659e7b", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -101,6 +101,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "654cb648540c985e65c5999ab55d551fa5dae831", "filename": "libsanitizer/ubsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fubsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libsanitizer%2Fubsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -100,6 +100,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "f1ccde4e36f629cd3a2b805839ceb34f122e9549", "filename": "libssp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,10 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "bc8a0dc2b283a6ac2d7b0863022dc7e2c01266cf", "filename": "libssp/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -101,6 +101,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.ac"}, {"sha": "68fc0a4a718a9a681cb4a4ce756e8644f1f7d594", "filename": "libssp/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1176,6 +1176,7 @@ m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/no-executables.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])"}, {"sha": "5541cf9d9728b74200a88ad675bdd541a51c9156", "filename": "libssp/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -781,6 +781,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_toolexeclibdir\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1432,6 +1433,9 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-gcc-major-version-only\n                           use only GCC major number in filesystem paths\n \n@@ -10992,7 +10996,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10995 \"configure\"\n+#line 10999 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11098,7 +11102,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11101 \"configure\"\n+#line 11105 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11360,6 +11364,22 @@ esac\n \n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -11375,7 +11395,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "f30f81c54f620d1810186928f10feeb9b3e9808d", "filename": "libssp/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libssp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -163,6 +163,8 @@ ACX_LT_HOST_FLAGS\n AC_SUBST(enable_shared)\n AC_SUBST(enable_static)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -178,7 +180,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "2e96d56c12cc1e55686996441df98e757c88184c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,21 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* acinclude.m4: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* doc/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* po/Makefile.in: Regenerate.\n+\t* python/Makefile.in: Regenerate.\n+\t* src/Makefile.in: Regenerate.\n+\t* src/c++11/Makefile.in: Regenerate.\n+\t* src/c++17/Makefile.in: Regenerate.\n+\t* src/c++98/Makefile.in: Regenerate.\n+\t* src/filesystem/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2020-01-23  Alexandre Oliva <oliva@adacore.com>\n \n \t* crossconfig.m4 (GLIBCXX_CHECK_MATH_DECL): Reject macros."}, {"sha": "8f11aaf2810d98667fa5f498558c128f1d9834f2", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -104,6 +104,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "39147916e9492d9f8199f688482d19ec9c579096", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -785,6 +785,8 @@ AC_DEFUN([GLIBCXX_EXPORT_INSTALL_INFO], [\n     [version_specific_libs=no])\n   AC_MSG_RESULT($version_specific_libs)\n \n+  GCC_WITH_TOOLEXECLIBDIR\n+\n   # Default case for install directory for include files.\n   if test $version_specific_libs = no && test $gxx_include_dir = no; then\n     gxx_include_dir='include/c++/${gcc_version}'\n@@ -815,7 +817,14 @@ AC_DEFUN([GLIBCXX_EXPORT_INSTALL_INFO], [\n     if test -n \"$with_cross_host\" &&\n        test x\"$with_cross_host\" != x\"no\"; then\n       glibcxx_toolexecdir='${exec_prefix}/${host_alias}'\n-      glibcxx_toolexeclibdir='${toolexecdir}/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  glibcxx_toolexeclibdir='${toolexecdir}/lib'\n+\t  ;;\n+\t*)\n+\t  glibcxx_toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       glibcxx_toolexecdir='${libdir}/gcc/${host_alias}'\n       glibcxx_toolexeclibdir='${libdir}'"}, {"sha": "b2f43aa10a65909ed09ccdaf3cf6bfc91279ff42", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -866,6 +866,7 @@ m4_include([../config/multi.m4])\n m4_include([../config/no-executables.m4])\n m4_include([../config/override.m4])\n m4_include([../config/stdint.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../config/unwind_ipinfo.m4])\n m4_include([../libtool.m4])\n m4_include([../ltoptions.m4])"}, {"sha": "3af3dec093eddb6b5702fe3a480fbd0b0f870633", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 37, "deletions": 10, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -942,6 +942,7 @@ enable_libstdcxx_filesystem_ts\n enable_cet\n with_gxx_include_dir\n enable_version_specific_runtime_libs\n+with_toolexeclibdir\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1669,6 +1670,9 @@ Optional Packages:\n                           set the std::string ABI to use by default\n   --with-gxx-include-dir=DIR\n                           installation directory for include files\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-gcc-major-version-only\n                           use only GCC major number in filesystem paths\n \n@@ -12053,7 +12057,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12056 \"configure\"\n+#line 12060 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12159,7 +12163,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12162 \"configure\"\n+#line 12166 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15851,7 +15855,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15854 \"configure\"\n+#line 15858 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15886,7 +15890,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15889 \"configure\"\n+#line 15893 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15921,7 +15925,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15924 \"configure\"\n+#line 15928 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15957,7 +15961,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15960 \"configure\"\n+#line 15964 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -16110,7 +16114,7 @@ $as_echo \"mutex\" >&6; }\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16113 \"configure\"\n+#line 16117 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -16152,7 +16156,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16155 \"configure\"\n+#line 16159 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -16186,7 +16190,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16189 \"configure\"\n+#line 16193 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -77837,6 +77841,22 @@ fi\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $version_specific_libs\" >&5\n $as_echo \"$version_specific_libs\" >&6; }\n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n   # Default case for install directory for include files.\n   if test $version_specific_libs = no && test $gxx_include_dir = no; then\n     gxx_include_dir='include/c++/${gcc_version}'\n@@ -77867,7 +77887,14 @@ $as_echo \"$version_specific_libs\" >&6; }\n     if test -n \"$with_cross_host\" &&\n        test x\"$with_cross_host\" != x\"no\"; then\n       glibcxx_toolexecdir='${exec_prefix}/${host_alias}'\n-      glibcxx_toolexeclibdir='${toolexecdir}/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  glibcxx_toolexeclibdir='${toolexecdir}/lib'\n+\t  ;;\n+\t*)\n+\t  glibcxx_toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       glibcxx_toolexecdir='${libdir}/gcc/${host_alias}'\n       glibcxx_toolexeclibdir='${libdir}'"}, {"sha": "9134d6633f5e88f97fab17cfa2cd275e0cc4f3ef", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -104,6 +104,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "123d24bb1c656ee6669569e4ee18511536740a9e", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -104,6 +104,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "a0a500eabe58f2a141470ab7cc52802d4471c50a", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -106,6 +106,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "a0f84b0cfa00ee8107cf625c7e72f63b663dcaa9", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -104,6 +104,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "1817b3340aa66cc7c66b3d9859901169f65bdaf3", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -105,6 +105,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "ea37a962a9a503ee6c3d8505a100f6888efa7e7a", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -105,6 +105,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "b15244dbf007877fd788a9a7ab52bad714c6afd3", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -105,6 +105,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "07a88759fb222704691d9e7528d6d940432f401c", "filename": "libstdc++-v3/src/c++17/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -105,6 +105,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "6895780a5f796bd603210ecc7920c45044376fef", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -105,6 +105,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "05335874b57c762cb9140b3290bcf51a6e5dd9a6", "filename": "libstdc++-v3/src/filesystem/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -105,6 +105,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "2c248cf630299d86cddb76145808eb4b4f2a6f79", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -104,6 +104,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n \t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\"}, {"sha": "c0b68784f306fd144b0b37a72f7ec2cbfcd67480", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,11 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "70b440347126836f7dabef97c4ee5cce1ab0c379", "filename": "libvtv/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -101,6 +101,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lthostflags.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "7da4c3a5b9bae2d84fca357ff4b309e168785aaf", "filename": "libvtv/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1174,6 +1174,7 @@ m4_include([../config/libstdc++-raw-cxx.m4])\n m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])"}, {"sha": "fc969525da01e10ce0c6657b2bec07834ebd6372", "filename": "libvtv/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -790,6 +790,7 @@ enable_vtable_verify\n enable_dependency_tracking\n enable_silent_rules\n enable_maintainer_mode\n+with_toolexeclibdir\n enable_shared\n enable_static\n with_pic\n@@ -1450,6 +1451,9 @@ Optional Features:\n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -4807,6 +4811,22 @@ fi\n \n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -4822,7 +4842,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'\n@@ -12235,7 +12262,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12238 \"configure\"\n+#line 12265 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12341,7 +12368,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12344 \"configure\"\n+#line 12371 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "f3b937e4b108de9a4466ed0c29fd4c9d9f50285e", "filename": "libvtv/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -78,6 +78,8 @@ AM_MAINTAINER_MODE\n \n LIBVTV_CONFIGURE\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n@@ -93,7 +95,14 @@ case ${version_specific_libs} in\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n       toolexecdir='$(exec_prefix)/$(target_alias)'\n-      toolexeclibdir='$(toolexecdir)/lib'\n+      case ${with_toolexeclibdir} in\n+\tno)\n+\t  toolexeclibdir='$(toolexecdir)/lib'\n+\t  ;;\n+\t*)\n+\t  toolexeclibdir=${with_toolexeclibdir}\n+\t  ;;\n+      esac\n     else\n       toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n       toolexeclibdir='$(libdir)'"}, {"sha": "cb804c442d688a823611a975d85e5660a99ae3ea", "filename": "libvtv/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/libvtv%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Ftestsuite%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -97,6 +97,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/lthostflags.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\"}, {"sha": "60f0a1d4c105cedb49d96aa19743f01e694c4ba9", "filename": "zlib/ChangeLog.gcj", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog.gcj?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1,3 +1,10 @@\n+2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* configure.ac: Handle `--with-toolexeclibdir='.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n 2019-09-27  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* configure: Regenerate."}, {"sha": "dce9ffce9e4e2980c60d6363d540df96605b68e5", "filename": "zlib/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FMakefile.in?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -96,6 +96,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/toolexeclibdir.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 \\"}, {"sha": "d319d09e85490c38390208d76452ec41246353e5", "filename": "zlib/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Faclocal.m4?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -1171,6 +1171,7 @@ m4_include([../config/depstand.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])\n+m4_include([../config/toolexeclibdir.m4])\n m4_include([../ltoptions.m4])\n m4_include([../ltsugar.m4])\n m4_include([../ltversion.m4])"}, {"sha": "484a4938f4a81c3b05a5c3e7334b92bbb25ae444", "filename": "zlib/configure", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -774,6 +774,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+with_toolexeclibdir\n enable_host_shared\n '\n       ac_precious_vars='build_alias\n@@ -1427,6 +1428,9 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-toolexeclibdir=DIR\n+                          install libraries built with a cross compiler within\n+                          DIR\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -10648,7 +10652,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10651 \"configure\"\n+#line 10655 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10754,7 +10758,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10757 \"configure\"\n+#line 10761 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11379,10 +11383,33 @@ fi\n done\n \n \n+\n+# Check whether --with-toolexeclibdir was given.\n+if test \"${with_toolexeclibdir+set}\" = set; then :\n+  withval=$with_toolexeclibdir; case ${with_toolexeclibdir} in\n+  /)\n+    ;;\n+  */)\n+    with_toolexeclibdir=`echo $with_toolexeclibdir | sed 's,/$,,'`\n+    ;;\n+esac\n+else\n+  with_toolexeclibdir=no\n+fi\n+\n+\n+\n if test -n \"$with_cross_host\" &&\n    test x\"$with_cross_host\" != x\"no\"; then\n   toolexecdir='$(exec_prefix)/$(target_alias)'\n-  toolexeclibdir='$(toolexecdir)/lib'\n+  case ${with_toolexeclibdir} in\n+    no)\n+      toolexeclibdir='$(toolexecdir)/lib'\n+      ;;\n+    *)\n+      toolexeclibdir=${with_toolexeclibdir}\n+      ;;\n+  esac\n else\n   toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n   toolexeclibdir='$(libdir)'"}, {"sha": "ad9ec73bae2ba322c19112e9079aa6fe2e80068b", "filename": "zlib/configure.ac", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e66971cdc6d1390d47a227899e2e340ff44d66/zlib%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure.ac?ref=e8e66971cdc6d1390d47a227899e2e340ff44d66", "patch": "@@ -81,10 +81,19 @@ fi\n \n AC_CHECK_HEADERS(unistd.h)\n \n+GCC_WITH_TOOLEXECLIBDIR\n+\n if test -n \"$with_cross_host\" &&\n    test x\"$with_cross_host\" != x\"no\"; then\n   toolexecdir='$(exec_prefix)/$(target_alias)'\n-  toolexeclibdir='$(toolexecdir)/lib'\n+  case ${with_toolexeclibdir} in\n+    no)\n+      toolexeclibdir='$(toolexecdir)/lib'\n+      ;;\n+    *)\n+      toolexeclibdir=${with_toolexeclibdir}\n+      ;;\n+  esac\n else\n   toolexecdir='$(libdir)/gcc-lib/$(target_alias)'\n   toolexeclibdir='$(libdir)'"}]}