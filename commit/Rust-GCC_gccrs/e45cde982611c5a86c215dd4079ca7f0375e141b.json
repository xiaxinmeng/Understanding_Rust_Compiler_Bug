{"sha": "e45cde982611c5a86c215dd4079ca7f0375e141b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ1Y2RlOTgyNjExYzVhODZjMjE1ZGQ0MDc5Y2E3ZjAzNzVlMTQxYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-02-08T12:55:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-02-08T12:55:13Z"}, "message": "re PR middle-end/56231 (warning traces have bogus line information when using LTO)\n\n2013-02-08  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/56231\n\t* lto-streamer.h (struct data_in): Remove current_file, current_line\n\tand current_col members.\n\t* lto-streamer-out.c (lto_output_location): Stream changed bits\n\ten-block for efficiency.\n\t* lto-streamer-in.c (clear_line_info): Remove.\n\t(lto_input_location): Cache current file, line and column\n\tglobally via local statics.  Read changed bits en-block.\n\t(input_function): Do not call clear_line_info.\n\t(lto_read_body): Likewise.\n\t(lto_input_toplevel_asms): Likewise.\n\n\tlto/\n\t* lto-lang.c (lto_init): Do not enter a dummy file.\n\nFrom-SVN: r195884", "tree": {"sha": "2b580cff0a35536512ce08acfa951238833efcb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b580cff0a35536512ce08acfa951238833efcb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e45cde982611c5a86c215dd4079ca7f0375e141b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45cde982611c5a86c215dd4079ca7f0375e141b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e45cde982611c5a86c215dd4079ca7f0375e141b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45cde982611c5a86c215dd4079ca7f0375e141b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1ca73d819136e8fee6af5b8a616840ee59594d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1ca73d819136e8fee6af5b8a616840ee59594d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1ca73d819136e8fee6af5b8a616840ee59594d6"}], "stats": {"total": 76, "additions": 38, "deletions": 38}, "files": [{"sha": "d7b0e643b7f85eb37eee21c80fbb08a7f7635f8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e45cde982611c5a86c215dd4079ca7f0375e141b", "patch": "@@ -1,3 +1,17 @@\n+2013-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/56231\n+\t* lto-streamer.h (struct data_in): Remove current_file, current_line\n+\tand current_col members.\n+\t* lto-streamer-out.c (lto_output_location): Stream changed bits\n+\ten-block for efficiency.\n+\t* lto-streamer-in.c (clear_line_info): Remove.\n+\t(lto_input_location): Cache current file, line and column\n+\tglobally via local statics.  Read changed bits en-block.\n+\t(input_function): Do not call clear_line_info.\n+\t(lto_read_body): Likewise.\n+\t(lto_input_toplevel_asms): Likewise.\n+\n 2013-02-08  Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/52448"}, {"sha": "f3a08884b53e2c9029c543be2befd847c8631e39", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 16, "deletions": 29, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=e45cde982611c5a86c215dd4079ca7f0375e141b", "patch": "@@ -123,58 +123,48 @@ canon_file_name (const char *string)\n }\n \n \n-/* Clear the line info stored in DATA_IN.  */\n-\n-static void\n-clear_line_info (struct data_in *data_in)\n-{\n-  if (data_in->current_file)\n-    linemap_add (line_table, LC_LEAVE, false, NULL, 0);\n-  data_in->current_file = NULL;\n-  data_in->current_line = 0;\n-  data_in->current_col = 0;\n-}\n-\n-\n /* Read a location bitpack from input block IB.  */\n \n location_t\n lto_input_location (struct bitpack_d *bp, struct data_in *data_in)\n {\n+  static const char *current_file;\n+  static int current_line;\n+  static int current_col;\n   bool file_change, line_change, column_change;\n   unsigned len;\n-  bool prev_file = data_in->current_file != NULL;\n+  bool prev_file = current_file != NULL;\n \n   if (bp_unpack_value (bp, 1))\n     return UNKNOWN_LOCATION;\n \n   file_change = bp_unpack_value (bp, 1);\n+  line_change = bp_unpack_value (bp, 1);\n+  column_change = bp_unpack_value (bp, 1);\n+\n   if (file_change)\n-    data_in->current_file = canon_file_name\n-\t\t\t      (string_for_index (data_in,\n-\t\t\t\t\t\t bp_unpack_var_len_unsigned (bp),\n-\t\t\t\t\t         &len));\n+    current_file = canon_file_name\n+\t\t     (string_for_index (data_in,\n+\t\t\t\t\tbp_unpack_var_len_unsigned (bp),\n+\t\t\t\t\t&len));\n \n-  line_change = bp_unpack_value (bp, 1);\n   if (line_change)\n-    data_in->current_line = bp_unpack_var_len_unsigned (bp);\n+    current_line = bp_unpack_var_len_unsigned (bp);\n \n-  column_change = bp_unpack_value (bp, 1);\n   if (column_change)\n-    data_in->current_col = bp_unpack_var_len_unsigned (bp);\n+    current_col = bp_unpack_var_len_unsigned (bp);\n \n   if (file_change)\n     {\n       if (prev_file)\n \tlinemap_add (line_table, LC_LEAVE, false, NULL, 0);\n \n-      linemap_add (line_table, LC_ENTER, false, data_in->current_file,\n-\t\t   data_in->current_line);\n+      linemap_add (line_table, LC_ENTER, false, current_file, current_line);\n     }\n   else if (line_change)\n-    linemap_line_start (line_table, data_in->current_line, data_in->current_col);\n+    linemap_line_start (line_table, current_line, current_col);\n \n-  return linemap_position_for_column (line_table, data_in->current_col);\n+  return linemap_position_for_column (line_table, current_col);\n }\n \n \n@@ -806,7 +796,6 @@ input_function (tree fn_decl, struct data_in *data_in,\n \n   fn = DECL_STRUCT_FUNCTION (fn_decl);\n   tag = streamer_read_record_start (ib);\n-  clear_line_info (data_in);\n \n   gimple_register_cfg_hooks ();\n   lto_tag_check (tag, LTO_function);\n@@ -987,7 +976,6 @@ lto_read_body (struct lto_file_decl_data *file_data, tree fn_decl,\n       pop_cfun ();\n     }\n \n-  clear_line_info (data_in);\n   lto_data_in_delete (data_in);\n }\n \n@@ -1137,7 +1125,6 @@ lto_input_toplevel_asms (struct lto_file_decl_data *file_data, int order_base)\n \tsymtab_order = node->order + 1;\n     }\n \n-  clear_line_info (data_in);\n   lto_data_in_delete (data_in);\n \n   lto_free_section_data (file_data, LTO_section_asm, NULL, data, len);"}, {"sha": "f8207c8e02249f4e29803ce42f1066bcb365ae13", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=e45cde982611c5a86c215dd4079ca7f0375e141b", "patch": "@@ -162,19 +162,20 @@ lto_output_location (struct output_block *ob, struct bitpack_d *bp,\n   xloc = expand_location (loc);\n \n   bp_pack_value (bp, ob->current_file != xloc.file, 1);\n+  bp_pack_value (bp, ob->current_line != xloc.line, 1);\n+  bp_pack_value (bp, ob->current_col != xloc.column, 1);\n+\n   if (ob->current_file != xloc.file)\n     bp_pack_var_len_unsigned (bp,\n \t                      streamer_string_index (ob, xloc.file,\n \t\t\t\t\t\t     strlen (xloc.file) + 1,\n \t\t\t\t\t\t     true));\n   ob->current_file = xloc.file;\n \n-  bp_pack_value (bp, ob->current_line != xloc.line, 1);\n   if (ob->current_line != xloc.line)\n     bp_pack_var_len_unsigned (bp, xloc.line);\n   ob->current_line = xloc.line;\n \n-  bp_pack_value (bp, ob->current_col != xloc.column, 1);\n   if (ob->current_col != xloc.column)\n     bp_pack_var_len_unsigned (bp, xloc.column);\n   ob->current_col = xloc.column;"}, {"sha": "919e304e107d7326d63218e020a5b86daad8f660", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=e45cde982611c5a86c215dd4079ca7f0375e141b", "patch": "@@ -691,10 +691,6 @@ struct data_in\n   /* Number of unnamed labels.  */\n   unsigned int num_unnamed_labels;\n \n-  const char *current_file;\n-  int current_line;\n-  int current_col;\n-\n   /* Maps each reference number to the resolution done by the linker. */\n   vec<ld_plugin_symbol_resolution_t> globals_resolution;\n "}, {"sha": "e3530da973e3d30fb8664111babad7e6dd2bf3e4", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=e45cde982611c5a86c215dd4079ca7f0375e141b", "patch": "@@ -1,3 +1,8 @@\n+2013-02-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/56231\n+\t* lto-lang.c (lto_init): Do not enter a dummy file.\n+\n 2013-02-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR bootstrap/56227"}, {"sha": "87a756d57639bb83095764f40f16b39688772e69", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45cde982611c5a86c215dd4079ca7f0375e141b/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=e45cde982611c5a86c215dd4079ca7f0375e141b", "patch": "@@ -1156,9 +1156,6 @@ lto_init (void)\n   /* We need to generate LTO if running in WPA mode.  */\n   flag_generate_lto = flag_wpa;\n \n-  /* Initialize libcpp line maps for gcc_assert to work.  */\n-  linemap_add (line_table, LC_ENTER, 0, NULL, 0);\n-\n   /* Create the basic integer types.  */\n   build_common_tree_nodes (flag_signed_char, /*short_double=*/false);\n "}]}