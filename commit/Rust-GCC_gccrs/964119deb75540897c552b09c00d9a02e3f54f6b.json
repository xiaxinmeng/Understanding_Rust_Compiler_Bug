{"sha": "964119deb75540897c552b09c00d9a02e3f54f6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY0MTE5ZGViNzU1NDA4OTdjNTUyYjA5YzAwZDlhMDJlM2Y1NGY2Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-01T14:45:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-01T14:45:16Z"}, "message": "(gpc_reg_operand): Include kernel registers.\n\n(call_operand, case SYMBOL_REF): Handle TARGET_LARGE_MEMORY and\nSYMBOL_REF_FLAG.\n\nFrom-SVN: r5541", "tree": {"sha": "ca6738b79fbcec9205b0eedadbd9c60f98232715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6738b79fbcec9205b0eedadbd9c60f98232715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/964119deb75540897c552b09c00d9a02e3f54f6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/964119deb75540897c552b09c00d9a02e3f54f6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/964119deb75540897c552b09c00d9a02e3f54f6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/964119deb75540897c552b09c00d9a02e3f54f6b/comments", "author": null, "committer": null, "parents": [{"sha": "0e5bad531b3ab78b6a4fd88e80db6232fe460107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e5bad531b3ab78b6a4fd88e80db6232fe460107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e5bad531b3ab78b6a4fd88e80db6232fe460107"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "7d6e9c0dd9178ca2602ff1b4cf0ba029dd9a3607", "filename": "gcc/config/a29k/a29k.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/964119deb75540897c552b09c00d9a02e3f54f6b/gcc%2Fconfig%2Fa29k%2Fa29k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/964119deb75540897c552b09c00d9a02e3f54f6b/gcc%2Fconfig%2Fa29k%2Fa29k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.c?ref=964119deb75540897c552b09c00d9a02e3f54f6b", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines used for code generation on AMD Am29000.\n-   Copyright (C) 1987, 1988, 1990, 1991, 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 90, 91, 92, 1993 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC.\n@@ -259,7 +259,8 @@ gpc_reg_operand (op, mode)\n   else\n     return 0;\n \n-  return regno >= FIRST_PSEUDO_REGISTER || regno < R_BP;\n+  return (regno >= FIRST_PSEUDO_REGISTER || regno < R_BP\n+\t  || (regno >= R_KR (0) && regno <= R_KR (31)));\n }\n \n /* Returns 1 if OP is either an 8-bit constant integer or a general register.\n@@ -332,7 +333,9 @@ call_operand (op, mode)\n     {\n     case SYMBOL_REF:\n       return (TARGET_SMALL_MEMORY\n-\t      || ! strcmp (XSTR (op, 0), current_function_name));\n+\t      || (! TARGET_LARGE_MEMORY\n+\t\t  && ((GET_CODE (op) == SYMBOL_REF && SYMBOL_REF_FLAG (op))\n+\t\t      || ! strcmp (XSTR (op, 0), current_function_name))));\n \n     case CONST_INT:\n       return (unsigned HOST_WIDE_INT) INTVAL (op) < 0x40000;"}]}