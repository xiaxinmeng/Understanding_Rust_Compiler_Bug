{"sha": "0ec543c7c61f6923b0794ade347c0584f91b9f6e", "node_id": "C_kwDOANBUbNoAKDBlYzU0M2M3YzYxZjY5MjNiMDc5NGFkZTM0N2MwNTg0ZjkxYjlmNmU", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-14T23:28:35Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-06T08:47:24Z"}, "message": "gccrs: Fix up DejaGnu directives in 'rust/compile/issue-1830_{bytes,str}.rs' test cases [#1838]\n\n'dg-excess-errors' \"indicates that the test is expected to fail due to compiler\nmessages that are not handled by 'dg-error', [etc.]\".  It's argument doesn't\nspecify the message to match but just just a comment.  Here, however, we'd like\nto match specific compiler messages, so we should use 'dg-error', etc.  Use the\nmagic line number zero as the compiler error diagnostic doesn't tell which line\nthe error occurred on (separate issue to resolve).  This gives us:\n\n    -XFAIL: rust/compile/issue-1830_str.rs (test for excess errors)\n    +PASS: rust/compile/issue-1830_bytes.rs  at line 8 (test for errors, line )\n    +PASS: rust/compile/issue-1830_bytes.rs (test for excess errors)\n    -XFAIL: rust/compile/issue-1830_bytes.rs (test for excess errors)\n    +PASS: rust/compile/issue-1830_str.rs  at line 8 (test for errors, line )\n    +PASS: rust/compile/issue-1830_str.rs (test for excess errors)\n\nFix-up for recent GCC/Rust master branch #1838\ncommit cf9ed4001eec6a22686d19a13f7de8ac94f9cb2a\n\"testsuite: Add empty string macro test\".\n\n\tgcc/testsuite/\n\t* rust/compile/issue-1830_bytes.rs: Fix up DejaGnu directives.\n\t* rust/compile/issue-1830_str.rs: Likewise.", "tree": {"sha": "327b4c7f22e8e3dc8d6230960794ed3ddc18f556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/327b4c7f22e8e3dc8d6230960794ed3ddc18f556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ec543c7c61f6923b0794ade347c0584f91b9f6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec543c7c61f6923b0794ade347c0584f91b9f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec543c7c61f6923b0794ade347c0584f91b9f6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec543c7c61f6923b0794ade347c0584f91b9f6e/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8628486f4873f72a51e57cf0904f5b0f177053ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8628486f4873f72a51e57cf0904f5b0f177053ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8628486f4873f72a51e57cf0904f5b0f177053ad"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "997d4ca0cdcd9052c2dafa1228e33b34a68f3881", "filename": "gcc/testsuite/rust/compile/issue-1830_bytes.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec543c7c61f6923b0794ade347c0584f91b9f6e/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1830_bytes.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec543c7c61f6923b0794ade347c0584f91b9f6e/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1830_bytes.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1830_bytes.rs?ref=0ec543c7c61f6923b0794ade347c0584f91b9f6e", "patch": "@@ -4,5 +4,6 @@ macro_rules! include_bytes {\n }\n \n fn main() {\n-    include_bytes!(\"\"); // { dg-excess-errors \"Is a directory\" }\n+    include_bytes!(\"\");\n+    // { dg-error {cannot open filename [^\\n\\r]+: Is a directory} {} { target *-*-* } 0 }\n }"}, {"sha": "fcf2dc988d36fd3bd95b114ea52dff0667c75fbd", "filename": "gcc/testsuite/rust/compile/issue-1830_str.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ec543c7c61f6923b0794ade347c0584f91b9f6e/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1830_str.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ec543c7c61f6923b0794ade347c0584f91b9f6e/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1830_str.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1830_str.rs?ref=0ec543c7c61f6923b0794ade347c0584f91b9f6e", "patch": "@@ -4,5 +4,6 @@ macro_rules! include_str {\n }\n \n fn main() {\n-    include_str!(\"\"); // { dg-excess-errors \"Is a directory\" }\n+    include_str!(\"\");\n+    // { dg-error {cannot open filename [^\\n\\r]+: Is a directory} {} { target *-*-* } 0 }\n }"}]}