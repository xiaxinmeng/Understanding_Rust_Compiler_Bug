{"sha": "07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdlYjg3MmUzNGE1YzlmMGYwYWViYTNiOGMxYTgxZmZlYWRmMzVmNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T09:30:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T09:30:59Z"}, "message": "[multiple changes]\n\n2016-05-02  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch10.adb (Analyze_Compilation_Unit): Preserve\n\ttreeishness. Previous version had Context_Items shared between\n\tthe spec and body.\n\n2016-05-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Aggr_Expression): For both array and\n\trecord cases, apply predicate check on component for expression\n\tonly if expression has been analyzed already. For expressions\n\tthat need to be duplicated when they cover multiple components,\n\tresolution and predicate checking take place later.\n\n2016-05-02  Olivier Hainque  <hainque@adacore.com>\n\n\t* a-direct.adb (Delete_Tree): Use full names to designate subdirs\n\tand files therein, instead of local names after a change of\n\tcurrent directory.\n\nFrom-SVN: r235717", "tree": {"sha": "8d7121321d2baa541dd6370ff603278721fa3a92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d7121321d2baa541dd6370ff603278721fa3a92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/comments", "author": null, "committer": null, "parents": [{"sha": "a25ad01cfbfa6efad44bc5500cc3ce39f1fffd22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25ad01cfbfa6efad44bc5500cc3ce39f1fffd22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25ad01cfbfa6efad44bc5500cc3ce39f1fffd22"}], "stats": {"total": 82, "additions": 58, "deletions": 24}, "files": [{"sha": "d05918c29b9c629bf146360c812edb49155cc023", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5", "patch": "@@ -1,3 +1,23 @@\n+2016-05-02  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_Compilation_Unit): Preserve\n+\ttreeishness. Previous version had Context_Items shared between\n+\tthe spec and body.\n+\n+2016-05-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Aggr_Expression): For both array and\n+\trecord cases, apply predicate check on component for expression\n+\tonly if expression has been analyzed already. For expressions\n+\tthat need to be duplicated when they cover multiple components,\n+\tresolution and predicate checking take place later.\n+\n+2016-05-02  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* a-direct.adb (Delete_Tree): Use full names to designate subdirs\n+\tand files therein, instead of local names after a change of\n+\tcurrent directory.\n+\n 2016-05-02  Thomas Quinot  <quinot@adacore.com>\n \n \t* freeze.adb (Check_Component_Storage_Order): Get full view of"}, {"sha": "500a31d409626b80491842d3e86f8d70b8d2ae1b", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -597,7 +597,6 @@ package body Ada.Directories is\n    -----------------\n \n    procedure Delete_Tree (Directory : String) is\n-      Current_Dir : constant String := Current_Directory;\n       Search      : Search_Type;\n       Dir_Ent     : Directory_Entry_Type;\n    begin\n@@ -611,28 +610,32 @@ package body Ada.Directories is\n          raise Name_Error with '\"' & Directory & \"\"\" not a directory\";\n \n       else\n-         Set_Directory (Directory);\n \n-         Start_Search (Search, Directory => \".\", Pattern => \"\");\n+         --  We used to change the current directory to Directory here,\n+         --  allowing the use of a local Simple_Name for all references. This\n+         --  turned out unfriendly to multitasking programs, where tasks\n+         --  running in parallel of this Delete_Tree could see their current\n+         --  directory change unpredictably. We now resort to Full_Name\n+         --  computations to reach files and subdirs instead.\n+\n+         Start_Search (Search, Directory => Directory, Pattern => \"\");\n          while More_Entries (Search) loop\n             Get_Next_Entry (Search, Dir_Ent);\n \n             declare\n-               File_Name : constant String := Simple_Name (Dir_Ent);\n-\n+               Sname : constant String := Simple_Name (Dir_Ent);\n+               Fname : constant String := Full_Name (Dir_Ent);\n             begin\n-               if OS_Lib.Is_Directory (File_Name) then\n-                  if File_Name /= \".\" and then File_Name /= \"..\" then\n-                     Delete_Tree (File_Name);\n+               if OS_Lib.Is_Directory (Fname) then\n+                  if Sname /= \".\" and then Sname /= \"..\" then\n+                     Delete_Tree (Fname);\n                   end if;\n-\n                else\n-                  Delete_File (File_Name);\n+                  Delete_File (Fname);\n                end if;\n             end;\n          end loop;\n \n-         Set_Directory (Current_Dir);\n          End_Search (Search);\n \n          declare"}, {"sha": "8b6504575ca244612de8816a439de5ce33241315", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5", "patch": "@@ -1610,9 +1610,12 @@ package body Sem_Aggr is\n          --  If an aggregate component has a type with predicates, an explicit\n          --  predicate check must be applied, as for an assignment statement,\n          --  because the aggegate might not be expanded into individual\n-         --  component assignments.\n+         --  component assignments. If the expression covers several components\n+         --  the analysis and the predicate check take place later.\n \n-         if Present (Predicate_Function (Component_Typ)) then\n+         if Present (Predicate_Function (Component_Typ))\n+           and then Analyzed (Expr)\n+         then\n             Apply_Predicate_Check (Expr, Component_Typ);\n          end if;\n \n@@ -3565,7 +3568,9 @@ package body Sem_Aggr is\n          --  because the aggegate might not be expanded into individual\n          --  component assignments.\n \n-         if Present (Predicate_Function (Expr_Type)) then\n+         if Present (Predicate_Function (Expr_Type))\n+           and then Analyzed (Expr)\n+         then\n             Apply_Predicate_Check (Expr, Expr_Type);\n          end if;\n "}, {"sha": "d4cd883c0d01b27cd2a08a6ef72afaa6d089d586", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=07eb872e34a5c9f0f0aeba3b8c1a81ffeadf35f5", "patch": "@@ -783,15 +783,15 @@ package body Sem_Ch10 is\n                   begin\n                      Set_Comes_From_Source_Default (False);\n \n-                     --  Checks for redundant USE TYPE clauses have a special\n-                     --  exception for the synthetic spec we create here. This\n-                     --  special case relies on the two compilation units\n-                     --  sharing the same context clause.\n-\n-                     --  Note: We used to do a shallow copy (New_Copy_List),\n-                     --  which defeated those checks and also created malformed\n-                     --  trees (subtype mark shared by two distinct\n-                     --  N_Use_Type_Clause nodes) which crashed the compiler.\n+                     --  Note: We copy the Context_Items from the explicit body\n+                     --  to the implicit spec, setting the former to Empty_List\n+                     --  to preserve the treeish nature of the tree, during\n+                     --  analysis of the spec. Then we put it back the way it\n+                     --  was -- copy the Context_Items from the spec to the\n+                     --  body, and set the spec Context_Items to Empty_List.\n+                     --  It is necessary to preserve the treeish nature,\n+                     --  because otherwise we will call End_Use_* twice on the\n+                     --  same thing.\n \n                      Lib_Unit :=\n                        Make_Compilation_Unit (Loc,\n@@ -804,6 +804,7 @@ package body Sem_Ch10 is\n                          Aux_Decls_Node =>\n                            Make_Compilation_Unit_Aux (Loc));\n \n+                     Set_Context_Items (N, Empty_List);\n                      Set_Library_Unit (N, Lib_Unit);\n                      Set_Parent_Spec (Unit (Lib_Unit), Cunit (Unum));\n                      Make_Child_Decl_Unit (N);\n@@ -816,6 +817,11 @@ package body Sem_Ch10 is\n                      Set_Is_Child_Unit (Defining_Entity (Unit_Node));\n                      Set_Debug_Info_Needed (Defining_Entity (Unit (Lib_Unit)));\n                      Set_Comes_From_Source_Default (SCS);\n+\n+                     --  Restore Context_Items to the body\n+\n+                     Set_Context_Items (N, Context_Items (Lib_Unit));\n+                     Set_Context_Items (Lib_Unit, Empty_List);\n                   end;\n                end if;\n             end if;"}]}