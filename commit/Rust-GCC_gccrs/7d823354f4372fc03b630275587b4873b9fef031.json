{"sha": "7d823354f4372fc03b630275587b4873b9fef031", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q4MjMzNTRmNDM3MmZjMDNiNjMwMjc1NTg3YjQ4NzNiOWZlZjAzMQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-03-26T07:42:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-03-26T07:42:25Z"}, "message": "sem_ch7.adb (Install_Parent_Private_Declarations): If the private declarations of a parent unit are made visible when...\n\n2008-03-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch7.adb (Install_Parent_Private_Declarations): If the private\n\tdeclarations of a parent unit are made visible when compiling a child\n\tinstance, the parent is not a hidden open scope, even though it may\n\tcontain other pending instance.\n\t\n\t* sem_ch8.adb (Restore_Scope_Stack): If an entry on the stack is a\n\thidden open scope for some child instance, it does affect the\n\tvisibility status of other stach entries.\n\t(Analyze_Object_Renaming): Check that a class-wide object cannot be\n\trenamed as an object of a specific type.\n\nFrom-SVN: r133578", "tree": {"sha": "07db58be827855efba89652dc580b886217b64c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07db58be827855efba89652dc580b886217b64c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d823354f4372fc03b630275587b4873b9fef031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d823354f4372fc03b630275587b4873b9fef031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d823354f4372fc03b630275587b4873b9fef031", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d823354f4372fc03b630275587b4873b9fef031/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76a696635de4e697b0c69393d78b71d0aba8d0c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76a696635de4e697b0c69393d78b71d0aba8d0c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76a696635de4e697b0c69393d78b71d0aba8d0c2"}], "stats": {"total": 45, "additions": 37, "deletions": 8}, "files": [{"sha": "2e95a1f5f435f0dca97568e0612c312849585689", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d823354f4372fc03b630275587b4873b9fef031/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d823354f4372fc03b630275587b4873b9fef031/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=7d823354f4372fc03b630275587b4873b9fef031", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -939,6 +939,7 @@ package body Sem_Ch7 is\n          Inst_Par := Inst_Id;\n          Gen_Par :=\n            Generic_Parent (Specification (Unit_Declaration_Node (Inst_Par)));\n+\n          while Present (Gen_Par) and then Is_Child_Unit (Gen_Par) loop\n             Inst_Node := Get_Package_Instantiation_Node (Inst_Par);\n \n@@ -963,18 +964,26 @@ package body Sem_Ch7 is\n                --  happens when a generic child is instantiated, and the\n                --  instance is a child of the parent instance.\n \n-               --  Installing the use clauses of the parent instance twice is\n-               --  both unnecessary and wrong, because it would cause the\n-               --  clauses to be chained to themselves in the use clauses list\n-               --  of the scope stack entry. That in turn would cause\n-               --  End_Use_Clauses to get into an endless look upon scope exit.\n+               --  Installing the use clauses of the parent instance twice\n+               --  is both unnecessary and wrong, because it would cause the\n+               --  clauses to be chained to themselves in the use clauses\n+               --  list of the scope stack entry. That in turn would cause\n+               --  an endless loop from End_Use_Clauses upon sccope exit.\n+\n+               --  The parent is now fully visible. It may be a hidden open\n+               --  scope if we are currently compiling some child instance\n+               --  declared within it, but while the current instance is being\n+               --  compiled the parent is immediately visible. In particular\n+               --  its entities must remain visible if a stack save/restore\n+               --  takes place through a call to Rtsfind.\n \n                if Present (Gen_Par) then\n                   if not In_Private_Part (Inst_Par) then\n                      Install_Private_Declarations (Inst_Par);\n                      Set_Use (Private_Declarations\n                                 (Specification\n                                    (Unit_Declaration_Node (Inst_Par))));\n+                     Set_Is_Hidden_Open_Scope (Inst_Par, False);\n                   end if;\n \n                --  If we've reached the end of the generic instance parents,"}, {"sha": "b732d507ab9f2c76d3b63b65aff5da574fda1e46", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d823354f4372fc03b630275587b4873b9fef031/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d823354f4372fc03b630275587b4873b9fef031/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=7d823354f4372fc03b630275587b4873b9fef031", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -747,6 +747,19 @@ package body Sem_Ch8 is\n \n          Resolve (Nam, T);\n \n+         --  Check that a class-wide object is not being renamed as an object\n+         --  of a specific type. The test for access types is needed to exclude\n+         --  cases where the renamed object is a dynamically tagged access\n+         --  result, such as occurs in certain expansions.\n+\n+         if (Is_Class_Wide_Type (Etype (Nam))\n+              or else (Is_Dynamically_Tagged (Nam)\n+                        and then not Is_Access_Type (T)))\n+           and then not Is_Class_Wide_Type (T)\n+         then\n+            Error_Msg_N (\"dynamically tagged expression not allowed!\", Nam);\n+         end if;\n+\n       --  Ada 2005 (AI-230/AI-254): Access renaming\n \n       else pragma Assert (Present (Access_Definition (N)));\n@@ -1046,7 +1059,7 @@ package body Sem_Ch8 is\n          Generate_Reference (Old_P, Name (N));\n \n          --  If the renaming is in the visible part of a package, then we set\n-         --  In_Package_Spec for the renamed package, to prevent giving\n+         --  Renamed_In_Spec for the renamed package, to prevent giving\n          --  warnings about no entities referenced. Such a warning would be\n          --  overenthusiastic, since clients can see entities in the renamed\n          --  package via the visible package renaming.\n@@ -6583,6 +6596,13 @@ package body Sem_Ch8 is\n             then\n                Full_Vis := True;\n \n+            --  if S is the scope of some instance (which has already been\n+            --  seen on the stack) it does not affect the visibility of\n+            --  other scopes.\n+\n+            elsif Is_Hidden_Open_Scope (S) then\n+               null;\n+\n             elsif (Ekind (S) = E_Procedure\n                     or else Ekind (S) = E_Function)\n               and then Has_Completion (S)"}]}