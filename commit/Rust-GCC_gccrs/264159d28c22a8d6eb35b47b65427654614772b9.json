{"sha": "264159d28c22a8d6eb35b47b65427654614772b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY0MTU5ZDI4YzIyYThkNmViMzViNDdiNjU0Mjc2NTQ2MTQ3NzJiOQ==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@gmail.com", "date": "2018-03-04T07:58:34Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-03-04T07:58:34Z"}, "message": "[NDS32] Add load_multiple,store_multiple and new attribute combo.\n\ngcc/\n\t* config/nds32/nds32.md (type): Add load_multiple and store_multiple.\n\t(combo): New attribute.\n\t* config/nds32/nds32-multiple.md: Refine patterns with new attributes.\n\nCo-Authored-By: Chung-Ju Wu <jasonwucj@gmail.com>\n\nFrom-SVN: r258232", "tree": {"sha": "3b29d8015773833ce12d3cb28ddfc912c078ece2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b29d8015773833ce12d3cb28ddfc912c078ece2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/264159d28c22a8d6eb35b47b65427654614772b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264159d28c22a8d6eb35b47b65427654614772b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264159d28c22a8d6eb35b47b65427654614772b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264159d28c22a8d6eb35b47b65427654614772b9/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38946ea192bf484cc854dd407d34cce4de6b698b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38946ea192bf484cc854dd407d34cce4de6b698b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38946ea192bf484cc854dd407d34cce4de6b698b"}], "stats": {"total": 89, "additions": 58, "deletions": 31}, "files": [{"sha": "3b9fb4a292d7a0b55dcb117fecb28ec933007691", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264159d28c22a8d6eb35b47b65427654614772b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264159d28c22a8d6eb35b47b65427654614772b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=264159d28c22a8d6eb35b47b65427654614772b9", "patch": "@@ -1,3 +1,10 @@\n+2018-03-04  Kito Cheng  <kito.cheng@gmail.com>\n+\t    Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.md (type): Add load_multiple and store_multiple.\n+\t(combo): New attribute.\n+\t* config/nds32/nds32-multiple.md: Refine patterns with new attributes.\n+\n 2018-03-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.opt: Change -mcmodel= default value."}, {"sha": "a16709f3f911a4bc6f5d69498fcabb235f56ed07", "filename": "gcc/config/nds32/nds32-multiple.md", "status": "modified", "additions": 42, "deletions": 28, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264159d28c22a8d6eb35b47b65427654614772b9/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264159d28c22a8d6eb35b47b65427654614772b9/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-multiple.md?ref=264159d28c22a8d6eb35b47b65427654614772b9", "patch": "@@ -96,8 +96,9 @@\n \t  (mem:SI (plus:SI (match_dup 1) (const_int 28))))])]\n   \"(XVECLEN (operands[0], 0) == 8)\"\n   \"lmw.bi\\t%2, [%1], %9, 0x0\"\n-  [(set_attr \"type\"   \"load\")\n-   (set_attr \"length\"    \"4\")]\n+  [(set_attr \"type\"   \"load_multiple\")\n+   (set_attr \"combo\"              \"8\")\n+   (set_attr \"length\"             \"4\")]\n )\n \n (define_insn \"*lmwsi7\"\n@@ -118,8 +119,9 @@\n \t  (mem:SI (plus:SI (match_dup 1) (const_int 24))))])]\n   \"(XVECLEN (operands[0], 0) == 7)\"\n   \"lmw.bi\\t%2, [%1], %8, 0x0\"\n-  [(set_attr \"type\"   \"load\")\n-   (set_attr \"length\"    \"4\")]\n+  [(set_attr \"type\"   \"load_multiple\")\n+   (set_attr \"combo\"              \"7\")\n+   (set_attr \"length\"             \"4\")]\n )\n \n (define_insn \"*lmwsi6\"\n@@ -138,8 +140,9 @@\n \t  (mem:SI (plus:SI (match_dup 1) (const_int 20))))])]\n   \"(XVECLEN (operands[0], 0) == 6)\"\n   \"lmw.bi\\t%2, [%1], %7, 0x0\"\n-  [(set_attr \"type\"   \"load\")\n-   (set_attr \"length\"    \"4\")]\n+  [(set_attr \"type\"   \"load_multiple\")\n+   (set_attr \"combo\"              \"6\")\n+   (set_attr \"length\"             \"4\")]\n )\n \n (define_insn \"*lmwsi5\"\n@@ -156,8 +159,9 @@\n \t  (mem:SI (plus:SI (match_dup 1) (const_int 16))))])]\n   \"(XVECLEN (operands[0], 0) == 5)\"\n   \"lmw.bi\\t%2, [%1], %6, 0x0\"\n-  [(set_attr \"type\"   \"load\")\n-   (set_attr \"length\"    \"4\")]\n+  [(set_attr \"type\"   \"load_multiple\")\n+   (set_attr \"combo\"              \"5\")\n+   (set_attr \"length\"             \"4\")]\n )\n \n (define_insn \"*lmwsi4\"\n@@ -172,8 +176,9 @@\n \t  (mem:SI (plus:SI (match_dup 1) (const_int 12))))])]\n   \"(XVECLEN (operands[0], 0) == 4)\"\n   \"lmw.bi\\t%2, [%1], %5, 0x0\"\n-  [(set_attr \"type\"   \"load\")\n-   (set_attr \"length\"    \"4\")]\n+  [(set_attr \"type\"   \"load_multiple\")\n+   (set_attr \"combo\"              \"4\")\n+   (set_attr \"length\"             \"4\")]\n )\n \n (define_insn \"*lmwsi3\"\n@@ -186,8 +191,9 @@\n \t  (mem:SI (plus:SI (match_dup 1) (const_int 8))))])]\n   \"(XVECLEN (operands[0], 0) == 3)\"\n   \"lmw.bi\\t%2, [%1], %4, 0x0\"\n-  [(set_attr \"type\"   \"load\")\n-   (set_attr \"length\"    \"4\")]\n+  [(set_attr \"type\"   \"load_multiple\")\n+   (set_attr \"combo\"              \"3\")\n+   (set_attr \"length\"             \"4\")]\n )\n \n (define_insn \"*lmwsi2\"\n@@ -198,8 +204,9 @@\n \t  (mem:SI (plus:SI (match_dup 1) (const_int 4))))])]\n   \"(XVECLEN (operands[0], 0) == 2)\"\n   \"lmw.bi\\t%2, [%1], %3, 0x0\"\n-  [(set_attr \"type\"   \"load\")\n-   (set_attr \"length\"    \"4\")]\n+  [(set_attr \"type\"   \"load_multiple\")\n+   (set_attr \"combo\"              \"2\")\n+   (set_attr \"length\"             \"4\")]\n )\n \n \n@@ -280,8 +287,9 @@\n \t  (match_operand:SI 9 \"register_operand\" \"\"))])]\n   \"(XVECLEN (operands[0], 0) == 8)\"\n   \"smw.bi\\t%2, [%1], %9, 0x0\"\n-  [(set_attr \"type\"   \"store\")\n-   (set_attr \"length\"     \"4\")]\n+  [(set_attr \"type\"   \"store_multiple\")\n+   (set_attr \"combo\"               \"8\")\n+   (set_attr \"length\"              \"4\")]\n )\n \n (define_insn \"*stmsi7\"\n@@ -302,8 +310,9 @@\n \t  (match_operand:SI 8 \"register_operand\" \"\"))])]\n   \"(XVECLEN (operands[0], 0) == 7)\"\n   \"smw.bi\\t%2, [%1], %8, 0x0\"\n-  [(set_attr \"type\"   \"store\")\n-   (set_attr \"length\"     \"4\")]\n+  [(set_attr \"type\"   \"store_multiple\")\n+   (set_attr \"combo\"               \"7\")\n+   (set_attr \"length\"              \"4\")]\n )\n \n (define_insn \"*stmsi6\"\n@@ -322,8 +331,9 @@\n \t  (match_operand:SI 7 \"register_operand\" \"\"))])]\n   \"(XVECLEN (operands[0], 0) == 6)\"\n   \"smw.bi\\t%2, [%1], %7, 0x0\"\n-  [(set_attr \"type\"   \"store\")\n-   (set_attr \"length\"     \"4\")]\n+  [(set_attr \"type\"   \"store_multiple\")\n+   (set_attr \"combo\"               \"6\")\n+   (set_attr \"length\"              \"4\")]\n )\n \n (define_insn \"*stmsi5\"\n@@ -340,8 +350,9 @@\n \t  (match_operand:SI 6 \"register_operand\" \"\"))])]\n   \"(XVECLEN (operands[0], 0) == 5)\"\n   \"smw.bi\\t%2, [%1], %6, 0x0\"\n-  [(set_attr \"type\"   \"store\")\n-   (set_attr \"length\"     \"4\")]\n+  [(set_attr \"type\"   \"store_multiple\")\n+   (set_attr \"combo\"               \"5\")\n+   (set_attr \"length\"              \"4\")]\n )\n \n (define_insn \"*stmsi4\"\n@@ -356,8 +367,9 @@\n \t  (match_operand:SI 5 \"register_operand\" \"\"))])]\n   \"(XVECLEN (operands[0], 0) == 4)\"\n   \"smw.bi\\t%2, [%1], %5, 0x0\"\n-  [(set_attr \"type\"   \"store\")\n-   (set_attr \"length\"     \"4\")]\n+  [(set_attr \"type\"   \"store_multiple\")\n+   (set_attr \"combo\"               \"4\")\n+   (set_attr \"length\"              \"4\")]\n )\n \n (define_insn \"*stmsi3\"\n@@ -370,8 +382,9 @@\n \t  (match_operand:SI 4 \"register_operand\" \"\"))])]\n   \"(XVECLEN (operands[0], 0) == 3)\"\n   \"smw.bi\\t%2, [%1], %4, 0x0\"\n-  [(set_attr \"type\"   \"store\")\n-   (set_attr \"length\"     \"4\")]\n+  [(set_attr \"type\"   \"store_multiple\")\n+   (set_attr \"combo\"               \"3\")\n+   (set_attr \"length\"              \"4\")]\n )\n \n (define_insn \"*stmsi2\"\n@@ -382,8 +395,9 @@\n \t  (match_operand:SI 3 \"register_operand\" \"\"))])]\n   \"(XVECLEN (operands[0], 0) == 2)\"\n   \"smw.bi\\t%2, [%1], %3, 0x0\"\n-  [(set_attr \"type\"   \"store\")\n-   (set_attr \"length\"     \"4\")]\n+  [(set_attr \"type\"   \"store_multiple\")\n+   (set_attr \"combo\"               \"2\")\n+   (set_attr \"length\"              \"4\")]\n )\n \n ;; Move a block of memory if it is word aligned and MORE than 2 words long."}, {"sha": "71736f69b069f558882f3b630888e61cc60eb5f3", "filename": "gcc/config/nds32/nds32.md", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/264159d28c22a8d6eb35b47b65427654614772b9/gcc%2Fconfig%2Fnds32%2Fnds32.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/264159d28c22a8d6eb35b47b65427654614772b9/gcc%2Fconfig%2Fnds32%2Fnds32.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.md?ref=264159d28c22a8d6eb35b47b65427654614772b9", "patch": "@@ -52,13 +52,17 @@\n \n ;; Insn type, it is used to default other attribute values.\n (define_attr \"type\"\n-  \"unknown,move,load,store,alu,compare,branch,call,misc\"\n+  \"unknown,move,load,store,load_multiple,store_multiple,alu,compare,branch,call,misc\"\n   (const_string \"unknown\"))\n \n \n ;; Length, in bytes, default is 4-bytes.\n (define_attr \"length\" \"\" (const_int 4))\n \n+;; Indicate the amount of micro instructions.\n+(define_attr \"combo\"\n+  \"0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25\"\n+  (const_string \"1\"))\n \n ;; Enabled, which is used to enable/disable insn alternatives.\n ;; Note that we use length and TARGET_16_BIT here as criteria.\n@@ -2166,7 +2170,8 @@ create_template:\n {\n   return nds32_output_stack_push (operands[0]);\n }\n-  [(set_attr \"type\" \"misc\")\n+  [(set_attr \"type\" \"store_multiple\")\n+   (set_attr \"combo\" \"12\")\n    (set_attr \"enabled\" \"1\")\n    (set (attr \"length\")\n \t(if_then_else (match_test \"TARGET_V3PUSH\n@@ -2188,7 +2193,8 @@ create_template:\n {\n   return nds32_output_stack_pop (operands[0]);\n }\n-  [(set_attr \"type\" \"misc\")\n+  [(set_attr \"type\" \"load_multiple\")\n+   (set_attr \"combo\" \"12\")\n    (set_attr \"enabled\" \"1\")\n    (set (attr \"length\")\n \t(if_then_else (match_test \"TARGET_V3PUSH"}]}