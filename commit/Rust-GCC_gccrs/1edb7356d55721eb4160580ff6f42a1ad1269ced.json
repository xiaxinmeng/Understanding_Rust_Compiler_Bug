{"sha": "1edb7356d55721eb4160580ff6f42a1ad1269ced", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkYjczNTZkNTU3MjFlYjQxNjA1ODBmZjZmNDJhMWFkMTI2OWNlZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-05-21T19:07:30Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-05-21T19:07:30Z"}, "message": "re PR sanitizer/61272 ([UBSAN] ICE in is_ubsan_builtin_p(tree_node*), gcc/ubsan.c:534)\n\n\tPR sanitizer/61272\n\t* ubsan.c (is_ubsan_builtin_p): Turn assert into a condition.\n\n\t* g++.dg/ubsan/pr61272.C: New test.\n\nFrom-SVN: r210723", "tree": {"sha": "ecedb772a0e3b5484c52b54f1dc10a8a1f602023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecedb772a0e3b5484c52b54f1dc10a8a1f602023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1edb7356d55721eb4160580ff6f42a1ad1269ced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1edb7356d55721eb4160580ff6f42a1ad1269ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1edb7356d55721eb4160580ff6f42a1ad1269ced", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1edb7356d55721eb4160580ff6f42a1ad1269ced/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "289395899601bacfaa9f9f93c454b85337867c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/289395899601bacfaa9f9f93c454b85337867c5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/289395899601bacfaa9f9f93c454b85337867c5b"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "8caf9c80a1e3d2faf951bba7fd831026eb4e2548", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edb7356d55721eb4160580ff6f42a1ad1269ced/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edb7356d55721eb4160580ff6f42a1ad1269ced/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1edb7356d55721eb4160580ff6f42a1ad1269ced", "patch": "@@ -1,3 +1,8 @@\n+2014-05-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/61272\n+\t* ubsan.c (is_ubsan_builtin_p): Turn assert into a condition.\n+\n 2014-05-21  Martin Jambor  <mjambor@suse.cz>\n \n \t* doc/invoke.texi (Optimize Options): Document parameters"}, {"sha": "876967ab8cbe860a65473a32c9af4d61a9f78943", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edb7356d55721eb4160580ff6f42a1ad1269ced/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edb7356d55721eb4160580ff6f42a1ad1269ced/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1edb7356d55721eb4160580ff6f42a1ad1269ced", "patch": "@@ -1,3 +1,8 @@\n+2014-05-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/61272\n+\t* g++.dg/ubsan/pr61272.C: New test.\n+\n 2014-05-21  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Sandra Loosemore  <sandra@codesourcery.com>\n "}, {"sha": "064678d37b80d23d581ad321bb13fc40eb1afa7c", "filename": "gcc/testsuite/g++.dg/ubsan/pr61272.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edb7356d55721eb4160580ff6f42a1ad1269ced/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr61272.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edb7356d55721eb4160580ff6f42a1ad1269ced/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr61272.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr61272.C?ref=1edb7356d55721eb4160580ff6f42a1ad1269ced", "patch": "@@ -0,0 +1,24 @@\n+// PR sanitizer/61272\n+// { dg-do compile }\n+// { dg-options \"-fsanitize=undefined -std=c++11\" }\n+\n+namespace std\n+{\n+  template < typename _Tp > class allocator;\n+  template < typename _Alloc > struct allocator_traits {\n+  private:\n+      template < typename _Tp > auto construct ( _Alloc & __a, _Tp * __p)-> // { dg-error \"is private\" }\n+      decltype (_S_construct (__a, __p)) { }\n+  };\n+  namespace __gnu_cxx\n+  {\n+    template < typename _Alloc > struct __alloc_traits:std::allocator_traits < _Alloc > // { dg-error \"within this context\" }\n+    {\n+      typedef std::allocator_traits < _Alloc > _Base_type;\n+      using _Base_type::construct;\n+    };\n+    template < typename _Tp, typename _Alloc > struct _Vector_base { typedef typename __gnu_cxx::__alloc_traits < _Alloc >::template rebind < _Tp >::other _Tp_alloc_type; }; // { dg-error \"no class template\" }\n+    template < typename _Tp, typename _Alloc = std::allocator < _Tp > >class vector : protected _Vector_base < _Tp, _Alloc > { };\n+    template < typename NumberT > struct Point2d { };\n+    typedef Point2d < int >GdsPoint;\n+    class GdsPointList : public vector < GdsPoint > {};}}"}, {"sha": "585569c5810f96232116a62742169ece38ee755c", "filename": "gcc/ubsan.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edb7356d55721eb4160580ff6f42a1ad1269ced/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edb7356d55721eb4160580ff6f42a1ad1269ced/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=1edb7356d55721eb4160580ff6f42a1ad1269ced", "patch": "@@ -531,9 +531,9 @@ ubsan_instrument_unreachable (location_t loc)\n bool\n is_ubsan_builtin_p (tree t)\n {\n-  gcc_checking_assert (TREE_CODE (t) == FUNCTION_DECL);\n-  return strncmp (IDENTIFIER_POINTER (DECL_NAME (t)),\n-\t\t  \"__builtin___ubsan_\", 18) == 0;\n+  return TREE_CODE (t) == FUNCTION_DECL\n+\t && strncmp (IDENTIFIER_POINTER (DECL_NAME (t)),\n+\t\t     \"__builtin___ubsan_\", 18) == 0;\n }\n \n /* Expand UBSAN_NULL internal call.  */"}]}