{"sha": "49e76be8974253f3cc2e16e43b0aa437fba0cd83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllNzZiZTg5NzQyNTNmM2NjMmUxNmU0M2IwYWE0MzdmYmEwY2Q4Mw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-07-23T10:15:53Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-07-23T10:15:53Z"}, "message": "machmode.def: Remove vector modes.\n\n2004-07-22  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* machmode.def: Remove vector modes.\n\t* config/alpha/alpha-modes.def: Add supported vector modes.\n\t* config/arm/arm-modes.def: Likewise.\n\t* config/frv/frv-modes.def: Likewise.\n\t* config/i386/i386-modes.def: Likewise.\n\t* config/rs6000/rs6000-modes.def: Likewise.\n\t* config/sh/sh-modes.def: Likewise.\n\nFrom-SVN: r85076", "tree": {"sha": "846cea2f0ced690bb5eb61e3a384ad1678041c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/846cea2f0ced690bb5eb61e3a384ad1678041c6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49e76be8974253f3cc2e16e43b0aa437fba0cd83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e76be8974253f3cc2e16e43b0aa437fba0cd83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49e76be8974253f3cc2e16e43b0aa437fba0cd83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e76be8974253f3cc2e16e43b0aa437fba0cd83/comments", "author": null, "committer": null, "parents": [{"sha": "8f2a734fc8d6d5ae168a2279462dcdc573f5ea71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2a734fc8d6d5ae168a2279462dcdc573f5ea71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f2a734fc8d6d5ae168a2279462dcdc573f5ea71"}], "stats": {"total": 93, "additions": 59, "deletions": 34}, "files": [{"sha": "a0d6927b207d7c2d4d87d6896c75f26ab2aa9824", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49e76be8974253f3cc2e16e43b0aa437fba0cd83", "patch": "@@ -1,9 +1,19 @@\n+2004-07-22  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* machmode.def: Remove vector modes.\n+\t* config/alpha/alpha-modes.def: Add supported vector modes.\n+\t* config/arm/arm-modes.def: Likewise.\n+\t* config/frv/frv-modes.def: Likewise.\n+\t* config/i386/i386-modes.def: Likewise.\n+\t* config/rs6000/rs6000-modes.def: Likewise.\n+\t* config/sh/sh-modes.def: Likewise.\n+\n 2004-07-23  Matthias Klose  <doko@debian.org> \n  \n-\tintl.c (gcc_init_libintl): Use PACKAGE for the text domain. \n-\tconfigure.ac: Add AC_DEFINE_UNQUOTED for PACKAGE. \n-\tconfig.h: Regenerate.\n-\tconfigure: Likewise. \n+\t* intl.c (gcc_init_libintl): Use PACKAGE for the text domain. \n+\t* configure.ac: Add AC_DEFINE_UNQUOTED for PACKAGE. \n+\t* config.h: Regenerate.\n+\t* configure: Likewise. \n \n 2004-07-22  Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "0a0d1c50f83b85e463a736e4f196d5588c0b68ff", "filename": "gcc/config/alpha/alpha-modes.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Falpha%2Falpha-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Falpha%2Falpha-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-modes.def?ref=49e76be8974253f3cc2e16e43b0aa437fba0cd83", "patch": "@@ -21,3 +21,8 @@ Boston, MA 02111-1307, USA.  */\n /* 128-bit floating point.  This gets reset in alpha_override_options\n    if VAX float format is in use.  */\n FLOAT_MODE (TF, 16, ieee_quad_format);\n+\n+/* Vector modes.  */\n+VECTOR_MODES (INT, 8);        /*       V8QI V4HI V2SI */\n+VECTOR_MODE (INT, QI, 4);     /*                 V4QI */\n+VECTOR_MODE (INT, QI, 2);     /*                 V2QI */"}, {"sha": "c974272beb4726e97b595695e13adb1a687f05c1", "filename": "gcc/config/arm/arm-modes.def", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Farm%2Farm-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Farm%2Farm-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-modes.def?ref=49e76be8974253f3cc2e16e43b0aa437fba0cd83", "patch": "@@ -50,3 +50,11 @@ CC_MODE (CC_DGEU);\n CC_MODE (CC_DGTU);\n CC_MODE (CC_C);\n CC_MODE (CC_N);\n+\n+/* Vector modes.  */\n+VECTOR_MODES (INT, 4);        /*            V4QI V2HI */\n+VECTOR_MODES (INT, 8);        /*       V8QI V4HI V2SI */\n+VECTOR_MODES (INT, 16);       /* V16QI V8HI V4SI V2DI */\n+VECTOR_MODES (FLOAT, 8);      /*            V4HF V2SF */\n+VECTOR_MODES (FLOAT, 16);     /*       V8HF V4SF V2DF */\n+"}, {"sha": "7d3b0ef0d186c41f7777ef5fd4f7c4f823342e21", "filename": "gcc/config/frv/frv-modes.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Ffrv%2Ffrv-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Ffrv%2Ffrv-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv-modes.def?ref=49e76be8974253f3cc2e16e43b0aa437fba0cd83", "patch": "@@ -28,3 +28,6 @@ Boston, MA 02111-1307, USA.  */\n CC_MODE (CC_UNS);\n CC_MODE (CC_FP);\n CC_MODE (CC_CCR);\n+\n+VECTOR_MODE (INT, QI, 4);     /*                 V4QI */\n+VECTOR_MODE (INT, SI, 4);     /*                 V4SI */"}, {"sha": "3a7c3e6d3929fd280ade5ca34e998fef5ae8a8b2", "filename": "gcc/config/i386/i386-modes.def", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-modes.def?ref=49e76be8974253f3cc2e16e43b0aa437fba0cd83", "patch": "@@ -60,3 +60,15 @@ CC_MODE (CCNO);\n CC_MODE (CCZ);\n CC_MODE (CCFP);\n CC_MODE (CCFPU);\n+\n+/* Vector modes.  */\n+VECTOR_MODES (INT, 4);        /*            V4QI V2HI */\n+VECTOR_MODES (INT, 8);        /*       V8QI V4HI V2SI */\n+VECTOR_MODES (INT, 16);       /* V16QI V8HI V4SI V2DI */\n+VECTOR_MODES (FLOAT, 8);      /*            V4HF V2SF */\n+VECTOR_MODES (FLOAT, 16);     /*       V8HF V4SF V2DF */\n+VECTOR_MODE (INT, DI, 4);     /*                 V4DI */\n+VECTOR_MODE (INT, SI, 8);     /*                 V8SI */\n+\n+/* The symbol Pmode stands for one of the above machine modes (usually SImode).\n+   The tm.h file specifies which one.  It is not a distinct mode.  */"}, {"sha": "97f086b140b829b668bb6dfbc800ef35424ed2a5", "filename": "gcc/config/rs6000/rs6000-modes.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Frs6000%2Frs6000-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Frs6000%2Frs6000-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-modes.def?ref=49e76be8974253f3cc2e16e43b0aa437fba0cd83", "patch": "@@ -38,3 +38,10 @@ PARTIAL_INT_MODE (SI);\n CC_MODE (CCUNS);\n CC_MODE (CCFP);\n CC_MODE (CCEQ);\n+\n+/* Vector modes.  */\n+VECTOR_MODES (INT, 8);        /*       V8QI V4HI V2SI */\n+VECTOR_MODES (INT, 16);       /* V16QI V8HI V4SI V2DI */\n+VECTOR_MODE (INT, DI, 1);\n+VECTOR_MODES (FLOAT, 8);      /*            V4HF V2SF */\n+VECTOR_MODES (FLOAT, 16);     /*       V8HF V4SF V2DF */"}, {"sha": "1b971768946db09d2d96120b11023c495199935f", "filename": "gcc/config/sh/sh-modes.def", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Fsh%2Fsh-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fconfig%2Fsh%2Fsh-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-modes.def?ref=49e76be8974253f3cc2e16e43b0aa437fba0cd83", "patch": "@@ -21,3 +21,13 @@ Boston, MA 02111-1307, USA.  */\n /* The SH uses a partial integer mode to represent the FPSCR register.  */\n PARTIAL_INT_MODE (SI);\n \n+/* Vector modes.  */\n+VECTOR_MODE  (INT, QI, 2);    /*                 V2QI */\n+VECTOR_MODES (INT, 4);        /*            V4QI V2HI */\n+VECTOR_MODES (INT, 8);        /*       V8QI V4HI V2SI */\n+VECTOR_MODES (INT, 16);       /* V16QI V8HI V4SI V2DI */\n+VECTOR_MODES (FLOAT, 8);      /*            V4HF V2SF */\n+VECTOR_MODES (FLOAT, 16);     /*       V8HF V4SF V2DF */\n+VECTOR_MODE (INT, DI, 4);     /*                 V4DI */\n+VECTOR_MODE (INT, DI, 8);     /*                 V8DI */\n+VECTOR_MODE (FLOAT, SF, 16);  /*                V16SF */"}, {"sha": "431aafa783f861b0d16e8181d30e75c25243422d", "filename": "gcc/machmode.def", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fmachmode.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e76be8974253f3cc2e16e43b0aa437fba0cd83/gcc%2Fmachmode.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.def?ref=49e76be8974253f3cc2e16e43b0aa437fba0cd83", "patch": "@@ -186,36 +186,6 @@ CC_MODE (CC);\n COMPLEX_MODES (INT);\n COMPLEX_MODES (FLOAT);\n \n-/* Vector modes.  */\n-VECTOR_MODES (INT, 2);        /*                 V2QI */\n-VECTOR_MODES (INT, 4);        /*            V4QI V2HI */\n-VECTOR_MODES (INT, 8);        /*       V8QI V4HI V2SI */\n-VECTOR_MODES (INT, 16);       /* V16QI V8HI V4SI V2DI */\n-/* VECTOR_MODES (INT, 32);             V8SI V4DI      */\n-/* VECTOR_MODES (INT, 64);             V8DI           */\n-\n-VECTOR_MODE (INT, SI, 8)\n-VECTOR_MODE (INT, DI, 4);\n-VECTOR_MODE (INT, DI, 8);\n-\n-/* PPC uses this to distinguish between DImode passed in\n-   float registers and DImode passed in vector registers.\n-   It would be in rs6000-modes.def but it's referenced in\n-   c-common.c.  FIXME.  */\n-\n-VECTOR_MODE (INT, DI, 1);\n-\n-VECTOR_MODES (FLOAT, 4);      /*                 V2HF */\n-VECTOR_MODES (FLOAT, 8);      /*            V4HF V2SF */\n-VECTOR_MODES (FLOAT, 16);     /*       V8HF V4SF V2DF */\n-/* VECTOR_MODES (FLOAT, 32);           V8SF V4DF      */\n-/* VECTOR_MODES (FLOAT, 64);     V16SF V8DF           */\n-\n-VECTOR_MODE (FLOAT, SF, 8);\n-VECTOR_MODE (FLOAT, SF, 16);\n-VECTOR_MODE (FLOAT, DF, 4);\n-VECTOR_MODE (FLOAT, DF, 8);\n-\n /* The symbol Pmode stands for one of the above machine modes (usually SImode).\n    The tm.h file specifies which one.  It is not a distinct mode.  */\n "}]}