{"sha": "2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYwNTUyYjZkMDIzYWMzOGY0YTMyN2JhYjVkZDZhYmNkNGI5Y2E3YQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-05-23T23:15:15Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-05-23T23:15:15Z"}, "message": "* config/rs6000/rs6000.c (output_toc): Mask longs to 32 bits.\n\nFrom-SVN: r53815", "tree": {"sha": "42dd0414cde696e454b7d9b3c5ad52d1c772169c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42dd0414cde696e454b7d9b3c5ad52d1c772169c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a/comments", "author": null, "committer": null, "parents": [{"sha": "13fa982ef775ad09fc9e5387c892c602470bf193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13fa982ef775ad09fc9e5387c892c602470bf193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13fa982ef775ad09fc9e5387c892c602470bf193"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "a84cf0a9d1bc971c7588403d410e776da75f18c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a", "patch": "@@ -1,3 +1,7 @@\n+2002-05-24  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.c (output_toc): Mask longs to 32 bits.\n+\n 2002-05-23  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* genautomata.c (reserv_sets_hash_value): Use shift equal to 3/4"}, {"sha": "9b71ea0772dcc053d22b6fc89226bf1dbd7dd908", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2f0552b6d023ac38f4a327bab5dd6abcd4b9ca7a", "patch": "@@ -10256,17 +10256,21 @@ output_toc (file, x, labelno, mode)\n \t  if (TARGET_MINIMAL_TOC)\n \t    fputs (DOUBLE_INT_ASM_OP, file);\n \t  else\n-\t    fprintf (file, \"\\t.tc FD_%lx_%lx[TC],\", k[0], k[1]);\n-\t  fprintf (file, \"0x%lx%08lx\\n\", k[0], k[1]);\n+\t    fprintf (file, \"\\t.tc FD_%lx_%lx[TC],\",\n+\t\t     k[0] & 0xffffffff, k[1] & 0xffffffff);\n+\t  fprintf (file, \"0x%lx%08lx\\n\",\n+\t\t   k[0] & 0xffffffff, k[1] & 0xffffffff);\n \t  return;\n \t}\n       else\n \t{\n \t  if (TARGET_MINIMAL_TOC)\n \t    fputs (\"\\t.long \", file);\n \t  else\n-\t    fprintf (file, \"\\t.tc FD_%lx_%lx[TC],\", k[0], k[1]);\n-\t  fprintf (file, \"0x%lx,0x%lx\\n\", k[0], k[1]);\n+\t    fprintf (file, \"\\t.tc FD_%lx_%lx[TC],\",\n+\t\t     k[0] & 0xffffffff, k[1] & 0xffffffff);\n+\t  fprintf (file, \"0x%lx,0x%lx\\n\",\n+\t\t   k[0] & 0xffffffff, k[1] & 0xffffffff);\n \t  return;\n \t}\n     }\n@@ -10283,17 +10287,17 @@ output_toc (file, x, labelno, mode)\n \t  if (TARGET_MINIMAL_TOC)\n \t    fputs (DOUBLE_INT_ASM_OP, file);\n \t  else\n-\t    fprintf (file, \"\\t.tc FS_%lx[TC],\", l);\n-\t  fprintf (file, \"0x%lx00000000\\n\", l);\n+\t    fprintf (file, \"\\t.tc FS_%lx[TC],\", l & 0xffffffff);\n+\t  fprintf (file, \"0x%lx00000000\\n\", l & 0xffffffff);\n \t  return;\n \t}\n       else\n \t{\n \t  if (TARGET_MINIMAL_TOC)\n \t    fputs (\"\\t.long \", file);\n \t  else\n-\t    fprintf (file, \"\\t.tc FS_%lx[TC],\", l);\n-\t  fprintf (file, \"0x%lx\\n\", l);\n+\t    fprintf (file, \"\\t.tc FS_%lx[TC],\", l & 0xffffffff);\n+\t  fprintf (file, \"0x%lx\\n\", l & 0xffffffff);\n \t  return;\n \t}\n     }\n@@ -10343,8 +10347,10 @@ output_toc (file, x, labelno, mode)\n \t  if (TARGET_MINIMAL_TOC)\n \t    fputs (DOUBLE_INT_ASM_OP, file);\n \t  else\n-\t    fprintf (file, \"\\t.tc ID_%lx_%lx[TC],\", (long) high, (long) low);\n-\t  fprintf (file, \"0x%lx%08lx\\n\", (long) high, (long) low);\n+\t    fprintf (file, \"\\t.tc ID_%lx_%lx[TC],\",\n+\t\t     (long) high & 0xffffffff, (long) low & 0xffffffff);\n+\t  fprintf (file, \"0x%lx%08lx\\n\",\n+\t\t   (long) high & 0xffffffff, (long) low & 0xffffffff);\n \t  return;\n \t}\n       else\n@@ -10355,16 +10361,17 @@ output_toc (file, x, labelno, mode)\n \t\tfputs (\"\\t.long \", file);\n \t      else\n \t\tfprintf (file, \"\\t.tc ID_%lx_%lx[TC],\",\n-\t\t\t (long) high, (long) low);\n-\t      fprintf (file, \"0x%lx,0x%lx\\n\", (long) high, (long) low);\n+\t\t\t (long) high & 0xffffffff, (long) low & 0xffffffff);\n+\t      fprintf (file, \"0x%lx,0x%lx\\n\",\n+\t\t       (long) high & 0xffffffff, (long) low & 0xffffffff);\n \t    }\n \t  else\n \t    {\n \t      if (TARGET_MINIMAL_TOC)\n \t\tfputs (\"\\t.long \", file);\n \t      else\n-\t\tfprintf (file, \"\\t.tc IS_%lx[TC],\", (long) low);\n-\t      fprintf (file, \"0x%lx\\n\", (long) low);\n+\t\tfprintf (file, \"\\t.tc IS_%lx[TC],\", (long) low & 0xffffffff);\n+\t      fprintf (file, \"0x%lx\\n\", (long) low & 0xffffffff);\n \t    }\n \t  return;\n \t}"}]}