{"sha": "2bd8c3ff3511df8781dd9f3777efab20572d29ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkOGMzZmYzNTExZGY4NzgxZGQ5ZjM3NzdlZmFiMjA1NzJkMjlhYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-02-24T11:18:04Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-02-24T11:18:04Z"}, "message": "OpenACC tile clause \u2013 apply exit/cycle checks (PR 93552)\n\n        PR fortran/93552\n        * match.c (match_exit_cycle): With OpenACC, check the kernels loop\n        directive and tile clause as well.\n\n        PR fortran/93552\n        * gfortran.dg/goacc/tile-4.f90: New.", "tree": {"sha": "4e524e19f1e97b4399621accfd74ce7e8319fa96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e524e19f1e97b4399621accfd74ce7e8319fa96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd8c3ff3511df8781dd9f3777efab20572d29ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd8c3ff3511df8781dd9f3777efab20572d29ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd8c3ff3511df8781dd9f3777efab20572d29ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd8c3ff3511df8781dd9f3777efab20572d29ab/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1a681a174cdfb82e62c246d6f4add9a25fc2e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a681a174cdfb82e62c246d6f4add9a25fc2e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a681a174cdfb82e62c246d6f4add9a25fc2e43"}], "stats": {"total": 65, "additions": 59, "deletions": 6}, "files": [{"sha": "94ceb5c8aa346c71fec57ca3dc41d7958972e25d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8c3ff3511df8781dd9f3777efab20572d29ab/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8c3ff3511df8781dd9f3777efab20572d29ab/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2bd8c3ff3511df8781dd9f3777efab20572d29ab", "patch": "@@ -1,3 +1,9 @@\n+2020-02-24  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93552\n+\t* match.c (match_exit_cycle): With OpenACC, check the kernels loop\n+\tdirective and tile clause as well.\n+\n 2020-02-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/93889"}, {"sha": "17196eb1ae61f3202d73167af217ccd29c385bdc", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8c3ff3511df8781dd9f3777efab20572d29ab/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8c3ff3511df8781dd9f3777efab20572d29ab/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=2bd8c3ff3511df8781dd9f3777efab20572d29ab", "patch": "@@ -2878,6 +2878,7 @@ match_exit_cycle (gfc_statement st, gfc_exec_op op)\n       && o != NULL\n       && o->state == COMP_OMP_STRUCTURED_BLOCK\n       && (o->head->op == EXEC_OACC_LOOP\n+\t  || o->head->op == EXEC_OACC_KERNELS_LOOP\n \t  || o->head->op == EXEC_OACC_PARALLEL_LOOP\n \t  || o->head->op == EXEC_OACC_SERIAL_LOOP))\n     {\n@@ -2887,18 +2888,32 @@ match_exit_cycle (gfc_statement st, gfc_exec_op op)\n \t\t      || o->head->next->op == EXEC_DO_WHILE)\n \t\t  && o->previous != NULL\n \t\t  && o->previous->tail->op == o->head->op);\n-      if (o->previous->tail->ext.omp_clauses != NULL\n-\t  && o->previous->tail->ext.omp_clauses->collapse > 1)\n-\tcollapse = o->previous->tail->ext.omp_clauses->collapse;\n+      if (o->previous->tail->ext.omp_clauses != NULL)\n+\t{\n+\t  /* Both collapsed and tiled loops are lowered the same way, but are not\n+\t     compatible.  In gfc_trans_omp_do, the tile is prioritized.  */\n+\t  if (o->previous->tail->ext.omp_clauses->tile_list)\n+\t    {\n+\t      collapse = 0;\n+\t      gfc_expr_list *el = o->previous->tail->ext.omp_clauses->tile_list;\n+\t      for ( ; el; el = el->next)\n+\t\t++collapse;\n+\t    }\n+\t  else if (o->previous->tail->ext.omp_clauses->collapse > 1)\n+\t    collapse = o->previous->tail->ext.omp_clauses->collapse;\n+\t}\n       if (st == ST_EXIT && cnt <= collapse)\n \t{\n \t  gfc_error (\"EXIT statement at %C terminating !$ACC LOOP loop\");\n \t  return MATCH_ERROR;\n \t}\n       if (st == ST_CYCLE && cnt < collapse)\n \t{\n-\t  gfc_error (\"CYCLE statement at %C to non-innermost collapsed\"\n-\t\t     \" !$ACC LOOP loop\");\n+\t  gfc_error (o->previous->tail->ext.omp_clauses->tile_list\n+\t\t     ? G_(\"CYCLE statement at %C to non-innermost tiled\"\n+\t\t\t  \" !$ACC LOOP loop\")\n+\t\t     : G_(\"CYCLE statement at %C to non-innermost collapsed\"\n+\t\t\t  \" !$ACC LOOP loop\"));\n \t  return MATCH_ERROR;\n \t}\n     }"}, {"sha": "bd50ffdbd68fef2bebae180bc2d00f6dbf6de868", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8c3ff3511df8781dd9f3777efab20572d29ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8c3ff3511df8781dd9f3777efab20572d29ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2bd8c3ff3511df8781dd9f3777efab20572d29ab", "patch": "@@ -1,3 +1,8 @@\n+2020-02-24  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93552\n+\t* gfortran.dg/goacc/tile-4.f90: New.\n+\n 2020-02-24  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \t    Kugan Vivekandarajah  <kugan.vivekanandarajah@linaro.org>\n \n@@ -43,7 +48,7 @@\n 2020-02-21  Jan Hubicka  <hubicka@ucw.cz>\n \t    Richard Biener  <rguenther@suse.de>\n \n-  \tPR tree-optimization/93586\n+\tPR tree-optimization/93586\n \t* gcc.dg/torture/pr93586.c: New testcase.\n \n 2020-02-21  Martin Jambor  <mjambor@suse.cz>"}, {"sha": "86c22df9b66e032a7c04ecf3572e694fd87cb305", "filename": "gcc/testsuite/gfortran.dg/goacc/tile-4.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd8c3ff3511df8781dd9f3777efab20572d29ab/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ftile-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd8c3ff3511df8781dd9f3777efab20572d29ab/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ftile-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ftile-4.f90?ref=2bd8c3ff3511df8781dd9f3777efab20572d29ab", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+!\n+! Contributed by  G. Steinmetz\n+!\n+! PR fortran/93552\n+! only collapsed an not tile was checked:\n+program p\n+   integer :: i, j\n+   !$acc parallel loop tile(2,2)\n+   outer: do i = 1, 8\n+      do j = 1, 8\n+         exit  ! { dg-error \"statement at .1. terminating ..ACC LOOP loop\" }\n+         cycle outer ! { dg-error \"to non-innermost tiled\" }\n+      end do\n+   end do outer\n+end\n+\n+! Kernels loop was missing the check:\n+subroutine test\n+  !$acc kernels loop collapse(2)\n+  outer: do i = 1, 4\n+    do j = 1, 4\n+      exit  ! { dg-error \"statement at .1. terminating ..ACC LOOP loop\" }\n+      cycle outer ! { dg-error \"to non-innermost collapsed\" }\n+    end do\n+  end do outer\n+end"}]}