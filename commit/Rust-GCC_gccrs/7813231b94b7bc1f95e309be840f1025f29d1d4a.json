{"sha": "7813231b94b7bc1f95e309be840f1025f29d1d4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgxMzIzMWI5NGI3YmMxZjk1ZTMwOWJlODQwZjEwMjVmMjlkMWQ0YQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2007-12-21T23:37:07Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2007-12-21T23:37:07Z"}, "message": "re PR target/34525 (ICE in extract_insn, at recog.c:1990 on hppa)\n\n\tPR target/34525\n\t* pa.c (legitimize_pic_address): Emit insn to load function label\n\tforced to memory.\n\nFrom-SVN: r131126", "tree": {"sha": "727113008fa80c7445d73efff5a2d9df897d2185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/727113008fa80c7445d73efff5a2d9df897d2185"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7813231b94b7bc1f95e309be840f1025f29d1d4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7813231b94b7bc1f95e309be840f1025f29d1d4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7813231b94b7bc1f95e309be840f1025f29d1d4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7813231b94b7bc1f95e309be840f1025f29d1d4a/comments", "author": null, "committer": null, "parents": [{"sha": "b721df48de315f97bfe6b225e83426e2cb040c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b721df48de315f97bfe6b225e83426e2cb040c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b721df48de315f97bfe6b225e83426e2cb040c5d"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "b9ea66f240d62c65b8214f03063bf08d5a9ff023", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7813231b94b7bc1f95e309be840f1025f29d1d4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7813231b94b7bc1f95e309be840f1025f29d1d4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7813231b94b7bc1f95e309be840f1025f29d1d4a", "patch": "@@ -1,3 +1,9 @@\n+2007-12-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/34525\n+\t* pa.c (legitimize_pic_address): Emit insn to load function label\n+\tforced to memory.\n+\n 2007-12-21  Andrew Pinski  <pinskia@gmail.com>\n \tRask Ingemann Lambertsen  <rask@sygehus.dk>\n "}, {"sha": "fce53fe62093208ad9960fb546e8b3a89d228d03", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7813231b94b7bc1f95e309be840f1025f29d1d4a/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7813231b94b7bc1f95e309be840f1025f29d1d4a/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=7813231b94b7bc1f95e309be840f1025f29d1d4a", "patch": "@@ -694,19 +694,37 @@ legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n       tmp_reg = ((reload_in_progress || reload_completed)\n \t\t ? reg : gen_reg_rtx (Pmode));\n \n-      /* Force function labels into memory.  */\n       if (function_label_operand (orig, mode))\n-\torig = force_const_mem (mode, orig);\n-\n-      emit_move_insn (tmp_reg,\n-\t\t      gen_rtx_PLUS (word_mode, pic_offset_table_rtx,\n-\t\t\t\t    gen_rtx_HIGH (word_mode, orig)));\n-      pic_ref\n-\t= gen_const_mem (Pmode,\n-\t\t         gen_rtx_LO_SUM (Pmode, tmp_reg,\n-\t\t\t\t         gen_rtx_UNSPEC (Pmode,\n+\t{\n+\t  /* Force function label into memory.  */\n+\t  orig = XEXP (force_const_mem (mode, orig), 0);\n+\t  /* Load plabel address from DLT.  */\n+\t  emit_move_insn (tmp_reg,\n+\t\t\t  gen_rtx_PLUS (word_mode, pic_offset_table_rtx,\n+\t\t\t\t\tgen_rtx_HIGH (word_mode, orig)));\n+\t  pic_ref\n+\t    = gen_const_mem (Pmode,\n+\t\t\t     gen_rtx_LO_SUM (Pmode, tmp_reg,\n+\t\t\t\t\t     gen_rtx_UNSPEC (Pmode,\n \t\t\t\t\t\t         gen_rtvec (1, orig),\n \t\t\t\t\t\t         UNSPEC_DLTIND14R)));\n+\t  emit_move_insn (reg, pic_ref);\n+\t  /* Now load address of function descriptor.  */\n+\t  pic_ref = gen_rtx_MEM (Pmode, reg);\n+\t}\n+      else\n+\t{\n+\t  /* Load symbol reference from DLT.  */\n+\t  emit_move_insn (tmp_reg,\n+\t\t\t  gen_rtx_PLUS (word_mode, pic_offset_table_rtx,\n+\t\t\t\t\tgen_rtx_HIGH (word_mode, orig)));\n+\t  pic_ref\n+\t    = gen_const_mem (Pmode,\n+\t\t\t     gen_rtx_LO_SUM (Pmode, tmp_reg,\n+\t\t\t\t\t     gen_rtx_UNSPEC (Pmode,\n+\t\t\t\t\t\t         gen_rtvec (1, orig),\n+\t\t\t\t\t\t         UNSPEC_DLTIND14R)));\n+\t}\n \n       current_function_uses_pic_offset_table = 1;\n       mark_reg_pointer (reg, BITS_PER_UNIT);"}]}