{"sha": "f96b6328fa7162111e4440c5901ef313ed3e6c9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk2YjYzMjhmYTcxNjIxMTFlNDQ0MGM1OTAxZWYzMTNlZDNlNmM5YQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-09-10T10:44:20Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-09-10T10:59:29Z"}, "message": "[tree-optimization] Don't clear ctrl-altering flag for IFN_UNIQUE\n\nThere's an invariant for IFN_UNIQUE, listed here in\ngimple_call_initialize_ctrl_altering:\n...\n      /* IFN_UNIQUE should be the last insn, to make checking for it\n         as cheap as possible.  */\n      || (gimple_call_internal_p (stmt)\n          && gimple_call_internal_unique_p (stmt)))\n    gimple_call_set_ctrl_altering (stmt, true);\n...\n\nRecent commit fab77644842 \"tree-optimization/96931 - clear ctrl-altering flag\nmore aggressively\" breaks this invariant, causing an ICE triggered during\nlibgomp testing for x86_64 with nvptx accelerator:\n...\nduring RTL pass: mach\nasyncwait-1.f90: In function \u2018MAIN__._omp_fn.0\u2019:\nasyncwait-1.f90:19: internal compiler error: in nvptx_find_par, at \\\n  config/nvptx/nvptx.c:3293\n...\n\nFix this by listing IFN_UNIQUE as exception in\ncleanup_call_ctrl_altering_flag.\n\nBuild for x86_64 with nvptx accelerator, tested libgomp.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/97000\n\t* tree-cfgcleanup.c (cleanup_call_ctrl_altering_flag): Don't clear\n\tflag for IFN_UNIQUE.", "tree": {"sha": "6b4bcfee3f83263d4e9744b3fc6ad5ed0d2b7f40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b4bcfee3f83263d4e9744b3fc6ad5ed0d2b7f40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f96b6328fa7162111e4440c5901ef313ed3e6c9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96b6328fa7162111e4440c5901ef313ed3e6c9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f96b6328fa7162111e4440c5901ef313ed3e6c9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96b6328fa7162111e4440c5901ef313ed3e6c9a/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d0af0c997fe42a7f0963d970a9c495b81041206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0af0c997fe42a7f0963d970a9c495b81041206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d0af0c997fe42a7f0963d970a9c495b81041206"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f2edd3fd2e50ec621df86d1a2b498cfb1b8876b4", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f96b6328fa7162111e4440c5901ef313ed3e6c9a/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f96b6328fa7162111e4440c5901ef313ed3e6c9a/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=f96b6328fa7162111e4440c5901ef313ed3e6c9a", "patch": "@@ -212,7 +212,11 @@ static void\n cleanup_call_ctrl_altering_flag (basic_block bb, gimple *bb_end)\n {\n   if (!is_gimple_call (bb_end)\n-      || !gimple_call_ctrl_altering_p (bb_end))\n+      || !gimple_call_ctrl_altering_p (bb_end)\n+      || (/* IFN_UNIQUE should be the last insn, to make checking for it\n+\t     as cheap as possible.  */\n+\t  gimple_call_internal_p (bb_end)\n+\t  && gimple_call_internal_unique_p (bb_end)))\n     return;\n \n   int flags = gimple_call_flags (bb_end);"}]}