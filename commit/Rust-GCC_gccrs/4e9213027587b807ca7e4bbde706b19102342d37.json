{"sha": "4e9213027587b807ca7e4bbde706b19102342d37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU5MjEzMDI3NTg3YjgwN2NhN2U0YmJkZTcwNmIxOTEwMjM0MmQzNw==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-06T20:52:03Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-07T13:59:56Z"}, "message": "Off by one final fix.\n\nAllocate the memory in an approved portable way.\n\ngcc/ChangeLog:\n\n2020-10-06  Andrew MacLeod  <amacleod@redhat.com>\n\n\t* value-range.h (irange_allocator::allocate): Allocate in two hunks\n\tinstead of using the variably-sized trailing array approach.", "tree": {"sha": "97f41665c5165feb27f922df60bc220d17f0bb30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97f41665c5165feb27f922df60bc220d17f0bb30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e9213027587b807ca7e4bbde706b19102342d37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9213027587b807ca7e4bbde706b19102342d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e9213027587b807ca7e4bbde706b19102342d37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9213027587b807ca7e4bbde706b19102342d37/comments", "author": null, "committer": null, "parents": [{"sha": "7c7e841806aecf4187c69fc2ff07813c7be09582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7e841806aecf4187c69fc2ff07813c7be09582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c7e841806aecf4187c69fc2ff07813c7be09582"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "63c96204cda5400bd099c45567afc9880d548f38", "filename": "gcc/value-range.h", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9213027587b807ca7e4bbde706b19102342d37/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9213027587b807ca7e4bbde706b19102342d37/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=4e9213027587b807ca7e4bbde706b19102342d37", "patch": "@@ -668,13 +668,12 @@ irange_allocator::allocate (unsigned num_pairs)\n   if (num_pairs < 2)\n     num_pairs = 2;\n \n-  struct newir {\n-    irange range;\n-    tree mem[2];\n-  };\n-  size_t nbytes = (sizeof (newir) + sizeof (tree) * 2 * (num_pairs - 1));\n-  struct newir *r = (newir *) obstack_alloc (&m_obstack, nbytes);\n-  return new (r) irange (r->mem, num_pairs);\n+  size_t nbytes = sizeof (tree) * 2 * num_pairs;\n+\n+  // Allocate the irange and required memory for the vector.\n+  void *r = obstack_alloc (&m_obstack, sizeof (irange));\n+  tree *mem = (tree *) obstack_alloc (&m_obstack, nbytes);\n+  return new (r) irange (mem, num_pairs);\n }\n \n inline irange *"}]}