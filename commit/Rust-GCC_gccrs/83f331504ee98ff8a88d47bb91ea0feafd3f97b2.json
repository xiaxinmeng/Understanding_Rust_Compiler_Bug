{"sha": "83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNmMzMxNTA0ZWU5OGZmOGE4OGQ0N2JiOTFlYTBmZWFmZDNmOTdiMg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-08-02T15:28:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T15:28:12Z"}, "message": "sem_ch3.adb, [...]: Protect call to Current_Subprogram which might be costly when repeated.\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch3.adb, sem_ch5.adb, sem_ch9.adb, sem_util.adb, sem_util.ads,\n\tsem_res.adb, sem_ch2.adb, sem_ch4.adb, sem_ch6.adb,\n\tsem_ch11.adb: Protect call to Current_Subprogram which might be costly\n\twhen repeated. Rename Current_Subprogram_Is_Not_In_ALFA into\n\tMark_Non_ALFA_Subprogram_Body.\n\tSplit body of Mark_Non_ALFA_Subprogram_Body to get body small and\n\tinlined.\n\nFrom-SVN: r177182", "tree": {"sha": "71a15c33ec39eead3557d27d7b766e39978f5307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71a15c33ec39eead3557d27d7b766e39978f5307"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b98672ff9bc9b1096b604e9f900eb1692ea8bd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b98672ff9bc9b1096b604e9f900eb1692ea8bd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b98672ff9bc9b1096b604e9f900eb1692ea8bd3"}], "stats": {"total": 166, "additions": 96, "deletions": 70}, "files": [{"sha": "99cf2c347e12162fbedb4f4e3a323efa8b32a3c0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -1,3 +1,13 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch3.adb, sem_ch5.adb, sem_ch9.adb, sem_util.adb, sem_util.ads,\n+\tsem_res.adb, sem_ch2.adb, sem_ch4.adb, sem_ch6.adb,\n+\tsem_ch11.adb: Protect call to Current_Subprogram which might be costly\n+\twhen repeated. Rename Current_Subprogram_Is_Not_In_ALFA into\n+\tMark_Non_ALFA_Subprogram_Body.\n+\tSplit body of Mark_Non_ALFA_Subprogram_Body to get body small and\n+\tinlined.\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* sem_res.adb: Protect calls to Matching_Static_Array_Bounds which"}, {"sha": "4f24112725030d4ebcb5a4281136e856c8b4b24f", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -443,7 +443,7 @@ package body Sem_Ch11 is\n       P              : Node_Id;\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"raise statement is not allowed\", N);\n       Check_Unreachable_Code (N);\n \n@@ -611,7 +611,7 @@ package body Sem_Ch11 is\n    --  Start of processing for Analyze_Raise_xxx_Error\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"raise statement is not allowed\", N);\n \n       if No (Etype (N)) then"}, {"sha": "38003e2226241ed8703be6f9dee6ea99d2e6840a", "filename": "gcc/ada/sem_ch2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -81,7 +81,7 @@ package body Sem_Ch2 is\n            and then Is_Object (Entity (N))\n            and then not Is_In_ALFA (Entity (N))\n          then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n          end if;\n       end if;\n    end Analyze_Identifier;"}, {"sha": "dfde2ed07a4953da22937c950e46bc7ee31d199c", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -3036,7 +3036,7 @@ package body Sem_Ch3 is\n       if Is_In_ALFA (T) and then not Aliased_Present (N) then\n          Set_Is_In_ALFA (Id);\n       else\n-         Current_Subprogram_Body_Is_Not_In_ALFA;\n+         Mark_Non_ALFA_Subprogram_Body;\n       end if;\n \n       --  These checks should be performed before the initialization expression"}, {"sha": "47a43dd4401705744714ce051fed6e628c150e4e", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -350,7 +350,7 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Aggregate (N : Node_Id) is\n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       if No (Etype (N)) then\n          Set_Etype (N, Any_Composite);\n@@ -371,7 +371,7 @@ package body Sem_Ch4 is\n       C        : Node_Id;\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"allocator is not allowed\", N);\n \n       --  Deal with allocator restrictions\n@@ -991,7 +991,7 @@ package body Sem_Ch4 is\n          if not Is_Subprogram (Nam_Ent)\n            or else not Is_In_ALFA (Nam_Ent)\n          then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n          end if;\n \n          Analyze_One_Call (N, Nam_Ent, True, Success);\n@@ -1370,7 +1370,7 @@ package body Sem_Ch4 is\n       L  : Node_Id;\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       Candidate_Type := Empty;\n \n@@ -1520,7 +1520,7 @@ package body Sem_Ch4 is\n          return;\n       end if;\n \n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"conditional expression is not allowed\", N);\n \n       Else_Expr := Next (Then_Expr);\n@@ -1721,7 +1721,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Explicit_Dereference\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"explicit dereference is not allowed\", N);\n \n       Analyze (P);\n@@ -2483,7 +2483,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Membership_Op\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       Analyze_Expression (L);\n \n@@ -2606,7 +2606,7 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Null (N : Node_Id) is\n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"null is not allowed\", N);\n \n       Set_Etype (N, Any_Access);\n@@ -3235,7 +3235,7 @@ package body Sem_Ch4 is\n       T    : Entity_Id;\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       Analyze_Expression (Expr);\n \n@@ -3295,7 +3295,7 @@ package body Sem_Ch4 is\n       Iterator : Node_Id;\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"quantified expression is not allowed\", N);\n \n       Set_Etype  (Ent,  Standard_Void_Type);\n@@ -3461,7 +3461,7 @@ package body Sem_Ch4 is\n       Acc_Type : Entity_Id;\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       Analyze (P);\n \n@@ -4326,7 +4326,7 @@ package body Sem_Ch4 is\n    --  Start of processing for Analyze_Slice\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"slice is not allowed\", N);\n \n       Analyze (P);\n@@ -4371,7 +4371,7 @@ package body Sem_Ch4 is\n       T    : Entity_Id;\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       --  If Conversion_OK is set, then the Etype is already set, and the\n       --  only processing required is to analyze the expression. This is\n@@ -4503,7 +4503,7 @@ package body Sem_Ch4 is\n \n    procedure Analyze_Unchecked_Type_Conversion (N : Node_Id) is\n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Find_Type (Subtype_Mark (N));\n       Analyze_Expression (Expression (N));\n       Set_Etype (N, Entity (Subtype_Mark (N)));"}, {"sha": "5370f701a8a104a190537093a6bbc0140325ccc3", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -1113,7 +1113,7 @@ package body Sem_Ch5 is\n       if Others_Present\n         and then List_Length (Alternatives (N)) = 1\n       then\n-         Current_Subprogram_Body_Is_Not_In_ALFA;\n+         Mark_Non_ALFA_Subprogram_Body;\n          Check_SPARK_Restriction\n            (\"OTHERS as unique case alternative is not allowed\", N);\n       end if;\n@@ -1195,7 +1195,7 @@ package body Sem_Ch5 is\n \n          else\n             if Has_Loop_In_Inner_Open_Scopes (U_Name) then\n-               Current_Subprogram_Body_Is_Not_In_ALFA;\n+               Mark_Non_ALFA_Subprogram_Body;\n                Check_SPARK_Restriction\n                  (\"exit label must name the closest enclosing loop\", N);\n             end if;\n@@ -1242,14 +1242,14 @@ package body Sem_Ch5 is\n \n       if Present (Cond) then\n          if Nkind (Parent (N)) /= N_Loop_Statement then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n             Check_SPARK_Restriction\n               (\"exit with when clause must be directly in loop\", N);\n          end if;\n \n       else\n          if Nkind (Parent (N)) /= N_If_Statement then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n             if Nkind (Parent (N)) = N_Elsif_Part then\n                Check_SPARK_Restriction\n                  (\"exit must be in IF without ELSIF\", N);\n@@ -1258,22 +1258,22 @@ package body Sem_Ch5 is\n             end if;\n \n          elsif Nkind (Parent (Parent (N))) /= N_Loop_Statement then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n             Check_SPARK_Restriction\n               (\"exit must be in IF directly in loop\", N);\n \n             --  First test the presence of ELSE, so that an exit in an ELSE\n             --  leads to an error mentioning the ELSE.\n \n          elsif Present (Else_Statements (Parent (N))) then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n             Check_SPARK_Restriction (\"exit must be in IF without ELSE\", N);\n \n             --  An exit in an ELSIF does not reach here, as it would have been\n             --  detected in the case (Nkind (Parent (N)) /= N_If_Statement).\n \n          elsif Present (Elsif_Parts (Parent (N))) then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n             Check_SPARK_Restriction (\"exit must be in IF without ELSIF\", N);\n          end if;\n       end if;\n@@ -1302,7 +1302,7 @@ package body Sem_Ch5 is\n       Label_Ent   : Entity_Id;\n \n    begin\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"goto statement is not allowed\", N);\n \n       --  Actual semantic checks"}, {"sha": "d02ac62324cfbf40aa2a42cddd1fe9b2ace7ba83", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -638,13 +638,13 @@ package body Sem_Ch6 is\n              (Nkind (Parent (Parent (N))) /= N_Subprogram_Body\n                or else Present (Next (N)))\n          then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n             Check_SPARK_Restriction\n               (\"RETURN should be the last statement in function\", N);\n          end if;\n \n       else\n-         Current_Subprogram_Body_Is_Not_In_ALFA;\n+         Mark_Non_ALFA_Subprogram_Body;\n          Check_SPARK_Restriction (\"extended RETURN is not allowed\", N);\n \n          --  Analyze parts specific to extended_return_statement:"}, {"sha": "2a2c6c55223cef94c90da022570fedae6a73e21e", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -101,7 +101,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"abort statement is not allowed\", N);\n \n       T_Name := First (Names (N));\n@@ -140,7 +140,7 @@ package body Sem_Ch9 is\n    procedure Analyze_Accept_Alternative (N : Node_Id) is\n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       if Present (Pragmas_Before (N)) then\n          Analyze_List (Pragmas_Before (N));\n@@ -174,7 +174,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"accept statement is not allowed\", N);\n \n       --  Entry name is initialized to Any_Id. It should get reset to the\n@@ -406,7 +406,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (Max_Asynchronous_Select_Nesting, N);\n       Check_Restriction (No_Select_Statements, N);\n@@ -453,7 +453,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n@@ -500,7 +500,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_Restriction (No_Delay, N);\n \n       if Present (Pragmas_Before (N)) then\n@@ -552,7 +552,7 @@ package body Sem_Ch9 is\n       E : constant Node_Id := Expression (N);\n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"delay statement is not allowed\", N);\n       Check_Restriction (No_Relative_Delay, N);\n       Check_Restriction (No_Delay, N);\n@@ -571,7 +571,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"delay statement is not allowed\", N);\n       Check_Restriction (No_Delay, N);\n       Check_Potentially_Blocking_Operation (N);\n@@ -600,7 +600,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       --  Entry_Name is initialized to Any_Id. It should get reset to the\n       --  matching entry entity. An error is signalled if it is not reset\n@@ -833,7 +833,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       if Present (Index) then\n          Analyze (Index);\n@@ -861,7 +861,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"entry call is not allowed\", N);\n \n       if Present (Pragmas_Before (N)) then\n@@ -897,7 +897,7 @@ package body Sem_Ch9 is\n    begin\n       Generate_Definition (Def_Id);\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       --  Case of no discrete subtype definition\n \n@@ -967,7 +967,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Analyze (Def);\n \n       --  There is no elaboration of the entry index specification. Therefore,\n@@ -1009,7 +1009,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Set_Ekind (Body_Id, E_Protected_Body);\n       Spec_Id := Find_Concurrent_Spec (Body_Id);\n \n@@ -1128,7 +1128,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"protected definition is not allowed\", N);\n       Analyze_Declarations (Visible_Declarations (N));\n \n@@ -1182,7 +1182,7 @@ package body Sem_Ch9 is\n       end if;\n \n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_Restriction (No_Protected_Types, N);\n \n       T := Find_Type_Name (N);\n@@ -1324,7 +1324,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"requeue statement is not allowed\", N);\n       Check_Restriction (No_Requeue_Statements, N);\n       Check_Unreachable_Code (N);\n@@ -1599,7 +1599,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n@@ -1720,7 +1720,7 @@ package body Sem_Ch9 is\n    begin\n       Generate_Definition (Id);\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       --  The node is rewritten as a protected type declaration, in exact\n       --  analogy with what is done with single tasks.\n@@ -1782,7 +1782,7 @@ package body Sem_Ch9 is\n    begin\n       Generate_Definition (Id);\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       --  The node is rewritten as a task type declaration, followed by an\n       --  object declaration of that anonymous task type.\n@@ -1860,7 +1860,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Set_Ekind (Body_Id, E_Task_Body);\n       Set_Scope (Body_Id, Current_Scope);\n       Spec_Id := Find_Concurrent_Spec (Body_Id);\n@@ -1981,7 +1981,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"task definition is not allowed\", N);\n \n       if Present (Visible_Declarations (N)) then\n@@ -2016,7 +2016,7 @@ package body Sem_Ch9 is\n    begin\n       Check_Restriction (No_Tasking, N);\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       T := Find_Type_Name (N);\n       Generate_Definition (T);\n \n@@ -2122,7 +2122,7 @@ package body Sem_Ch9 is\n    procedure Analyze_Terminate_Alternative (N : Node_Id) is\n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       if Present (Pragmas_Before (N)) then\n          Analyze_List (Pragmas_Before (N));\n@@ -2144,7 +2144,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n       Check_SPARK_Restriction (\"select statement is not allowed\", N);\n       Check_Restriction (No_Select_Statements, N);\n \n@@ -2181,7 +2181,7 @@ package body Sem_Ch9 is\n \n    begin\n       Tasking_Used := True;\n-      Current_Subprogram_Body_Is_Not_In_ALFA;\n+      Mark_Non_ALFA_Subprogram_Body;\n \n       if Present (Pragmas_Before (N)) then\n          Analyze_List (Pragmas_Before (N));"}, {"sha": "faf20d637f498257b3a66213c42d860e41b47ada", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -5964,12 +5964,12 @@ package body Sem_Res is\n       --  types or array types except String.\n \n       if Is_Boolean_Type (T) then\n-         Current_Subprogram_Body_Is_Not_In_ALFA;\n+         Mark_Non_ALFA_Subprogram_Body;\n          Check_SPARK_Restriction\n            (\"comparison is not defined on Boolean type\", N);\n \n       elsif Is_Array_Type (T) then\n-         Current_Subprogram_Body_Is_Not_In_ALFA;\n+         Mark_Non_ALFA_Subprogram_Body;\n \n          if Base_Type (T) /= Standard_String then\n             Check_SPARK_Restriction\n@@ -6828,7 +6828,7 @@ package body Sem_Res is\n          --  operands have equal static bounds.\n \n          if Is_Array_Type (T) then\n-            Current_Subprogram_Body_Is_Not_In_ALFA;\n+            Mark_Non_ALFA_Subprogram_Body;\n \n             --  Protect call to Matching_Static_Array_Bounds to avoid costly\n             --  operation if not needed.\n@@ -7378,7 +7378,7 @@ package body Sem_Res is\n       if Is_Array_Type (B_Typ)\n         and then Nkind (N) in N_Binary_Op\n       then\n-         Current_Subprogram_Body_Is_Not_In_ALFA;\n+         Mark_Non_ALFA_Subprogram_Body;\n \n          declare\n             Left_Typ  : constant Node_Id := Etype (Left_Opnd (N));"}, {"sha": "f6fa724e570d65bf3e2a3a43cd8201a9b6d56655", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -2311,20 +2311,36 @@ package body Sem_Util is\n       end if;\n    end Current_Subprogram;\n \n-   --------------------------------------------\n-   -- Current_Subprogram_Body_Is_Not_In_ALFA --\n-   --------------------------------------------\n+   -----------------------------------\n+   -- Mark_Non_ALFA_Subprogram_Body --\n+   -----------------------------------\n+\n+   procedure Mark_Non_ALFA_Subprogram_Body is\n+\n+      procedure Unconditional_Mark;\n+      --  Isolate marking of the current subprogram body so that the body of\n+      --  Mark_Non_ALFA_Subprogram_Body is small and inlined.\n+\n+      ------------------------\n+      -- Unconditional_Mark --\n+      ------------------------\n+\n+      procedure Unconditional_Mark is\n+         Cur_Subp : constant Entity_Id := Current_Subprogram;\n+      begin\n+         if Present (Cur_Subp)\n+           and then (Is_Subprogram (Cur_Subp)\n+                      or else Is_Generic_Subprogram (Cur_Subp))\n+         then\n+            Set_Body_Is_In_ALFA (Cur_Subp, False);\n+         end if;\n+      end Unconditional_Mark;\n \n-   procedure Current_Subprogram_Body_Is_Not_In_ALFA is\n-      Cur_Subp : constant Entity_Id := Current_Subprogram;\n    begin\n-      if Present (Cur_Subp)\n-        and then (Is_Subprogram (Cur_Subp)\n-                   or else Is_Generic_Subprogram (Cur_Subp))\n-      then\n-         Set_Body_Is_In_ALFA (Cur_Subp, False);\n+      if ALFA_Mode then\n+         Unconditional_Mark;\n       end if;\n-   end Current_Subprogram_Body_Is_Not_In_ALFA;\n+   end Mark_Non_ALFA_Subprogram_Body;\n \n    ---------------------\n    -- Defining_Entity --"}, {"sha": "c533b1d054fb270cc43b72e4002ec93025c8ee63", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f331504ee98ff8a88d47bb91ea0feafd3f97b2/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=83f331504ee98ff8a88d47bb91ea0feafd3f97b2", "patch": "@@ -277,7 +277,7 @@ package Sem_Util is\n    --  Current_Scope is returned. The returned value is Empty if this is called\n    --  from a library package which is not within any subprogram.\n \n-   procedure Current_Subprogram_Body_Is_Not_In_ALFA;\n+   procedure Mark_Non_ALFA_Subprogram_Body;\n    --  If Current_Subprogram is not Empty, set its flag Body_Is_In_ALFA to\n    --  False, otherwise do nothing.\n "}]}