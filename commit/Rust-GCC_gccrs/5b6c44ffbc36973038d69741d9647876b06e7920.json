{"sha": "5b6c44ffbc36973038d69741d9647876b06e7920", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI2YzQ0ZmZiYzM2OTczMDM4ZDY5NzQxZDk2NDc4NzZiMDZlNzkyMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-10T22:37:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-10T22:37:38Z"}, "message": "(store_constructor, ARRAY_TYPE): Use code for non-integer INDEX for non-integer ELTTYPE size.\n\n(store_constructor, ARRAY_TYPE): Use code for non-integer INDEX for\nnon-integer ELTTYPE size.\nAllow INDEX to be zero in code and divide size by BITS_PER_UNIT.\n\nFrom-SVN: r8902", "tree": {"sha": "6d9b6794e6fc8ebc72077b8c9252a70e51816b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d9b6794e6fc8ebc72077b8c9252a70e51816b22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b6c44ffbc36973038d69741d9647876b06e7920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6c44ffbc36973038d69741d9647876b06e7920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b6c44ffbc36973038d69741d9647876b06e7920", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6c44ffbc36973038d69741d9647876b06e7920/comments", "author": null, "committer": null, "parents": [{"sha": "cd7ece6611492426f2ef4030da4b564fd0b9aa10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7ece6611492426f2ef4030da4b564fd0b9aa10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7ece6611492426f2ef4030da4b564fd0b9aa10"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "f810a25b1f8c1a77e25cb1f5dd8120418c0cfc27", "filename": "gcc/expr.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6c44ffbc36973038d69741d9647876b06e7920/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6c44ffbc36973038d69741d9647876b06e7920/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=5b6c44ffbc36973038d69741d9647876b06e7920", "patch": "@@ -3070,14 +3070,18 @@ store_constructor (exp, target)\n \t  bitsize = GET_MODE_BITSIZE (mode);\n \t  unsignedp = TREE_UNSIGNED (elttype);\n \n-\t  if (index != 0 && TREE_CODE (index) != INTEGER_CST)\n+\t  if ((index != 0 && TREE_CODE (index) != INTEGER_CST)\n+\t      || TREE_CODE (TYPE_SIZE (elttype)) != INTEGER_CST)\n \t    {\n-\t      /* We don't currently allow variable indices in a\n-\t\t C initializer, but let's try here to support them.  */\n \t      rtx pos_rtx, addr, xtarget;\n \t      tree position;\n \n-\t      position = size_binop (MULT_EXPR, index, TYPE_SIZE (elttype));\n+\t      if (index == 0)\n+\t\tindex = size_int (i);\n+\n+\t      position = size_binop (EXACT_DIV_EXPR, TYPE_SIZE (elttype),\n+\t\t\t\t     size_int (BITS_PER_UNIT));\n+\t      position = size_binop (MULT_EXPR, index, position);\n \t      pos_rtx = expand_expr (position, 0, VOIDmode, 0);\n \t      addr = gen_rtx (PLUS, Pmode, XEXP (target, 0), pos_rtx);\n \t      xtarget = change_address (target, mode, addr);"}]}