{"sha": "d6aa28bb93c6fc9042ee87ff7addac60647dbddb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZhYTI4YmI5M2M2ZmM5MDQyZWU4N2ZmN2FkZGFjNjA2NDdkYmRkYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-16T06:50:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-16T07:41:23Z"}, "message": "tree-optimization/101462 - fix signedness of reused reduction vector\n\nThis fixes the partial reduction of the reused reduction vector to\ncarried out in the correct sign and the correctly signed vector\nrecorded for the skip edge use.\n\n2021-07-16  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-loop.c (vect_transform_cycle_phi): Correct sign\n\tconversion issues with the partial reduction of the reused\n\tvector accumulator.", "tree": {"sha": "3722fef9c07f103e04599d6c5543b2a72a29a2d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3722fef9c07f103e04599d6c5543b2a72a29a2d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6aa28bb93c6fc9042ee87ff7addac60647dbddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6aa28bb93c6fc9042ee87ff7addac60647dbddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6aa28bb93c6fc9042ee87ff7addac60647dbddb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6aa28bb93c6fc9042ee87ff7addac60647dbddb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a314d50336db752f2ae2c50262956ce4490567ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a314d50336db752f2ae2c50262956ce4490567ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a314d50336db752f2ae2c50262956ce4490567ac"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "00a57b2ba62a1ce3f87e85cac8dc0d67e501ab5c", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6aa28bb93c6fc9042ee87ff7addac60647dbddb/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6aa28bb93c6fc9042ee87ff7addac60647dbddb/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=d6aa28bb93c6fc9042ee87ff7addac60647dbddb", "patch": "@@ -7706,21 +7706,35 @@ vect_transform_cycle_phi (loop_vec_info loop_vinfo,\n   if (auto *accumulator = reduc_info->reused_accumulator)\n     {\n       tree def = accumulator->reduc_input;\n-      unsigned int nreduc;\n-      bool res = constant_multiple_p (TYPE_VECTOR_SUBPARTS (TREE_TYPE (def)),\n-\t\t\t\t      TYPE_VECTOR_SUBPARTS (vectype_out),\n-\t\t\t\t      &nreduc);\n-      gcc_assert (res);\n-      if (nreduc != 1)\n-\t{\n-\t  /* Reduce the single vector to a smaller one.  */\n+      if (!useless_type_conversion_p (vectype_out, TREE_TYPE (def)))\n+\t{\n+\t  unsigned int nreduc;\n+\t  bool res = constant_multiple_p (TYPE_VECTOR_SUBPARTS\n+\t\t\t\t\t    (TREE_TYPE (def)),\n+\t\t\t\t\t  TYPE_VECTOR_SUBPARTS (vectype_out),\n+\t\t\t\t\t  &nreduc);\n+\t  gcc_assert (res);\n \t  gimple_seq stmts = NULL;\n-\t  def = vect_create_partial_epilog (def, vectype_out,\n-\t\t\t\t\t    STMT_VINFO_REDUC_CODE (reduc_info),\n-\t\t\t\t\t    &stmts);\n+\t  /* Reduce the single vector to a smaller one.  */\n+\t  if (nreduc != 1)\n+\t    {\n+\t      /* Perform the reduction in the appropriate type.  */\n+\t      tree rvectype = vectype_out;\n+\t      if (!useless_type_conversion_p (TREE_TYPE (vectype_out),\n+\t\t\t\t\t      TREE_TYPE (TREE_TYPE (def))))\n+\t\trvectype = build_vector_type (TREE_TYPE (TREE_TYPE (def)),\n+\t\t\t\t\t      TYPE_VECTOR_SUBPARTS\n+\t\t\t\t\t\t(vectype_out));\n+\t      def = vect_create_partial_epilog (def, rvectype,\n+\t\t\t\t\t\tSTMT_VINFO_REDUC_CODE\n+\t\t\t\t\t\t  (reduc_info),\n+\t\t\t\t\t\t&stmts);\n+\t    }\n \t  /* Adjust the input so we pick up the partially reduced value\n \t     for the skip edge in vect_create_epilog_for_reduction.  */\n \t  accumulator->reduc_input = def;\n+\t  if (!useless_type_conversion_p (vectype_out, TREE_TYPE (def)))\n+\t    def = gimple_convert (&stmts, vectype_out, def);\n \t  if (loop_vinfo->main_loop_edge)\n \t    {\n \t      /* While we'd like to insert on the edge this will split"}]}