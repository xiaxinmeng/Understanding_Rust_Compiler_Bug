{"sha": "a7e1e2acfd9579a28fcd668abb45727e4cce5475", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdlMWUyYWNmZDk1NzlhMjhmY2Q2NjhhYmI0NTcyN2U0Y2NlNTQ3NQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@lsd.ic.unicamp.br", "date": "1999-09-21T04:04:16Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gcc.gnu.org", "date": "1999-09-21T04:04:16Z"}, "message": "emit-rtl.c (init_emit_once): Initialize const_int_rtx before other initializations that may use it for...\n\n* emit-rtl.c (init_emit_once): Initialize const_int_rtx before\nother initializations that may use it for relative offsets.\n\nFrom-SVN: r29535", "tree": {"sha": "7df9ad66bf57560e1f71c33c2d803ba1b6ba9473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7df9ad66bf57560e1f71c33c2d803ba1b6ba9473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7e1e2acfd9579a28fcd668abb45727e4cce5475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e1e2acfd9579a28fcd668abb45727e4cce5475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e1e2acfd9579a28fcd668abb45727e4cce5475", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e1e2acfd9579a28fcd668abb45727e4cce5475/comments", "author": null, "committer": null, "parents": [{"sha": "0c723adadadf090ab23d6269157c168326cea79d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c723adadadf090ab23d6269157c168326cea79d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c723adadadf090ab23d6269157c168326cea79d"}], "stats": {"total": 103, "additions": 54, "deletions": 49}, "files": [{"sha": "1d240ef1d4b8c828a2eba4a9d18d3403d3f7624f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7e1e2acfd9579a28fcd668abb45727e4cce5475/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7e1e2acfd9579a28fcd668abb45727e4cce5475/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7e1e2acfd9579a28fcd668abb45727e4cce5475", "patch": "@@ -1,3 +1,8 @@\n+Tue Sep 21 00:59:49 1999  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n+\n+\t* emit-rtl.c (init_emit_once): Initialize const_int_rtx before\n+\tother initializations that may use it for relative offsets.\n+\n Mon Sep 20 21:43:25 1999  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* config/i386/sol2.h (PREFERRED_DEBUGGING_TYPE): Use stabs."}, {"sha": "5a339a45f0f879fc289fc8289d0a0436625f21f1", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7e1e2acfd9579a28fcd668abb45727e4cce5475/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7e1e2acfd9579a28fcd668abb45727e4cce5475/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a7e1e2acfd9579a28fcd668abb45727e4cce5475", "patch": "@@ -3522,54 +3522,6 @@ init_emit_once (line_numbers)\n   if (ggc_p)\n     ggc_add_rtx_root (global_rtl, GR_MAX);\n \n-#ifdef RETURN_ADDRESS_POINTER_REGNUM\n-  return_address_pointer_rtx\n-    = gen_rtx_raw_REG (Pmode, RETURN_ADDRESS_POINTER_REGNUM);\n-#endif\n-\n-#ifdef STRUCT_VALUE\n-  struct_value_rtx = STRUCT_VALUE;\n-#else\n-  struct_value_rtx = gen_rtx_REG (Pmode, STRUCT_VALUE_REGNUM);\n-#endif\n-\n-#ifdef STRUCT_VALUE_INCOMING\n-  struct_value_incoming_rtx = STRUCT_VALUE_INCOMING;\n-#else\n-#ifdef STRUCT_VALUE_INCOMING_REGNUM\n-  struct_value_incoming_rtx\n-    = gen_rtx_REG (Pmode, STRUCT_VALUE_INCOMING_REGNUM);\n-#else\n-  struct_value_incoming_rtx = struct_value_rtx;\n-#endif\n-#endif\n-\n-#ifdef STATIC_CHAIN_REGNUM\n-  static_chain_rtx = gen_rtx_REG (Pmode, STATIC_CHAIN_REGNUM);\n-\n-#ifdef STATIC_CHAIN_INCOMING_REGNUM\n-  if (STATIC_CHAIN_INCOMING_REGNUM != STATIC_CHAIN_REGNUM)\n-    static_chain_incoming_rtx\n-      = gen_rtx_REG (Pmode, STATIC_CHAIN_INCOMING_REGNUM);\n-  else\n-#endif\n-    static_chain_incoming_rtx = static_chain_rtx;\n-#endif\n-\n-#ifdef STATIC_CHAIN\n-  static_chain_rtx = STATIC_CHAIN;\n-\n-#ifdef STATIC_CHAIN_INCOMING\n-  static_chain_incoming_rtx = STATIC_CHAIN_INCOMING;\n-#else\n-  static_chain_incoming_rtx = static_chain_rtx;\n-#endif\n-#endif\n-\n-#ifdef PIC_OFFSET_TABLE_REGNUM\n-  pic_offset_table_rtx = gen_rtx_REG (Pmode, PIC_OFFSET_TABLE_REGNUM);\n-#endif\n-\n #ifdef INIT_EXPANDERS\n   /* This is to initialize save_machine_status and restore_machine_status before\n      the first call to push_function_context_to.  This is needed by the Chill\n@@ -3666,8 +3618,56 @@ init_emit_once (line_numbers)\n       const_tiny_rtx[0][(int) mode] = const0_rtx;\n \n   ggc_add_rtx_root (&const_tiny_rtx[0][0], sizeof(const_tiny_rtx)/sizeof(rtx));\n-\n   ggc_add_rtx_root (&const_true_rtx, 1);\n+\n+#ifdef RETURN_ADDRESS_POINTER_REGNUM\n+  return_address_pointer_rtx\n+    = gen_rtx_raw_REG (Pmode, RETURN_ADDRESS_POINTER_REGNUM);\n+#endif\n+\n+#ifdef STRUCT_VALUE\n+  struct_value_rtx = STRUCT_VALUE;\n+#else\n+  struct_value_rtx = gen_rtx_REG (Pmode, STRUCT_VALUE_REGNUM);\n+#endif\n+\n+#ifdef STRUCT_VALUE_INCOMING\n+  struct_value_incoming_rtx = STRUCT_VALUE_INCOMING;\n+#else\n+#ifdef STRUCT_VALUE_INCOMING_REGNUM\n+  struct_value_incoming_rtx\n+    = gen_rtx_REG (Pmode, STRUCT_VALUE_INCOMING_REGNUM);\n+#else\n+  struct_value_incoming_rtx = struct_value_rtx;\n+#endif\n+#endif\n+\n+#ifdef STATIC_CHAIN_REGNUM\n+  static_chain_rtx = gen_rtx_REG (Pmode, STATIC_CHAIN_REGNUM);\n+\n+#ifdef STATIC_CHAIN_INCOMING_REGNUM\n+  if (STATIC_CHAIN_INCOMING_REGNUM != STATIC_CHAIN_REGNUM)\n+    static_chain_incoming_rtx\n+      = gen_rtx_REG (Pmode, STATIC_CHAIN_INCOMING_REGNUM);\n+  else\n+#endif\n+    static_chain_incoming_rtx = static_chain_rtx;\n+#endif\n+\n+#ifdef STATIC_CHAIN\n+  static_chain_rtx = STATIC_CHAIN;\n+\n+#ifdef STATIC_CHAIN_INCOMING\n+  static_chain_incoming_rtx = STATIC_CHAIN_INCOMING;\n+#else\n+  static_chain_incoming_rtx = static_chain_rtx;\n+#endif\n+#endif\n+\n+#ifdef PIC_OFFSET_TABLE_REGNUM\n+  pic_offset_table_rtx = gen_rtx_REG (Pmode, PIC_OFFSET_TABLE_REGNUM);\n+#endif\n+\n   ggc_add_rtx_root (&pic_offset_table_rtx, 1);\n   ggc_add_rtx_root (&struct_value_rtx, 1);\n   ggc_add_rtx_root (&struct_value_incoming_rtx, 1);"}]}