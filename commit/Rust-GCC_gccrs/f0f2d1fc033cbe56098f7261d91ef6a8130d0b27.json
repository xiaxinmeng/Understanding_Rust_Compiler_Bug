{"sha": "f0f2d1fc033cbe56098f7261d91ef6a8130d0b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBmMmQxZmMwMzNjYmU1NjA5OGY3MjYxZDkxZWY2YTgxMzBkMGIyNw==", "commit": {"author": {"name": "Maroua Maalej", "email": "maalej@adacore.com", "date": "2018-09-26T09:16:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-09-26T09:16:23Z"}, "message": "[Ada] SPARK: update borrowing effects for IN parameters\n\n2018-09-26  Maroua Maalej  <maalej@adacore.com>\n\ngcc/ada/\n\n\t* sem_spark.adb (Check_Param_In, Setup_Parameter_Or_Global):\n\tChange the operation associated to assigning to an IN parameter.\n\tIn SPARK, IN access-to-variable is an observe operation for a\n\tfunction, and borrow operation for a procedure.\n\nFrom-SVN: r264601", "tree": {"sha": "26ac838f00f0d5e2e8254bd60e42f6eabc0ece9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26ac838f00f0d5e2e8254bd60e42f6eabc0ece9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27/comments", "author": null, "committer": null, "parents": [{"sha": "98f57e4ca3ee558c5a88d471019de0cf005967e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f57e4ca3ee558c5a88d471019de0cf005967e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98f57e4ca3ee558c5a88d471019de0cf005967e9"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "8d7f5c24e7f54bbb86e9a9dfa71be97283802d42", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f0f2d1fc033cbe56098f7261d91ef6a8130d0b27", "patch": "@@ -1,3 +1,10 @@\n+2018-09-26  Maroua Maalej  <maalej@adacore.com>\n+\n+\t* sem_spark.adb (Check_Param_In, Setup_Parameter_Or_Global):\n+\tChange the operation associated to assigning to an IN parameter.\n+\tIn SPARK, IN access-to-variable is an observe operation for a\n+\tfunction, and borrow operation for a procedure.\n+\n 2018-09-26  Arnaud Charlet  <charlet@adacore.com>\n \n \t* vxlink.adb: Minor reformatting."}, {"sha": "920c3ff210c4c8f5f26cc3e0ccdb6b15dbc3ff78", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 32, "deletions": 19, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f2d1fc033cbe56098f7261d91ef6a8130d0b27/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=f0f2d1fc033cbe56098f7261d91ef6a8130d0b27", "patch": "@@ -505,13 +505,12 @@ package body Sem_SPARK is\n    type Checking_Mode is\n \n      (Read,\n-      --  Default mode. Checks that paths have Read_Perm permission.\n+      --  Default mode\n \n       Move,\n-      --  Regular moving semantics. Checks that paths have\n-      --  Unrestricted permission. After moving a path, its permission is set\n-      --  to Unrestricted and the permission of its extensions is set\n-      --  to Unrestricted.\n+      --  Regular moving semantics. Checks that paths have Unrestricted\n+      --  permission. After moving a path, the permission of both it and\n+      --  its extensions are set to Unrestricted.\n \n       Assign,\n       --  Used for the target of an assignment, or an actual parameter with\n@@ -1985,14 +1984,22 @@ package body Sem_SPARK is\n \n                if not Is_Access_Constant (Etype (Formal)) then\n \n-                  --  Formal IN parameter, named/anonymous access to variable\n+                  --  Formal IN parameter, named/anonymous access-to-variable\n                   --  type.\n+                  --\n+                  --  In SPARK, IN access-to-variable is an observe operation\n+                  --  for a function, and a borrow operation for a procedure.\n \n-                  Current_Checking_Mode := Borrow;\n-                  Check_Node (Actual);\n+                  if Ekind (Scope (Formal)) = E_Function then\n+                     Current_Checking_Mode := Observe;\n+                     Check_Node (Actual);\n+                  else\n+                     Current_Checking_Mode := Borrow;\n+                     Check_Node (Actual);\n+                  end if;\n \n-               --  Formal IN parameter, access to constant type\n-               --  Formal IN parameter, access to named constant type\n+               --  Formal IN parameter, access-to-constant type\n+               --  Formal IN parameter, access-to-named-constant type\n \n                elsif not Is_Anonymous_Access_Type (Etype (Formal)) then\n                   Error_Msg_N (\"assignment not allowed, Ownership Aspect\"\n@@ -3396,7 +3403,7 @@ package body Sem_SPARK is\n             end if;\n \n             declare\n-               --  Set state to Borrowed to the path and any of its prefixes\n+               --  Set state to Moved to the path and any of its prefixes\n \n                Tree : constant Perm_Tree_Access :=\n                  Set_Perm_Prefixes (N, Moved);\n@@ -3410,7 +3417,7 @@ package body Sem_SPARK is\n                   return;\n                end if;\n \n-               --  Set state to Borrowed on any strict extension of the path\n+               --  Set state to Moved on any strict extension of the path\n \n                Set_Perm_Extensions (Tree, Moved);\n             end;\n@@ -4466,18 +4473,24 @@ package body Sem_SPARK is\n \n          when E_In_Parameter =>\n \n-            --  Handling global variables as in parameters here\n-            --  Remove the following condition once decided how globals\n-            --  should be considered.\n+            --  Handling global variables as IN parameters here.\n+            --  Remove the following condition once it's decided how globals\n+            --  should be considered. ???\n+            --\n+            --  In SPARK, IN access-to-variable is an observe operation for\n+            --  a function, and a borrow operation for a procedure.\n \n             if not Global_Var then\n                if (Is_Access_Type (Etype (Id))\n-                   and then Is_Access_Constant (Etype (Id))\n-                   and then Is_Anonymous_Access_Type (Etype (Id)))\n+                    and then Is_Access_Constant (Etype (Id))\n+                    and then Is_Anonymous_Access_Type (Etype (Id)))\n+                 or else\n+                   (Is_Access_Type (Etype (Id))\n+                     and then Ekind (Scope (Id)) = E_Function)\n                  or else\n                    (not Is_Access_Type (Etype (Id))\n-                    and then Is_Deep (Etype (Id))\n-                    and then not Is_Anonymous_Access_Type (Etype (Id)))\n+                     and then Is_Deep (Etype (Id))\n+                     and then not Is_Anonymous_Access_Type (Etype (Id)))\n                then\n                   Elem.all.Tree.Permission := Observed;\n                   Elem.all.Tree.Children_Permission := Observed;"}]}