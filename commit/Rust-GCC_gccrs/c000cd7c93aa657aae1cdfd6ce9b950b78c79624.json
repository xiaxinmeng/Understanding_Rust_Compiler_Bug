{"sha": "c000cd7c93aa657aae1cdfd6ce9b950b78c79624", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAwMGNkN2M5M2FhNjU3YWFlMWNkZmQ2Y2U5Yjk1MGI3OGM3OTYyNA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2015-11-27T10:05:36Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2015-11-27T10:05:36Z"}, "message": "Be more careful about barriers when speculating conditional stores.\n\n\t* gimple.h (nonbarrier_call_p): Declare.\n\t* gimple.c (nonbarrier_call_p): New function.\n\t* tree-ssa-phiopt.c (nontrapping_dom_walker::before_dom_children):\n\tAlso increment call phase for ASMs with vdef and potential barrier\n\tcalls.\n\nFrom-SVN: r231005", "tree": {"sha": "1f99eda41a82e61f545b497246278ba9cd804341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f99eda41a82e61f545b497246278ba9cd804341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c000cd7c93aa657aae1cdfd6ce9b950b78c79624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c000cd7c93aa657aae1cdfd6ce9b950b78c79624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c000cd7c93aa657aae1cdfd6ce9b950b78c79624", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/comments", "author": null, "committer": null, "parents": [{"sha": "4d7b2a8a3b12beac09c5d8f8bcbf43a81296e462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7b2a8a3b12beac09c5d8f8bcbf43a81296e462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d7b2a8a3b12beac09c5d8f8bcbf43a81296e462"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "e9fbabf667172df8dc5a5fce38d6177cdfef5e14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c000cd7c93aa657aae1cdfd6ce9b950b78c79624", "patch": "@@ -1,3 +1,11 @@\n+2015-11-27  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\t* gimple.h (nonbarrier_call_p): Declare.\n+\t* gimple.c (nonbarrier_call_p): New function.\n+\t* tree-ssa-phiopt.c (nontrapping_dom_walker::before_dom_children):\n+\tAlso increment call phase for ASMs with vdef and potential barrier\n+\tcalls.\n+\n 2015-11-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* ifcvt.c (insn_valid_noce_process_p): Reject insn if it satisfies"}, {"sha": "bf552a7ae9cd44e0daf828b97c3100e0cb13edbd", "filename": "gcc/gimple.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=c000cd7c93aa657aae1cdfd6ce9b950b78c79624", "patch": "@@ -2636,6 +2636,18 @@ nonfreeing_call_p (gimple *call)\n   return n->nonfreeing_fn;\n }\n \n+/* Return true when CALL is a call stmt that definitely need not\n+   be considered to be a memory barrier.  */\n+bool\n+nonbarrier_call_p (gimple *call)\n+{\n+  if (gimple_call_flags (call) & (ECF_PURE | ECF_CONST))\n+    return true;\n+  /* Should extend this to have a nonbarrier_fn flag, just as above in\n+     the nonfreeing case.  */\n+  return false;\n+}\n+\n /* Callback for walk_stmt_load_store_ops.\n  \n    Return TRUE if OP will dereference the tree stored in DATA, FALSE"}, {"sha": "0b04804ce4607828f25422a31e99a0bb9a4112ae", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=c000cd7c93aa657aae1cdfd6ce9b950b78c79624", "patch": "@@ -1507,6 +1507,7 @@ extern bool gimple_call_builtin_p (const gimple *, enum built_in_function);\n extern bool gimple_asm_clobbers_memory_p (const gasm *);\n extern void dump_decl_set (FILE *, bitmap);\n extern bool nonfreeing_call_p (gimple *);\n+extern bool nonbarrier_call_p (gimple *);\n extern bool infer_nonnull_range (gimple *, tree);\n extern bool infer_nonnull_range_by_dereference (gimple *, tree);\n extern bool infer_nonnull_range_by_attribute (gimple *, tree);"}, {"sha": "344cd2f27012b18282dbe49302aed1632513f508", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c000cd7c93aa657aae1cdfd6ce9b950b78c79624/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=c000cd7c93aa657aae1cdfd6ce9b950b78c79624", "patch": "@@ -1519,7 +1519,9 @@ nontrapping_dom_walker::before_dom_children (basic_block bb)\n     {\n       gimple *stmt = gsi_stmt (gsi);\n \n-      if (is_gimple_call (stmt) && !nonfreeing_call_p (stmt))\n+      if ((gimple_code (stmt) == GIMPLE_ASM && gimple_vdef (stmt))\n+\t  || (is_gimple_call (stmt)\n+\t      && (!nonfreeing_call_p (stmt) || !nonbarrier_call_p (stmt))))\n \tnt_call_phase++;\n       else if (gimple_assign_single_p (stmt) && !gimple_has_volatile_ops (stmt))\n \t{"}]}