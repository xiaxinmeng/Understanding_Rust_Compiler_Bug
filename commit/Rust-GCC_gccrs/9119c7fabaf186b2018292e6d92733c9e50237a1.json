{"sha": "9119c7fabaf186b2018292e6d92733c9e50237a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTExOWM3ZmFiYWYxODZiMjAxODI5MmU2ZDkyNzMzYzllNTAyMzdhMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-04-04T20:11:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-04-04T20:11:47Z"}, "message": "re PR c++/58207 (ICE in sort_constexpr_mem_initializers due to out of bounds vector access)\n\n/cp\n2014-04-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58207\n\t* semantics.c (sort_constexpr_mem_initializers): Robustify loop.\n\n/testsuite\n2014-04-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58207\n\t* g++.dg/cpp0x/constexpr-ice15.C: New.\n\nFrom-SVN: r209128", "tree": {"sha": "7717a02bc23e663b5c18a9a442b444c378d4e83f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7717a02bc23e663b5c18a9a442b444c378d4e83f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9119c7fabaf186b2018292e6d92733c9e50237a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9119c7fabaf186b2018292e6d92733c9e50237a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9119c7fabaf186b2018292e6d92733c9e50237a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9119c7fabaf186b2018292e6d92733c9e50237a1/comments", "author": null, "committer": null, "parents": [{"sha": "e005b7535962c191feb0a6ca75668b9437450e6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e005b7535962c191feb0a6ca75668b9437450e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e005b7535962c191feb0a6ca75668b9437450e6b"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "76f7aa9ea34c5cc5a2759e3c4989700ddb30ce02", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9119c7fabaf186b2018292e6d92733c9e50237a1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9119c7fabaf186b2018292e6d92733c9e50237a1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9119c7fabaf186b2018292e6d92733c9e50237a1", "patch": "@@ -1,3 +1,8 @@\n+2014-04-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58207\n+\t* semantics.c (sort_constexpr_mem_initializers): Robustify loop.\n+\n 2014-04-04  Patrick Palka  <patrick@parcs.ath.cx>\n \n \tPR c++/44613"}, {"sha": "3619e271df0b4267bce26ebaa3d826a11127c746", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9119c7fabaf186b2018292e6d92733c9e50237a1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9119c7fabaf186b2018292e6d92733c9e50237a1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9119c7fabaf186b2018292e6d92733c9e50237a1", "patch": "@@ -7720,8 +7720,8 @@ sort_constexpr_mem_initializers (tree type, vec<constructor_elt, va_gc> *v)\n {\n   tree pri = CLASSTYPE_PRIMARY_BINFO (type);\n   tree field_type;\n-  constructor_elt elt;\n-  int i;\n+  unsigned i;\n+  constructor_elt *ce;\n \n   if (pri)\n     field_type = BINFO_TYPE (pri);\n@@ -7732,14 +7732,14 @@ sort_constexpr_mem_initializers (tree type, vec<constructor_elt, va_gc> *v)\n \n   /* Find the element for the primary base or vptr and move it to the\n      beginning of the vec.  */\n-  vec<constructor_elt, va_gc> &vref = *v;\n-  for (i = 0; ; ++i)\n-    if (TREE_TYPE (vref[i].index) == field_type)\n+  for (i = 0; vec_safe_iterate (v, i, &ce); ++i)\n+    if (TREE_TYPE (ce->index) == field_type)\n       break;\n \n-  if (i > 0)\n+  if (i > 0 && i < vec_safe_length (v))\n     {\n-      elt = vref[i];\n+      vec<constructor_elt, va_gc> &vref = *v;\n+      constructor_elt elt = vref[i];\n       for (; i > 0; --i)\n \tvref[i] = vref[i-1];\n       vref[0] = elt;"}, {"sha": "0cd68ca3af171aa6991156350957df0e24120078", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9119c7fabaf186b2018292e6d92733c9e50237a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9119c7fabaf186b2018292e6d92733c9e50237a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9119c7fabaf186b2018292e6d92733c9e50237a1", "patch": "@@ -1,3 +1,8 @@\n+2014-04-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58207\n+\t* g++.dg/cpp0x/constexpr-ice15.C: New.\n+\n 2014-04-04  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/59626"}, {"sha": "576fd41508508dccba59a517476e6da968671ad4", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ice15.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9119c7fabaf186b2018292e6d92733c9e50237a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9119c7fabaf186b2018292e6d92733c9e50237a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice15.C?ref=9119c7fabaf186b2018292e6d92733c9e50237a1", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/58207\n+// { dg-do compile { target c++11 } }\n+\n+struct A\n+{\n+  virtual bool foo ();\n+};\n+\n+struct B : public A\n+{\n+  constexpr B () : A (&::n) {}  // { dg-error \"declared\" }\n+};"}]}