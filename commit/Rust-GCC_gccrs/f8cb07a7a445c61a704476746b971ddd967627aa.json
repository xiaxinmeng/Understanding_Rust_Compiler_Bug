{"sha": "f8cb07a7a445c61a704476746b971ddd967627aa", "node_id": "C_kwDOANBUbNoAKGY4Y2IwN2E3YTQ0NWM2MWE3MDQ0NzY3NDZiOTcxZGRkOTY3NjI3YWE", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-14T19:33:52Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-19T17:08:47Z"}, "message": "modula-2, testsuite: Make libs and interfaces consistent.\n\nIn some case the libraries list was being set before gm2_init_xxx was\ncalled.  In some cases it was omitted - this could lead to a difference\nbetween the link libs and the interfaces (the effect of this would be\ndependent on the order in which the .exps were run, which makes it also\ndepend on the -j and the system).\n\nTo avoid a mismatch between the module include paths and the added libs\nwe now make sure that they are both added in the gm_init_xxxx functions\n(if finer control over granularity is needed, then we should as a TODO\nadd a generic gm_init_xxx that takes a library list and ensures that the\nimports and libs are matched in the same order).\n\nAlso we cannot use a default variable in tcl if the source for that\nvariable could be absent, but something else follows, there is no way\nto put an empty placeholder in.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/testsuite/ChangeLog:\n\n\t* gm2/complex/run/pass/complex-run-pass.exp: Remove gm2_link_lib.\n\t* gm2/iso/run/pass/iso-run-pass.exp: Likewise.\n\t* gm2/link/externalscaffold/pass/link-externalscaffold-pass.exp:\n\t* gm2/pimlib/logitech/run/pass/pimlib-logitech-run-pass.exp: Likewise.\n\t* gm2/pimlib/run/pass/pimlib-run-pass.exp: Likewise.\n\t* gm2/projects/iso/run/pass/halma/projects-iso-run-pass-halma.exp:\n\tLikewise.\n\t* gm2/projects/iso/run/pass/hello/projects-iso-run-pass-hello.exp:\n\tLikewise.\n\t* gm2/projects/pim/run/pass/hello/projects-pim-run-pass-hello.exp:\n\tLikewise.\n\t* gm2/sets/run/pass/sets-run-pass.exp: Likewise.\n\t* gm2/switches/none/run/pass/gm2-none.exp: Likewise.\n\t* gm2/switches/pic/run/pass/switches-pic-run-pass.exp: Likewise.\n\t* gm2/projects/pim/run/pass/random/projects-pim-run-pass-random.exp:\n\tLikewise, and also ensure that the -g option is appended to avoid it\n\tbeing taken as a path.\n\t* lib/gm2.exp: Ensure for each gm2_init_xxxx function that the set of\n\tlibraries added matches the set of -I and -L options.", "tree": {"sha": "0ec734af0b49a69fb73d3b35a5bbd01cf9e77041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ec734af0b49a69fb73d3b35a5bbd01cf9e77041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8cb07a7a445c61a704476746b971ddd967627aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb07a7a445c61a704476746b971ddd967627aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8cb07a7a445c61a704476746b971ddd967627aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb07a7a445c61a704476746b971ddd967627aa/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5115508919325bfa78bb894acdb468c173637982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5115508919325bfa78bb894acdb468c173637982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5115508919325bfa78bb894acdb468c173637982"}], "stats": {"total": 63, "additions": 26, "deletions": 37}, "files": [{"sha": "399f30b89efa3342f7098d45b19d97e51e312dce", "filename": "gcc/testsuite/gm2/complex/run/pass/complex-run-pass.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Fcomplex-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Fcomplex-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Frun%2Fpass%2Fcomplex-run-pass.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -27,7 +27,6 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../gm2\n \n-gm2_link_lib \"m2iso m2pim\"\n gm2_init_iso \"${srcdir}/gm2/complex/run/pass\"\n \n "}, {"sha": "09d04ee910d6c7fa6a32b04006b7d4bbc4d8e2e7", "filename": "gcc/testsuite/gm2/iso/run/pass/iso-run-pass.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fiso%2Frun%2Fpass%2Fiso-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fiso%2Frun%2Fpass%2Fiso-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Frun%2Fpass%2Fiso-run-pass.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -24,7 +24,6 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_link_lib \"m2iso m2pim\"\n gm2_init_iso \"${srcdir}/gm2/iso/run/pass\" -fsoft-check-all\n gm2_link_obj fileio.o\n "}, {"sha": "32d4315aebddd1891ab3a07217b356e79599f2e9", "filename": "gcc/testsuite/gm2/link/externalscaffold/pass/link-externalscaffold-pass.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Flink%2Fexternalscaffold%2Fpass%2Flink-externalscaffold-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Flink%2Fexternalscaffold%2Fpass%2Flink-externalscaffold-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Flink%2Fexternalscaffold%2Fpass%2Flink-externalscaffold-pass.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -25,7 +25,6 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_link_lib \"m2pim\"\n gm2_init_pim \"${srcdir}/gm2/pim/pass\" -fscaffold-main -fno-scaffold-dynamic\n gm2_link_obj scaffold.o\n set output [target_compile $srcdir/$subdir/scaffold.c scaffold.o object \"-g\"]"}, {"sha": "cfe9ff84a0854b7ad99ee8d52d6a31a82fc7c84f", "filename": "gcc/testsuite/gm2/pimlib/logitech/run/pass/pimlib-logitech-run-pass.exp", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Flogitech%2Frun%2Fpass%2Fpimlib-logitech-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Flogitech%2Frun%2Fpass%2Fpimlib-logitech-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Flogitech%2Frun%2Fpass%2Fpimlib-logitech-run-pass.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -27,10 +27,8 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_link_lib \"m2log m2pim m2iso\"\n gm2_init_log\n \n-\n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $testcase] then {"}, {"sha": "cfe9ff84a0854b7ad99ee8d52d6a31a82fc7c84f", "filename": "gcc/testsuite/gm2/pimlib/run/pass/pimlib-run-pass.exp", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Frun%2Fpass%2Fpimlib-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Frun%2Fpass%2Fpimlib-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Frun%2Fpass%2Fpimlib-run-pass.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -27,10 +27,8 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_link_lib \"m2pim m2log m2iso\"\n gm2_init_log\n \n-\n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $testcase] then {"}, {"sha": "b943798e7099952a1de3853cb0472edad3a9d56d", "filename": "gcc/testsuite/gm2/projects/iso/run/pass/halma/projects-iso-run-pass-halma.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhalma%2Fprojects-iso-run-pass-halma.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhalma%2Fprojects-iso-run-pass-halma.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhalma%2Fprojects-iso-run-pass-halma.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -27,7 +27,6 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_link_lib \"m2iso m2pim\"\n gm2_init_iso\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {"}, {"sha": "b943798e7099952a1de3853cb0472edad3a9d56d", "filename": "gcc/testsuite/gm2/projects/iso/run/pass/hello/projects-iso-run-pass-hello.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhello%2Fprojects-iso-run-pass-hello.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhello%2Fprojects-iso-run-pass-hello.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhello%2Fprojects-iso-run-pass-hello.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -27,7 +27,6 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_link_lib \"m2iso m2pim\"\n gm2_init_iso\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {"}, {"sha": "0737b908a25505ecb0cc2defe2028d86ccaba4ab", "filename": "gcc/testsuite/gm2/projects/pim/run/pass/hello/projects-pim-run-pass-hello.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Fhello%2Fprojects-pim-run-pass-hello.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Fhello%2Fprojects-pim-run-pass-hello.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Fhello%2Fprojects-pim-run-pass-hello.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -27,7 +27,6 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_link_lib \"m2pim m2log m2iso\"\n gm2_init_pim\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {"}, {"sha": "012caa61c9649cf4ae394ccec1d0efbbfe6ddf72", "filename": "gcc/testsuite/gm2/projects/pim/run/pass/random/projects-pim-run-pass-random.exp", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Frandom%2Fprojects-pim-run-pass-random.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Frandom%2Fprojects-pim-run-pass-random.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Frandom%2Fprojects-pim-run-pass-random.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -25,27 +25,26 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-set gm2src ${srcdir}/../m2\n-\n-gm2_link_lib \"m2pim m2log m2iso\"\n-gm2_init_pim \"-g -I$srcdir/$subdir\"\n+gm2_init_pim \"$srcdir/$subdir\" -g\n gm2_link_obj \"WriteMap.o AdvMap.o BoxMap.o Chance.o Geometry.o MakeBoxes.o MapOptions.o Options.o RoomMap.o StoreCoords.o\"\n \n+# If we want these to be re-built for each torture option we need some different \n+#\u00a0logic.\n+gm2_target_compile $srcdir/$subdir/AdvMap.mod AdvMap.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/BoxMap.mod BoxMap.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/Chance.mod Chance.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/Geometry.mod Geometry.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/MakeBoxes.mod MakeBoxes.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/MapOptions.mod MapOptions.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/Options.mod Options.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/RoomMap.mod RoomMap.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/StoreCoords.mod StoreCoords.o object \"-g -I$srcdir/$subdir/\"\n+gm2_target_compile $srcdir/$subdir/WriteMap.mod WriteMap.o object \"-g -I$srcdir/$subdir/\"\n+\n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/Map.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $testcase] then {\n \tcontinue\n     }\n-\n-    gm2_target_compile $srcdir/$subdir/AdvMap.mod AdvMap.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/BoxMap.mod BoxMap.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/Chance.mod Chance.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/Geometry.mod Geometry.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/MakeBoxes.mod MakeBoxes.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/MapOptions.mod MapOptions.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/Options.mod Options.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/RoomMap.mod RoomMap.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/StoreCoords.mod StoreCoords.o object \"-g -I$srcdir/$subdir/\"\n-    gm2_target_compile $srcdir/$subdir/WriteMap.mod WriteMap.o object \"-g -I$srcdir/$subdir/\"\n     gm2-torture-execute $testcase \"\" \"pass\"\n }"}, {"sha": "a439526f428711f5f52c54cae62c521e5ef789a9", "filename": "gcc/testsuite/gm2/sets/run/pass/sets-run-pass.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fsets%2Frun%2Fpass%2Fsets-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fsets%2Frun%2Fpass%2Fsets-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fsets%2Frun%2Fpass%2Fsets-run-pass.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -27,7 +27,6 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_link_lib \"m2iso m2pim\"\n gm2_init_iso \"${srcdir}/gm2/sets/run/pass/\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {"}, {"sha": "cf77d5a784091430c69df5de559ed6dff612541b", "filename": "gcc/testsuite/gm2/switches/none/run/pass/gm2-none.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fnone%2Frun%2Fpass%2Fgm2-none.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fnone%2Frun%2Fpass%2Fgm2-none.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fnone%2Frun%2Fpass%2Fgm2-none.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -26,7 +26,6 @@ load_lib gm2-simple.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_link_lib \"m2pim m2iso\"\n gm2_init_pim\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {"}, {"sha": "67ee502b8d4aed30f1ee1a6277630fe95f355aaf", "filename": "gcc/testsuite/gm2/switches/pic/run/pass/switches-pic-run-pass.exp", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fpic%2Frun%2Fpass%2Fswitches-pic-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fpic%2Frun%2Fpass%2Fswitches-pic-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fpic%2Frun%2Fpass%2Fswitches-pic-run-pass.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -26,10 +26,8 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_link_lib \"m2pim m2iso\"\n gm2_init_pim \"${srcdir}/gm2/switches/pic/run/pass\" -fPIC\n \n-\n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $testcase] then {"}, {"sha": "41a2fa03beff88f153e482619eb438e664291f1a", "filename": "gcc/testsuite/lib/gm2.exp", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Flib%2Fgm2.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb07a7a445c61a704476746b971ddd967627aa/gcc%2Ftestsuite%2Flib%2Fgm2.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgm2.exp?ref=f8cb07a7a445c61a704476746b971ddd967627aa", "patch": "@@ -352,6 +352,7 @@ proc gm2_init_pimx { dialect {path \"\"} args } {\n \tappend theIpath \" -I\"\n \tappend theIpath ${path}\n     }\n+    gm2_link_lib \"m2pim m2iso\"\n     gm2_init {*}${theIpath} {*}${dialect} {*}${theLpath} {*}${args};\n }\n \n@@ -422,6 +423,7 @@ proc gm2_init_iso { {path \"\"} args } {\n \tappend theIpath ${path}\n     }\n \n+    gm2_link_lib \"m2iso m2pim m2cor\"\n     gm2_init {*}${theIpath} -fiso {*}${theLpath} {*}${args};\n }\n \n@@ -450,6 +452,7 @@ proc gm2_init_ulm { {path \"\"} args } {\n \tappend theIpath ${path}\n     }\n \n+    gm2_link_lib \"m2ulm m2pim\"\n     gm2_init {*}${theIpath} -fpim {*}${theLpath} {*}${args};\n }\n \n@@ -540,24 +543,26 @@ proc gm2_init_cor { {path \"\"} args } {\n proc gm2_init_minx { dialect {path \"\"} args } {\n     global srcdir;\n     global gccpath;\n-\n     set gm2src ${srcdir}/../m2;\n \n     send_log \"srcdir is $srcdir\\n\"\n     send_log \"gccpath is $gccpath\\n\"\n     send_log \"gm2src is $gm2src\\n\"\n \n-    set minIpath \"${gccpath}/libgm2/libm2min\";\n-    set minLpath \"${gccpath}/libgm2/libm2min/.libs\";\n+    set theIpath \" -I${gccpath}/libgm2/libm2min\"\n+    append theIpath \" -I${gm2src}/gm2-libs-min\"\n \n-    set theIpath \"-I${minIpath}\";\n-    set theLpath \"-L${minLpath}\";\n+    set theLpath \" -L${gccpath}/libgm2/libm2min/.libs\";\n \n     if { $path != \"\" } then {\n \tappend theIpath \" -I\"\n \tappend theIpath ${path}\n     }\n-    gm2_init {*}${theIpath} {*}${dialect} {*}${theLpath} {*}${args};\n+\n+    gm2_link_lib \"m2min\"\n+    append args \" -fno-exceptions \"\n+    append args \" -fno-libs=- \"\n+    gm2_init {*}${theIpath} {*}${dialect} {*}${theLpath} {*}${args}\n }\n \n #\n@@ -566,6 +571,5 @@ proc gm2_init_minx { dialect {path \"\"} args } {\n #\n \n proc gm2_init_min { {path \"\"} args } {\n-    append args \" -fno-exceptions\"\n-    gm2_init_minx -fpim {*}${path} {*}${args};\n+    gm2_init_minx -fpim {*}${path} {*}${args}\n }"}]}