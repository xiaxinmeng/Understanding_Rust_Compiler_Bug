{"sha": "948068e2ed9b6f34dc92cff5b6e846406f4b3a7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ4MDY4ZTJlZDliNmYzNGRjOTJjZmY1YjZlODQ2NDA2ZjRiM2E3ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-10-20T20:49:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-10-20T20:49:27Z"}, "message": "gcse.c (set_hash_table_size): Now unsigned.\n\n\t* gcse.c (set_hash_table_size): Now unsigned.\n\t* sdbout.c (template_name_p): Add \"const\" to avoid warnings.\n\t(sdbout_record_type_name, plain_type_1, sdbout_symbol): Likewise.\n\t(sdbout_one_type, sdbout_parms, sdbout_reg_parms): Likewise.\n\t(sdbout_end_epilogue): Remove variable NAME.\n\t* system.h (getopt): Add default definition.\n\t* config/alpha/alpha.c (print_operand): Don't continue processing\n\tafter issuing error.\n\t(summarize_insn): Avoid use of UL in constant.\n\nFrom-SVN: r36978", "tree": {"sha": "7230e83c0f3806d821fd6679365040b1e4b529d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7230e83c0f3806d821fd6679365040b1e4b529d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/948068e2ed9b6f34dc92cff5b6e846406f4b3a7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948068e2ed9b6f34dc92cff5b6e846406f4b3a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948068e2ed9b6f34dc92cff5b6e846406f4b3a7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948068e2ed9b6f34dc92cff5b6e846406f4b3a7e/comments", "author": null, "committer": null, "parents": [{"sha": "2e44948df527d0421fbe75ecb8fe00e7745f68d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e44948df527d0421fbe75ecb8fe00e7745f68d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e44948df527d0421fbe75ecb8fe00e7745f68d3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "a1d1b10b303fd4a127c37fc7a42a6770c19ec08e", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/948068e2ed9b6f34dc92cff5b6e846406f4b3a7e/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/948068e2ed9b6f34dc92cff5b6e846406f4b3a7e/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=948068e2ed9b6f34dc92cff5b6e846406f4b3a7e", "patch": "@@ -3794,7 +3794,7 @@ print_operand (file, x, code)\n         if (GET_RTX_CLASS (c) != '<')\n \t  output_operand_lossage (\"invalid %%C value\");\n \n-\tif (code == 'D')\n+\telse if (code == 'D')\n \t  c = reverse_condition (c);\n \telse if (code == 'c')\n \t  c = swap_condition (c);\n@@ -5220,7 +5220,7 @@ summarize_insn (x, sum, set)\n     case REG:\n       {\n \tint regno = REGNO (x);\n-\tunsigned long mask = 1UL << (regno % 32);\n+\tunsigned long mask = ((unsigned long) 1) << (regno % 32);\n \n \tif (regno == 31 || regno == 63)\n \t  break;"}]}