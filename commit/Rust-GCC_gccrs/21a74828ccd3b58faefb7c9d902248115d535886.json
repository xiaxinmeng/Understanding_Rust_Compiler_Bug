{"sha": "21a74828ccd3b58faefb7c9d902248115d535886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFhNzQ4MjhjY2QzYjU4ZmFlZmI3YzlkOTAyMjQ4MTE1ZDUzNTg4Ng==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2011-05-03T07:47:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-05-03T07:47:31Z"}, "message": "gcc/testsuite/\n\t* lib/target-supports.exp\n\t(check_effective_target_vect_extract_even_odd_wide): Delete.\n\t(check_effective_target_vect_strided_wide): Likewise.\n\t* gcc.dg/vect/O3-pr39675-2.c: Use the non-wide versions instead.\n\t* gcc.dg/vect/fast-math-pr35982.c: Likewise.\n\t* gcc.dg/vect/fast-math-vect-complex-3.c: Likewise.\n\t* gcc.dg/vect/pr37539.c: Likewise.\n\t* gcc.dg/vect/slp-11.c: Likewise.\n\t* gcc.dg/vect/slp-12a.c: Likewise.\n\t* gcc.dg/vect/slp-12b.c: Likewise.\n\t* gcc.dg/vect/slp-19.c: Likewise.\n\t* gcc.dg/vect/slp-23.c: Likewise.\n\t* gcc.dg/vect/vect-1.c: Likewise.\n\t* gcc.dg/vect/vect-98.c: Likewise.\n\t* gcc.dg/vect/vect-107.c: Likewise.\n\t* gcc.dg/vect/vect-strided-float.c: Likewise.\n\nFrom-SVN: r173293", "tree": {"sha": "eadbb9259a4d418dee46cbf7d217e707ee3bd95c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eadbb9259a4d418dee46cbf7d217e707ee3bd95c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21a74828ccd3b58faefb7c9d902248115d535886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a74828ccd3b58faefb7c9d902248115d535886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21a74828ccd3b58faefb7c9d902248115d535886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a74828ccd3b58faefb7c9d902248115d535886/comments", "author": null, "committer": null, "parents": [{"sha": "3188ed59db4eaaca5c9ef17eedc7974ddf7998e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3188ed59db4eaaca5c9ef17eedc7974ddf7998e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3188ed59db4eaaca5c9ef17eedc7974ddf7998e7"}], "stats": {"total": 123, "additions": 50, "deletions": 73}, "files": [{"sha": "5b88a43f246dc011c926586a0c3bbc7a7feb3b16", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -1,3 +1,22 @@\n+2011-05-03  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_vect_extract_even_odd_wide): Delete.\n+\t(check_effective_target_vect_strided_wide): Likewise.\n+\t* gcc.dg/vect/O3-pr39675-2.c: Use the non-wide versions instead.\n+\t* gcc.dg/vect/fast-math-pr35982.c: Likewise.\n+\t* gcc.dg/vect/fast-math-vect-complex-3.c: Likewise.\n+\t* gcc.dg/vect/pr37539.c: Likewise.\n+\t* gcc.dg/vect/slp-11.c: Likewise.\n+\t* gcc.dg/vect/slp-12a.c: Likewise.\n+\t* gcc.dg/vect/slp-12b.c: Likewise.\n+\t* gcc.dg/vect/slp-19.c: Likewise.\n+\t* gcc.dg/vect/slp-23.c: Likewise.\n+\t* gcc.dg/vect/vect-1.c: Likewise.\n+\t* gcc.dg/vect/vect-98.c: Likewise.\n+\t* gcc.dg/vect/vect-107.c: Likewise.\n+\t* gcc.dg/vect/vect-strided-float.c: Likewise.\n+\n 2011-05-02  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/init/new31.C: New."}, {"sha": "0537375898025119f7dd68d153caf0a34b498ce0", "filename": "gcc/testsuite/gcc.dg/vect/O3-pr39675-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr39675-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr39675-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-pr39675-2.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -26,7 +26,7 @@ foo ()\n     }\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_strided_wide } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_strided_wide } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { target vect_strided } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target vect_strided } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n   "}, {"sha": "d8394060badb2d3960118e2cb5204ce2a44ce8e2", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-pr35982.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr35982.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr35982.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-pr35982.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -20,7 +20,7 @@ float method2_int16 (struct mem *mem)\n   return avg;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_extract_even_odd_wide  } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { xfail vect_extract_even_odd_wide  } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_extract_even_odd  } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { xfail vect_extract_even_odd  } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "16da4fedb0e4da0a3984e1ca5e8d9fd973b4827f", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-vect-complex-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-complex-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-complex-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-complex-3.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -56,5 +56,5 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_interleave  && vect_extract_even_odd_wide } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_interleave  && vect_extract_even_odd } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e4d3cb87ec99f71c1368fab86a6fd0b0ddcd36d0", "filename": "gcc/testsuite/gcc.dg/vect/pr37539.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37539.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37539.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37539.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -40,7 +40,7 @@ int main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { target vect_strided_wide } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { target vect_strided } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n \n "}, {"sha": "9d0c9ea702edb08e86f4498cadbbd36d3a2b92b7", "filename": "gcc/testsuite/gcc.dg/vect/slp-11.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-11.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -105,9 +105,9 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\"  { target { { vect_uintfloat_cvt && vect_strided_wide } &&  vect_int_mult } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\"  { target { { { ! vect_uintfloat_cvt } && vect_strided_wide } &&  vect_int_mult } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\"  {target  { ! { vect_int_mult && vect_strided_wide } } } } }  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\"  { target { { vect_uintfloat_cvt && vect_strided } &&  vect_int_mult } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\"  { target { { { ! vect_uintfloat_cvt } && vect_strided } &&  vect_int_mult } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\"  {target  { ! { vect_int_mult && vect_strided } } } } }  */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0  \"vect\"  } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n   "}, {"sha": "68b0b0e44474cade73d3211569b7fe3a021b99a6", "filename": "gcc/testsuite/gcc.dg/vect/slp-12a.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12a.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -94,11 +94,11 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\"  {target { vect_strided_wide && vect_int_mult} } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  {target { {! {vect_strided_wide}} && vect_int_mult } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\"  {target { vect_strided && vect_int_mult} } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  {target { {! {vect_strided}} && vect_int_mult } } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\"  {target  { ! vect_int_mult } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"vect\" {target { vect_strided_wide && vect_int_mult } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" {target { {! {vect_strided_wide}} && vect_int_mult } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 2 \"vect\" {target { vect_strided && vect_int_mult } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" {target { {! {vect_strided}} && vect_int_mult } } } } */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\" {target  { ! vect_int_mult } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n   "}, {"sha": "248662612685a14b258830b78eb6832a045d353a", "filename": "gcc/testsuite/gcc.dg/vect/slp-12b.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-12b.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -43,9 +43,9 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  {target { vect_strided_wide && vect_int_mult } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\"  {target { { ! { vect_int_mult }} || { ! {vect_strided_wide}}} } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\"  {target { vect_strided_wide && vect_int_mult } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\"  {target { { ! { vect_int_mult }} || { ! {vect_strided_wide}}} } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  {target { vect_strided && vect_int_mult } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\"  {target { { ! { vect_int_mult }} || { ! {vect_strided}}} } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\"  {target { vect_strided && vect_int_mult } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 0 \"vect\"  {target { { ! { vect_int_mult }} || { ! {vect_strided}}} } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n   "}, {"sha": "af174e0e140f4e0b6e5906a8d53a5783b723a593", "filename": "gcc/testsuite/gcc.dg/vect/slp-19.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-19.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -146,9 +146,9 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { target  vect_strided_wide  } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target  { ! { vect_strided_wide } } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 3 \"vect\"  { target  vect_strided_wide  } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\"  { target { ! { vect_strided_wide } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { target  vect_strided  } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target  { ! { vect_strided } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 3 \"vect\"  { target  vect_strided  } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\"  { target { ! { vect_strided } } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n   "}, {"sha": "dfc6de04de0b33127292eebc88ef675f9fa4b583", "filename": "gcc/testsuite/gcc.dg/vect/slp-23.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-23.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -106,8 +106,8 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { target { vect_strided_wide } && {! { vect_no_align} } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { vect_strided_wide || vect_no_align} } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { target { vect_strided } && {! { vect_no_align} } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { vect_strided || vect_no_align} } } } } */\n /* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n   "}, {"sha": "cb12e596a72041c6630b975a4f1513ab6d0a36f9", "filename": "gcc/testsuite/gcc.dg/vect/vect-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -85,6 +85,6 @@ foo (int n)\n   fbar (a);\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 6 loops\" 1 \"vect\" { target vect_extract_even_odd_wide } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 5 loops\" 1 \"vect\" { xfail vect_extract_even_odd_wide } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 6 loops\" 1 \"vect\" { target vect_extract_even_odd } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 5 loops\" 1 \"vect\" { xfail vect_extract_even_odd } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e5d223f5dd40bd924e478c2f899c524270bbd5d0", "filename": "gcc/testsuite/gcc.dg/vect/vect-107.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-107.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-107.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-107.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -40,6 +40,6 @@ int main (void)\n   return main1 ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_extract_even_odd_wide } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { xfail vect_extract_even_odd_wide } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_extract_even_odd } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { xfail vect_extract_even_odd } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "0987ec885dc7b2354700fb5df8ea852c83c7a1f9", "filename": "gcc/testsuite/gcc.dg/vect/vect-98.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -38,6 +38,6 @@ int main (void)\n }\n \n /* Needs interleaving support.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_interleave && vect_extract_even_odd_wide } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" { xfail  { vect_interleave && vect_extract_even_odd_wide } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_interleave && vect_extract_even_odd } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" { xfail  { vect_interleave && vect_extract_even_odd } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "95372b55ce2106b47a94a043b30040d223863574", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-float.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-float.c?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -39,7 +39,7 @@ int main (void)\n }\n \n /* Needs interleaving support.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_interleave && vect_extract_even_odd_wide } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { xfail { vect_interleave && vect_extract_even_odd_wide } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_interleave && vect_extract_even_odd } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { xfail { vect_interleave && vect_extract_even_odd } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n   "}, {"sha": "543f086035d39ce7ffa2fc5241b784d6209f8261", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a74828ccd3b58faefb7c9d902248115d535886/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=21a74828ccd3b58faefb7c9d902248115d535886", "patch": "@@ -3141,29 +3141,6 @@ proc check_effective_target_vect_extract_even_odd { } {\n     return $et_vect_extract_even_odd_saved\n }\n \n-# Return 1 if the target supports vector even/odd elements extraction of\n-# vectors with SImode elements or larger, 0 otherwise.\n-\n-proc check_effective_target_vect_extract_even_odd_wide { } {\n-    global et_vect_extract_even_odd_wide_saved\n-    \n-    if [info exists et_vect_extract_even_odd_wide_saved] {\n-        verbose \"check_effective_target_vect_extract_even_odd_wide: using cached result\" 2\n-    } else {\n-        set et_vect_extract_even_odd_wide_saved 0 \n-        if { [istarget powerpc*-*-*] \n-             || [istarget i?86-*-*]\n-             || [istarget x86_64-*-*]\n-             || [istarget ia64-*-*]\n-             || [istarget spu-*-*] } {\n-           set et_vect_extract_even_odd_wide_saved 1\n-        }\n-    }\n-\n-    verbose \"check_effective_target_vect_extract_even_wide_odd: returning $et_vect_extract_even_odd_wide_saved\" 2\n-    return $et_vect_extract_even_odd_wide_saved\n-}\n-\n # Return 1 if the target supports vector interleaving, 0 otherwise.\n \n proc check_effective_target_vect_interleave { } {\n@@ -3204,25 +3181,6 @@ proc check_effective_target_vect_strided { } {\n     return $et_vect_strided_saved\n }\n \n-# Return 1 if the target supports vector interleaving and extract even/odd\n-# for wide element types, 0 otherwise.\n-proc check_effective_target_vect_strided_wide { } {\n-    global et_vect_strided_wide_saved\n-\n-    if [info exists et_vect_strided_wide_saved] {\n-        verbose \"check_effective_target_vect_strided_wide: using cached result\" 2\n-    } else {\n-        set et_vect_strided_wide_saved 0\n-        if { [check_effective_target_vect_interleave]\n-             && [check_effective_target_vect_extract_even_odd_wide] } {\n-           set et_vect_strided_wide_saved 1\n-        }\n-    }\n-\n-    verbose \"check_effective_target_vect_strided_wide: returning $et_vect_strided_wide_saved\" 2\n-    return $et_vect_strided_wide_saved\n-}\n-\n # Return 1 if the target supports section-anchors\n \n proc check_effective_target_section_anchors { } {"}]}