{"sha": "9365047aba7ff624508b4475b6fc3e523d419057", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM2NTA0N2FiYTdmZjYyNDUwOGI0NDc1YjZmYzNlNTIzZDQxOTA1Nw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-07-20T23:39:44Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-07-20T23:39:44Z"}, "message": "sources.am, [...]: Rebuilt.\n\n\t* sources.am, Makefile.in: Rebuilt.\n\t* Makefile.am (all_xlib_lo_files): Removed.\n\t(all_libgcj_lo_files): Likewise.\n\t(lib_gnu_awt_xlib_la_LIBADD): List correct .lo files.\n\t(xlib_java_source_files): Removed.\n\t(xlib_nat_headers): Updated.\n\t* configure: Rebuilt.\n\t* configure.ac: Create standard.omit.\n\t* standard.omit.in: New file.\n\t* standard.omit: Removed.\n\t* scripts/makemake.tcl (gnu/gcj/xlib, gnu/awt/xlib): Now\n\t'package'.\n\t(emit_package_rule): Special case xlib peers.\n\t(emit_source_var): Likewise.\n\tRead standard.omit.in.\n\t* gnu/awt/xlib/XToolkit.java (createEmbeddedWindow): New method.\n\nFrom-SVN: r102211", "tree": {"sha": "b987d4bc7e61c91461ed05fdf7d4ea5fb0be5142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b987d4bc7e61c91461ed05fdf7d4ea5fb0be5142"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9365047aba7ff624508b4475b6fc3e523d419057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9365047aba7ff624508b4475b6fc3e523d419057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9365047aba7ff624508b4475b6fc3e523d419057", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9365047aba7ff624508b4475b6fc3e523d419057/comments", "author": null, "committer": null, "parents": [{"sha": "5d0317fccc05045d73439d30afb00cb710fa9a82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d0317fccc05045d73439d30afb00cb710fa9a82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d0317fccc05045d73439d30afb00cb710fa9a82"}], "stats": {"total": 317, "additions": 200, "deletions": 117}, "files": [{"sha": "76f566c4c34de44df9417db29fe0c9dd05ff6526", "filename": "libjava/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -1,3 +1,22 @@\n+2005-07-20  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* Makefile.am (all_xlib_lo_files): Removed.\n+\t(all_libgcj_lo_files): Likewise.\n+\t(lib_gnu_awt_xlib_la_LIBADD): List correct .lo files.\n+\t(xlib_java_source_files): Removed.\n+\t(xlib_nat_headers): Updated.\n+\t* configure: Rebuilt.\n+\t* configure.ac: Create standard.omit.\n+\t* standard.omit.in: New file.\n+\t* standard.omit: Removed.\n+\t* scripts/makemake.tcl (gnu/gcj/xlib, gnu/awt/xlib): Now\n+\t'package'.\n+\t(emit_package_rule): Special case xlib peers.\n+\t(emit_source_var): Likewise.\n+\tRead standard.omit.in.\n+\t* gnu/awt/xlib/XToolkit.java (createEmbeddedWindow): New method.\n+\n 2005-07-18  Tom Tromey  <tromey@redhat.com>\n \n \t* HACKING: Updated."}, {"sha": "4bafc5dbe402cafe21d55867f76a01ee1a1660e4", "filename": "libjava/Makefile.am", "status": "modified", "additions": 4, "deletions": 45, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -154,12 +154,6 @@ BOOTCLASSPATH = $(here)/classpath/lib\n \n ## ################################################################\n \n-# In the future these may be defined manually, if we decide to split libgcj.so\n-# into multiple shared libraries.  For now, everything but xlib goes into\n-# all_libgcj_lo_files\n-all_xlib_lo_files = gnu/gcj/xlib.lo gnu/awt/xlib.lo\n-all_libgcj_lo_files = $(filter-out $(all_xlib_lo_files), $(all_java_lo_files))\n-\n all_property_files = $(property_files) \\\n     java/util/logging/logging.properties\n \n@@ -276,8 +270,9 @@ libgcjawt_la_LDFLAGS = \\\n libgcjawt_la_LINK = $(LIBLINK)\n \n lib_gnu_awt_xlib_la_SOURCES = $(xlib_nat_source_files)\n-lib_gnu_awt_xlib_la_LIBADD = $(all_xlib_lo_files)\n-lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar libgcj.la libgcj.spec \\\n+lib_gnu_awt_xlib_la_LIBADD = gnu/awt/xlib.lo gnu/gcj/xlib.lo\n+lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n+\tlibgcj.la libgcj.spec \\\n \t$(lib_gnu_awt_xlib_la_LIBADD)\n ## We require libstdc++-v3 to be in the same build tree.\n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n@@ -389,7 +384,7 @@ nat_headers = $(ordinary_header_files) $(inner_nat_headers) \\\n \tgnu/gcj/tools/gcj_dbtool/Main.h\n nat_headers_install = $(ordinary_header_files)\n \n-xlib_nat_headers = $(patsubst %.java,%.h,$(xlib_java_source_files))\n+xlib_nat_headers = $(gnu_awt_xlib_header_files) $(gnu_gcj_xlib_header_files)\n \n java/lang/ClassLoader.h: classpath/lib/java/lang/ClassLoader.class\n \t$(GCJH) -classpath '' -bootclasspath classpath/lib \\\n@@ -818,42 +813,6 @@ java/util/logging/natLogger.cc \\\n java/util/zip/natDeflater.cc \\\n java/util/zip/natInflater.cc\n \n-xlib_java_source_files = \\\n-gnu/gcj/xlib/Clip.java \\\n-gnu/gcj/xlib/Colormap.java \\\n-gnu/gcj/xlib/Display.java \\\n-gnu/gcj/xlib/Drawable.java \\\n-gnu/gcj/xlib/Font.java \\\n-gnu/gcj/xlib/GC.java \\\n-gnu/gcj/xlib/Pixmap.java \\\n-gnu/gcj/xlib/Screen.java \\\n-gnu/gcj/xlib/Visual.java \\\n-gnu/gcj/xlib/WMSizeHints.java \\\n-gnu/gcj/xlib/Window.java \\\n-gnu/gcj/xlib/WindowAttributes.java \\\n-gnu/gcj/xlib/XAnyEvent.java \\\n-gnu/gcj/xlib/XButtonEvent.java \\\n-gnu/gcj/xlib/XColor.java \\\n-gnu/gcj/xlib/XConfigureEvent.java \\\n-gnu/gcj/xlib/XConnectException.java \\\n-gnu/gcj/xlib/XEvent.java \\\n-gnu/gcj/xlib/XException.java \\\n-gnu/gcj/xlib/XExposeEvent.java \\\n-gnu/gcj/xlib/XID.java \\\n-gnu/gcj/xlib/XImage.java \\\n-gnu/gcj/xlib/XUnmapEvent.java \\\n-gnu/awt/xlib/XCanvasPeer.java \\\n-gnu/awt/xlib/XEventLoop.java \\\n-gnu/awt/xlib/XEventQueue.java \\\n-gnu/awt/xlib/XFontMetrics.java \\\n-gnu/awt/xlib/XFramePeer.java \\\n-gnu/awt/xlib/XGraphics.java \\\n-gnu/awt/xlib/XGraphicsConfiguration.java \\\n-gnu/awt/xlib/XOffScreenImage.java \\\n-gnu/awt/xlib/XPanelPeer.java \\\n-gnu/awt/xlib/XFontPeer.java \\\n-gnu/awt/xlib/XToolkit.java\n-\n xlib_nat_source_files = \\\n gnu/gcj/xlib/natClip.cc \\\n gnu/gcj/xlib/natColormap.cc \\"}, {"sha": "ef20d79e037995328a086160e7c574c354996e4f", "filename": "libjava/Makefile.in", "status": "modified", "additions": 68, "deletions": 50, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -111,7 +111,6 @@ am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(bindir)\" \\\n \t\"$(DESTDIR)$(toolexecmainlibdir)\"\n toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n-am__DEPENDENCIES_1 = gnu/gcj/xlib.lo gnu/awt/xlib.lo\n am__dirstamp = $(am__leading_dot)dirstamp\n am__objects_1 = gnu/gcj/xlib/lib_gnu_awt_xlib_la-natClip.lo \\\n \tgnu/gcj/xlib/lib_gnu_awt_xlib_la-natColormap.lo \\\n@@ -136,13 +135,13 @@ am__objects_1 = gnu/gcj/xlib/lib_gnu_awt_xlib_la-natClip.lo \\\n am_lib_gnu_awt_xlib_la_OBJECTS = $(am__objects_1)\n lib_gnu_awt_xlib_la_OBJECTS = $(am_lib_gnu_awt_xlib_la_OBJECTS)\n @XLIB_AWT_TRUE@am_lib_gnu_awt_xlib_la_rpath = -rpath $(toolexeclibdir)\n-am__DEPENDENCIES_2 =\n+am__DEPENDENCIES_1 =\n am_lib_gnu_java_awt_peer_gtk_la_OBJECTS =\n lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n \t$(am_lib_gnu_java_awt_peer_gtk_la_OBJECTS)\n @GTK_AWT_TRUE@am_lib_gnu_java_awt_peer_gtk_la_rpath = -rpath \\\n @GTK_AWT_TRUE@\t$(toolexeclibdir)\n-am__DEPENDENCIES_3 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n+am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/classpath/debug.lo gnu/gcj.lo gnu/gcj/convert.lo \\\n \tgnu/gcj/io.lo gnu/gcj/runtime.lo gnu/gcj/util.lo \\\n \tgnu/java/awt.lo gnu/java/awt/color.lo gnu/java/awt/image.lo \\\n@@ -199,9 +198,9 @@ am__DEPENDENCIES_3 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/text/rtf.lo javax/swing/tree.lo \\\n \tjavax/swing/undo.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo\n-am__DEPENDENCIES_4 = gnu-java-beans.lo gnu-xml.lo javax-imageio.lo \\\n+am__DEPENDENCIES_3 = gnu-java-beans.lo gnu-xml.lo javax-imageio.lo \\\n \tjavax-xml.lo org-w3c.lo org-xml.lo\n-am__DEPENDENCIES_5 = $(patsubst \\\n+am__DEPENDENCIES_4 = $(patsubst \\\n \tclasspath/resource/%,%,$(property_files:.properties=.properties.lo))\n am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tstacktrace.cc link.cc defineclass.cc interpret.cc verify.cc \\\n@@ -685,12 +684,6 @@ AM_CPPFLAGS = -I$(top_srcdir) \\\n \t$(GCC_UNWIND_INCLUDE) $(ZINCS) $(LIBFFIINCS)\n \n BOOTCLASSPATH = $(here)/classpath/lib\n-\n-# In the future these may be defined manually, if we decide to split libgcj.so\n-# into multiple shared libraries.  For now, everything but xlib goes into\n-# all_libgcj_lo_files\n-all_xlib_lo_files = gnu/gcj/xlib.lo gnu/awt/xlib.lo\n-all_libgcj_lo_files = $(filter-out $(all_xlib_lo_files), $(all_java_lo_files))\n all_property_files = $(property_files) \\\n     java/util/logging/logging.properties\n \n@@ -752,8 +745,9 @@ libgcjawt_la_LDFLAGS = \\\n \n libgcjawt_la_LINK = $(LIBLINK)\n lib_gnu_awt_xlib_la_SOURCES = $(xlib_nat_source_files)\n-lib_gnu_awt_xlib_la_LIBADD = $(all_xlib_lo_files)\n-lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar libgcj.la libgcj.spec \\\n+lib_gnu_awt_xlib_la_LIBADD = gnu/awt/xlib.lo gnu/gcj/xlib.lo\n+lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n+\tlibgcj.la libgcj.spec \\\n \t$(lib_gnu_awt_xlib_la_LIBADD)\n \n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n@@ -794,6 +788,20 @@ gnu/awt/j2d/IntegerGraphicsState.java \\\n gnu/awt/j2d/MappedRaster.java\n \n gnu_awt_j2d_header_files = $(patsubst %.java,%.h,$(gnu_awt_j2d_source_files))\n+gnu_awt_xlib_source_files = \\\n+gnu/awt/xlib/XCanvasPeer.java \\\n+gnu/awt/xlib/XEventLoop.java \\\n+gnu/awt/xlib/XEventQueue.java \\\n+gnu/awt/xlib/XFontMetrics.java \\\n+gnu/awt/xlib/XFontPeer.java \\\n+gnu/awt/xlib/XFramePeer.java \\\n+gnu/awt/xlib/XGraphics.java \\\n+gnu/awt/xlib/XGraphicsConfiguration.java \\\n+gnu/awt/xlib/XOffScreenImage.java \\\n+gnu/awt/xlib/XPanelPeer.java \\\n+gnu/awt/xlib/XToolkit.java\n+\n+gnu_awt_xlib_header_files = $(patsubst %.java,%.h,$(gnu_awt_xlib_source_files))\n gnu_classpath_source_files = \\\n classpath/gnu/classpath/Configuration.java \\\n classpath/gnu/classpath/RawData.java \\\n@@ -865,6 +873,32 @@ gnu_gcj_util_source_files = \\\n gnu/gcj/util/Debug.java\n \n gnu_gcj_util_header_files = $(patsubst %.java,%.h,$(gnu_gcj_util_source_files))\n+gnu_gcj_xlib_source_files = \\\n+gnu/gcj/xlib/Clip.java \\\n+gnu/gcj/xlib/Colormap.java \\\n+gnu/gcj/xlib/Display.java \\\n+gnu/gcj/xlib/Drawable.java \\\n+gnu/gcj/xlib/Font.java \\\n+gnu/gcj/xlib/GC.java \\\n+gnu/gcj/xlib/Pixmap.java \\\n+gnu/gcj/xlib/Screen.java \\\n+gnu/gcj/xlib/Visual.java \\\n+gnu/gcj/xlib/WMSizeHints.java \\\n+gnu/gcj/xlib/Window.java \\\n+gnu/gcj/xlib/WindowAttributes.java \\\n+gnu/gcj/xlib/XAnyEvent.java \\\n+gnu/gcj/xlib/XButtonEvent.java \\\n+gnu/gcj/xlib/XColor.java \\\n+gnu/gcj/xlib/XConfigureEvent.java \\\n+gnu/gcj/xlib/XConnectException.java \\\n+gnu/gcj/xlib/XEvent.java \\\n+gnu/gcj/xlib/XException.java \\\n+gnu/gcj/xlib/XExposeEvent.java \\\n+gnu/gcj/xlib/XID.java \\\n+gnu/gcj/xlib/XImage.java \\\n+gnu/gcj/xlib/XUnmapEvent.java\n+\n+gnu_gcj_xlib_header_files = $(patsubst %.java,%.h,$(gnu_gcj_xlib_source_files))\n gnu_java_awt_source_files = \\\n classpath/gnu/java/awt/AWTUtilities.java \\\n classpath/gnu/java/awt/BitMaskExtent.java \\\n@@ -4592,7 +4626,7 @@ nat_headers = $(ordinary_header_files) $(inner_nat_headers) \\\n \tgnu/gcj/tools/gcj_dbtool/Main.h\n \n nat_headers_install = $(ordinary_header_files)\n-xlib_nat_headers = $(patsubst %.java,%.h,$(xlib_java_source_files))\n+xlib_nat_headers = $(gnu_awt_xlib_header_files) $(gnu_gcj_xlib_header_files)\n extra_headers = java/lang/Object.h java/lang/Class.h\n NM = nm\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@gen_from_JIS_SOURCES = \\\n@@ -4702,42 +4736,6 @@ java/util/logging/natLogger.cc \\\n java/util/zip/natDeflater.cc \\\n java/util/zip/natInflater.cc\n \n-xlib_java_source_files = \\\n-gnu/gcj/xlib/Clip.java \\\n-gnu/gcj/xlib/Colormap.java \\\n-gnu/gcj/xlib/Display.java \\\n-gnu/gcj/xlib/Drawable.java \\\n-gnu/gcj/xlib/Font.java \\\n-gnu/gcj/xlib/GC.java \\\n-gnu/gcj/xlib/Pixmap.java \\\n-gnu/gcj/xlib/Screen.java \\\n-gnu/gcj/xlib/Visual.java \\\n-gnu/gcj/xlib/WMSizeHints.java \\\n-gnu/gcj/xlib/Window.java \\\n-gnu/gcj/xlib/WindowAttributes.java \\\n-gnu/gcj/xlib/XAnyEvent.java \\\n-gnu/gcj/xlib/XButtonEvent.java \\\n-gnu/gcj/xlib/XColor.java \\\n-gnu/gcj/xlib/XConfigureEvent.java \\\n-gnu/gcj/xlib/XConnectException.java \\\n-gnu/gcj/xlib/XEvent.java \\\n-gnu/gcj/xlib/XException.java \\\n-gnu/gcj/xlib/XExposeEvent.java \\\n-gnu/gcj/xlib/XID.java \\\n-gnu/gcj/xlib/XImage.java \\\n-gnu/gcj/xlib/XUnmapEvent.java \\\n-gnu/awt/xlib/XCanvasPeer.java \\\n-gnu/awt/xlib/XEventLoop.java \\\n-gnu/awt/xlib/XEventQueue.java \\\n-gnu/awt/xlib/XFontMetrics.java \\\n-gnu/awt/xlib/XFramePeer.java \\\n-gnu/awt/xlib/XGraphics.java \\\n-gnu/awt/xlib/XGraphicsConfiguration.java \\\n-gnu/awt/xlib/XOffScreenImage.java \\\n-gnu/awt/xlib/XPanelPeer.java \\\n-gnu/awt/xlib/XFontPeer.java \\\n-gnu/awt/xlib/XToolkit.java\n-\n xlib_nat_source_files = \\\n gnu/gcj/xlib/natClip.cc \\\n gnu/gcj/xlib/natColormap.cc \\\n@@ -6415,6 +6413,16 @@ gnu/awt/j2d.list: $(gnu_awt_j2d_source_files)\n \n -include gnu/awt/j2d.deps\n \n+gnu/awt/xlib.list: $(gnu_awt_xlib_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_awt_xlib_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/awt/xlib.list\n+\n+-include gnu/awt/xlib.deps\n+\n gnu/classpath.list: $(gnu_classpath_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_classpath_source_files); do \\\n@@ -6485,6 +6493,16 @@ gnu/gcj/util.list: $(gnu_gcj_util_source_files)\n \n -include gnu/gcj/util.deps\n \n+gnu/gcj/xlib.list: $(gnu_gcj_xlib_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_gcj_xlib_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/gcj/xlib.list\n+\n+-include gnu/gcj/xlib.deps\n+\n gnu/java/awt.list: $(gnu_java_awt_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(gnu_java_awt_source_files); do \\"}, {"sha": "047dcff4489d76f3b55940f4313525decb41c133", "filename": "libjava/configure", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -4052,12 +4052,10 @@ for peer in $peerlibs ; do\n         echo \"*** xlib peers requested but no X library available\" 1>&2\n         exit 1\n       else\n-        # This code has bit-rotted a bit.\n-\techo \"*** xlib peers can't currently be compiled -- disabling\" 1>&2\n-#        use_xlib_awt=\"yes\"\n-#\tif test -z \"$TOOLKIT\"; then\n-#\t   TOOLKIT=gnu.awt.xlib.XToolkit\n-#\tfi\n+        use_xlib_awt=\"yes\"\n+\tif test -z \"$TOOLKIT\"; then\n+\t   TOOLKIT=gnu.awt.xlib.XToolkit\n+\tfi\n       fi\n       ;;\n     gtk)\n@@ -4103,6 +4101,15 @@ else\n fi\n \n \n+# Create standard.omit based on decisions we just made.\n+cp $srcdir/standard.omit.in standard.omit\n+if test \"$use_xlib_awt\" != yes; then\n+   echo gnu/awt/xlib >> standard.omit\n+   echo gnu/gcj/xlib >> standard.omit\n+fi\n+if test \"$use_gtk_awt\" != yes; then\n+   echo gnu/java/awt/peer/gtk >> standard.omit\n+fi\n \n if test -z \"${with_multisubdir}\"; then\n    builddotdot=.\n@@ -5011,7 +5018,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5014 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5021 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -6014,7 +6021,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then\n   :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 6017 \"configure\"\n+#line 6024 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()"}, {"sha": "2f9f50840a035fa3be3192a1739e3606e14ae5b8", "filename": "libjava/configure.ac", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -175,12 +175,10 @@ for peer in $peerlibs ; do\n         echo \"*** xlib peers requested but no X library available\" 1>&2\n         exit 1\n       else\n-        # This code has bit-rotted a bit.\n-\techo \"*** xlib peers can't currently be compiled -- disabling\" 1>&2\n-#        use_xlib_awt=\"yes\"\n-#\tif test -z \"$TOOLKIT\"; then\n-#\t   TOOLKIT=gnu.awt.xlib.XToolkit\n-#\tfi\n+        use_xlib_awt=\"yes\"\n+\tif test -z \"$TOOLKIT\"; then\n+\t   TOOLKIT=gnu.awt.xlib.XToolkit\n+\tfi\n       fi\n       ;;\n     gtk)\n@@ -208,6 +206,15 @@ done\n AM_CONDITIONAL(XLIB_AWT, test \"$use_xlib_awt\" = yes)\n AM_CONDITIONAL(GTK_AWT, test \"$use_gtk_awt\" = yes)\n \n+# Create standard.omit based on decisions we just made.\n+cp $srcdir/standard.omit.in standard.omit\n+if test \"$use_xlib_awt\" != yes; then\n+   echo gnu/awt/xlib >> standard.omit\n+   echo gnu/gcj/xlib >> standard.omit\n+fi\n+if test \"$use_gtk_awt\" != yes; then\n+   echo gnu/java/awt/peer/gtk >> standard.omit\n+fi\n \n if test -z \"${with_multisubdir}\"; then\n    builddotdot=."}, {"sha": "27e273aa778737d974160e6ffd13026bcb020be0", "filename": "libjava/gnu/awt/xlib/XToolkit.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXToolkit.java?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000, 2002, 2003  Free Software Foundation\n+/* Copyright (C) 2000, 2002, 2003, 2005  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -26,8 +26,10 @@\n import gnu.gcj.xlib.Screen;\n import gnu.gcj.xlib.Visual;\n import gnu.java.awt.ClasspathToolkit;\n+import gnu.java.awt.EmbeddedWindow;\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n+import gnu.java.awt.peer.EmbeddedWindowPeer;\n \n public class XToolkit extends ClasspathToolkit\n {\n@@ -444,6 +446,11 @@ public RobotPeer createRobot (GraphicsDevice screen) throws AWTException\n     throw new java.lang.UnsupportedOperationException ();\n   }\n \n+  public EmbeddedWindowPeer createEmbeddedWindow (EmbeddedWindow w)\n+  {\n+    throw new java.lang.UnsupportedOperationException ();\n+  }\n+\n   public boolean nativeQueueEmpty() \n   {\n     // Tell EventQueue the native queue is empty, because XEventLoop"}, {"sha": "e12690a8e714794ef24503904e1eae0a08a1a2c0", "filename": "libjava/scripts/makemake.tcl", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fscripts%2Fmakemake.tcl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fscripts%2Fmakemake.tcl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fscripts%2Fmakemake.tcl?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -56,8 +56,8 @@ set package_map(java/lang/Object.java) ignore\n \n # More special cases.  These end up in their own library.\n # Note that if we BC-compile AWT we must update these as well.\n-set package_map(gnu/gcj/xlib) ignore\n-set package_map(gnu/awt/xlib) ignore\n+set package_map(gnu/gcj/xlib) package\n+set package_map(gnu/awt/xlib) package\n \n # Some BC ABI packages have classes which must not be compiled BC.\n # This maps such packages to a grep expression for excluding such\n@@ -253,7 +253,9 @@ proc emit_package_rule {package} {\n   puts \"\"\n   puts \"\"\n \n-  lappend package_files $lname\n+  if {$pkgname != \"gnu/gcj/xlib\" && $pkgname != \"gnu/awt/xlib\"} {\n+    lappend package_files $lname\n+  }\n }\n \n # Emit a source file variable for a package, and corresponding header\n@@ -301,8 +303,10 @@ proc emit_source_var {package} {\n     }\n \n     puts \"${uname}_header_files = $result\"\n-    lappend header_vars \"${uname}_header_files\"\n     puts \"\"\n+    if {$pkgname != \"gnu/gcj/xlib\" && $pkgname != \"gnu/awt/xlib\"} {\n+      lappend header_vars \"${uname}_header_files\"\n+    }\n   }\n }\n \n@@ -318,7 +322,7 @@ proc pp_var {name valueList {pre \"\"} {post \"\"}} {\n }\n \n # Read the proper .omit files.\n-read_omit_file standard.omit\n+read_omit_file standard.omit.in\n read_omit_file classpath/lib/standard.omit\n \n # Scan classpath first."}, {"sha": "6858f6c968c391189b4a5fb4728fc462286407ed", "filename": "libjava/sources.am", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fsources.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fsources.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsources.am?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -37,6 +37,32 @@ gnu/awt/j2d.list: $(gnu_awt_j2d_source_files)\n -include gnu/awt/j2d.deps\n \n \n+gnu_awt_xlib_source_files = \\\n+gnu/awt/xlib/XCanvasPeer.java \\\n+gnu/awt/xlib/XEventLoop.java \\\n+gnu/awt/xlib/XEventQueue.java \\\n+gnu/awt/xlib/XFontMetrics.java \\\n+gnu/awt/xlib/XFontPeer.java \\\n+gnu/awt/xlib/XFramePeer.java \\\n+gnu/awt/xlib/XGraphics.java \\\n+gnu/awt/xlib/XGraphicsConfiguration.java \\\n+gnu/awt/xlib/XOffScreenImage.java \\\n+gnu/awt/xlib/XPanelPeer.java \\\n+gnu/awt/xlib/XToolkit.java\n+\n+gnu_awt_xlib_header_files = $(patsubst %.java,%.h,$(gnu_awt_xlib_source_files))\n+\n+gnu/awt/xlib.list: $(gnu_awt_xlib_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_awt_xlib_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/awt/xlib.list\n+\n+-include gnu/awt/xlib.deps\n+\n+\n gnu_classpath_source_files = \\\n classpath/gnu/classpath/Configuration.java \\\n classpath/gnu/classpath/RawData.java \\\n@@ -192,6 +218,44 @@ gnu/gcj/util.list: $(gnu_gcj_util_source_files)\n -include gnu/gcj/util.deps\n \n \n+gnu_gcj_xlib_source_files = \\\n+gnu/gcj/xlib/Clip.java \\\n+gnu/gcj/xlib/Colormap.java \\\n+gnu/gcj/xlib/Display.java \\\n+gnu/gcj/xlib/Drawable.java \\\n+gnu/gcj/xlib/Font.java \\\n+gnu/gcj/xlib/GC.java \\\n+gnu/gcj/xlib/Pixmap.java \\\n+gnu/gcj/xlib/Screen.java \\\n+gnu/gcj/xlib/Visual.java \\\n+gnu/gcj/xlib/WMSizeHints.java \\\n+gnu/gcj/xlib/Window.java \\\n+gnu/gcj/xlib/WindowAttributes.java \\\n+gnu/gcj/xlib/XAnyEvent.java \\\n+gnu/gcj/xlib/XButtonEvent.java \\\n+gnu/gcj/xlib/XColor.java \\\n+gnu/gcj/xlib/XConfigureEvent.java \\\n+gnu/gcj/xlib/XConnectException.java \\\n+gnu/gcj/xlib/XEvent.java \\\n+gnu/gcj/xlib/XException.java \\\n+gnu/gcj/xlib/XExposeEvent.java \\\n+gnu/gcj/xlib/XID.java \\\n+gnu/gcj/xlib/XImage.java \\\n+gnu/gcj/xlib/XUnmapEvent.java\n+\n+gnu_gcj_xlib_header_files = $(patsubst %.java,%.h,$(gnu_gcj_xlib_source_files))\n+\n+gnu/gcj/xlib.list: $(gnu_gcj_xlib_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(gnu_gcj_xlib_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > gnu/gcj/xlib.list\n+\n+-include gnu/gcj/xlib.deps\n+\n+\n gnu_java_awt_source_files = \\\n classpath/gnu/java/awt/AWTUtilities.java \\\n classpath/gnu/java/awt/BitMaskExtent.java \\"}, {"sha": "0c8607c522653aa6c22933da8c292c0386356591", "filename": "libjava/standard.omit.in", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fstandard.omit.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9365047aba7ff624508b4475b6fc3e523d419057/libjava%2Fstandard.omit.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstandard.omit.in?ref=9365047aba7ff624508b4475b6fc3e523d419057", "patch": "@@ -17,5 +17,3 @@ java/util/zip/InflaterHuffmanTree.java\n java/util/zip/OutputWindow.java\n java/util/zip/PendingBuffer.java\n java/util/zip/StreamManipulator.java\n-gnu/awt/xlib\n-gnu/gcj/xlib", "previous_filename": "libjava/standard.omit"}]}