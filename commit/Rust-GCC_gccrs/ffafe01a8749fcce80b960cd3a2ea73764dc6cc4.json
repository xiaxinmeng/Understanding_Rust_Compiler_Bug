{"sha": "ffafe01a8749fcce80b960cd3a2ea73764dc6cc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhZmUwMWE4NzQ5ZmNjZTgwYjk2MGNkM2EyZWE3Mzc2NGRjNmNjNA==", "commit": {"author": {"name": "Andrew John Hughes", "email": "ahughes@redhat.com", "date": "2010-12-16T19:48:07Z"}, "committer": {"name": "Andrew John Hughes", "email": "gandalf@gcc.gnu.org", "date": "2010-12-16T19:48:07Z"}, "message": "PR libgcj/46774: Create dynamic ProtectionDomain instances which check the system policy.\n\n2010-12-13  Andrew John Hughes  <ahughes@redhat.com>\n\n\tPR libgcj/46774\n\t* libjava/java/security/VMAccessController.java:\n\t(DEFAULT_CONTEXT): Create ProtectionDomain with\n\tfour argument constructor (arguments are the same\n\tas those implied by the two argument constructor).\n\t(getContext()): Create ProtectionDomain instances\n\twith four argument constructor using a null Principal\n\tarray (as before) but including the classloader, which\n\twas always null before.\n\nFrom-SVN: r167952", "tree": {"sha": "751edb3aa1c5281b3a5212390df53c19bed9955c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/751edb3aa1c5281b3a5212390df53c19bed9955c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4/comments", "author": {"login": "gnu-andrew", "id": 962817, "node_id": "MDQ6VXNlcjk2MjgxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/962817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnu-andrew", "html_url": "https://github.com/gnu-andrew", "followers_url": "https://api.github.com/users/gnu-andrew/followers", "following_url": "https://api.github.com/users/gnu-andrew/following{/other_user}", "gists_url": "https://api.github.com/users/gnu-andrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnu-andrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnu-andrew/subscriptions", "organizations_url": "https://api.github.com/users/gnu-andrew/orgs", "repos_url": "https://api.github.com/users/gnu-andrew/repos", "events_url": "https://api.github.com/users/gnu-andrew/events{/privacy}", "received_events_url": "https://api.github.com/users/gnu-andrew/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef875e12c78e73ff2684872b25db1695b536fcd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef875e12c78e73ff2684872b25db1695b536fcd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef875e12c78e73ff2684872b25db1695b536fcd2"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "c53120d3086669de0297d1de5e253cd328b939b7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ffafe01a8749fcce80b960cd3a2ea73764dc6cc4", "patch": "@@ -1,3 +1,15 @@\n+2010-12-13  Andrew John Hughes  <ahughes@redhat.com>\n+\n+\tPR libgcj/46774\n+\t* libjava/java/security/VMAccessController.java:\n+\t(DEFAULT_CONTEXT): Create ProtectionDomain with\n+\tfour argument constructor (arguments are the same\n+\tas those implied by the two argument constructor).\n+\t(getContext()): Create ProtectionDomain instances\n+\twith four argument constructor using a null Principal\n+\tarray (as before) but including the classloader, which\n+\twas always null before.\n+\n 2010-12-06  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \tPR target/40125"}, {"sha": "9a129803916b867882348cf74e336fe473881338", "filename": "libjava/classpath/lib/java/security/VMAccessController.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4/libjava%2Fclasspath%2Flib%2Fjava%2Fsecurity%2FVMAccessController.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4/libjava%2Fclasspath%2Flib%2Fjava%2Fsecurity%2FVMAccessController.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Fsecurity%2FVMAccessController.class?ref=ffafe01a8749fcce80b960cd3a2ea73764dc6cc4"}, {"sha": "d214e1926d075aaee088b761b34a1240e226528d", "filename": "libjava/java/security/VMAccessController.java", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4/libjava%2Fjava%2Fsecurity%2FVMAccessController.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffafe01a8749fcce80b960cd3a2ea73764dc6cc4/libjava%2Fjava%2Fsecurity%2FVMAccessController.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FVMAccessController.java?ref=ffafe01a8749fcce80b960cd3a2ea73764dc6cc4", "patch": "@@ -56,7 +56,7 @@\n     Permissions permissions = new Permissions();\n     permissions.add(new AllPermission());\n     ProtectionDomain[] domain = new ProtectionDomain[] {\n-      new ProtectionDomain(source, permissions)\n+      new ProtectionDomain(source, permissions, null, null)\n     };\n     DEFAULT_CONTEXT = new AccessControlContext(domain);\n   }\n@@ -121,7 +121,7 @@ static void popContext()\n     LinkedList stack = state.getContexts();\n     if (!stack.isEmpty())\n       {\n-\tstack.removeFirst();\n+        stack.removeFirst();\n       }\n     else if (DEBUG)\n       {\n@@ -178,26 +178,27 @@ static AccessControlContext getContext()\n     for (int i = 3; i < classes.length; i++)\n       {\n         Class clazz = classes[i];\n+        ClassLoader loader = clazz.getClassLoader();\n \n         if (DEBUG)\n           {\n             debug(\"checking \" + clazz);\n             // subject to getClassLoader RuntimePermission\n-            debug(\"loader = \" + clazz.getClassLoader());\n+            debug(\"loader = \" + loader);\n           }\n \n         if (privileged && i == classes.length - 2)\n           {\n             // If there was a call to doPrivileged with a supplied context,\n-            // return that context. If using JAAS doAs*, it should be \n-\t    // a context with a SubjectDomainCombiner\n+            // return that context. If using JAAS doAs*, it should be\n+            // a context with a SubjectDomainCombiner\n             LinkedList l = state.getContexts();\n             if (!l.isEmpty())\n               context = (AccessControlContext) l.getFirst();\n           }\n \n         // subject to getProtectionDomain RuntimePermission\n-\tProtectionDomain domain = clazz.getProtectionDomain();\n+        ProtectionDomain domain = clazz.getProtectionDomain();\n \n         if (domain == null)\n           continue;\n@@ -208,7 +209,8 @@ static AccessControlContext getContext()\n         // Create a static snapshot of this domain, which may change over time\n         // if the current policy changes.\n         domains.add(new ProtectionDomain(domain.getCodeSource(),\n-                                         domain.getPermissions()));\n+                                         domain.getPermissions(),\n+                                         loader, null));\n       }\n \n     if (DEBUG)"}]}