{"sha": "fac40b023f3be292aa251f215e5678690b79e31b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjNDBiMDIzZjNiZTI5MmFhMjUxZjIxNWU1Njc4NjkwYjc5ZTMxYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-21T08:50:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-21T08:50:38Z"}, "message": "re PR tree-optimization/69378 (FAIL: g++.dg/tree-ssa/pr61034.C)\n\n2016-01-21  Richard Biener  <rguenther@suse.de>\n\n        PR tree-optimization/69378\n\t* tree-ssa-sccvn.c (dominated_by_p_w_unex): New function.\n\t(set_ssa_val_to): Use it for dominance checks taking into\n\taccount not executable edges.\n\nFrom-SVN: r232666", "tree": {"sha": "377a3ee069da8f66cdb98314dfad94acc4e85380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/377a3ee069da8f66cdb98314dfad94acc4e85380"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fac40b023f3be292aa251f215e5678690b79e31b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac40b023f3be292aa251f215e5678690b79e31b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac40b023f3be292aa251f215e5678690b79e31b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac40b023f3be292aa251f215e5678690b79e31b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5463c2c89362c64ad49953bd06e10cc8925bfe06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5463c2c89362c64ad49953bd06e10cc8925bfe06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5463c2c89362c64ad49953bd06e10cc8925bfe06"}], "stats": {"total": 112, "additions": 100, "deletions": 12}, "files": [{"sha": "dae468c7930b127a924b3b2d1a1298a343952365", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac40b023f3be292aa251f215e5678690b79e31b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac40b023f3be292aa251f215e5678690b79e31b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fac40b023f3be292aa251f215e5678690b79e31b", "patch": "@@ -1,3 +1,10 @@\n+2016-01-21  Richard Biener  <rguenther@suse.de>\n+\n+        PR tree-optimization/69378\n+\t* tree-ssa-sccvn.c (dominated_by_p_w_unex): New function.\n+\t(set_ssa_val_to): Use it for dominance checks taking into\n+\taccount not executable edges.\n+\n 2016-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/69355"}, {"sha": "b42525f8cf51ed92b165d8f800858a24b86ff302", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 93, "deletions": 12, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac40b023f3be292aa251f215e5678690b79e31b/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac40b023f3be292aa251f215e5678690b79e31b/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=fac40b023f3be292aa251f215e5678690b79e31b", "patch": "@@ -2969,6 +2969,87 @@ print_scc (FILE *out, vec<tree> scc)\n   fprintf (out, \"\\n\");\n }\n \n+/* Return true if BB1 is dominated by BB2 taking into account edges\n+   that are not executable.  */\n+\n+static bool\n+dominated_by_p_w_unex (basic_block bb1, basic_block bb2)\n+{\n+  edge_iterator ei;\n+  edge e;\n+\n+  if (dominated_by_p (CDI_DOMINATORS, bb1, bb2))\n+    return true;\n+\n+  /* Before iterating we'd like to know if there exists a\n+     (executable) path from bb2 to bb1 at all, if not we can\n+     directly return false.  For now simply iterate once.  */\n+\n+  /* Iterate to the single executable bb1 predecessor.  */\n+  if (EDGE_COUNT (bb1->preds) > 1)\n+    {\n+      edge prede = NULL;\n+      FOR_EACH_EDGE (e, ei, bb1->preds)\n+\tif (e->flags & EDGE_EXECUTABLE)\n+\t  {\n+\t    if (prede)\n+\t      {\n+\t\tprede = NULL;\n+\t\tbreak;\n+\t      }\n+\t    prede = e;\n+\t  }\n+      if (prede)\n+\t{\n+\t  bb1 = prede->src;\n+\n+\t  /* Re-do the dominance check with changed bb1.  */\n+\t  if (dominated_by_p (CDI_DOMINATORS, bb1, bb2))\n+\t    return true;\n+\t}\n+    }\n+\n+  /* Iterate to the single executable bb2 successor.  */\n+  edge succe = NULL;\n+  FOR_EACH_EDGE (e, ei, bb2->succs)\n+    if (e->flags & EDGE_EXECUTABLE)\n+      {\n+\tif (succe)\n+\t  {\n+\t    succe = NULL;\n+\t    break;\n+\t  }\n+\tsucce = e;\n+      }\n+  if (succe)\n+    {\n+      /* Verify the reached block is only reached through succe.\n+\t If there is only one edge we can spare us the dominator\n+\t check and iterate directly.  */\n+      if (EDGE_COUNT (succe->dest->preds) > 1)\n+\t{\n+\t  FOR_EACH_EDGE (e, ei, succe->dest->preds)\n+\t    if (e != succe\n+\t\t&& (e->flags & EDGE_EXECUTABLE))\n+\t      {\n+\t\tsucce = NULL;\n+\t\tbreak;\n+\t      }\n+\t}\n+      if (succe)\n+\t{\n+\t  bb2 = succe->dest;\n+\n+\t  /* Re-do the dominance check with changed bb2.  */\n+\t  if (dominated_by_p (CDI_DOMINATORS, bb1, bb2))\n+\t    return true;\n+\t}\n+    }\n+\n+  /* We could now iterate updating bb1 / bb2.  */\n+  return false;\n+}\n+\n /* Set the value number of FROM to TO, return true if it has changed\n    as a result.  */\n \n@@ -3046,15 +3127,15 @@ set_ssa_val_to (tree from, tree to)\n \t      && SSA_NAME_RANGE_INFO (to))\n \t    {\n \t      if (SSA_NAME_IS_DEFAULT_DEF (to)\n-\t\t  || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (from)),\n-\t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (to))))\n+\t\t  || dominated_by_p_w_unex\n+\t\t\t(gimple_bb (SSA_NAME_DEF_STMT (from)),\n+\t\t\t gimple_bb (SSA_NAME_DEF_STMT (to))))\n \t\t/* Keep the info from the dominator.  */\n \t\t;\n \t      else if (SSA_NAME_IS_DEFAULT_DEF (from)\n-\t\t       || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t\t\t  gimple_bb (SSA_NAME_DEF_STMT (to)),\n-\t\t\t\t\t  gimple_bb (SSA_NAME_DEF_STMT (from))))\n+\t\t       || dominated_by_p_w_unex\n+\t\t\t    (gimple_bb (SSA_NAME_DEF_STMT (to)),\n+\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (from))))\n \t\t{\n \t\t  /* Save old info.  */\n \t\t  if (! VN_INFO (to)->info.range_info)\n@@ -3076,15 +3157,15 @@ set_ssa_val_to (tree from, tree to)\n \t\t   && SSA_NAME_PTR_INFO (to))\n \t    {\n \t      if (SSA_NAME_IS_DEFAULT_DEF (to)\n-\t\t  || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (from)),\n-\t\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (to))))\n+\t\t  || dominated_by_p_w_unex\n+\t\t\t(gimple_bb (SSA_NAME_DEF_STMT (from)),\n+\t\t\t gimple_bb (SSA_NAME_DEF_STMT (to))))\n \t\t/* Keep the info from the dominator.  */\n \t\t;\n \t      else if (SSA_NAME_IS_DEFAULT_DEF (from)\n-\t\t       || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t\t\t  gimple_bb (SSA_NAME_DEF_STMT (to)),\n-\t\t\t\t\t  gimple_bb (SSA_NAME_DEF_STMT (from))))\n+\t\t       || dominated_by_p_w_unex\n+\t\t\t    (gimple_bb (SSA_NAME_DEF_STMT (to)),\n+\t\t\t     gimple_bb (SSA_NAME_DEF_STMT (from))))\n \t\t{\n \t\t  /* Save old info.  */\n \t\t  if (! VN_INFO (to)->info.ptr_info)"}]}