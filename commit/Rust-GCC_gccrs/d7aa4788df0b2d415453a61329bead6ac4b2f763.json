{"sha": "d7aa4788df0b2d415453a61329bead6ac4b2f763", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdhYTQ3ODhkZjBiMmQ0MTU0NTNhNjEzMjliZWFkNmFjNGIyZjc2Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-10-16T08:36:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-10-16T08:36:03Z"}, "message": "re PR target/25519 (Intel (SSE/MMX) intrinsics should only be mentioned instead of the builtins)\n\n2006-10-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR target/25519\n\t* doc/extend.texi (X86 Built-in Functions): Fix typos in\n\tSSE builtin documentation.  Document SSE2 builtins.\n\nFrom-SVN: r117774", "tree": {"sha": "e2f53b43ac3ab8b5acba28ef32813c3682ff550d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2f53b43ac3ab8b5acba28ef32813c3682ff550d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7aa4788df0b2d415453a61329bead6ac4b2f763", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7aa4788df0b2d415453a61329bead6ac4b2f763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7aa4788df0b2d415453a61329bead6ac4b2f763", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7aa4788df0b2d415453a61329bead6ac4b2f763/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95e3c37e3045514ce28d88b61eae837deaa3401c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95e3c37e3045514ce28d88b61eae837deaa3401c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95e3c37e3045514ce28d88b61eae837deaa3401c"}], "stats": {"total": 171, "additions": 168, "deletions": 3}, "files": [{"sha": "c1803fbe2ff4a7df0a4ec8864f3a8fdfd509200a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7aa4788df0b2d415453a61329bead6ac4b2f763/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7aa4788df0b2d415453a61329bead6ac4b2f763/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7aa4788df0b2d415453a61329bead6ac4b2f763", "patch": "@@ -1,3 +1,9 @@\n+2006-10-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR target/25519\n+\t* doc/extend.texi (X86 Built-in Functions): Fix typos in\n+\tSSE builtin documentation.  Document SSE2 builtins.\n+\n 2006-10-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa64-hpux.h (LINK_SPEC): Force __cxa_finalize to be an undefined"}, {"sha": "5df92a3c08f80b66806f355cd679467549f50385", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 162, "deletions": 3, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7aa4788df0b2d415453a61329bead6ac4b2f763/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7aa4788df0b2d415453a61329bead6ac4b2f763/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=d7aa4788df0b2d415453a61329bead6ac4b2f763", "patch": "@@ -6985,16 +6985,175 @@ Generates the @code{movhps} machine instruction as a store to memory.\n Generates the @code{movlps} machine instruction as a store to memory.\n @end table\n \n+The following built-in functions are available when @option{-msse2} is used.\n+All of them generate the machine instruction that is part of the name.\n+\n+@smallexample\n+int __builtin_ia32_comisdeq (v2df, v2df)\n+int __builtin_ia32_comisdlt (v2df, v2df)\n+int __builtin_ia32_comisdle (v2df, v2df)\n+int __builtin_ia32_comisdgt (v2df, v2df)\n+int __builtin_ia32_comisdge (v2df, v2df)\n+int __builtin_ia32_comisdneq (v2df, v2df)\n+int __builtin_ia32_ucomisdeq (v2df, v2df)\n+int __builtin_ia32_ucomisdlt (v2df, v2df)\n+int __builtin_ia32_ucomisdle (v2df, v2df)\n+int __builtin_ia32_ucomisdgt (v2df, v2df)\n+int __builtin_ia32_ucomisdge (v2df, v2df)\n+int __builtin_ia32_ucomisdneq (v2df, v2df)\n+v2df __builtin_ia32_cmpeqpd (v2df, v2df)\n+v2df __builtin_ia32_cmpltpd (v2df, v2df)\n+v2df __builtin_ia32_cmplepd (v2df, v2df)\n+v2df __builtin_ia32_cmpgtpd (v2df, v2df)\n+v2df __builtin_ia32_cmpgepd (v2df, v2df)\n+v2df __builtin_ia32_cmpunordpd (v2df, v2df)\n+v2df __builtin_ia32_cmpneqpd (v2df, v2df)\n+v2df __builtin_ia32_cmpnltpd (v2df, v2df)\n+v2df __builtin_ia32_cmpnlepd (v2df, v2df)\n+v2df __builtin_ia32_cmpngtpd (v2df, v2df)\n+v2df __builtin_ia32_cmpngepd (v2df, v2df)\n+v2df __builtin_ia32_cmpordpd (v2df, v2df)\n+v2df __builtin_ia32_cmpeqsd (v2df, v2df)\n+v2df __builtin_ia32_cmpltsd (v2df, v2df)\n+v2df __builtin_ia32_cmplesd (v2df, v2df)\n+v2df __builtin_ia32_cmpunordsd (v2df, v2df)\n+v2df __builtin_ia32_cmpneqsd (v2df, v2df)\n+v2df __builtin_ia32_cmpnltsd (v2df, v2df)\n+v2df __builtin_ia32_cmpnlesd (v2df, v2df)\n+v2df __builtin_ia32_cmpordsd (v2df, v2df)\n+v2di __builtin_ia32_paddq (v2di, v2di)\n+v2di __builtin_ia32_psubq (v2di, v2di)\n+v2df __builtin_ia32_addpd (v2df, v2df)\n+v2df __builtin_ia32_subpd (v2df, v2df)\n+v2df __builtin_ia32_mulpd (v2df, v2df)\n+v2df __builtin_ia32_divpd (v2df, v2df)\n+v2df __builtin_ia32_addsd (v2df, v2df)\n+v2df __builtin_ia32_subsd (v2df, v2df)\n+v2df __builtin_ia32_mulsd (v2df, v2df)\n+v2df __builtin_ia32_divsd (v2df, v2df)\n+v2df __builtin_ia32_minpd (v2df, v2df)\n+v2df __builtin_ia32_maxpd (v2df, v2df)\n+v2df __builtin_ia32_minsd (v2df, v2df)\n+v2df __builtin_ia32_maxsd (v2df, v2df)\n+v2df __builtin_ia32_andpd (v2df, v2df)\n+v2df __builtin_ia32_andnpd (v2df, v2df)\n+v2df __builtin_ia32_orpd (v2df, v2df)\n+v2df __builtin_ia32_xorpd (v2df, v2df)\n+v2df __builtin_ia32_movsd (v2df, v2df)\n+v2df __builtin_ia32_unpckhpd (v2df, v2df)\n+v2df __builtin_ia32_unpcklpd (v2df, v2df)\n+v16qi __builtin_ia32_paddb128 (v16qi, v16qi)\n+v8hi __builtin_ia32_paddw128 (v8hi, v8hi)\n+v4si __builtin_ia32_paddd128 (v4si, v4si)\n+v2di __builtin_ia32_paddq128 (v2di, v2di)\n+v16qi __builtin_ia32_psubb128 (v16qi, v16qi)\n+v8hi __builtin_ia32_psubw128 (v8hi, v8hi)\n+v4si __builtin_ia32_psubd128 (v4si, v4si)\n+v2di __builtin_ia32_psubq128 (v2di, v2di)\n+v8hi __builtin_ia32_pmullw128 (v8hi, v8hi)\n+v8hi __builtin_ia32_pmulhw128 (v8hi, v8hi)\n+v2di __builtin_ia32_pand128 (v2di, v2di)\n+v2di __builtin_ia32_pandn128 (v2di, v2di)\n+v2di __builtin_ia32_por128 (v2di, v2di)\n+v2di __builtin_ia32_pxor128 (v2di, v2di)\n+v16qi __builtin_ia32_pavgb128 (v16qi, v16qi)\n+v8hi __builtin_ia32_pavgw128 (v8hi, v8hi)\n+v16qi __builtin_ia32_pcmpeqb128 (v16qi, v16qi)\n+v8hi __builtin_ia32_pcmpeqw128 (v8hi, v8hi)\n+v4si __builtin_ia32_pcmpeqd128 (v4si, v4si)\n+v16qi __builtin_ia32_pcmpgtb128 (v16qi, v16qi)\n+v8hi __builtin_ia32_pcmpgtw128 (v8hi, v8hi)\n+v4si __builtin_ia32_pcmpgtd128 (v4si, v4si)\n+v16qi __builtin_ia32_pmaxub128 (v16qi, v16qi)\n+v8hi __builtin_ia32_pmaxsw128 (v8hi, v8hi)\n+v16qi __builtin_ia32_pminub128 (v16qi, v16qi)\n+v8hi __builtin_ia32_pminsw128 (v8hi, v8hi)\n+v16qi __builtin_ia32_punpckhbw128 (v16qi, v16qi)\n+v8hi __builtin_ia32_punpckhwd128 (v8hi, v8hi)\n+v4si __builtin_ia32_punpckhdq128 (v4si, v4si)\n+v2di __builtin_ia32_punpckhqdq128 (v2di, v2di)\n+v16qi __builtin_ia32_punpcklbw128 (v16qi, v16qi)\n+v8hi __builtin_ia32_punpcklwd128 (v8hi, v8hi)\n+v4si __builtin_ia32_punpckldq128 (v4si, v4si)\n+v2di __builtin_ia32_punpcklqdq128 (v2di, v2di)\n+v16qi __builtin_ia32_packsswb128 (v16qi, v16qi)\n+v8hi __builtin_ia32_packssdw128 (v8hi, v8hi)\n+v16qi __builtin_ia32_packuswb128 (v16qi, v16qi)\n+v8hi __builtin_ia32_pmulhuw128 (v8hi, v8hi)\n+void __builtin_ia32_maskmovdqu (v16qi, v16qi)\n+v2df __builtin_ia32_loadupd (double *)\n+void __builtin_ia32_storeupd (double *, v2df)\n+v2df __builtin_ia32_loadhpd (v2df, double *)\n+v2df __builtin_ia32_loadlpd (v2df, double *)\n+int __builtin_ia32_movmskpd (v2df)\n+int __builtin_ia32_pmovmskb128 (v16qi)\n+void __builtin_ia32_movnti (int *, int)\n+void __builtin_ia32_movntpd (double *, v2df)\n+void __builtin_ia32_movntdq (v2df *, v2df)\n+v4si __builtin_ia32_pshufd (v4si, int)\n+v8hi __builtin_ia32_pshuflw (v8hi, int)\n+v8hi __builtin_ia32_pshufhw (v8hi, int)\n+v2di __builtin_ia32_psadbw128 (v16qi, v16qi)\n+v2df __builtin_ia32_sqrtpd (v2df)\n+v2df __builtin_ia32_sqrtsd (v2df)\n+v2df __builtin_ia32_shufpd (v2df, v2df, int)\n+v2df __builtin_ia32_cvtdq2pd (v4si)\n+v4sf __builtin_ia32_cvtdq2ps (v4si)\n+v4si __builtin_ia32_cvtpd2dq (v2df)\n+v2si __builtin_ia32_cvtpd2pi (v2df)\n+v4sf __builtin_ia32_cvtpd2ps (v2df)\n+v4si __builtin_ia32_cvttpd2dq (v2df)\n+v2si __builtin_ia32_cvttpd2pi (v2df)\n+v2df __builtin_ia32_cvtpi2pd (v2si)\n+int __builtin_ia32_cvtsd2si (v2df)\n+int __builtin_ia32_cvttsd2si (v2df)\n+long long __builtin_ia32_cvtsd2si64 (v2df)\n+long long __builtin_ia32_cvttsd2si64 (v2df)\n+v4si __builtin_ia32_cvtps2dq (v4sf)\n+v2df __builtin_ia32_cvtps2pd (v4sf)\n+v4si __builtin_ia32_cvttps2dq (v4sf)\n+v2df __builtin_ia32_cvtsi2sd (v2df, int)\n+v2df __builtin_ia32_cvtsi642sd (v2df, long long)\n+v4sf __builtin_ia32_cvtsd2ss (v4sf, v2df)\n+v2df __builtin_ia32_cvtss2sd (v2df, v4sf)\n+void __builtin_ia32_clflush (const void *)\n+void __builtin_ia32_lfence (void)\n+void __builtin_ia32_mfence (void)\n+v16qi __builtin_ia32_loaddqu (const char *)\n+void __builtin_ia32_storedqu (char *, v16qi)\n+unsigned long long __builtin_ia32_pmuludq (v2si, v2si)\n+v2di __builtin_ia32_pmuludq128 (v4si, v4si)\n+v8hi __builtin_ia32_psllw128 (v8hi, v2di)\n+v4si __builtin_ia32_pslld128 (v4si, v2di)\n+v2di __builtin_ia32_psllq128 (v4si, v2di)\n+v8hi __builtin_ia32_psrlw128 (v8hi, v2di)\n+v4si __builtin_ia32_psrld128 (v4si, v2di)\n+v2di __builtin_ia32_psrlq128 (v2di, v2di)\n+v8hi __builtin_ia32_psraw128 (v8hi, v2di)\n+v4si __builtin_ia32_psrad128 (v4si, v2di)\n+v2di __builtin_ia32_pslldqi128 (v2di, int)\n+v8hi __builtin_ia32_psllwi128 (v8hi, int)\n+v4si __builtin_ia32_pslldi128 (v4si, int)\n+v2di __builtin_ia32_psllqi128 (v2di, int)\n+v2di __builtin_ia32_psrldqi128 (v2di, int)\n+v8hi __builtin_ia32_psrlwi128 (v8hi, int)\n+v4si __builtin_ia32_psrldi128 (v4si, int)\n+v2di __builtin_ia32_psrlqi128 (v2di, int)\n+v8hi __builtin_ia32_psrawi128 (v8hi, int)\n+v4si __builtin_ia32_psradi128 (v4si, int)\n+v4si __builtin_ia32_pmaddwd128 (v8hi, v8hi)\n+@end smallexample\n+\n The following built-in functions are available when @option{-msse3} is used.\n All of them generate the machine instruction that is part of the name.\n \n @smallexample\n v2df __builtin_ia32_addsubpd (v2df, v2df)\n-v2df __builtin_ia32_addsubps (v2df, v2df)\n+v4sf __builtin_ia32_addsubps (v4sf, v4sf)\n v2df __builtin_ia32_haddpd (v2df, v2df)\n-v2df __builtin_ia32_haddps (v2df, v2df)\n+v4sf __builtin_ia32_haddps (v4sf, v4sf)\n v2df __builtin_ia32_hsubpd (v2df, v2df)\n-v2df __builtin_ia32_hsubps (v2df, v2df)\n+v4sf __builtin_ia32_hsubps (v4sf, v4sf)\n v16qi __builtin_ia32_lddqu (char const *)\n void __builtin_ia32_monitor (void *, unsigned int, unsigned int)\n v2df __builtin_ia32_movddup (v2df)"}]}