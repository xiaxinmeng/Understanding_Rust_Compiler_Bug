{"sha": "1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIyOGE5YmQxZWZlZTZiMTAyZjY0YzQ1YWQzZTk3YTNkYzYzMGE0Mw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-07-13T22:38:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-13T22:38:51Z"}, "message": "i386.h (CPP_486_SPEC, [...]): New specs.\n\n        * i386/i386.h (CPP_486_SPEC, CPP_586_SPEC, CPP_686_SPEC): New specs.\n        (CPP_CPU_DEFAULT_SPEC, CPP_CPU_SPEC): Use them.\n        (EXTRA_SPECS): Support them.\n        * gcc.c: Delete %[spec] support.\n        (do_spec_1, case '('): Likewise.\n        (do_spec_1, case '['): Call error.\n        * i386/aix386ng.h, cygwin32.h, freebsd-elf.h, gas.h, isc.h,\n        linux-aout.h, linux-oldld.h, linux.h, osfelf.h, osfrose.h, sco.h,\n        sco4.h, sco4dbx.h, sco5.h, sol2.h, sysv3.h (CPP_SPEC): Delete\n        %[cpp_cpu].\n\nFrom-SVN: r21120", "tree": {"sha": "5bf47887fc7b63496f3d8cf8e0ba4617d488c9f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf47887fc7b63496f3d8cf8e0ba4617d488c9f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/comments", "author": null, "committer": null, "parents": [{"sha": "4a8c52e0487bb8afe279f041ac113ed4e2895ddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8c52e0487bb8afe279f041ac113ed4e2895ddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a8c52e0487bb8afe279f041ac113ed4e2895ddb"}], "stats": {"total": 166, "additions": 78, "deletions": 88}, "files": [{"sha": "ae87f3c550abec2f014ccd905077e24788b90e2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -1,3 +1,16 @@\n+Mon Jul 13 23:36:08 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* i386/i386.h (CPP_486_SPEC, CPP_586_SPEC, CPP_686_SPEC): New specs.\n+\t(CPP_CPU_DEFAULT_SPEC, CPP_CPU_SPEC): Use them.\n+\t(EXTRA_SPECS): Support them.\n+\t* gcc.c: Delete %[spec] support.\n+\t(do_spec_1, case '('): Likewise.\n+\t(do_spec_1, case '['): Call error.\n+\t* i386/aix386ng.h, cygwin32.h, freebsd-elf.h, gas.h, isc.h,\n+\tlinux-aout.h, linux-oldld.h, linux.h, osfelf.h, osfrose.h, sco.h,\n+\tsco4.h, sco4dbx.h, sco5.h, sol2.h, sysv3.h (CPP_SPEC): Delete\n+\t%[cpp_cpu].\n+\n Mon Jul 13 23:31:04 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n \n \t* m68k.c (output_scc_di): Use cmpw #0 only for address registers."}, {"sha": "a177b69250f8a4bface80258abcd42b03435c95f", "filename": "gcc/config/i386/aix386ng.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Faix386ng.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Faix386ng.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Faix386ng.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -46,7 +46,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define CPP_PREDEFINES \"-Dps2 -Dunix -Asystem(aix)\"\n \n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] \\\n+#define CPP_SPEC \"%(cpp_cpu) \\\n   %{posix:-D_POSIX_SOURCE}%{!posix:-DAIX} -D_I386 -D_AIX -D_MBCS\"\n \n /* special flags for the aix assembler to generate the short form for all"}, {"sha": "db13d3f8008952e6771f783b9ae9b56475f1f31a", "filename": "gcc/config/i386/cygwin32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin32.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -50,7 +50,7 @@ Boston, MA 02111-1307, USA. */\n   -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"-remap %(cpp_cpu) %[cpp_cpu] %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"-remap %(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n \n /* We have to dynamic link to get to the system DLLs.  All of libc, libm and\n    the Unix stuff is in cygwin.dll.  The import library is called"}, {"sha": "3c1934b4cda5f379ec33692139139060a55ba426", "filename": "gcc/config/i386/freebsd-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -143,7 +143,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-Di386 -Dunix -D__ELF__ -D__FreeBSD__ -Asystem(unix) -Asystem(FreeBSD) -Acpu(i386) -Amachine(i386)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n \n #undef\tLIB_SPEC\n #if 1"}, {"sha": "173bf1920ff217c7b7eb101c318370af81283948", "filename": "gcc/config/i386/gas.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgas.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -57,7 +57,7 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #define CPP_PREDEFINES \"-Dunix\"\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n \n /* Allow #sccs in preprocessor.  */\n "}, {"sha": "a575611e018eaa6f9e46aea86e73f3e31ab03714", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -304,15 +304,21 @@ extern int ix86_arch;\n %{mpentiumpro:-mcpu=pentiumpro}}\"\n #endif\n \f\n+#define CPP_486_SPEC \"%{!ansi:-Di486} -D__i486 -D__i486__\"\n+#define CPP_586_SPEC \"%{!ansi:-Di586 -Dpentium} \\\n+\t-D__i586 -D__i586__ -D__pentium -D__pentium__\"\n+#define CPP_686_SPEC \"%{!ansi:-Di686 -Dpentiumpro} \\\n+\t-D__i686 -D__i686__ -D__pentiumpro -D__pentiumpro__\"\n+\n #ifndef CPP_CPU_DEFAULT_SPEC\n #if TARGET_CPU_DEFAULT == 1\n-#define CPP_CPU_DEFAULT_SPEC \"-Di486\"\n+#define CPP_CPU_DEFAULT_SPEC \"%(cpp_486)\"\n #else\n #if TARGET_CPU_DEFAULT == 2\n-#define CPP_CPU_DEFAULT_SPEC \"-Dpentium -Di586\"\n+#define CPP_CPU_DEFAULT_SPEC \"%(cpp_586)\"\n #else\n #if TARGET_CPU_DEFAULT == 3\n-#define CPP_CPU_DEFAULT_SPEC \"-Dpentiumpro -Di686\"\n+#define CPP_CPU_DEFAULT_SPEC \"%(cpp_686)\"\n #else\n #define CPP_CPU_DEFAULT_SPEC \"\"\n #endif\n@@ -322,11 +328,12 @@ extern int ix86_arch;\n \n #ifndef CPP_CPU_SPEC\n #define CPP_CPU_SPEC \"\\\n--Di386 -Asystem(unix) -Acpu(i386) -Amachine(i386) \\\n-%{mcpu=i486:-Di486} %{m486:-Di486} \\\n-%{mpentium:-Dpentium -Di586} %{mcpu=pentium:-Dpentium -Di586} \\\n-%{mpentiumpro:-Dpentiumpro -Di686} %{mcpu=pentiumpro:-Dpentiumpro -Di686} \\\n-%{!mcpu*:%{!m486:%{!mpentium*: %[cpp_cpu_default]}}}\"\n+-Asystem(unix) -Acpu(i386) -Amachine(i386) \\\n+%{!ansi:-Di386} -D__i386 -D__i386__ \\\n+%{mcpu=i486:%(cpp_486)} %{m486:%(cpp_486)} \\\n+%{mpentium:%(cpp_586)} %{mcpu=pentium:%(cpp_586)} \\\n+%{mpentiumpro:%(cpp_686)} %{mcpu=pentiumpro:%(cpp_686)} \\\n+%{!mcpu*:%{!m486:%{!mpentium*:%(cpp_cpu_default)}}}\"\n #endif\n \n #ifndef CC1_SPEC\n@@ -348,6 +355,9 @@ extern int ix86_arch;\n #endif\n \n #define EXTRA_SPECS\t\t\t\t\t\t\t\\\n+  { \"cpp_486\", CPP_486_SPEC},\t\t\t\t\t\t\\\n+  { \"cpp_586\", CPP_586_SPEC},\t\t\t\t\t\t\\\n+  { \"cpp_686\", CPP_686_SPEC},\t\t\t\t\t\t\\\n   { \"cpp_cpu_default\",\tCPP_CPU_DEFAULT_SPEC },\t\t\t\t\\\n   { \"cpp_cpu\",\tCPP_CPU_SPEC },\t\t\t\t\t\t\\\n   { \"cc1_cpu\",  CC1_CPU_SPEC },\t\t\t\t\t\t\\"}, {"sha": "5c39896df0173620234f0f4e66a64dbc84600ba1", "filename": "gcc/config/i386/isc.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fisc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fisc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fisc.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -19,7 +19,7 @@\n #define LIB_SPEC \"%{shlib:-lc_s} %{posix:-lcposix} %{Xp:-lcposix} -lc -lg\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{posix:-D_POSIX_SOURCE} %{Xp:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} %{Xp:-D_POSIX_SOURCE}\"\n \n /* ISC 2.2 uses `char' for `wchar_t'.  */\n #undef WCHAR_TYPE\n@@ -87,3 +87,7 @@\n     }                                            \\\n     fputs (\"\\\"\\n\", FILE);                        \\\n   } while (0)\n+\n+/* Work around assembler forward label references generated in exception\n+   handling code. */\n+#define DWARF2_UNWIND_INFO 0"}, {"sha": "de81d878317a2973185e265242961a8871ac50fb", "filename": "gcc/config/i386/linux-aout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Flinux-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Flinux-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-aout.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -34,7 +34,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-Dunix -Dlinux -Asystem(posix)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n \n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\""}, {"sha": "4e3085bc2caf10b7cb0bd547bf46721eaf58347f", "filename": "gcc/config/i386/linux-oldld.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Flinux-oldld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Flinux-oldld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-oldld.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -35,7 +35,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-Dunix -Dlinux -Asystem(posix)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n \n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\""}, {"sha": "373c80444cff0409bcf9c3a9fd675f14fc944e32", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -155,9 +155,9 @@ Boston, MA 02111-1307, USA.  */\n \n #undef CPP_SPEC\n #ifdef USE_GNULIBC_1\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE}\"\n #else\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n #endif\n \n #undef CC1_SPEC"}, {"sha": "381ffc26313cc4bae2cb7724ccf4c656eacf29c4", "filename": "gcc/config/i386/osfelf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fosfelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fosfelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfelf.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -25,7 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-DOSF -DOSF1 -Dunix -Asystem(xpg4)\"\n \n #undef  CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] \\\n+#define CPP_SPEC \"%(cpp_cpu) \\\n %{mrose: -D__ROSE__ %{!pic-none: -D__SHARED__}} \\\n %{!mrose: -D__ELF__ %{fpic: -D__SHARED__}} \\\n %{mno-underscores: -D__NO_UNDERSCORES__} \\"}, {"sha": "9cfe187ea090fbedbbf71d874b8b6a3085bc4688", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -93,7 +93,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-DOSF -DOSF1 -Dunix -Asystem(xpg4)\"\n \n #undef  CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] \\\n+#define CPP_SPEC \"%(cpp_cpu) \\\n %{!melf: -D__ROSE__ %{!pic-none: -D__SHARED__}} \\\n %{melf: -D__ELF__ %{fpic: -D__SHARED__}} \\\n %{mno-underscores: -D__NO_UNDERSCORES__} \\"}, {"sha": "016e0a00ce07fc76d2e64a59391ffe57abf5c76c", "filename": "gcc/config/i386/sco.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -58,7 +58,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-Dunix -DM_UNIX -DM_I386 -DM_COFF -DM_WORDSWAP -Asystem(svr3)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{scointl:-DM_INTERNAT}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{scointl:-DM_INTERNAT}\"\n \n /* This spec is used for telling cpp whether char is signed or not.  */\n "}, {"sha": "5d1ea471dbf8660d728b7af67e38d4e232c3a129", "filename": "gcc/config/i386/sco4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsco4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsco4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco4.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -66,7 +66,7 @@ Boston, MA 02111-1307, USA.  */\n  \"-Asystem(svr3)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] \\\n+#define CPP_SPEC \"%(cpp_cpu) \\\n   -D_i386 -D_M_I386 -D_M_I86 -D_M_I86SM -D_M_SDATA -D_M_STEXT \\\n   -D_unix -D_M_UNIX -D_M_XENIX \\\n   -D_M_SYS5 -D_M_SYSV -D_M_SYS3 -D_M_SYSIII \\"}, {"sha": "3d075b6a2e26657c5c74e7ccf9aff18be29d929c", "filename": "gcc/config/i386/sco4dbx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsco4dbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsco4dbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco4dbx.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -64,7 +64,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-Dunix -Asystem(svr3)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] \\\n+#define CPP_SPEC \"%(cpp_cpu) \\\n   -D_M_I386 -D_M_I86 -D_M_I86SM -D_M_SDATA -D_M_STEXT \\\n   -D_M_UNIX -D_M_XENIX \\\n   -D_M_SYS5 -D_M_SYSV -D_M_SYS3 -D_M_SYSIII \\"}, {"sha": "62156ddec2bca5d42961204a8c024f16481b46ff", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -832,7 +832,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n /* You are in a maze of GCC specs ... all alike */\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] \\\n+#define CPP_SPEC \"%(cpp_cpu) \\\n   %{fpic:%{mcoff:%e-fpic is not valid with -mcoff}} \\\n   %{fPIC:%{mcoff:%e-fPIC is not valid with -mcoff}} \\\n   -D__i386 -D__unix -D_SCO_DS=1 -D_M_I386 -D_M_XENIX -D_M_UNIX \\"}, {"sha": "8fc3e6140e75916502d88ee4451c5429354ed8ad", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel 80386 running Solaris 2\n-   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Fred Fish (fnf@cygnus.com).\n \n This file is part of GNU CC.\n@@ -30,7 +30,7 @@ Boston, MA 02111-1307, USA.  */\n    executed.  This macro forces the assembler to do the padding, since\n    it knows what it is doing. */\n \n-#define FORCE_INIT_SECTION_ALIGN do { asm (ALIGN_ASM_OP ## \" 16\"); } while (0)\n+#define FORCE_INIT_SECTION_ALIGN asm (ALIGN_ASM_OP ## \" 16\")\n #define FORCE_FINI_SECTION_ALIGN FORCE_INIT_SECTION_ALIGN\n \n /* Add \"sun\" to the list of symbols defined for SVR4.  */\n@@ -39,7 +39,7 @@ Boston, MA 02111-1307, USA.  */\n   \"-Dunix -D__svr4__ -D__SVR4 -Dsun -Asystem(svr4)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] \\\n+#define CPP_SPEC \"%(cpp_cpu) \\\n    %{compat-bsd:-iwithprefixbefore ucbinclude -I/usr/ucbinclude}\"\n \n #undef LIB_SPEC\n@@ -53,7 +53,7 @@ Boston, MA 02111-1307, USA.  */\n #define STARTFILE_SPEC \"%{!shared: \\\n \t\t\t %{!symbolic: \\\n \t\t\t  %{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}}}}\\\n-\t\t\t%{pg:gmon.o%s}%{!pg:crti.o%s} \\\n+\t\t\t%{pg:gmon.o%s} crti.o%s \\\n \t\t\t%{ansi:values-Xc.o%s} \\\n \t\t\t%{!ansi: \\\n \t\t\t %{traditional:values-Xt.o%s} \\\n@@ -72,12 +72,14 @@ Boston, MA 02111-1307, USA.  */\n    %{YP,*} \\\n    %{R*} \\\n    %{compat-bsd: \\\n-     %{!YP,*:%{p:-Y P,/usr/ucblib:/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n-       %{!p:-Y P,/usr/ucblib:/usr/ccs/lib:/usr/lib}} \\\n+     %{!YP,*:%{pg:-Y P,/usr/ucblib:/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n+     %{!pg:%{p:-Y P,/usr/ucblib:/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n+       %{!p:-Y P,/usr/ucblib:/usr/ccs/lib:/usr/lib}}} \\\n      -R /usr/ucblib} \\\n    %{!compat-bsd: \\\n-     %{!YP,*:%{p:-Y P,/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n-       %{!p:-Y P,/usr/ccs/lib:/usr/lib}}} \\\n+     %{!YP,*:%{pg:-Y P,/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n+     %{!pg:%{p:-Y P,/usr/ccs/lib/libp:/usr/lib/libp:/usr/ccs/lib:/usr/lib} \\\n+       %{!p:-Y P,/usr/ccs/lib:/usr/lib}}}} \\\n    %{Qy:} %{!Qn:-Qy}\"\n \n /* This defines which switch letters take arguments.\n@@ -90,3 +92,4 @@ Boston, MA 02111-1307, USA.  */\n    || (CHAR) == 'h' \\\n    || (CHAR) == 'z')\n \n+#define STDC_0_IN_SYSTEM_HEADERS"}, {"sha": "ce898899011a7155efade03cf7a5eed57564b854", "filename": "gcc/config/i386/sysv3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fconfig%2Fi386%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv3.h?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -44,7 +44,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define CPP_PREDEFINES \"-Dunix -Asystem(svr3)\"\n \n-#define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n \n /* Writing `int' for a bitfield forces int alignment for the structure.  */\n "}, {"sha": "17978f726445ffa17b15f41e7ee64f80268c1585", "filename": "gcc/gcc.c", "status": "modified", "additions": 16, "deletions": 56, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1228a9bd1efee6b102f64c45ad3e97a3dc630a43/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=1228a9bd1efee6b102f64c45ad3e97a3dc630a43", "patch": "@@ -365,7 +365,6 @@ or with constant text in a single argument.\n  %{S|P:X} substitutes X if either -S or -P was given to CC.  This may be\n \t  combined with ! and . as above binding stronger than the OR.\n  %(Spec) processes a specification defined in a specs file as *Spec:\n- %[Spec] as above, but put __ around -D arguments\n \n The conditional text X in a %{S:X} or %{!S:X} construct may contain\n other nested % constructs or spaces, or even newlines.  They are\n@@ -1111,8 +1110,7 @@ skip_whitespace (p)\n }\n \f\n /* Structure to keep track of the specs that have been defined so far.\n-   These are accessed using %(specname) or %[specname] in a compiler\n-   or link spec.  */\n+   These are accessed using %(specname) in a compiler or link spec.  */\n \n struct spec_list\n {\n@@ -3994,19 +3992,16 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \n \t    /* Process a string found as the value of a spec given by name.\n \t       This feature allows individual machine descriptions\n-\t       to add and use their own specs.\n-\t       %[...] modifies -D options the way %P does;\n-\t       %(...) uses the spec unmodified.  */\n+\t       to add and use their own specs.  */\n \t  case '(':\n-\t  case '[':\n \t    {\n \t      char *name = p;\n \t      struct spec_list *sl;\n \t      int len;\n \n \t      /* The string after the S/P is the name of a spec that is to be\n \t\t processed.  */\n-\t      while (*p && *p != ')' && *p != ']')\n+\t      while (*p && *p != ')')\n \t\tp++;\n \n \t      /* See if it's in the list */\n@@ -4015,67 +4010,32 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t\t  {\n \t\t    name = *(sl->ptr_spec);\n #ifdef DEBUG_SPECS\n-\t\t    fprintf (stderr, \"Processing spec %c%s%c, which is '%s'\\n\",\n-\t\t\t     c, sl->name, (c == '(') ? ')' : ']', name);\n+\t\t    fprintf (stderr, \"Processing spec %s, which is '%s'\\n\",\n+\t\t\t     sl->name, name);\n #endif\n \t\t    break;\n \t\t  }\n \n \t      if (sl)\n \t\t{\n-\t\t  if (c == '(')\n-\t\t    {\n-\t\t      value = do_spec_1 (name, 0, NULL_PTR);\n-\t\t      if (value != 0)\n-\t\t\treturn value;\n-\t\t    }\n-\t\t  else\n-\t\t    {\n-\t\t      char *x = (char *) alloca (strlen (name) * 2 + 1);\n-\t\t      char *buf = x;\n-\t\t      char *y = name;\n-\t\t      int flag = 0;\n-\n-\t\t      /* Copy all of NAME into BUF, but put __ after\n-\t\t\t every -D and at the end of each arg,  */\n-\t\t      while (1)\n-\t\t\t{\n-\t\t\t  if (! strncmp (y, \"-D\", 2))\n-\t\t\t    {\n-\t\t\t      *x++ = '-';\n-\t\t\t      *x++ = 'D';\n-\t\t\t      *x++ = '_';\n-\t\t\t      *x++ = '_';\n-\t\t\t      y += 2;\n-\t\t\t      flag = 1;\n-\t\t\t      continue;\n-\t\t\t    }\n-                          else if (flag && (*y == ' ' || *y == '\\t' || *y == '='\n-                                            || *y == '}' || *y == 0))\n-\t\t\t    {\n-\t\t\t      *x++ = '_';\n-\t\t\t      *x++ = '_';\n-\t\t\t      flag = 0;\n-\t\t\t    }\n-                          if (*y == 0)\n-\t\t\t    break;\n-\t\t\t  else\n-\t\t\t    *x++ = *y++;\n-\t\t\t}\n-\t\t      *x = 0;\n-\n-\t\t      value = do_spec_1 (buf, 0, NULL_PTR);\n-\t\t      if (value != 0)\n-\t\t\treturn value;\n-\t\t    }\n+\t\t  value = do_spec_1 (name, 0, NULL_PTR);\n+\t\t  if (value != 0)\n+\t\t    return value;\n \t\t}\n \n-\t      /* Discard the closing paren or bracket.  */\n+\t      /* Discard the closing paren.  */\n \t      if (*p)\n \t\tp++;\n \t    }\n \t    break;\n \n+\t    /* This used to be like %(, except that it modified -D options\n+\t       the same way as %P.  This has been obsoleted, as it was not\n+\t       useful for obtaining correct ISO C semantics for defines.  */\n+\t  case '[':\n+\t    error (\"use of obsolete %[ operator in specs\");\n+\t    return -1;\n+\n \t  case 'v':\n \t    {\n \t      int c1 = *p++;  /* Select first or second version number.  */"}]}