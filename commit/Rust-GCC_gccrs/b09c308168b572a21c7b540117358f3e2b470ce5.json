{"sha": "b09c308168b572a21c7b540117358f3e2b470ce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA5YzMwODE2OGI1NzJhMjFjN2I1NDAxMTczNThmM2UyYjQ3MGNlNQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-02-14T21:31:41Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-02-14T21:31:41Z"}, "message": "rx.h (GO_IF_MODE_DEPENDENT_ADDRESS): Remove.\n\n\t* config/rx/rx.h (GO_IF_MODE_DEPENDENT_ADDRESS): Remove.\n\t* config/rx/rx-protos.h (rx_is_mode_dependent_addr): Remove.\n\t* config/xtensa/xtensa.c (rx_is_mode_dependent_addr): Rename to...\n\t(rx_mode_dependent_address_p): ...this. Make static. Change argument\n\ttype to const_rtx.\n\t(TARGET_MODE_DEPENDENT_ADDRESS_P): Define.\n\nFrom-SVN: r170154", "tree": {"sha": "085736575e9329917583932b235566276d2913fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/085736575e9329917583932b235566276d2913fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b09c308168b572a21c7b540117358f3e2b470ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09c308168b572a21c7b540117358f3e2b470ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09c308168b572a21c7b540117358f3e2b470ce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09c308168b572a21c7b540117358f3e2b470ce5/comments", "author": null, "committer": null, "parents": [{"sha": "d634083bd4b4d5ca55b47c3a5f17083e0fba61f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d634083bd4b4d5ca55b47c3a5f17083e0fba61f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d634083bd4b4d5ca55b47c3a5f17083e0fba61f3"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "0814cc8b73cc4f395b31b1b8009ef4fa468a24b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09c308168b572a21c7b540117358f3e2b470ce5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09c308168b572a21c7b540117358f3e2b470ce5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b09c308168b572a21c7b540117358f3e2b470ce5", "patch": "@@ -1,3 +1,12 @@\n+2011-02-14  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/rx/rx.h (GO_IF_MODE_DEPENDENT_ADDRESS): Remove.\n+\t* config/rx/rx-protos.h (rx_is_mode_dependent_addr): Remove.\n+\t* config/xtensa/xtensa.c (rx_is_mode_dependent_addr): Rename to...\n+\t(rx_mode_dependent_address_p): ...this. Make static. Change argument\n+\ttype to const_rtx.\n+\t(TARGET_MODE_DEPENDENT_ADDRESS_P): Define.\n+\n 2011-02-14  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/stormy16/constraints.md: New file."}, {"sha": "a6ae416e6dc2c9a3edca9037cedcf338f7de91ae", "filename": "gcc/config/rx/rx-protos.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09c308168b572a21c7b540117358f3e2b470ce5/gcc%2Fconfig%2Frx%2Frx-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09c308168b572a21c7b540117358f3e2b470ce5/gcc%2Fconfig%2Frx%2Frx-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx-protos.h?ref=b09c308168b572a21c7b540117358f3e2b470ce5", "patch": "@@ -1,5 +1,5 @@\n /* Exported function prototypes from the Renesas RX backend.\n-   Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Red Hat.\n \n    This file is part of GCC.\n@@ -35,7 +35,6 @@ extern void             rx_emit_stack_pushm (rtx *);\n extern void\t\trx_expand_epilogue (bool);\n extern char *\t\trx_gen_move_template (rtx *, bool);\n extern bool\t\trx_is_legitimate_constant (rtx);\n-extern bool \t\trx_is_mode_dependent_addr (rtx);\n extern bool\t\trx_is_restricted_memory_address (rtx, Mmode);\n extern void\t\trx_notice_update_cc (rtx body, rtx insn);\n extern void\t\trx_split_cbranch (Mmode, Rcode, rtx, rtx, rtx);"}, {"sha": "6b179e7b9a35de1dfe358155a72165aadebcccce", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09c308168b572a21c7b540117358f3e2b470ce5/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09c308168b572a21c7b540117358f3e2b470ce5/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=b09c308168b572a21c7b540117358f3e2b470ce5", "patch": "@@ -199,8 +199,10 @@ rx_is_restricted_memory_address (rtx mem, enum machine_mode mode)\n     }\n }\n \n-bool\n-rx_is_mode_dependent_addr (rtx addr)\n+/* Implement TARGET_MODE_DEPENDENT_ADDRESS_P.  */\n+\n+static bool\n+rx_mode_dependent_address_p (const_rtx addr)\n {\n   if (GET_CODE (addr) == CONST)\n     addr = XEXP (addr, 0);\n@@ -2774,6 +2776,9 @@ rx_match_ccmode (rtx insn, enum machine_mode cc_mode)\n #undef  TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P\t\trx_is_legitimate_address\n \n+#undef  TARGET_MODE_DEPENDENT_ADDRESS_P\n+#define TARGET_MODE_DEPENDENT_ADDRESS_P\t\trx_mode_dependent_address_p\n+\n #undef  TARGET_ALLOCATE_STACK_SLOTS_FOR_ARGS\n #define TARGET_ALLOCATE_STACK_SLOTS_FOR_ARGS\trx_allocate_stack_slots_for_args\n "}, {"sha": "99d0106cf29bd0698cfb8d82266a96704430026a", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b09c308168b572a21c7b540117358f3e2b470ce5/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b09c308168b572a21c7b540117358f3e2b470ce5/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=b09c308168b572a21c7b540117358f3e2b470ce5", "patch": "@@ -1,5 +1,5 @@\n /* GCC backend definitions for the Renesas RX processor.\n-   Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Red Hat.\n \n    This file is part of GCC.\n@@ -288,14 +288,6 @@ enum reg_class\n     ( (REG_P (X)\t\t\t\t\t\t\\\n        || (GET_CODE (X) == SUBREG\t\t\t\t\\\n \t   && REG_P (SUBREG_REG (X))))))\n-\n-#define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR, LABEL)\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (rx_is_mode_dependent_addr (ADDR))\t\t\\\n-        goto LABEL;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n \f\n \n #define RETURN_ADDR_RTX(COUNT, FRAMEADDR)\t\t\t\t\\"}]}