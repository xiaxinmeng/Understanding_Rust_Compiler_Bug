{"sha": "d9fea2c63da99cd8bbb869705f43401bf323a94f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlmZWEyYzYzZGE5OWNkOGJiYjg2OTcwNWY0MzQwMWJmMzIzYTk0Zg==", "commit": {"author": {"name": "Dragan Mladjenovic", "email": "dmladjenovic@wavecomp.com", "date": "2019-05-17T16:28:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-05-17T16:28:28Z"}, "message": "mips.c (mips_dwarf_frame_reg_mode): Replace TARGET_FLOAT64 with !TARGET_FLOAT32, thus handling both fp64 and fpxx modes.\n\n\t* config/mips/mips.c (mips_dwarf_frame_reg_mode): Replace\n\tTARGET_FLOAT64 with !TARGET_FLOAT32, thus handling both fp64\n\tand fpxx modes.\n\n\t* g++.dg/eh/o32-fp.C: New.\n\t* gcc.target/mips/dwarfregtable-1.c: New.\n\t* gcc.target/mips/dwarfregtable-2.c: New.\n\t* gcc.target/mips/dwarfregtable-3.c: New.\n\t* gcc.target/mips/dwarfregtable-4.c: New.\n\t* gcc.target/mips/dwarfregtable.h: New.\n\nFrom-SVN: r271331", "tree": {"sha": "1552c5dd37268702d893cd46b3f8b92da5c435ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1552c5dd37268702d893cd46b3f8b92da5c435ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9fea2c63da99cd8bbb869705f43401bf323a94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9fea2c63da99cd8bbb869705f43401bf323a94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9fea2c63da99cd8bbb869705f43401bf323a94f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9fea2c63da99cd8bbb869705f43401bf323a94f/comments", "author": null, "committer": null, "parents": [{"sha": "6f1becb66055c351fb9a44563ce7153dbf6487aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f1becb66055c351fb9a44563ce7153dbf6487aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f1becb66055c351fb9a44563ce7153dbf6487aa"}], "stats": {"total": 106, "additions": 105, "deletions": 1}, "files": [{"sha": "d89be8e2172898c004001804bad7d8f6b2a603a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -1,3 +1,9 @@\n+2019-05-17  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n+\n+\t* config/mips/mips.c (mips_dwarf_frame_reg_mode): Replace\n+\tTARGET_FLOAT64 with !TARGET_FLOAT32, thus handling both fp64\n+\tand fpxx modes.\n+\n 2019-05-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/90497"}, {"sha": "42cafed84ab852d3792fa0958c62e0222b70486d", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -9588,7 +9588,7 @@ mips_dwarf_frame_reg_mode (int regno)\n {\n   machine_mode mode = default_dwarf_frame_reg_mode (regno);\n \n-  if (FP_REG_P (regno) && mips_abi == ABI_32 && TARGET_FLOAT64)\n+  if (FP_REG_P (regno) && mips_abi == ABI_32 && !TARGET_FLOAT32)\n     mode = SImode;\n \n   return mode;"}, {"sha": "a15def5c12c67e8826116b64a2fa40c2c6712b05", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -1,3 +1,12 @@\n+2019-05-17  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n+\n+\t* g++.dg/eh/o32-fp.C: New.\n+\t* gcc.target/mips/dwarfregtable-1.c: New.\n+\t* gcc.target/mips/dwarfregtable-2.c: New.\n+\t* gcc.target/mips/dwarfregtable-3.c: New.\n+\t* gcc.target/mips/dwarfregtable-4.c: New.\n+\t* gcc.target/mips/dwarfregtable.h: New.\n+\n 2019-05-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/x86_64/abi/test_varargs-m128.c: New file."}, {"sha": "08fa51bc2038658397e65dd1e04e67c1a61b3859", "filename": "gcc/testsuite/g++.dg/eh/o32-fp.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fo32-fp.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fo32-fp.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fo32-fp.C?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -0,0 +1,47 @@\n+// Test whether call saved float are restored properly for O32 ABI\n+// { dg-do run { target { { { mips*-*-linux* } && hard_float } && { ! mips64 } } } }\n+// { dg-options \"-O2\" }\n+\n+void __attribute__((noinline))\n+bar (void)\n+{\n+  throw 1;\n+}\n+\n+void __attribute__((noinline))\n+foo (void)\n+{\n+  register double f20 __asm__ (\"f20\") = 0.0;\n+  register double f22 __asm__ (\"f22\") = 0.0;\n+  register double f24 __asm__ (\"f24\") = 0.0;\n+  register double f26 __asm__ (\"f26\") = 0.0;\n+  register double f28 __asm__ (\"f28\") = 0.0;\n+  register double f30 __asm__ (\"f30\") = 0.0;\n+  __asm__ __volatile__(\"\":\"+f\"(f20),\"+f\"(f22),\"+f\"(f24),\"+f\"(f26),\"+f\"(f30));\n+  bar ();\n+}\n+\n+int\n+main (void)\n+{\n+  register double f20 __asm__ (\"f20\") = 12.0;\n+  register double f22 __asm__ (\"f22\") = 13.0;\n+  register double f24 __asm__ (\"f24\") = 14.0;\n+  register double f26 __asm__ (\"f26\") = 15.0;\n+  register double f28 __asm__ (\"f28\") = 16.0;\n+  register double f30 __asm__ (\"f30\") = 17.0;\n+\n+  try\n+    {\n+      foo ();\n+    }\n+  catch (...)\n+    {\n+      __asm__ (\"\":\"+f\"(f20),\"+f\"(f22),\"+f\"(f24),\"+f\"(f26),\"+f\"(f30));\n+    }\n+\n+  if (f20 != 12.0 || f22 != 13.0 || f24 != 14.0\n+      || f26 != 15.0 || f28 != 16.0 || f30 != 17.0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "93d0844e6e82c719bec16a4b832192f02b228b16", "filename": "gcc/testsuite/gcc.target/mips/dwarfregtable-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-1.c?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -0,0 +1,5 @@\n+/* Check if content of dwarf reg size table matches the expected.  */\n+/* { dg-do run } */\n+/* { dg-options \"-mabi=32 -mfp32\" } */\n+\n+#include \"dwarfregtable.h\""}, {"sha": "c6dea942a1364c528d8c138e42498950fb45f3b4", "filename": "gcc/testsuite/gcc.target/mips/dwarfregtable-2.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-2.c?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -0,0 +1,5 @@\n+/* Check if content of dwarf reg size table matches the expected.  */\n+/* { dg-do run } */\n+/* { dg-options \"-mabi=32 -mfpxx\" } */\n+\n+#include \"dwarfregtable.h\""}, {"sha": "87937c4f0e119b08d9221e7e507edb0b20be3831", "filename": "gcc/testsuite/gcc.target/mips/dwarfregtable-3.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-3.c?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -0,0 +1,5 @@\n+/* Check if content of dwarf reg size table matches the expected.  */\n+/* { dg-do run } */\n+/* { dg-options \"-mabi=32 -mfp64\" } */\n+\n+#include \"dwarfregtable.h\""}, {"sha": "2dd6dea3be733e4f52e1ff34c9a51f4fffd3c1ac", "filename": "gcc/testsuite/gcc.target/mips/dwarfregtable-4.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable-4.c?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -0,0 +1,5 @@\n+/* Check if content of dwarf reg size table matches the expected.  */\n+/* { dg-do run } */\n+/* { dg-options \"-mabi=32 -mfp64 -modd-spreg\" } */\n+\n+#include \"dwarfregtable.h\""}, {"sha": "403f65fb7b4ef456c0dde9fa055552005c0cd92b", "filename": "gcc/testsuite/gcc.target/mips/dwarfregtable.h", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9fea2c63da99cd8bbb869705f43401bf323a94f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdwarfregtable.h?ref=d9fea2c63da99cd8bbb869705f43401bf323a94f", "patch": "@@ -0,0 +1,22 @@\n+\n+typedef unsigned Unwind_Word __attribute__((__mode__(__unwind_word__)));\n+\n+#define DWARF_FRAME_REGISTERS 188\n+\n+static unsigned char ref_dwarf_reg_size_table[DWARF_FRAME_REGISTERS + 1] =\n+  {\n+    [0 ... 66] =  sizeof (Unwind_Word),\n+    [80 ... 181] = sizeof (Unwind_Word)\n+  };\n+\n+static unsigned char dwarf_reg_size_table[DWARF_FRAME_REGISTERS + 1] = {};\n+\n+int\n+main (void)\n+{\n+  __builtin_init_dwarf_reg_size_table (dwarf_reg_size_table);\n+  if (__builtin_memcmp (ref_dwarf_reg_size_table,\n+                       dwarf_reg_size_table, DWARF_FRAME_REGISTERS + 1) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}