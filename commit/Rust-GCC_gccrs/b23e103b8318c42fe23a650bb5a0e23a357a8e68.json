{"sha": "b23e103b8318c42fe23a650bb5a0e23a357a8e68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIzZTEwM2I4MzE4YzQyZmUyM2E2NTBiYjVhMGUyM2EzNTdhOGU2OA==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-02-13T22:39:00Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-02-13T22:39:00Z"}, "message": "cp-tree.h (warn_hidden): Remove prototype.\n\n\t* cp-tree.h (warn_hidden): Remove prototype.\n\t* class.c (warn_hidden): Make static.\n\nFrom-SVN: r110936", "tree": {"sha": "b244b6ff3874ff4ca8cc9b0418f41d841c48c975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b244b6ff3874ff4ca8cc9b0418f41d841c48c975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b23e103b8318c42fe23a650bb5a0e23a357a8e68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23e103b8318c42fe23a650bb5a0e23a357a8e68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b23e103b8318c42fe23a650bb5a0e23a357a8e68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23e103b8318c42fe23a650bb5a0e23a357a8e68/comments", "author": null, "committer": null, "parents": [{"sha": "ae00383baa7b210ce5e74efead6ac22834ae927a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae00383baa7b210ce5e74efead6ac22834ae927a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae00383baa7b210ce5e74efead6ac22834ae927a"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "b221876215cf354bc07e0129c05396f58d6a4e60", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e103b8318c42fe23a650bb5a0e23a357a8e68/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e103b8318c42fe23a650bb5a0e23a357a8e68/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b23e103b8318c42fe23a650bb5a0e23a357a8e68", "patch": "@@ -1,5 +1,8 @@\n 2006-02-13  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n+\t* cp-tree.h (warn_hidden): Remove prototype.\n+\t* class.c (warn_hidden): Make static.\n+\n \t* cp-tree.h (build_type_conversion): Remove prototype.\n \t* cvt.c (build_type_conversion): Add prototype, make static.\n "}, {"sha": "19d18ccf14ef8e4b27590ba01657044188264cb4", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e103b8318c42fe23a650bb5a0e23a357a8e68/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e103b8318c42fe23a650bb5a0e23a357a8e68/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=b23e103b8318c42fe23a650bb5a0e23a357a8e68", "patch": "@@ -2349,7 +2349,7 @@ check_for_override (tree decl, tree ctype)\n /* Warn about hidden virtual functions that are not overridden in t.\n    We know that constructors and destructors don't apply.  */\n \n-void\n+static void\n warn_hidden (tree t)\n {\n   VEC(tree,gc) *method_vec = CLASSTYPE_METHOD_VEC (t);"}, {"sha": "dd10d6d317daffc081347059136a14dd27ddcdd9", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b23e103b8318c42fe23a650bb5a0e23a357a8e68/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b23e103b8318c42fe23a650bb5a0e23a357a8e68/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b23e103b8318c42fe23a650bb5a0e23a357a8e68", "patch": "@@ -3734,7 +3734,6 @@ extern void cxx_print_error_function\t(struct diagnostic_context *,\n \t\t\t\t\t\t const char *);\n extern void build_self_reference\t\t(void);\n extern int same_signature_p\t\t\t(tree, tree);\n-extern void warn_hidden\t\t\t\t(tree);\n extern void maybe_add_class_template_decl_list\t(tree, tree, int);\n extern void unreverse_member_declarations\t(tree);\n extern void invalidate_class_lookup_cache\t(void);"}]}