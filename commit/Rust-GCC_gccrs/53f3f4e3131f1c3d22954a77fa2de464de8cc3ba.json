{"sha": "53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmM2Y0ZTMxMzFmMWMzZDIyOTU0YTc3ZmEyZGU0NjRkZThjYzNiYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-09-22T07:02:24Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-09-22T07:02:24Z"}, "message": "decl.c (gnat_to_gnu_entity): Adjust comment.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Adjust comment.\n\t* gcc-interface/utils.c (gnat_write_global_declarations): Fix typo.\n\nFrom-SVN: r215445", "tree": {"sha": "e1846e971137c71f2a13cbebf290dbf4e2e6248c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1846e971137c71f2a13cbebf290dbf4e2e6248c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba/comments", "author": null, "committer": null, "parents": [{"sha": "aecd88f78f4f88cc5f1365ec18b57e8e0cda638d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "447068ea2420e8f49bb505fe9d7c2ea97039e5ef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "patch": "@@ -1,3 +1,8 @@\n+2014-09-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Adjust comment.\n+\t* gcc-interface/utils.c (gnat_write_global_declarations): Fix typo.\n+\n 2014-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc-interface/Make-lang.in (check_acats_numbers0,\n@@ -355,20 +360,20 @@\n \n 2014-08-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n-        * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Component>: Deal with\n-        renaming discriminants in tagged types first.\n-        * gcc-interface/trans.c (gnat_to_gnu) <N_Selected_Component>: Test\n-        the underlying type of the prefix.\n-        (Pragma_to_gnu, case Pragma_Warning): Ignore Reason => \"...\"\n-        (process_freeze_entity): Reset the nodes of\n-        all the view of a type, if any.\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Component>: Deal with\n+\trenaming discriminants in tagged types first.\n+\t* gcc-interface/trans.c (gnat_to_gnu) <N_Selected_Component>: Test\n+\tthe underlying type of the prefix.\n+\t(Pragma_to_gnu, case Pragma_Warning): Ignore Reason => \"...\"\n+\t(process_freeze_entity): Reset the nodes of all the view of a type,\n+\tif any.\n \n 2014-08-04  Doug Rupp  <rupp@adacore.com>\n \t    Olivier Hainque  <hainque@adacore.com>\n \n-        * gcc-interface/Makefile.in (x86 VxWorks): Add filter-out for vxworks7\n+\t* gcc-interface/Makefile.in (x86 VxWorks): Add filter-out for vxworks7\n \tand remove incorrect EH_MECHANISM macros.\n-        Add sigtramp.h to EXTRA_LIBGNAT_SRCS when we add sigtramp-vxworks.o to\n+\tAdd sigtramp.h to EXTRA_LIBGNAT_SRCS when we add sigtramp-vxworks.o to\n \tEXTRA_LIBGNAT_OBJS.\n \n 2014-08-04  Robert Dewar  <dewar@adacore.com>\n@@ -2170,8 +2175,8 @@\n 2014-07-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (lookup_and_insert_pad_type): New function\n-        extracted from...\n-        (maybe_pad_type): ...here.  Call it to canonicalize the pad type.\n+\textracted from...\n+\t(maybe_pad_type): ...here.  Call it to canonicalize the pad type.\n \t* gcc-interface/gigi.h: Update comment.\n \n 2014-07-31  Javier Miranda  <miranda@adacore.com>\n@@ -7884,7 +7889,7 @@\n \t* gcc-interface/misc.c (internal_error_function): Likewise.\n \n 2014-04-15  Eric Botcazou  <ebotcazou@adacore.com>\n-            Pierre-Marie de Rodat  <derodat@adacore.com>\n+\t    Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Create a mere\n \tscalar constant instead of a reference for renaming of scalar literal.\n@@ -7945,7 +7950,7 @@\n \t(gnat_gimplify_stmt) <LOOP_STMT>: Propagate loop hints.\n \n 2014-04-14  Eric Botcazou  <ebotcazou@adacore.com>\n-            Robert Dewar  <dewar@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n \n \t* opt.ads (Suppress_Back_Annotation): Remove as unused.\n \t* fe.h (Back_Annotate_Rep_Info): Likewise."}, {"sha": "b68870d4273da9a1180d706f1c3d7848c626a2c6", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "patch": "@@ -2374,7 +2374,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t we can just use the high bound of the index type.  */\n \t      else if ((Nkind (gnat_index) == N_Range\n \t\t        && cannot_be_superflat_p (gnat_index))\n-\t\t       /* Bit-Packed Array Types are never superflat.  */\n+\t\t       /* Bit-Packed Array Impl. Types are never superflat.  */\n \t\t       || (Is_Packed_Array_Impl_Type (gnat_entity)\n \t\t\t   && Is_Bit_Packed_Array\n \t\t\t      (Original_Array_Type (gnat_entity))))"}, {"sha": "79b0039bf3211709b1f21047b2e6b9bd10a6c9be", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "patch": "@@ -5168,7 +5168,6 @@ gnat_write_global_declarations (void)\n       TREE_STATIC (dummy_global) = 1;\n       node = varpool_node::get_create (dummy_global);\n       node->definition = 1;\n-      node->definition = 1;\n       node->force_output = 1;\n \n       while (!types_used_by_cur_var_decl->is_empty ())"}]}