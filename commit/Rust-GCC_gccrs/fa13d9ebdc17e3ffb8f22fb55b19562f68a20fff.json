{"sha": "fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmExM2Q5ZWJkYzE3ZTNmZmI4ZjIyZmI1NWIxOTU2MmY2OGEyMGZmZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-07T09:18:46Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2020-01-07T09:18:46Z"}, "message": "Document cloning for the target_clone attribute.\n\n2020-01-07  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/83411\n\t* doc/extend.texi: Explain cloning for target_clone\n\tattribute.\n\nFrom-SVN: r279948", "tree": {"sha": "a56d367cf8d82c293219f0c6f4d8c5aec6d96f63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a56d367cf8d82c293219f0c6f4d8c5aec6d96f63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a924bffba921d568fbd65210857e1b5031776bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a924bffba921d568fbd65210857e1b5031776bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a924bffba921d568fbd65210857e1b5031776bb8"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "fa5101d48f77c00fc12b043ffaeda1aac09b8981", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff", "patch": "@@ -1,3 +1,9 @@\n+2020-01-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/83411\n+\t* doc/extend.texi: Explain cloning for target_clone\n+\tattribute.\n+\n 2020-01-07  Martin Liska  <mliska@suse.cz>\n \n \tPR tree-optimization/92860"}, {"sha": "ec99c38a607f66a0e735583ddd4a707780f773cd", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=fa13d9ebdc17e3ffb8f22fb55b19562f68a20fff", "patch": "@@ -3768,6 +3768,12 @@ the @code{ifunc} attribute above) that dynamically selects a clone\n suitable for current architecture.  The resolver is created only if there\n is a usage of a function with @code{target_clones} attribute.\n \n+Note that any subsequent call of a function without @code{target_clone}\n+from a @code{target_clone} caller will not lead to copying\n+(target clone) of the called function.\n+If you want to enforce such behaviour,\n+we recommend declaring the calling function with the @code{flatten} attribute?\n+\n @item unused\n @cindex @code{unused} function attribute\n This attribute, attached to a function, means that the function is meant"}]}