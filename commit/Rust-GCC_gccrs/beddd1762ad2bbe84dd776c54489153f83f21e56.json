{"sha": "beddd1762ad2bbe84dd776c54489153f83f21e56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkZGQxNzYyYWQyYmJlODRkZDc3NmM1NDQ4OTE1M2Y4M2YyMWU1Ng==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-10-27T16:13:16Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-11-03T08:13:07Z"}, "message": "[OpenACC] More precise diagnostics for 'gang', 'worker', 'vector' clauses with arguments on 'loop' only allowed in 'kernels' regions\n\nInstead of at the location of the 'loop' directive, 'error_at' the location of\nthe improper clause, and 'inform' at the location of the enclosing parent\ncompute construct/routine.\n\nThe Fortran testcases come with some XFAILing, to be resolved later.\n\n\tgcc/\n\t* omp-low.c (scan_omp_for) <OpenACC>: More precise diagnostics for\n\t'gang', 'worker', 'vector' clauses with arguments only allowed in\n\t'kernels' regions.\n\tgcc/testsuite/\n\t* c-c++-common/goacc/pr92793-1.c: Extend.\n\t* gfortran.dg/goacc/pr92793-1.f90: Likewise.", "tree": {"sha": "286689615ae9379690336505df761459d371cfd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/286689615ae9379690336505df761459d371cfd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beddd1762ad2bbe84dd776c54489153f83f21e56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beddd1762ad2bbe84dd776c54489153f83f21e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beddd1762ad2bbe84dd776c54489153f83f21e56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beddd1762ad2bbe84dd776c54489153f83f21e56/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5e18dd9c7dacc9671044fc669bd5c1b26b6bdba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5e18dd9c7dacc9671044fc669bd5c1b26b6bdba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5e18dd9c7dacc9671044fc669bd5c1b26b6bdba"}], "stats": {"total": 118, "additions": 108, "deletions": 10}, "files": [{"sha": "de5142f979b00ab353a4edfdbab481e296f98d9b", "filename": "gcc/omp-low.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beddd1762ad2bbe84dd776c54489153f83f21e56/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beddd1762ad2bbe84dd776c54489153f83f21e56/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=beddd1762ad2bbe84dd776c54489153f83f21e56", "patch": "@@ -2418,30 +2418,39 @@ scan_omp_for (gomp_for *stmt, omp_context *outer_ctx)\n       if (!tgt || is_oacc_parallel_or_serial (tgt))\n \tfor (tree c = clauses; c; c = OMP_CLAUSE_CHAIN (c))\n \t  {\n-\t    char const *check = NULL;\n-\n+\t    tree c_op0;\n \t    switch (OMP_CLAUSE_CODE (c))\n \t      {\n \t      case OMP_CLAUSE_GANG:\n-\t\tcheck = \"gang\";\n+\t\tc_op0 = OMP_CLAUSE_GANG_EXPR (c);\n \t\tbreak;\n \n \t      case OMP_CLAUSE_WORKER:\n-\t\tcheck = \"worker\";\n+\t\tc_op0 = OMP_CLAUSE_WORKER_EXPR (c);\n \t\tbreak;\n \n \t      case OMP_CLAUSE_VECTOR:\n-\t\tcheck = \"vector\";\n+\t\tc_op0 = OMP_CLAUSE_VECTOR_EXPR (c);\n \t\tbreak;\n \n \t      default:\n-\t\tbreak;\n+\t\tcontinue;\n \t      }\n \n-\t    if (check && OMP_CLAUSE_OPERAND (c, 0))\n-\t      error_at (gimple_location (stmt),\n-\t\t\t\"argument not permitted on %qs clause in\"\n-\t\t\t\" OpenACC %<parallel%> or %<serial%>\", check);\n+\t    if (c_op0)\n+\t      {\n+\t\terror_at (OMP_CLAUSE_LOCATION (c),\n+\t\t\t  \"argument not permitted on %qs clause\",\n+\t\t\t  omp_clause_code_name[OMP_CLAUSE_CODE (c)]);\n+\t\tif (tgt)\n+\t\t  inform (gimple_location (outer_ctx->stmt),\n+\t\t\t  \"enclosing parent compute construct\");\n+\t\telse if (oacc_get_fn_attrib (current_function_decl))\n+\t\t  inform (DECL_SOURCE_LOCATION (current_function_decl),\n+\t\t\t  \"enclosing routine\");\n+\t\telse\n+\t\t  gcc_unreachable ();\n+\t      }\n \t  }\n \n       if (tgt && is_oacc_kernels (tgt))"}, {"sha": "77ebb20265cf6624d62c4127331770afc8a90d22", "filename": "gcc/testsuite/c-c++-common/goacc/pr92793-1.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beddd1762ad2bbe84dd776c54489153f83f21e56/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr92793-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beddd1762ad2bbe84dd776c54489153f83f21e56/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr92793-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr92793-1.c?ref=beddd1762ad2bbe84dd776c54489153f83f21e56", "patch": "@@ -54,3 +54,40 @@ reduction(-:sum  ) /* { dg-line sum2 } */ \\\n       }\n   }\n }\n+\n+\n+void\n+a_sl() {\n+#pragma acc serial loop /* { dg-message \"9: enclosing parent compute construct\" } */ \\\n+    gang(num:5) /* { dg-error \"5: argument not permitted on 'gang' clause\" } */ \\\n+  worker(num:5) /* { dg-error \"3: argument not permitted on 'worker' clause\" } */ \\\n+   vector(length:5) /* { dg-error \"4: argument not permitted on 'vector' clause\" } */\n+  for (int i = 0; i < 10; i++)\n+    ;\n+}\n+\n+void\n+a_s_l() {\n+#pragma acc serial /* { dg-message \"9: enclosing parent compute construct\" } */\n+  {\n+#pragma acc loop \\\n+       gang(num:5) /* { dg-error \"8: argument not permitted on 'gang' clause\" } */ \\\n+   worker(num:5) /* { dg-error \"4: argument not permitted on 'worker' clause\" } */ \\\n+  vector(length:5) /* { dg-error \"3: argument not permitted on 'vector' clause\" } */\n+    for (int i = 0; i < 10; i++)\n+      ;\n+  }\n+}\n+\n+void a_r();\n+#pragma acc routine(a_r)\n+\n+void\n+a_r() { /* { dg-message \"1: enclosing routine\" } */\n+#pragma acc loop \\\n+   gang(num:5) /* { dg-error \"4: argument not permitted on 'gang' clause\" } */ \\\n+    worker(num:5) /* { dg-error \"5: argument not permitted on 'worker' clause\" } */ \\\n+  vector(length:5) /* { dg-error \"3: argument not permitted on 'vector' clause\" } */\n+  for (int i = 0; i < 10; i++)\n+    ;\n+}"}, {"sha": "23d6886580a1fbc9fe99bb2f8dd62b3e515f419a", "filename": "gcc/testsuite/gfortran.dg/goacc/pr92793-1.f90", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beddd1762ad2bbe84dd776c54489153f83f21e56/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr92793-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beddd1762ad2bbe84dd776c54489153f83f21e56/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr92793-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr92793-1.f90?ref=beddd1762ad2bbe84dd776c54489153f83f21e56", "patch": "@@ -45,3 +45,55 @@ subroutine check ()\n   end do\n !$acc end  parallel\n end subroutine check\n+\n+\n+subroutine gwv_sl ()\n+  implicit none (type, external)\n+  integer :: i\n+\n+  !$acc serial loop &\n+  !$acc &       gang(num:5) & ! { dg-error \"argument not permitted on 'gang' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & & ! { dg-bogus \"14: argument not permitted on 'gang' clause\" \"TODO\" { xfail *-*-* } .+6 }\n+  !$acc &    worker(num:5) & ! { dg-error \"argument not permitted on 'worker' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & & ! { dg-bogus \"14: argument not permitted on 'worker' clause\" \"TODO\" { xfail *-*-* } .+4 }\n+  !$acc &     vector(length:5) & ! { dg-error \"argument not permitted on 'vector' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & ! { dg-bogus \"14: argument not permitted on 'vector' clause\" \"TODO\" { xfail *-*-* } .+2 }\n+  ! { dg-message \"99: enclosing parent compute construct\" \"\" { target *-*-* } .-1 }\n+  do i = 0, 10\n+  end do\n+  !$acc end serial loop\n+end subroutine gwv_sl\n+\n+subroutine gwv_s_l ()\n+  implicit none (type, external)\n+  integer :: i\n+\n+  !$acc serial ! { dg-message \"72: enclosing parent compute construct\" }\n+  !$acc loop &\n+  !$acc &         gang(num:5) & ! { dg-error \"argument not permitted on 'gang' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & & ! { dg-bogus \"14: argument not permitted on 'gang' clause\" \"TODO\" { xfail *-*-* } .+5 }\n+  !$acc &   worker(num:5) & ! { dg-error \"argument not permitted on 'worker' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & & ! { dg-bogus \"14: argument not permitted on 'worker' clause\" \"TODO\" { xfail *-*-* } .+3 }\n+  !$acc &      vector(length:5) & ! { dg-error \"argument not permitted on 'vector' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & ! { dg-bogus \"14: argument not permitted on 'vector' clause\" \"TODO\" { xfail *-*-* } .+1 }\n+  do i = 0, 10\n+  end do\n+  !$acc end serial\n+end subroutine gwv_s_l\n+\n+subroutine gwv_r () ! { dg-message \"16: enclosing routine\" }\n+  implicit none (type, external)\n+  integer :: i\n+\n+  !$acc routine(gwv_r)\n+\n+  !$acc loop &\n+  !$acc &     gang(num:5) & ! { dg-error \"argument not permitted on 'gang' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & & ! { dg-bogus \"14: argument not permitted on 'gang' clause\" \"TODO\" { xfail *-*-* } .+5 }\n+  !$acc &      worker(num:5) & ! { dg-error \"argument not permitted on 'worker' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & & ! { dg-bogus \"14: argument not permitted on 'worker' clause\" \"TODO\" { xfail *-*-* } .+3 }\n+  !$acc &    vector(length:5) & ! { dg-error \"argument not permitted on 'vector' clause\" \"TODO\" { xfail *-*-* } }\n+  !$acc & ! { dg-bogus \"14: argument not permitted on 'vector' clause\" \"TODO\" { xfail *-*-* } .+1 }\n+  do i = 0, 10\n+  end do\n+end subroutine gwv_r"}]}