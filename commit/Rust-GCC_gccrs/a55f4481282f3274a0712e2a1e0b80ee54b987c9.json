{"sha": "a55f4481282f3274a0712e2a1e0b80ee54b987c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU1ZjQ0ODEyODJmMzI3NGEwNzEyZTJhMWUwYjgwZWU1NGI5ODdjOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2003-12-31T23:02:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-12-31T23:02:44Z"}, "message": "print-rtl.c (print_rtx): For hard register...\n\n\t* print-rtl.c (print_rtx): For hard register, write out register\n\tnumber and register name instead of calling PRINT_REG.\n\t* defaults.h (PRINT_REG): Deleted.\n\t* config/i386/i386.c (print_reg): Remove handling of CODE of -1.\n\tMove comments here from i386.h.\n\t(print_operand, print_operand_address): Call print_reg directly.\n\t* config/i386/i386.h (PRINT_REG): Deleted.\n\nFrom-SVN: r75282", "tree": {"sha": "5f258284a00af9c99b77923dab2e2c78109e1b51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f258284a00af9c99b77923dab2e2c78109e1b51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a55f4481282f3274a0712e2a1e0b80ee54b987c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a55f4481282f3274a0712e2a1e0b80ee54b987c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a55f4481282f3274a0712e2a1e0b80ee54b987c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a55f4481282f3274a0712e2a1e0b80ee54b987c9/comments", "author": null, "committer": null, "parents": [{"sha": "a5a8386f2d409144f400bd73d675f21e1b2396e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a8386f2d409144f400bd73d675f21e1b2396e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a8386f2d409144f400bd73d675f21e1b2396e8"}], "stats": {"total": 68, "additions": 30, "deletions": 38}, "files": [{"sha": "b197c751d409a9477448e432ecd5aff44a76b40e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a55f4481282f3274a0712e2a1e0b80ee54b987c9", "patch": "@@ -1,3 +1,13 @@\n+2003-12-31  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* print-rtl.c (print_rtx): For hard register, write out register\n+\tnumber and register name instead of calling PRINT_REG.\n+\t* defaults.h (PRINT_REG): Deleted.\n+\t* config/i386/i386.c (print_reg): Remove handling of CODE of -1.\n+\tMove comments here from i386.h.\n+\t(print_operand, print_operand_address): Call print_reg directly.\n+\t* config/i386/i386.h (PRINT_REG): Deleted.\n+\n 2003-12-31  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/ia64/hpux.h (TARGET_OS_CPP_BUILTINS): Define"}, {"sha": "2762f6349c19007a6143dbddcb14b830746e59b6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a55f4481282f3274a0712e2a1e0b80ee54b987c9", "patch": "@@ -6968,17 +6968,21 @@ put_condition_code (enum rtx_code code, enum machine_mode mode, int reverse,\n   fputs (suffix, file);\n }\n \n+/* Print the name of register X to FILE based on its machine mode and number.\n+   If CODE is 'w', pretend the mode is HImode.\n+   If CODE is 'b', pretend the mode is QImode.\n+   If CODE is 'k', pretend the mode is SImode.\n+   If CODE is 'q', pretend the mode is DImode.\n+   If CODE is 'h', pretend the reg is the `high' byte register.\n+   If CODE is 'y', print \"st(0)\" instead of \"st\", if the reg is stack op.  */\n+\n void\n print_reg (rtx x, int code, FILE *file)\n {\n-  /* Code -1 indicates we are called from print_rtx, and it is not\n-     an error for a virtual register to appear here.  */\n-  if (code == -1)\n-    code = 0;\n-  else if (REGNO (x) == ARG_POINTER_REGNUM\n-\t   || REGNO (x) == FRAME_POINTER_REGNUM\n-\t   || REGNO (x) == FLAGS_REG\n-\t   || REGNO (x) == FPSR_REG)\n+  if (REGNO (x) == ARG_POINTER_REGNUM\n+      || REGNO (x) == FRAME_POINTER_REGNUM\n+      || REGNO (x) == FLAGS_REG\n+      || REGNO (x) == FPSR_REG)\n     abort ();\n \n   if (ASSEMBLER_DIALECT == ASM_ATT || USER_LABEL_PREFIX[0] == 0)\n@@ -7389,9 +7393,7 @@ print_operand (FILE *file, rtx x, int code)\n     }\n \n   if (GET_CODE (x) == REG)\n-    {\n-      PRINT_REG (x, code, file);\n-    }\n+    print_reg (x, code, file);\n \n   else if (GET_CODE (x) == MEM)\n     {\n@@ -7570,11 +7572,11 @@ print_operand_address (FILE *file, rtx addr)\n \n \t  putc ('(', file);\n \t  if (base)\n-\t    PRINT_REG (base, 0, file);\n+\t    print_reg (base, 0, file);\n \t  if (index)\n \t    {\n \t      putc (',', file);\n-\t      PRINT_REG (index, 0, file);\n+\t      print_reg (index, 0, file);\n \t      if (scale != 1)\n \t\tfprintf (file, \",%d\", scale);\n \t    }\n@@ -7609,7 +7611,7 @@ print_operand_address (FILE *file, rtx addr)\n \t  putc ('[', file);\n \t  if (base)\n \t    {\n-\t      PRINT_REG (base, 0, file);\n+\t      print_reg (base, 0, file);\n \t      if (offset)\n \t\t{\n \t\t  if (INTVAL (offset) >= 0)\n@@ -7625,7 +7627,7 @@ print_operand_address (FILE *file, rtx addr)\n \t  if (index)\n \t    {\n \t      putc ('+', file);\n-\t      PRINT_REG (index, 0, file);\n+\t      print_reg (index, 0, file);\n \t      if (scale != 1)\n \t\tfprintf (file, \"*%d\", scale);\n \t    }"}, {"sha": "9ce250f4efe776393f6bcebcb847a1836b3a757c", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=a55f4481282f3274a0712e2a1e0b80ee54b987c9", "patch": "@@ -2720,7 +2720,7 @@ do {\t\t\t\t\t\t\t\\\n    For non floating point regs, the following are the HImode names.\n \n    For float regs, the stack top is sometimes referred to as \"%st(0)\"\n-   instead of just \"%st\".  PRINT_REG handles this with the \"y\" code.  */\n+   instead of just \"%st\".  PRINT_OPERAND handles this with the \"y\" code.  */\n \n #define HI_REGISTER_NAMES\t\t\t\t\t\t\\\n {\"ax\",\"dx\",\"cx\",\"bx\",\"si\",\"di\",\"bp\",\"sp\",\t\t\t\t\\\n@@ -2871,18 +2871,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define PRINT_OPERAND_PUNCT_VALID_P(CODE) \\\n   ((CODE) == '*' || (CODE) == '+' || (CODE) == '&')\n \n-/* Print the name of a register based on its machine mode and number.\n-   If CODE is 'w', pretend the mode is HImode.\n-   If CODE is 'b', pretend the mode is QImode.\n-   If CODE is 'k', pretend the mode is SImode.\n-   If CODE is 'q', pretend the mode is DImode.\n-   If CODE is 'h', pretend the reg is the `high' byte register.\n-   If CODE is 'y', print \"st(0)\" instead of \"st\", if the reg is stack op.\n-   If CODE is -1, it is not an error for X to be a virtual register.  */\n-\n-#define PRINT_REG(X, CODE, FILE)  \\\n-  print_reg ((X), (CODE), (FILE))\n-\n #define PRINT_OPERAND(FILE, X, CODE)  \\\n   print_operand ((FILE), (X), (CODE))\n "}, {"sha": "68ab0ab20b2e427bd2127e93e6b789365fd4ecc2", "filename": "gcc/defaults.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=a55f4481282f3274a0712e2a1e0b80ee54b987c9", "patch": "@@ -679,12 +679,6 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #define STACK_POINTER_OFFSET    0\n #endif\n \n-/* How to print out a register name.  */\n-#ifndef PRINT_REG\n-#define PRINT_REG(RTX, CODE, FILE) \\\n-  fprintf ((FILE), \"%s\", reg_names[REGNO (RTX)])\n-#endif\n-\n #ifndef LOCAL_REGNO\n #define LOCAL_REGNO(REGNO)  0\n #endif"}, {"sha": "f5e30fe978272480b8bba4dd1c4e3b13ea7002b3", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55f4481282f3274a0712e2a1e0b80ee54b987c9/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=a55f4481282f3274a0712e2a1e0b80ee54b987c9", "patch": "@@ -384,10 +384,8 @@ print_rtx (rtx in_rtx)\n \n #ifndef GENERATOR_FILE\n \t    if (GET_CODE (in_rtx) == REG && value < FIRST_PSEUDO_REGISTER)\n-\t      {\n-\t\tfputc (' ', outfile);\n-\t\tPRINT_REG (in_rtx, -1, outfile);\n-\t      }\n+\t      fprintf (outfile, \" %d %s\", REGNO (in_rtx),\n+\t\t       reg_names[REGNO (in_rtx)]);\n \t    else if (GET_CODE (in_rtx) == REG\n \t\t     && value <= LAST_VIRTUAL_REGISTER)\n \t      {"}]}