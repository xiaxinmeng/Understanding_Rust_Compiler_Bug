{"sha": "4351c21b9c472d35682fe1000aa23b392b85a914", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM1MWMyMWI5YzQ3MmQzNTY4MmZlMTAwMGFhMjNiMzkyYjg1YTkxNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-22T15:07:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-22T15:07:34Z"}, "message": "checks.adb (Determine_Range): Deal with values that might be invalid\n\n2008-08-22  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb (Determine_Range): Deal with values that might be invalid\n\n\t* opt.adb, opt.ads (Assume_No_Invalid_Values[_Config]): New configuration\n\tswitches.\n\n\t* par-prag.adb: Dummy entry for pragma Assume_No_Invalid_Values\n\n\t* sem_prag.adb: Implement pragma Assume_No_Default_Values\n\n\t* snames.adb, snames.ads, snames.h:\n\tAdd entries for pragma Assume_No_Invalid_Values\n\n\t* switch-c.adb: Add processing for -gnatB switch\n\n\t* usage.adb: Add entry for flag -gnatB (no bad invalid values)\n\nFrom-SVN: r139484", "tree": {"sha": "39eeab666d9c9d481fdac0dc571c6f231d614fab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39eeab666d9c9d481fdac0dc571c6f231d614fab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4351c21b9c472d35682fe1000aa23b392b85a914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4351c21b9c472d35682fe1000aa23b392b85a914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4351c21b9c472d35682fe1000aa23b392b85a914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4351c21b9c472d35682fe1000aa23b392b85a914/comments", "author": null, "committer": null, "parents": [{"sha": "575a1b32b7acd6ef04631160d4f8ccf9f7861479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575a1b32b7acd6ef04631160d4f8ccf9f7861479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575a1b32b7acd6ef04631160d4f8ccf9f7861479"}], "stats": {"total": 1785, "additions": 935, "deletions": 850}, "files": [{"sha": "7d2d66f83a7a4d53d6f81113da4a4fa75cf6b8e1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -1,3 +1,27 @@\n+2008-08-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb (Determine_Range): Deal with values that might be invalid\n+\n+\t* opt.adb, opt.ads (Assume_No_Invalid_Values[_Config]): New configuration\n+\tswitches.\n+\n+\t* par-prag.adb: Dummy entry for pragma Assume_No_Invalid_Values\n+\n+\t* sem_prag.adb: Implement pragma Assume_No_Default_Values\n+\n+\t* snames.adb, snames.ads, snames.h:\n+\tAdd entries for pragma Assume_No_Invalid_Values\n+\n+\t* switch-c.adb: Add processing for -gnatB switch\n+\n+\t* usage.adb: Add entry for flag -gnatB (no bad invalid values)\n+\n+2008-08-22  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Init_Statements): Transfer to the body of the\n+\tinit procedure all the expanded code associated with the spec of\n+\ttask types and protected types.\n+\n 2008-08-22  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_aggr.adb (Static_Array_Aggregate): Call Analyze_And_Resolve on the"}, {"sha": "12c5b64a9fc76dbad7d0ebfad8b6d39ff441c54c", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -3125,10 +3125,9 @@ package body Checks is\n       --  First step, change to use base type if the expression is an entity\n       --  which we do not know is valid.\n \n-      --  For now, we do not do this\n-\n-      if False and then Is_Entity_Name (N)\n+      if Is_Entity_Name (N)\n         and then not Is_Known_Valid (Entity (N))\n+        and then not Assume_No_Invalid_Values\n       then\n          Typ := Base_Type (Typ);\n       end if;"}, {"sha": "75ea7e8feec8db087f158a9d85d3bb7da4cd5c6b", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -49,6 +49,7 @@ package body Opt is\n       Ada_Version_Config                    := Ada_Version;\n       Ada_Version_Explicit_Config           := Ada_Version_Explicit;\n       Assertions_Enabled_Config             := Assertions_Enabled;\n+      Assume_No_Invalid_Values_Config       := Assume_No_Invalid_Values;\n       Check_Policy_List_Config              := Check_Policy_List;\n       Debug_Pragmas_Enabled_Config          := Debug_Pragmas_Enabled;\n       Dynamic_Elaboration_Checks_Config     := Dynamic_Elaboration_Checks;\n@@ -78,6 +79,7 @@ package body Opt is\n       Ada_Version                    := Save.Ada_Version;\n       Ada_Version_Explicit           := Save.Ada_Version_Explicit;\n       Assertions_Enabled             := Save.Assertions_Enabled;\n+      Assume_No_Invalid_Values       := Save.Assume_No_Invalid_Values;\n       Check_Policy_List              := Save.Check_Policy_List;\n       Debug_Pragmas_Enabled          := Save.Debug_Pragmas_Enabled;\n       Dynamic_Elaboration_Checks     := Save.Dynamic_Elaboration_Checks;\n@@ -102,6 +104,7 @@ package body Opt is\n       Save.Ada_Version                    := Ada_Version;\n       Save.Ada_Version_Explicit           := Ada_Version_Explicit;\n       Save.Assertions_Enabled             := Assertions_Enabled;\n+      Save.Assume_No_Invalid_Values       := Assume_No_Invalid_Values;\n       Save.Check_Policy_List              := Check_Policy_List;\n       Save.Debug_Pragmas_Enabled          := Debug_Pragmas_Enabled;\n       Save.Dynamic_Elaboration_Checks     := Dynamic_Elaboration_Checks;\n@@ -134,27 +137,30 @@ package body Opt is\n          --  since the whole point of this is that it still properly indicates\n          --  the configuration setting even in a run time unit.\n \n-         Ada_Version                := Ada_Version_Runtime;\n-         Dynamic_Elaboration_Checks := False;\n-         Extensions_Allowed         := True;\n-         External_Name_Exp_Casing   := As_Is;\n-         External_Name_Imp_Casing   := Lowercase;\n-         Optimize_Alignment         := 'O';\n-         Persistent_BSS_Mode        := False;\n-         Use_VADS_Size              := False;\n-         Optimize_Alignment_Local   := True;\n+         Ada_Version                 := Ada_Version_Runtime;\n+         Dynamic_Elaboration_Checks  := False;\n+         Extensions_Allowed          := True;\n+         External_Name_Exp_Casing    := As_Is;\n+         External_Name_Imp_Casing    := Lowercase;\n+         Optimize_Alignment          := 'O';\n+         Persistent_BSS_Mode         := False;\n+         Use_VADS_Size               := False;\n+         Optimize_Alignment_Local    := True;\n \n          --  For an internal unit, assertions/debug pragmas are off unless this\n-         --  is the main unit and they were explicitly enabled.\n+         --  is the main unit and they were explicitly enabled. We also make\n+         --  sure we do not assume that values are necessarily valid.\n \n          if Main_Unit then\n-            Assertions_Enabled    := Assertions_Enabled_Config;\n-            Debug_Pragmas_Enabled := Debug_Pragmas_Enabled_Config;\n-            Check_Policy_List     := Check_Policy_List_Config;\n+            Assertions_Enabled       := Assertions_Enabled_Config;\n+            Assume_No_Invalid_Values := Assume_No_Invalid_Values_Config;\n+            Debug_Pragmas_Enabled    := Debug_Pragmas_Enabled_Config;\n+            Check_Policy_List        := Check_Policy_List_Config;\n          else\n-            Assertions_Enabled    := False;\n-            Debug_Pragmas_Enabled := False;\n-            Check_Policy_List     := Empty;\n+            Assertions_Enabled       := False;\n+            Assume_No_Invalid_Values := False;\n+            Debug_Pragmas_Enabled    := False;\n+            Check_Policy_List        := Empty;\n          end if;\n \n       --  Case of non-internal unit\n@@ -163,6 +169,7 @@ package body Opt is\n          Ada_Version                 := Ada_Version_Config;\n          Ada_Version_Explicit        := Ada_Version_Explicit_Config;\n          Assertions_Enabled          := Assertions_Enabled_Config;\n+         Assume_No_Invalid_Values    := Assume_No_Invalid_Values_Config;\n          Check_Policy_List           := Check_Policy_List_Config;\n          Debug_Pragmas_Enabled       := Debug_Pragmas_Enabled_Config;\n          Dynamic_Elaboration_Checks  := Dynamic_Elaboration_Checks_Config;"}, {"sha": "542dc2568d0cc215048b3cfa477764ab4857c680", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -158,6 +158,15 @@ package Opt is\n    --  GNAT\n    --  Enable assertions made using pragma Assert\n \n+   Assume_No_Invalid_Values : Boolean := True;\n+   --  ??? true for now, enable by setting to false later\n+   --  GNAT\n+   --  Normallly, in accordance with (RM 13.9.1 (9-11)) the front end assumes\n+   --  that values could have invalid representations, unless it can clearly\n+   --  prove that the values are valid. If this switch is set (by -gnatB or by\n+   --  pragma Assume_No_Invalid_Values (Off)), then the compiler assumes values\n+   --  are valid and in range of their representations.\n+\n    Back_Annotate_Rep_Info : Boolean := False;\n    --  GNAT\n    --  If set True, enables back annotation of representation information\n@@ -1414,6 +1423,13 @@ package Opt is\n    --  mode, as possibly set by the command line switch -gnata, and possibly\n    --  modified by the use of the configuration pragma Assertion_Policy.\n \n+   Assume_No_Invalid_Values_Config : Boolean;\n+   --  GNAT\n+   --  This is the value of the configuration switch for assuming no invalid\n+   --  values enabled mode mode, as possibly set by the command line switch\n+   --  -gnatB, and possibly modified by the use of the configuration pragma\n+   --  Assume_No_Invalid_Values.\n+\n    Check_Policy_List_Config : Node_Id;\n    --  GNAT\n    --  This points to the list of N_Pragma nodes for Check_Policy pragmas\n@@ -1612,6 +1628,7 @@ private\n       Ada_Version                    : Ada_Version_Type;\n       Ada_Version_Explicit           : Ada_Version_Type;\n       Assertions_Enabled             : Boolean;\n+      Assume_No_Invalid_Values       : Boolean;\n       Check_Policy_List              : Node_Id;\n       Debug_Pragmas_Enabled          : Boolean;\n       Dynamic_Elaboration_Checks     : Boolean;"}, {"sha": "fc2360cd14929d3f796d761c832ec9471f011c86", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -1050,6 +1050,7 @@ begin\n \n       when Pragma_Abort_Defer                   |\n            Pragma_Assertion_Policy              |\n+           Pragma_Assume_No_Invalid_Values      |\n            Pragma_AST_Entry                     |\n            Pragma_All_Calls_Remote              |\n            Pragma_Annotate                      |"}, {"sha": "e2d02aeef909ed99a19091d773a9834962a99272", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -5289,6 +5289,25 @@ package body Sem_Prag is\n             Opt.Check_Policy_List := N;\n          end Assertion_Policy;\n \n+         ------------------------------\n+         -- Assume_No_Invalid_Values --\n+         ------------------------------\n+\n+         --  pragma Assume_No_Invalid_Values (On | Off);\n+\n+         when Pragma_Assume_No_Invalid_Values =>\n+            GNAT_Pragma;\n+            Check_Valid_Configuration_Pragma;\n+            Check_Arg_Count (1);\n+            Check_No_Identifiers;\n+            Check_Arg_Is_One_Of (Arg1, Name_On, Name_Off);\n+\n+            if Chars (Expression (Arg1)) = Name_On then\n+               Assume_No_Invalid_Values := True;\n+            else\n+               Assume_No_Invalid_Values := False;\n+            end if;\n+\n          ---------------\n          -- AST_Entry --\n          ---------------\n@@ -6315,8 +6334,8 @@ package body Sem_Prag is\n          --  pragma Discard_Names [([On =>] LOCAL_NAME)];\n \n          when Pragma_Discard_Names => Discard_Names : declare\n-            E_Id : Entity_Id;\n             E    : Entity_Id;\n+            E_Id : Entity_Id;\n \n          begin\n             Check_Ada_83_Warning;\n@@ -6346,6 +6365,7 @@ package body Sem_Prag is\n                   Check_Arg_Count (1);\n                   Check_Optional_Identifier (Arg1, Name_On);\n                   Check_Arg_Is_Local_Name (Arg1);\n+\n                   E_Id := Expression (Arg1);\n \n                   if Etype (E_Id) = Any_Type then\n@@ -6355,15 +6375,16 @@ package body Sem_Prag is\n                   end if;\n \n                   if (Is_First_Subtype (E)\n-                       and then (Is_Enumeration_Type (E)\n-                                  or else Is_Tagged_Type (E)))\n+                      and then\n+                        (Is_Enumeration_Type (E) or else Is_Tagged_Type (E)))\n                     or else Ekind (E) = E_Exception\n                   then\n                      Set_Discard_Names (E);\n                   else\n                      Error_Pragma_Arg\n                        (\"inappropriate entity for pragma%\", Arg1);\n                   end if;\n+\n                end if;\n             end if;\n          end Discard_Names;\n@@ -12200,6 +12221,7 @@ package body Sem_Prag is\n       Pragma_Annotate                      => -1,\n       Pragma_Assert                        => -1,\n       Pragma_Assertion_Policy              =>  0,\n+      Pragma_Assume_No_Invalid_Values      =>  0,\n       Pragma_Asynchronous                  => -1,\n       Pragma_Atomic                        =>  0,\n       Pragma_Atomic_Components             =>  0,"}, {"sha": "28656c0ad1d54e20a56f4da6b713da1c19b37edf", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -179,6 +179,7 @@ package body Snames is\n      \"ada_05#\" &\n      \"ada_2005#\" &\n      \"assertion_policy#\" &\n+     \"assume_no_invalid_values#\" &\n      \"c_pass_by_copy#\" &\n      \"check_name#\" &\n      \"check_policy#\" &"}, {"sha": "930d2886019481d2416ba3c707a2d21d82aa04ff", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 665, "deletions": 663, "changes": 1328, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=4351c21b9c472d35682fe1000aa23b392b85a914"}, {"sha": "627950f5c9f8ea1364f0848d7ad6b86e50864ad7", "filename": "gcc/ada/snames.h", "status": "modified", "additions": 166, "deletions": 165, "changes": 331, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fsnames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fsnames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.h?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -229,170 +229,171 @@ extern unsigned char Get_Pragma_Id (int);\n #define  Pragma_Ada_05                        2\n #define  Pragma_Ada_2005                      3\n #define  Pragma_Assertion_Policy              4\n-#define  Pragma_C_Pass_By_Copy                5\n-#define  Pragma_Check_Name                    6\n-#define  Pragma_Check_Policy                  7\n-#define  Pragma_Compile_Time_Error            8\n-#define  Pragma_Compile_Time_Warning          9\n-#define  Pragma_Compiler_Unit                 10\n-#define  Pragma_Component_Alignment           11\n-#define  Pragma_Convention_Identifier         12\n-#define  Pragma_Debug_Policy                  13\n-#define  Pragma_Detect_Blocking               14\n-#define  Pragma_Discard_Names                 15\n-#define  Pragma_Elaboration_Checks            16\n-#define  Pragma_Eliminate                     17\n-#define  Pragma_Extend_System                 18\n-#define  Pragma_Extensions_Allowed            19\n-#define  Pragma_External_Name_Casing          20\n-#define  Pragma_Favor_Top_Level               21\n-#define  Pragma_Float_Representation          22\n-#define  Pragma_Implicit_Packing              23\n-#define  Pragma_Initialize_Scalars            24\n-#define  Pragma_Interrupt_State               25\n-#define  Pragma_License                       26\n-#define  Pragma_Locking_Policy                27\n-#define  Pragma_Long_Float                    28\n-#define  Pragma_No_Run_Time                   29\n-#define  Pragma_No_Strict_Aliasing            30\n-#define  Pragma_Normalize_Scalars             31\n-#define  Pragma_Optimize_Alignment            32\n-#define  Pragma_Persistent_BSS                33\n-#define  Pragma_Polling                       34\n-#define  Pragma_Priority_Specific_Dispatching 35\n-#define  Pragma_Profile                       36\n-#define  Pragma_Profile_Warnings              37\n-#define  Pragma_Propagate_Exceptions          38\n-#define  Pragma_Queuing_Policy                39\n-#define  Pragma_Ravenscar                     40\n-#define  Pragma_Restricted_Run_Time           41\n-#define  Pragma_Restrictions                  42\n-#define  Pragma_Restriction_Warnings          43\n-#define  Pragma_Reviewable                    44\n-#define  Pragma_Source_File_Name              45\n-#define  Pragma_Source_File_Name_Project      46\n-#define  Pragma_Style_Checks                  47\n-#define  Pragma_Suppress                      48\n-#define  Pragma_Suppress_Exception_Locations  49\n-#define  Pragma_Task_Dispatching_Policy       50\n-#define  Pragma_Universal_Data                51\n-#define  Pragma_Unsuppress                    52\n-#define  Pragma_Use_VADS_Size                 53\n-#define  Pragma_Validity_Checks               54\n-#define  Pragma_Warnings                      55\n-#define  Pragma_Wide_Character_Encoding       56\n-#define  Pragma_Abort_Defer                   57\n-#define  Pragma_All_Calls_Remote              58\n-#define  Pragma_Annotate                      59\n-#define  Pragma_Assert                        60\n-#define  Pragma_Asynchronous                  61\n-#define  Pragma_Atomic                        62\n-#define  Pragma_Atomic_Components             63\n-#define  Pragma_Attach_Handler                64\n-#define  Pragma_Check                         65\n-#define  Pragma_CIL_Constructor               66\n-#define  Pragma_Comment                       67\n-#define  Pragma_Common_Object                 68\n-#define  Pragma_Complete_Representation       69\n-#define  Pragma_Complex_Representation        70\n-#define  Pragma_Controlled                    71\n-#define  Pragma_Convention                    72\n-#define  Pragma_CPP_Class                     73\n-#define  Pragma_CPP_Constructor               74\n-#define  Pragma_CPP_Virtual                   75\n-#define  Pragma_CPP_Vtable                    76\n-#define  Pragma_Debug                         77\n-#define  Pragma_Elaborate                     78\n-#define  Pragma_Elaborate_All                 79\n-#define  Pragma_Elaborate_Body                80\n-#define  Pragma_Export                        81\n-#define  Pragma_Export_Exception              82\n-#define  Pragma_Export_Function               83\n-#define  Pragma_Export_Object                 84\n-#define  Pragma_Export_Procedure              85\n-#define  Pragma_Export_Value                  86\n-#define  Pragma_Export_Valued_Procedure       87\n-#define  Pragma_External                      88\n-#define  Pragma_Finalize_Storage_Only         89\n-#define  Pragma_Ident                         90\n-#define  Pragma_Implemented_By_Entry          91\n-#define  Pragma_Import                        92\n-#define  Pragma_Import_Exception              93\n-#define  Pragma_Import_Function               94\n-#define  Pragma_Import_Object                 95\n-#define  Pragma_Import_Procedure              96\n-#define  Pragma_Import_Valued_Procedure       97\n-#define  Pragma_Inline                        98\n-#define  Pragma_Inline_Always                 99\n-#define  Pragma_Inline_Generic                100\n-#define  Pragma_Inspection_Point              101\n-#define  Pragma_Interface_Name                102\n-#define  Pragma_Interrupt_Handler             103\n-#define  Pragma_Interrupt_Priority            104\n-#define  Pragma_Java_Constructor              105\n-#define  Pragma_Java_Interface                106\n-#define  Pragma_Keep_Names                    107\n-#define  Pragma_Link_With                     108\n-#define  Pragma_Linker_Alias                  109\n-#define  Pragma_Linker_Constructor            110\n-#define  Pragma_Linker_Destructor             111\n-#define  Pragma_Linker_Options                112\n-#define  Pragma_Linker_Section                113\n-#define  Pragma_List                          114\n-#define  Pragma_Machine_Attribute             115\n-#define  Pragma_Main                          116\n-#define  Pragma_Main_Storage                  117\n-#define  Pragma_Memory_Size                   118\n-#define  Pragma_No_Body                       119\n-#define  Pragma_No_Return                     120\n-#define  Pragma_Obsolescent                   121\n-#define  Pragma_Optimize                      122\n-#define  Pragma_Pack                          123\n-#define  Pragma_Page                          124\n-#define  Pragma_Passive                       125\n-#define  Pragma_Postcondition                 126\n-#define  Pragma_Precondition                  127\n-#define  Pragma_Preelaborable_Initialization  128\n-#define  Pragma_Preelaborate                  129\n-#define  Pragma_Preelaborate_05               130\n-#define  Pragma_Psect_Object                  131\n-#define  Pragma_Pure                          132\n-#define  Pragma_Pure_05                       133\n-#define  Pragma_Pure_Function                 134\n-#define  Pragma_Relative_Deadline             135\n-#define  Pragma_Remote_Call_Interface         136\n-#define  Pragma_Remote_Types                  137\n-#define  Pragma_Share_Generic                 138\n-#define  Pragma_Shared                        139\n-#define  Pragma_Shared_Passive                140\n-#define  Pragma_Source_Reference              141\n-#define  Pragma_Static_Elaboration_Desired    142\n-#define  Pragma_Stream_Convert                143\n-#define  Pragma_Subtitle                      144\n-#define  Pragma_Suppress_All                  145\n-#define  Pragma_Suppress_Debug_Info           146\n-#define  Pragma_Suppress_Initialization       147\n-#define  Pragma_System_Name                   148\n-#define  Pragma_Task_Info                     149\n-#define  Pragma_Task_Name                     150\n-#define  Pragma_Task_Storage                  151\n-#define  Pragma_Time_Slice                    152\n-#define  Pragma_Title                         153\n-#define  Pragma_Unchecked_Union               154\n-#define  Pragma_Unimplemented_Unit            155\n-#define  Pragma_Universal_Aliasing            156\n-#define  Pragma_Unmodified                    157\n-#define  Pragma_Unreferenced                  158\n-#define  Pragma_Unreferenced_Objects          159\n-#define  Pragma_Unreserve_All_Interrupts      160\n-#define  Pragma_Volatile                      161\n-#define  Pragma_Volatile_Components           162\n-#define  Pragma_Weak_External                 163\n-#define  Pragma_AST_Entry                     164\n-#define  Pragma_Fast_Math                     165\n-#define  Pragma_Interface                     166\n-#define  Pragma_Priority                      167\n-#define  Pragma_Storage_Size                  168\n-#define  Pragma_Storage_Unit                  169\n+#define  Pragma_Assume_No_Invalid_Values      5\n+#define  Pragma_C_Pass_By_Copy                6\n+#define  Pragma_Check_Name                    7\n+#define  Pragma_Check_Policy                  8\n+#define  Pragma_Compile_Time_Error            9\n+#define  Pragma_Compile_Time_Warning          10\n+#define  Pragma_Compiler_Unit                 11\n+#define  Pragma_Component_Alignment           12\n+#define  Pragma_Convention_Identifier         13\n+#define  Pragma_Debug_Policy                  14\n+#define  Pragma_Detect_Blocking               15\n+#define  Pragma_Discard_Names                 16\n+#define  Pragma_Elaboration_Checks            17\n+#define  Pragma_Eliminate                     18\n+#define  Pragma_Extend_System                 19\n+#define  Pragma_Extensions_Allowed            20\n+#define  Pragma_External_Name_Casing          21\n+#define  Pragma_Favor_Top_Level               22\n+#define  Pragma_Float_Representation          23\n+#define  Pragma_Implicit_Packing              24\n+#define  Pragma_Initialize_Scalars            25\n+#define  Pragma_Interrupt_State               26\n+#define  Pragma_License                       27\n+#define  Pragma_Locking_Policy                28\n+#define  Pragma_Long_Float                    29\n+#define  Pragma_No_Run_Time                   30\n+#define  Pragma_No_Strict_Aliasing            31\n+#define  Pragma_Normalize_Scalars             32\n+#define  Pragma_Optimize_Alignment            33\n+#define  Pragma_Persistent_BSS                34\n+#define  Pragma_Polling                       35\n+#define  Pragma_Priority_Specific_Dispatching 36\n+#define  Pragma_Profile                       37\n+#define  Pragma_Profile_Warnings              38\n+#define  Pragma_Propagate_Exceptions          39\n+#define  Pragma_Queuing_Policy                40\n+#define  Pragma_Ravenscar                     41\n+#define  Pragma_Restricted_Run_Time           42\n+#define  Pragma_Restrictions                  43\n+#define  Pragma_Restriction_Warnings          44\n+#define  Pragma_Reviewable                    45\n+#define  Pragma_Source_File_Name              46\n+#define  Pragma_Source_File_Name_Project      47\n+#define  Pragma_Style_Checks                  48\n+#define  Pragma_Suppress                      49\n+#define  Pragma_Suppress_Exception_Locations  50\n+#define  Pragma_Task_Dispatching_Policy       51\n+#define  Pragma_Universal_Data                52\n+#define  Pragma_Unsuppress                    53\n+#define  Pragma_Use_VADS_Size                 54\n+#define  Pragma_Validity_Checks               55\n+#define  Pragma_Warnings                      56\n+#define  Pragma_Wide_Character_Encoding       57\n+#define  Pragma_Abort_Defer                   58\n+#define  Pragma_All_Calls_Remote              59\n+#define  Pragma_Annotate                      60\n+#define  Pragma_Assert                        61\n+#define  Pragma_Asynchronous                  62\n+#define  Pragma_Atomic                        63\n+#define  Pragma_Atomic_Components             64\n+#define  Pragma_Attach_Handler                65\n+#define  Pragma_Check                         66\n+#define  Pragma_CIL_Constructor               67\n+#define  Pragma_Comment                       68\n+#define  Pragma_Common_Object                 69\n+#define  Pragma_Complete_Representation       70\n+#define  Pragma_Complex_Representation        71\n+#define  Pragma_Controlled                    72\n+#define  Pragma_Convention                    73\n+#define  Pragma_CPP_Class                     74\n+#define  Pragma_CPP_Constructor               75\n+#define  Pragma_CPP_Virtual                   76\n+#define  Pragma_CPP_Vtable                    77\n+#define  Pragma_Debug                         78\n+#define  Pragma_Elaborate                     79\n+#define  Pragma_Elaborate_All                 80\n+#define  Pragma_Elaborate_Body                81\n+#define  Pragma_Export                        82\n+#define  Pragma_Export_Exception              83\n+#define  Pragma_Export_Function               84\n+#define  Pragma_Export_Object                 85\n+#define  Pragma_Export_Procedure              86\n+#define  Pragma_Export_Value                  87\n+#define  Pragma_Export_Valued_Procedure       88\n+#define  Pragma_External                      89\n+#define  Pragma_Finalize_Storage_Only         90\n+#define  Pragma_Ident                         91\n+#define  Pragma_Implemented_By_Entry          92\n+#define  Pragma_Import                        93\n+#define  Pragma_Import_Exception              94\n+#define  Pragma_Import_Function               95\n+#define  Pragma_Import_Object                 96\n+#define  Pragma_Import_Procedure              97\n+#define  Pragma_Import_Valued_Procedure       98\n+#define  Pragma_Inline                        99\n+#define  Pragma_Inline_Always                 100\n+#define  Pragma_Inline_Generic                101\n+#define  Pragma_Inspection_Point              102\n+#define  Pragma_Interface_Name                103\n+#define  Pragma_Interrupt_Handler             104\n+#define  Pragma_Interrupt_Priority            105\n+#define  Pragma_Java_Constructor              106\n+#define  Pragma_Java_Interface                107\n+#define  Pragma_Keep_Names                    108\n+#define  Pragma_Link_With                     109\n+#define  Pragma_Linker_Alias                  110\n+#define  Pragma_Linker_Constructor            111\n+#define  Pragma_Linker_Destructor             112\n+#define  Pragma_Linker_Options                113\n+#define  Pragma_Linker_Section                114\n+#define  Pragma_List                          115\n+#define  Pragma_Machine_Attribute             116\n+#define  Pragma_Main                          117\n+#define  Pragma_Main_Storage                  118\n+#define  Pragma_Memory_Size                   119\n+#define  Pragma_No_Body                       120\n+#define  Pragma_No_Return                     121\n+#define  Pragma_Obsolescent                   122\n+#define  Pragma_Optimize                      123\n+#define  Pragma_Pack                          124\n+#define  Pragma_Page                          125\n+#define  Pragma_Passive                       126\n+#define  Pragma_Postcondition                 127\n+#define  Pragma_Precondition                  128\n+#define  Pragma_Preelaborable_Initialization  129\n+#define  Pragma_Preelaborate                  130\n+#define  Pragma_Preelaborate_05               131\n+#define  Pragma_Psect_Object                  132\n+#define  Pragma_Pure                          133\n+#define  Pragma_Pure_05                       134\n+#define  Pragma_Pure_Function                 135\n+#define  Pragma_Relative_Deadline             136\n+#define  Pragma_Remote_Call_Interface         137\n+#define  Pragma_Remote_Types                  138\n+#define  Pragma_Share_Generic                 139\n+#define  Pragma_Shared                        140\n+#define  Pragma_Shared_Passive                141\n+#define  Pragma_Source_Reference              142\n+#define  Pragma_Static_Elaboration_Desired    143\n+#define  Pragma_Stream_Convert                144\n+#define  Pragma_Subtitle                      145\n+#define  Pragma_Suppress_All                  146\n+#define  Pragma_Suppress_Debug_Info           147\n+#define  Pragma_Suppress_Initialization       148\n+#define  Pragma_System_Name                   149\n+#define  Pragma_Task_Info                     150\n+#define  Pragma_Task_Name                     151\n+#define  Pragma_Task_Storage                  152\n+#define  Pragma_Time_Slice                    153\n+#define  Pragma_Title                         154\n+#define  Pragma_Unchecked_Union               155\n+#define  Pragma_Unimplemented_Unit            156\n+#define  Pragma_Universal_Aliasing            157\n+#define  Pragma_Unmodified                    158\n+#define  Pragma_Unreferenced                  159\n+#define  Pragma_Unreferenced_Objects          160\n+#define  Pragma_Unreserve_All_Interrupts      161\n+#define  Pragma_Volatile                      162\n+#define  Pragma_Volatile_Components           163\n+#define  Pragma_Weak_External                 164\n+#define  Pragma_AST_Entry                     165\n+#define  Pragma_Fast_Math                     166\n+#define  Pragma_Interface                     167\n+#define  Pragma_Priority                      168\n+#define  Pragma_Storage_Size                  169\n+#define  Pragma_Storage_Unit                  170\n \n /* End of snames.h (C version of Snames package spec) */"}, {"sha": "98f70f9912a0f18cb6e6c4d56f3aac3a940d64e6", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -212,6 +212,12 @@ package body Switch.C is\n                Ptr := Ptr + 1;\n                Brief_Output := True;\n \n+            --  Processing for B switch\n+\n+            when 'B' =>\n+               Ptr := Ptr + 1;\n+               Assume_No_Invalid_Values := True;\n+\n             --  Processing for c switch\n \n             when 'c' =>"}, {"sha": "b2fe13a0993533ba39c32c3ffc6d0d431b2c0ea1", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4351c21b9c472d35682fe1000aa23b392b85a914/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=4351c21b9c472d35682fe1000aa23b392b85a914", "patch": "@@ -137,6 +137,11 @@ begin\n    Write_Switch_Char (\"b\");\n    Write_Line (\"Generate brief messages to stderr even if verbose mode set\");\n \n+   --  Line for -gnatB switch\n+\n+   Write_Switch_Char (\"B\");\n+   Write_Line (\"Assume no bad (invalid) values except in 'Valid attribute\");\n+\n    --  Line for -gnatc switch\n \n    Write_Switch_Char (\"c\");"}]}