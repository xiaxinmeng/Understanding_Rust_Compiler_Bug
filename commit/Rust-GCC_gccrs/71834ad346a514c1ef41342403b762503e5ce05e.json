{"sha": "71834ad346a514c1ef41342403b762503e5ce05e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE4MzRhZDM0NmE1MTRjMWVmNDEzNDI0MDNiNzYyNTAzZTVjZTA1ZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-05-01T04:27:15Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-05-01T04:27:15Z"}, "message": "common.opt (Woverflow): New command line option.\n\n\n\t* common.opt (Woverflow): New command line option.\n\t* c-common.c (constant_expression_warning): Check warn_overflow.\n\t(overflow_waring): Pass OPT_Woverflow to warning.\n\t(unsigned_conversion_warning): Likewise.\n\t(convert_and_check): Likewise.\n\t* doc/invoke.texi: Document new command line option.\n\n\t* gcc.dg/Woverflow-1.c: New test case.\n\t* gcc.dg/Woverflow-2.c: Likewise.\n\t* gcc.dg/Woverflow-3.c: Likewise.\n\nFrom-SVN: r113408", "tree": {"sha": "e7d7d2ba340760ae4cb7b524b8aab06e994b8769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d7d2ba340760ae4cb7b524b8aab06e994b8769"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71834ad346a514c1ef41342403b762503e5ce05e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71834ad346a514c1ef41342403b762503e5ce05e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71834ad346a514c1ef41342403b762503e5ce05e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71834ad346a514c1ef41342403b762503e5ce05e/comments", "author": null, "committer": null, "parents": [{"sha": "1c56bc4a7ea665c876311f1df1658aa19107f93f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c56bc4a7ea665c876311f1df1658aa19107f93f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c56bc4a7ea665c876311f1df1658aa19107f93f"}], "stats": {"total": 63, "additions": 56, "deletions": 7}, "files": [{"sha": "bc5e24f6544650852a287169f64915f480ed6468", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71834ad346a514c1ef41342403b762503e5ce05e", "patch": "@@ -1,3 +1,12 @@\n+2006-04-30  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* common.opt (Woverflow): New command line option.\n+\t* c-common.c (constant_expression_warning): Check warn_overflow.\n+\t(overflow_waring): Pass OPT_Woverflow to warning.\n+\t(unsigned_conversion_warning): Likewise.\n+\t(convert_and_check): Likewise.\n+\t* doc/invoke.texi: Document new command line option.\n+\n 2006-04-30  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (rs6000_override_options): Enable"}, {"sha": "5e546603fa543d878404ff592eb5ddda8337c5da", "filename": "gcc/c-common.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=71834ad346a514c1ef41342403b762503e5ce05e", "patch": "@@ -906,7 +906,9 @@ constant_expression_warning (tree value)\n   if ((TREE_CODE (value) == INTEGER_CST || TREE_CODE (value) == REAL_CST\n        || TREE_CODE (value) == VECTOR_CST\n        || TREE_CODE (value) == COMPLEX_CST)\n-      && TREE_CONSTANT_OVERFLOW (value) && pedantic)\n+      && TREE_CONSTANT_OVERFLOW (value)\n+      && warn_overflow\n+      && pedantic)\n     pedwarn (\"overflow in constant expression\");\n }\n \n@@ -927,7 +929,7 @@ overflow_warning (tree value)\n     {\n       TREE_OVERFLOW (value) = 0;\n       if (skip_evaluation == 0)\n-\twarning (0, \"integer overflow in expression\");\n+\twarning (OPT_Woverflow, \"integer overflow in expression\");\n     }\n   else if ((TREE_CODE (value) == REAL_CST\n \t    || (TREE_CODE (value) == COMPLEX_CST\n@@ -936,13 +938,13 @@ overflow_warning (tree value)\n     {\n       TREE_OVERFLOW (value) = 0;\n       if (skip_evaluation == 0)\n-\twarning (0, \"floating point overflow in expression\");\n+\twarning (OPT_Woverflow, \"floating point overflow in expression\");\n     }\n   else if (TREE_CODE (value) == VECTOR_CST && TREE_OVERFLOW (value))\n     {\n       TREE_OVERFLOW (value) = 0;\n       if (skip_evaluation == 0)\n-\twarning (0, \"vector overflow in expression\");\n+\twarning (OPT_Woverflow, \"vector overflow in expression\");\n     }\n }\n \n@@ -964,7 +966,8 @@ unsigned_conversion_warning (tree result, tree operand)\n     {\n       if (!int_fits_type_p (operand, c_common_signed_type (type)))\n \t/* This detects cases like converting -129 or 256 to unsigned char.  */\n-\twarning (0, \"large integer implicitly truncated to unsigned type\");\n+\twarning (OPT_Woverflow,\n+\t\t \"large integer implicitly truncated to unsigned type\");\n       else\n \twarning (OPT_Wconversion,\n \t\t \"negative integer implicitly converted to unsigned type\");\n@@ -1093,7 +1096,8 @@ convert_and_check (tree type, tree expr)\n \t\t || !constant_fits_type_p (expr,\n \t\t\t\t\t   c_common_unsigned_type (type)))\n \t\t&& skip_evaluation == 0)\n-\t      warning (0, \"overflow in implicit constant conversion\");\n+\t      warning (OPT_Woverflow,\n+                       \"overflow in implicit constant conversion\");\n \t}\n       else\n \tunsigned_conversion_warning (t, expr);"}, {"sha": "53836f399e73f29732f714ac1d805809cd703ae3", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=71834ad346a514c1ef41342403b762503e5ce05e", "patch": "@@ -109,6 +109,10 @@ Wmissing-noreturn\n Common Var(warn_missing_noreturn)\n Warn about functions which might be candidates for __attribute__((noreturn))\n \n+Woverflow\n+Common Var(warn_overflow) Init(1)\n+Warn about overflow in arithmetic expressions\n+\n Wpacked\n Common Var(warn_packed)\n Warn when the packed attribute has no effect on struct layout"}, {"sha": "3e523d45efff08ca5e43210f4d0b4d2ee16eb760", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=71834ad346a514c1ef41342403b762503e5ce05e", "patch": "@@ -238,7 +238,8 @@ Objective-C and Objective-C++ Dialects}.\n -Wmain  -Wmissing-braces  -Wmissing-field-initializers @gol\n -Wmissing-format-attribute  -Wmissing-include-dirs @gol\n -Wmissing-noreturn @gol\n--Wno-multichar  -Wnonnull  -Woverlength-strings  -Wpacked  -Wpadded @gol\n+-Wno-multichar  -Wnonnull  -Wno-overflow @gol\n+-Woverlength-strings  -Wpacked  -Wpadded @gol\n -Wparentheses  -Wpointer-arith  -Wno-pointer-to-int-cast @gol\n -Wredundant-decls @gol\n -Wreturn-type  -Wsequence-point  -Wshadow @gol\n@@ -3284,6 +3285,10 @@ deprecated by using the @code{deprecated} attribute.\n (@pxref{Function Attributes}, @pxref{Variable Attributes},\n @pxref{Type Attributes}.)\n \n+@item -Wno-overflow\n+@opindex Wno-overflow\n+Do not warn about compile-time overflow in constant expressions.\n+\n @item -Wpacked\n @opindex Wpacked\n Warn if a structure is given the packed attribute, but the packed"}, {"sha": "1aeb5ac2a153c07548352ee7750a3b341b52739d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=71834ad346a514c1ef41342403b762503e5ce05e", "patch": "@@ -1,3 +1,9 @@\n+2006-04-30  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.dg/Woverflow-1.c: New test case.\n+\t* gcc.dg/Woverflow-2.c: Likewise.\n+\t* gcc.dg/Woverflow-3.c: Likewise.\n+\n 2006-04-30  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/27094"}, {"sha": "064af4561eaa6a710043afdcefd01d1a464b3eda", "filename": "gcc/testsuite/gcc.dg/Woverflow-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-1.c?ref=71834ad346a514c1ef41342403b762503e5ce05e", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <limits.h>\n+\n+int foo = INT_MAX + 1;  /* { dg-warning \"integer overflow\" } */\n+"}, {"sha": "44368b66f9f739daf2b19f0ff847b98caa9bde4a", "filename": "gcc/testsuite/gcc.dg/Woverflow-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-2.c?ref=71834ad346a514c1ef41342403b762503e5ce05e", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Woverflow\" } */\n+\n+#include <limits.h>\n+\n+int foo = INT_MAX + 1;  /* { dg-warning \"integer overflow\" } */\n+"}, {"sha": "73a021b59460a4a7da0c96ba7b9d269f926b6ac5", "filename": "gcc/testsuite/gcc.dg/Woverflow-3.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71834ad346a514c1ef41342403b762503e5ce05e/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWoverflow-3.c?ref=71834ad346a514c1ef41342403b762503e5ce05e", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wno-overflow\" } */\n+\n+#include <limits.h>\n+\n+int foo = INT_MAX + 1;\n+"}]}