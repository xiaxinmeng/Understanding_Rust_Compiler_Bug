{"sha": "0411f1d6cb283b68e85d41fae7601d6a3e0a9954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQxMWYxZDZjYjI4M2I2OGU4NWQ0MWZhZTc2MDFkNmEzZTBhOTk1NA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2019-07-07T18:42:45Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-07-07T18:42:45Z"}, "message": "re PR tree-optimization/91090 (A suspicious code in tree-ssa-dom.c)\n\n        PR tree-optimization/91090\n        * tree-ssa-dom.c (simplify_stmt_for_jump_threading): Fix logic error\n        in handling of ranges to simplify switch statements.\n\nFrom-SVN: r273184", "tree": {"sha": "eb2940b2938ff792279d79c7f0fa5a600d41d174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb2940b2938ff792279d79c7f0fa5a600d41d174"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0411f1d6cb283b68e85d41fae7601d6a3e0a9954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0411f1d6cb283b68e85d41fae7601d6a3e0a9954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0411f1d6cb283b68e85d41fae7601d6a3e0a9954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0411f1d6cb283b68e85d41fae7601d6a3e0a9954/comments", "author": null, "committer": null, "parents": [{"sha": "6ce4dac81392bb6f144c34a06e9be157c20f31da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce4dac81392bb6f144c34a06e9be157c20f31da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ce4dac81392bb6f144c34a06e9be157c20f31da"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "9f83f75b0bffa01d6c09bbbc0e55540f210a06e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0411f1d6cb283b68e85d41fae7601d6a3e0a9954/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0411f1d6cb283b68e85d41fae7601d6a3e0a9954/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0411f1d6cb283b68e85d41fae7601d6a3e0a9954", "patch": "@@ -1,3 +1,9 @@\n+2019-07-07  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/91090\n+\t* tree-ssa-dom.c (simplify_stmt_for_jump_threading): Fix logic error\n+\tin handling of ranges to simplify switch statements.\n+\n 2019-07-07  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.c (darwin_override_options): Make a final check on PIC"}, {"sha": "17c852d529918243eb6f2d4bd69225b6378da785", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0411f1d6cb283b68e85d41fae7601d6a3e0a9954/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0411f1d6cb283b68e85d41fae7601d6a3e0a9954/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=0411f1d6cb283b68e85d41fae7601d6a3e0a9954", "patch": "@@ -913,21 +913,26 @@ simplify_stmt_for_jump_threading (gimple *stmt,\n \n \t  find_case_label_range (switch_stmt, vr->min (), vr->max (), &i, &j);\n \n+\t  /* Is there only one such label?  */\n \t  if (i == j)\n \t    {\n \t      tree label = gimple_switch_label (switch_stmt, i);\n \t      tree singleton;\n \n+\t      /* The i'th label will only be taken if the value range of the\n+\t\t operand is entirely within the bounds of this label.  */\n \t      if (CASE_HIGH (label) != NULL_TREE\n \t\t  ? (tree_int_cst_compare (CASE_LOW (label), vr->min ()) <= 0\n \t\t     && tree_int_cst_compare (CASE_HIGH (label), vr->max ()) >= 0)\n \t\t  : (vr->singleton_p (&singleton)\n \t\t     && tree_int_cst_equal (CASE_LOW (label), singleton)))\n \t\treturn label;\n-\n-\t      if (i > j)\n-\t\treturn gimple_switch_label (switch_stmt, 0);\n \t    }\n+\n+\t  /* If there are no such labels, then the default label\n+\t     will be taken.  */\n+\t  if (i > j)\n+\t    return gimple_switch_label (switch_stmt, 0);\n \t}\n \n       if (vr->kind () == VR_ANTI_RANGE)"}]}