{"sha": "776c4247de465dd93438a738fff48d5b2076ec11", "node_id": "C_kwDOANBUbNoAKDc3NmM0MjQ3ZGU0NjVkZDkzNDM4YTczOGZmZjQ4ZDViMjA3NmVjMTE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2023-02-02T18:29:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-02T18:29:46Z"}, "message": "Merge #1783\n\n1783: Remove HIR::GroupedPattern r=philberty a=powerboat9\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>\r\n\r\nRemoves HIR::GroupedPattern and lowers AST::GroupedPattern to its inner pattern directly. Addresses https://github.com/Rust-GCC/gccrs/pull/1771#pullrequestreview-1271272084\n\nCo-authored-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "8469f6f2a66b4c06ac5767c3f1866d43b04c5ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8469f6f2a66b4c06ac5767c3f1866d43b04c5ee0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/776c4247de465dd93438a738fff48d5b2076ec11", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj3AEaCRBK7hj4Ov3rIwAAERcIAIerS9kJnT382sVqrzc13KgS\nZYKau2RnujRgXgrLdflqZwkzKO5PTvF6OXKClLok60884+/fhyfLswfiIPXwZNOI\nFhBFj6A5k5mypfFZF4OCzQ6YHYWnQJSQfOH5jNdmlxn+AYLUyjDJ4E4Ck3wIjPOH\n7GdCeWpZ+2+YUoTv7fh663Prr73En/5h3snwF+KUvRgs2Z00XhQKq+eM0/29+CQx\nSghQepJyJYUSuaJNkBJfCSsb0RvvcdxCk0tAoN0y7jCi74SvsEFO2S2Og/gmZtgI\naDTDG3LmA1IiVYWl8pXq/V/pOd5HRB3FANPONWMGbz0VqQBHYBt3O3JaTC2+TQU=\n=7wCX\n-----END PGP SIGNATURE-----\n", "payload": "tree 8469f6f2a66b4c06ac5767c3f1866d43b04c5ee0\nparent a9422b51c1355f1414a6418e6a5ae1abdd9b9f9b\nparent 8437757f77c8a13ddd7e47e11a8d33a1dccc1ccd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1675362586 +0000\ncommitter GitHub <noreply@github.com> 1675362586 +0000\n\nMerge #1783\n\n1783: Remove HIR::GroupedPattern r=philberty a=powerboat9\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>\r\n\r\nRemoves HIR::GroupedPattern and lowers AST::GroupedPattern to its inner pattern directly. Addresses https://github.com/Rust-GCC/gccrs/pull/1771#pullrequestreview-1271272084\n\nCo-authored-by: Owen Avery <powerboat9.gamer@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776c4247de465dd93438a738fff48d5b2076ec11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/776c4247de465dd93438a738fff48d5b2076ec11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776c4247de465dd93438a738fff48d5b2076ec11/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9422b51c1355f1414a6418e6a5ae1abdd9b9f9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9422b51c1355f1414a6418e6a5ae1abdd9b9f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9422b51c1355f1414a6418e6a5ae1abdd9b9f9b"}, {"sha": "8437757f77c8a13ddd7e47e11a8d33a1dccc1ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8437757f77c8a13ddd7e47e11a8d33a1dccc1ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8437757f77c8a13ddd7e47e11a8d33a1dccc1ccd"}], "stats": {"total": 144, "additions": 1, "deletions": 143}, "files": [{"sha": "ac4366973dd889d46aca926ddff677d019a5ec14", "filename": "gcc/rust/backend/rust-compile-fnparam.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -39,7 +39,6 @@ class CompileFnParam : private HIRCompileBase, protected HIR::HIRPatternVisitor\n   void visit (HIR::TupleStructPattern &) override;\n \n   // Empty visit for unused Pattern HIR nodes.\n-  void visit (HIR::GroupedPattern &) override {}\n   void visit (HIR::LiteralPattern &) override {}\n   void visit (HIR::PathInExpression &) override {}\n   void visit (HIR::QualifiedPathInExpression &) override {}"}, {"sha": "4c45a5377c0ce7524d0e67d52d8dc1f526710041", "filename": "gcc/rust/backend/rust-compile-pattern.cc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-pattern.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-pattern.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-pattern.cc?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -161,12 +161,6 @@ CompilePatternCaseLabelExpr::visit (HIR::RangePattern &pattern)\n   case_label_expr = build_case_label (lower, upper, associated_case_label);\n }\n \n-void\n-CompilePatternCaseLabelExpr::visit (HIR::GroupedPattern &pattern)\n-{\n-  pattern.get_item ()->accept_vis (*this);\n-}\n-\n // setup the bindings\n \n void\n@@ -335,12 +329,6 @@ CompilePatternBindings::visit (HIR::StructPattern &pattern)\n     }\n }\n \n-void\n-CompilePatternBindings::visit (HIR::GroupedPattern &pattern)\n-{\n-  pattern.get_item ()->accept_vis (*this);\n-}\n-\n void\n CompilePatternLet::visit (HIR::IdentifierPattern &pattern)\n {"}, {"sha": "fdaa51994f580185786c946520bf42b433883c6e", "filename": "gcc/rust/backend/rust-compile-pattern.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-pattern.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -38,7 +38,6 @@ class CompilePatternCaseLabelExpr : public HIRCompileBase,\n   void visit (HIR::TupleStructPattern &pattern) override;\n   void visit (HIR::WildcardPattern &pattern) override;\n   void visit (HIR::RangePattern &pattern) override;\n-  void visit (HIR::GroupedPattern &pattern) override;\n \n   // Empty visit for unused Pattern HIR nodes.\n   void visit (HIR::IdentifierPattern &) override {}\n@@ -70,7 +69,6 @@ class CompilePatternBindings : public HIRCompileBase,\n \n   void visit (HIR::StructPattern &pattern) override;\n   void visit (HIR::TupleStructPattern &pattern) override;\n-  void visit (HIR::GroupedPattern &) override;\n \n   // Empty visit for unused Pattern HIR nodes.\n   void visit (HIR::IdentifierPattern &) override {}\n@@ -105,12 +103,6 @@ class CompilePatternLet : public HIRCompileBase, public HIR::HIRPatternVisitor\n   void visit (HIR::WildcardPattern &) override;\n \n   // check for unimplemented Pattern HIR nodes.\n-  void visit (HIR::GroupedPattern &pattern) override\n-  {\n-    rust_sorry_at (pattern.get_locus (),\n-\t\t   \"grouped pattern let statements not supported\");\n-  }\n-\n   void visit (HIR::LiteralPattern &pattern) override\n   {\n     rust_sorry_at (pattern.get_locus (),"}, {"sha": "578934cf4374be7d97bba88e6aaa34b9e554699d", "filename": "gcc/rust/backend/rust-compile-resolve-path.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-resolve-path.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -45,7 +45,6 @@ class ResolvePathRef : public HIRCompileBase, public HIR::HIRPatternVisitor\n   void visit (HIR::QualifiedPathInExpression &expr) override;\n \n   // Empty visit for unused Pattern HIR nodes.\n-  void visit (HIR::GroupedPattern &) override {}\n   void visit (HIR::IdentifierPattern &) override {}\n   void visit (HIR::LiteralPattern &) override {}\n   void visit (HIR::RangePattern &) override {}"}, {"sha": "131748b23947c752ec4e0495a000c72bea203f28", "filename": "gcc/rust/backend/rust-compile-var-decl.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -69,7 +69,6 @@ class CompileVarDecl : public HIRCompileBase, public HIR::HIRPatternVisitor\n   }\n \n   // Empty visit for unused Pattern HIR nodes.\n-  void visit (HIR::GroupedPattern &) override {}\n   void visit (HIR::LiteralPattern &) override {}\n   void visit (HIR::PathInExpression &) override {}\n   void visit (HIR::QualifiedPathInExpression &) override {}"}, {"sha": "2e07c91cad69c20c95f5cc106a436ae21c064297", "filename": "gcc/rust/checks/errors/rust-const-checker.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.cc?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -834,10 +834,6 @@ void\n ConstChecker::visit (TuplePattern &)\n {}\n \n-void\n-ConstChecker::visit (GroupedPattern &)\n-{}\n-\n void\n ConstChecker::visit (SlicePattern &)\n {}"}, {"sha": "8dadeb268f4816df5381ce3f8a12cd8f87dd433c", "filename": "gcc/rust/checks/errors/rust-const-checker.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -186,7 +186,6 @@ class ConstChecker : public HIRFullVisitor\n   virtual void visit (TuplePatternItemsMultiple &tuple_items) override;\n   virtual void visit (TuplePatternItemsRanged &tuple_items) override;\n   virtual void visit (TuplePattern &pattern) override;\n-  virtual void visit (GroupedPattern &pattern) override;\n   virtual void visit (SlicePattern &pattern) override;\n   virtual void visit (EmptyStmt &stmt) override;\n   virtual void visit (LetStmt &stmt) override;"}, {"sha": "44c6090eb3da93a231f440e42dd08c6df8ad2264", "filename": "gcc/rust/checks/errors/rust-unsafe-checker.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -901,10 +901,6 @@ void\n UnsafeChecker::visit (TuplePattern &)\n {}\n \n-void\n-UnsafeChecker::visit (GroupedPattern &)\n-{}\n-\n void\n UnsafeChecker::visit (SlicePattern &)\n {}"}, {"sha": "2acb16a6a2596580fb9539b32a0ac484f02077e1", "filename": "gcc/rust/checks/errors/rust-unsafe-checker.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -168,7 +168,6 @@ class UnsafeChecker : public HIRFullVisitor\n   virtual void visit (TuplePatternItemsMultiple &tuple_items) override;\n   virtual void visit (TuplePatternItemsRanged &tuple_items) override;\n   virtual void visit (TuplePattern &pattern) override;\n-  virtual void visit (GroupedPattern &pattern) override;\n   virtual void visit (SlicePattern &pattern) override;\n   virtual void visit (EmptyStmt &stmt) override;\n   virtual void visit (LetStmt &stmt) override;"}, {"sha": "237fa2ee7466d859216bfa108695867c77808afd", "filename": "gcc/rust/hir/rust-ast-lower-pattern.cc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-pattern.cc?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -246,17 +246,7 @@ ASTLoweringPattern::visit (AST::RangePattern &pattern)\n void\n ASTLoweringPattern::visit (AST::GroupedPattern &pattern)\n {\n-  auto crate_num = mappings->get_current_crate ();\n-  Analysis::NodeMapping mapping (crate_num, pattern.get_node_id (),\n-\t\t\t\t mappings->get_next_hir_id (crate_num),\n-\t\t\t\t UNKNOWN_LOCAL_DEFID);\n-\n-  HIR::Pattern *inner\n-    = ASTLoweringPattern::translate (pattern.get_pattern_in_parens ().get ());\n-\n-  translated\n-    = new HIR::GroupedPattern (mapping, std::unique_ptr<HIR::Pattern> (inner),\n-\t\t\t       pattern.get_locus ());\n+  pattern.get_pattern_in_parens ()->accept_vis (*this);\n }\n \n } // namespace HIR"}, {"sha": "99e1ebb3e429edb273992f0dc1bd3662f3abcaab", "filename": "gcc/rust/hir/rust-hir-dump.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Frust-hir-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Frust-hir-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-hir-dump.cc?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -457,9 +457,6 @@ void\n Dump::visit (TuplePattern &)\n {}\n void\n-Dump::visit (GroupedPattern &)\n-{}\n-void\n Dump::visit (SlicePattern &)\n {}\n "}, {"sha": "15b0c8e425b440356776c8a12335f4b7c167beb0", "filename": "gcc/rust/hir/rust-hir-dump.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Frust-hir-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Frust-hir-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-hir-dump.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -163,7 +163,6 @@ class Dump : public HIRFullVisitor\n   virtual void visit (TuplePatternItemsMultiple &) override;\n   virtual void visit (TuplePatternItemsRanged &) override;\n   virtual void visit (TuplePattern &) override;\n-  virtual void visit (GroupedPattern &) override;\n   virtual void visit (SlicePattern &) override;\n \n   virtual void visit (EmptyStmt &) override;"}, {"sha": "8f4bcfbc037184caa3dcccbe7d10b8313c3ec80d", "filename": "gcc/rust/hir/tree/rust-hir-full-decls.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-decls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-decls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-decls.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -206,7 +206,6 @@ class TuplePatternItems;\n class TuplePatternItemsMultiple;\n class TuplePatternItemsRanged;\n class TuplePattern;\n-class GroupedPattern;\n class SlicePattern;\n \n // rust-type.h"}, {"sha": "d02188a66eb1dbb86cfcc3eaacc4d443f66bd9dc", "filename": "gcc/rust/hir/tree/rust-hir-full-test.cc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-full-test.cc?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -4476,12 +4476,6 @@ TuplePattern::accept_vis (HIRFullVisitor &vis)\n   vis.visit (*this);\n }\n \n-void\n-GroupedPattern::accept_vis (HIRFullVisitor &vis)\n-{\n-  vis.visit (*this);\n-}\n-\n void\n SlicePattern::accept_vis (HIRFullVisitor &vis)\n {\n@@ -4608,12 +4602,6 @@ EmptyStmt::accept_vis (HIRStmtVisitor &vis)\n   vis.visit (*this);\n }\n \n-void\n-GroupedPattern::accept_vis (HIRPatternVisitor &vis)\n-{\n-  vis.visit (*this);\n-}\n-\n void\n WildcardPattern::accept_vis (HIRPatternVisitor &vis)\n {"}, {"sha": "069d0cb1096dae13c5f8069cb0770daa50503430", "filename": "gcc/rust/hir/tree/rust-hir-pattern.h", "status": "modified", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -1215,75 +1215,6 @@ class TuplePattern : public Pattern\n   }\n };\n \n-// HIR node representing a pattern in parentheses, used to control precedence\n-class GroupedPattern : public Pattern\n-{\n-  std::unique_ptr<Pattern> pattern_in_parens;\n-  Location locus;\n-  Analysis::NodeMapping mappings;\n-\n-public:\n-  std::string as_string () const override\n-  {\n-    return \"(\" + pattern_in_parens->as_string () + \")\";\n-  }\n-\n-  GroupedPattern (Analysis::NodeMapping mappings,\n-\t\t  std::unique_ptr<Pattern> pattern_in_parens, Location locus)\n-    : pattern_in_parens (std::move (pattern_in_parens)), locus (locus),\n-      mappings (mappings)\n-  {}\n-\n-  // Copy constructor uses clone\n-  GroupedPattern (GroupedPattern const &other)\n-    : pattern_in_parens (other.pattern_in_parens->clone_pattern ()),\n-      locus (other.locus), mappings (other.mappings)\n-  {}\n-\n-  // Overload assignment operator to clone\n-  GroupedPattern &operator= (GroupedPattern const &other)\n-  {\n-    pattern_in_parens = other.pattern_in_parens->clone_pattern ();\n-    locus = other.locus;\n-    mappings = other.mappings;\n-\n-    return *this;\n-  }\n-\n-  // default move semantics\n-  GroupedPattern (GroupedPattern &&other) = default;\n-  GroupedPattern &operator= (GroupedPattern &&other) = default;\n-\n-  Location get_locus () const override { return locus; }\n-\n-  void accept_vis (HIRFullVisitor &vis) override;\n-  void accept_vis (HIRPatternVisitor &vis) override;\n-\n-  Analysis::NodeMapping get_pattern_mappings () const override final\n-  {\n-    return mappings;\n-  }\n-\n-  PatternType get_pattern_type () const override final\n-  {\n-    return PatternType::GROUPED;\n-  }\n-\n-  std::unique_ptr<Pattern> &get_item () { return pattern_in_parens; }\n-  const std::unique_ptr<Pattern> &get_item () const\n-  {\n-    return pattern_in_parens;\n-  }\n-\n-protected:\n-  /* Use covariance to implement clone function as returning this object rather\n-   * than base */\n-  GroupedPattern *clone_pattern_impl () const override\n-  {\n-    return new GroupedPattern (*this);\n-  }\n-};\n-\n // HIR node representing patterns that can match slices and arrays\n class SlicePattern : public Pattern\n {"}, {"sha": "1055f4dd15bd6c4d1b52d3a9451ce35eabddc22f", "filename": "gcc/rust/hir/tree/rust-hir-visitor.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-visitor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-visitor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-visitor.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -138,7 +138,6 @@ class HIRFullVisitor\n   virtual void visit (TuplePatternItemsMultiple &tuple_items) = 0;\n   virtual void visit (TuplePatternItemsRanged &tuple_items) = 0;\n   virtual void visit (TuplePattern &pattern) = 0;\n-  virtual void visit (GroupedPattern &pattern) = 0;\n   virtual void visit (SlicePattern &pattern) = 0;\n   virtual void visit (EmptyStmt &stmt) = 0;\n   virtual void visit (LetStmt &stmt) = 0;\n@@ -290,7 +289,6 @@ class HIRFullVisitorBase : public HIRFullVisitor\n   virtual void visit (TuplePatternItemsMultiple &) override {}\n   virtual void visit (TuplePatternItemsRanged &) override {}\n   virtual void visit (TuplePattern &) override {}\n-  virtual void visit (GroupedPattern &) override {}\n   virtual void visit (SlicePattern &) override {}\n \n   virtual void visit (EmptyStmt &) override {}\n@@ -470,7 +468,6 @@ class HIRExpressionVisitor\n class HIRPatternVisitor\n {\n public:\n-  virtual void visit (GroupedPattern &) = 0;\n   virtual void visit (IdentifierPattern &) = 0;\n   virtual void visit (LiteralPattern &) = 0;\n   virtual void visit (PathInExpression &) = 0;"}, {"sha": "6b591c66f5e47df4f807cd64c8932b2df6d0a5ab", "filename": "gcc/rust/typecheck/rust-hir-type-check-pattern.cc", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -386,15 +386,6 @@ TypeCheckPattern::visit (HIR::IdentifierPattern &)\n   infered = parent;\n }\n \n-void\n-TypeCheckPattern::visit (HIR::GroupedPattern &pattern)\n-{\n-  TyTy::BaseType *inner_ty\n-    = TypeCheckPattern::Resolve (pattern.get_item ().get (), parent);\n-  infered = inner_ty->clone ();\n-  infered->set_ref (pattern.get_pattern_mappings ().get_hirid ());\n-}\n-\n void\n TypeCheckPattern::visit (HIR::QualifiedPathInExpression &)\n {"}, {"sha": "ac4f07830665b8655364ea5ad0d2103a0ad9bea3", "filename": "gcc/rust/typecheck/rust-hir-type-check-pattern.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776c4247de465dd93438a738fff48d5b2076ec11/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.h?ref=776c4247de465dd93438a738fff48d5b2076ec11", "patch": "@@ -39,7 +39,6 @@ class TypeCheckPattern : public TypeCheckBase, public HIR::HIRPatternVisitor\n   void visit (HIR::LiteralPattern &pattern) override;\n   void visit (HIR::RangePattern &pattern) override;\n   void visit (HIR::IdentifierPattern &pattern) override;\n-  void visit (HIR::GroupedPattern &pattern) override;\n   void visit (HIR::QualifiedPathInExpression &pattern) override;\n   void visit (HIR::ReferencePattern &pattern) override;\n   void visit (HIR::SlicePattern &pattern) override;"}]}