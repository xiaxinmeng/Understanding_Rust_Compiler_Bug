{"sha": "18cb045d873daf1b803b8b3973bafa260d459f41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjYjA0NWQ4NzNkYWYxYjgwM2I4YjM5NzNiYWZhMjYwZDQ1OWY0MQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2017-08-30T20:50:25Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2017-08-30T20:50:25Z"}, "message": "Make taking the address of an overloaded function a non-deduced context\n\ncp/\n\n* pt.c (unify_overload_resolution_failure): Remove.\n(unify_one_argument): Adjust.\n\ntestsuite/\n\n* g++.dg/overload/template6.C: New.\n\nFrom-SVN: r251548", "tree": {"sha": "58c7f175236c316521433b4c80e7a75b33472098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58c7f175236c316521433b4c80e7a75b33472098"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18cb045d873daf1b803b8b3973bafa260d459f41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18cb045d873daf1b803b8b3973bafa260d459f41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18cb045d873daf1b803b8b3973bafa260d459f41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18cb045d873daf1b803b8b3973bafa260d459f41/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e75ec3fab878ec6ebde748e6b57fdcaec8fd4ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e75ec3fab878ec6ebde748e6b57fdcaec8fd4ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e75ec3fab878ec6ebde748e6b57fdcaec8fd4ea"}], "stats": {"total": 76, "additions": 60, "deletions": 16}, "files": [{"sha": "10ae08ae18693965c93f982338e3c5a43d0c65a8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18cb045d873daf1b803b8b3973bafa260d459f41/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18cb045d873daf1b803b8b3973bafa260d459f41/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=18cb045d873daf1b803b8b3973bafa260d459f41", "patch": "@@ -1,3 +1,10 @@\n+2017-08-30  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tMake taking the address of an overloaded function a non-deduced context\n+\n+\t* pt.c (unify_overload_resolution_failure): Remove.\n+\t(unify_one_argument): Adjust.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "f4868abfda2623837542a8765265402c443e0acf", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18cb045d873daf1b803b8b3973bafa260d459f41/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18cb045d873daf1b803b8b3973bafa260d459f41/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=18cb045d873daf1b803b8b3973bafa260d459f41", "patch": "@@ -6400,16 +6400,6 @@ unify_template_argument_mismatch (bool explain_p, tree parm, tree arg)\n   return unify_invalid (explain_p);\n }\n \n-static int\n-unify_overload_resolution_failure (bool explain_p, tree arg)\n-{\n-  if (explain_p)\n-    inform (input_location,\n-\t    \"  could not resolve address from overloaded function %qE\",\n-\t    arg);\n-  return unify_invalid (explain_p);\n-}\n-\n /* Attempt to convert the non-type template parameter EXPR to the\n    indicated TYPE.  If the conversion is successful, return the\n    converted value.  If the conversion is unsuccessful, return\n@@ -19305,12 +19295,12 @@ unify_one_argument (tree tparms, tree targs, tree parm, tree arg,\n \t\t templates and at most one of a set of\n \t\t overloaded functions provides a unique\n \t\t match.  */\n-\n-\t      if (resolve_overloaded_unification\n-\t\t  (tparms, targs, parm, arg, strict,\n-\t\t   arg_strict, explain_p))\n-\t\treturn unify_success (explain_p);\n-\t      return unify_overload_resolution_failure (explain_p, arg);\n+\t      resolve_overloaded_unification (tparms, targs, parm,\n+\t\t\t\t\t      arg, strict,\n+\t\t\t\t\t      arg_strict, explain_p);\n+\t      /* If a unique match was not found, this is a\n+\t         non-deduced context, so we still succeed. */\n+\t      return unify_success (explain_p);\n \t    }\n \n \t  arg_expr = arg;"}, {"sha": "f2650aacba90a069bf4da2217322cad7cf3e52db", "filename": "gcc/testsuite/g++.dg/overload/template6.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18cb045d873daf1b803b8b3973bafa260d459f41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18cb045d873daf1b803b8b3973bafa260d459f41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate6.C?ref=18cb045d873daf1b803b8b3973bafa260d459f41", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile { target c++11 } }\n+\n+template <typename>\n+struct is_function {\n+  static constexpr bool value = false;\n+};\n+\n+template <typename R, typename ...Args>\n+struct is_function<R(Args...)>\n+{\n+  static constexpr bool value = true;\n+};\n+\n+template<bool, typename> struct enable_if {};\n+\n+template<typename T> struct enable_if<true, T> \n+{\n+  typedef T type;\n+};\n+\n+template <class T>\n+struct remove_pointer\n+{\n+  typedef T type;\n+};\n+\n+template <class T>\n+struct remove_pointer<T*>\n+{\n+  typedef T type;\n+};\n+\n+void f(int) {}\n+void f(double) {}\n+\n+template <class T>\n+struct X\n+{\n+  template <class U=T,\n+\t    typename enable_if<is_function<\n+\t\t\t\t typename remove_pointer<U>::type>::value,\n+\t\t\t       bool>::type = false> X(U&&) {}\n+};\n+\n+int main() {\n+  X<void(*)(int)> x0(f);\n+}"}]}