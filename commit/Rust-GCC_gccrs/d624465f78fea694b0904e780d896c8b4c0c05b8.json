{"sha": "d624465f78fea694b0904e780d896c8b4c0c05b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYyNDQ2NWY3OGZlYTY5NGIwOTA0ZTc4MGQ4OTZjOGI0YzBjMDViOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-15T03:33:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-15T03:33:11Z"}, "message": "tm.texi: Replace RETURN_IN_MEMORY with TARGET_RETURN_IN_MEMORY.\n\n\t* doc/tm.texi: Replace RETURN_IN_MEMORY with\n\tTARGET_RETURN_IN_MEMORY.\n\nFrom-SVN: r75900", "tree": {"sha": "0e871daf49d62071d770dd17f55bd95435db1289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e871daf49d62071d770dd17f55bd95435db1289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d624465f78fea694b0904e780d896c8b4c0c05b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d624465f78fea694b0904e780d896c8b4c0c05b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d624465f78fea694b0904e780d896c8b4c0c05b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d624465f78fea694b0904e780d896c8b4c0c05b8/comments", "author": null, "committer": null, "parents": [{"sha": "5af0e6ae6323dd66b9ab73618ff4a974d5cfc67c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af0e6ae6323dd66b9ab73618ff4a974d5cfc67c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af0e6ae6323dd66b9ab73618ff4a974d5cfc67c"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "28ecb14a1145e867ee18f3f22e756149f78521e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d624465f78fea694b0904e780d896c8b4c0c05b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d624465f78fea694b0904e780d896c8b4c0c05b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d624465f78fea694b0904e780d896c8b4c0c05b8", "patch": "@@ -1,3 +1,8 @@\n+2004-01-14  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* doc/tm.texi: Replace RETURN_IN_MEMORY with\n+\tTARGET_RETURN_IN_MEMORY.\n+\n 2004-01-15  Jan Hubicka  <jh@suse.cz>\n \n \t* builtins.c (std_expand_builtin_va_arg): Align operand when needed."}, {"sha": "c76cd888ebc4d546fad94c68ad9f68ff5f6885cb", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d624465f78fea694b0904e780d896c8b4c0c05b8/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d624465f78fea694b0904e780d896c8b4c0c05b8/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=d624465f78fea694b0904e780d896c8b4c0c05b8", "patch": "@@ -3944,7 +3944,7 @@ is called the @dfn{structure value address}.\n This section describes how to control returning structure values in\n memory.\n \n-@deftypefn {Target Hook} bool RETURN_IN_MEMORY (tree @var{type}, tree @var{fntype})\n+@deftypefn {Target Hook} bool TARGET_RETURN_IN_MEMORY (tree @var{type}, tree @var{fntype})\n This target hook should return a nonzero value to say to return the\n function value in memory, just as large structures are always returned.\n Here @var{type} will be the data type of the value, and @var{fntype}\n@@ -3968,7 +3968,8 @@ Define this macro to be 1 if all structure and union return values must be\n in memory.  Since this results in slower code, this should be defined\n only if needed for compatibility with other compilers or with an ABI@.\n If you define this macro to be 0, then the conventions used for structure\n-and union return values are decided by the @code{RETURN_IN_MEMORY} macro.\n+and union return values are decided by the @code{TARGET_RETURN_IN_MEMORY}\n+target hook.\n \n If not defined, this defaults to the value 1.\n @end defmac"}]}