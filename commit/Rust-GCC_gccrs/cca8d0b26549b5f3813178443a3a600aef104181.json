{"sha": "cca8d0b26549b5f3813178443a3a600aef104181", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NhOGQwYjI2NTQ5YjVmMzgxMzE3ODQ0M2EzYTYwMGFlZjEwNDE4MQ==", "commit": {"author": {"name": "Toma Tabacu", "email": "toma.tabacu@imgtec.com", "date": "2016-12-23T09:52:43Z"}, "committer": {"name": "Toma Tabacu", "email": "tomtab@gcc.gnu.org", "date": "2016-12-23T09:52:43Z"}, "message": "MIPS: Cleanup the forcing of assembly output in error tests.\n\ngcc/testsuite\n\n\t* gcc.target/mips/oddspreg-2.c (dg-options): Remove dg-skip-if for\n\t-fno-fat-lto-objects and add the -ffat-lto-objects option, along with\n\tan explanation for its purpose.\n\t* gcc.target/mips/oddspreg-3.c (dg-options): Likewise.\n\t* gcc.target/mips/oddspreg-6.c (dg-options): Likewise.\n\t* gcc.target/mips/no-dsp-1.c: Add an explanation for the purpose of\n\t-ffat-lto-objects.\n\t* gcc.target/mips/pr54240.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-14.c: Likewise.\n\t* gcc.target/mips/soft-float-1.c: Likewise.\n\nFrom-SVN: r243908", "tree": {"sha": "9d3e31683bf74b8739bd14e38fde71879c22332d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d3e31683bf74b8739bd14e38fde71879c22332d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cca8d0b26549b5f3813178443a3a600aef104181", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca8d0b26549b5f3813178443a3a600aef104181", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca8d0b26549b5f3813178443a3a600aef104181", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca8d0b26549b5f3813178443a3a600aef104181/comments", "author": null, "committer": null, "parents": [{"sha": "1693722010e4b1f947356279fefc90112eb23716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1693722010e4b1f947356279fefc90112eb23716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1693722010e4b1f947356279fefc90112eb23716"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "f208f08c5752adeef5d54f5b1c81c21170fe5eae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cca8d0b26549b5f3813178443a3a600aef104181", "patch": "@@ -1,3 +1,16 @@\n+2016-12-23  Toma Tabacu  <toma.tabacu@imgtec.com>\n+\n+\t* gcc.target/mips/oddspreg-2.c (dg-options): Remove dg-skip-if for\n+\t-fno-fat-lto-objects and add the -ffat-lto-objects option, along with\n+\tan explanation for its purpose.\n+\t* gcc.target/mips/oddspreg-3.c (dg-options): Likewise.\n+\t* gcc.target/mips/oddspreg-6.c (dg-options): Likewise.\n+\t* gcc.target/mips/no-dsp-1.c: Add an explanation for the purpose of\n+\t-ffat-lto-objects.\n+\t* gcc.target/mips/pr54240.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-14.c: Likewise.\n+\t* gcc.target/mips/soft-float-1.c: Likewise.\n+\n 2016-12-22  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* gcc.dg/gimplefe-20.c: New test-case."}, {"sha": "f03f2393777c85d4f46d8670e78384225dfc2e4e", "filename": "gcc/testsuite/gcc.target/mips/no-dsp-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-dsp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-dsp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-dsp-1.c?ref=cca8d0b26549b5f3813178443a3a600aef104181", "patch": "@@ -1,4 +1,7 @@\n /* { dg-options \"-mno-dsp -ffat-lto-objects\" } */\n+/* This is testing for errors which can only happen in assembly generation.\n+   dg-error does not guarantee assembly generation, so we need to do it\n+   manually by using -ffat-lto-objects.  */\n \n void\n foo (void)"}, {"sha": "1a857377fb6caec4aa3681cb009b17d0d9247ebc", "filename": "gcc/testsuite/gcc.target/mips/oddspreg-2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-2.c?ref=cca8d0b26549b5f3813178443a3a600aef104181", "patch": "@@ -1,6 +1,8 @@\n /* Check that we disable odd-numbered single precision registers.  */\n-/* { dg-skip-if \"needs asm output\" { *-*-* } { \"-fno-fat-lto-objects\" } { \"\" } } */\n-/* { dg-options \"-mabi=32 -mno-odd-spreg -mhard-float\" } */\n+/* { dg-options \"-mabi=32 -mno-odd-spreg -mhard-float -ffat-lto-objects\" } */\n+/* This is testing for errors which can only happen in assembly generation.\n+   dg-error does not guarantee assembly generation, so we need to do it\n+   manually by using -ffat-lto-objects.  */\n \n NOMIPS16 void\n foo ()"}, {"sha": "16a2f03e0ff01c0a7ab3730e6fb9c53b417b12c2", "filename": "gcc/testsuite/gcc.target/mips/oddspreg-3.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-3.c?ref=cca8d0b26549b5f3813178443a3a600aef104181", "patch": "@@ -1,6 +1,8 @@\n /* Check that we disable odd-numbered single precision registers.  */\n-/* { dg-skip-if \"needs asm output\" { *-*-* } { \"-fno-fat-lto-objects\" } { \"\" } } */\n-/* { dg-options \"-mabi=32 -mfp32 -march=loongson3a -mhard-float\" } */\n+/* { dg-options \"-mabi=32 -mfp32 -march=loongson3a -mhard-float -ffat-lto-objects\" } */\n+/* This is testing for errors which can only happen in assembly generation.\n+   dg-error does not guarantee assembly generation, so we need to do it\n+   manually by using -ffat-lto-objects.  */\n \n NOMIPS16 void\n foo ()"}, {"sha": "53ac07698ff511d6b6f664095970c4e141f00ae3", "filename": "gcc/testsuite/gcc.target/mips/oddspreg-6.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Foddspreg-6.c?ref=cca8d0b26549b5f3813178443a3a600aef104181", "patch": "@@ -1,6 +1,8 @@\n /* Check that we disable odd-numbered single precision registers for FPXX.  */\n-/* { dg-skip-if \"needs asm output\" { *-*-* } { \"-fno-fat-lto-objects\" } { \"\" } } */\n-/* { dg-options \"-mabi=32 -mfpxx -mhard-float\" } */\n+/* { dg-options \"-mabi=32 -mfpxx -mhard-float -ffat-lto-objects\" } */\n+/* This is testing for errors which can only happen in assembly generation.\n+   dg-error does not guarantee assembly generation, so we need to do it\n+   manually by using -ffat-lto-objects.  */\n \n NOMIPS16 void\n foo ()"}, {"sha": "d3976f6cfef0c4e078f1b81f9769d164f15896f1", "filename": "gcc/testsuite/gcc.target/mips/pr54240.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr54240.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr54240.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr54240.c?ref=cca8d0b26549b5f3813178443a3a600aef104181", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-fdump-tree-phiopt-details -ffat-lto-objects isa>=4\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" \"-O1\" } { \"\" } } */\n+/* This is testing for errors which can only happen in assembly generation.\n+   dg-error does not guarantee assembly generation, so we need to do it\n+   manually by using -ffat-lto-objects.  */\n \n typedef struct s {\n   int v;"}, {"sha": "ecb4158ce3bb7cd85352cd716056f0fe0903dad0", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-14.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-14.c?ref=cca8d0b26549b5f3813178443a3a600aef104181", "patch": "@@ -1,5 +1,8 @@\n /* { dg-options \"(-mips16) -mr10k-cache-barrier=store -ffat-lto-objects\" } */\n \n /* Test that indirect calls are protected.  */\n+/* This is testing for errors which can only happen in assembly generation.\n+   dg-error does not guarantee assembly generation, so we need to do it\n+   manually by using -ffat-lto-objects.  */\n \n MIPS16 void foo (void) { } /* { dg-message \"sorry, unimplemented\" } */"}, {"sha": "e6db3e2ddf61be9be9835fb54e0a3679daa392ec", "filename": "gcc/testsuite/gcc.target/mips/soft-float-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsoft-float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca8d0b26549b5f3813178443a3a600aef104181/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsoft-float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsoft-float-1.c?ref=cca8d0b26549b5f3813178443a3a600aef104181", "patch": "@@ -1,4 +1,7 @@\n /* { dg-options \"-msoft-float -ffat-lto-objects\" } */\n+/* This is testing for errors which can only happen in assembly generation.\n+   dg-error does not guarantee assembly generation, so we need to do it\n+   manually by using -ffat-lto-objects.  */\n \n void\n foo (void)"}]}