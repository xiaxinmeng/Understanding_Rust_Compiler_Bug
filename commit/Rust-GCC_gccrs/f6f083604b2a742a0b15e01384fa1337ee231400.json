{"sha": "f6f083604b2a742a0b15e01384fa1337ee231400", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmMDgzNjA0YjJhNzQyYTBiMTVlMDEzODRmYTEzMzdlZTIzMTQwMA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2006-01-26T14:59:26Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-01-26T14:59:26Z"}, "message": "re PR c/25861 (tree check fail at c-common.c:2430)\n\n2006-01-26  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR C/25861\n        * c-common.c (c_common_truthvalue_conversion) <case ADDR_EXPR>:\n        Use a new variable, inner.  PARM_DECLs are always non-weak.\n\n2006-01-26  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR C/25861\n        * gcc.c-torture/compile/pr25861.c: New test.\n\nFrom-SVN: r110256", "tree": {"sha": "3ddf13d99d2fe455060fa7801f66ca377299cd4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ddf13d99d2fe455060fa7801f66ca377299cd4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6f083604b2a742a0b15e01384fa1337ee231400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f083604b2a742a0b15e01384fa1337ee231400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f083604b2a742a0b15e01384fa1337ee231400", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f083604b2a742a0b15e01384fa1337ee231400/comments", "author": null, "committer": null, "parents": [{"sha": "62f3e894c581600047c65b145f24441dd13c4b39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f3e894c581600047c65b145f24441dd13c4b39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f3e894c581600047c65b145f24441dd13c4b39"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "f925b006e512c1234ae2557adc2d03072cdb9da7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f083604b2a742a0b15e01384fa1337ee231400/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f083604b2a742a0b15e01384fa1337ee231400/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6f083604b2a742a0b15e01384fa1337ee231400", "patch": "@@ -1,3 +1,9 @@\n+2006-01-26  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR C/25861\n+\t* c-common.c (c_common_truthvalue_conversion) <case ADDR_EXPR>:\n+\tUse a new variable, inner.  PARM_DECLs are always non-weak.\n+\n 2006-01-26  Shantonu Sen  <ssen@opendarwin.org>\n \n \t* tree.h (OMP_CLAUSE_SUBCODE_CHECK): Add definition for"}, {"sha": "fe99dfb24af7a4e2143748e5b4f7384f933723f5", "filename": "gcc/c-common.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f083604b2a742a0b15e01384fa1337ee231400/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f083604b2a742a0b15e01384fa1337ee231400/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=f6f083604b2a742a0b15e01384fa1337ee231400", "patch": "@@ -2456,25 +2456,26 @@ c_common_truthvalue_conversion (tree expr)\n \n     case ADDR_EXPR:\n       {\n-\tif (DECL_P (TREE_OPERAND (expr, 0))\n-\t    && !DECL_WEAK (TREE_OPERAND (expr, 0)))\n+ \ttree inner = TREE_OPERAND (expr, 0);\n+\tif (DECL_P (inner)\n+\t    && (TREE_CODE (inner) == PARM_DECL || !DECL_WEAK (inner)))\n \t  {\n \t    /* Common Ada/Pascal programmer's mistake.  We always warn\n \t       about this since it is so bad.  */\n \t    warning (OPT_Walways_true, \"the address of %qD, will always evaluate as %<true%>\",\n-\t\t     TREE_OPERAND (expr, 0));\n+\t\t     inner);\n \t    return truthvalue_true_node;\n \t  }\n \n \t/* If we are taking the address of an external decl, it might be\n \t   zero if it is weak, so we cannot optimize.  */\n-\tif (DECL_P (TREE_OPERAND (expr, 0))\n-\t    && DECL_EXTERNAL (TREE_OPERAND (expr, 0)))\n+\tif (DECL_P (inner)\n+\t    && DECL_EXTERNAL (inner))\n \t  break;\n \n-\tif (TREE_SIDE_EFFECTS (TREE_OPERAND (expr, 0)))\n+\tif (TREE_SIDE_EFFECTS (inner))\n \t  return build2 (COMPOUND_EXPR, truthvalue_type_node,\n-\t\t\t TREE_OPERAND (expr, 0), truthvalue_true_node);\n+\t\t\t inner, truthvalue_true_node);\n \telse\n \t  return truthvalue_true_node;\n       }"}, {"sha": "0042b363dda433726538b8923575b968f5413ae5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f083604b2a742a0b15e01384fa1337ee231400/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f083604b2a742a0b15e01384fa1337ee231400/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6f083604b2a742a0b15e01384fa1337ee231400", "patch": "@@ -1,3 +1,8 @@\n+2006-01-26  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR C/25861\n+\t* gcc.c-torture/compile/pr25861.c: New test.\n+\t\n 2006-01-26  Paul Brook  <paul@codesourcery.com>\n \n \t* gcc.dg/compat/struct-layout-1.exp: Pass -e to generator program"}, {"sha": "cdd8efbc45542836fa18f869702efbc40ab16dbd", "filename": "gcc/testsuite/gcc.c-torture/compile/pr25861.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f083604b2a742a0b15e01384fa1337ee231400/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr25861.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f083604b2a742a0b15e01384fa1337ee231400/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr25861.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr25861.c?ref=f6f083604b2a742a0b15e01384fa1337ee231400", "patch": "@@ -0,0 +1,4 @@\n+int f(void *a)\n+{\n+  return !(&a);\n+}"}]}