{"sha": "105ab5db858d2001b186e9bbc2911f8b2d3aba68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA1YWI1ZGI4NThkMjAwMWIxODZlOWJiYzI5MTFmOGIyZDNhYmE2OA==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2009-04-17T16:49:03Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2009-04-17T16:49:03Z"}, "message": "misc.c (gnat_expand_expr): Remove.\n\n\n\t* gcc-interface/misc.c (gnat_expand_expr): Remove.\n\t(LANG_HOOKS_EXPAND_EXPR): Remove.\n\nFrom-SVN: r146277", "tree": {"sha": "f92321daa9e4b8302768a3c4eee410e530cd8d66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f92321daa9e4b8302768a3c4eee410e530cd8d66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/105ab5db858d2001b186e9bbc2911f8b2d3aba68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105ab5db858d2001b186e9bbc2911f8b2d3aba68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/105ab5db858d2001b186e9bbc2911f8b2d3aba68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105ab5db858d2001b186e9bbc2911f8b2d3aba68/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf8aba7f5a071a5cb7dad4c91dd77b602861797e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf8aba7f5a071a5cb7dad4c91dd77b602861797e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf8aba7f5a071a5cb7dad4c91dd77b602861797e"}], "stats": {"total": 48, "additions": 5, "deletions": 43}, "files": [{"sha": "9724bcd7c267efc5a580deed0522481a85c6925a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105ab5db858d2001b186e9bbc2911f8b2d3aba68/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105ab5db858d2001b186e9bbc2911f8b2d3aba68/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=105ab5db858d2001b186e9bbc2911f8b2d3aba68", "patch": "@@ -1,3 +1,8 @@\n+2009-04-17  Diego Novillo  <dnovillo@google.com>\n+\n+\t* gcc-interface/misc.c (gnat_expand_expr): Remove.\n+\t(LANG_HOOKS_EXPAND_EXPR): Remove.\n+\n 2009-04-17  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb: Minor reformatting"}, {"sha": "cbb892933f1e88fef130053b09e79a48af7721c7", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105ab5db858d2001b186e9bbc2911f8b2d3aba68/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105ab5db858d2001b186e9bbc2911f8b2d3aba68/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=105ab5db858d2001b186e9bbc2911f8b2d3aba68", "patch": "@@ -91,8 +91,6 @@ static const char *gnat_dwarf_name\t(tree, int);\n static tree gnat_return_tree\t\t(tree);\n static int gnat_eh_type_covers\t\t(tree, tree);\n static void gnat_parse_file\t\t(int);\n-static rtx gnat_expand_expr\t\t(tree, rtx, enum machine_mode, int,\n-\t\t\t\t\t rtx *);\n static void internal_error_function\t(const char *, va_list *);\n static tree gnat_type_max_size\t\t(const_tree);\n \n@@ -124,8 +122,6 @@ static tree gnat_type_max_size\t\t(const_tree);\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL gnat_finish_incomplete_decl\n #undef  LANG_HOOKS_GET_ALIAS_SET\n #define LANG_HOOKS_GET_ALIAS_SET\tgnat_get_alias_set\n-#undef  LANG_HOOKS_EXPAND_EXPR\n-#define LANG_HOOKS_EXPAND_EXPR\t\tgnat_expand_expr\n #undef  LANG_HOOKS_MARK_ADDRESSABLE\n #define LANG_HOOKS_MARK_ADDRESSABLE\tgnat_mark_addressable\n #undef  LANG_HOOKS_PRINT_DECL\n@@ -612,45 +608,6 @@ gnat_printable_name (tree decl, int verbosity)\n     return ada_name;\n }\n \n-/* Expands GNAT-specific GCC tree nodes.  The only ones we support\n-   here are  and NULL_EXPR.  */\n-\n-static rtx\n-gnat_expand_expr (tree exp, rtx target, enum machine_mode tmode,\n-\t\t  int modifier, rtx *alt_rtl)\n-{\n-  tree type = TREE_TYPE (exp);\n-  tree new;\n-\n-  /* Update EXP to be the new expression to expand.  */\n-  switch (TREE_CODE (exp))\n-    {\n-#if 0\n-    case ALLOCATE_EXPR:\n-      return\n-\tallocate_dynamic_stack_space\n-\t  (expand_expr (TREE_OPERAND (exp, 0), NULL_RTX, TYPE_MODE (sizetype),\n-\t\t\tEXPAND_NORMAL),\n-\t   NULL_RTX, tree_low_cst (TREE_OPERAND (exp, 1), 1));\n-#endif\n-\n-    case UNCONSTRAINED_ARRAY_REF:\n-      /* If we are evaluating just for side-effects, just evaluate our\n-\t operand.  Otherwise, abort since this code should never appear\n-\t in a tree to be evaluated (objects aren't unconstrained).  */\n-      if (target == const0_rtx || TREE_CODE (type) == VOID_TYPE)\n-\treturn expand_expr (TREE_OPERAND (exp, 0), const0_rtx,\n-\t\t\t    VOIDmode, modifier);\n-\n-      /* ... fall through ... */\n-\n-    default:\n-      gcc_unreachable ();\n-    }\n-\n-  return expand_expr_real (new, target, tmode, modifier, alt_rtl);\n-}\n-\n /* Do nothing (return the tree node passed).  */\n \n static tree"}]}