{"sha": "74fda2dc9f6198c23da01303a51d06ff69008e31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRmZGEyZGM5ZjYxOThjMjNkYTAxMzAzYTUxZDA2ZmY2OTAwOGUzMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-06-19T15:29:49Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-19T15:29:49Z"}, "message": "Fix value category bugs in std::reduce\n\n\t* include/std/numeric (reduce(Iter, Iter, T, BinOp)): Fix value\n\tcategory used in invocable check.\n\t(reduce(Iter, Iter, T)): Pass initial value as rvalue.\n\t* testsuite/26_numerics/reduce/2.cc: New test.\n\nFrom-SVN: r272477", "tree": {"sha": "cf7d2bc519aa3ce55889d822757c0085f6b61f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf7d2bc519aa3ce55889d822757c0085f6b61f57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74fda2dc9f6198c23da01303a51d06ff69008e31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fda2dc9f6198c23da01303a51d06ff69008e31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74fda2dc9f6198c23da01303a51d06ff69008e31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74fda2dc9f6198c23da01303a51d06ff69008e31/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4349775a30600906f5811ba7c743a5c22bdb3d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4349775a30600906f5811ba7c743a5c22bdb3d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4349775a30600906f5811ba7c743a5c22bdb3d7d"}], "stats": {"total": 81, "additions": 79, "deletions": 2}, "files": [{"sha": "e6373ca3cf7364b8f0a7ed183094f5dd12bb9963", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fda2dc9f6198c23da01303a51d06ff69008e31/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fda2dc9f6198c23da01303a51d06ff69008e31/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=74fda2dc9f6198c23da01303a51d06ff69008e31", "patch": "@@ -1,3 +1,10 @@\n+2019-06-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/numeric (reduce(Iter, Iter, T, BinOp)): Fix value\n+\tcategory used in invocable check.\n+\t(reduce(Iter, Iter, T)): Pass initial value as rvalue.\n+\t* testsuite/26_numerics/reduce/2.cc: New test.\n+\n 2019-06-18  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/algorithmfwd.h: Change title of doc group."}, {"sha": "fc2242f3de637492d65b994656b8fdb2b6996d54", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fda2dc9f6198c23da01303a51d06ff69008e31/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fda2dc9f6198c23da01303a51d06ff69008e31/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=74fda2dc9f6198c23da01303a51d06ff69008e31", "patch": "@@ -246,7 +246,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t   _BinaryOperation __binary_op)\n     {\n       using value_type = typename iterator_traits<_InputIterator>::value_type;\n-      static_assert(is_invocable_r_v<_Tp, _BinaryOperation, _Tp&, _Tp&>);\n+      static_assert(is_invocable_r_v<_Tp, _BinaryOperation&, _Tp&, _Tp&>);\n       static_assert(is_convertible_v<value_type, _Tp>);\n       if constexpr (__is_random_access_iter<_InputIterator>::value)\n \t{\n@@ -278,7 +278,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _InputIterator, typename _Tp>\n     inline _Tp\n     reduce(_InputIterator __first, _InputIterator __last, _Tp __init)\n-    { return std::reduce(__first, __last, __init, plus<>()); }\n+    { return std::reduce(__first, __last, std::move(__init), plus<>()); }\n \n   /**\n    *  @brief  Calculate reduction of values in a range."}, {"sha": "adbfaf877bd0bef287ee8a0b5b72e0fbc1e054ac", "filename": "libstdc++-v3/testsuite/26_numerics/reduce/2.cc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74fda2dc9f6198c23da01303a51d06ff69008e31/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Freduce%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74fda2dc9f6198c23da01303a51d06ff69008e31/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Freduce%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Freduce%2F2.cc?ref=74fda2dc9f6198c23da01303a51d06ff69008e31", "patch": "@@ -0,0 +1,70 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// C++17 29.8.3 [reduce]\n+\n+#include <numeric>\n+#include <iterator>\n+#include <testsuite_hooks.h>\n+#include <testsuite_iterators.h>\n+\n+struct T\n+{\n+  T(int);\n+  T(T&&); // MoveConstructible\n+  T& operator=(T&&); // not required by the standard, but it needs to be\n+  T operator+(const T&) const;\n+};\n+\n+void\n+test01()\n+{\n+  T t[1]{1};\n+  std::reduce(t, t+1, T(0));\n+\n+  using __gnu_test::test_container;\n+  using __gnu_test::input_iterator_wrapper;\n+  test_container<T, input_iterator_wrapper> con(t);\n+  std::reduce(con.begin(), con.end(), T(0));\n+}\n+\n+struct Op\n+{\n+  T operator()(T&, T&) const&;\n+\n+  // The standard does *not* require invoking as an rvalue to be supported.\n+  T operator()(T&, T&) && = delete;\n+\n+  // The standard does *not* require rvalue arguments to be supported\n+  // (this is almost certainly a defect and should be allowed).\n+  T operator()(T&&, T&&) const = delete;\n+};\n+\n+void\n+test02()\n+{\n+  T t[1]{1};\n+  std::reduce(t, t+1, T(0), Op());\n+\n+  using __gnu_test::test_container;\n+  using __gnu_test::input_iterator_wrapper;\n+  test_container<T, input_iterator_wrapper> con(t);\n+  std::reduce(con.begin(), con.end(), T(0), Op());\n+}"}]}