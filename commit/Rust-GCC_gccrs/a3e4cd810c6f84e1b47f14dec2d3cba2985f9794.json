{"sha": "a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNlNGNkODEwYzZmODRlMWI0N2YxNGRlYzJkM2NiYTI5ODVmOTc5NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-10-20T12:34:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-10-20T12:34:10Z"}, "message": "Makefile.am: Move ctype.cc, ctype_configure_char.cc and ctype_members.cc to ...\n\n\t* src/c++98/Makefile.am: Move ctype.cc, ctype_configure_char.cc and\n\tctype_members.cc to ...\n\t* src/c++11/Makefile.am: Here.\n\t* src/c++98/Makefile.in: Regenerate.\n\t* src/c++11/Makefile.in: Regenerate.\n\t* src/c++98/ctype.cc: Move file to ...\n\t* src/c++11/ctype.cc: Here, define ctype_base::blank.\n\t* config/abi/pre/gnu.ver: Export ctype_base::blank.\n\t* config/locale/generic/ctype_members.cc\n\t(ctype<wchar_t>::_M_convert_to_wmask): Handle blank. Update comments.\n\t* config/locale/gnu/ctype_members.cc\n\t(ctype<wchar_t>::_M_convert_to_wmask): Likewise.\n\t* config/os/aix/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/bionic/ctype_base.h (ctype_base::blank): Likewise.\n\t* config/os/bsd/darwin/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/bsd/darwin/ctype_inline.h (ctype<char>::is): Use blank.\n\t(ctype<wchar_t::do_is): Likewise.\n\t* config/os/bsd/dragonfly/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/bsd/dragonfly/ctype_inline.h (ctype<char>::is): Use blank.\n\t(ctype<wchar_t::do_is): Likewise.\n\t* config/os/bsd/freebsd/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/bsd/freebsd/ctype_inline.h (ctype<char>::is): Use blank.\n\t(ctype<wchar_t::do_is): Likewise.\n\t* config/os/bsd/netbsd/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/bsd/openbsd/ctype_base.h (ctype_base::blank): Likewise.\n\t* config/os/djgpp/ctype_base.h (ctype_base::blank): Likewise.\n\t* config/os/generic/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/generic/ctype_inline.h (ctype<char>::is): Use blank.\n\t* config/os/gnu-linux/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/hpux/ctype_base.h (ctype_base::blank): Likewise.\n\t* config/os/mingw32-w64/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/mingw32-w64/ctype_configure_char.cc\n\t(ctype<char>::classic_table()): Set blank bit for space and tab.\n\t* config/os/mingw32/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/mingw32/ctype_configure_char.cc\n\t(ctype<char>::classic_table()): Set blank bit for space and tab.\n\t* config/os/newlib/ctype_base.h (ctype_base::blank): Declare.\n\t* config/os/qnx/qnx6.1/ctype_base.h (ctype_base::blank): Likewise.\n\t* config/os/solaris/solaris2.10/ctype_base.h (ctype_base::blank):\n\tLikewise.\n\t* config/os/tpf/ctype_base.h (ctype_base::blank): Likewise.\n\t* config/os/uclibc/ctype_base.h (ctype_base::blank): Likewise.\n\t* config/os/vxworks/ctype_base.h (ctype_base::blank): Likewise.\n\t* include/bits/locale_facets.h (isblank): Define.\n\t* include/bits/localefwd.h (isblank): Declare.\n\t* testsuite/22_locale/classification/isblank.cc: New.\n\t* testsuite/22_locale/ctype_base/blank.cc: New.\n\nFrom-SVN: r216464", "tree": {"sha": "65190088e95fb0df82c64df80812b362e21805e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65190088e95fb0df82c64df80812b362e21805e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0b4483eef86460ae7497e39a3dc92030d1820a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0b4483eef86460ae7497e39a3dc92030d1820a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0b4483eef86460ae7497e39a3dc92030d1820a2"}], "stats": {"total": 327, "additions": 275, "deletions": 52}, "files": [{"sha": "e00b071ec44f6e100d09a53f775b46e21dab87ee", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -1,3 +1,53 @@\n+2014-10-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++98/Makefile.am: Move ctype.cc, ctype_configure_char.cc and\n+\tctype_members.cc to ...\n+\t* src/c++11/Makefile.am: Here.\n+\t* src/c++98/Makefile.in: Regenerate.\n+\t* src/c++11/Makefile.in: Regenerate.\n+\t* src/c++98/ctype.cc: Move file to ...\n+\t* src/c++11/ctype.cc: Here, define ctype_base::blank.\n+\t* config/abi/pre/gnu.ver: Export ctype_base::blank.\n+\t* config/locale/generic/ctype_members.cc\n+\t(ctype<wchar_t>::_M_convert_to_wmask): Handle blank. Update comments.\n+\t* config/locale/gnu/ctype_members.cc\n+\t(ctype<wchar_t>::_M_convert_to_wmask): Likewise.\n+\t* config/os/aix/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/bionic/ctype_base.h (ctype_base::blank): Likewise.\n+\t* config/os/bsd/darwin/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/bsd/darwin/ctype_inline.h (ctype<char>::is): Use blank.\n+\t(ctype<wchar_t::do_is): Likewise.\n+\t* config/os/bsd/dragonfly/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/bsd/dragonfly/ctype_inline.h (ctype<char>::is): Use blank.\n+\t(ctype<wchar_t::do_is): Likewise.\n+\t* config/os/bsd/freebsd/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/bsd/freebsd/ctype_inline.h (ctype<char>::is): Use blank.\n+\t(ctype<wchar_t::do_is): Likewise.\n+\t* config/os/bsd/netbsd/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/bsd/openbsd/ctype_base.h (ctype_base::blank): Likewise.\n+\t* config/os/djgpp/ctype_base.h (ctype_base::blank): Likewise.\n+\t* config/os/generic/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/generic/ctype_inline.h (ctype<char>::is): Use blank.\n+\t* config/os/gnu-linux/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/hpux/ctype_base.h (ctype_base::blank): Likewise.\n+\t* config/os/mingw32-w64/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/mingw32-w64/ctype_configure_char.cc\n+\t(ctype<char>::classic_table()): Set blank bit for space and tab.\n+\t* config/os/mingw32/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/mingw32/ctype_configure_char.cc\n+\t(ctype<char>::classic_table()): Set blank bit for space and tab.\n+\t* config/os/newlib/ctype_base.h (ctype_base::blank): Declare.\n+\t* config/os/qnx/qnx6.1/ctype_base.h (ctype_base::blank): Likewise.\n+\t* config/os/solaris/solaris2.10/ctype_base.h (ctype_base::blank):\n+\tLikewise.\n+\t* config/os/tpf/ctype_base.h (ctype_base::blank): Likewise.\n+\t* config/os/uclibc/ctype_base.h (ctype_base::blank): Likewise.\n+\t* config/os/vxworks/ctype_base.h (ctype_base::blank): Likewise.\n+\t* include/bits/locale_facets.h (isblank): Define.\n+\t* include/bits/localefwd.h (isblank): Declare.\n+\t* testsuite/22_locale/classification/isblank.cc: New.\n+\t* testsuite/22_locale/ctype_base/blank.cc: New.\n+\n 2014-10-19  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n \n \t* testsuite/lib/libstdc++.exp (v3-copy-file): New proc split from ..."}, {"sha": "4c6d994197fe26b2a4a4f9d8271e6ffd6dbd6557", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -513,7 +513,7 @@ GLIBCXX_3.4 {\n     _ZNSt5ctypeI[cw]*;\n \n     # std::ctype_base\n-    _ZNSt10ctype_base*;\n+    _ZNSt10ctype_base[56][ac-z]*;\n \n     # std::ctype_byname\n     _ZNSt12ctype_bynameI[cw]*;\n@@ -1473,6 +1473,9 @@ GLIBCXX_3.4.21 {\n     # std::basic_ios::operator bool() const\n     _ZNKSt9basic_iosI[cw]St11char_traitsI[cw]EEcvbEv;\n \n+    # std::ctype_base::blank\n+    _ZNSt10ctype_base5blankE;\n+\n } GLIBCXX_3.4.20;\n \n "}, {"sha": "367a8931a55ea152f04e09c3c530b4b192024eb9", "filename": "libstdc++-v3/config/locale/generic/ctype_members.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fctype_members.cc?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -93,7 +93,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t__ret = wctype(\"graph\");\n \tbreak;\n       default:\n-\t__ret = __wmask_type();\n+\t// For some targets ctype_base::blank == ctype_base::space so check\n+\t// here to avoid a duplicate case error.\n+\tif (__m == blank)\n+\t  __ret = wctype(\"blank\");\n+\telse\n+\t  __ret = __wmask_type();\n       }\n     return __ret;\n   };\n@@ -133,7 +138,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   do_is(mask __m, char_type __c) const\n   { \n     bool __ret = false;\n-    // Generically, 15 (instead of 10) since we don't know the numerical\n+    // Generically, 15 (instead of 11) since we don't know the numerical\n     // encoding of the various categories in /usr/include/ctype.h.\n     const size_t __bitmasksize = 15; \n     for (size_t __bitcur = 0; __bitcur <= __bitmasksize; ++__bitcur)\n@@ -152,7 +157,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   {\n     for (;__lo < __hi; ++__vec, ++__lo)\n       {\n-\t// Generically, 15 (instead of 10) since we don't know the numerical\n+\t// Generically, 15 (instead of 11) since we don't know the numerical\n \t// encoding of the various categories in /usr/include/ctype.h.\n \tconst size_t __bitmasksize = 15; \n \tmask __m = 0;"}, {"sha": "cd9604c73385bb7a601ed91fd3d5bb0e441f8505", "filename": "libstdc++-v3/config/locale/gnu/ctype_members.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fctype_members.cc?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -94,6 +94,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       case graph:\n \t__ret = __wctype_l(\"graph\", _M_c_locale_ctype);\n \tbreak;\n+      case blank:\n+\t__ret = __wctype_l(\"blank\", _M_c_locale_ctype);\n+\tbreak;\n       default:\n \t__ret = __wmask_type();\n       }\n@@ -144,8 +147,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __ret = __iswctype_l(__c, _M_wmask[5], _M_c_locale_ctype);\n     else\n       {\n-\t// Highest bitmask in ctype_base == 10, but extra in \"C\"\n-\t// library for blank.\n+\t// Highest bitmask in ctype_base == 11\n \tconst size_t __bitmasksize = 11;\n \tfor (size_t __bitcur = 0; __bitcur <= __bitmasksize; ++__bitcur)\n \t  if (__m & _M_bit[__bitcur])\n@@ -168,8 +170,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   {\n     for (; __lo < __hi; ++__vec, ++__lo)\n       {\n-\t// Highest bitmask in ctype_base == 10, but extra in \"C\"\n-\t// library for blank.\n+\t// Highest bitmask in ctype_base == 11\n \tconst size_t __bitmasksize = 11; \n \tmask __m = 0;\n \tfor (size_t __bitcur = 0; __bitcur <= __bitmasksize; ++__bitcur)"}, {"sha": "de78205750ee7774f46b9cd0fc9812651e5227bb", "filename": "libstdc++-v3/config/os/aix/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -52,6 +52,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _ISCNTRL;\n     static const mask punct \t= _ISPUNCT;\n     static const mask alnum \t= _ISALPHA | _ISDIGIT;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= _ISBLANK;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "1b441a67995a883362571d1aca5edd11b887eb44", "filename": "libstdc++-v3/config/os/bionic/ctype_base.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbionic%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbionic%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbionic%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -26,9 +26,7 @@\n // ISO C++ 14882: 22.1  Locales\n //\n \n-// Information as gleaned from /usr/include/ctype.h, for solaris2.5.1\n-\n-// Support for Solaris 2.5.1\n+// Information as gleaned from /usr/include/ctype.h\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -54,6 +52,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _C;\n     static const mask punct \t= _P;\n     static const mask alnum \t= _U | _L | _N;\n+#if __cplusplus >= 201103L\n+    static const mask blank \t= space;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "b77ac70517ace1947f439120785ead615eadab4d", "filename": "libstdc++-v3/config/os/bsd/darwin/ctype_base.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -54,6 +54,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _CTYPE_C;\n     static const mask punct \t= _CTYPE_P;\n     static const mask alnum \t= _CTYPE_A | _CTYPE_D;\n+    static const mask blank\t= _CTYPE_B;\n #else\n     // Older versions, including Free BSD 3.4, use this style of define.\n     static const mask upper    \t= _U;\n@@ -67,6 +68,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _C;\n     static const mask punct \t= _P;\n     static const mask alnum \t= _A | _D;\n+    static const mask blank\t= _B;\n #endif\n   };\n "}, {"sha": "5ae578994efd0fc033c5f7892ffe07a7e283842c", "filename": "libstdc++-v3/config/os/bsd/darwin/ctype_inline.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_inline.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -60,7 +60,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{\n #if defined (_CTYPE_S) || defined (__istype)\n \t  *__vec = __maskrune (*__low, upper | lower | alpha | digit | xdigit\n-\t\t\t       | space | print | graph | cntrl | punct | alnum);\n+\t\t\t       | space | print | graph | cntrl | punct | alnum\n+\t\t\t       | blank);\n #else\n \t  mask __m = 0;\n \t  if (this->is(upper, *__low)) __m |= upper;\n@@ -75,6 +76,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  if (this->is(punct, *__low)) __m |= punct;\n \t  // Do not include explicit line for alnum mask since it is a\n \t  // pure composite of masks on FreeBSD.\n+\t  if (this->is(blank, *__low)) __m |= blank;\n \t  *__vec = __m;\n #endif\n \t}\n@@ -123,7 +125,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   {\n     for (; __lo < __hi; ++__vec, ++__lo)\n       *__vec = __maskrune (*__lo, upper | lower | alpha | digit | xdigit\n-\t\t\t   | space | print | graph | cntrl | punct | alnum);\n+\t\t\t   | space | print | graph | cntrl | punct | alnum\n+\t\t\t   | blank);\n     return __hi;\n   }\n   "}, {"sha": "856da8e575565d6a70fbd3d9634206c59b5a9d98", "filename": "libstdc++-v3/config/os/bsd/dragonfly/ctype_base.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdragonfly%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdragonfly%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdragonfly%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -52,6 +52,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _CTYPE_C;\n     static const mask punct \t= _CTYPE_P;\n     static const mask alnum \t= _CTYPE_A | _CTYPE_D;\n+    static const mask blank\t= _CTYPE_B;\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "8e0f078fb66bfc53c83eb42d292d6ae79f0ca595", "filename": "libstdc++-v3/config/os/bsd/dragonfly/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdragonfly%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdragonfly%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdragonfly%2Fctype_inline.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -59,7 +59,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       for (;__low < __high; ++__vec, ++__low)\n \t{\n \t  *__vec = __maskrune (*__low, upper | lower | alpha | digit | xdigit\n-\t\t\t       | space | print | graph | cntrl | punct | alnum);\n+\t\t\t       | space | print | graph | cntrl | punct | alnum\n+\t\t\t       | blank);\n \t}\n     return __high;\n   }\n@@ -106,7 +107,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   {\n     for (; __lo < __hi; ++__vec, ++__lo)\n       *__vec = __maskrune (*__lo, upper | lower | alpha | digit | xdigit\n-\t\t\t   | space | print | graph | cntrl | punct | alnum);\n+\t\t\t   | space | print | graph | cntrl | punct | alnum\n+\t\t\t   | blank);\n     return __hi;\n   }\n "}, {"sha": "ba6433ad30dae5b64877f8af79f86aa32592ce94", "filename": "libstdc++-v3/config/os/bsd/freebsd/ctype_base.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -56,6 +56,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _CTYPE_C;\n     static const mask punct \t= _CTYPE_P;\n     static const mask alnum \t= _CTYPE_A | _CTYPE_D;\n+    static const mask blank\t= _CTYPE_B;\n #else\n     // Older versions, including Free BSD 3.4, use this style of define.\n     static const mask upper    \t= _U;\n@@ -69,6 +70,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _C;\n     static const mask punct \t= _P;\n     static const mask alnum \t= _A | _D;\n+    static const mask blank\t= _B;\n #endif\n   };\n "}, {"sha": "01530996e1fb189d835ee99a3671a53a68fdfd53", "filename": "libstdc++-v3/config/os/bsd/freebsd/ctype_inline.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_inline.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -60,7 +60,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{\n #if defined (_CTYPE_S) || defined (__istype)\n \t  *__vec = __maskrune (*__low, upper | lower | alpha | digit | xdigit\n-\t\t\t       | space | print | graph | cntrl | punct | alnum);\n+\t\t\t       | space | print | graph | cntrl | punct | alnum\n+\t\t\t       | blank);\n #else\n \t  mask __m = 0;\n \t  if (this->is(upper, *__low)) __m |= upper;\n@@ -75,6 +76,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  if (this->is(punct, *__low)) __m |= punct;\n \t  // Do not include explicit line for alnum mask since it is a\n \t  // pure composite of masks on FreeBSD.\n+\t  if (this->is(blank, *__low)) __m |= blank;\n \t  *__vec = __m;\n #endif\n \t}\n@@ -123,7 +125,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   {\n     for (; __lo < __hi; ++__vec, ++__lo)\n       *__vec = __maskrune (*__lo, upper | lower | alpha | digit | xdigit\n-\t\t\t   | space | print | graph | cntrl | punct | alnum);\n+\t\t\t   | space | print | graph | cntrl | punct | alnum\n+\t\t\t   | blank);\n     return __hi;\n   }\n "}, {"sha": "6cd339f443f32748da1b61155ad861522047f03f", "filename": "libstdc++-v3/config/os/bsd/netbsd/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -69,6 +69,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _CTYPE_C;\n     static const mask punct \t= _CTYPE_P;\n     static const mask alnum \t= _CTYPE_U | _CTYPE_L | _CTYPE_N;\n+#endif\n+#if __cplusplus >= 201103L\n+    static const mask blank \t= space;\n #endif\n   };\n "}, {"sha": "ad9799aaeb18c89ebc14da72838012ca4c5e904e", "filename": "libstdc++-v3/config/os/bsd/openbsd/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fopenbsd%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -53,6 +53,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl\t= _C;\n     static const mask punct\t= _P;\n     static const mask alnum\t= _U | _L | _N;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= space;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "1be9767ed877ee28bb7d1d61fd194a7b0eed8f61", "filename": "libstdc++-v3/config/os/djgpp/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -51,6 +51,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask xdigit = __dj_ISXDIGIT;   // Hexadecimal numeric\n     static const mask alnum = __dj_ISALPHA | __dj_ISDIGIT;  // Alphanumeric\n     static const mask graph = __dj_ISALPHA | __dj_ISDIGIT | __dj_ISPUNCT;  // Graphical\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= __dj_ISBLANK;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "c70c03f1ff55a7c44dd6bb8b9609e865afa74ef7", "filename": "libstdc++-v3/config/os/generic/ctype_base.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -52,6 +52,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= 1 << 8;\n     static const mask punct \t= 1 << 9;\n     static const mask alnum \t= (1 << 2) | (1 << 3);  // alpha|digit\n+    static const mask blank\t= 1 << 10;\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "31c8c57a3e62ddfebf4b4aeac5a71ab24c4bf2e9", "filename": "libstdc++-v3/config/os/generic/ctype_inline.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -97,6 +97,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t  case graph:\n \t\t    __testis = isgraph(__c);\n \t\t    break;\n+#ifdef _GLIBCXX_USE_C99_CTYPE_TR1\n+\t\t  case blank:\n+\t\t    __testis = isblank(__c);\n+\t\t    break;\n+#endif\n \t\t  default:\n \t\t    __testis = false;\n \t\t    break;\n@@ -117,7 +122,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t*__vec++ = _M_table[static_cast<unsigned char>(*__low++)];\n     else\n       {\n-\t// Highest bitmask in ctype_base == 10.\n+\t// Highest bitmask in ctype_base == 11.\n \tconst size_t __bitmasksize = 15; \n \tfor (;__low < __high; ++__vec, ++__low)\n \t  {"}, {"sha": "e28ed945e6a3137a82ffebb8adbbe76c7979d657", "filename": "libstdc++-v3/config/os/gnu-linux/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -57,6 +57,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _IScntrl;\n     static const mask punct \t= _ISpunct;\n     static const mask alnum \t= _ISalpha | _ISdigit;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= _ISblank;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "b093ffbcc3e299fbdf74a55f5e60dfa9c06c9d15", "filename": "libstdc++-v3/config/os/hpux/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -52,6 +52,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl     = _ISCNTRL;\n     static const mask punct     = _ISPUNCT;\n     static const mask alnum     = _ISALPHA | _ISDIGIT;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= _ISBLANK;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "0780091196ccb074100eaee3c4ab627a74bb5ee1", "filename": "libstdc++-v3/config/os/mingw32-w64/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -58,6 +58,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl\t= 1 << 8;\n     static const mask punct \t= 1 << 9;\n     static const mask alnum\t= (1 << 2) | (1 << 3);  // alpha|digit\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= 1 << 10;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "b1b4fa07a5eece0277249b092fccbaebddee2e1a", "filename": "libstdc++-v3/config/os/mingw32-w64/ctype_configure_char.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fctype_configure_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fctype_configure_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fctype_configure_char.cc?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -54,7 +54,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       cntrl /* ^F */,\n       cntrl /* ^G */,\n       cntrl /* ^H */,\n-      ctype_base::mask(space | cntrl) /* tab */,\n+      ctype_base::mask(space | cntrl | blank) /* tab */,\n       ctype_base::mask(space | cntrl) /* LF */,\n       ctype_base::mask(space | cntrl) /* ^K */,\n       ctype_base::mask(space | cntrl) /* FF */,\n@@ -77,7 +77,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       cntrl /* ^] */,\n       cntrl /* ^^ */,\n       cntrl /* ^_ */,\n-      ctype_base::mask(space | print) /*   */,\n+      ctype_base::mask(space | print | blank) /*   */,\n       ctype_base::mask(punct | print) /* ! */,\n       ctype_base::mask(punct | print) /* \" */,\n       ctype_base::mask(punct | print) /* # */,"}, {"sha": "0780091196ccb074100eaee3c4ab627a74bb5ee1", "filename": "libstdc++-v3/config/os/mingw32/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -58,6 +58,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl\t= 1 << 8;\n     static const mask punct \t= 1 << 9;\n     static const mask alnum\t= (1 << 2) | (1 << 3);  // alpha|digit\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= 1 << 10;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "b1b4fa07a5eece0277249b092fccbaebddee2e1a", "filename": "libstdc++-v3/config/os/mingw32/ctype_configure_char.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_configure_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_configure_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_configure_char.cc?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -54,7 +54,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       cntrl /* ^F */,\n       cntrl /* ^G */,\n       cntrl /* ^H */,\n-      ctype_base::mask(space | cntrl) /* tab */,\n+      ctype_base::mask(space | cntrl | blank) /* tab */,\n       ctype_base::mask(space | cntrl) /* LF */,\n       ctype_base::mask(space | cntrl) /* ^K */,\n       ctype_base::mask(space | cntrl) /* FF */,\n@@ -77,7 +77,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       cntrl /* ^] */,\n       cntrl /* ^^ */,\n       cntrl /* ^_ */,\n-      ctype_base::mask(space | print) /*   */,\n+      ctype_base::mask(space | print | blank) /*   */,\n       ctype_base::mask(punct | print) /* ! */,\n       ctype_base::mask(punct | print) /* \" */,\n       ctype_base::mask(punct | print) /* # */,"}, {"sha": "1bf5beba0f1554a9959fe052bb51cc448beb90d7", "filename": "libstdc++-v3/config/os/newlib/ctype_base.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -26,10 +26,8 @@\n // ISO C++ 14882: 22.1  Locales\n //\n   \n-// Information as gleaned from /usr/include/ctype.h, for solaris2.5.1\n+// Information as gleaned from /usr/include/ctype.h\n \n-// Support for Solaris 2.5.1\n-  \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -54,6 +52,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _C;\n     static const mask punct \t= _P;\n     static const mask alnum \t= _U | _L | _N;\n+#if __cplusplus >= 201103L\n+    static const mask blank \t= space;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "c5e11826b2cebdc48191fd4805aa70c3c6b874dc", "filename": "libstdc++-v3/config/os/qnx/qnx6.1/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -57,6 +57,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _BB;\n     static const mask punct \t= _PU;\n     static const mask alnum \t= _DI | _LO | _UP | _XA;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= _SP | _XB;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "893b7320c55e327b2ee370e968ed62735c3d5ae1", "filename": "libstdc++-v3/config/os/solaris/solaris2.10/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.10%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.10%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.10%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -54,6 +54,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _ISCNTRL;\n     static const mask punct \t= _ISPUNCT;\n     static const mask alnum \t= _ISALPHA | _ISDIGIT;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= _ISBLANK;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "2089358de1751477574f4c3725991a4b6b10dad1", "filename": "libstdc++-v3/config/os/tpf/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -52,6 +52,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _IScntrl;\n     static const mask punct \t= _ISpunct;\n     static const mask alnum \t= _ISalpha | _ISdigit;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= _ISblank;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "86a600750b39b16a5e46ea712cfd41c069285a72", "filename": "libstdc++-v3/config/os/uclibc/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -59,6 +59,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _IScntrl;\n     static const mask punct \t= _ISpunct;\n     static const mask alnum \t= _ISalpha | _ISdigit;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= _ISblank;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "4f92412d0c17114aadf7b600cffec1dd4cebbf92", "filename": "libstdc++-v3/config/os/vxworks/ctype_base.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_base.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -53,6 +53,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     static const mask cntrl \t= _C_CONTROL;\n     static const mask punct \t= _C_PUNCT;\n     static const mask alnum \t= _C_UPPER | _C_LOWER | _C_NUMBER;\n+#if __cplusplus >= 201103L\n+    static const mask blank\t= _C_WHITE_SPACE;\n+#endif\n   };\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "234693bd416f6aedcb5b4ec80f6510aab921a7c3", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -2590,6 +2590,14 @@ _GLIBCXX_END_NAMESPACE_LDBL\n     isgraph(_CharT __c, const locale& __loc)\n     { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::graph, __c); }\n \n+#if __cplusplus >= 201103L\n+  /// Convenience interface to ctype.is(ctype_base::blank, __c).\n+  template<typename _CharT>\n+    inline bool\n+    isblank(_CharT __c, const locale& __loc)\n+    { return use_facet<ctype<_CharT> >(__loc).is(ctype_base::blank, __c); }\n+#endif\n+\n   /// Convenience interface to ctype.toupper(__c).\n   template<typename _CharT>\n     inline _CharT"}, {"sha": "3025c2261101eb9d03bec07ef57371e7679bcde0", "filename": "libstdc++-v3/include/bits/localefwd.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -107,6 +107,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     bool\n     isgraph(_CharT, const locale&);\n \n+#if __cplusplus >= 201103L\n+  template<typename _CharT>\n+    bool\n+    isblank(_CharT, const locale&);\n+#endif\n+\n   template<typename _CharT>\n     _CharT\n     toupper(_CharT, const locale&);"}, {"sha": "c8507cec8dfe89d61cbb8550c2f496864bd45cd5", "filename": "libstdc++-v3/src/c++11/Makefile.am", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -27,9 +27,22 @@ noinst_LTLIBRARIES = libc++11convenience.la\n \n headers =\n \n+# Source files linked in via configuration/make substitution for a\n+# particular host.\n+host_sources = \\\n+\tctype_configure_char.cc \\\n+\tctype_members.cc\n+\n+ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc\n+\t$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true\n+\n+ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true\n+\n sources = \\\n \tchrono.cc \\\n \tcondition_variable.cc \\\n+\tctype.cc \\\n \tdebug.cc \\\n \tfunctexcept.cc \\\n \tfunctional.cc \\\n@@ -45,7 +58,8 @@ sources = \\\n \tshared_ptr.cc \\\n \tsnprintf_lite.cc \\\n \tsystem_error.cc \\\n-\tthread.cc\n+\tthread.cc \\\n+\t${host_sources}\n \n if ENABLE_EXTERN_TEMPLATE\n # XTEMPLATE_FLAGS = -fno-implicit-templates"}, {"sha": "fd3e7801d85845383aa04dab3b991513e6ba8c8e", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -67,18 +67,19 @@ CONFIG_CLEAN_FILES =\n CONFIG_CLEAN_VPATH_FILES =\n LTLIBRARIES = $(noinst_LTLIBRARIES)\n libc__11convenience_la_LIBADD =\n-am__objects_1 = chrono.lo condition_variable.lo debug.lo \\\n+am__objects_1 = ctype_configure_char.lo ctype_members.lo\n+am__objects_2 = chrono.lo condition_variable.lo ctype.lo debug.lo \\\n \tfunctexcept.lo functional.lo future.lo hash_c++0x.lo \\\n \thashtable_c++0x.lo ios.lo limits.lo mutex.lo placeholders.lo \\\n \trandom.lo regex.lo shared_ptr.lo snprintf_lite.lo \\\n-\tsystem_error.lo thread.lo\n-@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_2 = ext11-inst.lo \\\n+\tsystem_error.lo thread.lo $(am__objects_1)\n+@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_3 = ext11-inst.lo \\\n @ENABLE_EXTERN_TEMPLATE_TRUE@\tfstream-inst.lo ios-inst.lo \\\n @ENABLE_EXTERN_TEMPLATE_TRUE@\tiostream-inst.lo istream-inst.lo \\\n @ENABLE_EXTERN_TEMPLATE_TRUE@\tostream-inst.lo sstream-inst.lo \\\n @ENABLE_EXTERN_TEMPLATE_TRUE@\tstreambuf-inst.lo string-inst.lo \\\n @ENABLE_EXTERN_TEMPLATE_TRUE@\twstring-inst.lo\n-am_libc__11convenience_la_OBJECTS = $(am__objects_1) $(am__objects_2)\n+am_libc__11convenience_la_OBJECTS = $(am__objects_2) $(am__objects_3)\n libc__11convenience_la_OBJECTS = $(am_libc__11convenience_la_OBJECTS)\n DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\n depcomp =\n@@ -314,9 +315,17 @@ AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n # Convenience library for C++11 runtime.\n noinst_LTLIBRARIES = libc++11convenience.la\n headers = \n+\n+# Source files linked in via configuration/make substitution for a\n+# particular host.\n+host_sources = \\\n+\tctype_configure_char.cc \\\n+\tctype_members.cc\n+\n sources = \\\n \tchrono.cc \\\n \tcondition_variable.cc \\\n+\tctype.cc \\\n \tdebug.cc \\\n \tfunctexcept.cc \\\n \tfunctional.cc \\\n@@ -332,7 +341,8 @@ sources = \\\n \tshared_ptr.cc \\\n \tsnprintf_lite.cc \\\n \tsystem_error.cc \\\n-\tthread.cc\n+\tthread.cc \\\n+\t${host_sources}\n \n # XTEMPLATE_FLAGS =\n @ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources = \n@@ -646,6 +656,12 @@ uninstall-am:\n \tpdf pdf-am ps ps-am tags uninstall uninstall-am\n \n \n+ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc\n+\t$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true\n+\n+ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true\n+\n vpath % $(top_srcdir)/src/c++11\n \n # Use special rules for the hashtable.cc file so that all"}, {"sha": "b76962aa56114b527d0d445328b7937ab4cd1a89", "filename": "libstdc++-v3/src/c++11/ctype.cc", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fctype.cc?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -40,6 +40,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   const ctype_base::mask ctype_base::xdigit;\n   const ctype_base::mask ctype_base::alnum;\n   const ctype_base::mask ctype_base::graph;\n+  const ctype_base::mask ctype_base::blank;\n \n   // Definitions for locale::id of standard facets that are specialized.\n   locale::id ctype<char>::id;", "previous_filename": "libstdc++-v3/src/c++98/ctype.cc"}, {"sha": "9afe904cd2ba46a9c0c6172464a3619cb74f9570", "filename": "libstdc++-v3/src/c++98/Makefile.am", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -33,8 +33,6 @@ host_sources = \\\n \tatomicity.cc \\\n \tcodecvt_members.cc \\\n \tcollate_members.cc \\\n-\tctype_configure_char.cc \\\n-\tctype_members.cc \\\n \tmessages_members.cc \\\n \tmonetary_members.cc \\\n \tnumeric_members.cc \\\n@@ -46,12 +44,6 @@ codecvt_members.cc: ${glibcxx_srcdir}/$(CCODECVT_CC)\n collate_members.cc: ${glibcxx_srcdir}/$(CCOLLATE_CC)\n \t$(LN_S) ${glibcxx_srcdir}/$(CCOLLATE_CC) . || true\n \n-ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc\n-\t$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true\n-\n-ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true\n-\n messages_members.cc: ${glibcxx_srcdir}/$(CMESSAGES_CC)\n \t$(LN_S) ${glibcxx_srcdir}/$(CMESSAGES_CC) . || true\n \n@@ -104,7 +96,6 @@ sources = \\\n \tmt_allocator.cc \\\n \tcodecvt.cc \\\n \tcomplex_io.cc \\\n-\tctype.cc \\\n \tglobals_io.cc \\\n \thash_tr1.cc \\\n \thashtable_tr1.cc \\"}, {"sha": "9d937927ed74c3b1764f481f24d16c417de214e9", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -68,8 +68,8 @@ CONFIG_CLEAN_VPATH_FILES =\n LTLIBRARIES = $(noinst_LTLIBRARIES)\n libc__98convenience_la_LIBADD =\n am__objects_1 = atomicity.lo codecvt_members.lo collate_members.lo \\\n-\tctype_configure_char.lo ctype_members.lo messages_members.lo \\\n-\tmonetary_members.lo numeric_members.lo time_members.lo\n+\tmessages_members.lo monetary_members.lo numeric_members.lo \\\n+\ttime_members.lo\n @ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_2 = allocator-inst.lo \\\n @ENABLE_EXTERN_TEMPLATE_TRUE@\tconcept-inst.lo ext-inst.lo \\\n @ENABLE_EXTERN_TEMPLATE_TRUE@\tlocale-inst.lo misc-inst.lo \\\n@@ -78,7 +78,7 @@ am__objects_3 = parallel_settings.lo\n am__objects_4 = basic_file.lo c++locale.lo $(am__objects_2) \\\n \t$(am__objects_3)\n am__objects_5 = bitmap_allocator.lo pool_allocator.lo mt_allocator.lo \\\n-\tcodecvt.lo complex_io.lo ctype.lo globals_io.lo hash_tr1.lo \\\n+\tcodecvt.lo complex_io.lo globals_io.lo hash_tr1.lo \\\n \thashtable_tr1.lo ios_failure.lo ios_init.lo ios_locale.lo \\\n \tlist.lo list-aux.lo list-aux-2.lo list_associated.lo \\\n \tlist_associated-2.lo locale.lo locale_init.lo locale_facets.lo \\\n@@ -328,8 +328,6 @@ host_sources = \\\n \tatomicity.cc \\\n \tcodecvt_members.cc \\\n \tcollate_members.cc \\\n-\tctype_configure_char.cc \\\n-\tctype_members.cc \\\n \tmessages_members.cc \\\n \tmonetary_members.cc \\\n \tnumeric_members.cc \\\n@@ -364,7 +362,6 @@ sources = \\\n \tmt_allocator.cc \\\n \tcodecvt.cc \\\n \tcomplex_io.cc \\\n-\tctype.cc \\\n \tglobals_io.cc \\\n \thash_tr1.cc \\\n \thashtable_tr1.cc \\\n@@ -699,12 +696,6 @@ codecvt_members.cc: ${glibcxx_srcdir}/$(CCODECVT_CC)\n collate_members.cc: ${glibcxx_srcdir}/$(CCOLLATE_CC)\n \t$(LN_S) ${glibcxx_srcdir}/$(CCOLLATE_CC) . || true\n \n-ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc\n-\t$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true\n-\n-ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true\n-\n messages_members.cc: ${glibcxx_srcdir}/$(CMESSAGES_CC)\n \t$(LN_S) ${glibcxx_srcdir}/$(CMESSAGES_CC) . || true\n "}, {"sha": "0c7adc21d9092aebe3f6ec7daaab4c0613e15905", "filename": "libstdc++-v3/testsuite/22_locale/classification/isblank.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fclassification%2Fisblank.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fclassification%2Fisblank.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fclassification%2Fisblank.cc?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -0,0 +1,49 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 22.3.3.1 Character classification [classification]\n+\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+typedef char char_type;\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  VERIFY( std::isblank(' ', std::locale::classic()) );\n+  VERIFY( std::isblank('\\t', std::locale::classic()) );\n+}\n+\n+void\n+test02()\n+{\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+  bool test __attribute__((unused)) = true;\n+  VERIFY( std::isblank(L' ', std::locale::classic()) );\n+  VERIFY( std::isblank(L'\\t', std::locale::classic()) );\n+#endif\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+}"}, {"sha": "cfd02a415070735273e51ec26fd8b7bfbe0114d4", "filename": "libstdc++-v3/testsuite/22_locale/ctype_base/blank.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_base%2Fblank.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e4cd810c6f84e1b47f14dec2d3cba2985f9794/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_base%2Fblank.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fctype_base%2Fblank.cc?ref=a3e4cd810c6f84e1b47f14dec2d3cba2985f9794", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <locale>\n+\n+void\n+test01()\n+{\n+  const std::ctype_base::mask* blank __attribute__((unused));\n+  blank = &std::ctype_base::blank;\n+}"}]}