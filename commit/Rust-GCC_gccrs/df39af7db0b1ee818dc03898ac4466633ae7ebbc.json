{"sha": "df39af7db0b1ee818dc03898ac4466633ae7ebbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYzOWFmN2RiMGIxZWU4MThkYzAzODk4YWM0NDY2NjMzYWU3ZWJiYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-08-24T21:23:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-08-24T21:23:56Z"}, "message": "call.c (build_conditional_expr): Fix typo.\n\n\t* call.c (build_conditional_expr): Fix typo.\n\t* typeck.c (build_modify_expr, COND_EXPR): Make sure we've got an\n\tlvalue before trying to mess with the sides.\n\n\t* error.c (dump_expr, CONVERT_EXPR): Handle (void) properly.\n\nFrom-SVN: r28826", "tree": {"sha": "a9b7aea66e557f7c4f7223a33f5f810f95ed6a0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9b7aea66e557f7c4f7223a33f5f810f95ed6a0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df39af7db0b1ee818dc03898ac4466633ae7ebbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df39af7db0b1ee818dc03898ac4466633ae7ebbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df39af7db0b1ee818dc03898ac4466633ae7ebbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df39af7db0b1ee818dc03898ac4466633ae7ebbc/comments", "author": null, "committer": null, "parents": [{"sha": "2ac84cfe01bfb92a83f18263740435f696321e32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac84cfe01bfb92a83f18263740435f696321e32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac84cfe01bfb92a83f18263740435f696321e32"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "9f13fc9304744a6f087af663fefdb68803f9bc9f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df39af7db0b1ee818dc03898ac4466633ae7ebbc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df39af7db0b1ee818dc03898ac4466633ae7ebbc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=df39af7db0b1ee818dc03898ac4466633ae7ebbc", "patch": "@@ -1,3 +1,11 @@\n+1999-08-24  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* call.c (build_conditional_expr): Fix typo.\n+\t* typeck.c (build_modify_expr, COND_EXPR): Make sure we've got an\n+\tlvalue before trying to mess with the sides.\n+\n+\t* error.c (dump_expr, CONVERT_EXPR): Handle (void) properly.\n+\n Mon Aug 23 22:17:20 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n \t* g++spec.c (lang_specific_driver): Add room for NULL in arglist."}, {"sha": "eed211f884ae235e4fbbdfacaa8a9e280d925e19", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df39af7db0b1ee818dc03898ac4466633ae7ebbc/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df39af7db0b1ee818dc03898ac4466633ae7ebbc/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=df39af7db0b1ee818dc03898ac4466633ae7ebbc", "patch": "@@ -2825,7 +2825,7 @@ build_conditional_expr (arg1, arg2, arg3)\n       if ((TREE_CODE (arg2) == THROW_EXPR)\n \t  ^ (TREE_CODE (arg3) == THROW_EXPR))\n \tresult_type = ((TREE_CODE (arg2) == THROW_EXPR) \n-\t\t       ? arg2_type : arg3_type);\n+\t\t       ? arg3_type : arg2_type);\n       else if (arg2_void_p && arg3_void_p)\n \tresult_type = void_type_node;\n       else"}, {"sha": "5b37717329cfb5b88eaff11bd9a14e224186dfb5", "filename": "gcc/cp/error.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df39af7db0b1ee818dc03898ac4466633ae7ebbc/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df39af7db0b1ee818dc03898ac4466633ae7ebbc/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=df39af7db0b1ee818dc03898ac4466633ae7ebbc", "patch": "@@ -1547,7 +1547,13 @@ dump_expr (t, nop)\n       break;\n \n     case CONVERT_EXPR:\n-      dump_unary_op (\"+\", t, nop);\n+      if (same_type_p (TREE_TYPE (t), void_type_node))\n+\t{\n+\t  OB_PUTS (\"(void)\");\n+\t  dump_expr (TREE_OPERAND (t, 0), 0);\n+\t}\n+      else\n+\tdump_unary_op (\"+\", t, nop);\n       break;\n \n     case ADDR_EXPR:"}, {"sha": "cc476b208b49fe825505690b6a63277466cec295", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df39af7db0b1ee818dc03898ac4466633ae7ebbc/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df39af7db0b1ee818dc03898ac4466633ae7ebbc/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=df39af7db0b1ee818dc03898ac4466633ae7ebbc", "patch": "@@ -5734,12 +5734,22 @@ build_modify_expr (lhs, modifycode, rhs)\n \t/* Produce (a ? (b = rhs) : (c = rhs))\n \t   except that the RHS goes through a save-expr\n \t   so the code to compute it is only emitted once.  */\n-\ttree cond\n-\t  = build_conditional_expr (TREE_OPERAND (lhs, 0),\n-\t\t\t\t    build_modify_expr (cp_convert (TREE_TYPE (lhs), TREE_OPERAND (lhs, 1)),\n-\t\t\t\t\t\t       modifycode, rhs),\n-\t\t\t\t    build_modify_expr (cp_convert (TREE_TYPE (lhs), TREE_OPERAND (lhs, 2)),\n-\t\t\t\t\t\t       modifycode, rhs));\n+\ttree cond;\n+\n+\t/* Check this here to avoid odd errors when trying to convert\n+\t   a throw to the type of the COND_EXPR.  */\n+\tif (!lvalue_or_else (lhs, \"assignment\"))\n+\t  return error_mark_node;\n+\n+\tcond = build_conditional_expr\n+\t  (TREE_OPERAND (lhs, 0),\n+\t   build_modify_expr (cp_convert (TREE_TYPE (lhs),\n+\t\t\t\t\t  TREE_OPERAND (lhs, 1)),\n+\t\t\t      modifycode, rhs),\n+\t   build_modify_expr (cp_convert (TREE_TYPE (lhs),\n+\t\t\t\t\t  TREE_OPERAND (lhs, 2)),\n+\t\t\t      modifycode, rhs));\n+\n \tif (cond == error_mark_node)\n \t  return cond;\n \t/* Make sure the code to compute the rhs comes out"}]}