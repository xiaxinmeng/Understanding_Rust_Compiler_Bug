{"sha": "155f6fbb62b415f3d3986f3b0dcd796af436af03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1ZjZmYmI2MmI0MTVmM2QzOTg2ZjNiMGRjZDc5NmFmNDM2YWYwMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-09-30T13:44:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-09-30T13:44:59Z"}, "message": "re PR libstdc++/12438 (Memory leak in locale::combine())\n\n2003-09-30  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/12438\n\t* include/bits/locale_facets.tcc (locale::combine): Don't\n\tleak memory if _M_replace_facet throws.\n\t* testsuite/22_locale/locale/cons/12438.cc: New, from the PR.\n\n\t* include/bits/locale_classes.h (locale::locale(const locale&,\n\t_Facet*)): Tweak, use consistently _M_remove_reference.\n\nFrom-SVN: r71943", "tree": {"sha": "caf8885058ab66104de77af179f4bba5efb1f0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caf8885058ab66104de77af179f4bba5efb1f0cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/155f6fbb62b415f3d3986f3b0dcd796af436af03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155f6fbb62b415f3d3986f3b0dcd796af436af03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155f6fbb62b415f3d3986f3b0dcd796af436af03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155f6fbb62b415f3d3986f3b0dcd796af436af03/comments", "author": null, "committer": null, "parents": [{"sha": "daafa301e4b0c0528558092b711e26d93223d2c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daafa301e4b0c0528558092b711e26d93223d2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daafa301e4b0c0528558092b711e26d93223d2c0"}], "stats": {"total": 92, "additions": 90, "deletions": 2}, "files": [{"sha": "6b713d504caf842e47f8d690a2570b0e38753468", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155f6fbb62b415f3d3986f3b0dcd796af436af03/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155f6fbb62b415f3d3986f3b0dcd796af436af03/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=155f6fbb62b415f3d3986f3b0dcd796af436af03", "patch": "@@ -1,3 +1,13 @@\n+2003-09-30  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/12438\n+\t* include/bits/locale_facets.tcc (locale::combine): Don't\n+\tleak memory if _M_replace_facet throws.\n+\t* testsuite/22_locale/locale/cons/12438.cc: New, from the PR.\n+\n+\t* include/bits/locale_classes.h (locale::locale(const locale&,\n+\t_Facet*)): Tweak, use consistently _M_remove_reference.\n+\n 2003-09-30  Paolo Carlini  <pcarlini@unitus.it>\n \n \tPR libstdc++/12352 (cont)"}, {"sha": "5ecbf7d6516e2a20db195b36f3465df055896acb", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155f6fbb62b415f3d3986f3b0dcd796af436af03/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155f6fbb62b415f3d3986f3b0dcd796af436af03/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=155f6fbb62b415f3d3986f3b0dcd796af436af03", "patch": "@@ -393,7 +393,7 @@ namespace std\n \t}\n       catch(...)\n \t{\n-\t  delete _M_impl;\n+\t  _M_impl->_M_remove_reference();\n \t  for (size_t __j = 0; __j < __i; ++__j)\n \t    delete [] _M_tmp_names[__j];\t  \n \t  __throw_exception_again;"}, {"sha": "4c8160382811546c5699e4f0f27f753d21b3df67", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155f6fbb62b415f3d3986f3b0dcd796af436af03/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155f6fbb62b415f3d3986f3b0dcd796af436af03/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=155f6fbb62b415f3d3986f3b0dcd796af436af03", "patch": "@@ -51,7 +51,15 @@ namespace std\n     locale::combine(const locale& __other) const\n     {\n       _Impl* __tmp = new _Impl(*_M_impl, 1);\n-      __tmp->_M_replace_facet(__other._M_impl, &_Facet::id);\n+      try\n+\t{\n+\t  __tmp->_M_replace_facet(__other._M_impl, &_Facet::id);\n+\t}\n+      catch(...)\n+\t{\n+\t  __tmp->_M_remove_reference();\n+\t  __throw_exception_again;\n+\t}\n       return locale(__tmp);\n     }\n "}, {"sha": "1459d2a0cc275ceb5754a54953106a8d61524204", "filename": "libstdc++-v3/testsuite/22_locale/locale/cons/12438.cc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155f6fbb62b415f3d3986f3b0dcd796af436af03/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12438.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155f6fbb62b415f3d3986f3b0dcd796af436af03/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12438.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F12438.cc?ref=155f6fbb62b415f3d3986f3b0dcd796af436af03", "patch": "@@ -0,0 +1,70 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.1.1.2 locale constructors and destructors [lib.locale.cons]\n+\n+#include <locale>\n+#include <stdexcept>\n+#include <cstdlib>\n+#include <testsuite_hooks.h>\n+\n+class MyFacet : public std::locale::facet\n+{\n+public:\n+  static std::locale::id id;\n+};\n+\n+std::locale::id MyFacet::id;\n+\n+// libstdc++/12438\n+void test01(int iters)\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  \n+  for (int i = 0; i < iters; ++i)\n+    {\n+      try\n+\t{\n+\t  locale loc1 = locale::classic();\n+\t  locale loc2(\"\");\n+\t  VERIFY( !has_facet<MyFacet>(loc2) );\n+\t  \n+\t  loc1.combine<MyFacet>(loc2);\n+\t  VERIFY( false );\n+\t}\n+      catch (std::runtime_error&)\n+\t{\n+\t}\n+    }\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+  // We leaked ~400-500 bytes/iter.\n+  __gnu_test::set_memory_limits(2.5);\n+  int iters = 10000;\n+\n+  if (argc > 1)\n+    iters = atoi(argv[1]);\n+  if (iters < 1)\n+    iters = 1;\n+  test01(iters);\n+\n+  return 0;\n+}"}]}