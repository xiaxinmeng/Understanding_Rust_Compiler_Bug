{"sha": "7e3f6147a7492b774194669f3f68b979fd847811", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UzZjYxNDdhNzQ5MmI3NzQxOTQ2NjlmM2Y2OGI5NzlmZDg0NzgxMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-06-23T16:14:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:14Z"}, "message": "[Ada] Wrong use of Scope_Depth_Value\n\ngcc/ada/\n\n\t* einfo.ads, einfo.adb (Scope_Depth_Value,\n\tSet_Scope_Depth_Value): Add assertions on valid nodes and update\n\tdocumentation accordingly.\n\t(Write_Field22_Name): Sync with change in Scope_Depth_Value.\n\t* sem_ch8.adb (Find_Direct_Name): Fix call to Scope_Depth_Value.", "tree": {"sha": "33b0894badf3f560251a87e747b9ab913e01ac6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33b0894badf3f560251a87e747b9ab913e01ac6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e3f6147a7492b774194669f3f68b979fd847811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e3f6147a7492b774194669f3f68b979fd847811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e3f6147a7492b774194669f3f68b979fd847811", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e3f6147a7492b774194669f3f68b979fd847811/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cba9c0267ac33cc1e5b14c71d2fc75ca9609cf91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba9c0267ac33cc1e5b14c71d2fc75ca9609cf91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba9c0267ac33cc1e5b14c71d2fc75ca9609cf91"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "4e41a726fac14c1f16ac4c59222caceb526b21c5", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e3f6147a7492b774194669f3f68b979fd847811/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e3f6147a7492b774194669f3f68b979fd847811/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=7e3f6147a7492b774194669f3f68b979fd847811", "patch": "@@ -3311,6 +3311,13 @@ package body Einfo is\n \n    function Scope_Depth_Value (Id : E) return U is\n    begin\n+      pragma Assert\n+        (Ekind (Id) in\n+           Concurrent_Kind | Entry_Kind        | Generic_Unit_Kind |\n+           E_Package       | E_Package_Body    | Subprogram_Kind   |\n+           E_Block         | E_Subprogram_Body |\n+           E_Private_Type .. E_Limited_Private_Subtype             |\n+           E_Void          | E_Loop            | E_Return_Statement);\n       return Uint22 (Id);\n    end Scope_Depth_Value;\n \n@@ -6582,7 +6589,13 @@ package body Einfo is\n \n    procedure Set_Scope_Depth_Value (Id : E; V : U) is\n    begin\n-      pragma Assert (not Is_Record_Type (Id));\n+      pragma Assert\n+        (Ekind (Id) in\n+           Concurrent_Kind | Entry_Kind        | Generic_Unit_Kind |\n+           E_Package       | E_Package_Body    | Subprogram_Kind   |\n+           E_Block         | E_Subprogram_Body |\n+           E_Private_Type .. E_Limited_Private_Subtype             |\n+           E_Void          | E_Loop            | E_Return_Statement);\n       Set_Uint22 (Id, V);\n    end Set_Scope_Depth_Value;\n \n@@ -10873,21 +10886,18 @@ package body Einfo is\n          when Formal_Kind =>\n             Write_Str (\"Protected_Formal\");\n \n-         when E_Block\n-            | E_Entry\n-            | E_Entry_Family\n-            | E_Function\n-            | E_Generic_Function\n-            | E_Generic_Package\n-            | E_Generic_Procedure\n-            | E_Loop\n+         when Concurrent_Kind\n+            | Entry_Kind\n+            | Generic_Unit_Kind\n             | E_Package\n             | E_Package_Body\n-            | E_Procedure\n-            | E_Protected_Type\n-            | E_Return_Statement\n+            | Subprogram_Kind\n+            | E_Block\n             | E_Subprogram_Body\n-            | E_Task_Type\n+            | E_Private_Type .. E_Limited_Private_Subtype\n+            | E_Void\n+            | E_Loop\n+            | E_Return_Statement\n          =>\n             Write_Str (\"Scope_Depth_Value\");\n "}, {"sha": "765d0f40e4ab8e06eca0b6e1ba8415b72363aff1", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e3f6147a7492b774194669f3f68b979fd847811/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e3f6147a7492b774194669f3f68b979fd847811/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=7e3f6147a7492b774194669f3f68b979fd847811", "patch": "@@ -4280,14 +4280,16 @@ package Einfo is\n --       the Scope will be Standard.\n \n --    Scope_Depth (synthesized)\n---       Applies to program units, blocks, concurrent types and entries, and\n---       also to record types, i.e. to any entity that can appear on the scope\n---       stack. Yields the scope depth value, which for those entities other\n---       than records is simply the scope depth value, for record entities, it\n---       is the Scope_Depth of the record scope.\n+--       Applies to program units, blocks, loops, return statements,\n+--       concurrent types, private types and entries, and also to record types,\n+--       i.e. to any entity that can appear on the scope stack. Yields the\n+--       scope depth value, which for those entities other than records is\n+--       simply the scope depth value, for record entities, it is the\n+--       Scope_Depth of the record scope.\n \n --    Scope_Depth_Value (Uint22)\n---       Defined in program units, blocks, concurrent types, and entries.\n+--       Defined in program units, blocks, loops, return statements,\n+--       concurrent types, private types and entries.\n --       Indicates the number of scopes that statically enclose the declaration\n --       of the unit or type. Library units have a depth of zero. Note that\n --       record types can act as scopes but do NOT have this field set (see"}, {"sha": "73f73c6864b0039895c73903a2923e77dcce5df6", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e3f6147a7492b774194669f3f68b979fd847811/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e3f6147a7492b774194669f3f68b979fd847811/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=7e3f6147a7492b774194669f3f68b979fd847811", "patch": "@@ -5752,7 +5752,7 @@ package body Sem_Ch8 is\n                --  outside the instance.\n \n                if From_Actual_Package (E)\n-                 and then Scope_Depth (E2) < Scope_Depth (Inst)\n+                 and then Scope_Depth (Scope (E2)) < Scope_Depth (Inst)\n                then\n                   goto Found;\n                else"}]}