{"sha": "53c5cd3393356b4541d5ebb958a412ec56d56328", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNjNWNkMzM5MzM1NmI0NTQxZDVlYmI5NThhNDEyZWM1NmQ1NjMyOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-03-19T21:12:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-12T08:29:11Z"}, "message": "[Ada] Fix typos in comments\n\n2020-06-12  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_elab.adb: Fix typos in comments.", "tree": {"sha": "5b3d095a7b96116df98071ec67c13b753ac746da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b3d095a7b96116df98071ec67c13b753ac746da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53c5cd3393356b4541d5ebb958a412ec56d56328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c5cd3393356b4541d5ebb958a412ec56d56328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c5cd3393356b4541d5ebb958a412ec56d56328", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c5cd3393356b4541d5ebb958a412ec56d56328/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "695a27fbb77c02fedb946c8c8349f108629bd45f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695a27fbb77c02fedb946c8c8349f108629bd45f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695a27fbb77c02fedb946c8c8349f108629bd45f"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "0fa3d14b69a4a1f4285b49b18305fff9d537a8a5", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c5cd3393356b4541d5ebb958a412ec56d56328/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c5cd3393356b4541d5ebb958a412ec56d56328/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=53c5cd3393356b4541d5ebb958a412ec56d56328", "patch": "@@ -75,8 +75,8 @@ package body Sem_Elab is\n    --  The access-before-elaboration (ABE) mechanism implemented in this unit\n    --  has the following objectives:\n    --\n-   --    * Diagnose at compile-time or install run-time checks to prevent ABE\n-   --      access to data and behaviour.\n+   --    * Diagnose at compile time or install run-time checks to prevent ABE\n+   --      access to data and behavior.\n    --\n    --      The high-level idea is to accurately diagnose ABE issues within a\n    --      single unit because the ABE mechanism can inspect the whole unit.\n@@ -111,7 +111,7 @@ package body Sem_Elab is\n    --    * Dynamic model - This is the most permissive of the three models.\n    --      When the dynamic model is in effect, the mechanism diagnoses and\n    --      installs run-time checks to detect ABE issues in the main unit.\n-   --      The behaviour of this model is identical to that specified by the\n+   --      The behavior of this model is identical to that specified by the\n    --      Ada RM. This model is enabled with switch -gnatE.\n    --\n    --    Static model - This is the middle ground of the three models. When\n@@ -122,7 +122,7 @@ package body Sem_Elab is\n    --      the prior elaboration of withed units. This is the default model.\n    --\n    --    * SPARK model - This is the most conservative of the three models and\n-   --      impelements the semantics defined in SPARK RM 7.7. The SPARK model\n+   --      implements the semantics defined in SPARK RM 7.7. The SPARK model\n    --      is in effect only when a context resides in a SPARK_Mode On region,\n    --      otherwise the mechanism falls back to one of the previous models.\n    --\n@@ -186,7 +186,7 @@ package body Sem_Elab is\n    --\n    --  * Library level - A type of enclosing level. A scenario or target is at\n    --    the library level if it appears in a package library unit, ignoring\n-   --    enclosng packages.\n+   --    enclosing packages.\n    --\n    --  * Non-library-level encapsulator - A construct that cannot be elaborated\n    --    on its own and requires elaboration by a top-level scenario.\n@@ -400,7 +400,7 @@ package body Sem_Elab is\n    --  capture the target and relevant attributes of the original call.\n    --\n    --  The diagnostics of the ABE mechanism depend on accurate source locations\n-   --  to determine the spacial relation of nodes.\n+   --  to determine the spatial relation of nodes.\n \n    -----------------------------------------\n    -- Suppression of elaboration warnings --\n@@ -590,7 +590,7 @@ package body Sem_Elab is\n    --  -gnatH   legacy elaboration checking mode enabled\n    --\n    --           When this switch is in effect, the pre-18.x ABE model becomes\n-   --           the defacto ABE model. This ammounts to cutting off all entry\n+   --           the de facto ABE model. This amounts to cutting off all entry\n    --           points into the new ABE mechanism, and giving full control to\n    --           the old ABE mechanism.\n    --\n@@ -5671,7 +5671,7 @@ package body Sem_Elab is\n \n          --  Ensure that the unit with the target body is elaborated prior to\n          --  the main unit. The implicit Elaborate[_All] is generated only when\n-         --  the call has elaboration checks enabled. This behaviour parallels\n+         --  the call has elaboration checks enabled. This behavior parallels\n          --  that of the old ABE mechanism.\n \n          if Elaboration_Checks_OK (Call_Rep) then\n@@ -6071,7 +6071,7 @@ package body Sem_Elab is\n \n          --  Ensure that the unit with the generic body is elaborated prior\n          --  to the main unit. No implicit pragma has to be generated if the\n-         --  instantiation has elaboration checks suppressed. This behaviour\n+         --  instantiation has elaboration checks suppressed. This behavior\n          --  parallels that of the old ABE mechanism.\n \n          if Elaboration_Checks_OK (Inst_Rep) then\n@@ -8095,7 +8095,7 @@ package body Sem_Elab is\n       begin\n          --  Nothing to do when the need for prior elaboration came from a\n          --  partial finalization routine which occurs in an initialization\n-         --  context. This behaviour parallels that of the old ABE mechanism.\n+         --  context. This behavior parallels that of the old ABE mechanism.\n \n          if In_State.Within_Partial_Finalization then\n             return;\n@@ -9206,7 +9206,7 @@ package body Sem_Elab is\n       begin\n          --  Avoid cascaded errors if there were previous serious infractions.\n          --  As a result the scenario will not be treated as a guaranteed ABE.\n-         --  This behaviour parallels that of the old ABE mechanism.\n+         --  This behavior parallels that of the old ABE mechanism.\n \n          if Serious_Errors_Detected > 0 then\n             return False;\n@@ -14907,7 +14907,7 @@ package body Sem_Elab is\n             return False;\n \n          --  Assignments are ignored in GNAT mode on the assumption that\n-         --  they are ABE-safe. This behaviour parallels that of the old\n+         --  they are ABE-safe. This behavior parallels that of the old\n          --  ABE mechanism.\n \n          elsif GNAT_Mode then"}]}