{"sha": "fc2fb4fd547fb39d76237a3a1a50f5c4f3646936", "node_id": "C_kwDOANBUbNoAKGZjMmZiNGZkNTQ3ZmIzOWQ3NjIzN2EzYTFhNTBmNWM0ZjM2NDY5MzY", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2022-06-24T02:20:48Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2022-06-24T02:25:52Z"}, "message": "Introduce -nostdlib++ option\n\nUsing g++ to link without libstdc++, as in g++.dg/abi/pure-virtual1.C,\nis error prone, because there's no way to tell g++ to drop libstdc++\nwithout also dropping libc and any other libraries that the target\nimplicitly links in.\n\nThis has often led to the need for manual adjustments to this\ntestcase.\n\nI figured adding support for -nostdlib++, even though redundant, makes\nsome sense.  One could presumably use gcc rather than g++ for linking,\nfor the same effect, but sometimes changing the link command is harder\nthan adding an option, as in our testsuite.\n\nSince clang already had an option with this effect, we've adopted the\nsame spelling.\n\n\nfor  gcc/ChangeLog\n\n\t* common.opt (nostdlib++): New.\n\t* doc/invoke.texi (-nostdlib++): Document it.\n\nfor  gcc/cp/ChangeLog\n\n\t* g++spec.cc (lang_specific_driver): Implement -nostdlib++.\n\nfor  gcc/testsuite/ChangeLog\n\n\t* g++.dg/abi/pure-virtual1.C: Use -nostdlib++.", "tree": {"sha": "e2ce526f9b58b8cb644e0df36e82464286dfd4ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2ce526f9b58b8cb644e0df36e82464286dfd4ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/comments", "author": null, "committer": null, "parents": [{"sha": "2b86788d7c976a261446654166291e855cdc8191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b86788d7c976a261446654166291e855cdc8191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b86788d7c976a261446654166291e855cdc8191"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "e7a51e882bade3bbf7681d0448c75fb1a3d4ba05", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=fc2fb4fd547fb39d76237a3a1a50f5c4f3646936", "patch": "@@ -3467,6 +3467,9 @@ Driver\n nostdlib\n Driver\n \n+nostdlib++\n+Driver\n+\n o\n Common Driver Joined Separate Var(asm_file_name) MissingArgError(missing filename after %qs)\n -o <file>\tPlace output into <file>."}, {"sha": "b63d8350ba113d7eec4b10cb0847a84dcbc73a48", "filename": "gcc/cp/g++spec.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/gcc%2Fcp%2Fg%2B%2Bspec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/gcc%2Fcp%2Fg%2B%2Bspec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.cc?ref=fc2fb4fd547fb39d76237a3a1a50f5c4f3646936", "patch": "@@ -159,6 +159,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n       switch (decoded_options[i].opt_index)\n \t{\n \tcase OPT_nostdlib:\n+\tcase OPT_nostdlib__:\n \tcase OPT_nodefaultlibs:\n \t  library = -1;\n \t  break;"}, {"sha": "f794edd49e11f03ebfa89cda2bcc13943f42756b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fc2fb4fd547fb39d76237a3a1a50f5c4f3646936", "patch": "@@ -653,7 +653,7 @@ Objective-C and Objective-C++ Dialects}.\n @item Linker Options\n @xref{Link Options,,Options for Linking}.\n @gccoptlist{@var{object-file-name}  -fuse-ld=@var{linker}  -l@var{library} @gol\n--nostartfiles  -nodefaultlibs  -nolibc  -nostdlib @gol\n+-nostartfiles  -nodefaultlibs  -nolibc  -nostdlib  -nostdlib++ @gol\n -e @var{entry}  --entry=@var{entry} @gol\n -pie  -pthread  -r  -rdynamic @gol\n -s  -static  -static-pie  -static-libgcc  -static-libstdc++ @gol\n@@ -16846,6 +16846,10 @@ library subroutines.\n constructors are called; @pxref{Collect2,,@code{collect2}, gccint,\n GNU Compiler Collection (GCC) Internals}.)\n \n+@item -nostdlib++\n+@opindex nostdlib++\n+Do not implicitly link with standard C++ libraries.\n+\n @item -e @var{entry}\n @itemx --entry=@var{entry}\n @opindex e"}, {"sha": "59eaf22562049e9bed90e68dd4c3ac41f23ccf6d", "filename": "gcc/testsuite/g++.dg/abi/pure-virtual1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpure-virtual1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc2fb4fd547fb39d76237a3a1a50f5c4f3646936/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpure-virtual1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fpure-virtual1.C?ref=fc2fb4fd547fb39d76237a3a1a50f5c4f3646936", "patch": "@@ -1,7 +1,7 @@\n // Test that we don't need libsupc++ just for __cxa_pure_virtual.\n // { dg-do link }\n // { dg-require-weak }\n-// { dg-additional-options \"-fno-rtti -nodefaultlibs -lc\" }\n+// { dg-additional-options \"-fno-rtti -nostdlib++\" }\n // { dg-additional-options \"-Wl,-undefined,dynamic_lookup\" { target *-*-darwin* } }\n // { dg-xfail-if \"AIX weak\" { powerpc-ibm-aix* } }\n "}]}