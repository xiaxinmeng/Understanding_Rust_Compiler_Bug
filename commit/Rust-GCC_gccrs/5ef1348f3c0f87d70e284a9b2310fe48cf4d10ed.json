{"sha": "5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVmMTM0OGYzYzBmODdkNzBlMjg0YTliMjMxMGZlNDhjZjRkMTBlZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-05-26T15:17:38Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-05-26T15:17:38Z"}, "message": "tree-flow.h: Remove the prototype for is_aliased_with.\n\n\t* tree-flow.h: Remove the prototype for is_aliased_with.\n\t* tree-ssa-alias.c (is_aliased_with): Remove.\n\nFrom-SVN: r125095", "tree": {"sha": "cd3c3a2beb741da228fbbb283b51652a5cc1324a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd3c3a2beb741da228fbbb283b51652a5cc1324a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed/comments", "author": null, "committer": null, "parents": [{"sha": "eb83419390c399dc12a359eae856a5963216a450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb83419390c399dc12a359eae856a5963216a450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb83419390c399dc12a359eae856a5963216a450"}], "stats": {"total": 36, "additions": 3, "deletions": 33}, "files": [{"sha": "5ffa0f13c5e9079d4f21d0f8aa1f4393a0ab3717", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed", "patch": "@@ -3,6 +3,9 @@\n \t* basic-block.h: Remove the prototype for merge_seq_blocks.\n \t* cfgcleanup.c (merge_seq_blocks): Remove.\n \n+\t* tree-flow.h: Remove the prototype for is_aliased_with.\n+\t* tree-ssa-alias.c (is_aliased_with): Remove.\n+\n 2007-05-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386-protos.h (ix86_expand_sse4_unpack): New."}, {"sha": "e4260ad00f1c53212f5efe651b8dcd1e6744a836", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed", "patch": "@@ -834,7 +834,6 @@ extern void debug_points_to_info (void);\n extern void dump_points_to_info_for (FILE *, tree);\n extern void debug_points_to_info_for (tree);\n extern bool may_be_aliased (tree);\n-extern bool is_aliased_with (tree, tree);\n extern struct ptr_info_def *get_ptr_info (tree);\n extern void new_type_alias (tree, tree, tree);\n extern void count_uses_and_derefs (tree, tree, unsigned *, unsigned *,"}, {"sha": "500845fccbadb3acb3ce878230beb4380c113a93", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=5ef1348f3c0f87d70e284a9b2310fe48cf4d10ed", "patch": "@@ -3282,38 +3282,6 @@ may_be_aliased (tree var)\n   return true;\n }\n \n-\n-/* Given two symbols return TRUE if one is in the alias set of the\n-   other.  */\n-\n-bool\n-is_aliased_with (tree tag, tree sym)\n-{\n-  bitmap aliases;\n-\n-  if (MTAG_P (tag))\n-    {\n-      aliases = MTAG_ALIASES (tag);\n-\n-      if (aliases == NULL)\n-\treturn false;\n-\n-      return bitmap_bit_p (aliases, DECL_UID (sym));      \n-    }\n-  else\n-    {\n-      gcc_assert (MTAG_P (sym));\n-      aliases = MTAG_ALIASES (sym);\n-\n-      if (aliases == NULL)\n-\treturn false;\n-\n-      return bitmap_bit_p (aliases, DECL_UID (tag));\n-    }\n-\n-  return false;\n-}\n-\n /* The following is based on code in add_stmt_operand to ensure that the\n    same defs/uses/vdefs/vuses will be found after replacing a reference\n    to var (or ARRAY_REF to var) with an INDIRECT_REF to ptr whose value"}]}