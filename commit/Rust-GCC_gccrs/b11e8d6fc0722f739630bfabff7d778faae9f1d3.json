{"sha": "b11e8d6fc0722f739630bfabff7d778faae9f1d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjExZThkNmZjMDcyMmY3Mzk2MzBiZmFiZmY3ZDc3OGZhYWU5ZjFkMw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-08-14T08:45:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T08:45:25Z"}, "message": "s-intman-irix.adb, [...]: Minor reformatting\n\n2007-08-14  Robert Dewar  <dewar@adacore.com>\n\n\t* s-intman-irix.adb, s-osinte-irix.adb, s-osinte-irix.ads,\n\ts-proinf-irix-athread.ads, s-osinte-hpux-dce.adb, s-osinte-hpux-dce.ads,\n\ts-parame-hpux.ads, s-intman-dummy.adb, s-tasinf-solaris.adb,\n\ts-tasinf-solaris.ads, s-asthan-vms-alpha.adb, s-inmaop-vms.adb,\n\ts-intman-vms.adb, s-intman-vms.ads, s-osprim-mingw.adb,\n\ts-parame-vms-restrict.ads, s-parame-ae653.ads, s-intman-vxworks.ads,\n\ts-intman-vxworks.ads, s-intman-vxworks.adb, s-parame-vxworks.ads,\n\ts-tfsetr-vxworks.adb, s-interr.adb, s-interr.ads, a-tasatt.adb,\n\texp_ch13.adb, s-htable.ads, s-imgboo.ads, s-imglli.ads, s-imgllu.ads,\n\ts-imguns.ads, g-eacodu.adb, par-ch12.adb, s-stache.ads, s-stausa.adb,\n\ts-poosiz.adb, s-parame.ads, s-mastop.ads, s-osinte-darwin.ads,\n\ta-chtgke.adb, s-asthan-vms-alpha.adb, s-parame-vms-alpha.ads,\n\ts-parame-vms-ia64.ads, s-parame-vxworks.adb, s-except.ads,\n\tg-altcon.adb: Minor reformatting\n\n\tada-tree.h: Delete empty line.\n\n\tali.ads: Minor reformatting\n\tClarification of comments.\n\tMinor spelling correction\n\n\t* exp_dbug.adb: Add Warnings Off to suppress new warning\n\n\t* a-witeio.adb (Write): Add Warnings (Off) for unneeded IN OUT mode\n\tformal\n\n\t* a-strunb.adb (Set_Unbounded_String): Avoid memory leak by freeing old\n\tvalue\n\n\t* a-textio.adb (Write): Remove an unnecessary IN OUT mode from\n\n\t* a-textio.ads: Reorder the standard input/output/error declarations\n\tfor consistency.\n\n\t* g-dirope.adb, g-dirope.ads: Change Dir to mode IN for Open call\n\n\t* par-ch2.adb: Recognize RM specially in errout\n\tChange 'R'M to RM in all error messages\n\n\t* scng.adb: Recognize RM specially in errout\n\n\t* sem.ads, sem.adb, exp_strm.adb, exp_ch5.ads, expander.adb: Rename\n\tN_Return node to be N_Simple_Return, to reflect Ada 2005 terminology.\n\n\t* s-direio.adb: Add missing routine header box.\n\n\t* sem_attr.ads: Add ??? comments\n\n\t* sem_eval.adb: Recognize RM specially in errout\n\tChange 'R'M to RM in all error messages\n\n\t* sem_maps.adb, sem_maps.ads: Remove some unnecessary IN OUT modes\n\n\t* s-tasinf.ads: Fix minor comment typo.\n\n\t* a-cihama.adb: Minor comment addition\n\n\t* a-ztexio.adb (Write): Add Warnings (Off) for unneeded IN OUT mode\n\tformal\n\n\t* s-tasinf-tru64.ads: Fix minor comment typo.\n\n\t* itypes.ads: Comment update.\n\n\t* ali-util.adb: Remove Generic_Separately_Compiled guard, not needed\n\tanymore.\n\n\t* argv.c: Added protection against null gnat_argv and gnat_envp.\n\n\t* bcheck.adb (Check_Consistency): Use correct markup character ({) in\n\twarning message when Tolerate_Consistency_Errors is True.\n\n\t* cstand.adb (Create_Standard): Do not call Init_Size_Alignment for\n\tAny_Id, as this subprogram is only applicable to *type* entities (it\n\tsets RM_Size). Instead initialize just Esize and Alignment.\n\nFrom-SVN: r127440", "tree": {"sha": "7f1f9f1c3411501de6576d01a74c4d83f635c7a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f1f9f1c3411501de6576d01a74c4d83f635c7a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b11e8d6fc0722f739630bfabff7d778faae9f1d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b11e8d6fc0722f739630bfabff7d778faae9f1d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b11e8d6fc0722f739630bfabff7d778faae9f1d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b11e8d6fc0722f739630bfabff7d778faae9f1d3/comments", "author": null, "committer": null, "parents": [{"sha": "9410151a22e5a54497fcc44bf30dccf3569441e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9410151a22e5a54497fcc44bf30dccf3569441e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9410151a22e5a54497fcc44bf30dccf3569441e0"}], "stats": {"total": 1367, "additions": 786, "deletions": 581}, "files": [{"sha": "2667871b9bc3dcd0051b735d8c4284559136c496", "filename": "gcc/ada/a-chtgke.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-chtgke.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-chtgke.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgke.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -268,7 +268,7 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n          return;\n       end if;\n \n-      --  The node is a bucket different from the bucket implied by Key.\n+      --  The node is a bucket different from the bucket implied by Key\n \n       if HT.Busy > 0 then\n          raise Program_Error with"}, {"sha": "2a3e1b58c1dafe93b5d7f5d669efb2c9de38e594", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d7b5eb1de79ba533b4b34d12f036ac32028a9bf8", "filename": "gcc/ada/a-strunb.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-strunb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-strunb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -847,10 +847,12 @@ package body Ada.Strings.Unbounded is\n      (Target : out Unbounded_String;\n       Source : String)\n    is\n+      Old : String_Access := Target.Reference;\n    begin\n       Target.Last          := Source'Length;\n       Target.Reference     := new String (1 .. Source'Length);\n       Target.Reference.all := Source;\n+      Free (Old);\n    end Set_Unbounded_String;\n \n    -----------"}, {"sha": "82b2df2f823c92ad396974523be4dca700803805", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 64, "deletions": 70, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -126,23 +126,22 @@\n --  might result in dangling references.\n \n --  Another problem with instantiations deeper than the library level is that\n---  there is risk of storage leakage, or dangling references to reused\n---  storage. That is, if an instantiation of Ada.Task_Attributes is made\n---  within a procedure, what happens to the storage allocated for attributes,\n---  when the procedure call returns? Apparently (RM 7.6.1 (4)) any such\n---  objects must be finalized, since they will no longer be accessible, and in\n---  general one would expect that the storage they occupy would be recovered\n---  for later reuse. (If not, we would have a case of storage leakage.)\n---  Assuming the storage is recovered and later reused, we have potentially\n---  dangerous dangling references. When the procedure containing the\n---  instantiation of Ada.Task_Attributes returns, there may still be\n---  unterminated tasks with associated attribute values for that instantiation.\n---  When such tasks eventually terminate, the RTS will attempt to call the\n---  Deallocate procedure on them. If the corresponding storage has already\n---  been deallocated, when the master of the access type was left, we have a\n---  potential disaster. This disaster is compounded since the pointer to\n---  Deallocate is probably through a \"trampoline\" which will also have been\n---  destroyed.\n+--  there is risk of storage leakage, or dangling references to reused storage.\n+--  That is, if an instantiation of Ada.Task_Attributes is made within a\n+--  procedure, what happens to the storage allocated for attributes, when the\n+--  procedure call returns? Apparently (RM 7.6.1 (4)) any such objects must be\n+--  finalized, since they will no longer be accessible, and in general one\n+--  would expect that the storage they occupy would be recovered for later\n+--  reuse. (If not, we would have a case of storage leakage.) Assuming the\n+--  storage is recovered and later reused, we have potentially dangerous\n+--  dangling references. When the procedure containing the instantiation of\n+--  Ada.Task_Attributes returns, there may still be unterminated tasks with\n+--  associated attribute values for that instantiation. When such tasks\n+--  eventually terminate, the RTS will attempt to call the Deallocate procedure\n+--  on them. If the corresponding storage has already been deallocated, when\n+--  the master of the access type was left, we have a potential disaster. This\n+--  disaster is compounded since the pointer to Deallocate is probably through\n+--  a \"trampoline\" which will also have been destroyed.\n \n --  For this reason, we arrange to remove all dangling references before\n --  leaving the scope of an instantiation. This is ugly, since it requires\n@@ -156,38 +155,36 @@\n --  the default initial one. This allows a potential savings in allocation,\n --  for attributes that are not used by all tasks.\n \n---  For efficiency, we reserve space in the TCB for a fixed number of\n---  direct-access attributes. These are required to be of a size that fits in\n---  the space of an object of type System.Address. Because we must use\n---  unchecked bitwise copy operations on these values, they cannot be of a\n---  controlled type, but that is covered automatically since controlled\n---  objects are too large to fit in the spaces.\n-\n---  We originally deferred the initialization of these direct-access\n---  attributes, just as we do for the indirect-access attributes, and used a\n---  per-task bit vector to keep track of which attributes were currently\n---  defined for that task. We found that the overhead of maintaining this\n---  bit-vector seriously slowed down access to the attributes, and made the\n---  fetch operation non-atomic, so that even to read an attribute value\n---  required locking the TCB. Therefore, we now initialize such attributes for\n---  all existing tasks at the time of the attribute instantiation, and\n---  initialize existing attributes for each new task at the time it is\n---  created.\n+--  For efficiency, we reserve space in the TCB for a fixed number of direct-\n+--  access attributes. These are required to be of a size that fits in the\n+--  space of an object of type System.Address. Because we must use unchecked\n+--  bitwise copy operations on these values, they cannot be of a controlled\n+--  type, but that is covered automatically since controlled objects are too\n+--  large to fit in the spaces.\n+\n+--  We originally deferred initialization of these direct-access attributes,\n+--  just as we do for the indirect-access attributes, and used a per-task bit\n+--  vector to keep track of which attributes were currently defined for that\n+--  task. We found that the overhead of maintaining this bit-vector seriously\n+--  slowed down access to the attributes, and made the fetch operation non-\n+--  atomic, so that even to read an attribute value required locking the TCB.\n+--  Therefore, we now initialize such attributes for all existing tasks at the\n+--  time of the attribute instantiation, and initialize existing attributes for\n+--  each new task at the time it is created.\n \n --  The latter initialization requires a list of all the instantiation\n --  descriptors. Updates to this list, as well as the bit-vector that is used\n --  to reserve slots for attributes in the TCB, require mutual exclusion. That\n --  is provided by the Lock/Unlock_RTS.\n \n---  One special problem that added complexity to the design is that the\n---  per-task list of indirect attributes contains objects of different types.\n---  We use unchecked pointer conversion to link these nodes together and\n---  access them, but the records may not have identical internal structure.\n---  Initially, we thought it would be enough to allocate all the common\n---  components of the records at the front of each record, so that their\n---  positions would correspond. Unfortunately, GNAT adds \"dope\" information at\n---  the front of a record, if the record contains any controlled-type\n---  components.\n+--  One special problem that added complexity to the design is that the per-\n+--  task list of indirect attributes contains objects of different types. We\n+--  use unchecked pointer conversion to link these nodes together and access\n+--  them, but the records may not have identical internal structure. Initially,\n+--  we thought it would be enough to allocate all the common components of\n+--  the records at the front of each record, so that their positions would\n+--  correspond. Unfortunately, GNAT adds \"dope\" information at the front\n+--  of a record, if the record contains any controlled-type components.\n --\n --  This means that the offset of the fields we use to link the nodes is at\n --  different positions on nodes of different types. To get around this, each\n@@ -211,15 +208,14 @@\n --       Value      : aliased Attribute;  --  the generic formal type\n --    end record;\n \n---  Another interesting problem is with the initialization of the\n---  instantiation descriptors. Originally, we did this all via the Initialize\n---  procedure of the descriptor type and code in the package body. It turned\n---  out that the Initialize procedure needed quite a bit of information,\n---  including the size of the attribute type, the initial value of the\n---  attribute (if it fits in the TCB), and a pointer to the deallocator\n---  procedure. These needed to be \"passed\" in via access discriminants. GNAT\n---  was having trouble with access discriminants, so all this work was moved\n---  to the package body.\n+--  Another interesting problem is with the initialization of the instantiation\n+--  descriptors. Originally, we did this all via the Initialize procedure of\n+--  the descriptor type and code in the package body. It turned out that the\n+--  Initialize procedure needed quite a bit of information, including the size\n+--  of the attribute type, the initial value of the attribute (if it fits in\n+--  the TCB), and a pointer to the deallocator procedure. These needed to be\n+--  \"passed\" in via access discriminants. GNAT was having trouble with access\n+--  discriminants, so all this work was moved to the package body.\n \n with System.Error_Reporting;\n --  Used for Shutdown;\n@@ -284,11 +280,11 @@ package body Ada.Task_Attributes is\n    type Access_Wrapper is access all Wrapper;\n \n    pragma Warnings (Off);\n-   --  We turn warnings off for the following declarations of the\n-   --  To_Attribute_Handle conversions, since these are used only for small\n-   --  attributes where we know that there are no problems with alignment, but\n-   --  the compiler will generate warnings for the occurrences in the large\n-   --  attribute case, even though they will not actually be used.\n+   --  We turn warnings off for the following To_Attribute_Handle conversions,\n+   --  since these are used only for small attributes where we know that there\n+   --  are no problems with alignment, but the compiler will generate warnings\n+   --  for the occurrences in the large attribute case, even though they will\n+   --  not actually be used.\n \n    function To_Attribute_Handle is new Ada.Unchecked_Conversion\n      (System.Address, Attribute_Handle);\n@@ -342,8 +338,8 @@ package body Ada.Task_Attributes is\n    ------------------------\n \n    procedure Deallocate (P : in out Access_Node);\n-   --  Passed to the RTS via unchecked conversion of a pointer to\n-   --  permit finalization and deallocation of attribute storage nodes\n+   --  Passed to the RTS via unchecked conversion of a pointer to permit\n+   --  finalization and deallocation of attribute storage nodes.\n \n    --------------------------\n    -- Instantiation Record --\n@@ -359,9 +355,9 @@ package body Ada.Task_Attributes is\n       --  The generic formal type, may be controlled\n    end record;\n \n-   --  A number of unchecked conversions involving Wrapper_Access sources\n-   --  are performed in this unit. We have to ensure that the designated\n-   --  object is always strictly enough aligned.\n+   --  A number of unchecked conversions involving Wrapper_Access sources are\n+   --  performed in this unit. We have to ensure that the designated object is\n+   --  always strictly enough aligned.\n \n    for Wrapper'Alignment use Standard'Maximum_Alignment;\n \n@@ -598,8 +594,7 @@ package body Ada.Task_Attributes is\n          end loop;\n \n          --  Unlock RTS here to follow the lock ordering rule that prevent us\n-         --  from using new (i.e the Global_Lock) while holding any other\n-         --  lock.\n+         --  from using new (i.e the Global_Lock) while holding any other lock.\n \n          POP.Unlock_RTS;\n          W := new Wrapper'((null, Local'Unchecked_Access, null), Val);\n@@ -652,7 +647,7 @@ package body Ada.Task_Attributes is\n \n       if Local.Index /= 0 then\n \n-         --  Get value of attribute. Warnings off, because for large\n+         --  Get value of attribute. We turn Warnings off, because for large\n          --  attributes, this code can generate alignment warnings. But of\n          --  course large attributes are never directly addressed so in fact\n          --  we will never execute the code in this case.\n@@ -708,9 +703,9 @@ package body Ada.Task_Attributes is\n --  Start of elaboration code for package Ada.Task_Attributes\n \n begin\n-   --  This unchecked conversion can give warnings when alignments\n-   --  are incorrect, but they will not be used in such cases anyway,\n-   --  so the warnings can be safely ignored.\n+   --  This unchecked conversion can give warnings when alignments are\n+   --  incorrect, but they will not be used in such cases anyway, so the\n+   --  warnings can be safely ignored.\n \n    pragma Warnings (Off);\n    Local.Deallocate := To_Lib_Level_Deallocator (Deallocate'Access);\n@@ -789,8 +784,7 @@ begin\n       --  Attribute goes into a node onto a linked list\n \n       else\n-         --  Replace stub for finalization routine that is called at task\n-         --  termination.\n+         --  Replace stub for finalization routine called at task termination\n \n          Initialization.Finalize_Attributes_Link :=\n            System.Tasking.Task_Attributes.Finalize_Attributes'Access;"}, {"sha": "c8d58437fd2d4d1a39f7fe0e8da7eeafaa311df9", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -1810,6 +1810,9 @@ package body Ada.Text_IO is\n      (File : in out Text_AFCB;\n       Item : Stream_Element_Array)\n    is\n+      pragma Warnings (Off, File);\n+      --  Because in this implementation we don't need IN OUT, we only read\n+\n       function Has_Translated_Characters return Boolean;\n       --  return True if Item array contains a character which will be\n       --  translated under the text file mode. There is only one such\n@@ -1822,6 +1825,10 @@ package body Ada.Text_IO is\n \n       Siz : constant size_t := Item'Length;\n \n+      -------------------------------\n+      -- Has_Translated_Characters --\n+      -------------------------------\n+\n       function Has_Translated_Characters return Boolean is\n       begin\n          for K in Item'Range loop\n@@ -1833,7 +1840,10 @@ package body Ada.Text_IO is\n       end Has_Translated_Characters;\n \n       Needs_Binary_Write : constant Boolean :=\n-        text_translation_required and then Has_Translated_Characters;\n+                             text_translation_required\n+                               and then Has_Translated_Characters;\n+\n+   --  Start of processing for Write\n \n    begin\n       if File.Mode = FCB.In_File then\n@@ -1853,7 +1863,6 @@ package body Ada.Text_IO is\n       --  with text mode if needed.\n \n       if Needs_Binary_Write then\n-\n          if fflush (File.Stream) = -1 then\n             raise Device_Error;\n          end if;\n@@ -1869,7 +1878,6 @@ package body Ada.Text_IO is\n       --  we reset to text mode.\n \n       if Needs_Binary_Write then\n-\n          if fflush (File.Stream) = -1 then\n             raise Device_Error;\n          end if;\n@@ -1887,6 +1895,7 @@ package body Ada.Text_IO is\n    Err_Name : aliased String := \"*stderr\" & ASCII.Nul;\n    In_Name  : aliased String := \"*stdin\" & ASCII.Nul;\n    Out_Name : aliased String := \"*stdout\" & ASCII.Nul;\n+\n begin\n    -------------------------------\n    -- Initialize Standard Files --"}, {"sha": "38b4cb178ea2f49252c1f566b6731d67322c9f71", "filename": "gcc/ada/a-textio.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-textio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-textio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -391,13 +391,13 @@ private\n    Null_Str : aliased constant String := \"\";\n    --  Used as name and form of standard files\n \n-   Standard_Err_AFCB : aliased Text_AFCB;\n    Standard_In_AFCB  : aliased Text_AFCB;\n    Standard_Out_AFCB : aliased Text_AFCB;\n+   Standard_Err_AFCB : aliased Text_AFCB;\n \n-   Standard_Err : aliased File_Type := Standard_Err_AFCB'Access;\n    Standard_In  : aliased File_Type := Standard_In_AFCB'Access;\n    Standard_Out : aliased File_Type := Standard_Out_AFCB'Access;\n+   Standard_Err : aliased File_Type := Standard_Err_AFCB'Access;\n    --  Standard files\n \n    Current_In   : aliased File_Type := Standard_In;"}, {"sha": "c83230cdea7967129c22ea2b97bde69245c56911", "filename": "gcc/ada/a-witeio.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -1806,6 +1806,9 @@ package body Ada.Wide_Text_IO is\n      (File : in out Wide_Text_AFCB;\n       Item : Stream_Element_Array)\n    is\n+      pragma Warnings (Off, File);\n+      --  Because in this implementation we don't need IN OUT, we only read\n+\n       Siz : constant size_t := Item'Length;\n \n    begin"}, {"sha": "cd4970a554e276184bfa7389c57ca3c75da3d805", "filename": "gcc/ada/a-ztexio.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-ztexio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fa-ztexio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -1807,6 +1807,9 @@ package body Ada.Wide_Wide_Text_IO is\n      (File : in out Wide_Wide_Text_AFCB;\n       Item : Stream_Element_Array)\n    is\n+      pragma Warnings (Off, File);\n+      --  Because in this implementation we don't need IN OUT, we only read\n+\n       Siz : constant size_t := Item'Length;\n \n    begin"}, {"sha": "5abad09641a2195301d6ee397bb63891c2e927a6", "filename": "gcc/ada/ada-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fada-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fada-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada-tree.h?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -37,7 +37,6 @@ enum gnat_tree_code {\n union lang_tree_node\n   GTY((desc (\"0\"),\n        chain_next (\"(union lang_tree_node *)GENERIC_NEXT (&%h.t)\")))\n-\n {\n   union tree_node GTY((tag (\"0\"))) t;\n };"}, {"sha": "fb5eb609234ada16ceb6804d1d6ded10e8099ceb", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -26,7 +26,6 @@\n \n with Debug;   use Debug;\n with Binderr; use Binderr;\n-with Lib;     use Lib;\n with Opt;     use Opt;\n with Output;  use Output;\n with Osint;   use Osint;\n@@ -248,21 +247,17 @@ package body ALI.Util is\n             then\n                Text := Read_Library_Info (Afile);\n \n-               --  Return with an error if source cannot be found and if this\n-               --  is not a library generic (now we can, but does not have to\n-               --  compile library generics)\n+               --  Return with an error if source cannot be found. We used to\n+               --  skip this check when we did not compile library generics\n+               --  separately, but we now always do, so there is no special\n+               --  case here anymore.\n \n                if Text = null then\n-                  if Generic_Separately_Compiled (Withs.Table (W).Sfile) then\n-                     Error_Msg_File_1 := Afile;\n-                     Error_Msg_File_2 := Withs.Table (W).Sfile;\n-                     Error_Msg (\"{ not found, { must be compiled\");\n-                     Set_Name_Table_Info (Afile, Int (No_Unit_Id));\n-                     return;\n-\n-                  else\n-                     goto Skip_Library_Generics;\n-                  end if;\n+                  Error_Msg_File_1 := Afile;\n+                  Error_Msg_File_2 := Withs.Table (W).Sfile;\n+                  Error_Msg (\"{ not found, { must be compiled\");\n+                  Set_Name_Table_Info (Afile, Int (No_Unit_Id));\n+                  return;\n                end if;\n \n                --  Enter in ALIs table\n@@ -307,8 +302,6 @@ package body ALI.Util is\n                   Read_ALI (Idread);\n                end if;\n \n-               <<Skip_Library_Generics>> null;\n-\n             --  If the ALI file has already been processed and is an interface,\n             --  set the flag in the entry of the Withs table.\n "}, {"sha": "bfb2a0ae943e45fc3205b780b75d16f2d6a5dfab", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -261,37 +261,37 @@ package ALI is\n       --  have an elaboration routine (since it has no elaboration code).\n \n       Pure : Boolean;\n-      --  Indicates presence of PU parameter for a pure package\n+      --  Indicates presence of PU parameter for a package having pragma Pure\n \n       Dynamic_Elab : Boolean;\n-      --  Set to True if the unit was compiled with dynamic elaboration\n-      --  checks (i.e. either -gnatE or pragma Elaboration_Checks (RM)\n-      --  was used to compile the unit).\n+      --  Set to True if the unit was compiled with dynamic elaboration checks\n+      --  (i.e. either -gnatE or pragma Elaboration_Checks (RM) was used to\n+      --  compile the unit).\n \n       Elaborate_Body : Boolean;\n-      --  Indicates presence of EB parameter for a package which has a\n-      --  pragma Preelaborate_Body.\n+      --  Indicates presence of EB parameter for a package which has a pragma\n+      --  Elaborate_Body, and also for generic package instantiations.\n \n       Set_Elab_Entity : Boolean;\n       --  Indicates presence of EE parameter for a unit which has an\n       --  elaboration entity which must be set true as part of the\n       --  elaboration of the entity.\n \n       Has_RACW : Boolean;\n-      --  Indicates presence of RA parameter for a package that declares\n-      --  at least one Remote Access to Class_Wide (RACW) object.\n+      --  Indicates presence of RA parameter for a package that declares at\n+      --  least one Remote Access to Class_Wide (RACW) object.\n \n       Remote_Types : Boolean;\n       --  Indicates presence of RT parameter for a package which has a\n       --  pragma Remote_Types.\n \n       Shared_Passive : Boolean;\n-      --  Indicates presence of SP parameter for a package which has a\n-      --  pragma Shared_Passive.\n+      --  Indicates presence of SP parameter for a package which has a pragma\n+      --  Shared_Passive.\n \n       RCI : Boolean;\n-      --  Indicates presence of RC parameter for a package which has a\n-      --  pragma Remote_Call_Interface.\n+      --  Indicates presence of RC parameter for a package which has a pragma\n+      --  Remote_Call_Interface.\n \n       Predefined : Boolean;\n       --  Indicates if unit is language predefined (or a child of such a unit)\n@@ -327,13 +327,13 @@ package ALI is\n \n       Icasing : Casing_Type;\n       --  Indicates casing of identifiers in source file for this unit. This\n-      --  is used for informational output, and also for constructing the\n-      --  main unit if it is being built in Ada.\n+      --  is used for informational output, and also for constructing the main\n+      --  unit if it is being built in Ada.\n \n       Kcasing : Casing_Type;\n-      --  Indicates casing of keyowords in source file for this unit. This\n-      --  is used for informational output, and also for constructing the\n-      --  main unit if it is being built in Ada.\n+      --  Indicates casing of keywords in source file for this unit. This is\n+      --  used for informational output, and also for constructing the main\n+      --  unit if it is being built in Ada.\n \n       Elab_Position : aliased Natural;\n       --  Initialized to zero. Set non-zero when a unit is chosen and"}, {"sha": "276edf7e0f299bbb5f8c860ee7edf1fc3298ae8e", "filename": "gcc/ada/argv.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv.c?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2003 Free Software Foundation, Inc.           *\n+ *         Copyright (C) 1992-2007, Free Software Foundation, Inc.           *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -79,13 +79,17 @@ __gnat_arg_count (void)\n int\n __gnat_len_arg (int arg_num)\n {\n-  return strlen (gnat_argv[arg_num]);\n+  if (gnat_argv != NULL)\n+    return strlen (gnat_argv[arg_num]);\n+  else\n+    return 0;\n }\n \n void\n __gnat_fill_arg (char *a, int i)\n {\n-  strncpy (a, gnat_argv[i], strlen(gnat_argv[i]));\n+  if (gnat_argv != NULL)\n+    strncpy (a, gnat_argv[i], strlen(gnat_argv[i]));\n }\n \n int\n@@ -101,11 +105,15 @@ __gnat_env_count (void)\n int\n __gnat_len_env (int env_num)\n {\n-  return strlen (gnat_envp[env_num]);\n+  if (gnat_envp != NULL)\n+    return strlen (gnat_envp[env_num]);\n+  else\n+    return 0;\n }\n \n void\n __gnat_fill_env (char *a, int i)\n {\n-  strncpy (a, gnat_envp[i], strlen (gnat_envp[i]));\n+  if (gnat_envp != NULL)\n+    strncpy (a, gnat_envp[i], strlen (gnat_envp[i]));\n }"}, {"sha": "e157e8c172053e5c30f55170f3a57a1644e00e71", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -202,7 +202,7 @@ package body Bcheck is\n \n                   elsif Tolerate_Consistency_Errors then\n                      Error_Msg\n-                       (\"?% should be recompiled (% has been modified)\");\n+                       (\"?{ should be recompiled ({ has been modified)\");\n \n                   else\n                      Error_Msg (\"{ must be recompiled ({ has been modified)\");"}, {"sha": "9c4209fa64ce3388b916f736db2d1f120a5b4291", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -948,7 +948,8 @@ package body CStand is\n       Set_Ekind             (Any_Id, E_Variable);\n       Set_Scope             (Any_Id, Standard_Standard);\n       Set_Etype             (Any_Id, Any_Type);\n-      Init_Size_Align       (Any_Id);\n+      Init_Esize            (Any_Id);\n+      Init_Alignment        (Any_Id);\n       Make_Name             (Any_Id, \"any id\");\n \n       Any_Access := New_Standard_Entity;"}, {"sha": "52bd105456ddac48516ddf3b51095c9e586177ff", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -86,7 +86,8 @@ package body Exp_Ch13 is\n             --  original node is in the source. An exception though is the case\n             --  of an access variable which is default initialized to null, and\n             --  such initialization is retained.\n-            --  Furthermore, if the initialization is the  equivalent aggregate\n+\n+            --  Furthermore, if the initialization is the equivalent aggregate\n             --  of the type initialization procedure, it replaces an implicit\n             --  call to the init proc, and must be respected. Note that for\n             --  packed types we do not build equivalent aggregates."}, {"sha": "e74eb9f628f7fb45e4ee00f5063a8e855d35d959", "filename": "gcc/ada/exp_ch5.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexp_ch5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexp_ch5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,5 +37,5 @@ package Exp_Ch5 is\n    procedure Expand_N_Goto_Statement            (N : Node_Id);\n    procedure Expand_N_If_Statement              (N : Node_Id);\n    procedure Expand_N_Loop_Statement            (N : Node_Id);\n-   procedure Expand_N_Return_Statement          (N : Node_Id);\n+   procedure Expand_N_Simple_Return_Statement   (N : Node_Id);\n end Exp_Ch5;"}, {"sha": "959284a5caaae9af1f9388df133c22103ff3a635", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -673,7 +673,7 @@ package body Exp_Dbug is\n \n          --  If the front end has already computed a fully qualified name,\n          --  then it is also the case that no further qualification is\n-         --  required\n+         --  required.\n \n          if Present (Scope (Scope (Entity)))\n            and then not Has_Fully_Qualified_Name (Entity)\n@@ -1331,6 +1331,9 @@ package body Exp_Dbug is\n    procedure Strip_Suffixes (BNPE_Suffix_Found : in out Boolean) is\n       SL : Natural;\n \n+      pragma Warnings (Off, BNPE_Suffix_Found);\n+      --  Since this procedure only ever sets the flag\n+\n    begin\n       --  Search for and strip BNPE suffix\n "}, {"sha": "475d8394efd2464ab0a7f13cdb0a150da52c42f3", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -219,7 +219,7 @@ package body Exp_Strm is\n              Make_Identifier (Loc, Name_S),\n              Make_Identifier (Loc, Name_V))),\n \n-         Make_Return_Statement (Loc,\n+         Make_Simple_Return_Statement (Loc,\n            Expression => Make_Identifier (Loc, Name_V)));\n \n       Fnam :=\n@@ -1158,7 +1158,7 @@ package body Exp_Strm is\n              Make_Identifier (Loc, Name_S),\n              Make_Identifier (Loc, Name_V))),\n \n-         Make_Return_Statement (Loc,\n+         Make_Simple_Return_Statement (Loc,\n            Expression => Make_Identifier (Loc, Name_V)));\n \n       Fnam := Make_Stream_Subprogram_Name (Loc, Typ, TSS_Stream_Input);"}, {"sha": "04809098abb27973dfbc376b2c15d449649ea40e", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -379,8 +379,8 @@ package body Expander is\n                when N_Requeue_Statement =>\n                   Expand_N_Requeue_Statement (N);\n \n-               when N_Return_Statement =>\n-                  Expand_N_Return_Statement (N);\n+               when N_Simple_Return_Statement =>\n+                  Expand_N_Simple_Return_Statement (N);\n \n                when N_Selected_Component =>\n                   Expand_N_Selected_Component (N);"}, {"sha": "f04745ac172b0c47912002c39b820ca717546084", "filename": "gcc/ada/g-altcon.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fg-altcon.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fg-altcon.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-altcon.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2005-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2005-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,23 +78,23 @@ package body GNAT.Altivec.Conversions is\n       --  relying on internal knowledge about the bits layout in the different\n       --  types (all 128 value bits blocks).\n \n-      --  View<->Vector straight bitwise conversions on BE targets.\n+      --  View<->Vector straight bitwise conversions on BE targets\n \n       function UNC_To_Vector is\n          new Ada.Unchecked_Conversion (View_Type, Vector_Type);\n \n       function UNC_To_View is\n          new Ada.Unchecked_Conversion (Vector_Type, View_Type);\n \n-      --  Varray->Vector/View for returning mirrored results on LE targets.\n+      --  Varray->Vector/View for returning mirrored results on LE targets\n \n       function UNC_To_Vector is\n          new Ada.Unchecked_Conversion (Varray_Type, Vector_Type);\n \n       function UNC_To_View is\n          new Ada.Unchecked_Conversion (Varray_Type, View_Type);\n \n-      --  Vector/View->Varray for to-be-permuted source on LE targets.\n+      --  Vector/View->Varray for to-be-permuted source on LE targets\n \n       function UNC_To_Varray is\n          new Ada.Unchecked_Conversion (Vector_Type, Varray_Type);"}, {"sha": "bb8ff93fb2046307eb6034482e46ff4014bfbc21", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -647,7 +647,7 @@ package body GNAT.Directory_Operations is\n    ----------\n \n    procedure Read\n-     (Dir  : in out Dir_Type;\n+     (Dir  : Dir_Type;\n       Str  : out String;\n       Last : out Natural)\n    is"}, {"sha": "060c3c439d9efc5aec28575e03f8cc29eb6e5dbb", "filename": "gcc/ada/g-dirope.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fg-dirope.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fg-dirope.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005, AdaCore                     --\n+--                     Copyright (C) 1998-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -230,7 +230,7 @@ package GNAT.Directory_Operations is\n    --  Returns True if Dir is open, or False otherwise\n \n    procedure Read\n-     (Dir  : in out Dir_Type;\n+     (Dir  : Dir_Type;\n       Str  : out String;\n       Last : out Natural);\n    --  Reads the next entry from the directory and sets Str to the name"}, {"sha": "a9a71648c694b349d55b6b7d180ced837b08bdff", "filename": "gcc/ada/g-eacodu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fg-eacodu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fg-eacodu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-eacodu.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2003 Free Software Foundation, Inc.             --\n+--          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the default (Unix) version.\n+--  This is the default (Unix) version\n \n separate (GNAT.Exception_Actions)\n procedure Core_Dump (Occurrence : Exception_Occurrence) is"}, {"sha": "a10b097c1967921220fb9aef514f2670082278bd", "filename": "gcc/ada/itypes.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fitypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fitypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fitypes.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -74,6 +74,12 @@ package Itypes is\n    --  call to New_Copy_Tree is to create a complete duplicate of a tree,\n    --  as though it had appeared separately in the source), the Itype in\n    --  question is duplicated as part of the New_Copy_Tree processing.\n+   --  As a consequence of this copying mechanism, the association between\n+   --  itypes and associated nodes must be one-to-one: several itypes must\n+   --  not share an associated node. For example, the semantic decoration\n+   --  of an array aggregate generates several itypes: for each index subtype\n+   --  and for the array subtype. The associated node of each index subtype\n+   --  is the corresponding range expression.\n \n    -----------------\n    -- Subprograms --"}, {"sha": "9082a453f40c2f5bddb2e2ed44888bbab2237aad", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -332,7 +332,7 @@ package body Ch12 is\n    begin\n       Generic_Assoc_Node := New_Node (N_Generic_Association, Token_Ptr);\n \n-      --  Ada2005: an association can be given by: others => <>.\n+      --  Ada2005: an association can be given by: others => <>\n \n       if Token = Tok_Others then\n          if Ada_Version < Ada_05 then\n@@ -375,7 +375,7 @@ package body Ch12 is\n          end if;\n       end if;\n \n-      --  In Ada 2005 the actual can be a box.\n+      --  In Ada 2005 the actual can be a box\n \n       if Token = Tok_Box then\n          Scan;"}, {"sha": "4e0c5c4a1b3f32edbf4ccee30f200d849cdab03c", "filename": "gcc/ada/par-ch2.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fpar-ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fpar-ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch2.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -177,15 +177,15 @@ package body Ch2 is\n \n    --  CHARACTER_LITERAL ::= ' GRAPHIC_CHARACTER '\n \n-   --  Handled by the scanner and returned as Tok_Character_Literal\n+   --  Handled by the scanner and returned as Tok_Char_Literal\n \n    -------------------------\n    -- 2.6  String Literal --\n    -------------------------\n \n    --  STRING LITERAL ::= \"{STRING_ELEMENT}\"\n \n-   --  Handled by the scanner and returned as Tok_Character_Literal\n+   --  Handled by the scanner and returned as Tok_String_Literal\n    --  or if the string looks like an operator as Tok_Operator_Symbol.\n \n    -------------------------\n@@ -479,7 +479,7 @@ package body Ch2 is\n \n             if Identifier_Seen then\n                Error_Msg_SC\n-                 (\"|pragma argument identifier required here ('R'M' 2.8(4))\");\n+                 (\"|pragma argument identifier required here (RM 2.8(4))\");\n             end if;\n          end if;\n       end if;"}, {"sha": "b6b8395d498c1676d4190ff670570cdee8844dfb", "filename": "gcc/ada/s-asthan-vms-alpha.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-asthan-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-asthan-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-asthan-vms-alpha.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2006 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the OpenVMS/Alpha version.\n+--  This is the OpenVMS/Alpha version\n \n with System; use System;\n \n@@ -205,7 +205,7 @@ package body System.AST_Handling is\n    end record;\n \n    AST_Vector_Init : AST_Vector_Ptr;\n-   --  Initial value, treated as constant, Vector will be null.\n+   --  Initial value, treated as constant, Vector will be null\n \n    package AST_Attribute is new Ada.Task_Attributes\n      (Attribute     => AST_Vector_Ptr,\n@@ -241,7 +241,7 @@ package body System.AST_Handling is\n \n    AST_Service_Queue : array (AST_Service_Queue_Index) of AST_Instance;\n    pragma Volatile_Components (AST_Service_Queue);\n-   --  The circular buffer used to store active AST requests.\n+   --  The circular buffer used to store active AST requests\n \n    AST_Service_Queue_Put : AST_Service_Queue_Index := 0;\n    AST_Service_Queue_Get : AST_Service_Queue_Index := 0;\n@@ -583,7 +583,7 @@ package body System.AST_Handling is\n          if Is_Waiting (J) then\n             Is_Waiting (J) := False;\n \n-            --  Sleeps are handled by ASTs on VMS, so don't call Wakeup.\n+            --  Sleeps are handled by ASTs on VMS, so don't call Wakeup\n \n             STPOD.Interrupt_AST_Handler (To_Address (AST_Task_Ids (J)));\n             exit;"}, {"sha": "d7d94957c0b4df041e84583884172d867a59e954", "filename": "gcc/ada/s-direio.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -319,6 +319,10 @@ package body System.Direct_IO is\n       procedure Do_Write;\n       --  Do the actual write\n \n+      --------------\n+      -- Do_Write --\n+      --------------\n+\n       procedure Do_Write is\n       begin\n          FIO.Write_Buf (AP (File), Item, Size);"}, {"sha": "5dc5c1fa563fd7f172ed450c44945d1a8f61e61b", "filename": "gcc/ada/s-except.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-except.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -42,7 +42,7 @@ package System.Exceptions is\n    pragma Warnings (Off);\n    pragma Preelaborate_05;\n    pragma Warnings (On);\n-   --  To let Ada.Exceptions \"with\" us and let us \"with\" Standard_Library.\n+   --  To let Ada.Exceptions \"with\" us and let us \"with\" Standard_Library\n \n    package SSL renames System.Standard_Library;\n    --  To let some of the hooks below have formal parameters typed in"}, {"sha": "95622aea7c59d60727f2e6b9cf19912a0a5b40e5", "filename": "gcc/ada/s-htable.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-htable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-htable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                     Copyright (C) 1995-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,7 +54,7 @@ package System.HTable is\n \n    generic\n       type Header_Num is range <>;\n-      --  An integer type indicating the number and range of hash headers.\n+      --  An integer type indicating the number and range of hash headers\n \n       type Element is private;\n       --  The type of element to be stored\n@@ -120,7 +120,7 @@ package System.HTable is\n \n    generic\n       type Header_Num is range <>;\n-      --  An integer type indicating the number and range of hash headers.\n+      --  An integer type indicating the number and range of hash headers\n \n       type Element (<>) is limited private;\n       --  The type of element to be stored. This is historically part of the\n@@ -137,7 +137,7 @@ package System.HTable is\n       --  type, but could be some other form of type such as an integer type).\n \n       Null_Ptr : Elmt_Ptr;\n-      --  The null value of the Elmt_Ptr type.\n+      --  The null value of the Elmt_Ptr type\n \n       with procedure Set_Next (E : Elmt_Ptr; Next : Elmt_Ptr);\n       with function  Next     (E : Elmt_Ptr) return Elmt_Ptr;"}, {"sha": "c632d4d36b391736567725e728506aea4eba78f9", "filename": "gcc/ada/s-imgboo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-imgboo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-imgboo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgboo.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,6 +37,6 @@ package System.Img_Bool is\n    pragma Pure;\n \n    function Image_Boolean (V : Boolean) return String;\n-   --  Computes Boolean'Image (V) and returns the result.\n+   --  Computes Boolean'Image (V) and returns the result\n \n end System.Img_Bool;"}, {"sha": "6401674fa0b7163280dbcd15103d071db838a6f6", "filename": "gcc/ada/s-imglli.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-imglli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-imglli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imglli.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1992-2005 Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@ package System.Img_LLI is\n    pragma Preelaborate;\n \n    function Image_Long_Long_Integer (V : Long_Long_Integer) return String;\n-   --  Computes Long_Long_Integer'Image (V) and returns the result.\n+   --  Computes Long_Long_Integer'Image (V) and returns the result\n \n    procedure Set_Image_Long_Long_Integer\n      (V : Long_Long_Integer;"}, {"sha": "5c17399ba5ca48804119bed47042b35acdf24909", "filename": "gcc/ada/s-imgllu.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-imgllu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-imgllu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgllu.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1992-2005 Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@ package System.Img_LLU is\n    function Image_Long_Long_Unsigned\n      (V :    System.Unsigned_Types.Long_Long_Unsigned)\n       return String;\n-   --  Computes Long_Long_Unsigned'Image (V) and returns the result.\n+   --  Computes Long_Long_Unsigned'Image (V) and returns the result\n \n    procedure Set_Image_Long_Long_Unsigned\n      (V : System.Unsigned_Types.Long_Long_Unsigned;"}, {"sha": "6ec636b4fe1e9e787a38f12a35d696cca1a518e9", "filename": "gcc/ada/s-imguns.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-imguns.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-imguns.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imguns.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1992-2005 Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@ package System.Img_Uns is\n    function Image_Unsigned\n      (V    : System.Unsigned_Types.Unsigned)\n       return String;\n-   --  Computes Unsigned'Image (V) and returns the result.\n+   --  Computes Unsigned'Image (V) and returns the result\n \n    procedure Set_Image_Unsigned\n      (V : System.Unsigned_Types.Unsigned;"}, {"sha": "3c04bb0e0748019ea0a69d4c1836a321591b1b68", "filename": "gcc/ada/s-inmaop-vms.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-inmaop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-inmaop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-inmaop-vms.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -283,6 +283,8 @@ package body System.Interrupt_Management.Operations is\n          P1     => To_unsigned_long (Interrupt'Address),\n          P2     => Interrupt_ID'Size / 8);\n \n+      --  The following could use a comment ???\n+\n       pragma Assert ((Status and 1) = 1);\n    end Interrupt_Self_Process;\n "}, {"sha": "6b0037fe7718da3d67fe00fa6002d996b6fa4ab2", "filename": "gcc/ada/s-interr.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -257,7 +257,7 @@ package body System.Interrupts is\n    Registered_Handler_Tail : R_Link := null;\n \n    Access_Hold : Server_Task_Access;\n-   --  variable used to allocate Server_Task using \"new\".\n+   --  Variable used to allocate Server_Task using \"new\"\n \n    -----------------------\n    -- Local Subprograms --\n@@ -920,7 +920,7 @@ package body System.Interrupts is\n \n          if New_Handler = null then\n \n-            --  The null handler means we are detaching the handler.\n+            --  The null handler means we are detaching the handler\n \n             User_Handler (Interrupt).Static := False;\n \n@@ -1267,18 +1267,18 @@ package body System.Interrupts is\n \n       System.Tasking.Utilities.Make_Independent;\n \n-      --  Install default action in system level.\n+      --  Install default action in system level\n \n       IMOP.Install_Default_Action (IMNG.Interrupt_ID (Interrupt));\n \n-      --  Note: All tasks in RTS will have all the Reserve Interrupts\n-      --  being masked (except the Interrupt_Manager) and Keep_Unmasked\n-      --  unmasked when created.\n+      --  Note: All tasks in RTS will have all the Reserve Interrupts being\n+      --  masked (except the Interrupt_Manager) and Keep_Unmasked unmasked when\n+      --  created.\n \n-      --  Abort_Task_Interrupt is one of the Interrupt unmasked\n-      --  in all tasks. We mask the Interrupt in this particular task\n-      --  so that \"sigwait\" is possible to catch an explicitely sent\n-      --  Abort_Task_Interrupt from the Interrupt_Manager.\n+      --  Abort_Task_Interrupt is one of the Interrupt unmasked in all tasks.\n+      --  We mask the Interrupt in this particular task so that \"sigwait\" is\n+      --  possible to catch an explicitely sent Abort_Task_Interrupt from the\n+      --  Interrupt_Manager.\n \n       --  There are two Interrupt interrupts that this task catch through\n       --  \"sigwait.\" One is the Interrupt this task is designated to catch\n@@ -1287,7 +1287,7 @@ package body System.Interrupts is\n       --  Interrupt_Manager to inform status changes (e.g: become Blocked,\n       --  Handler or Entry is to be detached).\n \n-      --  Prepare a mask to used for sigwait.\n+      --  Prepare a mask to used for sigwait\n \n       IMOP.Empty_Interrupt_Mask (Intwait_Mask'Access);\n \n@@ -1361,7 +1361,7 @@ package body System.Interrupts is\n \n             if Ret_Interrupt = Interrupt_ID (IMNG.Abort_Task_Interrupt) then\n \n-               --  Inform the Interrupt_Manager of wakeup from above sigwait.\n+               --  Inform the Interrupt_Manager of wakeup from above sigwait\n \n                POP.Abort_Task (Interrupt_Manager_ID);\n \n@@ -1397,7 +1397,7 @@ package body System.Interrupts is\n                   if User_Handler (Interrupt).H /= null then\n                      Tmp_Handler := User_Handler (Interrupt).H;\n \n-                     --  RTS calls should not be made with self being locked.\n+                     --  RTS calls should not be made with self being locked\n \n                      POP.Unlock (Self_ID);\n \n@@ -1417,7 +1417,7 @@ package body System.Interrupts is\n                      Tmp_ID := User_Entry (Interrupt).T;\n                      Tmp_Entry_Index := User_Entry (Interrupt).E;\n \n-                     --  RTS calls should not be made with self being locked.\n+                     --  RTS calls should not be made with self being locked\n \n                      if Single_Lock then\n                         POP.Unlock_RTS;\n@@ -1470,7 +1470,7 @@ package body System.Interrupts is\n --  Elaboration code for package System.Interrupts\n \n begin\n-   --  Get Interrupt_Manager's ID so that Abort_Interrupt can be sent.\n+   --  Get Interrupt_Manager's ID so that Abort_Interrupt can be sent\n \n    Interrupt_Manager_ID := To_System (Interrupt_Manager'Identity);\n "}, {"sha": "a01b4c0b4fdec0d804bd4d38917521b8cdcb1308", "filename": "gcc/ada/s-interr.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-interr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-interr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -134,7 +134,7 @@ package System.Interrupts is\n    --  already bound to another entry, Program_Error will be raised.\n \n    procedure Detach_Interrupt_Entries (T : System.Tasking.Task_Id);\n-   --  This procedure detaches all the Interrupt Entries bound to a task.\n+   --  This procedure detaches all the Interrupt Entries bound to a task\n \n    ------------------------------\n    -- POSIX.5 Signals Services --\n@@ -157,7 +157,7 @@ package System.Interrupts is\n    --  Comment needed ???\n \n    procedure Ignore_Interrupt (Interrupt : Interrupt_ID);\n-   --  Set the sigacion for the interrupt to SIG_IGN.\n+   --  Set the sigacion for the interrupt to SIG_IGN\n \n    procedure Unignore_Interrupt (Interrupt : Interrupt_ID);\n    --  Comment needed ???"}, {"sha": "382ccb3e2e5da70897882d3bce6415d920d355ae", "filename": "gcc/ada/s-intman-dummy.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-dummy.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1997-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a NO tasking version of this package.\n+--  This is a NO tasking version of this package\n \n package body System.Interrupt_Management is\n "}, {"sha": "ccd91bfa7c8f16bff36e73edcc82cd8578bdd7a2", "filename": "gcc/ada/s-intman-irix.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-irix.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,8 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---             Copyright (C) 1991-1994, Florida State University            --\n----                     Copyright (C) 1995-2006, AdaCore                     --\n+--                      Copyright (C) 1995-2007, AdaCore                    --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,13 +31,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a SGI Pthread version of this package.\n+--  This is a SGI Pthread version of this package\n \n---  Make a careful study of all signals available under the OS,\n---  to see which need to be reserved, kept always unmasked,\n---  or kept always unmasked.\n---  Be on the lookout for special signals that\n---  may be used by the thread library.\n+--  Make a careful study of all signals available under the OS, to see which\n+--  need to be reserved, kept always unmasked, or kept always unmasked. Be on\n+--  the lookout for special signals that may be used by the thread library.\n \n package body System.Interrupt_Management is\n "}, {"sha": "bf4e004bab9ccc7c528c71fb9b77be899674b0cf", "filename": "gcc/ada/s-intman-vms.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vms.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2006, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a OpenVMS/Alpha version of this package.\n+--  This is a OpenVMS/Alpha version of this package\n \n package body System.Interrupt_Management is\n "}, {"sha": "ff0c8240193f839a2b30d34bb687c567d8ad8785", "filename": "gcc/ada/s-intman-vms.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vms.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1991-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1991-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -67,11 +67,9 @@ package System.Interrupt_Management is\n    --  all systems, but is always reserved when it is defined. If we have the\n    --  convention that ID zero is not used for any \"real\" signals, and SIGRARE\n    --  = 0 when SIGRARE is not one of the locally supported signals, we can\n-   --  write\n-\n+   --  write:\n    --     Reserved (SIGRARE) := true;\n-\n-   --  Then the initialization code will be portable\n+   --  Then the initialization code will be portable.\n \n    Abort_Task_Interrupt : Interrupt_ID;\n    --  The interrupt that is used to implement task abort, if an interrupt is"}, {"sha": "89071e7d1e2c287b3957f99d21d7122be627559d", "filename": "gcc/ada/s-intman-vxworks.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -31,13 +31,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the VxWorks version of this package.\n+--  This is the VxWorks version of this package\n \n---  Make a careful study of all signals available under the OS,\n---  to see which need to be reserved, kept always unmasked,\n---  or kept always unmasked.\n---  Be on the lookout for special signals that\n---  may be used by the thread library.\n+--  Make a careful study of all signals available under the OS, to see which\n+--  need to be reserved, kept always unmasked, or kept always unmasked. Be on\n+--  the lookout for special signals that may be used by the thread library.\n \n package body System.Interrupt_Management is\n \n@@ -62,9 +60,8 @@ package body System.Interrupt_Management is\n \n    function State (Int : Interrupt_ID) return Character;\n    pragma Import (C, State, \"__gnat_get_interrupt_state\");\n-   --  Get interrupt state.  Defined in init.c\n-   --  The input argument is the interrupt number,\n-   --  and the result is one of the following:\n+   --  Get interrupt state. Defined in init.c The input argument is the\n+   --  interrupt number, and the result is one of the following:\n \n    Runtime : constant Character := 'r';\n    Default : constant Character := 's';"}, {"sha": "ec33268452110f18188b48935632eee26ba9747e", "filename": "gcc/ada/s-intman-vxworks.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-intman-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -78,9 +78,7 @@ package System.Interrupt_Management is\n    --  convention that ID zero is not used for any \"real\" signals, and SIGRARE\n    --  = 0 when SIGRARE is not one of the locally supported signals, we can\n    --  write:\n-\n    --     Reserved (SIGRARE) := true;\n-\n    --  and the initialization code will be portable.\n \n    Abort_Task_Interrupt : Signal_ID;"}, {"sha": "c60cae6638514552026be2bb2df55e90b14f306b", "filename": "gcc/ada/s-mastop.ads", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-mastop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-mastop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mastop.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -88,8 +88,17 @@ package System.Machine_State_Operations is\n    --  Some architectures (notably VMS) use a descriptor to describe\n    --  a subprogram address. This function computes the actual starting\n    --  address of the code from Loc.\n-   --  Do not add pragma Inline, see 9116-002.\n+   --\n    --  ??? This function will go away when 'Code_Address is fixed on VMS.\n+   --\n+   --  Do not add pragma Inline to this function: there is a curious\n+   --  interaction between rtsfind and front-end inlining. The exception\n+   --  declaration in s-auxdec calls rtsfind, which forces several other system\n+   --  packages to be compiled. Some of those have a pragma Inline, and we\n+   --  compile the corresponding bodies so that inlining can take place. One\n+   --  of these packages is s-mastop, which depends on s-auxdec, which is still\n+   --  being compiled: we have not seen all the declarations in it yet, so we\n+   --  get confused semantic errors.\n \n    procedure Set_Machine_State (M : Machine_State);\n    --  This routine sets M from the current machine state. It is called"}, {"sha": "843b3b180497d816b9f3e61c82e4ecaf1c88d65b", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2006, Free Software Foundation, Inc.      --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,14 +32,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is Darwin pthreads version of this package.\n+--  This is Darwin pthreads version of this package\n \n---  This package includes all direct interfaces to OS services\n---  that are needed by children of System.\n+--  This package includes all direct interfaces to OS services that are needed\n+--  by children of System.\n \n---  PLEASE DO NOT add any with-clauses to this package\n---  or remove the pragma Elaborate_Body.\n---  It is designed to be a bottom-level (leaf) package.\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Elaborate_Body. It is designed to be a bottom-level (leaf) package.\n \n with Interfaces.C;\n package System.OS_Interface is\n@@ -115,10 +114,10 @@ package System.OS_Interface is\n \n    type Signal_Set is array (Natural range <>) of Signal;\n \n-   Unmasked    : constant Signal_Set :=\n+   Unmasked : constant Signal_Set :=\n      (SIGTTIN, SIGTTOU, SIGSTOP, SIGTSTP);\n \n-   Reserved    : constant Signal_Set :=\n+   Reserved : constant Signal_Set :=\n      (SIGKILL, SIGSTOP);\n \n    type sigset_t is private;\n@@ -174,7 +173,7 @@ package System.OS_Interface is\n    ----------\n \n    Time_Slice_Supported : constant Boolean := True;\n-   --  Indicates wether time slicing is supported.\n+   --  Indicates wether time slicing is supported\n \n    type timespec is private;\n \n@@ -210,7 +209,7 @@ package System.OS_Interface is\n \n    function To_Target_Priority\n      (Prio : System.Any_Priority) return Interfaces.C.int;\n-   --  Maps System.Any_Priority to a POSIX priority.\n+   --  Maps System.Any_Priority to a POSIX priority\n \n    -------------\n    -- Process --"}, {"sha": "ea8f80810b0256fb0b6cee40c2624d88ab017bc4", "filename": "gcc/ada/s-osinte-hpux-dce.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-hpux-dce.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-hpux-dce.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux-dce.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2005, AdaCore                     --\n+--                     Copyright (C) 1995-2007, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -126,7 +126,7 @@ package body System.OS_Interface is\n       return 0;\n    end sigwait;\n \n-   --  DCE_THREADS does not have pthread_kill. Instead, we just ignore it.\n+   --  DCE_THREADS does not have pthread_kill. Instead, we just ignore it\n \n    function pthread_kill (thread : pthread_t; sig : Signal) return int is\n       pragma Unreferenced (thread, sig);"}, {"sha": "dbc8589d44fc10f1d4e4fdc7a36efbfb865ae7cb", "filename": "gcc/ada/s-osinte-hpux-dce.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-hpux-dce.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-hpux-dce.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux-dce.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2007, Free Software Foundation, Inc.      --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -291,9 +291,8 @@ package System.OS_Interface is\n      (how  : int;\n       set  : access sigset_t;\n       oset : access sigset_t) return int;\n-   --  DCE THREADS does not have pthread_sigmask. Instead, it uses\n-   --  sigprocmask to do the signal handling when the thread library is\n-   --  sucked in.\n+   --  DCE THREADS does not have pthread_sigmask. Instead, it uses sigprocmask\n+   --  to do the signal handling when the thread library is sucked in.\n    pragma Import (C, pthread_sigmask, \"sigprocmask\");\n \n    --------------------------\n@@ -302,7 +301,7 @@ package System.OS_Interface is\n \n    function pthread_mutexattr_init\n      (attr : access pthread_mutexattr_t) return int;\n-   --  DCE_THREADS has a nonstandard pthread_mutexattr_init.\n+   --  DCE_THREADS has a nonstandard pthread_mutexattr_init\n \n    function pthread_mutexattr_destroy\n      (attr : access pthread_mutexattr_t) return int;"}, {"sha": "ce4e38cc683cc6cddab567c071464baa43cadcb5", "filename": "gcc/ada/s-osinte-irix.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-irix.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2005, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,14 +31,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the IRIX version of this package.\n+--  This is the IRIX version of this package\n \n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by children of System.\n+--  This package encapsulates all direct interfaces to OS services that are\n+--  needed by children of System.\n \n pragma Polling (Off);\n---  Turn off polling, we do not want ATC polling to take place during\n---  tasking operations. It causes infinite loops and other problems.\n+--  Turn off polling, we do not want ATC polling to take place during tasking\n+--  operations. It causes infinite loops and other problems.\n \n with Interfaces.C; use Interfaces.C;\n "}, {"sha": "5ae8316381234fc20478ec3298cfe5aca0275d13", "filename": "gcc/ada/s-osinte-irix.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osinte-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-irix.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2007, Free Software Foundation, Inc.      --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,7 +119,7 @@ package System.OS_Interface is\n    SIGCKPT    : constant := 33; --  Checkpoint warning\n    SIGRESTART : constant := 34; --  Restart warning\n    SIGUME     : constant := 35; --  Uncorrectable memory error\n-   --  Signals defined for Posix 1003.1c.\n+   --  Signals defined for Posix 1003.1c\n    SIGPTINTR    : constant := 47;\n    SIGPTRESCHED : constant := 48;\n    --  Posix 1003.1b signals"}, {"sha": "ff1c9a31baa92e16d3a8886ffbdb7304fac11d01", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -99,7 +99,7 @@ package body System.OS_Primitives is\n \n    Base_Ticks : aliased LARGE_INTEGER;\n    BTA : constant LIA := Base_Ticks'Access;\n-   --  Holds the Tick count for the base time.\n+   --  Holds the Tick count for the base time\n \n    Base_Monotonic_Ticks : aliased LARGE_INTEGER;\n    BMTA : constant LIA := Base_Monotonic_Ticks'Access;\n@@ -160,8 +160,8 @@ package body System.OS_Primitives is\n \n       --  If we have a shift of more than Max_Shift seconds we resynchonize the\n       --  Clock. This is probably due to a manual Clock adjustment, an DST\n-      --  adjustment or an NTP synchronisation. And we want to adjust the\n-      --  time for this system (non-monotonic) clock.\n+      --  adjustment or an NTP synchronisation. And we want to adjust the time\n+      --  for this system (non-monotonic) clock.\n \n       if abs (Elap_Secs_Sys - Elap_Secs_Tick) > Max_Shift then\n          Get_Base_Time;\n@@ -180,7 +180,7 @@ package body System.OS_Primitives is\n \n    procedure Get_Base_Time is\n \n-      --  The resolution for GetSystemTime is 1 millisecond.\n+      --  The resolution for GetSystemTime is 1 millisecond\n \n       --  The time to get both base times should take less than 1 millisecond.\n       --  Therefore, the elapsed time reported by GetSystemTime between both"}, {"sha": "a2a5c0647e19fca695f2b6e93f5b4e9138d1c01f", "filename": "gcc/ada/s-parame-ae653.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-ae653.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-ae653.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-ae653.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -193,7 +193,7 @@ package System.Parameters is\n    -----------------------\n \n    Max_Task_Image_Length : constant := 32;\n-   --  This constant specifies the maximum length of a task's image.\n+   --  This constant specifies the maximum length of a task's image\n \n    ------------------------------\n    -- Exception Message Length --"}, {"sha": "86bc0282e5151ef7e5e475a7c8a98d11f1c2c640", "filename": "gcc/ada/s-parame-hpux.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-hpux.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -191,7 +191,7 @@ package System.Parameters is\n    -----------------------\n \n    Max_Task_Image_Length : constant := 256;\n-   --  This constant specifies the maximum length of a task's image.\n+   --  This constant specifies the maximum length of a task's image\n \n    ------------------------------\n    -- Exception Message Length --"}, {"sha": "6df2a47aa1238621716f164539c68e174bbc8485", "filename": "gcc/ada/s-parame-vms-alpha.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vms-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vms-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-alpha.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -191,7 +191,7 @@ package System.Parameters is\n    -----------------------\n \n    Max_Task_Image_Length : constant := 256;\n-   --  This constant specifies the maximum length of a task's image.\n+   --  This constant specifies the maximum length of a task's image\n \n    ------------------------------\n    -- Exception Message Length --"}, {"sha": "10332527a6815a7291666b8622e788d2c9b4b6ff", "filename": "gcc/ada/s-parame-vms-ia64.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-ia64.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -191,7 +191,7 @@ package System.Parameters is\n    -----------------------\n \n    Max_Task_Image_Length : constant := 256;\n-   --  This constant specifies the maximum length of a task's image.\n+   --  This constant specifies the maximum length of a task's image\n \n    ------------------------------\n    -- Exception Message Length --"}, {"sha": "6cd0477502363452913ca48ff551d499c2da2426", "filename": "gcc/ada/s-parame-vms-restrict.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vms-restrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vms-restrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-restrict.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -191,7 +191,7 @@ package System.Parameters is\n    -----------------------\n \n    Max_Task_Image_Length : constant := 256;\n-   --  This constant specifies the maximum length of a task's image.\n+   --  This constant specifies the maximum length of a task's image\n \n    ------------------------------\n    -- Exception Message Length --"}, {"sha": "e5152c75ed3ed7594a45ec70786619a12a4586e3", "filename": "gcc/ada/s-parame-vxworks.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1995-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Version used on all VxWorks targets.\n+--  Version used on all VxWorks targets\n \n package body System.Parameters is\n "}, {"sha": "4f7cc2c7fcbb956ab0695f588eef4b24f710e374", "filename": "gcc/ada/s-parame-vxworks.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -193,7 +193,7 @@ package System.Parameters is\n    -----------------------\n \n    Max_Task_Image_Length : constant := 32;\n-   --  This constant specifies the maximum length of a task's image.\n+   --  This constant specifies the maximum length of a task's image\n \n    ------------------------------\n    -- Exception Message Length --"}, {"sha": "20c95bea0c447218a29582efe604657b7c08cee9", "filename": "gcc/ada/s-parame.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-parame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -191,7 +191,7 @@ package System.Parameters is\n    -----------------------\n \n    Max_Task_Image_Length : constant := 256;\n-   --  This constant specifies the maximum length of a task's image.\n+   --  This constant specifies the maximum length of a task's image\n \n    ------------------------------\n    -- Exception Message Length --"}, {"sha": "22d4a3d13f0efb46a2fd589187404373b6bec29e", "filename": "gcc/ada/s-poosiz.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-poosiz.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-poosiz.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-poosiz.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -40,12 +40,11 @@ package body System.Pool_Size is\n    package SSE renames System.Storage_Elements;\n    use type SSE.Storage_Offset;\n \n-   --  Even though these storage pools are typically only used\n-   --  by a single task, if multiple tasks are declared at the\n-   --  same or a more nested scope as the storage pool, there\n-   --  still may be concurrent access. The current implementation\n-   --  of Stack_Bounded_Pool always uses a global lock for protecting\n-   --  access. This should eventually be replaced by an atomic\n+   --  Even though these storage pools are typically only used by a single\n+   --  task, if multiple tasks are declared at the same or a more nested scope\n+   --  as the storage pool, there still may be concurrent access. The current\n+   --  implementation of Stack_Bounded_Pool always uses a global lock for\n+   --  protecting access. This should eventually be replaced by an atomic\n    --  linked list implementation for efficiency reasons.\n \n    package SSL renames System.Soft_Links;\n@@ -58,9 +57,9 @@ package body System.Pool_Size is\n \n    package Variable_Size_Management is\n \n-      --  Embedded pool that manages allocation of variable-size data.\n+      --  Embedded pool that manages allocation of variable-size data\n \n-      --  This pool is used as soon as the Elmt_sizS of the pool object is 0.\n+      --  This pool is used as soon as the Elmt_sizS of the pool object is 0\n \n       --  Allocation is done on the first chunk long enough for the request.\n       --  Deallocation just puts the freed chunk at the beginning of the list."}, {"sha": "47f669ab8ea49f26f7c6de458075a2e29336d2be", "filename": "gcc/ada/s-proinf-irix-athread.ads", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-proinf-irix-athread.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-proinf-irix-athread.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-proinf-irix-athread.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1997-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,20 +31,19 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains the definitions and routines used as parameters\n---  to the run-time system at program startup for the SGI implementation.\n+--  This package contains the definitions and routines used as parameters to\n+--  the run-time system at program startup for the SGI implementation.\n \n package System.Program_Info is\n    pragma Preelaborate;\n \n    function Initial_Sproc_Count return Integer;\n-   --  The number of sproc created at program startup for scheduling\n-   --  threads.\n+   --  The number of sproc created at program startup for scheduling threads\n \n    function Max_Sproc_Count return Integer;\n-   --  The maximum number of sprocs that can be created by the program\n-   --  for servicing threads.  This limit includes both the pre-created\n-   --  sprocs and those explicitly created under program control.\n+   --  The maximum number of sprocs that can be created by the program for\n+   --  servicing threads. This limit includes both the pre-created sprocs and\n+   --  those explicitly created under program control.\n \n    function Sproc_Stack_Size return Integer;\n    --  The size, in bytes, of the sproc's initial stack.\n@@ -56,9 +55,9 @@ package System.Program_Info is\n    --  Task_Info pragma. See s-tasinf.ads for more information.\n \n    function Default_Task_Stack return Integer;\n-   --  The default stack size for each created thread.  This default value\n-   --  can be overriden on a per-task basis by the language-defined\n-   --  Storage_Size pragma.\n+   --  The default stack size for each created thread. This default value can\n+   --  be overriden on a per-task basis by the language-defined Storage_Size\n+   --  pragma.\n \n    function Stack_Guard_Pages return Integer;\n    --  The number of non-writable, guard pages to append to the bottom of"}, {"sha": "8e5e9242721c7ef72c94c6beaad9a2e3bb2934a6", "filename": "gcc/ada/s-stache.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-stache.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-stache.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stache.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---           Copyright (C) 1999-2005 Free Software Foundation, Inc.         --\n+--           Copyright (C) 1999-2007, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,7 +73,7 @@ private\n      (Limit => System.Null_Address,\n       Base  => System.Null_Address,\n       Size  => 0);\n-   --  Use explicit assignment to avoid elaboration code (call to init proc).\n+   --  Use explicit assignment to avoid elaboration code (call to init proc)\n \n    Null_Stack : constant Stack_Access := Null_Stack_Info'Access;\n    --  Stack_Access value that will return a Stack_Base and Stack_Limit"}, {"sha": "9e354ae3015bc0ff1322666b5ac1fce0a90c5838", "filename": "gcc/ada/s-stausa.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-stausa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-stausa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stausa.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -352,7 +352,8 @@ package body System.Stack_Usage is\n \n       Task_Name_Blanks :\n         constant String (1 .. Task_Name_Length - Task_Name_Str'Length) :=\n-          (others => ' ');\n+                                                 (others => ' ');\n+\n    begin\n       Set_Output (Standard_Error);\n \n@@ -362,6 +363,7 @@ package body System.Stack_Usage is\n       end if;\n \n       if Result_Array'Length > 0 then\n+\n          --  Computes the size of the largest strings that will get displayed,\n          --  in order to do correct column alignment.\n "}, {"sha": "4bad233ca2fa3293d6753f9efac9b0e1d1910136", "filename": "gcc/ada/s-tasinf-solaris.adb", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tasinf-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tasinf-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-solaris.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,14 +34,13 @@\n --  This package body contains the routines associated with the implementation\n --  of the Task_Info pragma.\n \n---  This is the Solaris (native) version of this module.\n+--  This is the Solaris (native) version of this module\n \n package body System.Task_Info is\n \n-   function Unbound_Thread_Attributes return Thread_Attributes is\n-   begin\n-      return (False, False);\n-   end Unbound_Thread_Attributes;\n+   -----------------------------\n+   -- Bound_Thread_Attributes --\n+   -----------------------------\n \n    function Bound_Thread_Attributes return Thread_Attributes is\n    begin\n@@ -54,10 +53,9 @@ package body System.Task_Info is\n       return (True, True, CPU);\n    end Bound_Thread_Attributes;\n \n-   function New_Unbound_Thread_Attributes return Task_Info_Type is\n-   begin\n-      return new Thread_Attributes'(False, False);\n-   end New_Unbound_Thread_Attributes;\n+   ---------------------------------\n+   -- New_Bound_Thread_Attributes --\n+   ---------------------------------\n \n    function New_Bound_Thread_Attributes return Task_Info_Type is\n    begin\n@@ -70,4 +68,22 @@ package body System.Task_Info is\n       return new Thread_Attributes'(True, True, CPU);\n    end New_Bound_Thread_Attributes;\n \n+   -----------------------------------\n+   -- New_Unbound_Thread_Attributes --\n+   -----------------------------------\n+\n+   function New_Unbound_Thread_Attributes return Task_Info_Type is\n+   begin\n+      return new Thread_Attributes'(False, False);\n+   end New_Unbound_Thread_Attributes;\n+\n+   -------------------------------\n+   -- Unbound_Thread_Attributes --\n+   -------------------------------\n+\n+   function Unbound_Thread_Attributes return Thread_Attributes is\n+   begin\n+      return (False, False);\n+   end Unbound_Thread_Attributes;\n+\n end System.Task_Info;"}, {"sha": "bebecd213df299b6edc33961467a5e3b250c4449", "filename": "gcc/ada/s-tasinf-solaris.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tasinf-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tasinf-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-solaris.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,7 +41,7 @@\n --  This unit may be used directly from an application program by providing\n --  an appropriate WITH, and the interface can be expected to remain stable.\n \n---  This is the Solaris (native) version of this module.\n+--  This is the Solaris (native) version of this module\n \n with System.OS_Interface;\n \n@@ -84,7 +84,7 @@ package System.Task_Info is\n \n    --  The Task_Info pragma appears within a task definition (compare the\n    --  definition and implementation of pragma Priority). If no such pragma\n-   --  appears, then the value Task_Info_Unspecified is passed. If a pragma\n+   --  appears, then the value Unspecified_Task_Info is passed. If a pragma\n    --  is present, then it supplies an alternative value. If the argument of\n    --  the pragma is a discriminant reference, then the value can be set on\n    --  a task by task basis by supplying the appropriate discriminant value."}, {"sha": "9993db37bdab624e220cc41e5cfc79e8535255d9", "filename": "gcc/ada/s-tasinf-tru64.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tasinf-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tasinf-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-tru64.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                           (Compiler Interface)                           --\n --                                                                          --\n---         Copyright (C) 1998-2005 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1998-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,7 +42,7 @@\n --  This unit may be used directly from an application program by providing\n --  an appropriate WITH, and the interface can be expected to remain stable.\n \n---  This is a DEC Unix 4.0d version of this package.\n+--  This is a DEC Unix 4.0d version of this package\n \n package System.Task_Info is\n    pragma Preelaborate;\n@@ -64,7 +64,7 @@ package System.Task_Info is\n \n    --  The Task_Info pragma appears within a task definition (compare the\n    --  definition and implementation of pragma Priority). If no such pragma\n-   --  appears, then the value Task_Info_Unspecified is passed. If a pragma\n+   --  appears, then the value Unspecified_Task_Info is passed. If a pragma\n    --  is present, then it supplies an alternative value. If the argument of\n    --  the pragma is a discriminant reference, then the value can be set on\n    --  a task by task basis by supplying the appropriate discriminant value."}, {"sha": "35a12ce4de9c929908b53fb9090efed27b012513", "filename": "gcc/ada/s-tasinf.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tasinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tasinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,7 +61,7 @@ package System.Task_Info is\n \n    --  The Task_Info pragma appears within a task definition (compare the\n    --  definition and implementation of pragma Priority). If no such pragma\n-   --  appears, then the value Task_Info_Unspecified is passed. If a pragma\n+   --  appears, then the value Unspecified_Task_Info is passed. If a pragma\n    --  is present, then it supplies an alternative value. If the argument of\n    --  the pragma is a discriminant reference, then the value can be set on\n    --  a task by task basis by supplying the appropriate discriminant value."}, {"sha": "8b3c204f8fb395aa1e51e6867c99353cf579f319", "filename": "gcc/ada/s-tfsetr-vxworks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tfsetr-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fs-tfsetr-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tfsetr-vxworks.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---           Copyright (C) 2001-2005 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2001-2007, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,11 +31,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This version is for VxWorks targets.\n+--  This version is for VxWorks targets\n \n---  Trace information is sent to WindView using the wvEvent function.\n+--  Trace information is sent to WindView using the wvEvent function\n \n---  Note that wvEvent is from the VxWorks API.\n+--  Note that wvEvent is from the VxWorks API\n \n --  When adding a new event, just give an Id to then event, and then modify\n --  the WindView events database."}, {"sha": "fe23600ee284eba02929369dff1890dcb556ef04", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 116, "deletions": 45, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -571,7 +571,7 @@ package body Scng is\n \n                if Warn_On_Obsolescent_Feature then\n                   Error_Msg_S\n-                    (\"use of \"\":\"\" is an obsolescent feature ('R'M 'J.2(3))?\");\n+                    (\"use of \"\":\"\" is an obsolescent feature (RM J.2(3))?\");\n                   Error_Msg_S\n                     (\"\\use \"\"'#\"\" instead?\");\n                end if;\n@@ -1178,7 +1178,10 @@ package body Scng is\n          --  Horizontal tab, just skip past it\n \n          when HT =>\n-            if Style_Check then Style.Check_HT; end if;\n+            if Style_Check then\n+               Style.Check_HT;\n+            end if;\n+\n             Scan_Ptr := Scan_Ptr + 1;\n \n          --  End of file character, treated as an end of file only if it is\n@@ -1187,7 +1190,11 @@ package body Scng is\n          when EOF =>\n             if Scan_Ptr = Source_Last (Current_Source_File) then\n                Check_End_Of_Line;\n-               if Style_Check then Style.Check_EOF; end if;\n+\n+               if Style_Check then\n+                  Style.Check_EOF;\n+               end if;\n+\n                Token := Tok_EOF;\n                return;\n             else\n@@ -1237,7 +1244,11 @@ package body Scng is\n \n             if Double_Char_Token ('=') then\n                Token := Tok_Colon_Equal;\n-               if Style_Check then Style.Check_Colon_Equal; end if;\n+\n+               if Style_Check then\n+                  Style.Check_Colon_Equal;\n+               end if;\n+\n                return;\n \n             elsif Source (Scan_Ptr + 1) = '-'\n@@ -1251,7 +1262,11 @@ package body Scng is\n             else\n                Scan_Ptr := Scan_Ptr + 1;\n                Token := Tok_Colon;\n-               if Style_Check then Style.Check_Colon; end if;\n+\n+               if Style_Check then\n+                  Style.Check_Colon;\n+               end if;\n+\n                return;\n             end if;\n \n@@ -1261,7 +1276,11 @@ package body Scng is\n             Accumulate_Checksum ('(');\n             Scan_Ptr := Scan_Ptr + 1;\n             Token := Tok_Left_Paren;\n-            if Style_Check then Style.Check_Left_Paren; end if;\n+\n+            if Style_Check then\n+               Style.Check_Left_Paren;\n+            end if;\n+\n             return;\n \n          --  Left bracket\n@@ -1291,7 +1310,11 @@ package body Scng is\n             Accumulate_Checksum (',');\n             Scan_Ptr := Scan_Ptr + 1;\n             Token := Tok_Comma;\n-            if Style_Check then Style.Check_Comma; end if;\n+\n+            if Style_Check then\n+               Style.Check_Comma;\n+            end if;\n+\n             return;\n \n          --  Dot, which is either an isolated period, or part of a double dot\n@@ -1303,7 +1326,11 @@ package body Scng is\n \n             if Double_Char_Token ('.') then\n                Token := Tok_Dot_Dot;\n-               if Style_Check then Style.Check_Dot_Dot; end if;\n+\n+               if Style_Check then\n+                  Style.Check_Dot_Dot;\n+               end if;\n+\n                return;\n \n             elsif Source (Scan_Ptr + 1) in '0' .. '9' then\n@@ -1324,7 +1351,11 @@ package body Scng is\n \n             if Double_Char_Token ('>') then\n                Token := Tok_Arrow;\n-               if Style_Check then Style.Check_Arrow; end if;\n+\n+               if Style_Check then\n+                  Style.Check_Arrow;\n+               end if;\n+\n                return;\n \n             elsif Source (Scan_Ptr + 1) = '=' then\n@@ -1369,7 +1400,11 @@ package body Scng is\n \n             elsif Double_Char_Token ('>') then\n                Token := Tok_Box;\n-               if Style_Check then Style.Check_Box; end if;\n+\n+               if Style_Check then\n+                  Style.Check_Box;\n+               end if;\n+\n                return;\n \n             elsif Double_Char_Token ('<') then\n@@ -1401,7 +1436,10 @@ package body Scng is\n             --  Comment\n \n             else -- Source (Scan_Ptr + 1) = '-' then\n-               if Style_Check then Style.Check_Comment; end if;\n+               if Style_Check then\n+                  Style.Check_Comment;\n+               end if;\n+\n                Scan_Ptr := Scan_Ptr + 2;\n \n                --  If we are in preprocessor mode with Replace_In_Comments set,\n@@ -1447,7 +1485,10 @@ package body Scng is\n                   --  Keep going if horizontal tab\n \n                   if Source (Scan_Ptr) = HT then\n-                     if Style_Check then Style.Check_HT; end if;\n+                     if Style_Check then\n+                        Style.Check_HT;\n+                     end if;\n+\n                      Scan_Ptr := Scan_Ptr + 1;\n \n                   --  Terminate scan of comment if line terminator\n@@ -1538,7 +1579,7 @@ package body Scng is\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_S\n-                 (\"use of \"\"'%\"\" is an obsolescent feature ('R'M 'J.2(4))?\");\n+                 (\"use of \"\"'%\"\" is an obsolescent feature (RM J.2(4))?\");\n                Error_Msg_S\n                  (\"\\use \"\"\"\"\"\" instead?\");\n             end if;\n@@ -1581,7 +1622,11 @@ package body Scng is\n                or else Prev_Token in Token_Class_Literal\n             then\n                Token := Tok_Apostrophe;\n-               if Style_Check then Style.Check_Apostrophe; end if;\n+\n+               if Style_Check then\n+                  Style.Check_Apostrophe;\n+               end if;\n+\n                return;\n \n             --  Otherwise the apostrophe starts a character literal\n@@ -1686,7 +1731,11 @@ package body Scng is\n             Accumulate_Checksum (')');\n             Scan_Ptr := Scan_Ptr + 1;\n             Token := Tok_Right_Paren;\n-            if Style_Check then Style.Check_Right_Paren; end if;\n+\n+            if Style_Check then\n+               Style.Check_Right_Paren;\n+            end if;\n+\n             return;\n \n          --  Right bracket or right brace, treated as right paren\n@@ -1717,7 +1766,11 @@ package body Scng is\n             Accumulate_Checksum (';');\n             Scan_Ptr := Scan_Ptr + 1;\n             Token := Tok_Semicolon;\n-            if Style_Check then Style.Check_Semicolon; end if;\n+\n+            if Style_Check then\n+               Style.Check_Semicolon;\n+            end if;\n+\n             return;\n \n          --  Vertical bar\n@@ -1736,7 +1789,11 @@ package body Scng is\n             else\n                Scan_Ptr := Scan_Ptr + 1;\n                Token := Tok_Vertical_Bar;\n-               if Style_Check then Style.Check_Vertical_Bar; end if;\n+\n+               if Style_Check then\n+                  Style.Check_Vertical_Bar;\n+               end if;\n+\n                return;\n             end if;\n          end Vertical_Bar_Case;\n@@ -1749,7 +1806,7 @@ package body Scng is\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_S\n-                 (\"use of \"\"'!\"\" is an obsolescent feature ('R'M 'J.2(2))?\");\n+                 (\"use of \"\"'!\"\" is an obsolescent feature (RM J.2(2))?\");\n                Error_Msg_S\n                  (\"\\use \"\"'|\"\" instead?\");\n             end if;\n@@ -2321,32 +2378,43 @@ package body Scng is\n          if Is_Keyword_Name (Token_Name) then\n             Token := Token_Type'Val (Get_Name_Table_Byte (Token_Name));\n \n-            --  Deal with possible style check for non-lower case keyword, but\n-            --  we don't treat ACCESS, DELTA, DIGITS, RANGE as keywords for\n-            --  this purpose if they appear as attribute designators. Actually\n-            --  we only check the first character for speed.\n-\n-            --  Ada 2005 (AI-284): Do not apply the style check in case of\n-            --  \"pragma Interface\"\n-\n-            --  Ada 2005 (AI-340): Do not apply the style check in case of\n-            --  MOD attribute.\n-\n-            if Style_Check\n-              and then Source (Token_Ptr) <= 'Z'\n-              and then (Prev_Token /= Tok_Apostrophe\n-                          or else\n-                            (Token /= Tok_Access and then\n-                             Token /= Tok_Delta  and then\n-                             Token /= Tok_Digits and then\n-                             Token /= Tok_Mod    and then\n-                             Token /= Tok_Range))\n-              and then (Token /= Tok_Interface\n-                          or else\n-                            (Token = Tok_Interface\n-                               and then Prev_Token /= Tok_Pragma))\n-            then\n-               Style.Non_Lower_Case_Keyword;\n+            --  Keyword style checks\n+\n+            if Style_Check then\n+\n+               --  Deal with possible style check for non-lower case keyword,\n+               --  but we don't treat ACCESS, DELTA, DIGITS, RANGE as keywords\n+               --  for this purpose if they appear as attribute designators.\n+               --  Actually we only check the first character for speed.\n+\n+               --  Ada 2005 (AI-284): Do not apply the style check in case of\n+               --  \"pragma Interface\"\n+\n+               --  Ada 2005 (AI-340): Do not apply the style check in case of\n+               --  MOD attribute.\n+\n+               if Source (Token_Ptr) <= 'Z'\n+                 and then (Prev_Token /= Tok_Apostrophe\n+                           or else\n+                             (Token /= Tok_Access and then\n+                              Token /= Tok_Delta  and then\n+                              Token /= Tok_Digits and then\n+                              Token /= Tok_Mod    and then\n+                              Token /= Tok_Range))\n+                       and then (Token /= Tok_Interface\n+                                  or else\n+                                    (Token = Tok_Interface\n+                                      and then Prev_Token /= Tok_Pragma))\n+               then\n+                  Style.Non_Lower_Case_Keyword;\n+               end if;\n+\n+               if (Token = Tok_Then and then Prev_Token /= Tok_And)\n+                    or else\n+                  (Token = Tok_Else and then Prev_Token /= Tok_Or)\n+               then\n+                  Style.Check_Separate_Stmt_Lines;\n+               end if;\n             end if;\n \n             --  We must reset Token_Name since this is not an identifier and\n@@ -2470,7 +2538,10 @@ package body Scng is\n          --  Outer loop keeps going only if a horizontal tab follows\n \n          if Source (Scan_Ptr) = HT then\n-            if Style_Check then Style.Check_HT; end if;\n+            if Style_Check then\n+               Style.Check_HT;\n+            end if;\n+\n             Scan_Ptr := Scan_Ptr + 1;\n             Start_Column := (Start_Column / 8) * 8 + 8;\n          else"}, {"sha": "7dab13496c110c33fd1e4edc3329fb7cb6b08dac", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 163, "deletions": 100, "changes": 263, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -53,6 +53,8 @@ with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n with Uintp;    use Uintp;\n \n+with Unchecked_Deallocation;\n+\n pragma Warnings (Off, Sem_Util);\n --  Suppress warnings of unused with for Sem_Util (used only in asserts)\n \n@@ -448,8 +450,8 @@ package body Sem is\n          when N_Requeue_Statement =>\n             Analyze_Requeue (N);\n \n-         when N_Return_Statement =>\n-            Analyze_Return_Statement (N);\n+         when N_Simple_Return_Statement =>\n+            Analyze_Simple_Return_Statement (N);\n \n          when N_Selected_Component =>\n             Find_Selected_Component (N);\n@@ -724,65 +726,73 @@ package body Sem is\n       From : Entity_Id;\n       To   : Entity_Id)\n    is\n+      Found : Boolean;\n+\n+      procedure Search_Stack\n+        (Top   : Suppress_Stack_Entry_Ptr;\n+         Found : out Boolean);\n+      --  Search given suppress stack for matching entry for entity. If found\n+      --  then set Checks_May_Be_Suppressed on To, and push an appropriate\n+      --  entry for To onto the local suppress stack.\n+\n+      ------------------\n+      -- Search_Stack --\n+      ------------------\n+\n+      procedure Search_Stack\n+        (Top   : Suppress_Stack_Entry_Ptr;\n+         Found : out Boolean)\n+      is\n+         Ptr : Suppress_Stack_Entry_Ptr;\n+\n+      begin\n+         Ptr := Top;\n+         while Ptr /= null loop\n+            if Ptr.Entity = From\n+              and then (Ptr.Check = All_Checks or else Ptr.Check = C)\n+            then\n+               if Ptr.Suppress then\n+                  Set_Checks_May_Be_Suppressed (To, True);\n+                  Push_Local_Suppress_Stack_Entry\n+                    (Entity   => To,\n+                     Check    => C,\n+                     Suppress => True);\n+                  Found := True;\n+                  return;\n+               end if;\n+            end if;\n+\n+            Ptr := Ptr.Prev;\n+         end loop;\n+\n+         Found := False;\n+         return;\n+      end Search_Stack;\n+\n+   --  Start of processing for Copy_Suppress_Status\n+\n    begin\n       if not Checks_May_Be_Suppressed (From) then\n          return;\n       end if;\n \n-      --  First search the local entity suppress table, we search this in\n+      --  First search the local entity suppress stack, we search this in\n       --  reverse order so that we get the innermost entry that applies to\n       --  this case if there are nested entries. Note that for the purpose\n       --  of this procedure we are ONLY looking for entries corresponding\n       --  to a two-argument Suppress, where the second argument matches From.\n \n-      for J in\n-        reverse Local_Entity_Suppress.First .. Local_Entity_Suppress.Last\n-      loop\n-         declare\n-            R : Entity_Check_Suppress_Record\n-                  renames Local_Entity_Suppress.Table (J);\n+      Search_Stack (Global_Suppress_Stack_Top, Found);\n \n-         begin\n-            if R.Entity = From\n-              and then (R.Check = All_Checks or else R.Check = C)\n-            then\n-               if R.Suppress then\n-                  Set_Checks_May_Be_Suppressed (To, True);\n-                  Local_Entity_Suppress.Append\n-                    ((Entity   => To,\n-                      Check    => C,\n-                      Suppress => True));\n-                  return;\n-               end if;\n-            end if;\n-         end;\n-      end loop;\n+      if Found then\n+         return;\n+      end if;\n \n       --  Now search the global entity suppress table for a matching entry\n       --  We also search this in reverse order so that if there are multiple\n       --  pragmas for the same entity, the last one applies.\n \n-      for J in\n-        reverse Global_Entity_Suppress.First .. Global_Entity_Suppress.Last\n-      loop\n-         declare\n-            R : Entity_Check_Suppress_Record\n-                 renames Global_Entity_Suppress.Table (J);\n-\n-         begin\n-            if R.Entity = From\n-              and then (R.Check = All_Checks or else R.Check = C)\n-            then\n-               if R.Suppress then\n-                  Set_Checks_May_Be_Suppressed (To, True);\n-                  Local_Entity_Suppress.Append\n-                    ((Entity   => To,\n-                      Check    => C,\n-                      Suppress => True));\n-               end if;\n-            end if;\n-         end;\n-      end loop;\n+      Search_Stack (Local_Suppress_Stack_Top, Found);\n    end Copy_Suppress_Status;\n \n    -------------------------\n@@ -812,29 +822,26 @@ package body Sem is\n    -----------------------\n \n    function Explicit_Suppress (E : Entity_Id; C : Check_Id) return Boolean is\n+      Ptr : Suppress_Stack_Entry_Ptr;\n+\n    begin\n       if not Checks_May_Be_Suppressed (E) then\n          return False;\n \n       else\n-         for J in\n-           reverse Global_Entity_Suppress.First .. Global_Entity_Suppress.Last\n-         loop\n-            declare\n-               R : Entity_Check_Suppress_Record\n-                     renames Global_Entity_Suppress.Table (J);\n-\n-            begin\n-               if R.Entity = E\n-                 and then (R.Check = All_Checks or else R.Check = C)\n-               then\n-                  return R.Suppress;\n-               end if;\n-            end;\n-         end loop;\n+         Ptr := Global_Suppress_Stack_Top;\n+         while Ptr /= null loop\n+            if Ptr.Entity = E\n+              and then (Ptr.Check = All_Checks or else Ptr.Check = C)\n+            then\n+               return Ptr.Suppress;\n+            end if;\n \n-         return False;\n+            Ptr := Ptr.Prev;\n+         end loop;\n       end if;\n+\n+      return False;\n    end Explicit_Suppress;\n \n    -----------------------------\n@@ -880,9 +887,26 @@ package body Sem is\n    ----------------\n \n    procedure Initialize is\n+      Next : Suppress_Stack_Entry_Ptr;\n+\n+      procedure Free is new Unchecked_Deallocation\n+        (Suppress_Stack_Entry, Suppress_Stack_Entry_Ptr);\n+\n    begin\n-      Local_Entity_Suppress.Init;\n-      Global_Entity_Suppress.Init;\n+      --  Free any global suppress stack entries from a previous invocation\n+      --  of the compiler (in the normal case this loop does nothing).\n+\n+      while Suppress_Stack_Entries /= null loop\n+         Next := Global_Suppress_Stack_Top.Next;\n+         Free (Suppress_Stack_Entries);\n+         Suppress_Stack_Entries := Next;\n+      end loop;\n+\n+      Local_Suppress_Stack_Top := null;\n+      Global_Suppress_Stack_Top := null;\n+\n+      --  Clear scope stack, and reset global variables\n+\n       Scope_Stack.Init;\n       Unloaded_Subunits := False;\n    end Initialize;\n@@ -1136,53 +1160,52 @@ package body Sem is\n    -------------------------\n \n    function Is_Check_Suppressed (E : Entity_Id; C : Check_Id) return Boolean is\n-   begin\n-      --  First search the local entity suppress table, we search this in\n-      --  reverse order so that we get the innermost entry that applies to\n-      --  this case if there are nested entries.\n \n-      for J in\n-        reverse Local_Entity_Suppress.First .. Local_Entity_Suppress.Last\n-      loop\n-         declare\n-            R : Entity_Check_Suppress_Record\n-                  renames Local_Entity_Suppress.Table (J);\n+      Ptr : Suppress_Stack_Entry_Ptr;\n \n-         begin\n-            if (R.Entity = Empty or else R.Entity = E)\n-              and then (R.Check = All_Checks or else R.Check = C)\n-            then\n-               return R.Suppress;\n-            end if;\n-         end;\n+   begin\n+      --  First search the local entity suppress stack, we search this from the\n+      --  top of the stack down, so that we get the innermost entry that\n+      --  applies to this case if there are nested entries.\n+\n+      Ptr := Local_Suppress_Stack_Top;\n+      while Ptr /= null loop\n+         if (Ptr.Entity = Empty or else Ptr.Entity = E)\n+           and then (Ptr.Check = All_Checks or else Ptr.Check = C)\n+         then\n+            return Ptr.Suppress;\n+         end if;\n+\n+         Ptr := Ptr.Prev;\n       end loop;\n \n       --  Now search the global entity suppress table for a matching entry\n-      --  We also search this in reverse order so that if there are multiple\n+      --  We also search this from the top down so that if there are multiple\n       --  pragmas for the same entity, the last one applies (not clear what\n       --  or whether the RM specifies this handling, but it seems reasonable).\n \n-      for J in\n-        reverse Global_Entity_Suppress.First .. Global_Entity_Suppress.Last\n-      loop\n-         declare\n-            R : Entity_Check_Suppress_Record\n-                  renames Global_Entity_Suppress.Table (J);\n+      Ptr := Global_Suppress_Stack_Top;\n+      while Ptr /= null loop\n+         if (Ptr.Entity = Empty or else Ptr.Entity = E)\n+           and then (Ptr.Check = All_Checks or else Ptr.Check = C)\n+         then\n+            return Ptr.Suppress;\n+         end if;\n \n-         begin\n-            if R.Entity = E\n-              and then (R.Check = All_Checks or else R.Check = C)\n-            then\n-               return R.Suppress;\n-            end if;\n-         end;\n+         Ptr := Ptr.Prev;\n       end loop;\n \n       --  If we did not find a matching entry, then use the normal scope\n       --  suppress value after all (actually this will be the global setting\n-      --  since it clearly was not overridden at any point)\n+      --  since it clearly was not overridden at any point). For a predefined\n+      --  check, we test the specific flag. For a user defined check, we check\n+      --  the All_Checks flag.\n \n-      return Scope_Suppress (C);\n+      if C in Predefined_Check_Id then\n+         return Scope_Suppress (C);\n+      else\n+         return Scope_Suppress (All_Checks);\n+      end if;\n    end Is_Check_Suppressed;\n \n    ----------\n@@ -1191,14 +1214,54 @@ package body Sem is\n \n    procedure Lock is\n    begin\n-      Local_Entity_Suppress.Locked := True;\n-      Global_Entity_Suppress.Locked := True;\n       Scope_Stack.Locked := True;\n-      Local_Entity_Suppress.Release;\n-      Global_Entity_Suppress.Release;\n       Scope_Stack.Release;\n    end Lock;\n \n+   --------------------------------------\n+   -- Push_Global_Suppress_Stack_Entry --\n+   --------------------------------------\n+\n+   procedure Push_Global_Suppress_Stack_Entry\n+     (Entity   : Entity_Id;\n+      Check    : Check_Id;\n+      Suppress : Boolean)\n+   is\n+   begin\n+      Global_Suppress_Stack_Top :=\n+        new Suppress_Stack_Entry'\n+          (Entity   => Entity,\n+           Check    => Check,\n+           Suppress => Suppress,\n+           Prev     => Global_Suppress_Stack_Top,\n+           Next     => Suppress_Stack_Entries);\n+      Suppress_Stack_Entries := Global_Suppress_Stack_Top;\n+      return;\n+\n+   end Push_Global_Suppress_Stack_Entry;\n+\n+   -------------------------------------\n+   -- Push_Local_Suppress_Stack_Entry --\n+   -------------------------------------\n+\n+   procedure Push_Local_Suppress_Stack_Entry\n+     (Entity   : Entity_Id;\n+      Check    : Check_Id;\n+      Suppress : Boolean)\n+   is\n+   begin\n+      Local_Suppress_Stack_Top :=\n+        new Suppress_Stack_Entry'\n+          (Entity   => Entity,\n+           Check    => Check,\n+           Suppress => Suppress,\n+           Prev     => Local_Suppress_Stack_Top,\n+           Next     => Suppress_Stack_Entries);\n+      Suppress_Stack_Entries := Local_Suppress_Stack_Top;\n+\n+      return;\n+   end Push_Local_Suppress_Stack_Entry;\n+\n    ---------------\n    -- Semantics --\n    ---------------"}, {"sha": "241ea5aab4f6ae1ed3cd65d0000e96e7d2d43b79", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 134, "deletions": 104, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -211,26 +211,27 @@ package Sem is\n    -----------------------------\n \n    Full_Analysis : Boolean := True;\n-   --  Switch to indicate whether we are doing a full analysis or a\n-   --  pre-analysis. In normal analysis mode (Analysis-Expansion for\n-   --  instructions or declarations) or (Analysis-Resolution-Expansion for\n-   --  expressions) this flag is set. Note that if we are not generating\n-   --  code the expansion phase merely sets the Analyzed flag to True in\n-   --  this case. If we are in Pre-Analysis mode (see above) this flag is\n-   --  set to False then the expansion phase is skipped.\n-   --  When this flag is False the flag Expander_Active is also False\n-   --  (the Expander_Activer flag defined in the spec of package Expander\n-   --  tells you whether expansion is currently enabled).\n-   --  You should really regard this as a read only flag.\n+   --  Switch to indicate if we are doing a full analysis or a pre-analysis.\n+   --  In normal analysis mode (Analysis-Expansion for instructions or\n+   --  declarations) or (Analysis-Resolution-Expansion for expressions) this\n+   --  flag is set. Note that if we are not generating code the expansion phase\n+   --  merely sets the Analyzed flag to True in this case. If we are in\n+   --  Pre-Analysis mode (see above) this flag is set to False then the\n+   --  expansion phase is skipped.\n+   --\n+   --  When this flag is False the flag Expander_Active is also False (the\n+   --  Expander_Activer flag defined in the spec of package Expander tells you\n+   --  whether expansion is currently enabled). You should really regard this\n+   --  as a read only flag.\n \n    In_Default_Expression : Boolean := False;\n    --  Switch to indicate that we are in a default expression, as described\n    --  above. Note that this must be recursively saved on a Semantics call\n-   --  since it is possible for the analysis of an expression to result in\n-   --  a recursive call (e.g. to get the entity for System.Address as part\n-   --  of the processing of an Address attribute reference).\n-   --  When this switch is True then Full_Analysis above must be False.\n-   --  You should really regard this as a read only flag.\n+   --  since it is possible for the analysis of an expression to result in a\n+   --  recursive call (e.g. to get the entity for System.Address as part of the\n+   --  processing of an Address attribute reference). When this switch is True\n+   --  then Full_Analysis above must be False. You should really regard this as\n+   --  a read only flag.\n \n    In_Deleted_Code : Boolean := False;\n    --  If the condition in an if-statement is statically known, the branch\n@@ -259,6 +260,121 @@ package Sem is\n    --  about unused variables, since these warnings are unreliable in this\n    --  case. We could perhaps do a more accurate job and retain some of the\n    --  warnings, but it is quite a tricky job. See test 4323-002.\n+   --  Should not reference TN's in the source comments ???\n+\n+   -----------------------------------\n+   -- Handling of Check Suppression --\n+   -----------------------------------\n+\n+   --  There are two kinds of suppress checks: scope based suppress checks,\n+   --  and entity based suppress checks.\n+\n+   --  Scope based suppress checks for the predefined checks (from initial\n+   --  command line arguments, or from Suppress pragmas not including an entity\n+   --  entity name) are recorded in the Sem.Supress variable, and all that is\n+   --  necessary is to save the state of this variable on scope entry, and\n+   --  restore it on scope exit. This mechanism allows for fast checking of\n+   --  the scope suppress state without needing complex data structures.\n+\n+   --  Entity based checks, from Suppress/Unsuppress pragmas giving an\n+   --  Entity_Id and scope based checks for non-predefined checks (introduced\n+   --  using pragma Check_Name), are handled as follows. If a suppress or\n+   --  unsuppress pragma is encountered for a given entity, then the flag\n+   --  Checks_May_Be_Suppressed is set in the entity and an entry is made in\n+   --  either the Local_Entity_Suppress stack (case of pragma that appears in\n+   --  other than a package spec), or in the Global_Entity_Suppress stack (case\n+   --  of pragma that appears in a package spec, which is by the rule of RM\n+   --  11.5(7) applicable throughout the life of the entity). Similarly, a\n+   --  Suppress/Unsuppress pragma for a non-predefined check which does not\n+   --  specify an entity is also stored in one of these stacks.\n+\n+   --  If the Checks_May_Be_Suppressed flag is set in an entity then the\n+   --  procedure is to search first the local and then the global suppress\n+   --  stacks (we search these in reverse order, top element first). The only\n+   --  other point is that we have to make sure that we have proper nested\n+   --  interaction between such specific pragmas and locally applied general\n+   --  pragmas applying to all entities. This is achieved by including in the\n+   --  Local_Entity_Suppress table dummy entries with an empty Entity field\n+   --  that are applicable to all entities. A similar search is needed for any\n+   --  non-predefined check even if no specific entity is involved.\n+\n+   Scope_Suppress : Suppress_Array := Suppress_Options;\n+   --  This array contains the current scope based settings of the suppress\n+   --  switches. It is initialized from the options as shown, and then modified\n+   --  by pragma Suppress. On entry to each scope, the current setting is saved\n+   --  the scope stack, and then restored on exit from the scope. This record\n+   --  may be rapidly checked to determine the current status of a check if\n+   --  no specific entity is involved or if the specific entity involved is\n+   --  one for which no specific Suppress/Unsuppress pragma has been set (as\n+   --  indicated by the Checks_May_Be_Suppressed flag being set).\n+\n+   --  This scheme is a little complex, but serves the purpose of enabling\n+   --  a very rapid check in the common case where no entity specific pragma\n+   --  applies, and gives the right result when such pragmas are used even\n+   --  in complex cases of nested Suppress and Unsuppress pragmas.\n+\n+   --  The Local_Entity_Suppress and Global_Entity_Suppress stacks are handled\n+   --  using dynamic allocation and linked lists. We do not often use this\n+   --  approach in the compiler (preferring to use extensible tables instead).\n+   --  The reason we do it here is that scope stack entries save a pointer to\n+   --  the current local stack top, which is also saved and restored on scope\n+   --  exit. Furthermore for processing of generics we save pointers to the\n+   --  top of the stack, so that the local stack is actually a tree of stacks\n+   --  rather than a single stack, a structure that is easy to represent using\n+   --  linked lists, but impossible to represent using a single table. Note\n+   --  that because of the generic issue, we never release entries in these\n+   --  stacks, but that's no big deal, since we are unlikely to have a huge\n+   --  number of Suppress/Unsuppress entries in a single compilation.\n+\n+   type Suppress_Stack_Entry;\n+   type Suppress_Stack_Entry_Ptr is access all Suppress_Stack_Entry;\n+\n+   type Suppress_Stack_Entry is record\n+      Entity : Entity_Id;\n+      --  Entity to which the check applies, or Empty for a check that has\n+      --  no entity name (and thus applies to all entities).\n+\n+      Check : Check_Id;\n+      --  Check which is set (can be All_Checks for the All_Checks case)\n+\n+      Suppress : Boolean;\n+      --  Set True for Suppress, and False for Unsuppress\n+\n+      Prev : Suppress_Stack_Entry_Ptr;\n+      --  Pointer to previous entry on stack\n+\n+      Next : Suppress_Stack_Entry_Ptr;\n+      --  All allocated Suppress_Stack_Entry records are chained together in\n+      --  a linked list whose head is Suppress_Stack_Entries, and the Next\n+      --  field is used as a forward pointer (null ends the list). This is\n+      --  used to free all entries in Sem.Init (which will be important if\n+      --  we ever setup the compiler to be reused).\n+   end record;\n+\n+   Suppress_Stack_Entries : Suppress_Stack_Entry_Ptr := null;\n+   --  Pointer to linked list of records (see comments for Next above)\n+\n+   Local_Suppress_Stack_Top : Suppress_Stack_Entry_Ptr;\n+   --  Pointer to top element of local suppress stack. This is the entry that\n+   --  is saved and restored in the scope stack, and also saved for generic\n+   --  body expansion.\n+\n+   Global_Suppress_Stack_Top : Suppress_Stack_Entry_Ptr;\n+   --  Pointer to top element of global suppress stack\n+\n+   procedure Push_Local_Suppress_Stack_Entry\n+     (Entity   : Entity_Id;\n+      Check    : Check_Id;\n+      Suppress : Boolean);\n+   --  Push a new entry on to the top of the local suppress stack, updating\n+   --  the value in Local_Suppress_Stack_Top;\n+\n+   procedure Push_Global_Suppress_Stack_Entry\n+     (Entity   : Entity_Id;\n+      Check    : Check_Id;\n+      Suppress : Boolean);\n+   --  Push a new entry on to the top of the global suppress stack, updating\n+   --  the value in Global_Suppress_Stack_Top;\n \n    -----------------\n    -- Scope Stack --\n@@ -324,8 +440,8 @@ package Sem is\n       Save_Scope_Suppress  : Suppress_Array;\n       --  Save contents of Scope_Suppress on entry\n \n-      Save_Local_Entity_Suppress : Int;\n-      --  Save contents of Local_Entity_Suppress.Last on entry\n+      Save_Local_Suppress_Stack_Top : Suppress_Stack_Entry_Ptr;\n+      --  Save contents of Local_Suppress_Stack on entry to restore on exit\n \n       Is_Transient : Boolean;\n       --  Marks Transient Scopes (See Exp_Ch7 body for details)\n@@ -383,92 +499,6 @@ package Sem is\n      Table_Increment      => Alloc.Scope_Stack_Increment,\n      Table_Name           => \"Sem.Scope_Stack\");\n \n-   -----------------------------------\n-   -- Handling of Check Suppression --\n-   -----------------------------------\n-\n-   --  There are two kinds of suppress checks: scope based suppress checks,\n-   --  and entity based suppress checks.\n-\n-   --  Scope based suppress checks (from initial command line arguments,\n-   --  or from Suppress pragmas not including an entity name) are recorded\n-   --  in the Sem.Supress variable, and all that is necessary is to save the\n-   --  state of this variable on scope entry, and restore it on scope exit.\n-\n-   --  Entity based suppress checks, from Suppress pragmas giving an Entity_Id,\n-   --  are handled as follows. If a suppress or unsuppress pragma is\n-   --  encountered for a given entity, then the flag Checks_May_Be_Suppressed\n-   --  is set in the entity and an entry is made in either the\n-   --  Local_Entity_Suppress table (case of pragma that appears in other than\n-   --  a package spec), or in the Global_Entity_Suppress table (case of pragma\n-   --  that appears in a package spec, which is by the rule of RM 11.5(7)\n-   --  applicable throughout the life of the entity).\n-\n-   --  If the Checks_May_Be_Suppressed flag is set in an entity then the\n-   --  procedure is to search first the local and then the global suppress\n-   --  tables (the local one being searched in reverse order, i.e. last in\n-   --  searched first). The only other point is that we have to make sure\n-   --  that we have proper nested interaction between such specific pragmas\n-   --  and locally applied general pragmas applying to all entities. This\n-   --  is achieved by including in the Local_Entity_Suppress table dummy\n-   --  entries with an empty Entity field that are applicable to all entities.\n-\n-   Scope_Suppress : Suppress_Array := Suppress_Options;\n-   --  This array contains the current scope based settings of the suppress\n-   --  switches. It is initialized from the options as shown, and then modified\n-   --  by pragma Suppress. On entry to each scope, the current setting is saved\n-   --  the scope stack, and then restored on exit from the scope. This record\n-   --  may be rapidly checked to determine the current status of a check if\n-   --  no specific entity is involved or if the specific entity involved is\n-   --  one for which no specific Suppress/Unsuppress pragma has been set (as\n-   --  indicated by the Checks_May_Be_Suppressed flag being set).\n-\n-   --  This scheme is a little complex, but serves the purpose of enabling\n-   --  a very rapid check in the common case where no entity specific pragma\n-   --  applies, and gives the right result when such pragmas are used even\n-   --  in complex cases of nested Suppress and Unsuppress pragmas.\n-\n-   type Entity_Check_Suppress_Record is record\n-      Entity : Entity_Id;\n-      --  Entity to which the check applies, or Empty for a local check\n-      --  that has no entity name (and thus applies to all entities).\n-\n-      Check : Check_Id;\n-      --  Check which is set (note this cannot be All_Checks, if the All_Checks\n-      --  case, a sequence of eentries appears for the individual checks.\n-\n-      Suppress : Boolean;\n-      --  Set True for Suppress, and False for Unsuppress\n-   end record;\n-\n-   --  The Local_Entity_Suppress table is a stack, to which new entries are\n-   --  added for Suppress and Unsuppress pragmas appearing in other than\n-   --  package specs. Such pragmas are effective only to the end of the scope\n-   --  in which they appear. This is achieved by marking the stack on entry\n-   --  to a scope and then cutting back the stack to that marked point on\n-   --  scope exit.\n-\n-   package Local_Entity_Suppress is new Table.Table (\n-     Table_Component_Type => Entity_Check_Suppress_Record,\n-     Table_Index_Type     => Int,\n-     Table_Low_Bound      => 0,\n-     Table_Initial        => Alloc.Entity_Suppress_Initial,\n-     Table_Increment      => Alloc.Entity_Suppress_Increment,\n-     Table_Name           => \"Local_Entity_Suppress\");\n-\n-   --  The Global_Entity_Suppress table is used for entities which have\n-   --  a Suppress or Unsuppress pragma naming a specific entity in a\n-   --  package spec. Such pragmas always refer to entities in the package\n-   --  spec and are effective throughout the lifetime of the named entity.\n-\n-   package Global_Entity_Suppress is new Table.Table (\n-     Table_Component_Type => Entity_Check_Suppress_Record,\n-     Table_Index_Type     => Int,\n-     Table_Low_Bound      => 0,\n-     Table_Initial        => Alloc.Entity_Suppress_Initial,\n-     Table_Increment      => Alloc.Entity_Suppress_Increment,\n-     Table_Name           => \"Global_Entity_Suppress\");\n-\n    -----------------\n    -- Subprograms --\n    -----------------"}, {"sha": "dba6ae83946b8cf21070e9e2e98c7b77eefd8fdf", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -1501,7 +1501,7 @@ package body Sem_Eval is\n                Set_Etype (N, Etype (Right));\n             end if;\n \n-            Fold_Str (N, End_String, True);\n+            Fold_Str (N, End_String, Static => True);\n          end if;\n       end;\n    end Eval_Concatenation;\n@@ -2732,7 +2732,7 @@ package body Sem_Eval is\n       --  Fold conversion, case of string type. The result is not static\n \n       if Is_String_Type (Target_Type) then\n-         Fold_Str (N, Strval (Get_String_Val (Operand)), False);\n+         Fold_Str (N, Strval (Get_String_Val (Operand)), Static => False);\n \n          return;\n \n@@ -4450,7 +4450,7 @@ package body Sem_Eval is\n          if Raises_Constraint_Error (Expr) then\n             Error_Msg_N\n               (\"expression raises exception, cannot be static \" &\n-               \"('R'M 4.9(34))!\", N);\n+               \"(RM 4.9(34))!\", N);\n             return;\n          end if;\n \n@@ -4469,7 +4469,7 @@ package body Sem_Eval is\n          then\n             Error_Msg_N\n               (\"static expression must have scalar or string type \" &\n-               \"('R'M 4.9(2))!\", N);\n+               \"(RM 4.9(2))!\", N);\n             return;\n          end if;\n       end if;\n@@ -4486,19 +4486,19 @@ package body Sem_Eval is\n             elsif Ekind (E) = E_Constant then\n                if not Is_Static_Expression (Constant_Value (E)) then\n                   Error_Msg_NE\n-                    (\"& is not a static constant ('R'M 4.9(5))!\", N, E);\n+                    (\"& is not a static constant (RM 4.9(5))!\", N, E);\n                end if;\n \n             else\n                Error_Msg_NE\n                  (\"& is not static constant or named number \" &\n-                  \"('R'M 4.9(5))!\", N, E);\n+                  \"(RM 4.9(5))!\", N, E);\n             end if;\n \n          when N_Binary_Op | N_And_Then | N_Or_Else | N_Membership_Test =>\n             if Nkind (N) in N_Op_Shift then\n                Error_Msg_N\n-                (\"shift functions are never static ('R'M 4.9(6,18))!\", N);\n+                (\"shift functions are never static (RM 4.9(6,18))!\", N);\n \n             else\n                Why_Not_Static (Left_Opnd (N));\n@@ -4522,7 +4522,7 @@ package body Sem_Eval is\n             if Attribute_Name (N) = Name_Size then\n                Error_Msg_N\n                  (\"size attribute is only static for scalar type \" &\n-                  \"('R'M 4.9(7,8))\", N);\n+                  \"(RM 4.9(7,8))\", N);\n \n             --  Flag array cases\n \n@@ -4535,14 +4535,14 @@ package body Sem_Eval is\n                then\n                   Error_Msg_N\n                     (\"static array attribute must be Length, First, or Last \" &\n-                     \"('R'M 4.9(8))!\", N);\n+                     \"(RM 4.9(8))!\", N);\n \n                --  Since we know the expression is not-static (we already\n                --  tested for this, must mean array is not static).\n \n                else\n                   Error_Msg_N\n-                    (\"prefix is non-static array ('R'M 4.9(8))!\", Prefix (N));\n+                    (\"prefix is non-static array (RM 4.9(8))!\", Prefix (N));\n                end if;\n \n                return;\n@@ -4556,51 +4556,51 @@ package body Sem_Eval is\n             then\n                Error_Msg_N\n                  (\"attribute of generic type is never static \" &\n-                  \"('R'M 4.9(7,8))!\", N);\n+                  \"(RM 4.9(7,8))!\", N);\n \n             elsif Is_Static_Subtype (E) then\n                null;\n \n             elsif Is_Scalar_Type (E) then\n                Error_Msg_N\n                  (\"prefix type for attribute is not static scalar subtype \" &\n-                  \"('R'M 4.9(7))!\", N);\n+                  \"(RM 4.9(7))!\", N);\n \n             else\n                Error_Msg_N\n                  (\"static attribute must apply to array/scalar type \" &\n-                  \"('R'M 4.9(7,8))!\", N);\n+                  \"(RM 4.9(7,8))!\", N);\n             end if;\n \n          when N_String_Literal =>\n             Error_Msg_N\n-              (\"subtype of string literal is non-static ('R'M 4.9(4))!\", N);\n+              (\"subtype of string literal is non-static (RM 4.9(4))!\", N);\n \n          when N_Explicit_Dereference =>\n             Error_Msg_N\n-              (\"explicit dereference is never static ('R'M 4.9)!\", N);\n+              (\"explicit dereference is never static (RM 4.9)!\", N);\n \n          when N_Function_Call =>\n             Why_Not_Static_List (Parameter_Associations (N));\n-            Error_Msg_N (\"non-static function call ('R'M 4.9(6,18))!\", N);\n+            Error_Msg_N (\"non-static function call (RM 4.9(6,18))!\", N);\n \n          when N_Parameter_Association =>\n             Why_Not_Static (Explicit_Actual_Parameter (N));\n \n          when N_Indexed_Component =>\n             Error_Msg_N\n-              (\"indexed component is never static ('R'M 4.9)!\", N);\n+              (\"indexed component is never static (RM 4.9)!\", N);\n \n          when N_Procedure_Call_Statement =>\n             Error_Msg_N\n-              (\"procedure call is never static ('R'M 4.9)!\", N);\n+              (\"procedure call is never static (RM 4.9)!\", N);\n \n          when N_Qualified_Expression =>\n             Why_Not_Static (Expression (N));\n \n          when N_Aggregate | N_Extension_Aggregate =>\n             Error_Msg_N\n-              (\"an aggregate is never static ('R'M 4.9)!\", N);\n+              (\"an aggregate is never static (RM 4.9)!\", N);\n \n          when N_Range =>\n             Why_Not_Static (Low_Bound (N));\n@@ -4614,11 +4614,11 @@ package body Sem_Eval is\n \n          when N_Selected_Component =>\n             Error_Msg_N\n-              (\"selected component is never static ('R'M 4.9)!\", N);\n+              (\"selected component is never static (RM 4.9)!\", N);\n \n          when N_Slice =>\n             Error_Msg_N\n-              (\"slice is never static ('R'M 4.9)!\", N);\n+              (\"slice is never static (RM 4.9)!\", N);\n \n          when N_Type_Conversion =>\n             Why_Not_Static (Expression (N));\n@@ -4628,12 +4628,12 @@ package body Sem_Eval is\n             then\n                Error_Msg_N\n                  (\"static conversion requires static scalar subtype result \" &\n-                  \"('R'M 4.9(9))!\", N);\n+                  \"(RM 4.9(9))!\", N);\n             end if;\n \n          when N_Unchecked_Type_Conversion =>\n             Error_Msg_N\n-              (\"unchecked type conversion is never static ('R'M 4.9)!\", N);\n+              (\"unchecked type conversion is never static (RM 4.9)!\", N);\n \n          when others =>\n             null;"}, {"sha": "c3d4a2499b9ffc063d1489fd83158613eb3ae737", "filename": "gcc/ada/sem_maps.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem_maps.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem_maps.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_maps.adb?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,7 +55,7 @@ package body Sem_Maps is\n    ---------------------\n \n    procedure Add_Association\n-     (M    : in out Map;\n+     (M    : Map;\n       O_Id : Entity_Id;\n       N_Id : Entity_Id;\n       Kind : Scope_Kind := S_Local)\n@@ -318,7 +318,7 @@ package body Sem_Maps is\n    ------------------------\n \n    procedure Update_Association\n-     (M    : in out Map;\n+     (M    : Map;\n       O_Id : Entity_Id;\n       N_Id : Entity_Id;\n       Kind : Scope_Kind := S_Local)"}, {"sha": "90a64da920d2cbf8550ac7ae2415c09a94626b11", "filename": "gcc/ada/sem_maps.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem_maps.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b11e8d6fc0722f739630bfabff7d778faae9f1d3/gcc%2Fada%2Fsem_maps.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_maps.ads?ref=b11e8d6fc0722f739630bfabff7d778faae9f1d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,14 +64,14 @@ package Sem_Maps is\n    --  Retrieve image of E under M, Empty if undefined\n \n    procedure Add_Association\n-     (M    : in out Map;\n+     (M    : Map;\n       O_Id : Entity_Id;\n       N_Id : Entity_Id;\n       Kind : Scope_Kind := S_Local);\n    --  Update M in place. On entry M (O_Id) must not be defined\n \n    procedure Update_Association\n-     (M    : in out Map;\n+     (M    : Map;\n       O_Id : Entity_Id;\n       N_Id : Entity_Id;\n       Kind : Scope_Kind := S_Local);"}]}