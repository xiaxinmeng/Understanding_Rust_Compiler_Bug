{"sha": "cabe9abc6bcfea8565133519a3251bc0beea12d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FiZTlhYmM2YmNmZWE4NTY1MTMzNTE5YTMyNTFiYzBiZWVhMTJkOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T10:50:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T10:50:03Z"}, "message": "[multiple changes]\n\n2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body): Do not check conformance when\n\tthe spec has been generated for a body without spec that carries an\n\tInline_Always pragma.\n\n2010-06-14  Arnaud Charlet  <charlet@adacore.com>\n\n\t* lib-xref.ads: Documentation change: allocate 'Z' letter to C/C++\n\tmacro.\n\nFrom-SVN: r160723", "tree": {"sha": "20fad8e04a0361925fd8e427d9286de89256dab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20fad8e04a0361925fd8e427d9286de89256dab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cabe9abc6bcfea8565133519a3251bc0beea12d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cabe9abc6bcfea8565133519a3251bc0beea12d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cabe9abc6bcfea8565133519a3251bc0beea12d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cabe9abc6bcfea8565133519a3251bc0beea12d8/comments", "author": null, "committer": null, "parents": [{"sha": "428be3acf54239437e8982709bab2dc754fbe3d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428be3acf54239437e8982709bab2dc754fbe3d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428be3acf54239437e8982709bab2dc754fbe3d4"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "f8899ea6ce134b8cdad6690fa0e31d2a17f2fefe", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cabe9abc6bcfea8565133519a3251bc0beea12d8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cabe9abc6bcfea8565133519a3251bc0beea12d8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cabe9abc6bcfea8565133519a3251bc0beea12d8", "patch": "@@ -1,3 +1,14 @@\n+2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body): Do not check conformance when\n+\tthe spec has been generated for a body without spec that carries an\n+\tInline_Always pragma.\n+\n+2010-06-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* lib-xref.ads: Documentation change: allocate 'Z' letter to C/C++\n+\tmacro.\n+\n 2010-06-14  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* exp_dbug.adb (Debug_Renaming_Declaration): Do not output any debug"}, {"sha": "c36ccefe670dbc67906eaa7dd0c33b7f731003e0", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cabe9abc6bcfea8565133519a3251bc0beea12d8/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cabe9abc6bcfea8565133519a3251bc0beea12d8/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=cabe9abc6bcfea8565133519a3251bc0beea12d8", "patch": "@@ -560,7 +560,7 @@ package Lib.Xref is\n    --    w     protected object                protected type\n    --    x     abstract procedure              exception\n    --    y     abstract function               entry or entry family\n-   --    z     generic formal parameter        (unused)\n+   --    z     generic formal parameter        C/C++ macro\n \n    --------------------------------------\n    -- Handling of Imported Subprograms --"}, {"sha": "a263d8278160a7bb2b5b45f7363e33cb2c3a63e0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cabe9abc6bcfea8565133519a3251bc0beea12d8/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cabe9abc6bcfea8565133519a3251bc0beea12d8/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=cabe9abc6bcfea8565133519a3251bc0beea12d8", "patch": "@@ -2086,6 +2086,15 @@ package body Sem_Ch6 is\n             then\n                Conformant := True;\n \n+            --  Conversely, the spec may have been generated for specless body\n+            --  with an inline pragma.\n+\n+            elsif Comes_From_Source (N)\n+              and then not Comes_From_Source (Spec_Id)\n+              and then Has_Pragma_Inline (Spec_Id)\n+            then\n+               Conformant := True;\n+\n             else\n                Check_Conformance\n                  (Body_Id, Spec_Id,"}]}