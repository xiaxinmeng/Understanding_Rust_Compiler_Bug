{"sha": "08bb3b69c457ab9acdd1c228f041be022f2b5291", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhiYjNiNjljNDU3YWI5YWNkZDFjMjI4ZjA0MWJlMDIyZjJiNTI5MQ==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1998-10-24T03:05:35Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1998-10-24T03:05:35Z"}, "message": "* gxxint.texi: Correct documentation for n, N, Q, and B.\n\nFrom-SVN: r23269", "tree": {"sha": "3a4d3f0c88d6f3a0b6b01c7bde2bfe85ebdee7a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a4d3f0c88d6f3a0b6b01c7bde2bfe85ebdee7a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08bb3b69c457ab9acdd1c228f041be022f2b5291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08bb3b69c457ab9acdd1c228f041be022f2b5291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08bb3b69c457ab9acdd1c228f041be022f2b5291", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08bb3b69c457ab9acdd1c228f041be022f2b5291/comments", "author": null, "committer": null, "parents": [{"sha": "2b2ea9100a04812a6b8210dbb7f20b3f28243d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b2ea9100a04812a6b8210dbb7f20b3f28243d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b2ea9100a04812a6b8210dbb7f20b3f28243d7d"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "8bd7c7bbd66776c342b22f077014afcf79f0c722", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08bb3b69c457ab9acdd1c228f041be022f2b5291/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08bb3b69c457ab9acdd1c228f041be022f2b5291/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08bb3b69c457ab9acdd1c228f041be022f2b5291", "patch": "@@ -1,3 +1,7 @@\n+1998-10-24  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* gxxint.texi: Correct documentation for n, N, Q, and B.\n+\n 1998-10-23  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* parse.y (condition): Convert VAR_DECL from reference to indirect"}, {"sha": "3b8242de1b193ff8251b2657d6f1f3e73d2e6aa4", "filename": "gcc/cp/gxxint.texi", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08bb3b69c457ab9acdd1c228f041be022f2b5291/gcc%2Fcp%2Fgxxint.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08bb3b69c457ab9acdd1c228f041be022f2b5291/gcc%2Fcp%2Fgxxint.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fgxxint.texi?ref=08bb3b69c457ab9acdd1c228f041be022f2b5291", "patch": "@@ -1595,18 +1595,18 @@ as @samp{P} followed by the mangling of the class name.\n \n @subsection Squangled type compression\n \n-Squangling (enabled with the @samp{-fsquangle} option), utilizes \n-the @samp{B} code to indicate reuse of a previously\n-seen type within an indentifier. Types are recognized in a left to\n-right manner and given increasing values, which are\n-appended to the code in the standard manner. Ie, multiple digit numbers\n-are delimited by @samp{_} characters. A type is considered to be any \n-non primitive type, regardless of whether its a parameter, template\n-parameter, or entire template. Certain codes are considered modifiers\n-of a type, and are not included as part of the type. These are the\n-@samp{C}, @samp{V}, @samp{P}, @samp{A}, @samp{R}, and @samp{U} codes, \n-denoting constant, volatile, pointer, array, reference, and unsigned. \n-These codes may precede a @samp{B} type in order to make the required \n+Squangling (enabled with the @samp{-fsquangle} option), utilizes the\n+@samp{B} code to indicate reuse of a previously seen type within an\n+indentifier. Types are recognized in a left to right manner and given\n+increasing values, which are appended to the code in the standard\n+manner. Ie, multiple digit numbers are delimited by @samp{_}\n+characters. A type is considered to be any non primitive type,\n+regardless of whether its a parameter, template parameter, or entire\n+template. Certain codes are considered modifiers of a type, and are not\n+included as part of the type. These are the @samp{C}, @samp{V},\n+@samp{P}, @samp{A}, @samp{R}, @samp{U} and @samp{u} codes, denoting\n+constant, volatile, pointer, array, reference, unsigned, and restrict.\n+These codes may precede a @samp{B} type in order to make the required\n modifications to the type.\n \n For example:\n@@ -1784,17 +1784,20 @@ Used by squangling to compress qualified names.\n Encodes the C++ @code{long} type.\n \n @item n\n-Used with squangling.\n+Immediate repeated type. Followed by the repeat count.\n \n @item N \n-Namespaces.\n+Repeated type. Followed by the repeat count of the repeated type,\n+followed by the type index of the repeated type. Due to a bug in\n+g++ 2.7.2, this is only generated if index is 0. Superceded by\n+@samp{n} when squangling.\n \n @item P\n Indicates a pointer type.  Followed by the type pointed to.\n \n @item Q\n Used to mangle qualified names, which arise from nested classes.\n-Should also be used for namespaces (?).\n+Also used for namespaces.\n In Java used to mangle package-qualified names, and inner classes.\n \n @item r"}]}