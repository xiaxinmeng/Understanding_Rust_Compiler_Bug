{"sha": "15ed19ff324f45494d471b65c321804f1858cd26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVlZDE5ZmYzMjRmNDU0OTRkNDcxYjY1YzMyMTgwNGYxODU4Y2QyNg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2012-02-09T09:37:37Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2012-02-09T09:37:37Z"}, "message": "re PR middle-end/51867 (GCC generates inconsistent code for same sources calling builtin calls, like sqrtf)\n\n\n\tPR target/51867\n\t* builtins.c (expand_builtin): Don't check DECL_ASSEMBLER_NAME_SET_P.\n\n\tPR target/51867\n\t* testsuite/c-c++-common/dfp/signbit-2.c: Change '-O0' to '-O1'.\n\t* testsuite/gcc.dg/pr51867.c: New test.\n\nFrom-SVN: r184037", "tree": {"sha": "db7d4b5e98e0256791ba9060dc4a2afcabda31a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db7d4b5e98e0256791ba9060dc4a2afcabda31a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15ed19ff324f45494d471b65c321804f1858cd26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ed19ff324f45494d471b65c321804f1858cd26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ed19ff324f45494d471b65c321804f1858cd26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ed19ff324f45494d471b65c321804f1858cd26/comments", "author": null, "committer": null, "parents": [{"sha": "365e6b65dd15fb533ae641820ce820347d67596e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365e6b65dd15fb533ae641820ce820347d67596e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/365e6b65dd15fb533ae641820ce820347d67596e"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "05837c6dd295660baef315bf73f666f3cda3de2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15ed19ff324f45494d471b65c321804f1858cd26", "patch": "@@ -1,3 +1,8 @@\n+2012-02-09  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR middle-end/51867\n+\t* builtins.c (expand_builtin): Don't check DECL_ASSEMBLER_NAME_SET_P.\n+\n 2012-02-08  Magnus Granberg  <zorry@gentoo.org>\n \n \tPR driver/48524"}, {"sha": "cf4956123c3b05a663ffb9b39b6cc7d148dca792", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=15ed19ff324f45494d471b65c321804f1858cd26", "patch": "@@ -5776,7 +5776,6 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n      set of builtins.  */\n   if (!optimize\n       && !called_as_built_in (fndecl)\n-      && DECL_ASSEMBLER_NAME_SET_P (fndecl)\n       && fcode != BUILT_IN_ALLOCA\n       && fcode != BUILT_IN_ALLOCA_WITH_ALIGN\n       && fcode != BUILT_IN_FREE)"}, {"sha": "2e12bb8f3340dc353fd8f86a39e8051853625574", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15ed19ff324f45494d471b65c321804f1858cd26", "patch": "@@ -1,3 +1,9 @@\n+2012-02-09  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR middle-end/51867\n+\t* testsuite/c-c++-common/dfp/signbit-2.c: Change '-O0' to '-O1'.\n+\t* testsuite/gcc.dg/pr51867.c: New test.\n+\n 2012-02-09  Ian Lance Taylor  <iant@google.com>\n \n \t* go.test/go-test.exp (go-gc-tests): Don't run stack.go on systems"}, {"sha": "5444d8f648479f3070405fdfa4cf2a5bdb43acfc", "filename": "gcc/testsuite/c-c++-common/dfp/signbit-2.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Fsignbit-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Fsignbit-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Fsignbit-2.c?ref=15ed19ff324f45494d471b65c321804f1858cd26", "patch": "@@ -1,7 +1,10 @@\n-/* { dg-options \"-O0\" } */\n+/* { dg-options \"-O1\" } */\n \n /* Check that the compiler uses builtins for signbit; if not the link\n    will fail because library functions are in libm.  */\n+/* See PR51867.\n+   Since GCC uses library call when optimizing for \"-O0\", this test\n+   case requires at least \"-O1\" level optimization now.  */\n \n #include \"dfp-dbg.h\"\n "}, {"sha": "3f1016e2c8f54a21cae9f3a4964f4e5af0d8c8a5", "filename": "gcc/testsuite/gcc.dg/pr51867.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51867.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ed19ff324f45494d471b65c321804f1858cd26/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51867.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51867.c?ref=15ed19ff324f45494d471b65c321804f1858cd26", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -fno-math-errno -fdump-rtl-expand\" } */\n+#include <math.h>\n+\n+float a(float x)\n+{\n+    return sqrtf(x);\n+}\n+float b(float x)\n+{\n+    return sqrtf(x);\n+}\n+/* Here the calls to sqrtf should be expanded into CALL_INSNs, rather than\n+   fpu sqrtf rtl patterns.  */\n+/* { dg-final { scan-rtl-dump-times \"call_insn\" 2 \"expand\" } } */\n+/* { dg-final { cleanup-rtl-dump \"expand\" } } */"}]}