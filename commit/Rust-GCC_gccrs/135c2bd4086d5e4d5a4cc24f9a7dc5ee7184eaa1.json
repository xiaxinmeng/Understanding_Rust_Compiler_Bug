{"sha": "135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM1YzJiZDQwODZkNWU0ZDVhNGNjMjRmOWE3ZGM1ZWU3MTg0ZWFhMQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-04-27T17:26:03Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-04-27T17:26:03Z"}, "message": "expmed.c (store_fixed_bit_field): If we're not optimizing for size...\n\n\n\t* expmed.c (store_fixed_bit_field): If we're not optimizing for\n\tsize, force the intermediate into a new pseudo rather instead of\n\tperforming both a bitwise AND and a bitwise IOR in memory.\n\nFrom-SVN: r113318", "tree": {"sha": "01eecbf4b1eac9e56e4638fc994d61e6c1f26336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01eecbf4b1eac9e56e4638fc994d61e6c1f26336"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1/comments", "author": null, "committer": null, "parents": [{"sha": "921b02cd1f97018761f736753cf9a8d9a3227494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/921b02cd1f97018761f736753cf9a8d9a3227494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/921b02cd1f97018761f736753cf9a8d9a3227494"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "940f0df3159585f16d293eddddb382714b50a99c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1", "patch": "@@ -1,3 +1,9 @@\n+2006-04-27  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* expmed.c (store_fixed_bit_field): If we're not optimizing for\n+\tsize, force the intermediate into a new pseudo rather instead of\n+\tperforming both a bitwise AND and a bitwise IOR in memory.\n+\n 2006-04-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR rtl-optimization/26685"}, {"sha": "89ae78df7cd0dbb688739a672a254d09a16c8d81", "filename": "gcc/expmed.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=135c2bd4086d5e4d5a4cc24f9a7dc5ee7184eaa1", "patch": "@@ -924,7 +924,12 @@ store_fixed_bit_field (rtx op0, unsigned HOST_WIDE_INT offset,\n \n   if (! all_one)\n     {\n-      temp = expand_binop (mode, and_optab, op0,\n+      /* Don't try and keep the intermediate in memory, if we need to\n+\t perform both a bit-wise AND and a bit-wise IOR (except when\n+\t we're optimizing for size).  */\n+      if (MEM_P (subtarget) && !all_zero && !optimize_size)\n+\tsubtarget = force_reg (mode, subtarget);\n+      temp = expand_binop (mode, and_optab, subtarget,\n \t\t\t   mask_rtx (mode, bitpos, bitsize, 1),\n \t\t\t   subtarget, 1, OPTAB_LIB_WIDEN);\n       subtarget = temp;"}]}