{"sha": "2c67b7c62b4def6be6b4382ef7457eda933aef9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM2N2I3YzYyYjRkZWY2YmU2YjQzODJlZjc0NTdlZGE5MzNhZWY5ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-19T00:10:10Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-19T00:10:10Z"}, "message": "sibcall.c (optimize_sibling_and_tail_recursive_call): Also remove RTX_UNCHANGING_P markers for successful tail-recursive replacement.\n\n        * sibcall.c (optimize_sibling_and_tail_recursive_call): Also remove\n        RTX_UNCHANGING_P markers for successful tail-recursive replacement.\n\nFrom-SVN: r57290", "tree": {"sha": "979194822dd83a584d4c468d30f46cc59babcb83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/979194822dd83a584d4c468d30f46cc59babcb83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c67b7c62b4def6be6b4382ef7457eda933aef9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c67b7c62b4def6be6b4382ef7457eda933aef9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c67b7c62b4def6be6b4382ef7457eda933aef9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c67b7c62b4def6be6b4382ef7457eda933aef9d/comments", "author": null, "committer": null, "parents": [{"sha": "15769ca344d8bf0a6faebadaf262e8c98572a0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15769ca344d8bf0a6faebadaf262e8c98572a0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15769ca344d8bf0a6faebadaf262e8c98572a0e7"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "10414c8263778dc7390cb535501147dca5a402d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c67b7c62b4def6be6b4382ef7457eda933aef9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c67b7c62b4def6be6b4382ef7457eda933aef9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c67b7c62b4def6be6b4382ef7457eda933aef9d", "patch": "@@ -1,3 +1,8 @@\n+2002-09-18  Richard Henderson  <rth@redhat.com>\n+\n+\t* sibcall.c (optimize_sibling_and_tail_recursive_call): Also remove\n+\tRTX_UNCHANGING_P markers for successful tail-recursive replacement.\n+\n 2002-09-18  Richard Henderson  <rth@redhat.com>\n \n \t* real.c (round_for_format): Collect sticky as unsigned long, not bool."}, {"sha": "4073e7cb4fe951adcd98090ae02312a9bd64e03c", "filename": "gcc/sibcall.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c67b7c62b4def6be6b4382ef7457eda933aef9d/gcc%2Fsibcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c67b7c62b4def6be6b4382ef7457eda933aef9d/gcc%2Fsibcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsibcall.c?ref=2c67b7c62b4def6be6b4382ef7457eda933aef9d", "patch": "@@ -574,8 +574,8 @@ optimize_sibling_and_tail_recursive_calls ()\n   rtx insn, insns;\n   basic_block alternate_exit = EXIT_BLOCK_PTR;\n   bool no_sibcalls_this_function = false;\n-  int successful_sibling_call = 0;\n-  int replaced_call_placeholder = 0;\n+  bool successful_replacement = false;\n+  bool replaced_call_placeholder = false;\n   edge e;\n \n   insns = get_insns ();\n@@ -704,10 +704,11 @@ optimize_sibling_and_tail_recursive_calls ()\n \t  /* Select a set of insns to implement the call and emit them.\n \t     Tail recursion is the most efficient, so select it over\n \t     a tail/sibling call.  */\n-\t  if (sibcall)\n-\t    successful_sibling_call = 1;\n \n-\t  replaced_call_placeholder = 1;\n+\t  if (sibcall || tailrecursion)\n+\t    successful_replacement = true;\n+\t  replaced_call_placeholder = true;\n+\n \t  replace_call_placeholder (insn,\n \t\t\t\t    tailrecursion != 0\n \t\t\t\t      ? sibcall_use_tail_recursion\n@@ -717,7 +718,7 @@ optimize_sibling_and_tail_recursive_calls ()\n \t}\n     }\n \n-  if (successful_sibling_call)\n+  if (successful_replacement)\n     {\n       rtx insn;\n       tree arg;"}]}