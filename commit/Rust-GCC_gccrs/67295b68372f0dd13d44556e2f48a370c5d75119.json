{"sha": "67295b68372f0dd13d44556e2f48a370c5d75119", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcyOTViNjgzNzJmMGRkMTNkNDQ1NTZlMmY0OGEzNzBjNWQ3NTExOQ==", "commit": {"author": {"name": "Omar Sandoval", "email": "osandov@osandov.com", "date": "2018-09-13T10:27:12Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-09-13T10:27:12Z"}, "message": "[debug] DWARF: add DW_AT_count to zero-length arrays\n\n2018-09-13  Omar Sandoval  <osandov@osandov.com>\n\t    Tom de Vries  <tdevries@suse.de>\n\n\tPR debug/86985\n\t* dwarf2out.c (is_c): New function.\n\t(add_subscript_info): Add DW_AT_count of 0 for C zero-length arrays.\n\n\t* gcc.dg/guality/zero-length-array.c: New test.\n\nCo-Authored-By: Tom de Vries <tdevries@suse.de>\n\nFrom-SVN: r264267", "tree": {"sha": "e3c1d2f4989f85b7e96c34cf47cd13023c9f6fa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3c1d2f4989f85b7e96c34cf47cd13023c9f6fa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67295b68372f0dd13d44556e2f48a370c5d75119", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67295b68372f0dd13d44556e2f48a370c5d75119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67295b68372f0dd13d44556e2f48a370c5d75119", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67295b68372f0dd13d44556e2f48a370c5d75119/comments", "author": {"login": "osandov", "id": 3682206, "node_id": "MDQ6VXNlcjM2ODIyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/3682206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osandov", "html_url": "https://github.com/osandov", "followers_url": "https://api.github.com/users/osandov/followers", "following_url": "https://api.github.com/users/osandov/following{/other_user}", "gists_url": "https://api.github.com/users/osandov/gists{/gist_id}", "starred_url": "https://api.github.com/users/osandov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osandov/subscriptions", "organizations_url": "https://api.github.com/users/osandov/orgs", "repos_url": "https://api.github.com/users/osandov/repos", "events_url": "https://api.github.com/users/osandov/events{/privacy}", "received_events_url": "https://api.github.com/users/osandov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "231c52ae41a335649013f9fbfabca337d1ea98fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231c52ae41a335649013f9fbfabca337d1ea98fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/231c52ae41a335649013f9fbfabca337d1ea98fa"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "e62f461df843a9fb8a335f86f2320cc40ef437cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67295b68372f0dd13d44556e2f48a370c5d75119/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67295b68372f0dd13d44556e2f48a370c5d75119/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67295b68372f0dd13d44556e2f48a370c5d75119", "patch": "@@ -1,3 +1,10 @@\n+2018-09-13  Omar Sandoval  <osandov@osandov.com>\n+\t    Tom de Vries  <tdevries@suse.de>\n+\n+\tPR debug/86985\n+\t* dwarf2out.c (is_c): New function.\n+\t(add_subscript_info): Add DW_AT_count of 0 for C zero-length arrays.\n+\n 2018-09-13  Sam Tebbs  <sam.tebbs@arm.com>\n \n \tPR target/85628"}, {"sha": "48c50378622543554f074daef708eba7318c0835", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67295b68372f0dd13d44556e2f48a370c5d75119/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67295b68372f0dd13d44556e2f48a370c5d75119/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=67295b68372f0dd13d44556e2f48a370c5d75119", "patch": "@@ -3679,6 +3679,7 @@ static const char *get_AT_string (dw_die_ref, enum dwarf_attribute);\n static int get_AT_flag (dw_die_ref, enum dwarf_attribute);\n static unsigned get_AT_unsigned (dw_die_ref, enum dwarf_attribute);\n static inline dw_die_ref get_AT_ref (dw_die_ref, enum dwarf_attribute);\n+static bool is_c (void);\n static bool is_cxx (void);\n static bool is_cxx (const_tree);\n static bool is_fortran (void);\n@@ -5443,6 +5444,19 @@ get_AT_file (dw_die_ref die, enum dwarf_attribute attr_kind)\n   return a ? AT_file (a) : NULL;\n }\n \n+/* Return TRUE if the language is C.  */\n+\n+static inline bool\n+is_c (void)\n+{\n+  unsigned int lang = get_AT_unsigned (comp_unit_die (), DW_AT_language);\n+\n+  return (lang == DW_LANG_C || lang == DW_LANG_C89 || lang == DW_LANG_C99\n+\t  || lang == DW_LANG_C11 || lang == DW_LANG_ObjC);\n+\n+\n+}\n+\n /* Return TRUE if the language is C++.  */\n \n static inline bool\n@@ -21000,8 +21014,16 @@ add_subscript_info (dw_die_ref type_die, tree type, bool collapse_p)\n \n \t  if (!get_AT (subrange_die, DW_AT_lower_bound))\n \t    add_bound_info (subrange_die, DW_AT_lower_bound, lower, NULL);\n-\t  if (upper && !get_AT (subrange_die, DW_AT_upper_bound))\n-\t    add_bound_info (subrange_die, DW_AT_upper_bound, upper, NULL);\n+\t  if (!get_AT (subrange_die, DW_AT_upper_bound)\n+\t      && !get_AT (subrange_die, DW_AT_count))\n+\t    {\n+\t      if (upper)\n+\t\tadd_bound_info (subrange_die, DW_AT_upper_bound, upper, NULL);\n+\t      else if ((is_c () || is_cxx ()) && COMPLETE_TYPE_P (type))\n+\t\t/* Zero-length array.  */\n+\t\tadd_bound_info (subrange_die, DW_AT_count,\n+\t\t\t\tbuild_int_cst (TREE_TYPE (lower), 0), NULL);\n+\t    }\n \t}\n \n       /* Otherwise we have an array type with an unspecified length.  The"}, {"sha": "be1e8b559ffda10a7c1181a4cef1b7fcb65c30f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67295b68372f0dd13d44556e2f48a370c5d75119/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67295b68372f0dd13d44556e2f48a370c5d75119/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67295b68372f0dd13d44556e2f48a370c5d75119", "patch": "@@ -1,3 +1,9 @@\n+2018-09-13  Omar Sandoval  <osandov@osandov.com>\n+\t    Tom de Vries  <tdevries@suse.de>\n+\n+\tPR debug/86985\n+\t* gcc.dg/guality/zero-length-array.c: New test.\n+\n 2018-09-13  Sam Tebbs  <sam.tebbs@arm.com>\n \n \tPR target/85628"}, {"sha": "33f34d98ac29d81781760151199a5fff8a2c0057", "filename": "gcc/testsuite/gcc.dg/guality/zero-length-array.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67295b68372f0dd13d44556e2f48a370c5d75119/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fzero-length-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67295b68372f0dd13d44556e2f48a370c5d75119/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fzero-length-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fzero-length-array.c?ref=67295b68372f0dd13d44556e2f48a370c5d75119", "patch": "@@ -0,0 +1,21 @@\n+/* PR debug/86985 */\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+\n+struct {\n+  int foo;\n+  int bar[0];\n+} zla; /* Zero length array.  */\n+\n+struct {\n+  int foo;\n+  int bar[];\n+} fam; /* Flexible array member.  */\n+\n+int\n+main ()\n+{\n+  /* { dg-final { gdb-test . \"type:zla\" \"struct { int foo; int bar[0]; }\" } } */\n+  /* { dg-final { gdb-test . \"type:fam\" \"struct { int foo; int bar[]; }\" } } */\n+  return 0;\n+}"}]}