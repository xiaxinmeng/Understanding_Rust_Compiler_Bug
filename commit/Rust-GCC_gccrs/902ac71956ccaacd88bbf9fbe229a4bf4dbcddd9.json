{"sha": "902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAyYWM3MTk1NmNjYWFjZDg4YmJmOWZiZTIyOWE0YmY0ZGJjZGRkOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-21T14:46:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-21T14:46:11Z"}, "message": "* config/h8300/h8300.md (a peephole2): New.\n\nFrom-SVN: r63224", "tree": {"sha": "602e38ef81cf950af0bedfdcfddb5ca5aced0f3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/602e38ef81cf950af0bedfdcfddb5ca5aced0f3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9/comments", "author": null, "committer": null, "parents": [{"sha": "7b54048202a63c12b4b8ee15c39c3d231791f0a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b54048202a63c12b4b8ee15c39c3d231791f0a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b54048202a63c12b4b8ee15c39c3d231791f0a0"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "4643a79eb184476a296bbcc7fd90ebe323453367", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9", "patch": "@@ -1,3 +1,7 @@\n+2003-02-21  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (a peephole2): New.\n+\n Fri Feb 21 11:05:44 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* cfgrtl.c (commit_one_edge_insertion): Only mark BB for splitting."}, {"sha": "beb4534c9036a35e17dea5cb0c65ed921960175d", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=902ac71956ccaacd88bbf9fbe229a4bf4dbcddd9", "patch": "@@ -3847,3 +3847,35 @@\n \t\t      (pc)))]\n   \"operands[4] = gen_rtx_REG (HImode, REGNO (operands[0]));\n    operands[5] = GEN_INT (trunc_int_for_mode (INTVAL (operands[1]), HImode));\")\n+\n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(and:SI (match_dup 0)\n+\t\t(match_operand:SI 1 \"const_int_qi_operand\" \"\")))\n+   (set (match_dup 0)\n+\t(xor:SI (match_dup 0)\n+\t\t(match_operand:SI 2 \"const_int_qi_operand\" \"\")))\n+   (set (cc0)\n+\t(match_dup 0))\n+   (set (pc)\n+\t(if_then_else (match_operator 4 \"eqne_operator\"\n+\t\t\t[(cc0) (const_int 0)])\n+\t\t      (label_ref (match_operand 3 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"peep2_reg_dead_p (3, operands[0])\n+   && (~INTVAL (operands[1]) & INTVAL (operands[2])) == 0\"\n+  [(set (match_dup 5)\n+\t(and:QI (match_dup 5)\n+\t\t(match_dup 6)))\n+   (set (match_dup 5)\n+\t(xor:QI (match_dup 5)\n+\t\t(match_dup 7)))\n+   (set (cc0)\n+\t(match_dup 5))\n+   (set (pc)\n+\t(if_then_else (match_op_dup 4 [(cc0) (const_int 0)])\n+\t\t      (label_ref (match_dup 3))\n+\t\t      (pc)))]\n+  \"operands[5] = gen_rtx_REG (QImode, REGNO (operands[0]));\n+   operands[6] = GEN_INT (trunc_int_for_mode (INTVAL (operands[1]), QImode));\n+   operands[7] = GEN_INT (trunc_int_for_mode (INTVAL (operands[2]), QImode));\")"}]}