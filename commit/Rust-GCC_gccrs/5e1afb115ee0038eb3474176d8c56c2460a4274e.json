{"sha": "5e1afb115ee0038eb3474176d8c56c2460a4274e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUxYWZiMTE1ZWUwMDM4ZWIzNDc0MTc2ZDhjNTZjMjQ2MGE0Mjc0ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-07-22T00:26:03Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-07-22T00:26:03Z"}, "message": "loop.h (LOOP_AUTO_UNROLL): Rename from LOOP_FIRST_PASS.\n\n        * loop.h (LOOP_AUTO_UNROLL): Rename from LOOP_FIRST_PASS.\n        * loop.c (strength_reduce): Update.\n        * toplev.c (rest_of_compilation): Do unrolling in the first\n        loop pass, not the second.\n\nFrom-SVN: r55634", "tree": {"sha": "2ff7eb08105c0df70c8ebbd19873fcb13b68513d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ff7eb08105c0df70c8ebbd19873fcb13b68513d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e1afb115ee0038eb3474176d8c56c2460a4274e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e1afb115ee0038eb3474176d8c56c2460a4274e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e1afb115ee0038eb3474176d8c56c2460a4274e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e1afb115ee0038eb3474176d8c56c2460a4274e/comments", "author": null, "committer": null, "parents": [{"sha": "c67a1cf6a842249a064d479b455321e6663e4708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67a1cf6a842249a064d479b455321e6663e4708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67a1cf6a842249a064d479b455321e6663e4708"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "d1959cc5a3d552d57875c7394477d72dc6a9c70e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e1afb115ee0038eb3474176d8c56c2460a4274e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e1afb115ee0038eb3474176d8c56c2460a4274e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e1afb115ee0038eb3474176d8c56c2460a4274e", "patch": "@@ -1,3 +1,10 @@\n+2002-07-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* loop.h (LOOP_AUTO_UNROLL): Rename from LOOP_FIRST_PASS.\n+\t* loop.c (strength_reduce): Update.\n+\t* toplev.c (rest_of_compilation): Do unrolling in the first\n+\tloop pass, not the second.\n+\n 2002-07-21  Richard Henderson  <rth@redhat.com>\n \n \t* emit-rtl.c (set_mem_attributes): Preserve indirection of PARM_DECL"}, {"sha": "1b8afd50ddcc6ab7b0e5c2ae0be1c148e0f90659", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e1afb115ee0038eb3474176d8c56c2460a4274e/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e1afb115ee0038eb3474176d8c56c2460a4274e/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=5e1afb115ee0038eb3474176d8c56c2460a4274e", "patch": "@@ -5320,7 +5320,7 @@ strength_reduce (loop, flags)\n      collected.  Always unroll loops that would be as small or smaller\n      unrolled than when rolled.  */\n   if ((flags & LOOP_UNROLL)\n-      || (!(flags & LOOP_FIRST_PASS)\n+      || ((flags & LOOP_AUTO_UNROLL)\n \t  && loop_info->n_iterations > 0\n \t  && unrolled_insn_copies <= insn_count))\n     unroll_loop (loop, insn_count, 1);"}, {"sha": "13b629311d4676e5b2e3b3337895dee45d6106f4", "filename": "gcc/loop.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e1afb115ee0038eb3474176d8c56c2460a4274e/gcc%2Floop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e1afb115ee0038eb3474176d8c56c2460a4274e/gcc%2Floop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.h?ref=5e1afb115ee0038eb3474176d8c56c2460a4274e", "patch": "@@ -28,7 +28,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define LOOP_UNROLL 1\n #define LOOP_BCT 2\n #define LOOP_PREFETCH 4\n-#define LOOP_FIRST_PASS 8\n+#define LOOP_AUTO_UNROLL 8\n \n /* Get the loop info pointer of a loop.  */\n #define LOOP_INFO(LOOP) ((struct loop_info *) (LOOP)->aux)"}, {"sha": "cfb21e45076985708b3862df14936c021d786c8f", "filename": "gcc/toplev.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e1afb115ee0038eb3474176d8c56c2460a4274e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e1afb115ee0038eb3474176d8c56c2460a4274e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5e1afb115ee0038eb3474176d8c56c2460a4274e", "patch": "@@ -1,4 +1,3 @@\n-\n /* Top level of GNU C compiler\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n    1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n@@ -2878,19 +2877,24 @@ rest_of_compilation (decl)\n \n   if (optimize > 0 && flag_loop_optimize)\n     {\n+      int do_unroll, do_prefetch;\n+\n       timevar_push (TV_LOOP);\n       delete_dead_jumptables ();\n       cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n       open_dump_file (DFI_loop, decl);\n       /* CFG is no longer maintained up-to-date.  */\n       free_bb_for_insn ();\n \n+      do_unroll = flag_unroll_loops ? LOOP_UNROLL : LOOP_AUTO_UNROLL;\n+      do_prefetch = flag_prefetch_loop_arrays ? LOOP_PREFETCH : 0;\n       if (flag_rerun_loop_opt)\n \t{\n \t  cleanup_barriers ();\n \n \t  /* We only want to perform unrolling once.  */\n-\t  loop_optimize (insns, rtl_dump_file, LOOP_FIRST_PASS);\n+\t  loop_optimize (insns, rtl_dump_file, do_unroll);\n+\t  do_unroll = 0;\n \n \t  /* The first call to loop_optimize makes some instructions\n \t     trivially dead.  We delete those instructions now in the\n@@ -2903,9 +2907,7 @@ rest_of_compilation (decl)\n \t  reg_scan (insns, max_reg_num (), 1);\n \t}\n       cleanup_barriers ();\n-      loop_optimize (insns, rtl_dump_file,\n-\t\t     (flag_unroll_loops ? LOOP_UNROLL : 0) | LOOP_BCT\n-\t\t     | (flag_prefetch_loop_arrays ? LOOP_PREFETCH : 0));\n+      loop_optimize (insns, rtl_dump_file, do_unroll | LOOP_BCT | do_prefetch);\n \n       /* Loop can create trivially dead instructions.  */\n       delete_trivially_dead_insns (insns, max_reg_num ());"}]}