{"sha": "dfd7d2d68b96580180f6d482ffd381913de83ee4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZkN2QyZDY4Yjk2NTgwMTgwZjZkNDgyZmZkMzgxOTEzZGU4M2VlNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-03-11T15:32:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-03-11T15:32:27Z"}, "message": "tree-ssa-structalias.c (get_constraint_for_ptr_offset): Add asserts to guard possible wrong-code bugs.\n\n2014-03-11  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (get_constraint_for_ptr_offset):\n\tAdd asserts to guard possible wrong-code bugs.\n\nFrom-SVN: r208485", "tree": {"sha": "f4ac1c996b050838e54964bc39ecaac2862b700a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ac1c996b050838e54964bc39ecaac2862b700a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfd7d2d68b96580180f6d482ffd381913de83ee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfd7d2d68b96580180f6d482ffd381913de83ee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfd7d2d68b96580180f6d482ffd381913de83ee4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfd7d2d68b96580180f6d482ffd381913de83ee4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af1ab44914e9d544f7b24c21634e02f62ef086ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af1ab44914e9d544f7b24c21634e02f62ef086ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af1ab44914e9d544f7b24c21634e02f62ef086ff"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "92df4717c35ed69c07716b32b47b0da053575c51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfd7d2d68b96580180f6d482ffd381913de83ee4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfd7d2d68b96580180f6d482ffd381913de83ee4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfd7d2d68b96580180f6d482ffd381913de83ee4", "patch": "@@ -1,3 +1,8 @@\n+2014-03-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (get_constraint_for_ptr_offset):\n+\tAdd asserts to guard possible wrong-code bugs.\n+\n 2014-03-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/60429"}, {"sha": "8201cb423c1de652d43adbad3ba7725669f21ad1", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfd7d2d68b96580180f6d482ffd381913de83ee4/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfd7d2d68b96580180f6d482ffd381913de83ee4/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=dfd7d2d68b96580180f6d482ffd381913de83ee4", "patch": "@@ -3095,7 +3095,7 @@ get_constraint_for_ptr_offset (tree ptr, tree offset,\n       if (c.type == ADDRESSOF\n \t  /* If this varinfo represents a full variable just use it.  */\n \t  && curr->is_full_var)\n-\tc.offset = 0;\n+\t;\n       else if (c.type == ADDRESSOF\n \t       /* If we do not know the offset add all subfields.  */\n \t       && rhsoffset == UNKNOWN_OFFSET)\n@@ -3143,8 +3143,14 @@ get_constraint_for_ptr_offset (tree ptr, tree offset,\n \t      temp = vi_next (temp);\n \t    }\n \t}\n+      else if (c.type == SCALAR)\n+\t{\n+\t  gcc_assert (c.offset == 0);\n+\t  c.offset = rhsoffset;\n+\t}\n       else\n-\tc.offset = rhsoffset;\n+\t/* We shouldn't get any DEREFs here.  */\n+\tgcc_unreachable ();\n \n       (*results)[j] = c;\n     }"}]}