{"sha": "c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZmOWY4M2JjOGU2NmZlYjg5MGRjMGM5ODA0YjU5MDYwYjVhMTA4ZQ==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2004-11-29T14:17:33Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2004-11-29T14:17:33Z"}, "message": "re PR c++/18652 (ICE on invalid redeclaration)\n\n\tPR c++/18652\n\t* name-lookup.c (pushtag): Change return type to tree.\n\t* cp-tree.h (pushtag): Adjust declaration.\n\t* decl.c (xref_tag, start_enum): Use return value of pushtag.\n\t* pt.c (push_template_decl_real): Return immediately if\n\tpushdecl_namespace_level returns error_mark_node.\n\n\t* g++.dg/lookup/crash6.C: New test.\n\nFrom-SVN: r91470", "tree": {"sha": "21a12e4b14b7728e3120b2ee3c55077458e781b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21a12e4b14b7728e3120b2ee3c55077458e781b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/comments", "author": null, "committer": null, "parents": [{"sha": "4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f70f9d237bd16869e6f6146b3709cbefa3dffe9"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "e2f7dc49aa32d0ca77874f36a28e21092f4b4391", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "patch": "@@ -1,3 +1,12 @@\n+2004-11-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/18652\n+\t* name-lookup.c (pushtag): Change return type to tree.\n+\t* cp-tree.h (pushtag): Adjust declaration.\n+\t* decl.c (xref_tag, start_enum): Use return value of pushtag.\n+\t* pt.c (push_template_decl_real): Return immediately if\n+\tpushdecl_namespace_level returns error_mark_node.\n+\n 2004-11-27  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* pt.c: Fix a comment typo."}, {"sha": "1dfd52dc1c55842ae97c5dbb200a0658aec963c4", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "patch": "@@ -3707,7 +3707,7 @@ extern void delete_block\t\t\t(tree);\n extern void add_block_current_level\t\t(tree);\n extern void push_switch\t\t\t\t(tree);\n extern void pop_switch\t\t\t\t(void);\n-extern void pushtag\t\t\t\t(tree, tree, int);\n+extern tree pushtag\t\t\t\t(tree, tree, int);\n extern tree make_anon_name\t\t\t(void);\n extern int decls_match\t\t\t\t(tree, tree);\n extern tree duplicate_decls\t\t\t(tree, tree);"}, {"sha": "7779080d0f83fffb3852c5a6b8f3533b5027548b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "patch": "@@ -9284,7 +9284,7 @@ xref_tag (enum tag_types tag_code, tree name,\n \t  t = make_aggr_type (code);\n \t  TYPE_CONTEXT (t) = context;\n \t  /* pushtag only cares whether SCOPE is zero or not.  */\n-\t  pushtag (name, t, scope != ts_current);\n+\t  t = pushtag (name, t, scope != ts_current);\n \t}\n     }\n   else\n@@ -9539,7 +9539,7 @@ start_enum (tree name)\n \tname = make_anon_name ();\n \n       enumtype = make_node (ENUMERAL_TYPE);\n-      pushtag (name, enumtype, 0);\n+      enumtype = pushtag (name, enumtype, 0);\n     }\n \n   return enumtype;"}, {"sha": "ee0d1a45e7ce33b0c2911e1c4ccfe90cb63d1ef1", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "patch": "@@ -4566,9 +4566,10 @@ maybe_process_template_type_declaration (tree type, int globalize,\n /* Push a tag name NAME for struct/class/union/enum type TYPE.\n    Normally put it into the inner-most non-sk_cleanup scope,\n    but if GLOBALIZE is true, put it in the inner-most non-class scope.\n-   The latter is needed for implicit declarations.  */\n+   The latter is needed for implicit declarations.\n+   Returns TYPE upon success and ERROR_MARK_NODE otherwise.  */\n \n-void\n+tree\n pushtag (tree name, tree type, int globalize)\n {\n   struct cp_binding_level *b;\n@@ -4633,6 +4634,8 @@ pushtag (tree name, tree type, int globalize)\n \n \t  d = maybe_process_template_type_declaration (type,\n \t\t\t\t\t\t       globalize, b);\n+\t  if (d == error_mark_node)\n+\t    return error_mark_node;\n \n \t  if (b->kind == sk_class)\n \t    {\n@@ -4695,7 +4698,7 @@ pushtag (tree name, tree type, int globalize)\n       tree d = build_decl (TYPE_DECL, NULL_TREE, type);\n       TYPE_STUB_DECL (type) = pushdecl_with_scope (d, b);\n     }\n-  timevar_pop (TV_NAME_LOOKUP);\n+  POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, type);\n }\n \f\n /* Subroutines for reverting temporarily to top-level for instantiation"}, {"sha": "fca3f3d19089e82025cbc0483777f4f4ab9788c0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "patch": "@@ -3145,7 +3145,11 @@ push_template_decl_real (tree decl, int is_friend)\n      parameters of the class.  */\n   if (new_template_p && !ctx \n       && !(is_friend && template_class_depth (current_class_type) > 0))\n-    tmpl = pushdecl_namespace_level (tmpl);\n+    {\n+      tmpl = pushdecl_namespace_level (tmpl);\n+      if (tmpl == error_mark_node)\n+\treturn error_mark_node;\n+    }\n \n   if (primary)\n     {"}, {"sha": "289d124d3de81f41e9fe74d4dc327cca6cb8f953", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "patch": "@@ -1,3 +1,8 @@\n+2004-11-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/18652\n+\t* g++.dg/lookup/crash6.C: New test.\n+\n 2004-11-29  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \tPR middle-end/18164"}, {"sha": "0e49324bf273cbfa31cb26ec736cbf957afff494", "filename": "gcc/testsuite/g++.dg/lookup/crash6.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f9f83bc8e66feb890dc0c9804b59060b5a108e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash6.C?ref=c6f9f83bc8e66feb890dc0c9804b59060b5a108e", "patch": "@@ -0,0 +1,8 @@\n+// { dg-do compile }\n+\n+// Origin: Volker Reichelt <reichelt@gcc.gnu.org>\n+\n+// PR c++/18652: ICE redeclaring variable as template.\n+\n+int A;\t\t\t// { dg-error \"previous declaration\" }\n+template<int> struct A; // { dg-error \"different kind of symbol\" }"}]}