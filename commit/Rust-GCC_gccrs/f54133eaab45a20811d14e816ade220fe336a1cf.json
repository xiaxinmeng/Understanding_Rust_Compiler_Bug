{"sha": "f54133eaab45a20811d14e816ade220fe336a1cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU0MTMzZWFhYjQ1YTIwODExZDE0ZTgxNmFkZTIyMGZlMzM2YTFjZg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2017-06-16T21:07:03Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2017-06-16T21:07:03Z"}, "message": "[arm][doc] Document changes to -mcpu, -mtune and -mfpu.\n\n\nThis patch adds the remainder of the main documentation changes.  It\nadds the changes for -mcpu, -mtune and -mfpu.  I've chosen to document\nthe extension options under -mcpu rather than under -mtune because,\nwhile they are permitted with -mtune, they do not affect the behaviour\nof the tuning done by the compiler.\n\nI've also inverted the sense of the table (making the primary index\nthe extension name and then listing the CPU names to which it applies.\nThis is because the extensions are much more orthoganal in meaning\nhere and having a primary entry via the CPU name would lead to\nenormous duplication.\n\nFinally, it adds the relevant changes to -mfpu.  I haven't stated yet\nthat any setting of -mfpu other than 'auto' is deprecated, but that is\ncertainly the long-term goal of this patch series.\n\n\t* doc/invoke.texi (ARM Options, -mcpu): Document supported\n\textension options.\n\t(ARM Options, -mtune): Document that this accepts the same\n\textension options as -mcpu.\n\t(ARM Options, -mfpu): Document addition of -mfpu=auto.\n\nFrom-SVN: r249308", "tree": {"sha": "1e10491721fbb92bc8f6bfb896d566861d59e104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e10491721fbb92bc8f6bfb896d566861d59e104"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f54133eaab45a20811d14e816ade220fe336a1cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54133eaab45a20811d14e816ade220fe336a1cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f54133eaab45a20811d14e816ade220fe336a1cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54133eaab45a20811d14e816ade220fe336a1cf/comments", "author": null, "committer": null, "parents": [{"sha": "6d2f99aae150b9458e2cef9b85a77b9814995b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d2f99aae150b9458e2cef9b85a77b9814995b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d2f99aae150b9458e2cef9b85a77b9814995b45"}], "stats": {"total": 78, "additions": 71, "deletions": 7}, "files": [{"sha": "5b468a8b68078a8ef52ab0386a3c0fb6a646ad08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54133eaab45a20811d14e816ade220fe336a1cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54133eaab45a20811d14e816ade220fe336a1cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f54133eaab45a20811d14e816ade220fe336a1cf", "patch": "@@ -1,3 +1,11 @@\n+2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* doc/invoke.texi (ARM Options, -mcpu): Document supported\n+\textension options.\n+\t(ARM Options, -mtune): Document that this accepts the same\n+\textension options as -mcpu.\n+\t(ARM Options, -mfpu): Document addition of -mfpu=auto.\n+\n 2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* doc/invoke.texi (ARM Options, -march=): Document new syntax and"}, {"sha": "86c8d62622d028b61870fc780b796b40be01dd1e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 63, "deletions": 7, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54133eaab45a20811d14e816ade220fe336a1cf/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54133eaab45a20811d14e816ade220fe336a1cf/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f54133eaab45a20811d14e816ade220fe336a1cf", "patch": "@@ -15489,8 +15489,6 @@ Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{cortex-m0.small-multiply},\n @samp{cortex-m0plus.small-multiply},\n @samp{exynos-m1},\n-@samp{falkor},\n-@samp{qdf24xx},\n @samp{marvell-pj4},\n @samp{xscale}, @samp{iwmmxt}, @samp{iwmmxt2}, @samp{ep9312},\n @samp{fa526}, @samp{fa626},\n@@ -15510,12 +15508,15 @@ processors, balancing between optimizations that benefit some CPUs in the\n range, and avoiding performance pitfalls of other CPUs.  The effects of\n this option may change in future GCC versions as CPU models come and go.\n \n+@option{-mtune} permits the same extension options as @option{-mcpu}, but\n+the extension options do not affect the tuning of the generated code.\n+\n @option{-mtune=native} causes the compiler to auto-detect the CPU\n of the build computer.  At present, this feature is only supported on\n GNU/Linux, and not all architectures are recognized.  If the auto-detect is\n unsuccessful the option has no effect.\n \n-@item -mcpu=@var{name}\n+@item -mcpu=@var{name@r{[}+extension@dots{}@r{]}}\n @opindex mcpu\n This specifies the name of the target ARM processor.  GCC uses this name\n to derive the name of the target ARM architecture (as if specified\n@@ -15524,9 +15525,62 @@ performance (as if specified by @option{-mtune}).  Where this option\n is used in conjunction with @option{-march} or @option{-mtune},\n those options take precedence over the appropriate part of this option.\n \n+Many of the supported CPUs implement optional architectural\n+extensions.  Where this is so the architectural extensions are\n+normally enabled by default.  If implementations that lack the\n+extension exist, then the extension syntax can be used to disable\n+those extensions that have been omitted.  For floating-point and\n+Advanced SIMD (Neon) instructions, the settings of the options\n+@option{-mfloat-abi} and @option{-mfpu} must also be considered:\n+floating-point and Advanced SIMD instructions will only be used if\n+@option{-mfloat-abi} is not set to @samp{soft}; and any setting of\n+@option{-mfpu} other than @samp{auto} will override the available\n+floating-point and SIMD extension instructions.\n+\n+For example, @samp{cortex-a9} can be found in three major\n+configurations: integer only, with just a floating-point unit or with\n+floating-point and Advanced SIMD.  The default is to enable all the\n+instructions, but the extensions @samp{+nosimd} and @samp{+nofp} can\n+be used to disable just the SIMD or both the SIMD and floating-point\n+instructions respectively.\n+\n Permissible names for this option are the same as those for\n @option{-mtune}.\n \n+The following extension options are common to the listed CPUs:\n+\n+@table @samp\n+@item  +nofp\n+Disables the floating-point instructions on @samp{arm9e},\n+@samp{arm946e-s}, @samp{arm966e-s}, @samp{arm968e-s}, @samp{arm10e},\n+@samp{arm1020e}, @samp{arm1022e}, @samp{arm926ej-s},\n+@samp{arm1026ej-s}, @samp{cortex-r5}, @samp{cortex-r7}, @samp{cortex-r8},\n+@samp{cortex-m4}, @samp{cortex-m7} and @samp{cortex-m33}.\n+Disables the floating-point and SIMD instructions on\n+@samp{generic-armv7-a}, @samp{cortex-a5}, @samp{cortex-a7},\n+@samp{cortex-a8}, @samp{cortex-a9}, @samp{cortex-a12},\n+@samp{cortex-a15}, @samp{cortex-a17}, @samp{cortex-a15.cortex-a7},\n+@samp{cortex-a17.cortex-a7}, @samp{cortex-a32}, @samp{cortex-a35}\n+and @samp{cortex-a53}.\n+\n+@item +nofp.dp\n+Disables the double-precision component of the floating-point instructions\n+on @samp{cortex-r5} and @samp{cortex-m7}.\n+\n+@item +nosimd\n+Disables the SIMD (but not floating-point) instructions on\n+@samp{generic-armv7-a}, @samp{cortex-a5}, @samp{cortex-a7}\n+and @samp{cortex-a9}.\n+@end table\n+\n+Additionally the @samp{generic-armv7-a} pseudo target defaults to\n+VFPv3 with 16 double-precision registers.  It supports the following\n+extension options: @samp{vfpv3-d16}, @samp{vfpv3},\n+@samp{vfpv3-d16-fp16}, @samp{vfpv3-fp16}, @samp{vfpv4-d16},\n+@samp{vfpv4}, @samp{neon}, @samp{neon-vfpv3}, @samp{neon-fp16},\n+@samp{neon-vfpv4}.  The meanings are the same as for the extensions to\n+@option{-march=armv7-a}.\n+\n @option{-mcpu=generic-@var{arch}} is also permissible, and is\n equivalent to @option{-march=@var{arch} -mtune=generic-@var{arch}}.\n See @option{-mtune} for more information.\n@@ -15539,7 +15593,8 @@ is unsuccessful the option has no effect.\n @item -mfpu=@var{name}\n @opindex mfpu\n This specifies what floating-point hardware (or hardware emulation) is\n-available on the target.  Permissible names are: @samp{vfpv2}, @samp{vfpv3},\n+available on the target.  Permissible names are: @samp{auto}, @samp{vfpv2},\n+@samp{vfpv3},\n @samp{vfpv3-fp16}, @samp{vfpv3-d16}, @samp{vfpv3-d16-fp16}, @samp{vfpv3xd},\n @samp{vfpv3xd-fp16}, @samp{neon-vfpv3}, @samp{neon-fp16}, @samp{vfpv4},\n @samp{vfpv4-d16}, @samp{fpv4-sp-d16}, @samp{neon-vfpv4},\n@@ -15548,11 +15603,12 @@ available on the target.  Permissible names are: @samp{vfpv2}, @samp{vfpv3},\n Note that @samp{neon} is an alias for @samp{neon-vfpv3} and @samp{vfp}\n is an alias for @samp{vfpv2}.\n \n-If @option{-msoft-float} is specified this specifies the format of\n-floating-point values.\n+The setting @samp{auto} is the default and is special.  It causes the\n+compiler to select the floating-point and Advanced SIMD instructions\n+based on the settings of @option{-mcpu} and @option{-march}.\n \n If the selected floating-point hardware includes the NEON extension\n-(e.g. @option{-mfpu}=@samp{neon}), note that floating-point\n+(e.g. @option{-mfpu=neon}), note that floating-point\n operations are not generated by GCC's auto-vectorization pass unless\n @option{-funsafe-math-optimizations} is also specified.  This is\n because NEON hardware does not fully implement the IEEE 754 standard for"}]}