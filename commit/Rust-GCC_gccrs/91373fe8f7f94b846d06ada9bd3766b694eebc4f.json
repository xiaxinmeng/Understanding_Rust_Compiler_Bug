{"sha": "91373fe8f7f94b846d06ada9bd3766b694eebc4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTEzNzNmZThmN2Y5NGI4NDZkMDZhZGE5YmQzNzY2YjY5NGVlYmM0Zg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-12-05T04:05:59Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-12-05T04:05:59Z"}, "message": "re PR middle-end/18730 (cppexp.c:1076: error: unrecognizable insn)\n\n\tPR middle-end/18730\n\t* emit-rtl.c (get_first_nonnote_insn, get_last_nonnote_insn): When\n\tthe first/last insn is a sequence, return the first/last insn of the\n\tsequence.\n\nFrom-SVN: r91742", "tree": {"sha": "a481184a6f11891930cc7d8aea7aa98ad956903a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a481184a6f11891930cc7d8aea7aa98ad956903a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91373fe8f7f94b846d06ada9bd3766b694eebc4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91373fe8f7f94b846d06ada9bd3766b694eebc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91373fe8f7f94b846d06ada9bd3766b694eebc4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91373fe8f7f94b846d06ada9bd3766b694eebc4f/comments", "author": null, "committer": null, "parents": [{"sha": "6ac5aa910eb2eacb716ce06825f77f96f1e8eacf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac5aa910eb2eacb716ce06825f77f96f1e8eacf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac5aa910eb2eacb716ce06825f77f96f1e8eacf"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "e889dbc82e89c305aa0a1ba38becaea6f573d1cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91373fe8f7f94b846d06ada9bd3766b694eebc4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91373fe8f7f94b846d06ada9bd3766b694eebc4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91373fe8f7f94b846d06ada9bd3766b694eebc4f", "patch": "@@ -1,5 +1,10 @@\n 2004-12-04  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n+\tPR middle-end/18730\n+\t* emit-rtl.c (get_first_nonnote_insn, get_last_nonnote_insn): When\n+\tthe first/last insn is a sequence, return the first/last insn of the\n+\tsequence.\n+\n \tPR bootstrap/18804\n \t* mklibgcc.in (vis_hide): Use implementation instead of declaration\n \tfor test function."}, {"sha": "793e2df8da466a3bbd87e463f20429af74994ad3", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91373fe8f7f94b846d06ada9bd3766b694eebc4f/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91373fe8f7f94b846d06ada9bd3766b694eebc4f/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=91373fe8f7f94b846d06ada9bd3766b694eebc4f", "patch": "@@ -2712,9 +2712,23 @@ get_last_insn_anywhere (void)\n rtx\n get_first_nonnote_insn (void)\n {\n-  rtx insn;\n+  rtx insn = first_insn;\n+\n+  if (insn)\n+    {\n+      if (NOTE_P (insn))\n+\tfor (insn = next_insn (insn);\n+\t     insn && NOTE_P (insn);\n+\t     insn = next_insn (insn))\n+\t  continue;\n+      else\n+\t{\n+\t  if (GET_CODE (insn) == INSN\n+\t      && GET_CODE (PATTERN (insn)) == SEQUENCE)\n+\t    insn = XVECEXP (PATTERN (insn), 0, 0);\n+\t}\n+    }\n \n-  for (insn = first_insn; insn && NOTE_P (insn); insn = next_insn (insn));\n   return insn;\n }\n \n@@ -2724,9 +2738,24 @@ get_first_nonnote_insn (void)\n rtx\n get_last_nonnote_insn (void)\n {\n-  rtx insn;\n+  rtx insn = last_insn;\n+\n+  if (insn)\n+    {\n+      if (NOTE_P (insn))\n+\tfor (insn = previous_insn (insn);\n+\t     insn && NOTE_P (insn);\n+\t     insn = previous_insn (insn))\n+\t  continue;\n+      else\n+\t{\n+\t  if (GET_CODE (insn) == INSN\n+\t      && GET_CODE (PATTERN (insn)) == SEQUENCE)\n+\t    insn = XVECEXP (PATTERN (insn), 0,\n+\t\t\t    XVECLEN (PATTERN (insn), 0) - 1);\n+\t}\n+    }\n \n-  for (insn = last_insn; insn && NOTE_P (insn); insn = previous_insn (insn));\n   return insn;\n }\n "}]}