{"sha": "6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3", "node_id": "C_kwDOANBUbNoAKDZjMjljOWQ2YTdkODBlY2U3ZTA4ZWI1NDZjYTRhMWJhMTQzMGE5YjM", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-11-13T11:16:40Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-11-15T16:31:50Z"}, "message": "Drop tree overflow in irange setter.\n\nDrop meaningless overflow that may creep into the IL.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/103207\n\t* value-range.cc (irange::set): Drop overflow.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/pr103207.c: New test.", "tree": {"sha": "8ab93363ee08ab07a33ed103fbc4d0f799114a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ab93363ee08ab07a33ed103fbc4d0f799114a30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82ec4cb3c43c7429be6b902d96770a6435fa068b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ec4cb3c43c7429be6b902d96770a6435fa068b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ec4cb3c43c7429be6b902d96770a6435fa068b"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "69c0f555f86c95f19ab0d3e884fa6a8e4520cd32", "filename": "gcc/testsuite/gcc.dg/pr103207.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103207.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103207.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr103207.c?ref=6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 --param case-values-threshold=1 -w\" }\n+\n+int f (int i)\n+{\n+  switch (i) {\n+  case 2147483647:\n+    return 1;\n+  case 9223372036854775807L:\n+    return 2;\n+  case (2147483647*4)%4:\n+    return 4;\n+  }\n+  return 0;\n+}"}, {"sha": "82509fa55a7a4913400e3b88be882cc574cbf01e", "filename": "gcc/value-range.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=6c29c9d6a7d80ece7e08eb546ca4a1ba1430a9b3", "patch": "@@ -270,6 +270,14 @@ irange::irange_set_anti_range (tree min, tree max)\n void\n irange::set (tree min, tree max, value_range_kind kind)\n {\n+  if (kind != VR_UNDEFINED)\n+    {\n+      if (TREE_OVERFLOW_P (min))\n+\tmin = drop_tree_overflow (min);\n+      if (TREE_OVERFLOW_P (max))\n+\tmax = drop_tree_overflow (max);\n+    }\n+\n   if (!legacy_mode_p ())\n     {\n       if (kind == VR_RANGE)"}]}