{"sha": "d0a3d55ae4a2656f7c306c9345ba14853b4075d5", "node_id": "C_kwDOANBUbNoAKGQwYTNkNTVhZTRhMjY1NmY3YzMwNmM5MzQ1YmExNDg1M2I0MDc1ZDU", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-30T14:01:06Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-30T14:01:47Z"}, "message": "switch conversion: remove dead variable\n\ngcc/ChangeLog:\n\n\t* tree-switch-conversion.cc (bit_test_cluster::emit): Remove\n\tdead variable bt_range.", "tree": {"sha": "d929127be5fec05a97af1debd23d754f4d9ed6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d929127be5fec05a97af1debd23d754f4d9ed6aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0a3d55ae4a2656f7c306c9345ba14853b4075d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a3d55ae4a2656f7c306c9345ba14853b4075d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a3d55ae4a2656f7c306c9345ba14853b4075d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a3d55ae4a2656f7c306c9345ba14853b4075d5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2e272ba76b3bfda4a04b0c89ba984f6f6f2d7ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e272ba76b3bfda4a04b0c89ba984f6f6f2d7ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2e272ba76b3bfda4a04b0c89ba984f6f6f2d7ea"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "1d75d7c7fc734ffd9549e57b0b6c98540710a033", "filename": "gcc/tree-switch-conversion.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a3d55ae4a2656f7c306c9345ba14853b4075d5/gcc%2Ftree-switch-conversion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a3d55ae4a2656f7c306c9345ba14853b4075d5/gcc%2Ftree-switch-conversion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.cc?ref=d0a3d55ae4a2656f7c306c9345ba14853b4075d5", "patch": "@@ -1518,7 +1518,6 @@ bit_test_cluster::emit (tree index_expr, tree index_type,\n \n   tree minval = get_low ();\n   tree maxval = get_high ();\n-  unsigned HOST_WIDE_INT bt_range = get_range (minval, maxval);\n \n   /* Go through all case labels, and collect the case labels, profile\n      counts, and other information we need to build the branch tests.  */\n@@ -1676,7 +1675,6 @@ bit_test_cluster::emit (tree index_expr, tree index_type,\n     {\n       profile_probability prob = test[k].prob / (subtree_prob + default_prob);\n       subtree_prob -= test[k].prob;\n-      bt_range -= test[k].bits;\n       tmp = wide_int_to_tree (word_type_node, test[k].mask);\n       tmp = fold_build2_loc (loc, BIT_AND_EXPR, word_type_node, csui, tmp);\n       tmp = fold_build2_loc (loc, NE_EXPR, boolean_type_node,"}]}