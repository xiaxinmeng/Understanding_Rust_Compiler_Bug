{"sha": "f972b2cb9d8f9b1689df010f08cec6f2cb30d93c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk3MmIyY2I5ZDhmOWIxNjg5ZGYwMTBmMDhjZWM2ZjJjYjMwZDkzYw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2007-07-03T19:13:00Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2007-07-03T19:13:00Z"}, "message": "* tree.h (DECL_ALIGN): Prevent use on a FUNCTION_DECL.\n\nFrom-SVN: r126270", "tree": {"sha": "1f00cfca13ba6cc72d6ba3c2fe124bb529ce6016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f00cfca13ba6cc72d6ba3c2fe124bb529ce6016"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f972b2cb9d8f9b1689df010f08cec6f2cb30d93c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f972b2cb9d8f9b1689df010f08cec6f2cb30d93c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f972b2cb9d8f9b1689df010f08cec6f2cb30d93c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f972b2cb9d8f9b1689df010f08cec6f2cb30d93c/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0bacb8c7487e559d2f6536eeb4aa30747d214182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bacb8c7487e559d2f6536eeb4aa30747d214182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bacb8c7487e559d2f6536eeb4aa30747d214182"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f9413cd1bd0dbafc199e11f15294f4df1b2408cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f972b2cb9d8f9b1689df010f08cec6f2cb30d93c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f972b2cb9d8f9b1689df010f08cec6f2cb30d93c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f972b2cb9d8f9b1689df010f08cec6f2cb30d93c", "patch": "@@ -1,3 +1,7 @@\n+2007-07-03  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* tree.h (DECL_ALIGN): Prevent use on a FUNCTION_DECL.\n+\n 2007-07-03  Tom Tromey  <tromey@redhat.com>\n \n \t* c-parser.c (objc_pq_context): Removed."}, {"sha": "98457792771ea4088d5522ada495a7f43c07cddd", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f972b2cb9d8f9b1689df010f08cec6f2cb30d93c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f972b2cb9d8f9b1689df010f08cec6f2cb30d93c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=f972b2cb9d8f9b1689df010f08cec6f2cb30d93c", "patch": "@@ -2586,7 +2586,7 @@ struct tree_memory_partition_tag GTY(())\n /* Likewise for the size in bytes.  */\n #define DECL_SIZE_UNIT(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.size_unit)\n /* Holds the alignment required for the datum, in bits.  */\n-#define DECL_ALIGN(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.u1.a.align)\n+#define DECL_ALIGN(NODE) (TREE_NOT_CHECK (DECL_COMMON_CHECK (NODE), FUNCTION_DECL)->decl_common.u1.a.align)\n /* The alignment of NODE, in bytes.  */\n #define DECL_ALIGN_UNIT(NODE) (DECL_ALIGN (NODE) / BITS_PER_UNIT)\n /* For FIELD_DECLs, off_align holds the number of low-order bits of"}]}