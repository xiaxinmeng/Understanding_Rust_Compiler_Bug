{"sha": "dc06db201983bfe0126fb1ad0646713969be0445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMwNmRiMjAxOTgzYmZlMDEyNmZiMWFkMDY0NjcxMzk2OWJlMDQ0NQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-06-03T19:01:22Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-06-03T19:01:22Z"}, "message": "configure.in (inhibit_libc): Don't define when configuring with --with-newlib --with-headers.\n\n\t* configure.in (inhibit_libc): Don't define when configuring\n\twith --with-newlib --with-headers.\n\t* configure: Regenerate.\n\n\t* t-sh: Remove LIB2FUNCS_EXTRA and embed-bb.c rules.\n\nFrom-SVN: r67396", "tree": {"sha": "40aca41ad2fa374f0609af84d0b46883d128809f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40aca41ad2fa374f0609af84d0b46883d128809f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc06db201983bfe0126fb1ad0646713969be0445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc06db201983bfe0126fb1ad0646713969be0445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc06db201983bfe0126fb1ad0646713969be0445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc06db201983bfe0126fb1ad0646713969be0445/comments", "author": null, "committer": null, "parents": [{"sha": "8d398258b5f8b6887fd3b7905d4bc3ddf273bfae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d398258b5f8b6887fd3b7905d4bc3ddf273bfae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d398258b5f8b6887fd3b7905d4bc3ddf273bfae"}], "stats": {"total": 95, "additions": 49, "deletions": 46}, "files": [{"sha": "4afe2f71e45c22d4702e9cba8642eb9a0183b98a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc06db201983bfe0126fb1ad0646713969be0445/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc06db201983bfe0126fb1ad0646713969be0445/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc06db201983bfe0126fb1ad0646713969be0445", "patch": "@@ -1,3 +1,11 @@\n+2003-05-23  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* configure.in (inhibit_libc): Don't define when configuring\n+\twith --with-newlib --with-headers.\n+\t* configure: Regenerate.\n+\n+\t* t-sh: Remove LIB2FUNCS_EXTRA and embed-bb.c rules.\n+\n 2003-06-03  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* configure.in (gcc_cv_as_hidden): Disable .hidden completely on"}, {"sha": "15aaba1ece68948a7d8a2942f701a266dc293adc", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc06db201983bfe0126fb1ad0646713969be0445/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc06db201983bfe0126fb1ad0646713969be0445/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=dc06db201983bfe0126fb1ad0646713969be0445", "patch": "@@ -3,15 +3,6 @@ LIB1ASMFUNCS = _ashiftrt _ashiftrt_n _ashiftlt _lshiftrt _movstr \\\n   _movstr_i4 _mulsi3 _sdivsi3 _sdivsi3_i4 _udivsi3 _udivsi3_i4 _set_fpscr \\\n   $(LIB1ASMFUNCS_CACHE)\n \n-LIB2FUNCS_EXTRA=embed-bb.c\n-\n-embed-bb.c: $(srcdir)/libgcc2.c\n-\techo '#ifdef inhibit_libc' > $@\n-\techo '#define L_bb' >> $@\n-\techo '#undef inhibit_libc' >> $@\n-\tcat $< >> $@\n-\techo '#endif' >> $@\n-\n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries.\n FPBIT = fp-bit.c"}, {"sha": "56dc0d6c546488143fa10798c63c7c5c07f8a7e8", "filename": "gcc/configure", "status": "modified", "additions": 36, "deletions": 34, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc06db201983bfe0126fb1ad0646713969be0445/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc06db201983bfe0126fb1ad0646713969be0445/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=dc06db201983bfe0126fb1ad0646713969be0445", "patch": "@@ -2434,7 +2434,7 @@ fi\n \n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -7391,12 +7391,14 @@ fi\n # have its own set of headers then define\n # inhibit_libc\n \n-# If this is using newlib, then define inhibit_libc in LIBGCC2_CFLAGS.\n+# If this is using newlib, without having the headers available now,\n+# then define inhibit_libc in LIBGCC2_CFLAGS.\n # This prevents libgcc2 from containing any code which requires libc\n # support.\n inhibit_libc=\n-if { test x$host != x$target && test \"x$with_headers\" = x &&\n-     test \"x$with_sysroot\" = x ; } || test x$with_newlib = xyes ; then\n+if { { test x$host != x$target && test \"x$with_sysroot\" = x ; } ||\n+       test x$with_newlib = xyes ; } &&\n+     test \"x$with_headers\" = x ; then\n        inhibit_libc=-Dinhibit_libc\n fi\n \n@@ -7459,7 +7461,7 @@ esac\n # build->target assembler and hope that it will have the same features\n # as the host->target assembler we'll be using.\n echo $ac_n \"checking what assembler to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7463: checking what assembler to use\" >&5\n+echo \"configure:7465: checking what assembler to use\" >&5\n in_tree_gas=no\n gcc_cv_as=\n gcc_cv_gas_major_version=\n@@ -7570,7 +7572,7 @@ esac\n # build->target linker and hope that it will have the same features\n # as the host->target linker we'll be using.\n echo $ac_n \"checking what linker to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7574: checking what linker to use\" >&5\n+echo \"configure:7576: checking what linker to use\" >&5\n in_tree_ld=no\n gcc_cv_ld=\n gcc_cv_gld_major_version=\n@@ -7673,7 +7675,7 @@ esac\n # Figure out what nm we will be using.\n gcc_cv_binutils_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/binutils\n echo $ac_n \"checking what nm to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7677: checking what nm to use\" >&5\n+echo \"configure:7679: checking what nm to use\" >&5\n in_tree_nm=no\n if test -x nm$host_exeext; then\n \tgcc_cv_nm=./nm$host_exeext\n@@ -7696,7 +7698,7 @@ esac\n \n # Figure out what objdump we will be using.\n echo $ac_n \"checking what objdump to use\"\"... $ac_c\" 1>&6\n-echo \"configure:7700: checking what objdump to use\" >&5\n+echo \"configure:7702: checking what objdump to use\" >&5\n in_tree_objdump=no\n if test -x objdump$host_exeext; then\n \tgcc_cv_objdump=./objdump$host_exeext\n@@ -7721,7 +7723,7 @@ esac\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:7725: checking assembler alignment features\" >&5\n+echo \"configure:7727: checking assembler alignment features\" >&5\n gcc_cv_as_alignment_features=none\n if test $in_tree_gas = yes; then\n   # Gas version 2.6 and later support for .balign and .p2align.\n@@ -7782,7 +7784,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:7786: checking assembler subsection support\" >&5\n+echo \"configure:7788: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7831,7 +7833,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n echo $ac_n \"checking assembler weak support\"\"... $ac_c\" 1>&6\n-echo \"configure:7835: checking assembler weak support\" >&5\n+echo \"configure:7837: checking assembler weak support\" >&5\n gcc_cv_as_weak=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7861,7 +7863,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_weak\" 1>&6\n \n echo $ac_n \"checking assembler hidden support\"\"... $ac_c\" 1>&6\n-echo \"configure:7865: checking assembler hidden support\" >&5\n+echo \"configure:7867: checking assembler hidden support\" >&5\n gcc_cv_as_hidden=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7942,7 +7944,7 @@ libgcc_visibility=$gcc_cv_as_hidden\n \n \n echo $ac_n \"checking assembler leb128 support\"\"... $ac_c\" 1>&6\n-echo \"configure:7946: checking assembler leb128 support\" >&5\n+echo \"configure:7948: checking assembler leb128 support\" >&5\n gcc_cv_as_leb128=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -7996,7 +7998,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_leb128\" 1>&6\n \n echo $ac_n \"checking assembler eh_frame optimization\"\"... $ac_c\" 1>&6\n-echo \"configure:8000: checking assembler eh_frame optimization\" >&5\n+echo \"configure:8002: checking assembler eh_frame optimization\" >&5\n gcc_cv_as_eh_frame=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8086,7 +8088,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_eh_frame\" 1>&6\n \n echo $ac_n \"checking assembler section merging support\"\"... $ac_c\" 1>&6\n-echo \"configure:8090: checking assembler section merging support\" >&5\n+echo \"configure:8092: checking assembler section merging support\" >&5\n gcc_cv_as_shf_merge=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8118,7 +8120,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_shf_merge\" 1>&6\n \n echo $ac_n \"checking assembler thread-local storage support\"\"... $ac_c\" 1>&6\n-echo \"configure:8122: checking assembler thread-local storage support\" >&5\n+echo \"configure:8124: checking assembler thread-local storage support\" >&5\n gcc_cv_as_tls=no\n conftest_s=\n tls_first_major=\n@@ -8323,7 +8325,7 @@ case \"$target\" in\n   # All TARGET_ABI_OSF targets.\n   alpha*-*-osf* | alpha*-*-linux* | alpha*-*-*bsd*)\n     echo $ac_n \"checking assembler supports explicit relocations\"\"... $ac_c\" 1>&6\n-echo \"configure:8327: checking assembler supports explicit relocations\" >&5\n+echo \"configure:8329: checking assembler supports explicit relocations\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_explicit_relocs'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8376,7 +8378,7 @@ EOF\n     ;;\n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:8380: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:8382: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8404,7 +8406,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:8408: checking assembler supports -relax\" >&5\n+echo \"configure:8410: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8432,7 +8434,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler and linker support unaligned pc related relocs\"\"... $ac_c\" 1>&6\n-echo \"configure:8436: checking assembler and linker support unaligned pc related relocs\" >&5\n+echo \"configure:8438: checking assembler and linker support unaligned pc related relocs\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_sparc_ua_pcrel'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8459,7 +8461,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler and linker support unaligned pc related relocs against hidden symbols\"\"... $ac_c\" 1>&6\n-echo \"configure:8463: checking assembler and linker support unaligned pc related relocs against hidden symbols\" >&5\n+echo \"configure:8465: checking assembler and linker support unaligned pc related relocs against hidden symbols\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_sparc_ua_pcrel_hidden'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8499,7 +8501,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:8503: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:8505: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8538,7 +8540,7 @@ EOF\n \n   i[34567]86-*-* | x86_64-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:8542: checking assembler instructions\" >&5\n+echo \"configure:8544: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test $in_tree_gas = yes ; then \n        if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8572,7 +8574,7 @@ EOF\n     echo \"$ac_t\"\"$gcc_cv_as_instructions\" 1>&6\n \n     echo $ac_n \"checking assembler GOTOFF in data directives\"\"... $ac_c\" 1>&6\n-echo \"configure:8576: checking assembler GOTOFF in data directives\" >&5\n+echo \"configure:8578: checking assembler GOTOFF in data directives\" >&5\n     gcc_cv_as_gotoff_in_data=no\n     if test $in_tree_gas = yes ; then\n        if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8606,7 +8608,7 @@ EOF\n \n   ia64*-*-*)\n     echo $ac_n \"checking assembler supports ltoffx and ldxmov\"\"... $ac_c\" 1>&6\n-echo \"configure:8610: checking assembler supports ltoffx and ldxmov\" >&5\n+echo \"configure:8612: checking assembler supports ltoffx and ldxmov\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_ltoffx_ldxmov_relocs'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8651,7 +8653,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:8655: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:8657: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -8713,7 +8715,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_dwarf2_debug_line\" 1>&6\n \n echo $ac_n \"checking assembler --gdwarf2 support\"\"... $ac_c\" 1>&6\n-echo \"configure:8717: checking assembler --gdwarf2 support\" >&5\n+echo \"configure:8719: checking assembler --gdwarf2 support\" >&5\n gcc_cv_as_gdwarf2_flag=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8747,7 +8749,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gdwarf2_flag\" 1>&6\n \n echo $ac_n \"checking assembler --gstabs support\"\"... $ac_c\" 1>&6\n-echo \"configure:8751: checking assembler --gstabs support\" >&5\n+echo \"configure:8753: checking assembler --gstabs support\" >&5\n gcc_cv_as_gstabs_flag=no\n if test $in_tree_gas = yes ; then\n    if test $gcc_cv_gas_major_version -eq 2 \\\n@@ -8780,7 +8782,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gstabs_flag\" 1>&6\n \n echo $ac_n \"checking linker read-only and read-write section mixing\"\"... $ac_c\" 1>&6\n-echo \"configure:8784: checking linker read-only and read-write section mixing\" >&5\n+echo \"configure:8786: checking linker read-only and read-write section mixing\" >&5\n gcc_cv_ld_ro_rw_mix=unknown\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 10 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8818,7 +8820,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_ld_ro_rw_mix\" 1>&6\n \n echo $ac_n \"checking linker PT_GNU_EH_FRAME support\"\"... $ac_c\" 1>&6\n-echo \"configure:8822: checking linker PT_GNU_EH_FRAME support\" >&5\n+echo \"configure:8824: checking linker PT_GNU_EH_FRAME support\" >&5\n gcc_cv_ld_eh_frame_hdr=no\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 12 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8839,7 +8841,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_ld_eh_frame_hdr\" 1>&6\n \n echo $ac_n \"checking linker position independent executable support\"\"... $ac_c\" 1>&6\n-echo \"configure:8843: checking linker position independent executable support\" >&5\n+echo \"configure:8845: checking linker position independent executable support\" >&5\n gcc_cv_ld_pie=no\n if test $in_tree_ld = yes ; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 15 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8863,7 +8865,7 @@ echo \"$ac_t\"\"$gcc_cv_ld_pie\" 1>&6\n case \"$target\" in\n   mips*-*-*)\n     echo $ac_n \"checking whether libgloss uses STARTUP directives consistently\"\"... $ac_c\" 1>&6\n-echo \"configure:8867: checking whether libgloss uses STARTUP directives consistently\" >&5\n+echo \"configure:8869: checking whether libgloss uses STARTUP directives consistently\" >&5\n     gcc_cv_mips_libgloss_startup=no\n     gcc_cv_libgloss_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/libgloss\n     if test \"x$exec_prefix\" = xNONE; then\n@@ -8891,7 +8893,7 @@ EOF\n     echo \"$ac_t\"\"$gcc_cv_mips_libgloss_startup\" 1>&6\n \n     echo $ac_n \"checking whether the assembler has explicit relocation support\"\"... $ac_c\" 1>&6\n-echo \"configure:8895: checking whether the assembler has explicit relocation support\" >&5\n+echo \"configure:8897: checking whether the assembler has explicit relocation support\" >&5\n     if test x$gcc_cv_mips_explicit_relocs = x; then\n       gcc_cv_mips_explicit_relocs=no\n       if test x$gcc_cv_as != x; then\n@@ -9086,7 +9088,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:9090: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:9092: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "473bfe2802b53f0be9265ea47bf2d5340bb4f993", "filename": "gcc/configure.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc06db201983bfe0126fb1ad0646713969be0445/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc06db201983bfe0126fb1ad0646713969be0445/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=dc06db201983bfe0126fb1ad0646713969be0445", "patch": "@@ -1415,12 +1415,14 @@ fi\n # have its own set of headers then define\n # inhibit_libc\n \n-# If this is using newlib, then define inhibit_libc in LIBGCC2_CFLAGS.\n+# If this is using newlib, without having the headers available now,\n+# then define inhibit_libc in LIBGCC2_CFLAGS.\n # This prevents libgcc2 from containing any code which requires libc\n # support.\n inhibit_libc=\n-if { test x$host != x$target && test \"x$with_headers\" = x &&\n-     test \"x$with_sysroot\" = x ; } || test x$with_newlib = xyes ; then\n+if { { test x$host != x$target && test \"x$with_sysroot\" = x ; } ||\n+       test x$with_newlib = xyes ; } &&\n+     test \"x$with_headers\" = x ; then\n        inhibit_libc=-Dinhibit_libc\n fi\n AC_SUBST(inhibit_libc)"}]}