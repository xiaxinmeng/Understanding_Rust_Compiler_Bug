{"sha": "9b46e4d6dd90b2569c002d5c810eaaf172ac252f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI0NmU0ZDZkZDkwYjI1NjljMDAyZDVjODEwZWFhZjE3MmFjMjUyZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-01T12:17:43Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-01T12:17:43Z"}, "message": "Run std::ios_base enum tests for C++11 and up\n\n\t* testsuite/27_io/ios_base/types/fmtflags/case_label.cc: Make test\n\tsupported for C++11 and later.\n\t* testsuite/27_io/ios_base/types/iostate/case_label.cc: Likewise.\n\t* testsuite/27_io/ios_base/types/openmode/case_label.cc: Likewise.\n\nFrom-SVN: r238939", "tree": {"sha": "8ae3dca15a99283befc26fe3e87e94e26583bc36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ae3dca15a99283befc26fe3e87e94e26583bc36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b46e4d6dd90b2569c002d5c810eaaf172ac252f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b46e4d6dd90b2569c002d5c810eaaf172ac252f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b46e4d6dd90b2569c002d5c810eaaf172ac252f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ed49fab9243af348d76a1c673428199b776797d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed49fab9243af348d76a1c673428199b776797d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ed49fab9243af348d76a1c673428199b776797d"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "63ed47819b3c7c2a8f19a33d9be40ff81b4f3ef7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9b46e4d6dd90b2569c002d5c810eaaf172ac252f", "patch": "@@ -1,3 +1,10 @@\n+2016-08-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/27_io/ios_base/types/fmtflags/case_label.cc: Make test\n+\tsupported for C++11 and later.\n+\t* testsuite/27_io/ios_base/types/iostate/case_label.cc: Likewise.\n+\t* testsuite/27_io/ios_base/types/openmode/case_label.cc: Likewise.\n+\n 2016-08-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/abi/post/alpha-linux-gnu/baseline_symbols.txt: Update."}, {"sha": "c0e94877aaca901e1c90a1ef0904e96a874a8416", "filename": "libstdc++-v3/testsuite/27_io/ios_base/types/fmtflags/case_label.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Ffmtflags%2Fcase_label.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Ffmtflags%2Fcase_label.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Ffmtflags%2Fcase_label.cc?ref=9b46e4d6dd90b2569c002d5c810eaaf172ac252f", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-Wall\" { target *-*-* } }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wall\" }\n // -*- C++ -*-\n  \n // Copyright (C) 2004-2016 Free Software Foundation, Inc.\n@@ -75,6 +75,7 @@ case_labels(bitmask_type b)\n     case ~__INT_MAX__:\n       break;\n     }\n-  static_assert( sizeof(std::underlying_type_t<bitmask_type>) == sizeof(int),\n+  using underlying_type = std::underlying_type<bitmask_type>::type;\n+  static_assert( sizeof(underlying_type) == sizeof(int),\n       \"underlying type has same range of values as int\");\n }"}, {"sha": "5ca9f5f875958c63ba7cb14630ee1e628056ab7a", "filename": "libstdc++-v3/testsuite/27_io/ios_base/types/iostate/case_label.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fiostate%2Fcase_label.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fiostate%2Fcase_label.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fiostate%2Fcase_label.cc?ref=9b46e4d6dd90b2569c002d5c810eaaf172ac252f", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-Wall\" { target *-*-* } }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wall\" }\n // -*- C++ -*-\n  \n // Copyright (C) 2004-2016 Free Software Foundation, Inc.\n@@ -47,6 +47,7 @@ case_labels(bitmask_type b)\n     case ~__INT_MAX__:\n       break;\n     }\n-  static_assert( sizeof(std::underlying_type_t<bitmask_type>) == sizeof(int),\n+  using underlying_type = std::underlying_type<bitmask_type>::type;\n+  static_assert( sizeof(underlying_type) == sizeof(int),\n       \"underlying type has same range of values as int\");\n }"}, {"sha": "14a4984105b54fa2d0557d4328b8981041d9f604", "filename": "libstdc++-v3/testsuite/27_io/ios_base/types/openmode/case_label.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fopenmode%2Fcase_label.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b46e4d6dd90b2569c002d5c810eaaf172ac252f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fopenmode%2Fcase_label.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fopenmode%2Fcase_label.cc?ref=9b46e4d6dd90b2569c002d5c810eaaf172ac252f", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile }\n-// { dg-options \"-Wall\" { target *-*-* } }\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wall\" }\n // -*- C++ -*-\n  \n // Copyright (C) 2004-2016 Free Software Foundation, Inc.\n@@ -51,6 +51,7 @@ case_labels(bitmask_type b)\n     case ~__INT_MAX__:\n       break;\n     }\n-  static_assert( sizeof(std::underlying_type_t<bitmask_type>) == sizeof(int),\n+  using underlying_type = std::underlying_type<bitmask_type>::type;\n+  static_assert( sizeof(underlying_type) == sizeof(int),\n       \"underlying type has same range of values as int\");\n }"}]}