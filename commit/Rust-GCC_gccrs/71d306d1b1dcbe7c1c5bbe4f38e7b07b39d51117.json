{"sha": "71d306d1b1dcbe7c1c5bbe4f38e7b07b39d51117", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFkMzA2ZDFiMWRjYmU3YzFjNWJiZTRmMzhlN2IwN2IzOWQ1MTExNw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-06-26T21:21:38Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-06-26T21:21:38Z"}, "message": "Delete erroneous references to (pseudo) in comments.\n\nFrom-SVN: r14325", "tree": {"sha": "277aa0f0bb31a59e0bf8e88a2bad36d60f7b8120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/277aa0f0bb31a59e0bf8e88a2bad36d60f7b8120"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71d306d1b1dcbe7c1c5bbe4f38e7b07b39d51117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d306d1b1dcbe7c1c5bbe4f38e7b07b39d51117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d306d1b1dcbe7c1c5bbe4f38e7b07b39d51117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d306d1b1dcbe7c1c5bbe4f38e7b07b39d51117/comments", "author": null, "committer": null, "parents": [{"sha": "0da6f3db7dbd26cbe2f8c106c9214b45da647f50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da6f3db7dbd26cbe2f8c106c9214b45da647f50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da6f3db7dbd26cbe2f8c106c9214b45da647f50"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b879651fd0d59ba148bc7d1c0cbd1b33564d240a", "filename": "gcc/cse.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d306d1b1dcbe7c1c5bbe4f38e7b07b39d51117/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d306d1b1dcbe7c1c5bbe4f38e7b07b39d51117/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=71d306d1b1dcbe7c1c5bbe4f38e7b07b39d51117", "patch": "@@ -202,7 +202,7 @@ static int max_qty;\n \n static int next_qty;\n \n-/* Indexed by quantity number, gives the first (or last) (pseudo) register \n+/* Indexed by quantity number, gives the first (or last) register \n    in the chain of registers that currently contain this quantity.  */\n \n static int *qty_first_reg;\n@@ -267,13 +267,13 @@ static rtx prev_insn;\n \n static rtx this_insn;\n \n-/* Index by (pseudo) register number, gives the quantity number\n+/* Index by register number, gives the quantity number\n    of the register's current contents.  */\n \n static int *reg_qty;\n \n-/* Index by (pseudo) register number, gives the number of the next (or\n-   previous) (pseudo) register in the chain of registers sharing the same\n+/* Index by register number, gives the number of the next (or\n+   previous) register in the chain of registers sharing the same\n    value.\n \n    Or -1 if this register is at the end of the chain.\n@@ -283,12 +283,12 @@ static int *reg_qty;\n static int *reg_next_eqv;\n static int *reg_prev_eqv;\n \n-/* Index by (pseudo) register number, gives the number of times\n+/* Index by register number, gives the number of times\n    that register has been altered in the current basic block.  */\n \n static int *reg_tick;\n \n-/* Index by (pseudo) register number, gives the reg_tick value at which\n+/* Index by register number, gives the reg_tick value at which\n    rtx's containing this register are valid in the hash table.\n    If this does not equal the current reg_tick value, such expressions\n    existing in the hash table are invalid."}]}