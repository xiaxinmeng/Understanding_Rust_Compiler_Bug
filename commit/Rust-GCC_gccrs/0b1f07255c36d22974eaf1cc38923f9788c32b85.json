{"sha": "0b1f07255c36d22974eaf1cc38923f9788c32b85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIxZjA3MjU1YzM2ZDIyOTc0ZWFmMWNjMzg5MjNmOTc4OGMzMmI4NQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1999-12-16T06:13:46Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1999-12-16T06:13:46Z"}, "message": "Add new tests for long long spanning reg/stack\n\nFrom-SVN: r30967", "tree": {"sha": "79c34d9d04b92beab232468398ff8e361a852af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79c34d9d04b92beab232468398ff8e361a852af5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b1f07255c36d22974eaf1cc38923f9788c32b85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1f07255c36d22974eaf1cc38923f9788c32b85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b1f07255c36d22974eaf1cc38923f9788c32b85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1f07255c36d22974eaf1cc38923f9788c32b85/comments", "author": null, "committer": null, "parents": [{"sha": "58010b57a6232b4d2ed0e07e47601b3fca6f958d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58010b57a6232b4d2ed0e07e47601b3fca6f958d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58010b57a6232b4d2ed0e07e47601b3fca6f958d"}], "stats": {"total": 204, "additions": 204, "deletions": 0}, "files": [{"sha": "ef28f51b398dbce5f399b003763e659ee1962669", "filename": "gcc/testsuite/gcc.c-torture/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b1f07255c36d22974eaf1cc38923f9788c32b85/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b1f07255c36d22974eaf1cc38923f9788c32b85/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog?ref=0b1f07255c36d22974eaf1cc38923f9788c32b85", "patch": "@@ -1,3 +1,9 @@\n+1999-12-16  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* execute/991216-1.c: New test.\n+\t* execute/991216-2.c: New test.\n+\t* execute/991216-3.c: New test.\n+\n 1999-12-14  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* compile/991214-1.c: New test."}, {"sha": "bfedefb1ec31a31e6670aafa1529c26ea85de24a", "filename": "gcc/testsuite/gcc.c-torture/execute/991216-1.c", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b1f07255c36d22974eaf1cc38923f9788c32b85/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b1f07255c36d22974eaf1cc38923f9788c32b85/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-1.c?ref=0b1f07255c36d22974eaf1cc38923f9788c32b85", "patch": "@@ -0,0 +1,116 @@\n+#define VALUE 0x123456789abcdefLL\n+#define AFTER 0x55\n+\n+void\n+test1 (int a, long long value, int after)\n+{\n+  if (a != 1\n+      || value != VALUE\n+      || after != AFTER)\n+    abort ();\n+}\n+\n+void\n+test2 (int a, int b, long long value, int after)\n+{\n+  if (a != 1\n+      || b != 2\n+      || value != VALUE\n+      || after != AFTER)\n+    abort ();\n+}\n+\n+void\n+test3 (int a, int b, int c, long long value, int after)\n+{\n+  if (a != 1\n+      || b != 2\n+      || c != 3\n+      || value != VALUE\n+      || after != AFTER)\n+    abort ();\n+}\n+\n+void\n+test4 (int a, int b, int c, int d, long long value, int after)\n+{\n+  if (a != 1\n+      || b != 2\n+      || c != 3\n+      || d != 4\n+      || value != VALUE\n+      || after != AFTER)\n+    abort ();\n+}\n+\n+void\n+test5 (int a, int b, int c, int d, int e, long long value, int after)\n+{\n+  if (a != 1\n+      || b != 2\n+      || c != 3\n+      || d != 4\n+      || e != 5\n+      || value != VALUE\n+      || after != AFTER)\n+    abort ();\n+}\n+\n+void\n+test6 (int a, int b, int c, int d, int e, int f, long long value, int after)\n+{\n+  if (a != 1\n+      || b != 2\n+      || c != 3\n+      || d != 4\n+      || e != 5\n+      || f != 6\n+      || value != VALUE\n+      || after != AFTER)\n+    abort ();\n+}\n+\n+void\n+test7 (int a, int b, int c, int d, int e, int f, int g, long long value, int after)\n+{\n+  if (a != 1\n+      || b != 2\n+      || c != 3\n+      || d != 4\n+      || e != 5\n+      || f != 6\n+      || g != 7\n+      || value != VALUE\n+      || after != AFTER)\n+    abort ();\n+}\n+\n+void\n+test8 (int a, int b, int c, int d, int e, int f, int g, int h, long long value, int after)\n+{\n+  if (a != 1\n+      || b != 2\n+      || c != 3\n+      || d != 4\n+      || e != 5\n+      || f != 6\n+      || g != 7\n+      || h != 8\n+      || value != VALUE\n+      || after != AFTER)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  test1 (1, VALUE, AFTER);\n+  test2 (1, 2, VALUE, AFTER);\n+  test3 (1, 2, 3, VALUE, AFTER);\n+  test4 (1, 2, 3, 4, VALUE, AFTER);\n+  test5 (1, 2, 3, 4, 5, VALUE, AFTER);\n+  test6 (1, 2, 3, 4, 5, 6, VALUE, AFTER);\n+  test7 (1, 2, 3, 4, 5, 6, 7, VALUE, AFTER);\n+  test8 (1, 2, 3, 4, 5, 6, 7, 8, VALUE, AFTER);\n+  exit (0);\n+}"}, {"sha": "0956135f592f206746ac27520788f3ee73d1cd79", "filename": "gcc/testsuite/gcc.c-torture/execute/991216-2.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b1f07255c36d22974eaf1cc38923f9788c32b85/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b1f07255c36d22974eaf1cc38923f9788c32b85/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-2.c?ref=0b1f07255c36d22974eaf1cc38923f9788c32b85", "patch": "@@ -0,0 +1,40 @@\n+#include <stdarg.h>\n+\n+#define VALUE 0x123456789abcdefLL\n+#define AFTER 0x55\n+\n+void\n+test (int n, ...)\n+{\n+  va_list ap;\n+  int i;\n+\n+  va_start (ap, n);\n+  for (i = 2; i <= n; i++)\n+    {\n+      if (va_arg (ap, int) != i)\n+\tabort ();\n+    }\n+\n+  if (va_arg (ap, long long) != VALUE)\n+    abort ();\n+\n+  if (va_arg (ap, int) != AFTER)\n+    abort ();\n+\n+  va_end (ap);\n+}\n+\n+int\n+main ()\n+{\n+  test (1, VALUE, AFTER);\n+  test (2, 2, VALUE, AFTER);\n+  test (3, 2, 3, VALUE, AFTER);\n+  test (4, 2, 3, 4, VALUE, AFTER);\n+  test (5, 2, 3, 4, 5, VALUE, AFTER);\n+  test (6, 2, 3, 4, 5, 6, VALUE, AFTER);\n+  test (7, 2, 3, 4, 5, 6, 7, VALUE, AFTER);\n+  test (8, 2, 3, 4, 5, 6, 7, 8, VALUE, AFTER);\n+  exit (0);\n+}"}, {"sha": "9c58c16b1e3ad12db9b0805fbcb98f3bee39adaa", "filename": "gcc/testsuite/gcc.c-torture/execute/991216-3.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b1f07255c36d22974eaf1cc38923f9788c32b85/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b1f07255c36d22974eaf1cc38923f9788c32b85/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F991216-3.c?ref=0b1f07255c36d22974eaf1cc38923f9788c32b85", "patch": "@@ -0,0 +1,42 @@\n+#include <varargs.h>\n+\n+#define VALUE 0x123456789abcdefLL\n+#define AFTER 0x55\n+\n+void\n+test (va_alist)\n+     va_dcl\n+{\n+  va_list ap;\n+  int i, n;\n+\n+  va_start (ap);\n+  n = va_arg (ap, int);\n+  for (i = 2; i <= n; i++)\n+    {\n+      if (va_arg (ap, int) != i)\n+\tabort ();\n+    }\n+\n+  if (va_arg (ap, long long) != VALUE)\n+    abort ();\n+\n+  if (va_arg (ap, int) != AFTER)\n+    abort ();\n+\n+  va_end (ap);\n+}\n+\n+int\n+main ()\n+{\n+  test (1, VALUE, AFTER);\n+  test (2, 2, VALUE, AFTER);\n+  test (3, 2, 3, VALUE, AFTER);\n+  test (4, 2, 3, 4, VALUE, AFTER);\n+  test (5, 2, 3, 4, 5, VALUE, AFTER);\n+  test (6, 2, 3, 4, 5, 6, VALUE, AFTER);\n+  test (7, 2, 3, 4, 5, 6, 7, VALUE, AFTER);\n+  test (8, 2, 3, 4, 5, 6, 7, 8, VALUE, AFTER);\n+  exit (0);\n+}"}]}