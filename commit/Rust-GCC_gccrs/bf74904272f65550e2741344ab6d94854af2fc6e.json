{"sha": "bf74904272f65550e2741344ab6d94854af2fc6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY3NDkwNDI3MmY2NTU1MGUyNzQxMzQ0YWI2ZDk0ODU0YWYyZmM2ZQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-10-30T08:38:24Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-10-30T08:38:24Z"}, "message": "Cleanup fipa-pta constraint dumping\n\n2015-10-30  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-ssa-structalias.c (ipa_pta_execute): Declare variable from as\n\tunsigned, and initialize, and use initial value instead of hardcoded\n\tconstant.  Add generic constraints dumping section.  Don't dump global\n\tinitializers constraints dumping section if empty.  Don't update\n\tvariable from if unused.\n\nFrom-SVN: r229569", "tree": {"sha": "7b3d8c58fa42734c3fc0d5fb57b8704a60d3da0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b3d8c58fa42734c3fc0d5fb57b8704a60d3da0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf74904272f65550e2741344ab6d94854af2fc6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf74904272f65550e2741344ab6d94854af2fc6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf74904272f65550e2741344ab6d94854af2fc6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf74904272f65550e2741344ab6d94854af2fc6e/comments", "author": null, "committer": null, "parents": [{"sha": "e28c20522742a9782f6468551f11e3266ea2f823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28c20522742a9782f6468551f11e3266ea2f823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e28c20522742a9782f6468551f11e3266ea2f823"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "e9379ddc4901195ac5aae5ac4d03e7c2c7a1d83f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf74904272f65550e2741344ab6d94854af2fc6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf74904272f65550e2741344ab6d94854af2fc6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf74904272f65550e2741344ab6d94854af2fc6e", "patch": "@@ -1,3 +1,11 @@\n+2015-10-30  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-ssa-structalias.c (ipa_pta_execute): Declare variable from as\n+\tunsigned, and initialize, and use initial value instead of hardcoded\n+\tconstant.  Add generic constraints dumping section.  Don't dump global\n+\tinitializers constraints dumping section if empty.  Don't update\n+\tvariable from if unused.\n+\n 2015-10-29  Mikhail Maltsev  <maltsevm@gmail.com>\n \n \t* config/alpha/alpha.c (alpha_function_arg): Use gcc_checking_assert,"}, {"sha": "55608ef143ab1d3c1d0cc6991e560a7d27ac0ff7", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf74904272f65550e2741344ab6d94854af2fc6e/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf74904272f65550e2741344ab6d94854af2fc6e/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=bf74904272f65550e2741344ab6d94854af2fc6e", "patch": "@@ -7284,7 +7284,7 @@ ipa_pta_execute (void)\n {\n   struct cgraph_node *node;\n   varpool_node *var;\n-  int from;\n+  unsigned int from = 0;\n \n   in_ipa_mode = 1;\n \n@@ -7296,6 +7296,14 @@ ipa_pta_execute (void)\n       fprintf (dump_file, \"\\n\");\n     }\n \n+  if (dump_file)\n+    {\n+      fprintf (dump_file, \"Generating generic constraints\\n\\n\");\n+      dump_constraints (dump_file, from);\n+      fprintf (dump_file, \"\\n\");\n+      from = constraints.length ();\n+    }\n+\n   /* Build the constraints.  */\n   FOR_EACH_DEFINED_FUNCTION (node)\n     {\n@@ -7324,14 +7332,15 @@ ipa_pta_execute (void)\n       get_vi_for_tree (var->decl);\n     }\n \n-  if (dump_file)\n+  if (dump_file\n+      && from != constraints.length ())\n     {\n       fprintf (dump_file,\n \t       \"Generating constraints for global initializers\\n\\n\");\n-      dump_constraints (dump_file, 0);\n+      dump_constraints (dump_file, from);\n       fprintf (dump_file, \"\\n\");\n+      from = constraints.length ();\n     }\n-  from = constraints.length ();\n \n   FOR_EACH_DEFINED_FUNCTION (node)\n     {\n@@ -7416,8 +7425,8 @@ ipa_pta_execute (void)\n \t  fprintf (dump_file, \"\\n\");\n \t  dump_constraints (dump_file, from);\n \t  fprintf (dump_file, \"\\n\");\n+\t  from = constraints.length ();\n \t}\n-      from = constraints.length ();\n     }\n \n   /* From the constraints compute the points-to sets.  */"}]}