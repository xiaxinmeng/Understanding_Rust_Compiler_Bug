{"sha": "ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE2YmU3NDlmOTRlNjAzM2I4YjViY2MyMzkzOWI3YjJmNjhiN2MzZg==", "commit": {"author": {"name": "Walter Lee", "email": "walt@tilera.com", "date": "2016-06-28T16:20:58Z"}, "committer": {"name": "Walter Lee", "email": "walt@gcc.gnu.org", "date": "2016-06-28T16:20:58Z"}, "message": "linux.h: Do not include arch/icache.h\n\ngcc/ChangeLog\n\t* config/tilegx/linux.h: Do not include arch/icache.h\n\t(CLEAR_INSN_CACHE): Provide inlined definition directly.\n\t* config/tilepro/linux.h: Do not include arch/icache.h\n\t(CLEAR_INSN_CACHE): Provide inlined definition directly.\n\nlibgcc/ChangeLog\n\t* config/tilepro/atomic.h: Do not include arch/spr_def.h and\n\tasm/unistd.h.\n\t(SPR_CMPEXCH_VALUE): Define for tilegx.\n\t(__NR_FAST_cmpxchg): Define for tilepro.\n\t(__NR_FAST_atomic_update): Define for tilepro.\n\t(__NR_FAST_cmpxchg64): Define for tilepro.\n\nFrom-SVN: r237824", "tree": {"sha": "638f376e9acfc023865e875b759805bc82409281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/638f376e9acfc023865e875b759805bc82409281"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/comments", "author": {"login": "walt-tilera", "id": 6602917, "node_id": "MDQ6VXNlcjY2MDI5MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/6602917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walt-tilera", "html_url": "https://github.com/walt-tilera", "followers_url": "https://api.github.com/users/walt-tilera/followers", "following_url": "https://api.github.com/users/walt-tilera/following{/other_user}", "gists_url": "https://api.github.com/users/walt-tilera/gists{/gist_id}", "starred_url": "https://api.github.com/users/walt-tilera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walt-tilera/subscriptions", "organizations_url": "https://api.github.com/users/walt-tilera/orgs", "repos_url": "https://api.github.com/users/walt-tilera/repos", "events_url": "https://api.github.com/users/walt-tilera/events{/privacy}", "received_events_url": "https://api.github.com/users/walt-tilera/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77d93c476d047864789829fc6d05a224aee5e85c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d93c476d047864789829fc6d05a224aee5e85c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d93c476d047864789829fc6d05a224aee5e85c"}], "stats": {"total": 70, "additions": 59, "deletions": 11}, "files": [{"sha": "cc515b733ab3c9e499d8a529a4056424846aa0f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "patch": "@@ -1,3 +1,10 @@\n+2016-06-28  Walter Lee  <walt@tilera.com>\n+\n+\t* config/tilegx/linux.h: Do not include arch/icache.h\n+\t(CLEAR_INSN_CACHE): Provide inlined definition directly.\n+\t* config/tilepro/linux.h: Do not include arch/icache.h\n+\t(CLEAR_INSN_CACHE): Provide inlined definition directly.\n+\n 2016-06-28  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* tree-ssa-math-opts.c (find_bswap_or_nop_1): Adjust bitnumbering"}, {"sha": "8ed3d028568d6b7277c726a7165f45679aa34d40", "filename": "gcc/config/tilegx/linux.h", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/gcc%2Fconfig%2Ftilegx%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/gcc%2Fconfig%2Ftilegx%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Flinux.h?ref=ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "patch": "@@ -55,12 +55,23 @@\n /* For __clear_cache in libgcc2.c.  */\n #ifdef IN_LIBGCC2\n \n-#include <arch/icache.h>\n-\n /* Use the minimum page size of 4K.  Alternatively we can call\n-   getpagesize() but it introduces a libc dependence.  */\n+   getpagesize() but it introduces a libc dependence.\n+   See Linux arch/tile/include/uapi/arch/icache.h for more commentary.  */\n #undef CLEAR_INSN_CACHE\n-#define CLEAR_INSN_CACHE(beg, end) invalidate_icache (beg, end - beg, 4096)\n+#define CLEAR_INSN_CACHE(BEG, END)                                      \\\n+{                                                                       \\\n+  long size = (long) (END) - (long) (BEG);                              \\\n+  if (size)                                                             \\\n+    {                                                                   \\\n+      const char *p = (const char *) ((unsigned long) (BEG) & -64L);    \\\n+      const char *end = p + (size < 4096 ? size : 4096) - 1;            \\\n+      __insn_mf ();                                                     \\\n+      for (; p <= end; p += 64)                                         \\\n+        __insn_icoh (p);                                                \\\n+      __insn_drain ();                                                  \\\n+    }                                                                   \\\n+}\n \n #else\n "}, {"sha": "ebe15f4cc91c5e8218d6298893c49e4a72dd2054", "filename": "gcc/config/tilepro/linux.h", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/gcc%2Fconfig%2Ftilepro%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/gcc%2Fconfig%2Ftilepro%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Flinux.h?ref=ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "patch": "@@ -47,12 +47,31 @@\n /* For __clear_cache in libgcc2.c.  */\n #ifdef IN_LIBGCC2\n \n-#include <arch/icache.h>\n-\n-/* Use the minimum page size of 4K.  Alternatively we can call getpagesize()\n-   but it introduces a libc dependence.  */\n+/* Use the minimum page size of 4K.  Alternatively we can call\n+   getpagesize() but it introduces a libc dependence.\n+   See Linux arch/tile/include/uapi/arch/icache.h for more commentary.  */\n #undef CLEAR_INSN_CACHE\n-#define CLEAR_INSN_CACHE(beg, end) invalidate_icache (beg, end - beg, 4096)\n+#define CLEAR_INSN_CACHE(BEG, END)                                      \\\n+{                                                                       \\\n+  long size = (long) (END) - (long) (BEG);                              \\\n+  if (size)                                                             \\\n+    {                                                                   \\\n+      const char *start = (const char *) ((unsigned long) (BEG) & -64L);\\\n+      const char *end =  start + (size < 16384 ? size : 16384) - 1;     \\\n+      long num_passes = 4;                                              \\\n+      __insn_mf ();                                                     \\\n+      do                                                                \\\n+      {                                                                 \\\n+        const char *p;                                                  \\\n+        for (p = start; p <= end; p += 64)                              \\\n+          __insn_icoh (p);                                              \\\n+        start += 4096;                                                  \\\n+        end += 4096;                                                    \\\n+      }                                                                 \\\n+      while (--num_passes > 0);                                         \\\n+      __insn_drain ();                                                  \\\n+    }                                                                   \\\n+}\n \n #else\n "}, {"sha": "8f758e39e11a92df5f91346e53c667c3644a1c1c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "patch": "@@ -1,3 +1,12 @@\n+2016-06-28  Walter Lee  <walt@tilera.com>\n+\n+\t* config/tilepro/atomic.h: Do not include arch/spr_def.h and\n+\tasm/unistd.h.\n+\t(SPR_CMPEXCH_VALUE): Define for tilegx.\n+\t(__NR_FAST_cmpxchg): Define for tilepro.\n+\t(__NR_FAST_atomic_update): Define for tilepro.\n+\t(__NR_FAST_cmpxchg64): Define for tilepro.\n+\n 2016-06-23  Jakub Sejdak  <jakub.sejdak@phoesys.com>\n \n    * config.host: Add suport for arm*-*-phoenix* targets."}, {"sha": "6abe6e143621a65843e724c236a6522941d451b6", "filename": "libgcc/config/tilepro/atomic.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/libgcc%2Fconfig%2Ftilepro%2Fatomic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f/libgcc%2Fconfig%2Ftilepro%2Fatomic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ftilepro%2Fatomic.h?ref=ba6be749f94e6033b8b5bcc23939b7b2f68b7c3f", "patch": "@@ -93,9 +93,11 @@\n #endif\n \n #ifdef __tilegx__\n-#include <arch/spr_def.h>\n+#define SPR_CMPEXCH_VALUE 0x2780\n #else\n-#include <asm/unistd.h>\n+#define __NR_FAST_cmpxchg\t-1\n+#define __NR_FAST_atomic_update\t-2\n+#define __NR_FAST_cmpxchg64\t-3\n #endif\n \n "}]}