{"sha": "56d1b78a4ac49ff3f526222369001f1d717e483e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZkMWI3OGE0YWM0OWZmM2Y1MjYyMjIzNjkwMDFmMWQ3MTdlNDgzZQ==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gmx.de", "date": "2015-02-02T09:59:47Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2015-02-02T09:59:47Z"}, "message": "trans-decl.c (gfc_get_symbol_decl): Removed duplicate code.\n\n\t* trans-decl.c (gfc_get_symbol_decl): Removed duplicate code.\n\t* trans-expr.c (gfc_conv_intrinsic_to_class): Fixed indentation.\n\tFixed datatype of charlen to be a 32-bit int.\n\nFrom-SVN: r220345", "tree": {"sha": "1aef4fe064bf03b726363ccaf7b50cccdd9eb5b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aef4fe064bf03b726363ccaf7b50cccdd9eb5b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56d1b78a4ac49ff3f526222369001f1d717e483e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d1b78a4ac49ff3f526222369001f1d717e483e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56d1b78a4ac49ff3f526222369001f1d717e483e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d1b78a4ac49ff3f526222369001f1d717e483e/comments", "author": {"login": "vehre", "id": 4761547, "node_id": "MDQ6VXNlcjQ3NjE1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4761547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vehre", "html_url": "https://github.com/vehre", "followers_url": "https://api.github.com/users/vehre/followers", "following_url": "https://api.github.com/users/vehre/following{/other_user}", "gists_url": "https://api.github.com/users/vehre/gists{/gist_id}", "starred_url": "https://api.github.com/users/vehre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vehre/subscriptions", "organizations_url": "https://api.github.com/users/vehre/orgs", "repos_url": "https://api.github.com/users/vehre/repos", "events_url": "https://api.github.com/users/vehre/events{/privacy}", "received_events_url": "https://api.github.com/users/vehre/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e404a667bf4b0fcef2a4af1b32ef21f5b07367b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e404a667bf4b0fcef2a4af1b32ef21f5b07367b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e404a667bf4b0fcef2a4af1b32ef21f5b07367b6"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "6d5964af5b60ea0ec03ded5a764e9e2eef0c05fb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d1b78a4ac49ff3f526222369001f1d717e483e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d1b78a4ac49ff3f526222369001f1d717e483e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=56d1b78a4ac49ff3f526222369001f1d717e483e", "patch": "@@ -1,3 +1,10 @@\n+\n+2015-01-30  Andre Vehreschild  <vehre@gmx.de>\n+\n+\t* trans-decl.c (gfc_get_symbol_decl): Removed duplicate code.\n+\t* trans-expr.c (gfc_conv_intrinsic_to_class): Fixed indentation.\n+\tFixed datatype of charlen to be a 32-bit int.\n+\n 2015-02-01  Joseph Myers  <joseph@codesourcery.com>\n \n \t* error.c (gfc_warning (const char *, ...), gfc_warning_now (const"}, {"sha": "3664824ce09169e8949a0c5a571398dc1dc35a5f", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d1b78a4ac49ff3f526222369001f1d717e483e/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d1b78a4ac49ff3f526222369001f1d717e483e/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=56d1b78a4ac49ff3f526222369001f1d717e483e", "patch": "@@ -1443,8 +1443,6 @@ gfc_get_symbol_decl (gfc_symbol * sym)\n       if (sym->ts.type == BT_CLASS && sym->backend_decl)\n \tGFC_DECL_CLASS(sym->backend_decl) = 1;\n \n-      if (sym->ts.type == BT_CLASS && sym->backend_decl)\n-\tGFC_DECL_CLASS(sym->backend_decl) = 1;\n      return sym->backend_decl;\n     }\n "}, {"sha": "6b11fb3c55b9773a6ec3f123f18a011f0caf207a", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d1b78a4ac49ff3f526222369001f1d717e483e/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d1b78a4ac49ff3f526222369001f1d717e483e/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=56d1b78a4ac49ff3f526222369001f1d717e483e", "patch": "@@ -660,26 +660,26 @@ gfc_conv_intrinsic_to_class (gfc_se *parmse, gfc_expr *e,\n \t expression can be evaluated to a constant one.  */\n       else\n         {\n-          /* Try to simplify the expression.  */\n-          gfc_simplify_expr (e, 0);\n-          if (e->expr_type == EXPR_CONSTANT && !e->ts.u.cl->resolved)\n-            {\n-              /* Amazingly all data is present to compute the length of a\n-                 constant string, but the expression is not yet there.  */\n-              e->ts.u.cl->length = gfc_get_constant_expr (BT_INTEGER, 1,\n-                                                          &e->where);\n-              mpz_set_ui (e->ts.u.cl->length->value.integer,\n-                          e->value.character.length);\n-              gfc_conv_const_charlen (e->ts.u.cl);\n-              e->ts.u.cl->resolved = 1;\n-              gfc_add_modify (&parmse->pre, ctree, e->ts.u.cl->backend_decl);\n-            }\n-          else\n-            {\n-              gfc_error (\"Can't compute the length of the char array at %L.\",\n-                         &e->where);\n-            }\n-        }\n+\t  /* Try to simplify the expression.  */\n+\t  gfc_simplify_expr (e, 0);\n+\t  if (e->expr_type == EXPR_CONSTANT && !e->ts.u.cl->resolved)\n+\t    {\n+\t      /* Amazingly all data is present to compute the length of a\n+\t\t constant string, but the expression is not yet there.  */\n+\t      e->ts.u.cl->length = gfc_get_constant_expr (BT_INTEGER, 4,\n+\t\t\t\t\t\t\t  &e->where);\n+\t      mpz_set_ui (e->ts.u.cl->length->value.integer,\n+\t\t\t  e->value.character.length);\n+\t      gfc_conv_const_charlen (e->ts.u.cl);\n+\t      e->ts.u.cl->resolved = 1;\n+\t      gfc_add_modify (&parmse->pre, ctree, e->ts.u.cl->backend_decl);\n+\t    }\n+\t  else\n+\t    {\n+\t      gfc_error (\"Can't compute the length of the char array at %L.\",\n+\t\t\t &e->where);\n+\t    }\n+\t}\n     }\n   /* Pass the address of the class object.  */\n   parmse->expr = gfc_build_addr_expr (NULL_TREE, var);"}]}