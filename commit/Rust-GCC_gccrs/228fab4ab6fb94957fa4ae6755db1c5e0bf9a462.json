{"sha": "228fab4ab6fb94957fa4ae6755db1c5e0bf9a462", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI4ZmFiNGFiNmZiOTQ5NTdmYTRhZTY3NTVkYjFjNWUwYmY5YTQ2Mg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-03-29T12:31:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-29T12:31:34Z"}, "message": "* cvt.c (build_conversion_type_1): Delete dead function.\n\nFrom-SVN: r18897", "tree": {"sha": "1fe935fabce7e7b0bbebf8dece16762c43eb4272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fe935fabce7e7b0bbebf8dece16762c43eb4272"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/228fab4ab6fb94957fa4ae6755db1c5e0bf9a462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228fab4ab6fb94957fa4ae6755db1c5e0bf9a462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228fab4ab6fb94957fa4ae6755db1c5e0bf9a462", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228fab4ab6fb94957fa4ae6755db1c5e0bf9a462/comments", "author": null, "committer": null, "parents": [{"sha": "00c493f2c2dc6f3baa2b309d2087f5ba8a05d01c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c493f2c2dc6f3baa2b309d2087f5ba8a05d01c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c493f2c2dc6f3baa2b309d2087f5ba8a05d01c"}], "stats": {"total": 40, "additions": 2, "deletions": 38}, "files": [{"sha": "f732eed15e7dbd9401d807750f2b660e4488e831", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228fab4ab6fb94957fa4ae6755db1c5e0bf9a462/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228fab4ab6fb94957fa4ae6755db1c5e0bf9a462/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=228fab4ab6fb94957fa4ae6755db1c5e0bf9a462", "patch": "@@ -1,5 +1,7 @@\n Sun Mar 29 00:47:32 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* cvt.c (build_conversion_type_1): Delete dead function.\n+\n \t* cp-tree.h (push_expression_obstack): Declare.\n \n \t* call.c (source_type): #if 0 out."}, {"sha": "7cd5f2eee590a2a55e5152ab00866b5c013e5f73", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228fab4ab6fb94957fa4ae6755db1c5e0bf9a462/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228fab4ab6fb94957fa4ae6755db1c5e0bf9a462/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=228fab4ab6fb94957fa4ae6755db1c5e0bf9a462", "patch": "@@ -41,8 +41,6 @@ extern tree static_aggregates;\n static tree cp_convert_to_pointer PROTO((tree, tree));\n static tree convert_to_pointer_force PROTO((tree, tree));\n static tree build_up_reference PROTO((tree, tree, int, int));\n-static tree build_type_conversion_1 PROTO((tree, tree, tree, tree,\n-\t\t\t\t\t   int));\n \n /* Change of width--truncation and extension of integers or reals--\n    is represented with NOP_EXPR.  Proper functioning of many things\n@@ -902,42 +900,6 @@ convert_force (type, expr, convtype)\n   return ocp_convert (type, e, CONV_C_CAST|convtype, LOOKUP_NORMAL);\n }\n \n-/* Subroutine of build_type_conversion.  */\n-\n-static tree\n-build_type_conversion_1 (xtype, basetype, expr, typename, for_sure)\n-     tree xtype, basetype;\n-     tree expr;\n-     tree typename;\n-     int for_sure;\n-{\n-  tree rval;\n-  int flags;\n-\n-  if (for_sure == 0)\n-    flags = LOOKUP_PROTECT|LOOKUP_ONLYCONVERTING;\n-  else\n-    flags = LOOKUP_NORMAL|LOOKUP_ONLYCONVERTING;\n-\n-  rval = build_method_call (expr, typename, NULL_TREE, NULL_TREE, flags);\n-  if (rval == error_mark_node)\n-    {\n-      if (for_sure == 0)\n-\treturn NULL_TREE;\n-      return error_mark_node;\n-    }\n-\n-  if (IS_AGGR_TYPE (TREE_TYPE (rval)))\n-    return rval;\n-\n-  if (warn_cast_qual\n-      && TREE_TYPE (xtype)\n-      && (TREE_READONLY (TREE_TYPE (TREE_TYPE (rval)))\n-\t  > TREE_READONLY (TREE_TYPE (xtype))))\n-    warning (\"user-defined conversion casting away `const'\");\n-  return cp_convert (xtype, rval);\n-}\n-\n /* Convert an aggregate EXPR to type XTYPE.  If a conversion\n    exists, return the attempted conversion.  This may\n    return ERROR_MARK_NODE if the conversion is not"}]}