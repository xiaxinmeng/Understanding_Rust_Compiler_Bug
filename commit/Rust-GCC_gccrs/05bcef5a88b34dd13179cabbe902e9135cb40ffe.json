{"sha": "05bcef5a88b34dd13179cabbe902e9135cb40ffe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDViY2VmNWE4OGIzNGRkMTMxNzljYWJiZTkwMmU5MTM1Y2I0MGZmZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-07-31T07:35:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-07-31T07:35:25Z"}, "message": "openmp: Handle OpenMP directives in attribute syntax in attribute-declaration\n\nNow that we parse attribute-declaration (outside of functions), the following\npatch handles OpenMP directives in its attribute(s).\nWhat needs handling incrementally is diagnose mismatching begin/end pair\nlike\n [[omp::directive (declare target)]];\n int a;\n #pragma omp end declare target\nor\n #pragma omp declare target\n int b;\n [[omp::directive (end declare target)]];\nand handling declare simd/declare variant on declarations (function\ndefinitions and declarations), for those in two different spots.\n\n2021-07-31  Jakub Jelinek  <jakub@redhat.com>\n\n\t* parser.c (cp_parser_declaration): Handle OpenMP directives\n\tin attribute-declaration.\n\n\t* g++.dg/gomp/attrs-9.C: New test.", "tree": {"sha": "a89441dc67c96a6c5a881c6fe2615a666f1963ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a89441dc67c96a6c5a881c6fe2615a666f1963ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05bcef5a88b34dd13179cabbe902e9135cb40ffe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05bcef5a88b34dd13179cabbe902e9135cb40ffe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05bcef5a88b34dd13179cabbe902e9135cb40ffe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05bcef5a88b34dd13179cabbe902e9135cb40ffe/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91425e2adecd00091d7443104ecb367686e88663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91425e2adecd00091d7443104ecb367686e88663", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91425e2adecd00091d7443104ecb367686e88663"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "47bf7d9ad1f1ec4d761ac457cec6d7fcd7ae90cf", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05bcef5a88b34dd13179cabbe902e9135cb40ffe/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05bcef5a88b34dd13179cabbe902e9135cb40ffe/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=05bcef5a88b34dd13179cabbe902e9135cb40ffe", "patch": "@@ -14431,6 +14431,25 @@ cp_parser_declaration (cp_parser* parser, tree prefix_attrs)\n     {\n       location_t attrs_loc = token1->location;\n       tree std_attrs = cp_parser_std_attribute_spec_seq (parser);\n+\n+      if (std_attrs && (flag_openmp || flag_openmp_simd))\n+\t{\n+\t  gcc_assert (!parser->lexer->in_omp_attribute_pragma);\n+\t  std_attrs = cp_parser_handle_statement_omp_attributes (parser,\n+\t\t\t\t\t\t\t\t std_attrs);\n+\t  if (parser->lexer->in_omp_attribute_pragma)\n+\t    {\n+\t      cp_lexer *lexer = parser->lexer;\n+\t      while (parser->lexer->in_omp_attribute_pragma)\n+\t\t{\n+\t\t  gcc_assert (cp_lexer_next_token_is (parser->lexer,\n+\t\t\t\t\t\t      CPP_PRAGMA));\n+\t\t  cp_parser_pragma (parser, pragma_external, NULL);\n+\t\t}\n+\t      cp_lexer_destroy (lexer);\n+\t    }\n+\t}\n+\n       if (std_attrs != NULL_TREE)\n \twarning_at (make_location (attrs_loc, attrs_loc, parser->lexer),\n \t\t    OPT_Wattributes, \"attribute ignored\");"}, {"sha": "0af556c728423429deb6cb5877af90dd5b09362f", "filename": "gcc/testsuite/g++.dg/gomp/attrs-9.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05bcef5a88b34dd13179cabbe902e9135cb40ffe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05bcef5a88b34dd13179cabbe902e9135cb40ffe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fattrs-9.C?ref=05bcef5a88b34dd13179cabbe902e9135cb40ffe", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target c++11 } }\n+\n+[[omp::sequence (directive (requires, atomic_default_mem_order (seq_cst)))]];\n+[[omp::directive (declare reduction (plus: int: omp_out += omp_in) initializer (omp_priv = 0))]];\n+int a;\n+[[omp::directive (declare target (a))]];\n+int t;\n+[[omp::sequence (omp::directive (threadprivate (t)))]];\n+int b, c;\n+[[omp::directive (declare target, to (b), link (c))]];\n+[[omp::directive (declare target)]];\n+[[omp::directive (declare target)]];\n+int d;\n+[[omp::directive (end declare target)]];\n+[[omp::directive (end declare target)]];"}]}