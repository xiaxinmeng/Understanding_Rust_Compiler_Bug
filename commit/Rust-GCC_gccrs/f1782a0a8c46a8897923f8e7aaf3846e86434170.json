{"sha": "f1782a0a8c46a8897923f8e7aaf3846e86434170", "node_id": "C_kwDOANBUbNoAKGYxNzgyYTBhOGM0NmE4ODk3OTIzZjhlN2FhZjM4NDZlODY0MzQxNzA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-11T10:17:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-11T11:47:32Z"}, "message": "More update-ssa speedup\n\nWhen working on a smaller region like a loop version copy the main\ntime spent is now dominance fast query recompute which does a full\nfunction DFS walk.  The dominance queries within the region of\ninterest should be O(log n) without fast queries and we should do\non the order of O(n) of them which overall means reasonable\ncomplexity.\n\nFor the artificial testcase I'm looking at this shaves off\nconsiderable time again.\n\n\t* tree-into-ssa.cc (update_ssa): Do not forcefully\n\tre-compute dominance fast queries for TODO_update_ssa_no_phi.", "tree": {"sha": "37838953daf5f2ef48c8bdcd9e883ef36c978a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37838953daf5f2ef48c8bdcd9e883ef36c978a3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1782a0a8c46a8897923f8e7aaf3846e86434170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1782a0a8c46a8897923f8e7aaf3846e86434170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1782a0a8c46a8897923f8e7aaf3846e86434170", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1782a0a8c46a8897923f8e7aaf3846e86434170/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "415d2c38edadf97950eb14b8d7e6b1491c98cdd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415d2c38edadf97950eb14b8d7e6b1491c98cdd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415d2c38edadf97950eb14b8d7e6b1491c98cdd5"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "d13fb720b37ca94029078a0577f5cf1c939d6964", "filename": "gcc/tree-into-ssa.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1782a0a8c46a8897923f8e7aaf3846e86434170/gcc%2Ftree-into-ssa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1782a0a8c46a8897923f8e7aaf3846e86434170/gcc%2Ftree-into-ssa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.cc?ref=f1782a0a8c46a8897923f8e7aaf3846e86434170", "patch": "@@ -3451,11 +3451,13 @@ update_ssa (unsigned update_flags)\n     phis_to_rewrite.create (last_basic_block_for_fn (cfun) + 1);\n   blocks_to_update = BITMAP_ALLOC (NULL);\n \n-  /* Ensure that the dominance information is up-to-date.  */\n-  calculate_dominance_info (CDI_DOMINATORS);\n-\n   insert_phi_p = (update_flags != TODO_update_ssa_no_phi);\n \n+  /* Ensure that the dominance information is up-to-date and when we\n+     are going to compute dominance frontiers fast queries are possible.  */\n+  if (insert_phi_p || dom_info_state (CDI_DOMINATORS) == DOM_NONE)\n+    calculate_dominance_info (CDI_DOMINATORS);\n+\n   /* If there are names defined in the replacement table, prepare\n      definition and use sites for all the names in NEW_SSA_NAMES and\n      OLD_SSA_NAMES.  */"}]}