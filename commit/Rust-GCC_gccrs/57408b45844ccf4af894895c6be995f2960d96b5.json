{"sha": "57408b45844ccf4af894895c6be995f2960d96b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc0MDhiNDU4NDRjY2Y0YWY4OTQ4OTVjNmJlOTk1ZjI5NjBkOTZiNQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2004-05-07T03:16:12Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2004-05-07T03:16:12Z"}, "message": "* gcc.c-torture/execute/pr15296.c: New test.\n\nFrom-SVN: r81599", "tree": {"sha": "a1eabcd36ea00723098710a687425af7357ced91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1eabcd36ea00723098710a687425af7357ced91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57408b45844ccf4af894895c6be995f2960d96b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57408b45844ccf4af894895c6be995f2960d96b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57408b45844ccf4af894895c6be995f2960d96b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57408b45844ccf4af894895c6be995f2960d96b5/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9acf97b6e88ca97c3c6d0a2e1591a9c3f7562ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9acf97b6e88ca97c3c6d0a2e1591a9c3f7562ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9acf97b6e88ca97c3c6d0a2e1591a9c3f7562ecd"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "734c49065d8bffa4cfc33925376c0d93a1486250", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57408b45844ccf4af894895c6be995f2960d96b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57408b45844ccf4af894895c6be995f2960d96b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57408b45844ccf4af894895c6be995f2960d96b5", "patch": "@@ -1,3 +1,7 @@\n+2004-05-07  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.c-torture/execute/pr15296.c: New test.\n+\n 2004-05-05  Uros Bizjak  <uros@kss-loka.si>\n \n \t* gcc.dg/builtins-40.c: New test."}, {"sha": "d2468e425afa40ed456db371b2db5bba165b6786", "filename": "gcc/testsuite/gcc.c-torture/execute/pr15296.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57408b45844ccf4af894895c6be995f2960d96b5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr15296.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57408b45844ccf4af894895c6be995f2960d96b5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr15296.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr15296.c?ref=57408b45844ccf4af894895c6be995f2960d96b5", "patch": "@@ -0,0 +1,73 @@\n+/* PR optimization/15296.  The delayed-branch scheduler caused code that\n+   SEGV:d for CRIS; a register was set to -1 in a delay-slot for the\n+   fall-through code, while that register held a pointer used in code at\n+   the branch target.  */\n+\n+typedef int __attribute__ ((mode (__pointer__))) intptr_t;\n+typedef intptr_t W;\n+union u0\n+{\n+  union u0 *r;\n+  W i;\n+};\n+struct s1\n+{\n+  union u0 **m0;\n+  union u0 m1[4];\n+};\n+\n+void f (void *, struct s1 *, const union u0 *, W, W, W)\n+     __attribute__ ((__noinline__));\n+void g (void *, char *) __attribute__ ((__noinline__));\n+\n+void\n+f (void *a, struct s1 *b, const union u0 *h, W v0, W v1, W v4)\n+{\n+  union u0 *e = 0;\n+  union u0 *k = 0;\n+  union u0 **v5 = b->m0;\n+  union u0 *c = b->m1;\n+  union u0 **d = &v5[0];\n+l0:;\n+  if (v0 < v1)\n+    goto l0;\n+  if (v0 == 0)\n+    goto l3;\n+  v0 = v4;\n+  if (v0 != 0)\n+    goto l3;\n+  c[0].r = *d;\n+  v1 = -1;\n+  e = c[0].r;\n+  if (e != 0)\n+    g (a, \"\");\n+  k = e + 3;\n+  k->i = v1;\n+  goto l4;\n+l3:;\n+  c[0].i = v0;\n+  e = c[1].r;\n+  if (e != 0)\n+    g (a, \"\");\n+  e = c[0].r;\n+  if (e == 0)\n+    g (a, \"\");\n+  k = e + 2;\n+  k->r = c[1].r;\n+l4:;\n+}\n+\n+void g (void *a, char *b) { abort (); }\n+\n+int\n+main ()\n+{\n+  union u0 uv[] = {{ .i = 111 }, { .i = 222 }, { .i = 333 }, { .i = 444 }};\n+  struct s1 s = { 0, {{ .i = 555 }, { .i = 0 }, { .i = 999 }, { .i = 777 }}};\n+  f (0, &s, 0, 20000, 10000, (W) uv);\n+  if (s.m1[0].i != (W) uv || s.m1[1].i != 0 || s.m1[2].i != 999\n+      || s.m1[3].i != 777 || uv[0].i != 111 || uv[1].i != 222\n+      || uv[2].i != 0 || uv[3].i != 444)\n+    abort ();\n+  exit (0);\n+}"}]}