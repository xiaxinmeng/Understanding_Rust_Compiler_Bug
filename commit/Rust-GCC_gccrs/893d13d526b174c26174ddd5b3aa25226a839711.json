{"sha": "893d13d526b174c26174ddd5b3aa25226a839711", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkzZDEzZDUyNmIxNzRjMjYxNzRkZGQ1YjNhYTI1MjI2YTgzOTcxMQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2010-06-30T18:10:23Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-06-30T18:10:23Z"}, "message": "target.def (return_pops_args): Use DEFHOOK.\n\n\t* target.def (return_pops_args): Use DEFHOOK.\n\t* doc/tm.texi.in (TARGET_RETURN_POPS_ARGS): Use @hook.\n\tRename stack-size to size.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r161627", "tree": {"sha": "62c0c8c77b5631f0bc02bed0ae0c84ddda3eec91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62c0c8c77b5631f0bc02bed0ae0c84ddda3eec91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/893d13d526b174c26174ddd5b3aa25226a839711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/893d13d526b174c26174ddd5b3aa25226a839711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/893d13d526b174c26174ddd5b3aa25226a839711", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/893d13d526b174c26174ddd5b3aa25226a839711/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d66f54593c67177cb99dddb75feebe94843d77be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66f54593c67177cb99dddb75feebe94843d77be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66f54593c67177cb99dddb75feebe94843d77be"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "5512ffc550fd37c653db99b77780ad98f059e8e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893d13d526b174c26174ddd5b3aa25226a839711/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893d13d526b174c26174ddd5b3aa25226a839711/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=893d13d526b174c26174ddd5b3aa25226a839711", "patch": "@@ -38,6 +38,11 @@\n \t* doc/tm.texi.in (TARGET_RESOLVE_OVERLOADED_BUILTIN): Use @hook.\n \t* doc/tm.texi: Regenerate.\n \n+\t* target.def (return_pops_args): Use DEFHOOK.\n+\t* doc/tm.texi.in (TARGET_RETURN_POPS_ARGS): Use @hook.\n+\tRename stack-size to size.\n+\t* doc/tm.texi: Regenerate.\n+\n 2010-06-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* toplev.h (_fatal_insn_not_found, _fatal_insn): Move declarations"}, {"sha": "99b4dd4198cf5928f458d47706f20207e9a2b7c8", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893d13d526b174c26174ddd5b3aa25226a839711/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893d13d526b174c26174ddd5b3aa25226a839711/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=893d13d526b174c26174ddd5b3aa25226a839711", "patch": "@@ -3931,7 +3931,7 @@ suppresses this behavior and causes the parameter to be passed on the\n stack in its natural location.\n @end defmac\n \n-@deftypefn {Target Hook} TARGET_RETURN_POPS_ARGS (@var{fundecl}, @var{funtype}, @var{stack-size})\n+@deftypefn {Target Hook} int TARGET_RETURN_POPS_ARGS (tree @var{fundecl}, tree @var{funtype}, int @var{size})\n This target hook returns the number of bytes of its own arguments that\n a function pops on returning, or 0 if the function pops no arguments\n and the caller must therefore pop them all after the function returns.\n@@ -3954,12 +3954,12 @@ by their names.  Note that ``library function'' in this context means\n a function used to perform arithmetic, whose name is known specially\n in the compiler and was not mentioned in the C code being compiled.\n \n-@var{stack-size} is the number of bytes of arguments passed on the\n+@var{size} is the number of bytes of arguments passed on the\n stack.  If a variable number of bytes is passed, it is zero, and\n argument popping will always be the responsibility of the calling function.\n \n On the VAX, all functions always pop their arguments, so the definition\n-of this macro is @var{stack-size}.  On the 68000, using the standard\n+of this macro is @var{size}.  On the 68000, using the standard\n calling convention, no functions pop their arguments, so the value of\n the macro is always 0 in this case.  But an alternative calling\n convention is available in which functions that take a fixed number of"}, {"sha": "a9a2e955b6ac409a79553e8a87b7edc00f5fba23", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893d13d526b174c26174ddd5b3aa25226a839711/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893d13d526b174c26174ddd5b3aa25226a839711/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=893d13d526b174c26174ddd5b3aa25226a839711", "patch": "@@ -3931,7 +3931,7 @@ suppresses this behavior and causes the parameter to be passed on the\n stack in its natural location.\n @end defmac\n \n-@deftypefn {Target Hook} TARGET_RETURN_POPS_ARGS (@var{fundecl}, @var{funtype}, @var{stack-size})\n+@hook TARGET_RETURN_POPS_ARGS\n This target hook returns the number of bytes of its own arguments that\n a function pops on returning, or 0 if the function pops no arguments\n and the caller must therefore pop them all after the function returns.\n@@ -3954,12 +3954,12 @@ by their names.  Note that ``library function'' in this context means\n a function used to perform arithmetic, whose name is known specially\n in the compiler and was not mentioned in the C code being compiled.\n \n-@var{stack-size} is the number of bytes of arguments passed on the\n+@var{size} is the number of bytes of arguments passed on the\n stack.  If a variable number of bytes is passed, it is zero, and\n argument popping will always be the responsibility of the calling function.\n \n On the VAX, all functions always pop their arguments, so the definition\n-of this macro is @var{stack-size}.  On the 68000, using the standard\n+of this macro is @var{size}.  On the 68000, using the standard\n calling convention, no functions pop their arguments, so the value of\n the macro is always 0 in this case.  But an alternative calling\n convention is available in which functions that take a fixed number of"}, {"sha": "2bafeca8aacb8a6e1b6afd82e07d5a27325572fa", "filename": "gcc/target.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/893d13d526b174c26174ddd5b3aa25226a839711/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/893d13d526b174c26174ddd5b3aa25226a839711/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=893d13d526b174c26174ddd5b3aa25226a839711", "patch": "@@ -1866,7 +1866,7 @@ DEFHOOK\n    pops on returning, or 0 if the function pops no arguments and the\n    caller must therefore pop them all after the function returns.  */\n /* ??? tm.texi has no types for the parameters.  */\n-DEFHOOK_UNDOC\n+DEFHOOK\n (return_pops_args,\n  \"\",\n  int, (tree fundecl, tree funtype, int size),"}]}