{"sha": "b2bf5aef7a0c975780ae8936b25594c47f8065ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJiZjVhZWY3YTBjOTc1NzgwYWU4OTM2YjI1NTk0YzQ3ZjgwNjVlZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-12T19:48:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-12T19:48:39Z"}, "message": "Revert to identifiers for mode attributes.\n\nFrom-SVN: r7282", "tree": {"sha": "cdf991e860d6913d323f7a1f34db0369c21453db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdf991e860d6913d323f7a1f34db0369c21453db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2bf5aef7a0c975780ae8936b25594c47f8065ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2bf5aef7a0c975780ae8936b25594c47f8065ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2bf5aef7a0c975780ae8936b25594c47f8065ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2bf5aef7a0c975780ae8936b25594c47f8065ed/comments", "author": null, "committer": null, "parents": [{"sha": "389da3624578ca159cfb6827ad149f5e0404d13a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/389da3624578ca159cfb6827ad149f5e0404d13a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/389da3624578ca159cfb6827ad149f5e0404d13a"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "2a67b0fa8aefe9e04d281fa698c8e043507bf128", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bf5aef7a0c975780ae8936b25594c47f8065ed/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bf5aef7a0c975780ae8936b25594c47f8065ed/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=b2bf5aef7a0c975780ae8936b25594c47f8065ed", "patch": "@@ -49,28 +49,28 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    because the sizes for those types can be configured to be anything.\n    Instead we use the following special type names.  */\n \n-typedef unsigned int UQItype\t__attribute__ ((mode (\"QI\")));\n-typedef \t int SItype\t__attribute__ ((mode (\"SI\")));\n-typedef unsigned int USItype\t__attribute__ ((mode (\"SI\")));\n-typedef\t\t int DItype\t__attribute__ ((mode (\"DI\")));\n-typedef unsigned int UDItype\t__attribute__ ((mode (\"DI\")));\n-typedef \tfloat SFtype\t__attribute__ ((mode (\"SF\")));\n-typedef\t\tfloat DFtype\t__attribute__ ((mode (\"DF\")));\n+typedef unsigned int UQItype\t__attribute__ ((mode (QI)));\n+typedef \t int SItype\t__attribute__ ((mode (SI)));\n+typedef unsigned int USItype\t__attribute__ ((mode (SI)));\n+typedef\t\t int DItype\t__attribute__ ((mode (DI)));\n+typedef unsigned int UDItype\t__attribute__ ((mode (DI)));\n+typedef \tfloat SFtype\t__attribute__ ((mode (SF)));\n+typedef\t\tfloat DFtype\t__attribute__ ((mode (DF)));\n #if LONG_DOUBLE_TYPE_SIZE == 96\n-typedef\t\tfloat XFtype\t__attribute__ ((mode (\"XF\")));\n+typedef\t\tfloat XFtype\t__attribute__ ((mode (XF)));\n #endif\n #if LONG_DOUBLE_TYPE_SIZE == 128\n-typedef\t\tfloat TFtype\t__attribute__ ((mode (\"TF\")));\n+typedef\t\tfloat TFtype\t__attribute__ ((mode (TF)));\n #endif\n \n #if BITS_PER_WORD==16\n-typedef int word_type __attribute__ ((mode (\"HI\")));\n+typedef int word_type __attribute__ ((mode (HI)));\n #endif\n #if BITS_PER_WORD==32\n-typedef int word_type __attribute__ ((mode (\"SI\")));\n+typedef int word_type __attribute__ ((mode (SI)));\n #endif\n #if BITS_PER_WORD==64\n-typedef int word_type __attribute__ ((mode (\"DI\")));\n+typedef int word_type __attribute__ ((mode (DI)));\n #endif\n \n /* Make sure that we don't accidentally use any normal C language built-in"}]}