{"sha": "511fce8b712b1be99a7f09835a186d461de3f97c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTExZmNlOGI3MTJiMWJlOTlhN2YwOTgzNWExODZkNDYxZGUzZjk3Yw==", "commit": {"author": {"name": "Steve Chamberlain", "email": "sac@pobox.com", "date": "2000-03-08T06:27:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-03-08T06:27:35Z"}, "message": "pj.c (pj_expand_prologue): current_function->args_info is now current_function_args_info.\n\n        * pj.c (pj_expand_prologue): current_function->args_info is\n        now current_function_args_info.\n\n        * pj.h (STORE_FLAG_VALUE, USER_LABEL_PREFIX,\n        LOCAL_LABEL_PREFIX, ASM_GENERATE_INTERNAL_LABEL,\n        ASM_OUTPUT_INTERNAL_LABEL, ASM_OUTPUT_SKIP): Define.\n\nFrom-SVN: r32409", "tree": {"sha": "5fa22ebbfbec43edca79bb0caa82e6c4b03040d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fa22ebbfbec43edca79bb0caa82e6c4b03040d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/511fce8b712b1be99a7f09835a186d461de3f97c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511fce8b712b1be99a7f09835a186d461de3f97c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511fce8b712b1be99a7f09835a186d461de3f97c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511fce8b712b1be99a7f09835a186d461de3f97c/comments", "author": {"login": "0x5ac", "id": 5324565, "node_id": "MDQ6VXNlcjUzMjQ1NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5324565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0x5ac", "html_url": "https://github.com/0x5ac", "followers_url": "https://api.github.com/users/0x5ac/followers", "following_url": "https://api.github.com/users/0x5ac/following{/other_user}", "gists_url": "https://api.github.com/users/0x5ac/gists{/gist_id}", "starred_url": "https://api.github.com/users/0x5ac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0x5ac/subscriptions", "organizations_url": "https://api.github.com/users/0x5ac/orgs", "repos_url": "https://api.github.com/users/0x5ac/repos", "events_url": "https://api.github.com/users/0x5ac/events{/privacy}", "received_events_url": "https://api.github.com/users/0x5ac/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b3f0ff85e256cbc79a6a8f025bdf72308f519ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b3f0ff85e256cbc79a6a8f025bdf72308f519ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b3f0ff85e256cbc79a6a8f025bdf72308f519ae"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "c2c58612e7e23ee0ab6bb271416cb5b737076546", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511fce8b712b1be99a7f09835a186d461de3f97c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511fce8b712b1be99a7f09835a186d461de3f97c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=511fce8b712b1be99a7f09835a186d461de3f97c", "patch": "@@ -1,3 +1,12 @@\n+2000-03-07  Steve Chamberlain  <sac@pobox.com>\n+\n+\t* pj.c (pj_expand_prologue): current_function->args_info is\n+\tnow current_function_args_info.  \n+\n+\t* pj.h (STORE_FLAG_VALUE, USER_LABEL_PREFIX,\n+\tLOCAL_LABEL_PREFIX, ASM_GENERATE_INTERNAL_LABEL,\n+\tASM_OUTPUT_INTERNAL_LABEL, ASM_OUTPUT_SKIP): Define.\n+\n 2000-03-08  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.h (PUT_SDB_TYPE): Define so that the type info is"}, {"sha": "43a3066d07cb30a0bdee0e56fc3355ed2385cd6b", "filename": "gcc/config/pj/pj.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511fce8b712b1be99a7f09835a186d461de3f97c/gcc%2Fconfig%2Fpj%2Fpj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511fce8b712b1be99a7f09835a186d461de3f97c/gcc%2Fconfig%2Fpj%2Fpj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpj%2Fpj.c?ref=511fce8b712b1be99a7f09835a186d461de3f97c", "patch": "@@ -900,18 +900,18 @@ pj_expand_prologue ()\n {\n   int i;\n   int off = 0;\n-  int arg_words = current_function->args_info.named_words;\n+  int arg_words = current_function_args_info.named_words;\n \n   memset (pj_si_vars_offset_vec, -1, sizeof (pj_si_vars_offset_vec));\n   memset (pj_di_vars_offset_vec, -1, sizeof (pj_di_vars_offset_vec));\n \n   /* Work out the register numbers of the named arguments.  */\n-  for (i = 0; i < current_function->args_info.named_words; i++)\n+  for (i = 0; i < current_function_args_info.named_words; i++)\n     {\n       pj_debugreg_renumber_vec[I0_REG + i]\n-\t= off + R0_REG + current_function->args_info.arg_adjust[i];\n+\t= off + R0_REG + current_function_args_info.arg_adjust[i];\n       pj_si_vars_offset_vec[I0_REG + i]\n-\t= off + current_function->args_info.arg_adjust[i];\n+\t= off + current_function_args_info.arg_adjust[i];\n       pj_di_vars_offset_vec[I0_REG + i] = off;\n       off++;\n     }\n@@ -1009,7 +1009,7 @@ pj_expand_epilogue ()\n \n   if (current_function_varargs || current_function_stdarg)\n     emit_insn (gen_varargs_finish\n-\t       (GEN_INT (current_function->args_info.named_words + 1)));\n+\t       (GEN_INT (current_function_args_info.named_words + 1)));\n \n   emit_insn (gen_rtx_USE (VOIDmode, gen_rtx_REG (SImode, OPTOP_REG)));\n }"}, {"sha": "0eb6239b70fec5f4b67e9e65c15a92eb809a047a", "filename": "gcc/config/pj/pj.h", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511fce8b712b1be99a7f09835a186d461de3f97c/gcc%2Fconfig%2Fpj%2Fpj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511fce8b712b1be99a7f09835a186d461de3f97c/gcc%2Fconfig%2Fpj%2Fpj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpj%2Fpj.h?ref=511fce8b712b1be99a7f09835a186d461de3f97c", "patch": "@@ -923,6 +923,11 @@ struct pj_args\n \n #define LOAD_EXTEND_OP(MODE) SIGN_EXTEND\n \n+/* We assume that the store-condition-codes instructions store 0 for false\n+   and some other value for true.  This is the value stored for true.  */\n+\n+#define STORE_FLAG_VALUE 1\n+\n /* Define if loading short immediate values into registers sign extends.  */\n \n #define SHORT_IMMEDIATES_SIGN_EXTEND\n@@ -1144,14 +1149,21 @@ do { fputs (current_function_varargs || current_function_stdarg         \\\n \n /* The prefix to add to user-visible assembler symbols.  */\n \n-//#define USER_LABEL_PREFIX \"\"\n+#define USER_LABEL_PREFIX \"\"\n \n /* The prefix to add to an internally generated label.  */\n \n-//#define LOCAL_LABEL_PREFIX \"\"\n+#define LOCAL_LABEL_PREFIX \"\"\n \n-/* Construct a private name.  */\n+/* Make an internal label into a string.  */\n+#define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM) \\\n+  sprintf ((STRING), \"*%s%s%ld\", LOCAL_LABEL_PREFIX, (PREFIX), (long)(NUM))\n+\n+/* Output an internal label definition.  */\n+#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM) \\\n+  asm_fprintf ((FILE), \"%L%s%d:\\n\", (PREFIX), (NUM))\n \n+/* Construct a private name.  */\n #define ASM_FORMAT_PRIVATE_NAME(OUTVAR,NAME,NUMBER)     \\\n   ((OUTVAR) = (char *) alloca (strlen (NAME) + 10),     \\\n    sprintf ((OUTVAR), \"%s.%d\", (NAME), (NUMBER)))\n@@ -1199,6 +1211,12 @@ do { char dstr[30];                                     \\\n #define ASM_OUTPUT_BYTE(STREAM, VALUE)          \\\n   fprintf ((STREAM), \"\\t.byte\\t%d\\n\", (VALUE))  \n \n+/* This is how to output an assembler line\n+   that says to advance the location counter by SIZE bytes.  */\n+\n+#define ASM_OUTPUT_SKIP(FILE,SIZE) \\\n+  fprintf ((FILE), \"\\t.space %d\\n\", (SIZE))\n+\n /* This says how to output an assembler line\n    to define a global common symbol.  */\n \n@@ -1322,8 +1340,8 @@ do {                                                                          \\\n \n /* Define the codes that are matched by predicates in pj.c.  */\n #define PREDICATE_CODES \t\t\t\t\t\t \\\n-  {\"pj_dest_operand\",                 {SUBREG, REG, MEM,}},              \\\n-  {\"pj_signed_comparison_operator\",   {EQ, NE, LE, LT, GE, GT}},         \\\n+  {\"pj_dest_operand\",                 {SUBREG, REG, MEM}},               \\\n+  {\"pj_signed_comparison_operator\",   {EQ, NE, LE, LT, GE,GT}},          \\\n   {\"pj_unsigned_comparison_operator\", {LEU, LTU, GEU, GTU}},             \\\n   {\"pj_source_operand\",               {CONST_INT, CONST_DOUBLE, CONST,   \\\n                                        SYMBOL_REF, LABEL_REF, SUBREG,    \\"}]}