{"sha": "b045f2f2205495b61d63133b16e56c35acbf8090", "node_id": "C_kwDOANBUbNoAKGIwNDVmMmYyMjA1NDk1YjYxZDYzMTMzYjE2ZTU2YzM1YWNiZjgwOTA", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2021-11-05T09:24:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-02T16:26:27Z"}, "message": "[Ada] Use bracket aggregates in Ada2022\n\ngcc/ada/\n\n\t* exp_imgv.adb (Append_Table_To): Add new parameter to\n\tMake_Aggregate call.\n\t* gen_il-fields.ads (Opt_Field_Enum):\n\tAdd Is_Parenthesis_Aggregate and Is_Enum_Array_Aggregate.\n\t* gen_il-gen-gen_nodes.adb (Union): Add Is_Enum_Array_Aggregate\n\tand Is_Parenthesis_Aggregate field to N_Aggregate.\n\t* libgnarl/s-interr.adb (User_Handler, User_Entry, Blocked)\n\t(Ignored, Last_Unblocker, Server_ID): Likewise.\n\t* libgnarl/s-intman.ads (Keep_Unmasked, Reserve): Likewise.\n\t* libgnarl/s-intman__posix.adb (Exception_Interrupts)\n\t(Initialize): Likewise.\n\t* libgnarl/s-mudido__affinity.adb (Create): Likewise.\n\t* libgnarl/s-osinte__linux.ads (Unmasked, Reserved): Likewise.\n\t* libgnarl/s-taprop__linux.adb (Create_Task, Set_Task_Affinity)\n\t* libgnarl/s-tasdeb.adb (Trace_On): Likewise.\n\t* libgnarl/s-tasdeb.ads (Known_Tasks): Likewise.\n\t* libgnarl/s-tasinf__linux.ads (Any_CPU, No_CPU): Likewise.\n\t* libgnarl/s-taskin.adb (Initialize_ATCB): Likewise.\n\t* libgnarl/s-taskin.ads (Ada_Task_Control_Block): Likewise.\n\t* libgnarl/s-tasren.adb (Default_Treatment)\n\t(New_State): Likewise.\n\t* libgnarl/s-tassta.adb (Trace_Unhandled_Exception_In_Task):\n\tLikewise.\n\t* libgnarl/s-tataat.adb (Index_Array): Likewise.\n\t* libgnarl/s-tpobop.adb (New_State): Likewise.\n\t* libgnat/a-calend.adb (Cumulative_Days_Before_Month)\n\t(Leap_Second_Times): Likewise.\n\t* libgnat/a-calend.ads (Days_In_Month): Likewise.\n\t* libgnat/a-cfinve.adb (Insert): Likewise.\n\t* libgnat/a-chahan.adb (Char_Map): Likewise.\n\t* libgnat/a-chtgbo.adb (Clear): Likewise.\n\t* libgnat/a-cobove.adb (\"&\", Insert, To_Vector): Likewise.\n\t* libgnat/a-cofove.adb (Insert, To_Vector): Likewise.\n\t* libgnat/a-cohata.ads (Hash_Table_Type): Likewise.\n\t* libgnat/a-coinve.adb (Merge, Insert, Insert_Space): Likewise.\n\t* libgnat/a-convec.adb (Insert, To_Vector): Likewise.\n\t* libgnat/a-coprnu.ads (Primes): Likewise.\n\t* libgnat/a-direct.adb (Empty_String): Use regular \"\" instead\n\tof aggregate.\n\t(Start_Search_Internal, Name_Case_Equivalence, Search)\n\t(Start_Search, Start_Search_Internal): Use bracket for\n\taggregate.\n\t* libgnat/a-direct.ads (Start_Search,Search): Likewise.\n\t* libgnat/a-direio.adb (Zeroes): Likewise.\n\t* libgnat/a-nbnbre.adb (Leading_Padding, Trailing_Padding)\n\t(Numerator_Image): Likewise.\n\t* libgnat/a-ngrear.adb (Jacobi): Likewise.\n\t* libgnat/a-stbubo.adb (Get_UTF_8): Likewise.\n\t* libgnat/a-stbufo.adb (Put): Likewise.\n\t* libgnat/a-stbuun.adb (Get_UTF_8): Likewise.\n\t* libgnat/a-stbuut.adb (Put_7bit, Put_Character)\n\t(Put_Wide_Character, Put_Wide_Wide_Character): Likewise.\n\t* libgnat/a-stmaco.ads (Control_Set,Graphic_Set,Letter_Set)\n\t(Lower_Set, Upper_Set, Basic_Set, Decimal_Digit_Set)\n\t(Hexadecimal_Digit_Set, Alphanumeric_Set, Special_Set)\n\t(ISO_646_Set): Likewise.\n\t* libgnat/a-strbou.ads (Insert, Tail, \"*\", Replicate)\n\t(Null_Bounded_String): Likewise.\n\t* libgnat/a-strfix.ads (Head, Tail): Likewise.\n\t* libgnat/a-strmap.adb (To_Domain, Lemma_Is_Sorted): Likewise.\n\t* libgnat/a-strmap.ads (Null_Set): Likewise.\n\t* libgnat/a-strsup.adb (Super_Head, Super_Replicate)\n\t(Super_Tail): Likewise.\n\t* libgnat/a-strsup.ads (Super_Head, Super_Tail, Times)\n\t(Super_Replicate): Likewise.\n\t* libgnat/a-sttebu.adb (Put_UTF8, Wide_Put_UTF_16): Likewise.\n\t* libgnat/a-stuten.ads (BOM_16): Likewise.\n\t* libgnat/a-stwibo.ads (Null_Bounded_Wide_String): Likewise.\n\t* libgnat/a-stwima.ads (Null_Range): Likewise.\n\t* libgnat/a-stwisu.adb (Super_Head, Super_Replicate)\n\t(Super_Tail): Likewise.\n\t* libgnat/a-stzbou.ads\n\t(Null_Bounded_Wide_Wide_String): Likewise.\n\t* libgnat/a-stzmap.ads (Null_Range): Likewise.\n\t* libgnat/a-stzsup.adb (Super_Head, Super_Replicate)\n\t(Super_Tail, Super_Trim): Likewise.\n\t* libgnat/a-swmwco.ads (Control_Ranges, Graphic_Ranges)\n\t(Letter_Ranges, Lower_Ranges, Upeer_Ranges, Basic_Ranges)\n\t(Decimal_Digit_Ranges, Hexadecimal_Digit_Ranges)\n\t(Alphanumeric_Ranges, Special_Graphic_Ranges, ISO_646_Ranges)\n\t(Character_Ranges, Lower_Case_Mapping, Upper_Case_Mapping)\n\t(Basic_Mapping): Likewise.\n\t* libgnat/a-szmzco.ads (Control_Ranges, Graphic_Ranges)\n\t(Letter_Ranges, Lower_Ranges, Upeer_Ranges, Basic_Ranges)\n\t(Decimal_Digit_Ranges, Hexadecimal_Digit_Ranges)\n\t(Alphanumeric_Ranges, Special_Graphic_Ranges, ISO_646_Ranges)\n\t(Character_Ranges, Lower_Case_Mapping, Upper_Case_Mapping)\n\t(Basic_Mapping): Likewise.\n\t* libgnat/a-teioed.adb (Format_Number): Likewise.\n\t* libgnat/a-wtedit.adb (Format_Number): Likewise.\n\t* libgnat/a-ztedit.adb (Format_Number): Likewise.\n\t* libgnat/g-arrspl.adb (Separators): Likewise.\n\t* libgnat/g-catiio.adb (Month_Name_To_Number): Likewise.\n\t* libgnat/g-cgideb.adb (NL, Title): Likewise.\n\t* libgnat/g-comlin.adb (Internal_Initialize_Option_Scan)\n\t(Display_Section_Help): Likewise.\n\t* libgnat/g-comlin.ads (Opt_Parser_Data): Likewise.\n\t* libgnat/g-debpoo.adb (Set_Dead_Beef, Dump): Likewise.\n\t* libgnat/g-expect.adb (Expect, Has_Process, Send): Likewise.\n\t* libgnat/g-forstr.adb (\"+\", Get_Formatted): Likewise.\n\t* libgnat/g-memdum.adb (Dump): Likewise.\n\t* libgnat/g-rannum.adb (Image): Likewise.\n\t* libgnat/g-sechas.adb (Final, HMAC_Initial_Context): Likewise.\n\t* libgnat/g-sehamd.ads (Initial_State): Likewise.\n\t* libgnat/g-sehash.ads (Initial_State): Likewise.\n\t* libgnat/g-sercom.ads (Data_Rate_Value): Likewise.\n\t* libgnat/g-sercom__linux.adb (C_Data_Rate, C_Bits, C_Stop_Bits)\n\t(C_Parity): Likewise.\n\t* libgnat/g-shsh32.ads (K, Transform): Likewise.\n\t* libgnat/g-shsh64.ads (K, Transform): Likewise.\n\t* libgnat/g-socket.adb (Levels, Modes, Shutmodes, Requests)\n\t(Options, Flags, Get_Name_Info, Image): Likewise.\n\t* libgnat/g-socket.ads (Inet_Addr_Bytes_Length, Inet_Addr_Type)\n\t(IPv4_To_IPv6_Prefix, Any_Inet_Addr, Any_Inet6_Addr)\n\t(No_Inet_Addr, Broadcast_Inet_Addr, Loopback_Inet_Addr)\n\t(Loopback_Inet6_Addr, Unspecified_Group_Inet_Addr)\n\t(All_Hosts_Group_Inet_Addr, All_Routers_Group_Inet_Addr)\n\t(Unspecified_Group_Inet6_Addr, All_Hosts_Group_Inet6_Addr)\n\t(All_Routers_Group_Inet6_Addr):\tLikewise.\n\t* libgnat/g-socpol.adb (To_C, Status, Get_Events): Likewise.\n\t* libgnat/g-socpol.ads (Input_Event, Output_Event, Both_Event)\n\t(Error_Event): Likewise.\n\t* libgnat/g-sothco.ads (Families, Lengths, Sockaddr): Likewise.\n\t* libgnat/g-spipat.adb (OK_For_Simple_Arbno): Likewise.\n\t* libgnat/i-cobol.ads (Ada_To_COBOL, COBOL_To_Ada): Likewise.\n\t* libgnat/i-pacdec.adb (Packed_Byte): Likewise.\n\t* libgnat/i-pacdec.ads (Packed_Size): Likewise.\n\t* libgnat/s-bitops.adb (Masks): Likewise.\n\t* libgnat/s-crc32.adb (Table): Likewise.\n\t* libgnat/s-gearop.adb (Unit_Matrix, Unit_Vector): Likewise.\n\t* libgnat/s-genbig.adb (Out_data, Zero_Data, Big_Exp, Big_Mul)\n\t(To_Bignum, To_String, Image, Leading_Padding): Likewise.\n\t* libgnat/s-htable.adb (Reset): Likewise.\n\t* libgnat/s-imgcha.adb (C0, C1): Likewise.\n\t* libgnat/s-powflt.ads (Powten): Likewise.\n\t* libgnat/s-powlfl.ads (Powten): Likewise.\n\t* libgnat/s-powllf.ads (Powten): Likewise.\n\t* libgnat/s-rannum.adb (Matrix_A, Random_Float_Template, Image):\n\tLikewise.\n\t* libgnat/s-rannum.ads (Generator): Likewise.\n\t* libgnat/s-regexp.adb (Compile,Create_Primary_Table)\n\t(Create_Primary_Table_Glob, Create_Secondary_Table, Compile):\n\tLikewise.\n\t* libgnat/s-regpat.adb (Bit_Conversion, Set, Dump_Until)\n\t(Dump_Current, Dump_Error, Try, Reset_Class): Likewise.\n\t* libgnat/s-regpat.ads (Pattern_Matcher, Never_Match): Likewise.\n\t* libgnat/s-scaval__128.adb (Initialize): Likewise.\n\t* libgnat/s-statxd.adb (Fields, W_F, W_LF)\n\t(W_LLF, W_SF): Likewise.\n\t* libgnat/s-stausa.adb (Initialize, Initialize_Analyzer)\n\t(Output_Results): Likewise.\n\t* libgnat/s-strops.adb (Str_Concat_SC): Likewise.\n\t* libgnat/s-valrea.adb (Maxexp32, Maxexp64, Maxexp80): Likewise.\n\t* libgnat/s-wchcon.ads (WC_Encoding_Letters)\n\t(WC_Longest_Sequences): Likewise.\n\t* par-ch4.adb (P_Aggregate_Or_Paren_Expr): Set\n\tIs_Parenthesis_Aggregate when creating a N_Aggregate using\n\tparenthesis.\n\t* scng.adb (Scan): Lower version needed for bracket syntax from\n\tExtensions to Ada2022.\n\t* sem_aggr.adb (Resolve_Aggregate): Raise error for container\n\taggregate using parenthesis instead of bracket.\n\t(Resolve_Array_Aggregate): Raise warning for aggregate using\n\tparenthesis in Ada2022 with obsolescent warning enabled and not\n\tin GNAT mode.\n\t* sem_util.ads (Check_Ambiguous_Aggregate): Typo fix in comment.", "tree": {"sha": "6859fd4188a8fde717377e47a344a30411a8cfbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6859fd4188a8fde717377e47a344a30411a8cfbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b045f2f2205495b61d63133b16e56c35acbf8090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b045f2f2205495b61d63133b16e56c35acbf8090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b045f2f2205495b61d63133b16e56c35acbf8090", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b045f2f2205495b61d63133b16e56c35acbf8090/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa937f2cdb8ff6b2dce0b6f3042efe700bd437ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa937f2cdb8ff6b2dce0b6f3042efe700bd437ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa937f2cdb8ff6b2dce0b6f3042efe700bd437ec"}], "stats": {"total": 1276, "additions": 652, "deletions": 624}, "files": [{"sha": "f2c51291d077a8640beceea73bbf23296a7f3605", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -159,7 +159,8 @@ package body Exp_Imgv is\n                    Make_Component_Definition (Loc,\n                      Aliased_Present    => False,\n                      Subtype_Indication => New_Occurrence_Of (Ctyp, Loc))),\n-             Expression          => Make_Aggregate (Loc, Expressions => V)));\n+             Expression          => Make_Aggregate (Loc, Expressions => V,\n+                                      Is_Enum_Array_Aggregate => True)));\n       end Append_Table_To;\n \n    --  Start of Build_Enumeration_Image_Tables"}, {"sha": "ca3439e2e84b34b59132755a9ba5c84a5ae72b70", "filename": "gcc/ada/gen_il-fields.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fgen_il-fields.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fgen_il-fields.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-fields.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -258,6 +258,8 @@ package Gen_IL.Fields is\n       Is_Folded_In_Parser,\n       Is_Generic_Contract_Pragma,\n       Is_Homogeneous_Aggregate,\n+      Is_Parenthesis_Aggregate,\n+      Is_Enum_Array_Aggregate,\n       Is_Ignored,\n       Is_Ignored_Ghost_Pragma,\n       Is_In_Discriminant_Check,"}, {"sha": "9f9fef9a186f1dbff3ebb68069019b168aa1e342", "filename": "gcc/ada/gen_il-gen-gen_nodes.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -481,7 +481,9 @@ begin -- Gen_IL.Gen.Gen_Nodes\n        (Sy (Expressions, List_Id, Default_No_List),\n         Sy (Component_Associations, List_Id, Default_No_List),\n         Sy (Null_Record_Present, Flag),\n+        Sy (Is_Parenthesis_Aggregate, Flag),\n         Sy (Is_Homogeneous_Aggregate, Flag),\n+        Sy (Is_Enum_Array_Aggregate, Flag),\n         Sm (Aggregate_Bounds, Node_Id),\n         Sm (Entity_Or_Associated_Node, Node_Id), -- just Associated_Node\n         Sm (Compile_Time_Known_Aggregate, Flag),"}, {"sha": "dc1ed1727a8380cd85ee6e7f63e86952f9710ba5", "filename": "gcc/ada/libgnarl/s-interr.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-interr.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -159,35 +159,35 @@ package body System.Interrupts is\n    end record;\n \n    User_Handler : array (Interrupt_ID'Range) of Handler_Assoc :=\n-                    (others => (null, Static => False));\n+                    [others => (null, Static => False)];\n    pragma Volatile_Components (User_Handler);\n    --  Holds the protected procedure handler (if any) and its Static\n    --  information for each interrupt. A handler is a Static one if it is\n    --  specified through the pragma Attach_Handler. Attach_Handler. Otherwise,\n    --  not static)\n \n    User_Entry : array (Interrupt_ID'Range) of Entry_Assoc :=\n-                  (others => (T => Null_Task, E => Null_Task_Entry));\n+                  [others => (T => Null_Task, E => Null_Task_Entry)];\n    pragma Volatile_Components (User_Entry);\n    --  Holds the task and entry index (if any) for each interrupt\n \n-   Blocked : array (Interrupt_ID'Range) of Boolean := (others => False);\n+   Blocked : array (Interrupt_ID'Range) of Boolean := [others => False];\n    pragma Atomic_Components (Blocked);\n    --  True iff the corresponding interrupt is blocked in the process level\n \n-   Ignored : array (Interrupt_ID'Range) of Boolean := (others => False);\n+   Ignored : array (Interrupt_ID'Range) of Boolean := [others => False];\n    pragma Atomic_Components (Ignored);\n    --  True iff the corresponding interrupt is blocked in the process level\n \n    Last_Unblocker :\n-     array (Interrupt_ID'Range) of Task_Id := (others => Null_Task);\n+     array (Interrupt_ID'Range) of Task_Id := [others => Null_Task];\n    pragma Atomic_Components (Last_Unblocker);\n    --  Holds the ID of the last Task which Unblocked this Interrupt. It\n    --  contains Null_Task if no tasks have ever requested the Unblocking\n    --  operation or the Interrupt is currently Blocked.\n \n    Server_ID : array (Interrupt_ID'Range) of Task_Id :=\n-                 (others => Null_Task);\n+                 [others => Null_Task];\n    pragma Atomic_Components (Server_ID);\n    --  Holds the Task_Id of the Server_Task for each interrupt. Task_Id is\n    --  needed to accomplish locking per Interrupt base. Also is needed to"}, {"sha": "663aed94ebcb57ce1a60fed9b5d11e2e8f24eb09", "filename": "gcc/ada/libgnarl/s-intman.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-intman.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-intman.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-intman.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -74,7 +74,7 @@ package System.Interrupt_Management is\n    --  The interrupt that is used to implement task abort if an interrupt is\n    --  used for that purpose. This is one of the reserved interrupts.\n \n-   Keep_Unmasked : Interrupt_Set := (others => False);\n+   Keep_Unmasked : Interrupt_Set := [others => False];\n    --  Keep_Unmasked (I) is true iff the interrupt I is one that must be kept\n    --  unmasked at all times, except (perhaps) for short critical sections.\n    --  This includes interrupts that are mapped to exceptions (see\n@@ -83,7 +83,7 @@ package System.Interrupt_Management is\n    --  reasons. Where interrupts are implemented as OS signals, and signal\n    --  masking is per-task, the interrupt should be unmasked in ALL TASKS.\n \n-   Reserve : Interrupt_Set := (others => False);\n+   Reserve : Interrupt_Set := [others => False];\n    --  Reserve (I) is true iff the interrupt I is one that cannot be permitted\n    --  to be attached to a user handler. The possible reasons are many. For\n    --  example, it may be mapped to an exception used to implement task abort,"}, {"sha": "f0f65cdb0ce09255b99ffc4d4aaa42c2c2df0dd7", "filename": "gcc/ada/libgnarl/s-intman__posix.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-intman__posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-intman__posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-intman__posix.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -66,7 +66,7 @@ package body System.Interrupt_Management is\n \n    type Interrupt_List is array (Interrupt_ID range <>) of Interrupt_ID;\n    Exception_Interrupts : constant Interrupt_List :=\n-     (SIGFPE, SIGILL, SIGSEGV, SIGBUS);\n+     [SIGFPE, SIGILL, SIGSEGV, SIGBUS];\n \n    Unreserve_All_Interrupts : constant Interfaces.C.int;\n    pragma Import\n@@ -206,8 +206,8 @@ package body System.Interrupt_Management is\n \n       act.sa_mask := Signal_Mask;\n \n-      pragma Assert (Keep_Unmasked = (Interrupt_ID'Range => False));\n-      pragma Assert (Reserve = (Interrupt_ID'Range => False));\n+      pragma Assert (Keep_Unmasked = [Interrupt_ID'Range => False]);\n+      pragma Assert (Reserve = [Interrupt_ID'Range => False]);\n \n       --  Process state of exception signals\n "}, {"sha": "7118a1d2d343e247a18a19b20c04ceaf9c963783", "filename": "gcc/ada/libgnarl/s-mudido__affinity.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-mudido__affinity.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-mudido__affinity.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-mudido__affinity.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -113,7 +113,7 @@ package body System.Multiprocessors.Dispatching_Domains is\n \n    function Create (First : CPU; Last : CPU_Range) return Dispatching_Domain is\n    begin\n-      return Create ((First .. Last => True));\n+      return Create ([First .. Last => True]);\n    end Create;\n \n    function Create (Set : CPU_Set) return Dispatching_Domain is\n@@ -156,7 +156,7 @@ package body System.Multiprocessors.Dispatching_Domains is\n            ST.System_Domain (Rng);\n          Actual : constant ST.Dispatching_Domain :=\n            ST_DD_Slice and not System_Domain_Slice;\n-         Expected : constant ST.Dispatching_Domain := (Rng => False);\n+         Expected : constant ST.Dispatching_Domain := [Rng => False];\n       begin\n          if Actual /= Expected then\n             raise Dispatching_Domain_Error with\n@@ -184,7 +184,7 @@ package body System.Multiprocessors.Dispatching_Domains is\n \n       New_System_Domain (Rng) := New_System_Domain (Rng) and not ST_DD_Slice;\n \n-      if New_System_Domain = (New_System_Domain'Range => False) then\n+      if New_System_Domain = [New_System_Domain'Range => False] then\n          raise Dispatching_Domain_Error with\n            \"would leave System_Dispatching_Domain empty\";\n       end if;"}, {"sha": "4f682e039f33488a4de752068034f11d0b5cdeed", "filename": "gcc/ada/libgnarl/s-osinte__linux.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -132,7 +132,7 @@ package System.OS_Interface is\n \n    type Signal_Set is array (Natural range <>) of Signal;\n \n-   Unmasked : constant Signal_Set := (\n+   Unmasked : constant Signal_Set := [\n       SIGTRAP,\n       --  To enable debugging on multithreaded applications, mark SIGTRAP to\n       --  be kept unmasked.\n@@ -148,17 +148,17 @@ package System.OS_Interface is\n \n       SIGKILL, SIGSTOP\n       --  These two signals actually can't be masked (POSIX won't allow it)\n-      );\n+      ];\n \n-   Reserved : constant Signal_Set := (\n+   Reserved : constant Signal_Set := [\n       SIG32, SIG33, SIG34\n       --  glibc POSIX threads implementation uses two (NPTL) or three\n       --  (LinuxThreads) real-time signals for its own use (see SIGNAL(7)).\n       --  These signals are considered reserved and not unmasked as glibc does\n       --  not permit these signals to be used by the public signal.h API.\n       --  While LinuxThreads is mostly likely unused now, SIG34 is still\n       --  reserved as this behavior is consistent with past GNAT releases.\n-      );\n+      ];\n \n    type sigset_t is private;\n "}, {"sha": "273893464fe1090222ae651ccf9711c4c53569fc", "filename": "gcc/ada/libgnarl/s-taprop__linux.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-taprop__linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-taprop__linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taprop__linux.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -973,8 +973,8 @@ package body System.Task_Primitives.Operations is\n       elsif T.Common.Domain /= null and then\n         (T.Common.Domain /= ST.System_Domain\n           or else T.Common.Domain.all /=\n-                    (Multiprocessors.CPU'First ..\n-                     Multiprocessors.Number_Of_CPUs => True))\n+                    [Multiprocessors.CPU'First ..\n+                     Multiprocessors.Number_Of_CPUs => True])\n       then\n          declare\n             CPUs    : constant size_t :=\n@@ -1494,8 +1494,8 @@ package body System.Task_Primitives.Operations is\n             elsif T.Common.Domain /= null and then\n               (T.Common.Domain /= ST.System_Domain\n                 or else T.Common.Domain.all /=\n-                          (Multiprocessors.CPU'First ..\n-                           Multiprocessors.Number_Of_CPUs => True))\n+                          [Multiprocessors.CPU'First ..\n+                           Multiprocessors.Number_Of_CPUs => True])\n             then\n                --  Set the affinity to all the processors belonging to the\n                --  dispatching domain. To avoid changing CPU affinities when"}, {"sha": "edb2503ee26820d9fd2dc19ea65ad6d678cf8d83", "filename": "gcc/ada/libgnarl/s-tasdeb.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tasdeb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tasdeb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasdeb.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -54,7 +54,7 @@ package body System.Tasking.Debug is\n \n    type Trace_Flag_Set is array (Character) of Boolean;\n \n-   Trace_On : Trace_Flag_Set := ('A' .. 'Z' => False, others => True);\n+   Trace_On : Trace_Flag_Set := ['A' .. 'Z' => False, others => True];\n \n    Stderr_Fd : constant := 2;\n    --  File descriptor for standard error"}, {"sha": "8d75a5e0337c73a9c88a2eaa6a825c9939b7f4d8", "filename": "gcc/ada/libgnarl/s-tasdeb.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tasdeb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tasdeb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasdeb.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -65,7 +65,7 @@ package System.Tasking.Debug is\n    -- General GDB support --\n    -------------------------\n \n-   Known_Tasks : array (0 .. 999) of Task_Id := (others => null)\n+   Known_Tasks : array (0 .. 999) of Task_Id := [others => null]\n      with Atomic_Components;\n    --  Global array of tasks read by gdb, and updated by Create_Task and\n    --  Finalize_TCB. Ensure access to its components is atomic to allow"}, {"sha": "f2877e6863ccf847572a929eb665f8a3077b5869", "filename": "gcc/ada/libgnarl/s-tasinf__linux.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tasinf__linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tasinf__linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasinf__linux.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -79,8 +79,8 @@ package System.Task_Info is\n \n    subtype CPU_Set is System.OS_Interface.cpu_set_t;\n \n-   Any_CPU : constant CPU_Set := (bits => (others => True));\n-   No_CPU  : constant CPU_Set := (bits => (others => False));\n+   Any_CPU : constant CPU_Set := (bits => [others => True]);\n+   No_CPU  : constant CPU_Set := (bits => [others => False]);\n \n    Invalid_CPU_Number : exception;\n    --  Raised when an invalid CPU mask has been specified"}, {"sha": "478809c3547002f39a0fd02cc88bdc7e176e2004", "filename": "gcc/ada/libgnarl/s-taskin.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-taskin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-taskin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taskin.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -140,7 +140,7 @@ package body System.Tasking is\n       T.Common.Global_Task_Lock_Nesting := 0;\n       T.Common.Fall_Back_Handler        := null;\n       T.Common.Specific_Handler         := null;\n-      T.Common.Debug_Events             := (others => False);\n+      T.Common.Debug_Events             := [others => False];\n       T.Common.Task_Image_Len           := 0;\n \n       if T.Common.Parent = null then"}, {"sha": "0073c1979a517fb1190f7422453e95b7eb2e95bb", "filename": "gcc/ada/libgnarl/s-taskin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1157,7 +1157,7 @@ package System.Tasking is\n       --  non-terminated task so that the associated storage is automatically\n       --  reclaimed when the task terminates.\n \n-      Attributes : Attribute_Array := (others => 0);\n+      Attributes : Attribute_Array := [others => 0];\n       --  Task attributes\n \n       --  IMPORTANT Note: the Entry_Queues field is last for efficiency of"}, {"sha": "7b11d39c9e015b887ea8c096f22180547ef7991e", "filename": "gcc/ada/libgnarl/s-tasren.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -59,28 +59,28 @@ package body System.Tasking.Rendezvous is\n    ----------------\n \n    Default_Treatment : constant array (Select_Modes) of Select_Treatment :=\n-     (Simple_Mode         => No_Alternative_Open,\n+     [Simple_Mode         => No_Alternative_Open,\n       Else_Mode           => Else_Selected,\n       Terminate_Mode      => Terminate_Selected,\n-      Delay_Mode          => No_Alternative_Open);\n+      Delay_Mode          => No_Alternative_Open];\n \n    New_State : constant array (Boolean, Entry_Call_State)\n      of Entry_Call_State :=\n-       (True =>\n-         (Never_Abortable   => Never_Abortable,\n+       [True =>\n+         [Never_Abortable   => Never_Abortable,\n           Not_Yet_Abortable => Now_Abortable,\n           Was_Abortable     => Now_Abortable,\n           Now_Abortable     => Now_Abortable,\n           Done              => Done,\n-          Cancelled         => Cancelled),\n+          Cancelled         => Cancelled],\n         False =>\n-         (Never_Abortable   => Never_Abortable,\n+         [Never_Abortable   => Never_Abortable,\n           Not_Yet_Abortable => Not_Yet_Abortable,\n           Was_Abortable     => Was_Abortable,\n           Now_Abortable     => Now_Abortable,\n           Done              => Done,\n-          Cancelled         => Cancelled)\n-       );\n+          Cancelled         => Cancelled]\n+       ];\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "245145cf67ea7b11cbb061109f0ab7e6ab4f944c", "filename": "gcc/ada/libgnarl/s-tassta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1462,7 +1462,7 @@ package body System.Tasking.Stages is\n \n       To_Stderr (System.Address_Image (To_Address (Self_Id)));\n       To_Stderr (\" terminated by unhandled exception\");\n-      To_Stderr ((1 => ASCII.LF));\n+      To_Stderr ([ASCII.LF]);\n       To_Stderr (Exception_Information (Excep.all));\n       Initialization.Task_Unlock (Self_Id);\n    end Trace_Unhandled_Exception_In_Task;"}, {"sha": "ebc16e9a1a3f1c7330f4077ed3a93b23429c4afa", "filename": "gcc/ada/libgnarl/s-tataat.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tataat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tataat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tataat.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -47,7 +47,7 @@ package body System.Tasking.Task_Attributes is\n    end record;\n \n    Index_Array : array (1 .. Max_Attribute_Count) of Index_Info :=\n-                   (others => (False, False));\n+                   [others => (False, False)];\n \n    --  Note that this package will use an efficient implementation with no\n    --  locks and no extra dynamic memory allocation if Attribute can fit in a"}, {"sha": "90e45e99760eaa293b90c78748aa0f39d9c58487", "filename": "gcc/ada/libgnarl/s-tpobop.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnarl%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tpobop.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -942,21 +942,21 @@ package body System.Tasking.Protected_Objects.Operations is\n \n    New_State : constant array (Boolean, Entry_Call_State)\n      of Entry_Call_State :=\n-       (True =>\n-         (Never_Abortable   => Never_Abortable,\n+       [True =>\n+         [Never_Abortable   => Never_Abortable,\n           Not_Yet_Abortable => Now_Abortable,\n           Was_Abortable     => Now_Abortable,\n           Now_Abortable     => Now_Abortable,\n           Done              => Done,\n-          Cancelled         => Cancelled),\n+          Cancelled         => Cancelled],\n         False =>\n-         (Never_Abortable   => Never_Abortable,\n+         [Never_Abortable   => Never_Abortable,\n           Not_Yet_Abortable => Not_Yet_Abortable,\n           Was_Abortable     => Was_Abortable,\n           Now_Abortable     => Now_Abortable,\n           Done              => Done,\n-          Cancelled         => Cancelled)\n-       );\n+          Cancelled         => Cancelled]\n+       ];\n \n    procedure Update_For_Queue_To_PO\n      (Entry_Call : Entry_Call_Link;"}, {"sha": "3d7ae902c0daa0ec466d6cefd9973f81257d5ba2", "filename": "gcc/ada/libgnat/a-calend.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-calend.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -206,14 +206,14 @@ is\n \n    Cumulative_Days_Before_Month :\n      constant array (Month_Number) of Natural :=\n-       (0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334);\n+       [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n \n    --  The following table contains the hard time values of all existing leap\n    --  seconds. The values are produced by the utility program xleaps.adb. This\n    --  must be updated when additional leap second times are defined.\n \n    Leap_Second_Times : constant array (1 .. Leap_Seconds_Count) of Time_Rep :=\n-     (-5601484800000000000,\n+     [-5601484800000000000,\n       -5585587199000000000,\n       -5554051198000000000,\n       -5522515197000000000,\n@@ -239,7 +239,7 @@ is\n       -4449513577000000000,\n       -4339180776000000000,\n       -4244572775000000000,\n-      -4197052774000000000);\n+      -4197052774000000000];\n \n    ---------\n    -- \"+\" --"}, {"sha": "caca8da53bb4f8922dc81bc1637c296075a80588", "filename": "gcc/ada/libgnat/a-calend.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-calend.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -242,7 +242,7 @@ private\n    --  epoch) expressed in nanoseconds. Note that year 2100 is non-leap.\n \n    Days_In_Month : constant array (Month_Number) of Day_Number :=\n-                     (31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n+                     [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    --  Days in month for non-leap year, leap year case is adjusted in code\n \n    Invalid_Time_Zone_Offset : Long_Integer;"}, {"sha": "4770608efcddf291d5fffbf7c2d1127d5b9a2124", "filename": "gcc/ada/libgnat/a-cfinve.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-cfinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-cfinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfinve.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -871,7 +871,7 @@ is\n \n       J := To_Array_Index (Before);\n \n-      Elems (Container) (J .. J - 1 + Count) := (others => H (New_Item));\n+      Elems (Container) (J .. J - 1 + Count) := [others => H (New_Item)];\n    end Insert;\n \n    procedure Insert\n@@ -1445,7 +1445,7 @@ is\n            (Capacity     => Length,\n             Last         => Last,\n             Elements_Ptr => <>,\n-            Elements     => (others => H (New_Item)));\n+            Elements     => [others => H (New_Item)]);\n       end;\n    end To_Vector;\n "}, {"sha": "387af423b7eb776aeedff48ebe7de45f21c41ec7", "filename": "gcc/ada/libgnat/a-chahan.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-chahan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-chahan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-chahan.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -64,7 +64,7 @@ is\n    Graphic    : constant Character_Flags := Alphanum or Special;\n \n    Char_Map : constant array (Character) of Character_Flags :=\n-   (\n+   [\n      NUL                         => Control,\n      SOH                         => Control,\n      STX                         => Control,\n@@ -282,7 +282,7 @@ is\n      LC_Y_Acute                  => Lower,\n      LC_Icelandic_Thorn          => Lower + Basic,\n      LC_Y_Diaeresis              => Lower\n-   );\n+   ];\n \n    ---------------------\n    -- Is_Alphanumeric --"}, {"sha": "e6db47f5bc6802484b5de2788a9797e186240181", "filename": "gcc/ada/libgnat/a-chtgbo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-chtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-chtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-chtgbo.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -60,7 +60,7 @@ package body Ada.Containers.Hash_Tables.Generic_Bounded_Operations is\n       --  HT.Busy := 0;\n       --  HT.Lock := 0;\n       HT.Free := -1;\n-      HT.Buckets := (others => 0);  -- optimize this somehow ???\n+      HT.Buckets := [others => 0];  -- optimize this somehow ???\n    end Clear;\n \n    --------------------------"}, {"sha": "f340f23b7c99a5d64dbb67b245ba3a0b3452e502", "filename": "gcc/ada/libgnat/a-cobove.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -258,7 +258,7 @@ package body Ada.Containers.Bounded_Vectors is\n       end if;\n \n       return Vector'(Capacity => 2,\n-                     Elements => (Left, Right),\n+                     Elements => [Left, Right],\n                      Last     => Index_Type'First + 1,\n                      others   => <>);\n    end \"&\";\n@@ -1227,15 +1227,15 @@ package body Ada.Containers.Bounded_Vectors is\n          --  The new items are being appended to the vector, so no\n          --  sliding of existing elements is required.\n \n-         EA (J .. New_Length) := (others => New_Item);\n+         EA (J .. New_Length) := [others => New_Item];\n \n       else\n          --  The new items are being inserted before some existing\n          --  elements, so we must slide the existing elements up to their\n          --  new home.\n \n          EA (J + Count .. New_Length) := EA (J .. Old_Length);\n-         EA (J .. J + Count - 1) := (others => New_Item);\n+         EA (J .. J + Count - 1) := [others => New_Item];\n       end if;\n \n       if Index_Type'Base'Last >= Count_Type'Pos (Count_Type'Last) then\n@@ -2770,7 +2770,7 @@ package body Ada.Containers.Bounded_Vectors is\n       end if;\n \n       return V : Vector (Capacity => Length) do\n-         V.Elements := (others => New_Item);\n+         V.Elements := [others => New_Item];\n          V.Last := Last;\n       end return;\n    end To_Vector;"}, {"sha": "4031e992b552d68c18dabc66563e5ff218f9c8bc", "filename": "gcc/ada/libgnat/a-cofove.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-cofove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-cofove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cofove.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -763,7 +763,7 @@ is\n \n       J := To_Array_Index (Before);\n \n-      Container.Elements (J .. J - 1 + Count) := (others => New_Item);\n+      Container.Elements (J .. J - 1 + Count) := [others => New_Item];\n    end Insert;\n \n    procedure Insert\n@@ -1304,7 +1304,7 @@ is\n          return\n            (Capacity => Length,\n             Last     => Last,\n-            Elements => (others => New_Item));\n+            Elements => [others => New_Item]);\n       end;\n    end To_Vector;\n "}, {"sha": "a52f542329daf1c22ae262d291efea8233e442fb", "filename": "gcc/ada/libgnat/a-cohata.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-cohata.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-cohata.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohata.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -73,7 +73,7 @@ package Ada.Containers.Hash_Tables is\n          TC      : aliased Helpers.Tamper_Counts;\n          Free    : Count_Type'Base             := -1;\n          Nodes   : Nodes_Type (1 .. Capacity);\n-         Buckets : Buckets_Type (1 .. Modulus) := (others => 0);\n+         Buckets : Buckets_Type (1 .. Modulus) := [others => 0];\n       end record;\n \n       package Implementation is new Helpers.Generic_Implementation;"}, {"sha": "7ed88a5b55e708f16f48c856dba75fee7127ace1", "filename": "gcc/ada/libgnat/a-coinve.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coinve.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1027,7 +1027,7 @@ is\n                              SA (Index_Type'First .. Source.Last);\n                   begin\n                      TA (Index_Type'First .. J) := Src;\n-                     Src := (others => null);\n+                     Src := [others => null];\n                   end;\n \n                   Source.Last := No_Index;\n@@ -1472,7 +1472,7 @@ is\n                      --  we started by clearing out all of the stale values,\n                      --  leaving a \"hole\" in the middle of the array.\n \n-                     E (K .. Index - 1) := (others => null);\n+                     E (K .. Index - 1) := [others => null];\n                      raise;\n                end;\n             end if;\n@@ -2157,7 +2157,7 @@ is\n                end if;\n \n                E (Index .. New_Last) := E (Before .. Container.Last);\n-               E (Before .. Index - 1) := (others => null);\n+               E (Before .. Index - 1) := [others => null];\n             end if;\n          end;\n "}, {"sha": "6f39ceb2138163c4e6cd9acfa6dda2011a9298d8", "filename": "gcc/ada/libgnat/a-convec.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1161,7 +1161,7 @@ is\n \n          Container.Elements := new Elements_Type'\n                                      (Last => New_Last,\n-                                      EA   => (others => New_Item));\n+                                      EA   => [others => New_Item]);\n \n          --  The allocation of the new, internal array succeeded, so it is now\n          --  safe to update the Last index, restoring container invariants.\n@@ -1189,7 +1189,7 @@ is\n                --  The new items are being appended to the vector, so no\n                --  sliding of existing elements is required.\n \n-               EA (Before .. New_Last) := (others => New_Item);\n+               EA (Before .. New_Last) := [others => New_Item];\n \n             else\n                --  The new items are being inserted before some existing\n@@ -1204,7 +1204,7 @@ is\n                end if;\n \n                EA (Index .. New_Last) := EA (Before .. Container.Last);\n-               EA (Before .. Index - 1) := (others => New_Item);\n+               EA (Before .. Index - 1) := [others => New_Item];\n             end if;\n          end;\n \n@@ -1270,7 +1270,7 @@ is\n            SA (Index_Type'First .. Before - 1);\n \n          if Before > Container.Last then\n-            DA (Before .. New_Last) := (others => New_Item);\n+            DA (Before .. New_Last) := [others => New_Item];\n \n          else\n             --  The new items are being inserted before some existing elements,\n@@ -1282,7 +1282,7 @@ is\n                Index := Index_Type'Base (Count_Type'Base (Before) + Count);\n             end if;\n \n-            DA (Before .. Index - 1) := (others => New_Item);\n+            DA (Before .. Index - 1) := [others => New_Item];\n             DA (Index .. New_Last) := SA (Before .. Container.Last);\n          end if;\n \n@@ -3265,7 +3265,7 @@ is\n          Last := Index_Type'Base (Count_Type'Base (No_Index) + Length);\n       end if;\n \n-      Elements := new Elements_Type'(Last, EA => (others => New_Item));\n+      Elements := new Elements_Type'(Last, EA => [others => New_Item]);\n \n       return (Controlled with Elements, Last, TC => <>);\n    end To_Vector;"}, {"sha": "8a267fb3fbaa4a177ec5f15b4e7ba3b5ba2c819c", "filename": "gcc/ada/libgnat/a-coprnu.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-coprnu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-coprnu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coprnu.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -38,12 +38,12 @@ package Ada.Containers.Prime_Numbers is\n    type Primes_Type is array (Positive range <>) of Hash_Type;\n \n    Primes : constant Primes_Type :=\n-     (53,         97,         193,       389,       769,\n+     [53,         97,         193,       389,       769,\n       1543,       3079,       6151,      12289,     24593,\n       49157,      98317,      196613,    393241,    786433,\n       1572869,    3145739,    6291469,   12582917,  25165843,\n       50331653,   100663319,  201326611, 402653189, 805306457,\n-      1610612741, 3221225473, 4294967291);\n+      1610612741, 3221225473, 4294967291];\n \n    function To_Prime (Length : Count_Type) return Hash_Type;\n    --  Returns the smallest value in Primes not less than Length"}, {"sha": "41dca3c6a56140a6a1901f3cfbd54749dc0d90f8", "filename": "gcc/ada/libgnat/a-direct.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-direct.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -89,7 +89,7 @@ package body Ada.Directories is\n    end record;\n    --  The current state of a search\n \n-   Empty_String : constant String := (1 .. 0 => ASCII.NUL);\n+   Empty_String : constant String := \"\";\n    --  Empty string, returned by function Extension when there is no extension\n \n    procedure Free is new Ada.Unchecked_Deallocation (Search_Data, Search_Ptr);\n@@ -107,7 +107,7 @@ package body Ada.Directories is\n      (Search                 : in out Search_Type;\n       Directory              : String;\n       Pattern                : String;\n-      Filter                 : Filter_Type := (others => True);\n+      Filter                 : Filter_Type := [others => True];\n       Force_Case_Insensitive : Boolean);\n    --  Similar to Start_Search except we can force a search to be\n    --  case-insensitive, which is important for detecting the name-case\n@@ -1094,7 +1094,7 @@ package body Ada.Directories is\n         (Search    => S,\n          Directory => To_String (Dir_Path),\n          Pattern   => \"\",\n-         Filter    => (Directory => False, others => True));\n+         Filter    => [Directory => False, others => True]);\n \n       loop\n          Get_Next_Entry (S, Test_File);\n@@ -1114,7 +1114,7 @@ package body Ada.Directories is\n         (Search                 => S,\n          Directory              => To_String (Dir_Path),\n          Pattern                => Simple_Name (Test_File),\n-         Filter                 => (Directory => False, others => True),\n+         Filter                 => [Directory => False, others => True],\n          Force_Case_Insensitive => True);\n \n       --  We will find at least one match due to the search hitting our test\n@@ -1215,7 +1215,7 @@ package body Ada.Directories is\n    procedure Search\n      (Directory : String;\n       Pattern   : String;\n-      Filter    : Filter_Type := (others => True);\n+      Filter    : Filter_Type := [others => True];\n       Process   : not null access procedure\n                                     (Directory_Entry : Directory_Entry_Type))\n    is\n@@ -1401,7 +1401,7 @@ package body Ada.Directories is\n      (Search    : in out Search_Type;\n       Directory : String;\n       Pattern   : String;\n-      Filter    : Filter_Type := (others => True))\n+      Filter    : Filter_Type := [others => True])\n    is\n    begin\n       Start_Search_Internal (Search, Directory, Pattern, Filter, False);\n@@ -1415,7 +1415,7 @@ package body Ada.Directories is\n      (Search                 : in out Search_Type;\n       Directory              : String;\n       Pattern                : String;\n-      Filter                 : Filter_Type := (others => True);\n+      Filter                 : Filter_Type := [others => True];\n       Force_Case_Insensitive : Boolean)\n    is\n       function opendir (file_name : String) return DIRs;"}, {"sha": "a88cd014c23cc54781ec36c9b9cfa57a1f3ae349", "filename": "gcc/ada/libgnat/a-direct.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-direct.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-direct.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-direct.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -366,7 +366,7 @@ package Ada.Directories is\n      (Search    : in out Search_Type;\n       Directory : String;\n       Pattern   : String;\n-      Filter    : Filter_Type := (others => True));\n+      Filter    : Filter_Type := [others => True]);\n    --  Starts a search in the directory entry in the directory named by\n    --  Directory for entries matching Pattern. Pattern represents a file name\n    --  matching pattern. If Pattern is null, all items in the directory are\n@@ -407,7 +407,7 @@ package Ada.Directories is\n    procedure Search\n      (Directory : String;\n       Pattern   : String;\n-      Filter    : Filter_Type := (others => True);\n+      Filter    : Filter_Type := [others => True];\n       Process   : not null access procedure\n                                     (Directory_Entry : Directory_Entry_Type));\n    --  Searches in the directory named by Directory for entries matching"}, {"sha": "1258bee9cae6fd6e3f6bf8fbb001a0ab8942273b", "filename": "gcc/ada/libgnat/a-direio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-direio.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -45,7 +45,7 @@ with Ada.Unchecked_Conversion;\n package body Ada.Direct_IO is\n \n    Zeroes : constant System.Storage_Elements.Storage_Array :=\n-     (1 .. System.Storage_Elements.Storage_Offset (Bytes) => 0);\n+     [1 .. System.Storage_Elements.Storage_Offset (Bytes) => 0];\n    --  Buffer used to fill out partial records\n \n    package FCB renames System.File_Control_Block;"}, {"sha": "d1820f4f3dad96af964f616ca01cac0e816ddd76", "filename": "gcc/ada/libgnat/a-nbnbre.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -441,8 +441,8 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n          if Str = \"\" then\n             return Leading_Padding (\"0\", Min_Length, Char);\n          else\n-            return (1 .. Integer'Max (Integer (Min_Length) - Str'Length, 0)\n-                           => Char) & Str;\n+            return [1 .. Integer'Max (Integer (Min_Length) - Str'Length, 0)\n+                           => Char] & Str;\n          end if;\n       end Leading_Padding;\n \n@@ -468,8 +468,8 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n             return Str (Str'First .. Str'First + Length - 1);\n          else\n             return Str &\n-              (1 .. Integer'Max (Integer (Length) - Str'Length, 0)\n-                      => Char);\n+              [1 .. Integer'Max (Integer (Length) - Str'Length, 0)\n+                      => Char];\n          end if;\n       end Trailing_Padding;\n \n@@ -495,7 +495,7 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n             if Index < 0 then\n                return Leading_Padding (\"0\", Fore)\n                  & \".\"\n-                 & Trailing_Padding ((1 .. -Index => '0') & Str, Aft)\n+                 & Trailing_Padding ([1 .. -Index => '0'] & Str, Aft)\n                  & (if Exp = 0 then \"\" else \"E+\" & Image (Natural (Exp)));\n             else\n                return Leading_Padding (Str (Str'First .. Index), Fore)"}, {"sha": "5095db8ee65443ba5ac9fb81d42c4ed9988752a2", "filename": "gcc/ada/libgnat/a-ngrear.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-ngrear.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-ngrear.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ngrear.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -614,7 +614,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n       --        different bounds, so take care indexing elements. Assignment\n       --        as a whole is fine as sliding is automatic in that case.\n \n-      Vectors := (if not Compute_Vectors then (1 .. 0 => (1 .. 0 => 0.0))\n+      Vectors := (if not Compute_Vectors then [1 .. 0 => [1 .. 0 => 0.0]]\n                   else Unit_Matrix (Vectors'Length (1), Vectors'Length (2)));\n       Values := Diagonal (M);\n \n@@ -637,7 +637,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n          --  an absolute value that exceeds the threshold.\n \n          Diag := Values;\n-         Diag_Adj := (others => 0.0); -- Accumulates adjustments to Diag\n+         Diag_Adj := [others => 0.0]; -- Accumulates adjustments to Diag\n \n          for Row in 1 .. N - 1 loop\n             for Col in Row + 1 .. N loop"}, {"sha": "6e729edfd9aa96f3b039a757ef9b70c358b0cca0", "filename": "gcc/ada/libgnat/a-stbubo.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -90,10 +90,10 @@ package body Ada.Strings.Text_Buffers.Bounded is\n             --  If this aggregate becomes illegal due to new field, don't\n             --  forget to add corresponding assignment statement below.\n             Dummy : array (1 .. 0) of Buffer_Type (0) :=\n-              (others =>\n-                 (Max_Characters => 0, Chars => <>, Indentation => <>,\n+              [others =>\n+                 [Max_Characters => 0, Chars => <>, Indentation => <>,\n                   Indent_Pending => <>, UTF_8_Length => <>, UTF_8_Column => <>,\n-                  All_7_Bits     => <>, All_8_Bits => <>, Truncated => <>));\n+                  All_7_Bits     => <>, All_8_Bits => <>, Truncated => <>]];\n          begin\n             Buffer.Indentation    := Defaulted.Indentation;\n             Buffer.Indent_Pending := Defaulted.Indent_Pending;"}, {"sha": "7cf7a343acae94f0877872c81e914407dfb621a3", "filename": "gcc/ada/libgnat/a-stbufo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stbufo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stbufo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stbufo.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -42,7 +42,7 @@ package body Ada.Strings.Text_Buffers.Formatting is\n       X1, X2, X3, X4, X5, X6, X7, X8, X9 : Utils.UTF_8_Lines := \"\")\n    is\n       J : Positive := T'First;\n-      Used : array (1 .. 9) of Boolean := (others => False);\n+      Used : array (1 .. 9) of Boolean := [others => False];\n    begin\n       while J <= T'Last loop\n          if T (J) = '\\' then"}, {"sha": "b97ec02c1e1c9a82e509da351857a61b4a6eab35", "filename": "gcc/ada/libgnat/a-stbuun.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -103,10 +103,10 @@ package body Ada.Strings.Text_Buffers.Unbounded is\n             --  If this aggregate becomes illegal due to new field, don't\n             --  forget to add corresponding assignment statement below.\n             Dummy : array (1 .. 0) of Buffer_Type :=\n-              (others =>\n-                 (Indentation  => <>, Indent_Pending => <>, UTF_8_Length => <>,\n+              [others =>\n+                 [Indentation  => <>, Indent_Pending => <>, UTF_8_Length => <>,\n                   UTF_8_Column => <>, All_7_Bits => <>, All_8_Bits => <>,\n-                  List         => <>, Last_Used => <>));\n+                  List         => <>, Last_Used => <>]];\n          begin\n             Buffer.Indentation    := Defaulted.Indentation;\n             Buffer.Indent_Pending := Defaulted.Indent_Pending;"}, {"sha": "2d7d371b95e7036d14ee3bb90a244b7b529d723f", "filename": "gcc/ada/libgnat/a-stbuut.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stbuut.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stbuut.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stbuut.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -35,28 +35,28 @@ package body Ada.Strings.Text_Buffers.Utils is\n      (Buffer : in out Root_Buffer_Type'Class; Item : Character_7)\n    is\n    begin\n-      Put (Buffer, (1 => Item));\n+      Put (Buffer, [Item]);\n    end Put_7bit;\n \n    procedure Put_Character\n      (Buffer : in out Root_Buffer_Type'Class; Item : Character)\n    is\n    begin\n-      Put (Buffer, (1 => Item));\n+      Put (Buffer, [Item]);\n    end Put_Character;\n \n    procedure Put_Wide_Character\n      (Buffer : in out Root_Buffer_Type'Class; Item : Wide_Character)\n    is\n    begin\n-      Wide_Put (Buffer, (1 => Item));\n+      Wide_Put (Buffer, [Item]);\n    end Put_Wide_Character;\n \n    procedure Put_Wide_Wide_Character\n      (Buffer : in out Root_Buffer_Type'Class; Item : Wide_Wide_Character)\n    is\n    begin\n-      Wide_Wide_Put (Buffer, (1 => Item));\n+      Wide_Wide_Put (Buffer, [Item]);\n    end Put_Wide_Wide_Character;\n \n    procedure Put_UTF_8_Lines"}, {"sha": "8d2f6f7d41191db6a2406e04199c2e4042687319", "filename": "gcc/ada/libgnat/a-stmaco.ads", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stmaco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stmaco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stmaco.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -64,37 +64,37 @@ private\n    package L renames Ada.Characters.Latin_1;\n \n    Control_Set               : constant Character_Set :=\n-     (L.NUL                  ..  L.US                  => True,\n+     [L.NUL                  ..  L.US                  => True,\n       L.DEL                  ..  L.APC                 => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    Graphic_Set               : constant Character_Set :=\n-     (L.Space                ..  L.Tilde               => True,\n+     [L.Space                ..  L.Tilde               => True,\n       L.No_Break_Space       ..  L.LC_Y_Diaeresis      => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    Letter_Set                : constant Character_Set :=\n-     ('A'                    .. 'Z'                    => True,\n+     ['A'                    .. 'Z'                    => True,\n       L.LC_A                 ..  L.LC_Z                => True,\n       L.UC_A_Grave           ..  L.UC_O_Diaeresis      => True,\n       L.UC_O_Oblique_Stroke  ..  L.LC_O_Diaeresis      => True,\n       L.LC_O_Oblique_Stroke  ..  L.LC_Y_Diaeresis      => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    Lower_Set                 : constant Character_Set :=\n-     (L.LC_A                 ..  L.LC_Z                => True,\n+     [L.LC_A                 ..  L.LC_Z                => True,\n       L.LC_German_Sharp_S    ..  L.LC_O_Diaeresis      => True,\n       L.LC_O_Oblique_Stroke  ..  L.LC_Y_Diaeresis      => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    Upper_Set                 : constant Character_Set :=\n-     ('A'                    ..  'Z'                   => True,\n+     ['A'                    ..  'Z'                   => True,\n       L.UC_A_Grave           ..  L.UC_O_Diaeresis      => True,\n       L.UC_O_Oblique_Stroke  ..  L.UC_Icelandic_Thorn  => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    Basic_Set                 : constant Character_Set :=\n-     ('A'                    .. 'Z'                    => True,\n+     ['A'                    .. 'Z'                    => True,\n       L.LC_A                 ..  L.LC_Z                => True,\n       L.UC_AE_Diphthong      ..  L.UC_AE_Diphthong     => True,\n       L.LC_AE_Diphthong      ..  L.LC_AE_Diphthong     => True,\n@@ -103,40 +103,40 @@ private\n       L.LC_Icelandic_Thorn   ..  L.LC_Icelandic_Thorn  => True,\n       L.UC_Icelandic_Eth     ..  L.UC_Icelandic_Eth    => True,\n       L.LC_Icelandic_Eth     ..  L.LC_Icelandic_Eth    => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    Decimal_Digit_Set         : constant Character_Set :=\n-     ('0'                    ..  '9'                   => True,\n-      others                                           => False);\n+     ['0'                    ..  '9'                   => True,\n+      others                                           => False];\n \n    Hexadecimal_Digit_Set     : constant Character_Set :=\n-     ('0'                    ..  '9'                   => True,\n+     ['0'                    ..  '9'                   => True,\n       'A'                    ..  'F'                   => True,\n       L.LC_A                 ..  L.LC_F                => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    Alphanumeric_Set          : constant Character_Set :=\n-     ('0'                    ..  '9'                   => True,\n+     ['0'                    ..  '9'                   => True,\n       'A'                    ..  'Z'                   => True,\n       L.LC_A                 ..  L.LC_Z                => True,\n       L.UC_A_Grave           ..  L.UC_O_Diaeresis      => True,\n       L.UC_O_Oblique_Stroke  ..  L.LC_O_Diaeresis      => True,\n       L.LC_O_Oblique_Stroke  ..  L.LC_Y_Diaeresis      => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    Special_Set               : constant Character_Set :=\n-     (L.Space                ..  L.Solidus             => True,\n+     [L.Space                ..  L.Solidus             => True,\n       L.Colon                ..  L.Commercial_At       => True,\n       L.Left_Square_Bracket  ..  L.Grave               => True,\n       L.Left_Curly_Bracket   ..  L.Tilde               => True,\n       L.No_Break_Space       ..  L.Inverted_Question   => True,\n       L.Multiplication_Sign  ..  L.Multiplication_Sign => True,\n       L.Division_Sign        ..  L.Division_Sign       => True,\n-      others                                           => False);\n+      others                                           => False];\n \n    ISO_646_Set               : constant Character_Set :=\n-     (L.NUL                  ..  L.DEL                 => True,\n-      others                                           => False);\n+     [L.NUL                  ..  L.DEL                 => True,\n+      others                                           => False];\n \n    Lower_Case_Map : constant Character_Mapping :=\n      (L.NUL                         &  -- NUL                             0"}, {"sha": "6efdebc18c971f18b10c8793269d15442743af9a", "filename": "gcc/ada/libgnat/a-strbou.ads", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strbou.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -2202,7 +2202,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n                  Slice (Head'Result, 1, Length (Source)) = To_String (Source)\n                and then\n                  Slice (Head'Result, Length (Source) + 1, Count) =\n-                   (1 .. Count - Length (Source) => Pad),\n+                   [1 .. Count - Length (Source) => Pad],\n \n            Count > Max_Length and then Drop = Right\n            =>\n@@ -2213,13 +2213,13 @@ package Ada.Strings.Bounded with SPARK_Mode is\n                  Slice (Head'Result, 1, Length (Source)) = To_String (Source)\n                and then\n                  Slice (Head'Result, Length (Source) + 1, Max_Length) =\n-                   (1 .. Max_Length - Length (Source) => Pad),\n+                   [1 .. Max_Length - Length (Source) => Pad],\n \n            Count - Length (Source) > Max_Length and then Drop = Left\n            =>\n              --  Source is fully dropped at the left\n \n-             To_String (Head'Result) = (1 .. Max_Length => Pad),\n+             To_String (Head'Result) = [1 .. Max_Length => Pad],\n \n            others\n            =>\n@@ -2232,7 +2232,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n                and then\n                  Slice (Head'Result,\n                    Max_Length - Count + Length (Source) + 1, Max_Length) =\n-                     (1 .. Count - Length (Source) => Pad));\n+                     [1 .. Count - Length (Source) => Pad]);\n \n       procedure Head\n         (Source : in out Bounded_String;\n@@ -2258,7 +2258,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n                    To_String (Source'Old)\n                and then\n                  Slice (Source, Length (Source'Old) + 1, Count) =\n-                   (1 .. Count - Length (Source'Old) => Pad),\n+                   [1 .. Count - Length (Source'Old) => Pad],\n \n            Count > Max_Length and then Drop = Right\n            =>\n@@ -2270,13 +2270,13 @@ package Ada.Strings.Bounded with SPARK_Mode is\n                    To_String (Source'Old)\n                and then\n                  Slice (Source, Length (Source'Old) + 1, Max_Length) =\n-                   (1 .. Max_Length - Length (Source'Old) => Pad),\n+                   [1 .. Max_Length - Length (Source'Old) => Pad],\n \n            Count - Length (Source) > Max_Length and then Drop = Left\n            =>\n              --  Source is fully dropped on the left\n \n-             To_String (Source) = (1 .. Max_Length => Pad),\n+             To_String (Source) = [1 .. Max_Length => Pad],\n \n            others\n            =>\n@@ -2290,7 +2290,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n                and then\n                  Slice (Source,\n                    Max_Length - Count + Length (Source'Old) + 1, Max_Length) =\n-                     (1 .. Count - Length (Source'Old) => Pad));\n+                     [1 .. Count - Length (Source'Old) => Pad]);\n \n       function Tail\n         (Source : Bounded_String;\n@@ -2316,7 +2316,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n              Length (Tail'Result) = Count\n                and then\n                  Slice (Tail'Result, 1, Count - Length (Source)) =\n-                   (1 .. Count - Length (Source) => Pad)\n+                   [1 .. Count - Length (Source) => Pad]\n                and then\n                  Slice (Tail'Result, Count - Length (Source) + 1, Count) =\n                    To_String (Source),\n@@ -2328,7 +2328,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n              Length (Tail'Result) = Max_Length\n                and then\n                  Slice (Tail'Result, 1, Max_Length - Length (Source)) =\n-                   (1 .. Max_Length - Length (Source) => Pad)\n+                   [1 .. Max_Length - Length (Source) => Pad]\n                and then\n                  (if Length (Source) > 0 then\n                     Slice (Tail'Result,\n@@ -2339,7 +2339,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n            =>\n              --  Source is fully dropped on the right\n \n-             To_String (Tail'Result) = (1 .. Max_Length => Pad),\n+             To_String (Tail'Result) = [1 .. Max_Length => Pad],\n \n            others\n            =>\n@@ -2348,7 +2348,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n              Length (Tail'Result) = Max_Length\n                and then\n                  Slice (Tail'Result, 1, Count - Length (Source)) =\n-                   (1 .. Count - Length (Source) => Pad)\n+                   [1 .. Count - Length (Source) => Pad]\n                and then\n                  Slice (Tail'Result, Count - Length (Source) + 1, Max_Length) =\n                    Slice (Source, 1, Max_Length - Count + Length (Source)));\n@@ -2378,7 +2378,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n              Length (Source) = Count\n                and then\n                  Slice (Source, 1, Count - Length (Source'Old)) =\n-                   (1 .. Count - Length (Source'Old) => Pad)\n+                   [1 .. Count - Length (Source'Old) => Pad]\n                and then\n                  Slice (Source, Count - Length (Source'Old) + 1, Count) =\n                    To_String (Source'Old),\n@@ -2390,7 +2390,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n              Length (Source) = Max_Length\n                and then\n                  Slice (Source, 1, Max_Length - Length (Source'Old)) =\n-                   (1 .. Max_Length - Length (Source'Old) => Pad)\n+                   [1 .. Max_Length - Length (Source'Old) => Pad]\n                and then\n                  (if Length (Source'Old) > 0 then\n                     Slice (Source,\n@@ -2401,7 +2401,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n            =>\n              --  Source is fully dropped at the right\n \n-             To_String (Source) = (1 .. Max_Length => Pad),\n+             To_String (Source) = [1 .. Max_Length => Pad],\n \n            others\n            =>\n@@ -2410,7 +2410,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n              Length (Source) = Max_Length\n                and then\n                  Slice (Source, 1, Count - Length (Source'Old)) =\n-                   (1 .. Count - Length (Source'Old) => Pad)\n+                   [1 .. Count - Length (Source'Old) => Pad]\n                and then\n                  Slice (Source, Count - Length (Source'Old) + 1, Max_Length) =\n                    Slice (Source'Old,\n@@ -2425,7 +2425,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n          Right : Character) return Bounded_String\n       with\n         Pre  => Left <= Max_Length,\n-        Post => To_String (\"*\"'Result) = (1 .. Left => Right);\n+        Post => To_String (\"*\"'Result) = [1 .. Left => Right];\n \n       function \"*\"\n         (Left  : Natural;\n@@ -2461,7 +2461,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n         Pre  => (if Count > Max_Length then Drop /= Error),\n         Post =>\n           To_String (Replicate'Result) =\n-            (1 .. Natural'Min (Max_Length, Count) => Item);\n+            [1 .. Natural'Min (Max_Length, Count) => Item];\n \n       function Replicate\n         (Count : Natural;\n@@ -2565,7 +2565,7 @@ package Ada.Strings.Bounded with SPARK_Mode is\n                               (Max_Length     => Max_Length,\n                                Current_Length => 0,\n                                Data           =>\n-                                 (1 .. Max_Length => ASCII.NUL));\n+                                 [1 .. Max_Length => ASCII.NUL]);\n \n       pragma Inline (To_Bounded_String);\n "}, {"sha": "0d6c5d076633a3fd8b4164342460826089137f87", "filename": "gcc/ada/libgnat/a-strfix.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strfix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strfix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strfix.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1258,7 +1258,7 @@ package Ada.Strings.Fixed with SPARK_Mode is\n           Head'Result (1 .. Source'Length) = Source\n             and then\n               Head'Result (Source'Length + 1 .. Count)\n-              = (1 .. Count - Source'Length => Pad)),\n+              = [1 .. Count - Source'Length => Pad]),\n      Global         => null;\n    --  Returns a string of length Count. If Count <= Source'Length, the string\n    --  comprises the first Count characters of Source. Otherwise, its contents\n@@ -1315,10 +1315,10 @@ package Ada.Strings.Fixed with SPARK_Mode is\n            --  characters.\n \n           (if Source'Length = 0\n-           then Tail'Result = (1 .. Count => Pad)\n+           then Tail'Result = [1 .. Count => Pad]\n            else\n              Tail'Result (1 .. Count - Source'Length)\n-             = (1 .. Count - Source'Length => Pad)\n+             = [1 .. Count - Source'Length => Pad]\n                and then\n                  Tail'Result (Count - Source'Length + 1 .. Tail'Result'Last)\n                  = Source)),"}, {"sha": "d6b05d2277ce64f9368326a86388a1df5d9b4408", "filename": "gcc/ada/libgnat/a-strmap.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strmap.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -135,7 +135,7 @@ is\n       J      : Natural;\n \n       type Character_Index is array (Character) of Natural with Ghost;\n-      Indexes : Character_Index := (others => 0) with Ghost;\n+      Indexes : Character_Index := [others => 0] with Ghost;\n \n    begin\n       J := 0;\n@@ -367,7 +367,7 @@ is\n \n       Domain : String (1 .. Map'Length) with Ghost, Relaxed_Initialization;\n       type Character_Index is array (Character) of Natural with Ghost;\n-      Indexes : Character_Index := (others => 0) with Ghost;\n+      Indexes : Character_Index := [others => 0] with Ghost;\n \n    --  Start of processing for To_Range\n "}, {"sha": "320564e71c10ae6d6550dd94c801f0513cbd5caa", "filename": "gcc/ada/libgnat/a-strmap.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strmap.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -376,7 +376,7 @@ private\n    --  the defined operations in the spec, but the operations defined\n    --  on Character_Set_Internal remain visible.\n \n-   Null_Set : constant Character_Set := (others => False);\n+   Null_Set : constant Character_Set := [others => False];\n \n    type Character_Mapping is array (Character) of Character;\n "}, {"sha": "b9d36698f7f27b866fb78205511ab6facdb4ef25", "filename": "gcc/ada/libgnat/a-strsup.adb", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strsup.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -844,7 +844,7 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n \n       elsif Count <= Max_Length then\n          Result.Data (1 .. Slen) := Source.Data (1 .. Slen);\n-         Result.Data (Slen + 1 .. Count) := (others => Pad);\n+         Result.Data (Slen + 1 .. Count) := [others => Pad];\n          Result.Current_Length := Count;\n \n       else\n@@ -853,18 +853,18 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n                Result.Data (1 .. Slen) := Source.Data (1 .. Slen);\n \n                if Slen < Max_Length then\n-                  Result.Data (Slen + 1 .. Max_Length) := (others => Pad);\n+                  Result.Data (Slen + 1 .. Max_Length) := [others => Pad];\n                end if;\n \n             when Strings.Left =>\n                if Npad >= Max_Length then\n-                  Result.Data := (others => Pad);\n+                  Result.Data := [others => Pad];\n \n                else\n                   Result.Data (1 .. Max_Length - Npad) :=\n                     Source.Data (Count - Max_Length + 1 .. Slen);\n                   Result.Data (Max_Length - Npad + 1 .. Max_Length) :=\n-                    (others => Pad);\n+                    [others => Pad];\n                end if;\n \n             when Strings.Error =>\n@@ -893,26 +893,26 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n          Source.Current_Length := Count;\n \n       elsif Count <= Max_Length then\n-         Source.Data (Slen + 1 .. Count) := (others => Pad);\n+         Source.Data (Slen + 1 .. Count) := [others => Pad];\n          Source.Current_Length := Count;\n \n       else\n          case Drop is\n             when Strings.Right =>\n                if Slen < Max_Length then\n-                  Source.Data (Slen + 1 .. Max_Length) := (others => Pad);\n+                  Source.Data (Slen + 1 .. Max_Length) := [others => Pad];\n                end if;\n \n             when Strings.Left =>\n                if Npad > Max_Length then\n-                  Source.Data := (others => Pad);\n+                  Source.Data := [others => Pad];\n \n                else\n                   Temp := Source.Data;\n                   Source.Data (1 .. Max_Length - Npad) :=\n                     Temp (Count - Max_Length + 1 .. Slen);\n                   Source.Data (Max_Length - Npad + 1 .. Max_Length) :=\n-                    (others => Pad);\n+                    [others => Pad];\n                end if;\n \n             when Strings.Error =>\n@@ -1385,14 +1385,14 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n \n    begin\n       if Count <= Max_Length then\n-         Result.Data (1 .. Count) := (others => Item);\n+         Result.Data (1 .. Count) := [others => Item];\n          Result.Current_Length := Count;\n \n       elsif Drop = Strings.Error then\n          raise Ada.Strings.Length_Error;\n \n       else\n-         Result.Data (1 .. Max_Length) := (others => Item);\n+         Result.Data (1 .. Max_Length) := [others => Item];\n          Result.Current_Length := Max_Length;\n       end if;\n \n@@ -1686,7 +1686,7 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n          end if;\n \n       elsif Count <= Max_Length then\n-         Result.Data (1 .. Npad) := (others => Pad);\n+         Result.Data (1 .. Npad) := [others => Pad];\n \n          if Slen > 0 then\n             Result.Data (Npad + 1 .. Count) := Source.Data (1 .. Slen);\n@@ -1698,16 +1698,16 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n          case Drop is\n             when Strings.Right =>\n                if Npad >= Max_Length then\n-                  Result.Data := (others => Pad);\n+                  Result.Data := [others => Pad];\n \n                else\n-                  Result.Data (1 .. Npad) := (others => Pad);\n+                  Result.Data (1 .. Npad) := [others => Pad];\n                   Result.Data (Npad + 1 .. Max_Length) :=\n                     Source.Data (1 .. Max_Length - Npad);\n                end if;\n \n             when Strings.Left =>\n-               Result.Data (1 .. Max_Length - Slen) := (others => Pad);\n+               Result.Data (1 .. Max_Length - Slen) := [others => Pad];\n                Result.Data (Max_Length - Slen + 1 .. Max_Length) :=\n                  Source.Data (1 .. Slen);\n \n@@ -1743,7 +1743,7 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n          end if;\n \n       elsif Count <= Max_Length then\n-         Source.Data (1 .. Npad) := (others => Pad);\n+         Source.Data (1 .. Npad) := [others => Pad];\n \n          if Slen > 0 then\n             Source.Data (Npad + 1 .. Count) := Temp (1 .. Slen);\n@@ -1755,16 +1755,16 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n          case Drop is\n             when Strings.Right =>\n                if Npad >= Max_Length then\n-                  Source.Data := (others => Pad);\n+                  Source.Data := [others => Pad];\n \n                else\n-                  Source.Data (1 .. Npad) := (others => Pad);\n+                  Source.Data (1 .. Npad) := [others => Pad];\n                   Source.Data (Npad + 1 .. Max_Length) :=\n                     Temp (1 .. Max_Length - Npad);\n                end if;\n \n             when Strings.Left =>\n-               Source.Data (1 .. Max_Length - Slen) := (others => Pad);\n+               Source.Data (1 .. Max_Length - Slen) := [others => Pad];\n                Source.Data (Max_Length - Slen + 1 .. Max_Length) :=\n                  Temp (1 .. Slen);\n "}, {"sha": "5e582c7ae607be0d1b65e0d4d8067d06d69f5f1c", "filename": "gcc/ada/libgnat/a-strsup.ads", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-strsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strsup.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -2322,7 +2322,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Super_Head'Result,\n                 Super_Length (Source) + 1, Count)) =\n-                  (1 .. Count - Super_Length (Source) => Pad),\n+                  [1 .. Count - Super_Length (Source) => Pad],\n         Count > Source.Max_Length and then Drop = Right\n         =>\n           --  Source is followed by Pad characters\n@@ -2334,13 +2334,13 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Super_Head'Result,\n                 Super_Length (Source) + 1, Source.Max_Length)) =\n-                  (1 .. Source.Max_Length - Super_Length (Source) => Pad),\n+                  [1 .. Source.Max_Length - Super_Length (Source) => Pad],\n         Count - Super_Length (Source) > Source.Max_Length and then Drop = Left\n         =>\n           --  Source is fully dropped on the left\n \n           Super_To_String (Super_Head'Result) =\n-            (1 .. Source.Max_Length => Pad),\n+            [1 .. Source.Max_Length => Pad],\n         others\n         =>\n           --  Source is partly dropped on the left\n@@ -2355,7 +2355,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n               String'(Super_Slice (Super_Head'Result,\n                 Source.Max_Length - Count + Super_Length (Source) + 1,\n                 Source.Max_Length)) =\n-                  (1 .. Count - Super_Length (Source) => Pad)),\n+                  [1 .. Count - Super_Length (Source) => Pad]),\n      Global         => null;\n \n    procedure Super_Head\n@@ -2382,7 +2382,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Source,\n                 Super_Length (Source'Old) + 1, Count)) =\n-                  (1 .. Count - Super_Length (Source'Old) => Pad),\n+                  [1 .. Count - Super_Length (Source'Old) => Pad],\n         Count > Source.Max_Length and then Drop = Right\n         =>\n           --  Source is followed by Pad characters\n@@ -2394,12 +2394,12 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Source,\n                 Super_Length (Source'Old) + 1, Source.Max_Length)) =\n-                  (1 .. Source.Max_Length - Super_Length (Source'Old) => Pad),\n+                  [1 .. Source.Max_Length - Super_Length (Source'Old) => Pad],\n         Count - Super_Length (Source) > Source.Max_Length and then Drop = Left\n         =>\n           --  Source is fully dropped on the left\n \n-          Super_To_String (Source) = (1 .. Source.Max_Length => Pad),\n+          Super_To_String (Source) = [1 .. Source.Max_Length => Pad],\n         others\n         =>\n           --  Source is partly dropped on the left\n@@ -2414,7 +2414,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n               String'(Super_Slice (Source,\n                 Source.Max_Length - Count + Super_Length (Source'Old) + 1,\n                 Source.Max_Length)) =\n-                  (1 .. Count - Super_Length (Source'Old) => Pad)),\n+                  [1 .. Count - Super_Length (Source'Old) => Pad]),\n      Global         => null;\n \n    function Super_Tail\n@@ -2443,7 +2443,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Super_Tail'Result,\n                 1, Count - Super_Length (Source))) =\n-                  (1 .. Count - Super_Length (Source) => Pad)\n+                  [1 .. Count - Super_Length (Source) => Pad]\n             and then\n               Super_Slice (Super_Tail'Result,\n                 Count - Super_Length (Source) + 1, Count) =\n@@ -2456,7 +2456,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Super_Tail'Result,\n                 1, Source.Max_Length - Super_Length (Source))) =\n-                  (1 .. Source.Max_Length - Super_Length (Source) => Pad)\n+                  [1 .. Source.Max_Length - Super_Length (Source) => Pad]\n             and then\n               (if Super_Length (Source) > 0 then\n                  Super_Slice (Super_Tail'Result,\n@@ -2469,7 +2469,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n           --  Source is fully dropped on the right\n \n           Super_To_String (Super_Tail'Result) =\n-            (1 .. Source.Max_Length => Pad),\n+            [1 .. Source.Max_Length => Pad],\n         others\n         =>\n           --  Source is partly dropped on the right\n@@ -2478,7 +2478,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Super_Tail'Result,\n                 1, Count - Super_Length (Source))) =\n-                  (1 .. Count - Super_Length (Source) => Pad)\n+                  [1 .. Count - Super_Length (Source) => Pad]\n             and then\n               String'(Super_Slice (Super_Tail'Result,\n                 Count - Super_Length (Source) + 1, Source.Max_Length)) =\n@@ -2512,7 +2512,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Source,\n                 1, Count - Super_Length (Source'Old))) =\n-                  (1 .. Count - Super_Length (Source'Old) => Pad)\n+                  [1 .. Count - Super_Length (Source'Old) => Pad]\n             and then\n               Super_Slice (Source,\n                 Count - Super_Length (Source'Old) + 1, Count) =\n@@ -2525,7 +2525,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Source,\n                 1, Source.Max_Length - Super_Length (Source'Old))) =\n-                  (1 .. Source.Max_Length - Super_Length (Source'Old) => Pad)\n+                  [1 .. Source.Max_Length - Super_Length (Source'Old) => Pad]\n             and then\n               (if Super_Length (Source'Old) > 0 then\n                  Super_Slice (Source,\n@@ -2537,7 +2537,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n         =>\n           --  Source is fully dropped on the right\n \n-          Super_To_String (Source) = (1 .. Source.Max_Length => Pad),\n+          Super_To_String (Source) = [1 .. Source.Max_Length => Pad],\n         others\n         =>\n           --  Source is partly dropped on the right\n@@ -2546,7 +2546,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n             and then\n               String'(Super_Slice (Source,\n                 1, Count - Super_Length (Source'Old))) =\n-                  (1 .. Count - Super_Length (Source'Old) => Pad)\n+                  [1 .. Count - Super_Length (Source'Old) => Pad]\n             and then\n               String'(Super_Slice (Source,\n                 Count - Super_Length (Source'Old) + 1, Source.Max_Length)) =\n@@ -2569,7 +2569,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n    with\n      Pre    => Left <= Max_Length,\n      Post   => Times'Result.Max_Length = Max_Length\n-       and then Super_To_String (Times'Result) = (1 .. Left => Right),\n+       and then Super_To_String (Times'Result) = [1 .. Left => Right],\n      Global => null;\n    --  Note the additional parameter Max_Length\n \n@@ -2613,7 +2613,7 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n      Pre    => (if Count > Max_Length then Drop /= Error),\n      Post   => Super_Replicate'Result.Max_Length = Max_Length\n        and then Super_To_String (Super_Replicate'Result) =\n-         (1 .. Natural'Min (Max_Length, Count) => Item),\n+         [1 .. Natural'Min (Max_Length, Count) => Item],\n      Global => null;\n    --  Note the additional parameter Max_Length\n "}, {"sha": "f86a96921f24e73eb3c57cbd311f35a157340e6b", "filename": "gcc/ada/libgnat/a-sttebu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -94,7 +94,7 @@ package body Ada.Strings.Text_Buffers is\n             Buffer.Indent_Pending := False;\n             if Buffer.Indentation > 0 then\n                Put_UTF_8_Implementation\n-                 (Buffer, (1 .. Buffer.Indentation => ' '));\n+                 (Buffer, [1 .. Buffer.Indentation => ' ']);\n             end if;\n          end if;\n \n@@ -111,7 +111,7 @@ package body Ada.Strings.Text_Buffers is\n       procedure New_Line (Buffer : in out Buffer_Type) is\n       begin\n          Buffer.Indent_Pending := False; --  just for a moment\n-         Put (Buffer, (1 => ASCII.LF));\n+         Put (Buffer, [ASCII.LF]);\n          Buffer.Indent_Pending := True;\n          Buffer.UTF_8_Column   := 1;\n       end New_Line;"}, {"sha": "209c84aef3256254bf5f79287afccf5ecbfa2747", "filename": "gcc/ada/libgnat/a-stuten.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stuten.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stuten.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stuten.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -94,7 +94,7 @@ package Ada.Strings.UTF_Encoding is\n                 Character'Val (16#FE#);\n \n    BOM_16   : constant UTF_16_Wide_String :=\n-                (1 => Wide_Character'Val (16#FEFF#));\n+                [Wide_Character'Val (16#FEFF#)];\n \n    function Encoding\n      (Item    : UTF_String;"}, {"sha": "1ddb83a3e4d21312a4afcb61f0748a7187cd2b90", "filename": "gcc/ada/libgnat/a-stwibo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stwibo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stwibo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwibo.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -487,8 +487,8 @@ package Ada.Strings.Wide_Bounded is\n                                    (Max_Length         => Max_Length,\n                                     Current_Length     => 0,\n                                     Data               =>\n-                                      (1 .. Max_Length =>\n-                                         Wide_Superbounded.Wide_NUL));\n+                                      [1 .. Max_Length =>\n+                                         Wide_Superbounded.Wide_NUL]);\n \n       pragma Inline (To_Bounded_Wide_String);\n "}, {"sha": "6b5765f20ccff8d68347834743b81c981e64d401", "filename": "gcc/ada/libgnat/a-stwima.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stwima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stwima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwima.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -181,8 +181,7 @@ private\n    overriding procedure Adjust     (Object : in out Wide_Character_Set);\n    overriding procedure Finalize   (Object : in out Wide_Character_Set);\n \n-   Null_Range : aliased constant Wide_Character_Ranges :=\n-                  (1 .. 0 => (Low => ' ', High => ' '));\n+   Null_Range : aliased constant Wide_Character_Ranges := [];\n \n    Null_Set : constant Wide_Character_Set :=\n                 (AF.Controlled with"}, {"sha": "302bf0f4b382aef4277941d227129ad444bc10ce", "filename": "gcc/ada/libgnat/a-stwisu.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -852,25 +852,25 @@ package body Ada.Strings.Wide_Superbounded is\n       elsif Count <= Max_Length then\n          Result.Current_Length := Count;\n          Result.Data (1 .. Slen) := Source.Data (1 .. Slen);\n-         Result.Data (Slen + 1 .. Count) := (others => Pad);\n+         Result.Data (Slen + 1 .. Count) := [others => Pad];\n \n       else\n          Result.Current_Length := Max_Length;\n \n          case Drop is\n             when Strings.Right =>\n                Result.Data (1 .. Slen) := Source.Data (1 .. Slen);\n-               Result.Data (Slen + 1 .. Max_Length) := (others => Pad);\n+               Result.Data (Slen + 1 .. Max_Length) := [others => Pad];\n \n             when Strings.Left =>\n                if Npad >= Max_Length then\n-                  Result.Data := (others => Pad);\n+                  Result.Data := [others => Pad];\n \n                else\n                   Result.Data (1 .. Max_Length - Npad) :=\n                     Source.Data (Count - Max_Length + 1 .. Slen);\n                   Result.Data (Max_Length - Npad + 1 .. Max_Length) :=\n-                    (others => Pad);\n+                    [others => Pad];\n                end if;\n \n             when Strings.Error =>\n@@ -898,18 +898,18 @@ package body Ada.Strings.Wide_Superbounded is\n \n       elsif Count <= Max_Length then\n          Source.Current_Length := Count;\n-         Source.Data (Slen + 1 .. Count) := (others => Pad);\n+         Source.Data (Slen + 1 .. Count) := [others => Pad];\n \n       else\n          Source.Current_Length := Max_Length;\n \n          case Drop is\n             when Strings.Right =>\n-               Source.Data (Slen + 1 .. Max_Length) := (others => Pad);\n+               Source.Data (Slen + 1 .. Max_Length) := [others => Pad];\n \n             when Strings.Left =>\n                if Npad > Max_Length then\n-                  Source.Data := (others => Pad);\n+                  Source.Data := [others => Pad];\n \n                else\n                   Temp := Source.Data;\n@@ -1386,7 +1386,7 @@ package body Ada.Strings.Wide_Superbounded is\n          Result.Current_Length := Max_Length;\n       end if;\n \n-      Result.Data (1 .. Result.Current_Length) := (others => Item);\n+      Result.Data (1 .. Result.Current_Length) := [others => Item];\n       return Result;\n    end Super_Replicate;\n \n@@ -1542,7 +1542,7 @@ package body Ada.Strings.Wide_Superbounded is\n \n       elsif Count <= Max_Length then\n          Result.Current_Length := Count;\n-         Result.Data (1 .. Npad) := (others => Pad);\n+         Result.Data (1 .. Npad) := [others => Pad];\n          Result.Data (Npad + 1 .. Count) := Source.Data (1 .. Slen);\n \n       else\n@@ -1551,16 +1551,16 @@ package body Ada.Strings.Wide_Superbounded is\n          case Drop is\n             when Strings.Right =>\n                if Npad >= Max_Length then\n-                  Result.Data := (others => Pad);\n+                  Result.Data := [others => Pad];\n \n                else\n-                  Result.Data (1 .. Npad) := (others => Pad);\n+                  Result.Data (1 .. Npad) := [others => Pad];\n                   Result.Data (Npad + 1 .. Max_Length) :=\n                     Source.Data (1 .. Max_Length - Npad);\n                end if;\n \n             when Strings.Left =>\n-               Result.Data (1 .. Max_Length - Slen) := (others => Pad);\n+               Result.Data (1 .. Max_Length - Slen) := [others => Pad];\n                Result.Data (Max_Length - Slen + 1 .. Max_Length) :=\n                  Source.Data (1 .. Slen);\n \n@@ -1592,7 +1592,7 @@ package body Ada.Strings.Wide_Superbounded is\n \n       elsif Count <= Max_Length then\n          Source.Current_Length := Count;\n-         Source.Data (1 .. Npad) := (others => Pad);\n+         Source.Data (1 .. Npad) := [others => Pad];\n          Source.Data (Npad + 1 .. Count) := Temp (1 .. Slen);\n \n       else\n@@ -1601,10 +1601,10 @@ package body Ada.Strings.Wide_Superbounded is\n          case Drop is\n             when Strings.Right =>\n                if Npad >= Max_Length then\n-                  Source.Data := (others => Pad);\n+                  Source.Data := [others => Pad];\n \n                else\n-                  Source.Data (1 .. Npad) := (others => Pad);\n+                  Source.Data (1 .. Npad) := [others => Pad];\n                   Source.Data (Npad + 1 .. Max_Length) :=\n                     Temp (1 .. Max_Length - Npad);\n                end if;\n@@ -1744,7 +1744,7 @@ package body Ada.Strings.Wide_Superbounded is\n          end loop;\n       end if;\n \n-      Source.Data := (others => Wide_NUL);\n+      Source.Data := [others => Wide_NUL];\n       Source.Current_Length := Last - First + 1;\n       Source.Data (1 .. Source.Current_Length) := Temp (First .. Last);\n    end Super_Trim;"}, {"sha": "ae45e7c364a0ca5e5b56f7abe67aa96daec5779a", "filename": "gcc/ada/libgnat/a-stzbou.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stzbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stzbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzbou.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -493,11 +493,11 @@ package Ada.Strings.Wide_Wide_Bounded is\n       --  the Wide_Wide_Superbounded package.\n \n       Null_Bounded_Wide_Wide_String : constant Bounded_Wide_Wide_String :=\n-                                   (Max_Length         => Max_Length,\n+                                   [Max_Length         => Max_Length,\n                                     Current_Length     => 0,\n                                     Data               =>\n-                                      (1 .. Max_Length =>\n-                                        Wide_Wide_Superbounded.Wide_Wide_NUL));\n+                                      [1 .. Max_Length =>\n+                                        Wide_Wide_Superbounded.Wide_Wide_NUL]];\n \n       pragma Inline (To_Bounded_Wide_Wide_String);\n "}, {"sha": "86ee971d3e456ba049d5b1d506e16126f675c354", "filename": "gcc/ada/libgnat/a-stzmap.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stzmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stzmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzmap.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -183,8 +183,7 @@ private\n    procedure Adjust     (Object : in out Wide_Wide_Character_Set);\n    procedure Finalize   (Object : in out Wide_Wide_Character_Set);\n \n-   Null_Range : aliased constant Wide_Wide_Character_Ranges :=\n-                  (1 .. 0 => (Low => ' ', High => ' '));\n+   Null_Range : aliased constant Wide_Wide_Character_Ranges := [];\n \n    Null_Set : constant Wide_Wide_Character_Set :=\n                 (AF.Controlled with"}, {"sha": "67997978c3c603e463880c20cd64d540d91d0d33", "filename": "gcc/ada/libgnat/a-stzsup.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -853,25 +853,25 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n       elsif Count <= Max_Length then\n          Result.Current_Length := Count;\n          Result.Data (1 .. Slen) := Source.Data (1 .. Slen);\n-         Result.Data (Slen + 1 .. Count) := (others => Pad);\n+         Result.Data (Slen + 1 .. Count) := [others => Pad];\n \n       else\n          Result.Current_Length := Max_Length;\n \n          case Drop is\n             when Strings.Right =>\n                Result.Data (1 .. Slen) := Source.Data (1 .. Slen);\n-               Result.Data (Slen + 1 .. Max_Length) := (others => Pad);\n+               Result.Data (Slen + 1 .. Max_Length) := [others => Pad];\n \n             when Strings.Left =>\n                if Npad >= Max_Length then\n-                  Result.Data := (others => Pad);\n+                  Result.Data := [others => Pad];\n \n                else\n                   Result.Data (1 .. Max_Length - Npad) :=\n                     Source.Data (Count - Max_Length + 1 .. Slen);\n                   Result.Data (Max_Length - Npad + 1 .. Max_Length) :=\n-                    (others => Pad);\n+                    [others => Pad];\n                end if;\n \n             when Strings.Error =>\n@@ -899,18 +899,18 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n \n       elsif Count <= Max_Length then\n          Source.Current_Length := Count;\n-         Source.Data (Slen + 1 .. Count) := (others => Pad);\n+         Source.Data (Slen + 1 .. Count) := [others => Pad];\n \n       else\n          Source.Current_Length := Max_Length;\n \n          case Drop is\n             when Strings.Right =>\n-               Source.Data (Slen + 1 .. Max_Length) := (others => Pad);\n+               Source.Data (Slen + 1 .. Max_Length) := [others => Pad];\n \n             when Strings.Left =>\n                if Npad > Max_Length then\n-                  Source.Data := (others => Pad);\n+                  Source.Data := [others => Pad];\n \n                else\n                   Temp := Source.Data;\n@@ -1389,7 +1389,7 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n          Result.Current_Length := Max_Length;\n       end if;\n \n-      Result.Data (1 .. Result.Current_Length) := (others => Item);\n+      Result.Data (1 .. Result.Current_Length) := [others => Item];\n       return Result;\n    end Super_Replicate;\n \n@@ -1546,7 +1546,7 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n \n       elsif Count <= Max_Length then\n          Result.Current_Length := Count;\n-         Result.Data (1 .. Npad) := (others => Pad);\n+         Result.Data (1 .. Npad) := [others => Pad];\n          Result.Data (Npad + 1 .. Count) := Source.Data (1 .. Slen);\n \n       else\n@@ -1555,16 +1555,16 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n          case Drop is\n             when Strings.Right =>\n                if Npad >= Max_Length then\n-                  Result.Data := (others => Pad);\n+                  Result.Data := [others => Pad];\n \n                else\n-                  Result.Data (1 .. Npad) := (others => Pad);\n+                  Result.Data (1 .. Npad) := [others => Pad];\n                   Result.Data (Npad + 1 .. Max_Length) :=\n                     Source.Data (1 .. Max_Length - Npad);\n                end if;\n \n             when Strings.Left =>\n-               Result.Data (1 .. Max_Length - Slen) := (others => Pad);\n+               Result.Data (1 .. Max_Length - Slen) := [others => Pad];\n                Result.Data (Max_Length - Slen + 1 .. Max_Length) :=\n                  Source.Data (1 .. Slen);\n \n@@ -1596,7 +1596,7 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n \n       elsif Count <= Max_Length then\n          Source.Current_Length := Count;\n-         Source.Data (1 .. Npad) := (others => Pad);\n+         Source.Data (1 .. Npad) := [others => Pad];\n          Source.Data (Npad + 1 .. Count) := Temp (1 .. Slen);\n \n       else\n@@ -1605,10 +1605,10 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n          case Drop is\n             when Strings.Right =>\n                if Npad >= Max_Length then\n-                  Source.Data := (others => Pad);\n+                  Source.Data := [others => Pad];\n \n                else\n-                  Source.Data (1 .. Npad) := (others => Pad);\n+                  Source.Data (1 .. Npad) := [others => Pad];\n                   Source.Data (Npad + 1 .. Max_Length) :=\n                     Temp (1 .. Max_Length - Npad);\n                end if;\n@@ -1752,7 +1752,7 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n          end loop;\n       end if;\n \n-      Source.Data := (others => Wide_Wide_NUL);\n+      Source.Data := [others => Wide_Wide_NUL];\n       Source.Current_Length := Last - First + 1;\n       Source.Data (1 .. Source.Current_Length) := Temp (First .. Last);\n    end Super_Trim;"}, {"sha": "2e2ab4499dd80e227526ecde249672826d3b865c", "filename": "gcc/ada/libgnat/a-swmwco.ads", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-swmwco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-swmwco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-swmwco.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -66,122 +66,122 @@ private\n    subtype WC is Wide_Character;\n \n    Control_Ranges           : aliased constant Wide_Character_Ranges :=\n-     ((W.NUL, W.US),\n-      (W.DEL, W.APC));\n+     [ (W.NUL, W.US),\n+       (W.DEL, W.APC)];\n \n    Control_Set              : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Control_Ranges'Unrestricted_Access);\n \n    Graphic_Ranges           : aliased constant Wide_Character_Ranges :=\n-     ((W.Space,       W.Tilde),\n-      (WC'Val (256), WC'Last));\n+     [ (W.Space,      W.Tilde),\n+       (WC'Val (256), WC'Last)];\n \n    Graphic_Set              : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Graphic_Ranges'Unrestricted_Access);\n \n    Letter_Ranges            : aliased constant Wide_Character_Ranges :=\n-     (('A',                   'Z'),\n-      (W.LC_A,                W.LC_Z),\n-      (W.UC_A_Grave,          W.UC_O_Diaeresis),\n-      (W.UC_O_Oblique_Stroke, W.LC_O_Diaeresis),\n-      (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis));\n+     [ ('A',                   'Z'),\n+       (W.LC_A,                W.LC_Z),\n+       (W.UC_A_Grave,          W.UC_O_Diaeresis),\n+       (W.UC_O_Oblique_Stroke, W.LC_O_Diaeresis),\n+       (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis)];\n \n    Letter_Set               : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Letter_Ranges'Unrestricted_Access);\n \n    Lower_Ranges             : aliased constant Wide_Character_Ranges :=\n-     (1 => (W.LC_A,                 W.LC_Z),\n+     [1 => (W.LC_A,                 W.LC_Z),\n       2 => (W.LC_German_Sharp_S,   W.LC_O_Diaeresis),\n-      3 => (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis));\n+      3 => (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis)];\n \n    Lower_Set                : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Lower_Ranges'Unrestricted_Access);\n \n    Upper_Ranges             : aliased constant Wide_Character_Ranges :=\n-     (1 => ('A',                   'Z'),\n+     [1 => ('A',                   'Z'),\n       2 => (W.UC_A_Grave,          W.UC_O_Diaeresis),\n-      3 => (W.UC_O_Oblique_Stroke, W.UC_Icelandic_Thorn));\n+      3 => (W.UC_O_Oblique_Stroke, W.UC_Icelandic_Thorn)];\n \n    Upper_Set                : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Upper_Ranges'Unrestricted_Access);\n \n    Basic_Ranges             : aliased constant Wide_Character_Ranges :=\n-     (1 => ('A',                   'Z'),\n+     [1 => ('A',                   'Z'),\n       2 => (W.LC_A,                W.LC_Z),\n       3 => (W.UC_AE_Diphthong,     W.UC_AE_Diphthong),\n       4 => (W.LC_AE_Diphthong,     W.LC_AE_Diphthong),\n       5 => (W.LC_German_Sharp_S,   W.LC_German_Sharp_S),\n       6 => (W.UC_Icelandic_Thorn,  W.UC_Icelandic_Thorn),\n       7 => (W.LC_Icelandic_Thorn,  W.LC_Icelandic_Thorn),\n       8 => (W.UC_Icelandic_Eth,    W.UC_Icelandic_Eth),\n-      9 => (W.LC_Icelandic_Eth,    W.LC_Icelandic_Eth));\n+      9 => (W.LC_Icelandic_Eth,    W.LC_Icelandic_Eth)];\n \n    Basic_Set                : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Basic_Ranges'Unrestricted_Access);\n \n    Decimal_Digit_Ranges     : aliased constant Wide_Character_Ranges :=\n-     (1 => ('0', '9'));\n+     [ ('0', '9')];\n \n    Decimal_Digit_Set        : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Decimal_Digit_Ranges'Unrestricted_Access);\n \n    Hexadecimal_Digit_Ranges : aliased constant Wide_Character_Ranges :=\n-     (1 => ('0', '9'),\n+     [1 => ('0', '9'),\n       2 => ('A', 'F'),\n-      3 => (W.LC_A, W.LC_F));\n+      3 => (W.LC_A, W.LC_F)];\n \n    Hexadecimal_Digit_Set    : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Hexadecimal_Digit_Ranges'Unrestricted_Access);\n \n    Alphanumeric_Ranges      : aliased constant Wide_Character_Ranges :=\n-     (1 => ('0',                   '9'),\n+     [1 => ('0',                   '9'),\n       2 => ('A',                   'Z'),\n       3 => (W.LC_A,                W.LC_Z),\n       4 => (W.UC_A_Grave,          W.UC_O_Diaeresis),\n       5 => (W.UC_O_Oblique_Stroke, W.LC_O_Diaeresis),\n-      6 => (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis));\n+      6 => (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis)];\n \n    Alphanumeric_Set         : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Alphanumeric_Ranges'Unrestricted_Access);\n \n    Special_Graphic_Ranges   : aliased constant Wide_Character_Ranges :=\n-     (1 => (Wide_Space,            W.Solidus),\n+     [1 => (Wide_Space,            W.Solidus),\n       2 => (W.Colon,               W.Commercial_At),\n       3 => (W.Left_Square_Bracket, W.Grave),\n       4 => (W.Left_Curly_Bracket,  W.Tilde),\n       5 => (W.No_Break_Space,      W.Inverted_Question),\n       6 => (W.Multiplication_Sign, W.Multiplication_Sign),\n-      7 => (W.Division_Sign,       W.Division_Sign));\n+      7 => (W.Division_Sign,       W.Division_Sign)];\n \n    Special_Graphic_Set      : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Special_Graphic_Ranges'Unrestricted_Access);\n \n    ISO_646_Ranges           : aliased constant Wide_Character_Ranges :=\n-     (1 => (W.NUL, W.DEL));\n+     [ (W.NUL, W.DEL)];\n \n    ISO_646_Set              : constant Wide_Character_Set :=\n      (AF.Controlled with\n       ISO_646_Ranges'Unrestricted_Access);\n \n    Character_Ranges         : aliased constant Wide_Character_Ranges :=\n-     (1 => (W.NUL, WC'Val (255)));\n+     [ (W.NUL, WC'Val (255))];\n \n    Character_Set            : constant Wide_Character_Set :=\n      (AF.Controlled with\n       Character_Ranges'Unrestricted_Access);\n \n    Lower_Case_Mapping : aliased constant Wide_Character_Mapping_Values :=\n-     (Length => 56,\n+     [Length => 56,\n \n       Domain =>\n         \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" &\n@@ -247,14 +247,14 @@ private\n          W.LC_U_Circumflex           &\n          W.LC_U_Diaeresis            &\n          W.LC_Y_Acute                &\n-         W.LC_Icelandic_Thorn);\n+         W.LC_Icelandic_Thorn];\n \n    Lower_Case_Map : constant Wide_Character_Mapping :=\n      (AF.Controlled with\n       Map => Lower_Case_Mapping'Unrestricted_Access);\n \n    Upper_Case_Mapping : aliased constant Wide_Character_Mapping_Values :=\n-     (Length => 56,\n+     [Length => 56,\n \n       Domain =>\n         \"abcdefghijklmnopqrstuvwxyz\" &\n@@ -320,14 +320,14 @@ private\n          W.UC_U_Circumflex           &\n          W.UC_U_Diaeresis            &\n          W.UC_Y_Acute                &\n-         W.UC_Icelandic_Thorn);\n+         W.UC_Icelandic_Thorn];\n \n    Upper_Case_Map : constant Wide_Character_Mapping :=\n      (AF.Controlled with\n       Upper_Case_Mapping'Unrestricted_Access);\n \n    Basic_Mapping : aliased constant Wide_Character_Mapping_Values :=\n-     (Length => 55,\n+     [Length => 55,\n \n       Domain =>\n         W.UC_A_Grave          &\n@@ -441,7 +441,7 @@ private\n         'u'        &  -- LC_U_Circumflex\n         'u'        &  -- LC_U_Diaeresis\n         'y'        &  -- LC_Y_Acute\n-        'y');         -- LC_Y_Diaeresis\n+        'y'];         -- LC_Y_Diaeresis\n \n    Basic_Map : constant Wide_Character_Mapping :=\n      (AF.Controlled with"}, {"sha": "a5b8afc7d2424e9bb0d1d6db4a6c125a8a266aef", "filename": "gcc/ada/libgnat/a-szmzco.ads", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-szmzco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-szmzco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-szmzco.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -66,122 +66,122 @@ private\n    subtype WC is Wide_Wide_Character;\n \n    Control_Ranges           : aliased constant Wide_Wide_Character_Ranges :=\n-     ((W.NUL, W.US),\n-      (W.DEL, W.APC));\n+     [ (W.NUL, W.US),\n+       (W.DEL, W.APC)];\n \n    Control_Set              : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Control_Ranges'Unrestricted_Access);\n \n    Graphic_Ranges           : aliased constant Wide_Wide_Character_Ranges :=\n-     ((W.Space,       W.Tilde),\n-      (WC'Val (256), WC'Last));\n+     [ (W.Space,      W.Tilde),\n+       (WC'Val (256), WC'Last)];\n \n    Graphic_Set              : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Graphic_Ranges'Unrestricted_Access);\n \n    Letter_Ranges            : aliased constant Wide_Wide_Character_Ranges :=\n-     (('A',                   'Z'),\n-      (W.LC_A,                W.LC_Z),\n-      (W.UC_A_Grave,          W.UC_O_Diaeresis),\n-      (W.UC_O_Oblique_Stroke, W.LC_O_Diaeresis),\n-      (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis));\n+     [ ('A',                  'Z'),\n+       (W.LC_A,                W.LC_Z),\n+       (W.UC_A_Grave,          W.UC_O_Diaeresis),\n+       (W.UC_O_Oblique_Stroke, W.LC_O_Diaeresis),\n+       (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis)];\n \n    Letter_Set               : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Letter_Ranges'Unrestricted_Access);\n \n    Lower_Ranges             : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => (W.LC_A,                 W.LC_Z),\n+     [1 => (W.LC_A,                 W.LC_Z),\n       2 => (W.LC_German_Sharp_S,   W.LC_O_Diaeresis),\n-      3 => (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis));\n+      3 => (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis)];\n \n    Lower_Set                : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Lower_Ranges'Unrestricted_Access);\n \n    Upper_Ranges             : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => ('A',                   'Z'),\n+     [1 => ('A',                   'Z'),\n       2 => (W.UC_A_Grave,          W.UC_O_Diaeresis),\n-      3 => (W.UC_O_Oblique_Stroke, W.UC_Icelandic_Thorn));\n+      3 => (W.UC_O_Oblique_Stroke, W.UC_Icelandic_Thorn)];\n \n    Upper_Set                : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Upper_Ranges'Unrestricted_Access);\n \n    Basic_Ranges             : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => ('A',                   'Z'),\n+     [1 => ('A',                   'Z'),\n       2 => (W.LC_A,                W.LC_Z),\n       3 => (W.UC_AE_Diphthong,     W.UC_AE_Diphthong),\n       4 => (W.LC_AE_Diphthong,     W.LC_AE_Diphthong),\n       5 => (W.LC_German_Sharp_S,   W.LC_German_Sharp_S),\n       6 => (W.UC_Icelandic_Thorn,  W.UC_Icelandic_Thorn),\n       7 => (W.LC_Icelandic_Thorn,  W.LC_Icelandic_Thorn),\n       8 => (W.UC_Icelandic_Eth,    W.UC_Icelandic_Eth),\n-      9 => (W.LC_Icelandic_Eth,    W.LC_Icelandic_Eth));\n+      9 => (W.LC_Icelandic_Eth,    W.LC_Icelandic_Eth)];\n \n    Basic_Set                : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Basic_Ranges'Unrestricted_Access);\n \n    Decimal_Digit_Ranges     : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => ('0', '9'));\n+     [ ('0', '9')];\n \n    Decimal_Digit_Set        : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Decimal_Digit_Ranges'Unrestricted_Access);\n \n    Hexadecimal_Digit_Ranges : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => ('0', '9'),\n+     [1 => ('0', '9'),\n       2 => ('A', 'F'),\n-      3 => (W.LC_A, W.LC_F));\n+      3 => (W.LC_A, W.LC_F)];\n \n    Hexadecimal_Digit_Set    : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Hexadecimal_Digit_Ranges'Unrestricted_Access);\n \n    Alphanumeric_Ranges      : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => ('0',                   '9'),\n+     [1 => ('0',                   '9'),\n       2 => ('A',                   'Z'),\n       3 => (W.LC_A,                W.LC_Z),\n       4 => (W.UC_A_Grave,          W.UC_O_Diaeresis),\n       5 => (W.UC_O_Oblique_Stroke, W.LC_O_Diaeresis),\n-      6 => (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis));\n+      6 => (W.LC_O_Oblique_Stroke, W.LC_Y_Diaeresis)];\n \n    Alphanumeric_Set         : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Alphanumeric_Ranges'Unrestricted_Access);\n \n    Special_Graphic_Ranges   : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => (Wide_Wide_Space,            W.Solidus),\n+     [1 => (Wide_Wide_Space,            W.Solidus),\n       2 => (W.Colon,               W.Commercial_At),\n       3 => (W.Left_Square_Bracket, W.Grave),\n       4 => (W.Left_Curly_Bracket,  W.Tilde),\n       5 => (W.No_Break_Space,      W.Inverted_Question),\n       6 => (W.Multiplication_Sign, W.Multiplication_Sign),\n-      7 => (W.Division_Sign,       W.Division_Sign));\n+      7 => (W.Division_Sign,       W.Division_Sign)];\n \n    Special_Graphic_Set      : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Special_Graphic_Ranges'Unrestricted_Access);\n \n    ISO_646_Ranges           : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => (W.NUL, W.DEL));\n+     [ (W.NUL, W.DEL)];\n \n    ISO_646_Set              : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       ISO_646_Ranges'Unrestricted_Access);\n \n    Character_Ranges         : aliased constant Wide_Wide_Character_Ranges :=\n-     (1 => (W.NUL, WC'Val (255)));\n+     [ (W.NUL, WC'Val (255))];\n \n    Character_Set            : constant Wide_Wide_Character_Set :=\n      (AF.Controlled with\n       Character_Ranges'Unrestricted_Access);\n \n    Lower_Case_Mapping : aliased constant Wide_Wide_Character_Mapping_Values :=\n-     (Length => 56,\n+     [Length => 56,\n \n       Domain =>\n         \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" &\n@@ -247,14 +247,14 @@ private\n          W.LC_U_Circumflex           &\n          W.LC_U_Diaeresis            &\n          W.LC_Y_Acute                &\n-         W.LC_Icelandic_Thorn);\n+         W.LC_Icelandic_Thorn];\n \n    Lower_Case_Map : constant Wide_Wide_Character_Mapping :=\n      (AF.Controlled with\n       Map => Lower_Case_Mapping'Unrestricted_Access);\n \n    Upper_Case_Mapping : aliased constant Wide_Wide_Character_Mapping_Values :=\n-     (Length => 56,\n+     [Length => 56,\n \n       Domain =>\n         \"abcdefghijklmnopqrstuvwxyz\" &\n@@ -320,14 +320,14 @@ private\n          W.UC_U_Circumflex           &\n          W.UC_U_Diaeresis            &\n          W.UC_Y_Acute                &\n-         W.UC_Icelandic_Thorn);\n+         W.UC_Icelandic_Thorn];\n \n    Upper_Case_Map : constant Wide_Wide_Character_Mapping :=\n      (AF.Controlled with\n       Upper_Case_Mapping'Unrestricted_Access);\n \n    Basic_Mapping : aliased constant Wide_Wide_Character_Mapping_Values :=\n-     (Length => 55,\n+     [Length => 55,\n \n       Domain =>\n         W.UC_A_Grave          &\n@@ -441,7 +441,7 @@ private\n         'u'        &  -- LC_U_Circumflex\n         'u'        &  -- LC_U_Diaeresis\n         'y'        &  -- LC_Y_Acute\n-        'y');         -- LC_Y_Diaeresis\n+        'y'];         -- LC_Y_Diaeresis\n \n    Basic_Map : constant Wide_Wide_Character_Mapping :=\n      (AF.Controlled with"}, {"sha": "36c73b87819cd66b43172d701b97979bdf65af08", "filename": "gcc/ada/libgnat/a-teioed.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-teioed.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-teioed.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-teioed.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -279,13 +279,13 @@ package body Ada.Text_IO.Editing is\n            or else Pic.Start_Currency < Pic.Radix_Position\n          then\n             Answer (Pic.Start_Currency .. Pic.End_Currency) :=\n-                                                        (others => ' ');\n+                                                        [others => ' '];\n             Answer (Pic.End_Currency - Currency_Symbol'Length + 1 ..\n                     Pic.End_Currency) := Currency_Symbol;\n \n          else\n             Answer (Pic.Start_Currency .. Pic.End_Currency) :=\n-                                                        (others => ' ');\n+                                                        [others => ' '];\n             Answer (Pic.Start_Currency ..\n                     Pic.Start_Currency + Currency_Symbol'Length - 1) :=\n                                                         Currency_Symbol;"}, {"sha": "e4e7bb0640c3e3dc428c8e51824b3aa1250934fc", "filename": "gcc/ada/libgnat/a-wtedit.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-wtedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-wtedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtedit.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -450,13 +450,13 @@ package body Ada.Wide_Text_IO.Editing is\n            or else Pic.Start_Currency < Pic.Radix_Position\n          then\n             Answer (Pic.Start_Currency .. Pic.End_Currency) :=\n-                                                        (others => ' ');\n+                                                        [others => ' '];\n             Answer (Pic.End_Currency - Currency_Symbol'Length + 1 ..\n                     Pic.End_Currency) := Currency_Symbol;\n \n          else\n             Answer (Pic.Start_Currency .. Pic.End_Currency) :=\n-                                                        (others => ' ');\n+                                                        [others => ' '];\n             Answer (Pic.Start_Currency ..\n                     Pic.Start_Currency + Currency_Symbol'Length - 1) :=\n                                                         Currency_Symbol;"}, {"sha": "41668de977a0c8eaba50419c5cc9cdd55305184d", "filename": "gcc/ada/libgnat/a-ztedit.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-ztedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fa-ztedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztedit.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -451,13 +451,13 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n            or else Pic.Start_Currency < Pic.Radix_Position\n          then\n             Answer (Pic.Start_Currency .. Pic.End_Currency) :=\n-                                                        (others => ' ');\n+                                                        [others => ' '];\n             Answer (Pic.End_Currency - Currency_Symbol'Length + 1 ..\n                     Pic.End_Currency) := Currency_Symbol;\n \n          else\n             Answer (Pic.Start_Currency .. Pic.End_Currency) :=\n-                                                        (others => ' ');\n+                                                        [others => ' '];\n             Answer (Pic.Start_Currency ..\n                     Pic.Start_Currency + Currency_Symbol'Length - 1) :=\n                                                         Currency_Symbol;"}, {"sha": "3c1f59abe636cc2f0dec32c1b4673876861f6788", "filename": "gcc/ada/libgnat/g-arrspl.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-arrspl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-arrspl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-arrspl.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -181,20 +181,20 @@ package body GNAT.Array_Split is\n       then\n          --  Whole string, or no separator used\n \n-         return (Before => Array_End,\n-                 After  => Array_End);\n+         return [Before => Array_End,\n+                 After  => Array_End];\n \n       elsif Index = 1 then\n-         return (Before => Array_End,\n-                 After  => S.D.Source (S.D.Slices (Index).Stop + 1));\n+         return [Before => Array_End,\n+                 After  => S.D.Source (S.D.Slices (Index).Stop + 1)];\n \n       elsif Index = S.D.N_Slice then\n-         return (Before => S.D.Source (S.D.Slices (Index).Start - 1),\n-                 After  => Array_End);\n+         return [Before => S.D.Source (S.D.Slices (Index).Start - 1),\n+                 After  => Array_End];\n \n       else\n-         return (Before => S.D.Source (S.D.Slices (Index).Start - 1),\n-                 After  => S.D.Source (S.D.Slices (Index).Stop + 1));\n+         return [Before => S.D.Source (S.D.Slices (Index).Start - 1),\n+                 After  => S.D.Source (S.D.Slices (Index).Stop + 1)];\n       end if;\n    end Separators;\n "}, {"sha": "1fdf1518bdd6df37ee7391ea4298da4b35890193", "filename": "gcc/ada/libgnat/g-catiio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-catiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-catiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-catiio.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -627,8 +627,8 @@ package body GNAT.Calendar.Time_IO is\n       subtype String3 is String (1 .. 3);\n       Abbrev_Upper_Month_Names :\n         constant array (Ada.Calendar.Month_Number) of String3 :=\n-         (\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\",\n-          \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\");\n+         [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\",\n+          \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n       --  Short version of the month names, used when parsing date strings\n \n       S : String := Str;"}, {"sha": "2527c9b0e3f87517e4cc4e9fd0422da549c551f0", "filename": "gcc/ada/libgnat/g-cgideb.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-cgideb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-cgideb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-cgideb.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -167,7 +167,7 @@ package body GNAT.CGI.Debug is\n \n    package body HTML_IO is\n \n-      NL : constant String := (1 => ASCII.LF);\n+      NL : constant String := [ASCII.LF];\n \n       function Bold (S : String) return String;\n       --  Returns S as an HTML bold string\n@@ -270,7 +270,7 @@ package body GNAT.CGI.Debug is\n \n       function Title (IO : Format; Str : String) return String is\n          Spaces : constant Natural := (80 - Str'Length) / 2;\n-         Indent : constant String (1 .. Spaces) := (others => ' ');\n+         Indent : constant String (1 .. Spaces) := [others => ' '];\n       begin\n          return Indent & Str & New_Line (IO);\n       end Title;"}, {"sha": "4cbfd57ccff3b753b585f72e96960c2aaf52b30a", "filename": "gcc/ada/libgnat/g-comlin.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-comlin.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1063,7 +1063,7 @@ package body GNAT.Command_Line is\n       Parser.In_Expansion     := False;\n       Parser.Switch_Character := Switch_Char;\n       Parser.Stop_At_First    := Stop_At_First_Non_Switch;\n-      Parser.Section          := (others => 1);\n+      Parser.Section          := [others => 1];\n \n       --  If we are using sections, we have to preprocess the command line to\n       --  delimit them. A section can be repeated, so we just give each item\n@@ -3225,7 +3225,7 @@ package body GNAT.Command_Line is\n                if N /= \"\" then\n                   Put (\" \");\n                   Put (N);\n-                  Put ((1 .. Max_Len - N'Length + 1 => ' '));\n+                  Put ([1 .. Max_Len - N'Length + 1 => ' ']);\n \n                   if Config.Switches (S).Help /= null then\n                      Put (Config.Switches (S).Help.all);\n@@ -3243,8 +3243,8 @@ package body GNAT.Command_Line is\n                if Config.Aliases (A).Section.all = Section then\n                   Put (\" \");\n                   Put (Config.Aliases (A).Alias.all);\n-                  Put ((1 .. Max_Len - Config.Aliases (A).Alias'Length + 1\n-                       => ' '));\n+                  Put ([1 .. Max_Len - Config.Aliases (A).Alias'Length + 1\n+                       => ' ']);\n                   Put (\"Equivalent to \" & Config.Aliases (A).Expansion.all);\n                   New_Line;\n                end if;"}, {"sha": "37384329607594a0ee8d8ec387587e1b77ef2670", "filename": "gcc/ada/libgnat/g-comlin.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-comlin.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1097,11 +1097,11 @@ private\n       --  This type and this variable are provided to store the current switch\n       --  and parameter.\n \n-      Is_Switch : Is_Switch_Type (1 .. Arg_Count) := (others => False);\n+      Is_Switch : Is_Switch_Type (1 .. Arg_Count) := [others => False];\n       --  Indicates wich arguments on the command line are considered not be\n       --  switches or parameters to switches (leaving e.g. filenames,...)\n \n-      Section : Section_Type (1 .. Arg_Count) := (others => 1);\n+      Section : Section_Type (1 .. Arg_Count) := [others => 1];\n       --  Contains the number of the section associated with the current\n       --  switch. If this number is 0, then it is a section delimiter, which is\n       --  never returned by GetOpt."}, {"sha": "5d707cae7e3cec9df4ccace0c86dfb28f7318df6", "filename": "gcc/ada/libgnat/g-debpoo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1148,7 +1148,7 @@ package body GNAT.Debug_Pools is\n       Modulo : constant Storage_Count :=\n                  Size_In_Storage_Elements mod Dead_Bytes;\n    begin\n-      M.all := (others => Dead);\n+      M.all := [others => Dead];\n \n       --  Any bytes left (up to three of them)\n \n@@ -1942,7 +1942,7 @@ package body GNAT.Debug_Pools is\n          Grand_Total : Float;\n \n          Max  : array (1 .. Size) of Traceback_Htable_Elem_Ptr :=\n-           (others => null);\n+           [others => null];\n          --  Sorted array for the biggest memory users\n \n          Allocated_In_Pool : Byte_Count;"}, {"sha": "89ede30d01146479576c6d3305e1f912b7ab23b3", "filename": "gcc/ada/libgnat/g-expect.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-expect.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -351,7 +351,7 @@ package body GNAT.Expect is\n       Full_Buffer : Boolean := False)\n    is\n       N           : Expect_Match;\n-      Descriptors : Array_Of_Pd := (1 => Descriptor'Unrestricted_Access);\n+      Descriptors : Array_Of_Pd := [Descriptor'Unrestricted_Access];\n       Try_Until   : constant Time := Clock + Duration (Timeout) / 1000.0;\n       Timeout_Tmp : Integer := Timeout;\n \n@@ -508,7 +508,7 @@ package body GNAT.Expect is\n       Full_Buffer : Boolean := False)\n    is\n       N           : Expect_Match;\n-      Descriptors : Array_Of_Pd := (1 => Descriptor'Unrestricted_Access);\n+      Descriptors : Array_Of_Pd := [Descriptor'Unrestricted_Access];\n \n    begin\n       pragma Assert (Matched'First = 0);\n@@ -1078,7 +1078,7 @@ package body GNAT.Expect is\n \n    function Has_Process (Regexp : Multiprocess_Regexp_Array) return Boolean is\n    begin\n-      return Regexp /= (Regexp'Range => (null, null));\n+      return Regexp /= [Regexp'Range => (null, null)];\n    end Has_Process;\n \n    ---------------\n@@ -1294,8 +1294,8 @@ package body GNAT.Expect is\n       Add_LF       : Boolean := True;\n       Empty_Buffer : Boolean := False)\n    is\n-      Line_Feed   : aliased constant String := (1 .. 1 => ASCII.LF);\n-      Descriptors : Array_Of_Pd := (1 => Descriptor'Unrestricted_Access);\n+      Line_Feed   : aliased constant String := [1 .. 1 => ASCII.LF];\n+      Descriptors : Array_Of_Pd := [Descriptor'Unrestricted_Access];\n \n       Result  : Expect_Match;\n       Discard : Natural;"}, {"sha": "51858ed0bcef2f0d37fada76f0745d9dc7ee43c1", "filename": "gcc/ada/libgnat/g-forstr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-forstr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-forstr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-forstr.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -131,7 +131,7 @@ package body GNAT.Formatted_String is\n       return Formatted_String'\n         (Finalization.Controlled with\n            D => new Data'(Format'Length, 1, 1,\n-             Null_Unbounded_String, 0, 0, (0, 0), Format));\n+             Null_Unbounded_String, 0, 0, [0, 0], Format));\n    end \"+\";\n \n    ---------\n@@ -433,7 +433,7 @@ package body GNAT.Formatted_String is\n \n       declare\n          R : String (1 .. Natural'Max (Natural'Max (F_Spec.Width, Len),\n-                                       Length (Res))) := (others => ' ');\n+                                       Length (Res))) := [others => ' '];\n       begin\n          if F_Spec.Left_Justify then\n             R (1 .. Length (Res)) := To_String (Res);\n@@ -785,7 +785,7 @@ package body GNAT.Formatted_String is\n \n          elsif F.Precision > E - S + 1 then\n             Len := F.Precision - (E - S + 1);\n-            Buffer (S - Len .. S - 1) := (others => '0');\n+            Buffer (S - Len .. S - 1) := [others => '0'];\n             S := S - Len;\n          end if;\n "}, {"sha": "310923fabce7585965024b9877ff177b93279703", "filename": "gcc/ada/libgnat/g-memdum.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-memdum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-memdum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-memdum.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -128,7 +128,7 @@ package body GNAT.Memory_Dump is\n                           (Count - Ctr, 16, 0, Offset_Buf, Last);\n                         Len := Last - 4;\n \n-                        Line_Buf (1 .. AIL - Len - 2) := (others => '0');\n+                        Line_Buf (1 .. AIL - Len - 2) := [others => '0'];\n                         Line_Buf (AIL - Len - 1 .. AIL - 2) :=\n                           Offset_Buf (4 .. Last - 1);\n                         Line_Buf (AIL - 1 .. AIL) := \": \";\n@@ -138,7 +138,7 @@ package body GNAT.Memory_Dump is\n                      null;\n                end case;\n \n-               Line_Buf (AIL + 1 .. Line_Buf'Last) := (others => ' ');\n+               Line_Buf (AIL + 1 .. Line_Buf'Last) := [others => ' '];\n                Line_Buf (AIL + 3 * 16 + 1) := '\"';\n             end if;\n "}, {"sha": "76887817014a826a17febf04387c204180faa2f7", "filename": "gcc/ada/libgnat/g-rannum.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-rannum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-rannum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-rannum.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -385,7 +385,7 @@ is\n       Result : Image_String;\n \n    begin\n-      Result := (others => ' ');\n+      Result := [others => ' '];\n       Result (1 .. Sys_Max_Image_Width) := Image (Gen.Rep);\n \n       if Gen.Have_Gaussian then"}, {"sha": "70911c05bba956c8f5f60f630ed40d39bf66df28", "filename": "gcc/ada/libgnat/g-sechas.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sechas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sechas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sechas.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -238,7 +238,7 @@ package body GNAT.Secure_Hashes is\n                      mod FC.M_State.Block_Length;\n          declare\n             Pad : Stream_Element_Array (1 .. 1 + Zeroes + Size_Length) :=\n-                    (1 => 128, others => 0);\n+                    [1 => 128, others => 0];\n \n             Index       : Stream_Element_Offset;\n             First_Index : Stream_Element_Offset;\n@@ -281,7 +281,7 @@ package body GNAT.Secure_Hashes is\n             declare\n                Outer_C : Context;\n                Opad    : Stream_Element_Array :=\n-                 (1 .. Stream_Element_Offset (Block_Length) => 16#5c#);\n+                 [1 .. Stream_Element_Offset (Block_Length) => 16#5c#];\n \n             begin\n                for J in C.Key'Range loop\n@@ -329,7 +329,7 @@ package body GNAT.Secure_Hashes is\n \n             declare\n                Ipad : Stream_Element_Array :=\n-                 (1 .. Stream_Element_Offset (Block_Length) => 16#36#);\n+                 [1 .. Stream_Element_Offset (Block_Length) => 16#36#];\n \n             begin\n                for J in C.Key'Range loop"}, {"sha": "ca9fbfde8a23a330600272f70b2801f7e3844c98", "filename": "gcc/ada/libgnat/g-sehamd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sehamd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sehamd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sehamd.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -68,7 +68,7 @@ private\n    Initial_D : constant := 16#10325476#;\n \n    Initial_State : constant Hash_State.State :=\n-                     (Initial_A, Initial_B, Initial_C, Initial_D);\n+                     [Initial_A, Initial_B, Initial_C, Initial_D];\n    --  Initialization vector from RFC 1321\n \n end GNAT.Secure_Hashes.MD5;"}, {"sha": "3a2408863d34b83eeecac8db78b29e6e785c1841", "filename": "gcc/ada/libgnat/g-sehash.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sehash.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sehash.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sehash.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -62,11 +62,11 @@ package GNAT.Secure_Hashes.SHA1 is\n private\n \n    Initial_State : constant Hash_State.State :=\n-                     (0 => 16#67452301#,\n+                     [0 => 16#67452301#,\n                       1 => 16#EFCDAB89#,\n                       2 => 16#98BADCFE#,\n                       3 => 16#10325476#,\n-                      4 => 16#C3D2E1F0#);\n+                      4 => 16#C3D2E1F0#];\n    --  Initialization vector from FIPS PUB 180-3\n \n end GNAT.Secure_Hashes.SHA1;"}, {"sha": "c05e00eb6348c0bd7867a2466623590927264067", "filename": "gcc/ada/libgnat/g-sercom.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sercom.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sercom.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sercom.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -192,7 +192,7 @@ private\n    end record;\n \n    Data_Rate_Value : constant array (Data_Rate) of Interfaces.C.unsigned :=\n-                       (B75      =>        75,\n+                       [B75      =>        75,\n                         B110     =>       110,\n                         B150     =>       150,\n                         B300     =>       300,\n@@ -217,7 +217,7 @@ private\n                         B2500000 => 2_500_000,\n                         B3000000 => 3_000_000,\n                         B3500000 => 3_500_000,\n-                        B4000000 => 4_000_000);\n+                        B4000000 => 4_000_000];\n \n    function To_C (Port : Serial_Port) return Serial_Port_Descriptor is\n       (Port.H);"}, {"sha": "3d62b613e60ebe5f072c14855f30c1bfaa27e6f1", "filename": "gcc/ada/libgnat/g-sercom__linux.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sercom__linux.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -80,7 +80,7 @@ package body GNAT.Serial_Communications is\n    pragma Import (C, fcntl, \"fcntl\");\n \n    C_Data_Rate : constant array (Data_Rate) of unsigned :=\n-                   (B75      => OSC.B75,\n+                   [B75      => OSC.B75,\n                     B110     => OSC.B110,\n                     B150     => OSC.B150,\n                     B300     => OSC.B300,\n@@ -105,18 +105,18 @@ package body GNAT.Serial_Communications is\n                     B2500000 => OSC.B2500000,\n                     B3000000 => OSC.B3000000,\n                     B3500000 => OSC.B3500000,\n-                    B4000000 => OSC.B4000000);\n+                    B4000000 => OSC.B4000000];\n \n    C_Bits      : constant array (Data_Bits) of unsigned :=\n-                   (CS7 => OSC.CS7, CS8 => OSC.CS8);\n+                   [CS7 => OSC.CS7, CS8 => OSC.CS8];\n \n    C_Stop_Bits : constant array (Stop_Bits_Number) of unsigned :=\n-                   (One => 0, Two => OSC.CSTOPB);\n+                   [One => 0, Two => OSC.CSTOPB];\n \n    C_Parity    : constant array (Parity_Check) of unsigned :=\n-                   (None => 0,\n+                   [None => 0,\n                     Odd  => OSC.PARENB or OSC.PARODD,\n-                    Even => OSC.PARENB);\n+                    Even => OSC.PARENB];\n \n    procedure Raise_Error (Message : String; Error : Integer := Errno);\n    pragma No_Return (Raise_Error);"}, {"sha": "de51e726264ca6014cf4b47d41e2a1f30dcaafab", "filename": "gcc/ada/libgnat/g-shsh32.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-shsh32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-shsh32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-shsh32.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -50,7 +50,7 @@ package GNAT.Secure_Hashes.SHA2_32 is\n    --  SHA-224 and SHA-256 operate on 32-bit big endian words\n \n    K : constant Hash_State.State (0 .. 63) :=\n-         (16#428a2f98#, 16#71374491#, 16#b5c0fbcf#, 16#e9b5dba5#,\n+         [16#428a2f98#, 16#71374491#, 16#b5c0fbcf#, 16#e9b5dba5#,\n           16#3956c25b#, 16#59f111f1#, 16#923f82a4#, 16#ab1c5ed5#,\n           16#d807aa98#, 16#12835b01#, 16#243185be#, 16#550c7dc3#,\n           16#72be5d74#, 16#80deb1fe#, 16#9bdc06a7#, 16#c19bf174#,\n@@ -65,7 +65,7 @@ package GNAT.Secure_Hashes.SHA2_32 is\n           16#19a4c116#, 16#1e376c08#, 16#2748774c#, 16#34b0bcb5#,\n           16#391c0cb3#, 16#4ed8aa4a#, 16#5b9cca4f#, 16#682e6ff3#,\n           16#748f82ee#, 16#78a5636f#, 16#84c87814#, 16#8cc70208#,\n-          16#90befffa#, 16#a4506ceb#, 16#bef9a3f7#, 16#c67178f2#);\n+          16#90befffa#, 16#a4506ceb#, 16#bef9a3f7#, 16#c67178f2#];\n    --  Constants from FIPS PUB 180-3\n \n    function Sigma0 (X : Word) return Word;\n@@ -86,23 +86,23 @@ package GNAT.Secure_Hashes.SHA2_32 is\n       S1         => S1);\n \n    SHA224_Init_State : constant Hash_State.State (0 .. 7) :=\n-                         (0 => 16#c1059ed8#,\n+                         [0 => 16#c1059ed8#,\n                           1 => 16#367cd507#,\n                           2 => 16#3070dd17#,\n                           3 => 16#f70e5939#,\n                           4 => 16#ffc00b31#,\n                           5 => 16#68581511#,\n                           6 => 16#64f98fa7#,\n-                          7 => 16#befa4fa4#);\n+                          7 => 16#befa4fa4#];\n    SHA256_Init_State : constant Hash_State.State (0 .. 7) :=\n-                         (0 => 16#6a09e667#,\n+                         [0 => 16#6a09e667#,\n                           1 => 16#bb67ae85#,\n                           2 => 16#3c6ef372#,\n                           3 => 16#a54ff53a#,\n                           4 => 16#510e527f#,\n                           5 => 16#9b05688c#,\n                           6 => 16#1f83d9ab#,\n-                          7 => 16#5be0cd19#);\n+                          7 => 16#5be0cd19#];\n    --  Initialization vectors from FIPS PUB 180-3\n \n end GNAT.Secure_Hashes.SHA2_32;"}, {"sha": "8440e5d08b29170aae12d674d105b969ea7f3170", "filename": "gcc/ada/libgnat/g-shsh64.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-shsh64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-shsh64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-shsh64.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -50,7 +50,7 @@ package GNAT.Secure_Hashes.SHA2_64 is\n    --  SHA-384 and SHA-512 operate on 64-bit big endian words\n \n    K : Hash_State.State (0 .. 79) :=\n-         (16#428a2f98d728ae22#, 16#7137449123ef65cd#,\n+         [16#428a2f98d728ae22#, 16#7137449123ef65cd#,\n           16#b5c0fbcfec4d3b2f#, 16#e9b5dba58189dbbc#,\n           16#3956c25bf348b538#, 16#59f111f1b605d019#,\n           16#923f82a4af194f9b#, 16#ab1c5ed5da6d8118#,\n@@ -89,7 +89,7 @@ package GNAT.Secure_Hashes.SHA2_64 is\n           16#28db77f523047d84#, 16#32caab7b40c72493#,\n           16#3c9ebe0a15c9bebc#, 16#431d67c49c100d4c#,\n           16#4cc5d4becb3e42b6#, 16#597f299cfc657e2a#,\n-          16#5fcb6fab3ad6faec#, 16#6c44198c4a475817#);\n+          16#5fcb6fab3ad6faec#, 16#6c44198c4a475817#];\n    --  Constants from FIPS PUB 180-3\n \n    function Sigma0 (X : Word) return Word;\n@@ -110,23 +110,23 @@ package GNAT.Secure_Hashes.SHA2_64 is\n       S1         => S1);\n \n    SHA384_Init_State : constant Hash_State.State :=\n-                         (0 => 16#cbbb9d5dc1059ed8#,\n+                         [0 => 16#cbbb9d5dc1059ed8#,\n                           1 => 16#629a292a367cd507#,\n                           2 => 16#9159015a3070dd17#,\n                           3 => 16#152fecd8f70e5939#,\n                           4 => 16#67332667ffc00b31#,\n                           5 => 16#8eb44a8768581511#,\n                           6 => 16#db0c2e0d64f98fa7#,\n-                          7 => 16#47b5481dbefa4fa4#);\n+                          7 => 16#47b5481dbefa4fa4#];\n    SHA512_Init_State : constant Hash_State.State :=\n-                         (0 => 16#6a09e667f3bcc908#,\n+                         [0 => 16#6a09e667f3bcc908#,\n                           1 => 16#bb67ae8584caa73b#,\n                           2 => 16#3c6ef372fe94f82b#,\n                           3 => 16#a54ff53a5f1d36f1#,\n                           4 => 16#510e527fade682d1#,\n                           5 => 16#9b05688c2b3e6c1f#,\n                           6 => 16#1f83d9abfb41bd6b#,\n-                          7 => 16#5be0cd19137e2179#);\n+                          7 => 16#5be0cd19137e2179#];\n    --  Initialization vectors from FIPS PUB 180-3\n \n end GNAT.Secure_Hashes.SHA2_64;"}, {"sha": "c603a2db35a26cf81f5ccb94f6aa2f3f5a0c4fdb", "filename": "gcc/ada/libgnat/g-socket.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socket.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -71,31 +71,31 @@ package body GNAT.Sockets is\n    --  Correspondence tables\n \n    Levels : constant array (Level_Type) of C.int :=\n-              (Socket_Level               => SOSC.SOL_SOCKET,\n+              [Socket_Level               => SOSC.SOL_SOCKET,\n                IP_Protocol_For_IP_Level   => SOSC.IPPROTO_IP,\n                IP_Protocol_For_IPv6_Level => SOSC.IPPROTO_IPV6,\n                IP_Protocol_For_UDP_Level  => SOSC.IPPROTO_UDP,\n                IP_Protocol_For_TCP_Level  => SOSC.IPPROTO_TCP,\n                IP_Protocol_For_ICMP_Level => SOSC.IPPROTO_ICMP,\n                IP_Protocol_For_IGMP_Level => SOSC.IPPROTO_IGMP,\n-               IP_Protocol_For_RAW_Level  => SOSC.IPPROTO_RAW);\n+               IP_Protocol_For_RAW_Level  => SOSC.IPPROTO_RAW];\n \n    Modes : constant array (Mode_Type) of C.int :=\n-             (Socket_Stream   => SOSC.SOCK_STREAM,\n+             [Socket_Stream   => SOSC.SOCK_STREAM,\n               Socket_Datagram => SOSC.SOCK_DGRAM,\n-              Socket_Raw      => SOSC.SOCK_RAW);\n+              Socket_Raw      => SOSC.SOCK_RAW];\n \n    Shutmodes : constant array (Shutmode_Type) of C.int :=\n-                 (Shut_Read       => SOSC.SHUT_RD,\n+                 [Shut_Read       => SOSC.SHUT_RD,\n                   Shut_Write      => SOSC.SHUT_WR,\n-                  Shut_Read_Write => SOSC.SHUT_RDWR);\n+                  Shut_Read_Write => SOSC.SHUT_RDWR];\n \n    Requests : constant array (Request_Name) of SOSC.IOCTL_Req_T :=\n-                (Non_Blocking_IO => SOSC.FIONBIO,\n-                 N_Bytes_To_Read => SOSC.FIONREAD);\n+                [Non_Blocking_IO => SOSC.FIONBIO,\n+                 N_Bytes_To_Read => SOSC.FIONREAD];\n \n    Options : constant array (Specific_Option_Name) of C.int :=\n-               (Keep_Alive          => SOSC.SO_KEEPALIVE,\n+               [Keep_Alive          => SOSC.SO_KEEPALIVE,\n                 Keep_Alive_Count    => SOSC.TCP_KEEPCNT,\n                 Keep_Alive_Idle     => SOSC.TCP_KEEPIDLE,\n                 Keep_Alive_Interval => SOSC.TCP_KEEPINTVL,\n@@ -120,15 +120,15 @@ package body GNAT.Sockets is\n                 IPv6_Only           => SOSC.IPV6_V6ONLY,\n                 Send_Timeout        => SOSC.SO_SNDTIMEO,\n                 Receive_Timeout     => SOSC.SO_RCVTIMEO,\n-                Busy_Polling        => SOSC.SO_BUSY_POLL);\n+                Busy_Polling        => SOSC.SO_BUSY_POLL];\n    --  ??? Note: for OpenSolaris, Receive_Packet_Info should be IP_RECVPKTINFO,\n    --  but for Linux compatibility this constant is the same as IP_PKTINFO.\n \n    Flags : constant array (0 .. 3) of C.int :=\n-             (0 => SOSC.MSG_OOB,     --  Process_Out_Of_Band_Data\n+             [0 => SOSC.MSG_OOB,     --  Process_Out_Of_Band_Data\n               1 => SOSC.MSG_PEEK,    --  Peek_At_Incoming_Data\n               2 => SOSC.MSG_WAITALL, --  Wait_For_A_Full_Reception\n-              3 => SOSC.MSG_EOR);    --  Send_End_Of_Record\n+              3 => SOSC.MSG_EOR];    --  Send_End_Of_Record\n \n    Socket_Error_Id : constant Exception_Id := Socket_Error'Identity;\n    Host_Error_Id   : constant Exception_Id := Host_Error'Identity;\n@@ -1184,8 +1184,8 @@ package body GNAT.Sockets is\n       Numeric_Serv : Boolean := False) return Host_Service\n    is\n       SA  : aliased Sockaddr;\n-      H   : aliased C.char_array := (1 .. SOSC.NI_MAXHOST => C.nul);\n-      S   : aliased C.char_array := (1 .. SOSC.NI_MAXSERV => C.nul);\n+      H   : aliased C.char_array := [1 .. SOSC.NI_MAXHOST => C.nul];\n+      S   : aliased C.char_array := [1 .. SOSC.NI_MAXSERV => C.nul];\n       RC  : C.int;\n       Len : C.int;\n    begin\n@@ -1621,7 +1621,7 @@ package body GNAT.Sockets is\n             when Family_Inet   => 4 * Value.Sin_V4'Length,\n             when Family_Inet6  => 6 * 5 + 4 * 4);\n             --  1234:1234:1234:1234:1234:1234:123.123.123.123\n-      Dst : aliased C.char_array := (1 .. C.size_t (Size) => C.nul);\n+      Dst : aliased C.char_array := [1 .. C.size_t (Size) => C.nul];\n       Ia  : aliased In_Addr_Union (Value.Family);\n    begin\n       case Value.Family is"}, {"sha": "443b61c3cb41bec655dd450bdc00567a731cd701", "filename": "gcc/ada/libgnat/g-socket.ads", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socket.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -506,7 +506,7 @@ package GNAT.Sockets is\n    --  Octet for Internet address\n \n    Inet_Addr_Bytes_Length : constant array (Family_Inet_4_6) of Natural :=\n-     (Family_Inet => 4, Family_Inet6 => 16);\n+     [Family_Inet => 4, Family_Inet6 => 16];\n \n    type Inet_Addr_Bytes is array (Natural range <>) of Inet_Addr_Comp_Type;\n \n@@ -521,10 +521,10 @@ package GNAT.Sockets is\n    type Inet_Addr_Type (Family : Family_Inet_4_6 := Family_Inet) is record\n       case Family is\n          when Family_Inet =>\n-            Sin_V4 : Inet_Addr_V4_Type := (others => 0);\n+            Sin_V4 : Inet_Addr_V4_Type := [others => 0];\n \n          when Family_Inet6 =>\n-            Sin_V6 : Inet_Addr_V6_Type := (others => 0);\n+            Sin_V6 : Inet_Addr_V6_Type := [others => 0];\n \n       end case;\n    end record;\n@@ -571,7 +571,7 @@ package GNAT.Sockets is\n    --  Idem for IPv6 protocol\n \n    IPv4_To_IPv6_Prefix : constant Inet_Addr_Bytes :=\n-     (1 .. 10 => 0, 11 .. 12 => 255);\n+     [1 .. 10 => 0, 11 .. 12 => 255];\n    --  Prefix for IPv4 mapped to IPv6 addresses\n \n    --  Functions to handle masks and prefixes\n@@ -1529,32 +1529,32 @@ private\n    No_Port  : constant Port_Type := 0;\n \n    Any_Inet_Addr       : constant Inet_Addr_Type :=\n-                           (Family_Inet, (others => 0));\n+                           (Family_Inet, [others => 0]);\n    Any_Inet6_Addr      : constant Inet_Addr_Type :=\n-                           (Family_Inet6, (others => 0));\n+                           (Family_Inet6, [others => 0]);\n    No_Inet_Addr        : constant Inet_Addr_Type :=\n-                           (Family_Inet, (others => 0));\n+                           (Family_Inet, [others => 0]);\n    Broadcast_Inet_Addr : constant Inet_Addr_Type :=\n-                           (Family_Inet, (others => 255));\n+                           (Family_Inet, [others => 255]);\n    Loopback_Inet_Addr  : constant Inet_Addr_Type :=\n-                           (Family_Inet, (127, 0, 0, 1));\n+                           (Family_Inet, [127, 0, 0, 1]);\n    Loopback_Inet6_Addr : constant Inet_Addr_Type :=\n                            (Family_Inet6,\n-                            (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1));\n+                            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]);\n \n    Unspecified_Group_Inet_Addr : constant Inet_Addr_Type :=\n-                                   (Family_Inet, (224, 0, 0, 0));\n+                                   (Family_Inet, [224, 0, 0, 0]);\n    All_Hosts_Group_Inet_Addr   : constant Inet_Addr_Type :=\n-                                   (Family_Inet, (224, 0, 0, 1));\n+                                   (Family_Inet, [224, 0, 0, 1]);\n    All_Routers_Group_Inet_Addr : constant Inet_Addr_Type :=\n-                                   (Family_Inet, (224, 0, 0, 2));\n+                                   (Family_Inet, [224, 0, 0, 2]);\n \n    Unspecified_Group_Inet6_Addr : constant Inet_Addr_Type :=\n-     (Family_Inet6, (255, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));\n+     (Family_Inet6, [255, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    All_Hosts_Group_Inet6_Addr   : constant Inet_Addr_Type :=\n-     (Family_Inet6, (255, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1));\n+     (Family_Inet6, [255, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]);\n    All_Routers_Group_Inet6_Addr : constant Inet_Addr_Type :=\n-     (Family_Inet6, (255, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2));\n+     (Family_Inet6, [255, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]);\n \n    No_Sock_Addr : constant Sock_Addr_Type := (Family_Inet, No_Inet_Addr, 0);\n "}, {"sha": "1592594926c530fbd2f4dcfee0b65280417d5c7f", "filename": "gcc/ada/libgnat/g-socpol.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-socpol.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-socpol.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socpol.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -36,7 +36,7 @@ with GNAT.Sockets.Thin;\n package body GNAT.Sockets.Poll is\n \n    To_C : constant array (Wait_Event_Type) of Events_Type :=\n-            (Input => SOC.POLLIN or SOC.POLLPRI, Output => SOC.POLLOUT);\n+            [Input => SOC.POLLIN or SOC.POLLPRI, Output => SOC.POLLOUT];\n    --  To convert Wait_Event_Type to C I/O events flags\n \n    procedure Set_Mode (Item : out Pollfd; Mode : Wait_Event_Set);\n@@ -50,11 +50,11 @@ package body GNAT.Sockets.Poll is\n    --  raise Constraint_Error if Index is more than number of sockets in Self\n \n    function Status (Item : Pollfd) return Event_Set is\n-     (Input           => (Item.REvents and To_C (Input)) /= 0,\n-      Output          => (Item.REvents and To_C (Output)) /= 0,\n-      Error           => (Item.REvents and SOC.POLLERR) /= 0,\n-      Hang_Up         => (Item.REvents and SOC.POLLHUP) /= 0,\n-      Invalid_Request => (Item.REvents and SOC.POLLNVAL) /= 0);\n+     ([Input           => (Item.REvents and To_C (Input)) /= 0,\n+       Output          => (Item.REvents and To_C (Output)) /= 0,\n+       Error           => (Item.REvents and SOC.POLLERR) /= 0,\n+       Hang_Up         => (Item.REvents and SOC.POLLHUP) /= 0,\n+       Invalid_Request => (Item.REvents and SOC.POLLNVAL) /= 0]);\n    --  Get I/O events from C word\n \n    procedure Wait\n@@ -188,8 +188,8 @@ package body GNAT.Sockets.Poll is\n    begin\n       Check_Range (Self, Index);\n       return\n-        (Input  => (Self.Fds (Index).Events and To_C (Input)) /= 0,\n-         Output => (Self.Fds (Index).Events and To_C (Output)) /= 0);\n+        [Input  => (Self.Fds (Index).Events and To_C (Input)) /= 0,\n+         Output => (Self.Fds (Index).Events and To_C (Output)) /= 0];\n    end Get_Events;\n \n    ------------"}, {"sha": "348cc6f710be0e19a626036f0a1a7caaa42c17e4", "filename": "gcc/ada/libgnat/g-socpol.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-socpol.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-socpol.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socpol.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -171,10 +171,10 @@ package GNAT.Sockets.Poll is\n \n private\n \n-   Input_Event  : constant Wait_Event_Set := (Input => True, Output => False);\n-   Output_Event : constant Wait_Event_Set := (Input => False, Output => True);\n-   Both_Events  : constant Wait_Event_Set := (others => True);\n-   Error_Event  : constant Wait_Event_Set := (others => False);\n+   Input_Event  : constant Wait_Event_Set := [Input => True, Output => False];\n+   Output_Event : constant Wait_Event_Set := [Input => False, Output => True];\n+   Both_Events  : constant Wait_Event_Set := [others => True];\n+   Error_Event  : constant Wait_Event_Set := [others => False];\n \n    package SOC renames System.OS_Constants;\n "}, {"sha": "761bcb19e6e40c4c20409687372e1887b8c473a9", "filename": "gcc/ada/libgnat/g-sothco.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sothco.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -75,16 +75,16 @@ package GNAT.Sockets.Thin_Common is\n    -------------------------------------------\n \n    Families : constant array (Family_Type) of C.int :=\n-                (Family_Unspec => SOSC.AF_UNSPEC,\n+                [Family_Unspec => SOSC.AF_UNSPEC,\n                  Family_Unix   => SOSC.AF_UNIX,\n                  Family_Inet   => SOSC.AF_INET,\n-                 Family_Inet6  => SOSC.AF_INET6);\n+                 Family_Inet6  => SOSC.AF_INET6];\n \n    Lengths  : constant array (Family_Type) of C.unsigned_char :=\n-                (Family_Unspec => 0,\n+                [Family_Unspec => 0,\n                  Family_Unix   => SOSC.SIZEOF_sockaddr_un,\n                  Family_Inet   => SOSC.SIZEOF_sockaddr_in,\n-                 Family_Inet6  => SOSC.SIZEOF_sockaddr_in6);\n+                 Family_Inet6  => SOSC.SIZEOF_sockaddr_in6];\n \n    ----------------------------\n    -- Generic socket address --\n@@ -160,7 +160,7 @@ package GNAT.Sockets.Thin_Common is\n          Sin_Addr : In_Addr := (others => 0);\n          --  IPv4 address\n \n-         Sin_Zero : C.char_array (1 .. 8) := (others => C.nul);\n+         Sin_Zero : C.char_array (1 .. 8) := [others => C.nul];\n          --  Padding\n          --\n          --  Note that some platforms require that all unused (reserved) bytes\n@@ -174,7 +174,7 @@ package GNAT.Sockets.Thin_Common is\n          --  Port in network byte order\n \n          Sin6_FlowInfo : Interfaces.Unsigned_32 := 0;\n-         Sin6_Addr     : In6_Addr := (others => 0);\n+         Sin6_Addr     : In6_Addr := [others => 0];\n          Sin6_Scope_Id : Interfaces.Unsigned_32 := 0;\n \n       when Family_Unix =>"}, {"sha": "353a92d104fbfb79ef960d0956b6eb31ceecaea4", "filename": "gcc/ada/libgnat/g-spipat.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-spipat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fg-spipat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-spipat.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -367,7 +367,7 @@ package body GNAT.Spitbol.Patterns is\n    --  one character on success, and not to make any entries on the stack.\n \n    OK_For_Simple_Arbno : constant array (Pattern_Code) of Boolean :=\n-     (PC_Any_CS    |\n+     [PC_Any_CS    |\n       PC_Any_CH    |\n       PC_Any_VF    |\n       PC_Any_VP    |\n@@ -387,7 +387,7 @@ package body GNAT.Spitbol.Patterns is\n       PC_String_4  |\n       PC_String_5  |\n       PC_String_6   => True,\n-      others        => False);\n+      others        => False];\n \n    -------------------------------\n    -- The Pattern History Stack --"}, {"sha": "33fa1aea06b776f9a2c8f2a43dc101b1b1342075", "filename": "gcc/ada/libgnat/i-cobol.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fi-cobol.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fi-cobol.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-cobol.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -61,7 +61,7 @@ package Interfaces.COBOL is\n \n    type COBOL_Character is new Character;\n \n-   Ada_To_COBOL : array (Standard.Character) of COBOL_Character := (\n+   Ada_To_COBOL : array (Standard.Character) of COBOL_Character := [\n      COBOL_Character'Val (000), COBOL_Character'Val (001),\n      COBOL_Character'Val (002), COBOL_Character'Val (003),\n      COBOL_Character'Val (004), COBOL_Character'Val (005),\n@@ -189,9 +189,9 @@ package Interfaces.COBOL is\n      COBOL_Character'Val (248), COBOL_Character'Val (249),\n      COBOL_Character'Val (250), COBOL_Character'Val (251),\n      COBOL_Character'Val (252), COBOL_Character'Val (253),\n-     COBOL_Character'Val (254), COBOL_Character'Val (255));\n+     COBOL_Character'Val (254), COBOL_Character'Val (255)];\n \n-   COBOL_To_Ada : array (COBOL_Character) of Standard.Character := (\n+   COBOL_To_Ada : array (COBOL_Character) of Standard.Character := [\n      Standard.Character'Val (000), Standard.Character'Val (001),\n      Standard.Character'Val (002), Standard.Character'Val (003),\n      Standard.Character'Val (004), Standard.Character'Val (005),\n@@ -319,7 +319,7 @@ package Interfaces.COBOL is\n      Standard.Character'Val (248), Standard.Character'Val (249),\n      Standard.Character'Val (250), Standard.Character'Val (251),\n      Standard.Character'Val (252), Standard.Character'Val (253),\n-     Standard.Character'Val (254), Standard.Character'Val (255));\n+     Standard.Character'Val (254), Standard.Character'Val (255)];\n \n    type Alphanumeric is array (Positive range <>) of COBOL_Character;\n    --  pragma Pack (Alphanumeric);"}, {"sha": "43648888f6923c9e7b4e8f1c3b9e910dba49b750", "filename": "gcc/ada/libgnat/i-pacdec.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fi-pacdec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fi-pacdec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-pacdec.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -48,7 +48,7 @@ package body Interfaces.Packed_Decimal is\n    --  using table look up in this direction because divides are expensive.\n \n    Packed_Byte : constant array (00 .. 99) of Unsigned_8 :=\n-      (16#00#, 16#01#, 16#02#, 16#03#, 16#04#,\n+      [16#00#, 16#01#, 16#02#, 16#03#, 16#04#,\n        16#05#, 16#06#, 16#07#, 16#08#, 16#09#,\n        16#10#, 16#11#, 16#12#, 16#13#, 16#14#,\n        16#15#, 16#16#, 16#17#, 16#18#, 16#19#,\n@@ -67,7 +67,7 @@ package body Interfaces.Packed_Decimal is\n        16#80#, 16#81#, 16#82#, 16#83#, 16#84#,\n        16#85#, 16#86#, 16#87#, 16#88#, 16#89#,\n        16#90#, 16#91#, 16#92#, 16#93#, 16#94#,\n-       16#95#, 16#96#, 16#97#, 16#98#, 16#99#);\n+       16#95#, 16#96#, 16#97#, 16#98#, 16#99#];\n \n    ---------------------\n    -- Int32_To_Packed --"}, {"sha": "bcfa1b707f3b81cbcb30fe645b3af79b160d613d", "filename": "gcc/ada/libgnat/i-pacdec.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fi-pacdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fi-pacdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-pacdec.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -91,7 +91,7 @@ package Interfaces.Packed_Decimal is\n    --  Range of possible byte lengths\n \n    Packed_Size : constant array (1 .. 18) of Byte_Length :=\n-      (01 => 01,    -- Length in bytes for digits 1\n+      [01 => 01,    -- Length in bytes for digits 1\n        02 => 02,    -- Length in bytes for digits 2\n        03 => 02,    -- Length in bytes for digits 2\n        04 => 03,    -- Length in bytes for digits 2\n@@ -108,7 +108,7 @@ package Interfaces.Packed_Decimal is\n        15 => 08,    -- Length in bytes for digits 2\n        16 => 09,    -- Length in bytes for digits 2\n        17 => 09,    -- Length in bytes for digits 2\n-       18 => 10);   -- Length in bytes for digits 2\n+       18 => 10];   -- Length in bytes for digits 2\n \n    -------------------------\n    -- Conversion Routines --"}, {"sha": "05353417552719d018f0cae90f663f4645f59ac1", "filename": "gcc/ada/libgnat/s-bitops.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-bitops.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-bitops.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-bitops.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -59,14 +59,14 @@ package body System.Bit_Ops is\n    --  The following is an array of masks used to mask the final byte, either\n    --  at the high end (big-endian case) or the low end (little-endian case).\n \n-   Masks : constant array (1 .. 7) of Packed_Byte := (\n+   Masks : constant array (1 .. 7) of Packed_Byte := [\n      (1 - LE) * 2#1000_0000# + LE * 2#0000_0001#,\n      (1 - LE) * 2#1100_0000# + LE * 2#0000_0011#,\n      (1 - LE) * 2#1110_0000# + LE * 2#0000_0111#,\n      (1 - LE) * 2#1111_0000# + LE * 2#0000_1111#,\n      (1 - LE) * 2#1111_1000# + LE * 2#0001_1111#,\n      (1 - LE) * 2#1111_1100# + LE * 2#0011_1111#,\n-     (1 - LE) * 2#1111_1110# + LE * 2#0111_1111#);\n+     (1 - LE) * 2#1111_1110# + LE * 2#0111_1111#];\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "ea4446a4f09cbdfeca6730478002d1b2a0ef24e5", "filename": "gcc/ada/libgnat/s-crc32.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-crc32.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-crc32.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-crc32.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -41,7 +41,7 @@ package body System.CRC32 is\n    --  than processing the byte bit by bit.\n \n    Table : constant array (CRC32 range 0 .. 255) of CRC32 :=\n-     (16#0000_0000#, 16#7707_3096#, 16#EE0E_612C#, 16#9909_51BA#,\n+     [16#0000_0000#, 16#7707_3096#, 16#EE0E_612C#, 16#9909_51BA#,\n       16#076D_C419#, 16#706A_F48F#, 16#E963_A535#, 16#9E64_95A3#,\n       16#0EDB_8832#, 16#79DC_B8A4#, 16#E0D5_E91E#, 16#97D2_D988#,\n       16#09B6_4C2B#, 16#7EB1_7CBD#, 16#E7B8_2D07#, 16#90BF_1D91#,\n@@ -104,7 +104,7 @@ package body System.CRC32 is\n       16#BDBD_F21C#, 16#CABA_C28A#, 16#53B3_9330#, 16#24B4_A3A6#,\n       16#BAD0_3605#, 16#CDD7_0693#, 16#54DE_5729#, 16#23D9_67BF#,\n       16#B366_7A2E#, 16#C461_4AB8#, 16#5D68_1B02#, 16#2A6F_2B94#,\n-      16#B40B_BE37#, 16#C30C_8EA1#, 16#5A05_DF1B#, 16#2D02_EF8D#);\n+      16#B40B_BE37#, 16#C30C_8EA1#, 16#5A05_DF1B#, 16#2D02_EF8D#];\n \n    ---------------\n    -- Get_Value --"}, {"sha": "92af09d09daef01f96f178f7e46c8369e97580b9", "filename": "gcc/ada/libgnat/s-gearop.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-gearop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-gearop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-gearop.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -883,7 +883,7 @@ package body System.Generic_Array_Operations is\n       return R : Matrix (First_1 .. Check_Unit_Last (First_1, Order, First_1),\n                          First_2 .. Check_Unit_Last (First_2, Order, First_2))\n       do\n-         R := (others => (others => Zero));\n+         R := [others => [others => Zero]];\n \n          for J in 0 .. Order - 1 loop\n             R (First_1 + J, First_2 + J) := One;\n@@ -902,7 +902,7 @@ package body System.Generic_Array_Operations is\n    is\n    begin\n       return R : Vector (First .. Check_Unit_Last (Index, Order, First)) do\n-         R := (others => Zero);\n+         R := [others => Zero];\n          R (Index) := One;\n       end return;\n    end Unit_Vector;"}, {"sha": "47d8311a45d5656a23a6afb8d5c1c846675cc0e2", "filename": "gcc/ada/libgnat/s-genbig.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-genbig.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-genbig.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-genbig.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -50,10 +50,10 @@ package body System.Generic_Bignums is\n \n    subtype LLI is Long_Long_Integer;\n \n-   One_Data : constant Digit_Vector (1 .. 1) := (1 => 1);\n+   One_Data : constant Digit_Vector (1 .. 1) := [1];\n    --  Constant one\n \n-   Zero_Data : constant Digit_Vector (1 .. 0) := (1 .. 0 => 0);\n+   Zero_Data : constant Digit_Vector (1 .. 0) := [];\n    --  Constant zero\n \n    -----------------------\n@@ -332,7 +332,7 @@ package body System.Generic_Bignums is\n       elsif X.Len = 1 and then X.D (1) = 2 and then Y.D (1) < 32 then\n          declare\n             D : constant Digit_Vector (1 .. 1) :=\n-                  (1 => Shift_Left (SD'(1), Natural (Y.D (1))));\n+                  [Shift_Left (SD'(1), Natural (Y.D (1)))];\n          begin\n             return Normalize (D, X.Neg);\n          end;\n@@ -573,7 +573,7 @@ package body System.Generic_Bignums is\n    -------------\n \n    function Big_Mul (X, Y : Bignum) return Big_Integer is\n-      Result : Digit_Vector (1 .. X.Len + Y.Len) := (others => 0);\n+      Result : Digit_Vector (1 .. X.Len + Y.Len) := [others => 0];\n       --  Accumulate result (max length of result is sum of operand lengths)\n \n       L : Length;\n@@ -1149,22 +1149,22 @@ package body System.Generic_Bignums is\n \n    begin\n       if X = 0 then\n-         return Allocate_Big_Integer ((1 .. 0 => <>), False);\n+         return Allocate_Big_Integer ([], False);\n \n       --  One word result\n \n       elsif X in -(2 ** 32 - 1) .. +(2 ** 32 - 1) then\n-         return Allocate_Big_Integer ((1 => SD (abs X)), X < 0);\n+         return Allocate_Big_Integer ([SD (abs X)], X < 0);\n \n       --  Large negative number annoyance\n \n       elsif X = -2 ** 63 then\n-         return Allocate_Big_Integer ((2 ** 31, 0), True);\n+         return Allocate_Big_Integer ([2 ** 31, 0], True);\n \n       elsif Long_Long_Long_Integer'Size = 128\n         and then X = Long_Long_Long_Integer'First\n       then\n-         return Allocate_Big_Integer ((2 ** 31, 0, 0, 0), True);\n+         return Allocate_Big_Integer ([2 ** 31, 0, 0, 0], True);\n \n       --  Other negative numbers\n \n@@ -1196,17 +1196,17 @@ package body System.Generic_Bignums is\n    function To_Bignum (X : Unsigned_128) return Big_Integer is\n    begin\n       if X = 0 then\n-         return Allocate_Big_Integer ((1 .. 0 => <>), False);\n+         return Allocate_Big_Integer ([], False);\n \n       --  One word result\n \n       elsif X < 2 ** 32 then\n-         return Allocate_Big_Integer ((1 => SD (X)), False);\n+         return Allocate_Big_Integer ([SD (X)], False);\n \n       --  Two word result\n \n       elsif Shift_Right (X, 32) < 2 ** 32 then\n-         return Allocate_Big_Integer ((SD (X / Base), SD (X mod Base)), False);\n+         return Allocate_Big_Integer ([SD (X / Base), SD (X mod Base)], False);\n \n       --  Three or four word result\n \n@@ -1241,7 +1241,7 @@ package body System.Generic_Bignums is\n    function To_String\n      (X : Bignum; Width : Natural := 0; Base : Positive := 10) return String\n    is\n-      Big_Base : aliased Bignum_Data := (1, False, (1 => SD (Base)));\n+      Big_Base : aliased Bignum_Data := (1, False, [SD (Base)]);\n \n       function Add_Base (S : String) return String;\n       --  Add base information if Base /= 10\n@@ -1285,7 +1285,7 @@ package body System.Generic_Bignums is\n       function Image (Arg : Bignum) return String is\n       begin\n          if Big_LT (Arg, Big_Base'Unchecked_Access) then\n-            return (1 => Hex_Chars (Natural (From_Bignum (Arg))));\n+            return [Hex_Chars (Natural (From_Bignum (Arg)))];\n          else\n             declare\n                Div    : aliased Big_Integer;\n@@ -1315,8 +1315,8 @@ package body System.Generic_Bignums is\n          Min_Length : Natural;\n          Char       : Character := ' ') return String is\n       begin\n-         return (1 .. Integer'Max (Integer (Min_Length) - Str'Length, 0)\n-                        => Char) & Str;\n+         return [1 .. Integer'Max (Integer (Min_Length) - Str'Length, 0)\n+                        => Char] & Str;\n       end Leading_Padding;\n \n       Zero : aliased Bignum_Data := (0, False, D => Zero_Data);"}, {"sha": "90bfc130ce3134e3a51c2b1c70c9630effcddde4", "filename": "gcc/ada/libgnat/s-htable.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-htable.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -173,7 +173,7 @@ package body System.HTable is\n       begin\n          --  Use an aggregate for efficiency reasons\n \n-         Table := (others => Null_Ptr);\n+         Table := [others => Null_Ptr];\n       end Reset;\n \n       ---------"}, {"sha": "8c58b19fe019e5b57cfa7f5ba15d0c167e65b5f0", "filename": "gcc/ada/libgnat/s-imgcha.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-imgcha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-imgcha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-imgcha.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -48,7 +48,7 @@ package body System.Img_Char is\n         range Character'Val (16#00#) .. Character'Val (16#1F#);\n \n       C0 : constant array (C0_Range) of Cname :=\n-              (Character'Val (16#00#) => \"NUL\",\n+              [Character'Val (16#00#) => \"NUL\",\n                Character'Val (16#01#) => \"SOH\",\n                Character'Val (16#02#) => \"STX\",\n                Character'Val (16#03#) => \"ETX\",\n@@ -79,13 +79,13 @@ package body System.Img_Char is\n                Character'Val (16#1C#) => \"FS \",\n                Character'Val (16#1D#) => \"GS \",\n                Character'Val (16#1E#) => \"RS \",\n-               Character'Val (16#1F#) => \"US \");\n+               Character'Val (16#1F#) => \"US \"];\n \n       subtype C1_Range is Character\n         range Character'Val (16#7F#) .. Character'Val (16#9F#);\n \n       C1 : constant array (C1_Range) of Cname :=\n-              (Character'Val (16#7F#) => \"DEL\",\n+              [Character'Val (16#7F#) => \"DEL\",\n                Character'Val (16#80#) => \"res\",\n                Character'Val (16#81#) => \"res\",\n                Character'Val (16#82#) => \"BPH\",\n@@ -117,7 +117,7 @@ package body System.Img_Char is\n                Character'Val (16#9C#) => \"ST \",\n                Character'Val (16#9D#) => \"OSC\",\n                Character'Val (16#9E#) => \"PM \",\n-               Character'Val (16#9F#) => \"APC\");\n+               Character'Val (16#9F#) => \"APC\"];\n \n    begin\n       --  Control characters are represented by their names (RM 3.5(32))"}, {"sha": "4dc490ca8a3598cd8511b03bb3dc09ed704f5e04", "filename": "gcc/ada/libgnat/s-powflt.ads", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-powflt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-powflt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-powflt.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -42,26 +42,26 @@ package System.Powten_Flt is\n    --  Largest power of ten exactly representable with a double Float\n \n    Powten : constant array (0 .. Maxpow, 1 .. 2) of Float :=\n-     (00 => (1.0E+00, 0.0),\n-      01 => (1.0E+01, 0.0),\n-      02 => (1.0E+02, 0.0),\n-      03 => (1.0E+03, 0.0),\n-      04 => (1.0E+04, 0.0),\n-      05 => (1.0E+05, 0.0),\n-      06 => (1.0E+06, 0.0),\n-      07 => (1.0E+07, 0.0),\n-      08 => (1.0E+08, 0.0),\n-      09 => (1.0E+09, 0.0),\n-      10 => (1.0E+10, 0.0),\n-      11 => (1.0E+11, 1.0E+11 - Float'Machine (1.0E+11)),\n-      12 => (1.0E+12, 1.0E+12 - Float'Machine (1.0E+12)),\n-      13 => (1.0E+13, 1.0E+13 - Float'Machine (1.0E+13)),\n-      14 => (1.0E+14, 1.0E+14 - Float'Machine (1.0E+14)),\n-      15 => (1.0E+15, 1.0E+15 - Float'Machine (1.0E+15)),\n-      16 => (1.0E+16, 1.0E+16 - Float'Machine (1.0E+16)),\n-      17 => (1.0E+17, 1.0E+17 - Float'Machine (1.0E+17)),\n-      18 => (1.0E+18, 1.0E+18 - Float'Machine (1.0E+18)),\n-      19 => (1.0E+19, 1.0E+19 - Float'Machine (1.0E+19)),\n-      20 => (1.0E+20, 1.0E+20 - Float'Machine (1.0E+20)));\n+     [00 => [1.0E+00, 0.0],\n+      01 => [1.0E+01, 0.0],\n+      02 => [1.0E+02, 0.0],\n+      03 => [1.0E+03, 0.0],\n+      04 => [1.0E+04, 0.0],\n+      05 => [1.0E+05, 0.0],\n+      06 => [1.0E+06, 0.0],\n+      07 => [1.0E+07, 0.0],\n+      08 => [1.0E+08, 0.0],\n+      09 => [1.0E+09, 0.0],\n+      10 => [1.0E+10, 0.0],\n+      11 => [1.0E+11, 1.0E+11 - Float'Machine (1.0E+11)],\n+      12 => [1.0E+12, 1.0E+12 - Float'Machine (1.0E+12)],\n+      13 => [1.0E+13, 1.0E+13 - Float'Machine (1.0E+13)],\n+      14 => [1.0E+14, 1.0E+14 - Float'Machine (1.0E+14)],\n+      15 => [1.0E+15, 1.0E+15 - Float'Machine (1.0E+15)],\n+      16 => [1.0E+16, 1.0E+16 - Float'Machine (1.0E+16)],\n+      17 => [1.0E+17, 1.0E+17 - Float'Machine (1.0E+17)],\n+      18 => [1.0E+18, 1.0E+18 - Float'Machine (1.0E+18)],\n+      19 => [1.0E+19, 1.0E+19 - Float'Machine (1.0E+19)],\n+      20 => [1.0E+20, 1.0E+20 - Float'Machine (1.0E+20)]];\n \n end System.Powten_Flt;"}, {"sha": "0ae36ec3cd9025b6897deb11917dd442dc9d16db", "filename": "gcc/ada/libgnat/s-powlfl.ads", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-powlfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-powlfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-powlfl.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -42,50 +42,50 @@ package System.Powten_LFlt is\n    --  Largest power of ten exactly representable with a double Long_Float\n \n    Powten : constant array (0 .. Maxpow, 1 .. 2) of Long_Float :=\n-     (00 => (1.0E+00, 0.0),\n-      01 => (1.0E+01, 0.0),\n-      02 => (1.0E+02, 0.0),\n-      03 => (1.0E+03, 0.0),\n-      04 => (1.0E+04, 0.0),\n-      05 => (1.0E+05, 0.0),\n-      06 => (1.0E+06, 0.0),\n-      07 => (1.0E+07, 0.0),\n-      08 => (1.0E+08, 0.0),\n-      09 => (1.0E+09, 0.0),\n-      10 => (1.0E+10, 0.0),\n-      11 => (1.0E+11, 0.0),\n-      12 => (1.0E+12, 0.0),\n-      13 => (1.0E+13, 0.0),\n-      14 => (1.0E+14, 0.0),\n-      15 => (1.0E+15, 0.0),\n-      16 => (1.0E+16, 0.0),\n-      17 => (1.0E+17, 0.0),\n-      18 => (1.0E+18, 0.0),\n-      19 => (1.0E+19, 0.0),\n-      20 => (1.0E+20, 0.0),\n-      21 => (1.0E+21, 0.0),\n-      22 => (1.0E+22, 0.0),\n-      23 => (1.0E+23, 1.0E+23 - Long_Float'Machine (1.0E+23)),\n-      24 => (1.0E+24, 1.0E+24 - Long_Float'Machine (1.0E+24)),\n-      25 => (1.0E+25, 1.0E+25 - Long_Float'Machine (1.0E+25)),\n-      26 => (1.0E+26, 1.0E+26 - Long_Float'Machine (1.0E+26)),\n-      27 => (1.0E+27, 1.0E+27 - Long_Float'Machine (1.0E+27)),\n-      28 => (1.0E+28, 1.0E+28 - Long_Float'Machine (1.0E+28)),\n-      29 => (1.0E+29, 1.0E+29 - Long_Float'Machine (1.0E+29)),\n-      30 => (1.0E+30, 1.0E+30 - Long_Float'Machine (1.0E+30)),\n-      31 => (1.0E+31, 1.0E+31 - Long_Float'Machine (1.0E+31)),\n-      32 => (1.0E+32, 1.0E+32 - Long_Float'Machine (1.0E+32)),\n-      33 => (1.0E+33, 1.0E+33 - Long_Float'Machine (1.0E+33)),\n-      34 => (1.0E+34, 1.0E+34 - Long_Float'Machine (1.0E+34)),\n-      35 => (1.0E+35, 1.0E+35 - Long_Float'Machine (1.0E+35)),\n-      36 => (1.0E+36, 1.0E+36 - Long_Float'Machine (1.0E+36)),\n-      37 => (1.0E+37, 1.0E+37 - Long_Float'Machine (1.0E+37)),\n-      38 => (1.0E+38, 1.0E+38 - Long_Float'Machine (1.0E+38)),\n-      39 => (1.0E+39, 1.0E+39 - Long_Float'Machine (1.0E+39)),\n-      40 => (1.0E+40, 1.0E+40 - Long_Float'Machine (1.0E+40)),\n-      41 => (1.0E+41, 1.0E+41 - Long_Float'Machine (1.0E+41)),\n-      42 => (1.0E+42, 1.0E+42 - Long_Float'Machine (1.0E+42)),\n-      43 => (1.0E+43, 1.0E+43 - Long_Float'Machine (1.0E+43)),\n-      44 => (1.0E+44, 1.0E+44 - Long_Float'Machine (1.0E+44)));\n+     [00 => [1.0E+00, 0.0],\n+      01 => [1.0E+01, 0.0],\n+      02 => [1.0E+02, 0.0],\n+      03 => [1.0E+03, 0.0],\n+      04 => [1.0E+04, 0.0],\n+      05 => [1.0E+05, 0.0],\n+      06 => [1.0E+06, 0.0],\n+      07 => [1.0E+07, 0.0],\n+      08 => [1.0E+08, 0.0],\n+      09 => [1.0E+09, 0.0],\n+      10 => [1.0E+10, 0.0],\n+      11 => [1.0E+11, 0.0],\n+      12 => [1.0E+12, 0.0],\n+      13 => [1.0E+13, 0.0],\n+      14 => [1.0E+14, 0.0],\n+      15 => [1.0E+15, 0.0],\n+      16 => [1.0E+16, 0.0],\n+      17 => [1.0E+17, 0.0],\n+      18 => [1.0E+18, 0.0],\n+      19 => [1.0E+19, 0.0],\n+      20 => [1.0E+20, 0.0],\n+      21 => [1.0E+21, 0.0],\n+      22 => [1.0E+22, 0.0],\n+      23 => [1.0E+23, 1.0E+23 - Long_Float'Machine (1.0E+23)],\n+      24 => [1.0E+24, 1.0E+24 - Long_Float'Machine (1.0E+24)],\n+      25 => [1.0E+25, 1.0E+25 - Long_Float'Machine (1.0E+25)],\n+      26 => [1.0E+26, 1.0E+26 - Long_Float'Machine (1.0E+26)],\n+      27 => [1.0E+27, 1.0E+27 - Long_Float'Machine (1.0E+27)],\n+      28 => [1.0E+28, 1.0E+28 - Long_Float'Machine (1.0E+28)],\n+      29 => [1.0E+29, 1.0E+29 - Long_Float'Machine (1.0E+29)],\n+      30 => [1.0E+30, 1.0E+30 - Long_Float'Machine (1.0E+30)],\n+      31 => [1.0E+31, 1.0E+31 - Long_Float'Machine (1.0E+31)],\n+      32 => [1.0E+32, 1.0E+32 - Long_Float'Machine (1.0E+32)],\n+      33 => [1.0E+33, 1.0E+33 - Long_Float'Machine (1.0E+33)],\n+      34 => [1.0E+34, 1.0E+34 - Long_Float'Machine (1.0E+34)],\n+      35 => [1.0E+35, 1.0E+35 - Long_Float'Machine (1.0E+35)],\n+      36 => [1.0E+36, 1.0E+36 - Long_Float'Machine (1.0E+36)],\n+      37 => [1.0E+37, 1.0E+37 - Long_Float'Machine (1.0E+37)],\n+      38 => [1.0E+38, 1.0E+38 - Long_Float'Machine (1.0E+38)],\n+      39 => [1.0E+39, 1.0E+39 - Long_Float'Machine (1.0E+39)],\n+      40 => [1.0E+40, 1.0E+40 - Long_Float'Machine (1.0E+40)],\n+      41 => [1.0E+41, 1.0E+41 - Long_Float'Machine (1.0E+41)],\n+      42 => [1.0E+42, 1.0E+42 - Long_Float'Machine (1.0E+42)],\n+      43 => [1.0E+43, 1.0E+43 - Long_Float'Machine (1.0E+43)],\n+      44 => [1.0E+44, 1.0E+44 - Long_Float'Machine (1.0E+44)]];\n \n end System.Powten_LFlt;"}, {"sha": "eaba6c14b0e5b76e0aaab1e5ba54f721cec24364", "filename": "gcc/ada/libgnat/s-powllf.ads", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-powllf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-powllf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-powllf.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -44,60 +44,60 @@ package System.Powten_LLF is\n    --  Largest power of ten exactly representable with a double Long_Long_Float\n \n    Powten : constant array (0 .. 54, 1 .. 2) of Long_Long_Float :=\n-     (00 => (1.0E+00, 0.0),\n-      01 => (1.0E+01, 0.0),\n-      02 => (1.0E+02, 0.0),\n-      03 => (1.0E+03, 0.0),\n-      04 => (1.0E+04, 0.0),\n-      05 => (1.0E+05, 0.0),\n-      06 => (1.0E+06, 0.0),\n-      07 => (1.0E+07, 0.0),\n-      08 => (1.0E+08, 0.0),\n-      09 => (1.0E+09, 0.0),\n-      10 => (1.0E+10, 0.0),\n-      11 => (1.0E+11, 0.0),\n-      12 => (1.0E+12, 0.0),\n-      13 => (1.0E+13, 0.0),\n-      14 => (1.0E+14, 0.0),\n-      15 => (1.0E+15, 0.0),\n-      16 => (1.0E+16, 0.0),\n-      17 => (1.0E+17, 0.0),\n-      18 => (1.0E+18, 0.0),\n-      19 => (1.0E+19, 0.0),\n-      20 => (1.0E+20, 0.0),\n-      21 => (1.0E+21, 0.0),\n-      22 => (1.0E+22, 0.0),\n-      23 => (1.0E+23, 1.0E+23 - Long_Long_Float'Machine (1.0E+23)),\n-      24 => (1.0E+24, 1.0E+24 - Long_Long_Float'Machine (1.0E+24)),\n-      25 => (1.0E+25, 1.0E+25 - Long_Long_Float'Machine (1.0E+25)),\n-      26 => (1.0E+26, 1.0E+26 - Long_Long_Float'Machine (1.0E+26)),\n-      27 => (1.0E+27, 1.0E+27 - Long_Long_Float'Machine (1.0E+27)),\n-      28 => (1.0E+28, 1.0E+28 - Long_Long_Float'Machine (1.0E+28)),\n-      29 => (1.0E+29, 1.0E+29 - Long_Long_Float'Machine (1.0E+29)),\n-      30 => (1.0E+30, 1.0E+30 - Long_Long_Float'Machine (1.0E+30)),\n-      31 => (1.0E+31, 1.0E+31 - Long_Long_Float'Machine (1.0E+31)),\n-      32 => (1.0E+32, 1.0E+32 - Long_Long_Float'Machine (1.0E+32)),\n-      33 => (1.0E+33, 1.0E+33 - Long_Long_Float'Machine (1.0E+33)),\n-      34 => (1.0E+34, 1.0E+34 - Long_Long_Float'Machine (1.0E+34)),\n-      35 => (1.0E+35, 1.0E+35 - Long_Long_Float'Machine (1.0E+35)),\n-      36 => (1.0E+36, 1.0E+36 - Long_Long_Float'Machine (1.0E+36)),\n-      37 => (1.0E+37, 1.0E+37 - Long_Long_Float'Machine (1.0E+37)),\n-      38 => (1.0E+38, 1.0E+38 - Long_Long_Float'Machine (1.0E+38)),\n-      39 => (1.0E+39, 1.0E+39 - Long_Long_Float'Machine (1.0E+39)),\n-      40 => (1.0E+40, 1.0E+40 - Long_Long_Float'Machine (1.0E+40)),\n-      41 => (1.0E+41, 1.0E+41 - Long_Long_Float'Machine (1.0E+41)),\n-      42 => (1.0E+42, 1.0E+42 - Long_Long_Float'Machine (1.0E+42)),\n-      43 => (1.0E+43, 1.0E+43 - Long_Long_Float'Machine (1.0E+43)),\n-      44 => (1.0E+44, 1.0E+44 - Long_Long_Float'Machine (1.0E+44)),\n-      45 => (1.0E+45, 1.0E+45 - Long_Long_Float'Machine (1.0E+45)),\n-      46 => (1.0E+46, 1.0E+46 - Long_Long_Float'Machine (1.0E+46)),\n-      47 => (1.0E+47, 1.0E+47 - Long_Long_Float'Machine (1.0E+47)),\n-      48 => (1.0E+48, 1.0E+48 - Long_Long_Float'Machine (1.0E+48)),\n-      49 => (1.0E+49, 1.0E+49 - Long_Long_Float'Machine (1.0E+49)),\n-      50 => (1.0E+50, 1.0E+50 - Long_Long_Float'Machine (1.0E+50)),\n-      51 => (1.0E+51, 1.0E+51 - Long_Long_Float'Machine (1.0E+51)),\n-      52 => (1.0E+52, 1.0E+52 - Long_Long_Float'Machine (1.0E+52)),\n-      53 => (1.0E+53, 1.0E+53 - Long_Long_Float'Machine (1.0E+53)),\n-      54 => (1.0E+54, 1.0E+54 - Long_Long_Float'Machine (1.0E+54)));\n+     [00 => [1.0E+00, 0.0],\n+      01 => [1.0E+01, 0.0],\n+      02 => [1.0E+02, 0.0],\n+      03 => [1.0E+03, 0.0],\n+      04 => [1.0E+04, 0.0],\n+      05 => [1.0E+05, 0.0],\n+      06 => [1.0E+06, 0.0],\n+      07 => [1.0E+07, 0.0],\n+      08 => [1.0E+08, 0.0],\n+      09 => [1.0E+09, 0.0],\n+      10 => [1.0E+10, 0.0],\n+      11 => [1.0E+11, 0.0],\n+      12 => [1.0E+12, 0.0],\n+      13 => [1.0E+13, 0.0],\n+      14 => [1.0E+14, 0.0],\n+      15 => [1.0E+15, 0.0],\n+      16 => [1.0E+16, 0.0],\n+      17 => [1.0E+17, 0.0],\n+      18 => [1.0E+18, 0.0],\n+      19 => [1.0E+19, 0.0],\n+      20 => [1.0E+20, 0.0],\n+      21 => [1.0E+21, 0.0],\n+      22 => [1.0E+22, 0.0],\n+      23 => [1.0E+23, 1.0E+23 - Long_Long_Float'Machine (1.0E+23)],\n+      24 => [1.0E+24, 1.0E+24 - Long_Long_Float'Machine (1.0E+24)],\n+      25 => [1.0E+25, 1.0E+25 - Long_Long_Float'Machine (1.0E+25)],\n+      26 => [1.0E+26, 1.0E+26 - Long_Long_Float'Machine (1.0E+26)],\n+      27 => [1.0E+27, 1.0E+27 - Long_Long_Float'Machine (1.0E+27)],\n+      28 => [1.0E+28, 1.0E+28 - Long_Long_Float'Machine (1.0E+28)],\n+      29 => [1.0E+29, 1.0E+29 - Long_Long_Float'Machine (1.0E+29)],\n+      30 => [1.0E+30, 1.0E+30 - Long_Long_Float'Machine (1.0E+30)],\n+      31 => [1.0E+31, 1.0E+31 - Long_Long_Float'Machine (1.0E+31)],\n+      32 => [1.0E+32, 1.0E+32 - Long_Long_Float'Machine (1.0E+32)],\n+      33 => [1.0E+33, 1.0E+33 - Long_Long_Float'Machine (1.0E+33)],\n+      34 => [1.0E+34, 1.0E+34 - Long_Long_Float'Machine (1.0E+34)],\n+      35 => [1.0E+35, 1.0E+35 - Long_Long_Float'Machine (1.0E+35)],\n+      36 => [1.0E+36, 1.0E+36 - Long_Long_Float'Machine (1.0E+36)],\n+      37 => [1.0E+37, 1.0E+37 - Long_Long_Float'Machine (1.0E+37)],\n+      38 => [1.0E+38, 1.0E+38 - Long_Long_Float'Machine (1.0E+38)],\n+      39 => [1.0E+39, 1.0E+39 - Long_Long_Float'Machine (1.0E+39)],\n+      40 => [1.0E+40, 1.0E+40 - Long_Long_Float'Machine (1.0E+40)],\n+      41 => [1.0E+41, 1.0E+41 - Long_Long_Float'Machine (1.0E+41)],\n+      42 => [1.0E+42, 1.0E+42 - Long_Long_Float'Machine (1.0E+42)],\n+      43 => [1.0E+43, 1.0E+43 - Long_Long_Float'Machine (1.0E+43)],\n+      44 => [1.0E+44, 1.0E+44 - Long_Long_Float'Machine (1.0E+44)],\n+      45 => [1.0E+45, 1.0E+45 - Long_Long_Float'Machine (1.0E+45)],\n+      46 => [1.0E+46, 1.0E+46 - Long_Long_Float'Machine (1.0E+46)],\n+      47 => [1.0E+47, 1.0E+47 - Long_Long_Float'Machine (1.0E+47)],\n+      48 => [1.0E+48, 1.0E+48 - Long_Long_Float'Machine (1.0E+48)],\n+      49 => [1.0E+49, 1.0E+49 - Long_Long_Float'Machine (1.0E+49)],\n+      50 => [1.0E+50, 1.0E+50 - Long_Long_Float'Machine (1.0E+50)],\n+      51 => [1.0E+51, 1.0E+51 - Long_Long_Float'Machine (1.0E+51)],\n+      52 => [1.0E+52, 1.0E+52 - Long_Long_Float'Machine (1.0E+52)],\n+      53 => [1.0E+53, 1.0E+53 - Long_Long_Float'Machine (1.0E+53)],\n+      54 => [1.0E+54, 1.0E+54 - Long_Long_Float'Machine (1.0E+54)]];\n \n end System.Powten_LLF;"}, {"sha": "147cc9ac1a581fc8d11d34964ea481e21927b489", "filename": "gcc/ada/libgnat/s-rannum.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-rannum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-rannum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-rannum.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -109,7 +109,7 @@ is\n    Upper_Mask : constant := 2**31;\n \n    Matrix_A   : constant array (State_Val range 0 .. 1) of State_Val\n-     := (0, 16#9908b0df#);\n+     := [0, 16#9908b0df#];\n    --  The twist transformation is represented by a matrix of the form\n    --\n    --               [  0    I(31) ]\n@@ -275,16 +275,16 @@ is\n \n             Trailing_Ones : constant array (Unsigned_32 range 0 .. 15)\n               of Bit_Count :=\n-                  (2#00000# => 0, 2#00001# => 1, 2#00010# => 0, 2#00011# => 2,\n+                  [2#00000# => 0, 2#00001# => 1, 2#00010# => 0, 2#00011# => 2,\n                    2#00100# => 0, 2#00101# => 1, 2#00110# => 0, 2#00111# => 3,\n                    2#01000# => 0, 2#01001# => 1, 2#01010# => 0, 2#01011# => 2,\n-                   2#01100# => 0, 2#01101# => 1, 2#01110# => 0, 2#01111# => 4);\n+                   2#01100# => 0, 2#01101# => 1, 2#01110# => 0, 2#01111# => 4];\n \n             Pow_Tab : constant array (Bit_Count range 0 .. 3) of Real\n-              := (0 => 2.0**(0 - T'Machine_Mantissa),\n+              := [0 => 2.0**(0 - T'Machine_Mantissa),\n                   1 => 2.0**(-1 - T'Machine_Mantissa),\n                   2 => 2.0**(-2 - T'Machine_Mantissa),\n-                  3 => 2.0**(-3 - T'Machine_Mantissa));\n+                  3 => 2.0**(-3 - T'Machine_Mantissa)];\n \n             Extra_Bits : constant Natural :=\n                          (Unsigned'Size - T'Machine_Mantissa + 1);\n@@ -662,7 +662,7 @@ is\n       Result : Image_String;\n \n    begin\n-      Result := (others => ' ');\n+      Result := [others => ' '];\n \n       for J in Of_State'Range loop\n          Insert_Image (Result, J, Of_State (J));\n@@ -675,7 +675,7 @@ is\n       Result : Image_String;\n \n    begin\n-      Result := (others => ' ');\n+      Result := [others => ' '];\n       for J in 0 .. N - 1 loop\n          Insert_Image (Result, J, Gen.S ((J + Gen.I) mod N));\n       end loop;"}, {"sha": "24c8d7f4d0c8103a7585d81ee25549ce4dcf88b9", "filename": "gcc/ada/libgnat/s-rannum.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-rannum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-rannum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-rannum.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -157,7 +157,7 @@ private\n       Writable  : Writable_Access (Generator'Access);\n       --  This self reference allows functions to modify Generator arguments\n \n-      S : State := (others => 0);\n+      S : State := [others => 0];\n       --  The shift register, a circular buffer\n \n       I : Integer := N;"}, {"sha": "bb21ef76212ff54c436fd3f9509d16aee0b1590e", "filename": "gcc/ada/libgnat/s-regexp.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-regexp.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -124,7 +124,7 @@ package body System.Regexp is\n       --  The pattern which is really compiled (when the pattern is case\n       --  insensitive, we convert this string to lower-cases).\n \n-      Map : Mapping := (others => 0);\n+      Map : Mapping := [others => 0];\n       --  Mapping between characters and columns in the tables\n \n       Alphabet_Size : Column_Index := 0;\n@@ -1103,7 +1103,7 @@ package body System.Regexp is\n       --  Start of processing for Create_Primary_Table\n \n       begin\n-         Table.all := (others => (others => 0));\n+         Table.all := [others => [others => 0]];\n          Create_Simple (S'First, S'Last, Start_State, End_State);\n          Num_States := Current_State;\n       end Create_Primary_Table;\n@@ -1372,7 +1372,7 @@ package body System.Regexp is\n       --  Start of processing for Create_Primary_Table_Glob\n \n       begin\n-         Table.all := (others => (others => 0));\n+         Table.all := [others => [others => 0]];\n          Create_Simple (S'First, S'Last, Start_State, End_State);\n          Num_States := Current_State;\n       end Create_Primary_Table_Glob;\n@@ -1392,7 +1392,7 @@ package body System.Regexp is\n          pragma Pack (Meta_State);\n          --  Whether a state from first_table belongs to a metastate.\n \n-         No_States : constant Meta_State := (others => False);\n+         No_States : constant Meta_State := [others => False];\n \n          type Meta_States_Array is array (State_Index range <>) of Meta_State;\n          type Meta_States_List is access all Meta_States_Array;\n@@ -1444,25 +1444,25 @@ package body System.Regexp is\n             if Meta_States = null then\n                Meta_States := new Meta_States_Array\n                   (1 .. State_Index'Max (Last_Index, Meta) + 1);\n-               Meta_States (Meta_States'Range) := (others => No_States);\n+               Meta_States (Meta_States'Range) := [others => No_States];\n \n                Table := new Meta_States_Transition_Arr\n                   (1 .. State_Index'Max (Last_Index, Meta) + 1);\n-               Table.all := (others => (others => 0));\n+               Table.all := [others => [others => 0]];\n \n             elsif Meta > Meta_States'Last then\n                Meta_States := new Meta_States_Array\n                   (1 .. State_Index'Max (2 * Tmp'Last, Meta));\n                Meta_States (Tmp'Range) := Tmp.all;\n                Meta_States (Tmp'Last + 1 .. Meta_States'Last) :=\n-                  (others => No_States);\n+                  [others => No_States];\n                Unchecked_Free (Tmp);\n \n                Table := new Meta_States_Transition_Arr\n                   (1 .. State_Index'Max (2 * Tmp2'Last, Meta) + 1);\n                Table (Tmp2'Range) := Tmp2.all;\n                Table (Tmp2'Last + 1 .. Table'Last) :=\n-                  (others => (others => 0));\n+                  [others => [others => 0]];\n                Unchecked_Free (Tmp2);\n             end if;\n          end Ensure_Meta_State;\n@@ -1595,9 +1595,9 @@ package body System.Regexp is\n                  R => new Regexp_Value'\n                       (Alphabet_Size => 0,\n                        Num_States    => 1,\n-                       Map           => (others => 0),\n-                       States        => (others => (others => 1)),\n-                       Is_Final      => (others => True),\n+                       Map           => [others => 0],\n+                       States        => [others => [others => 1]],\n+                       Is_Final      => [others => True],\n                        Case_Sensitive => True));\n       end if;\n \n@@ -1726,7 +1726,7 @@ package body System.Regexp is\n          New_Columns := Table'Last (2) * (Column / Table'Last (2) + 1);\n          New_Table := new Regexp_Array (Table'First (1) .. New_Lines,\n                                         Table'First (2) .. New_Columns);\n-         New_Table.all := (others => (others => 0));\n+         New_Table.all := [others => [others => 0]];\n \n          for J in Table'Range (1) loop\n             for K in Table'Range (2) loop"}, {"sha": "00833bb1b0b71f4b3c238e6e3374157c60bebc74", "filename": "gcc/ada/libgnat/s-regpat.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-regpat.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -199,7 +199,7 @@ package body System.Regpat is\n \n    type Bit_Conversion_Array is array (Class_Byte range 0 .. 7) of Class_Byte;\n    Bit_Conversion : constant Bit_Conversion_Array :=\n-                      (1, 2, 4, 8, 16, 32, 64, 128);\n+                      [1, 2, 4, 8, 16, 32, 64, 128];\n \n    type Std_Class is (ANYOF_NONE,\n                       ANYOF_ALNUM,   --  Alphanumeric class [a-zA-Z0-9]\n@@ -2111,9 +2111,9 @@ package body System.Regpat is\n             declare\n                Point   : constant String := Pointer'Image (Index);\n             begin\n-               Put ((1 .. 4 - Point'Length => ' ')\n+               Put ([1 .. 4 - Point'Length => ' ']\n                     & Point & \":\"\n-                    & (1 .. Local_Indent * 2 => ' ') & Opcode'Image (Op));\n+                    & [1 .. Local_Indent * 2 => ' '] & Opcode'Image (Op));\n             end;\n \n             --  Print the parenthesis number\n@@ -2506,11 +2506,11 @@ package body System.Regpat is\n \n       begin\n          if Prefix then\n-            Put ((1 .. 5 - Pos'Length => ' '));\n+            Put ([1 .. 5 - Pos'Length => ' ']);\n             Put (Pos & \" <\"\n                  & Data (Input_Pos\n                      .. Integer'Min (Last_In_Data, Input_Pos + Length - 1)));\n-            Put ((1 .. Length - 1 - Last_In_Data + Input_Pos => ' '));\n+            Put ([1 .. Length - 1 - Last_In_Data + Input_Pos => ' ']);\n             Put (\"> |\");\n \n          else\n@@ -2527,7 +2527,7 @@ package body System.Regpat is\n       procedure Dump_Error (Msg : String) is\n       begin\n          Put (\"                   |     \");\n-         Put ((1 .. Dump_Indent * 2 => ' '));\n+         Put ([1 .. Dump_Indent * 2 => ' ']);\n          Put_Line (Msg);\n       end Dump_Error;\n \n@@ -3381,7 +3381,7 @@ package body System.Regpat is\n       begin\n          Input_Pos  := Pos;\n          Last_Paren := 0;\n-         Matches_Full := (others => No_Match);\n+         Matches_Full := [others => No_Match];\n \n          if Match (Program_First) then\n             Matches_Full (0) := (Pos, Input_Pos - 1);\n@@ -3397,7 +3397,7 @@ package body System.Regpat is\n       --  Do we have the regexp Never_Match?\n \n       if Self.Size = 0 then\n-         Matches := (others => No_Match);\n+         Matches := [others => No_Match];\n          return;\n       end if;\n \n@@ -3420,7 +3420,7 @@ package body System.Regpat is\n             end loop;\n \n             if Next_Try = 0 then\n-               Matches := (others => No_Match);\n+               Matches := [others => No_Match];\n                return;                  -- Not present\n             end if;\n          end;\n@@ -3740,7 +3740,7 @@ package body System.Regpat is\n \n    procedure Reset_Class (Bitmap : out Character_Class) is\n    begin\n-      Bitmap := (others => 0);\n+      Bitmap := [others => 0];\n    end Reset_Class;\n \n    ------------------"}, {"sha": "637e76c3577437d0b454e4ebcc3111404b9af7f1", "filename": "gcc/ada/libgnat/s-regpat.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-regpat.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -639,10 +639,10 @@ private\n       Paren_Count      : Natural      := 0;          --  # paren groups\n       Flags            : Regexp_Flags := No_Flags;\n       Program          : Program_Data (Program_First .. Size) :=\n-                           (others => ASCII.NUL);\n+                           [others => ASCII.NUL];\n    end record;\n \n    Never_Match : constant Pattern_Matcher :=\n-      (0, ASCII.NUL, False, 0, 0, 0, No_Flags, (others => ASCII.NUL));\n+      (0, ASCII.NUL, False, 0, 0, 0, No_Flags, [others => ASCII.NUL]);\n \n end System.Regpat;"}, {"sha": "2276fccafe745784f2e41c38d48dc4f49436574f", "filename": "gcc/ada/libgnat/s-scaval__128.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-scaval__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-scaval__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-scaval__128.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -180,7 +180,7 @@ package body System.Scalar_Values is\n          IV_Ilf := To_ByteLF (IS_Iu8);\n \n          if EFloat then\n-            IV_Ill := (0, 0, 0, 0, 0, 0, 0, 16#C0#, 16#FF#, 16#FF#, 0, 0);\n+            IV_Ill := [0, 0, 0, 0, 0, 0, 0, 16#C0#, 16#FF#, 16#FF#, 0, 0];\n          end if;\n \n       --  LO (Low values)\n@@ -209,7 +209,7 @@ package body System.Scalar_Values is\n          IV_Ilf := To_ByteLF (16#FFF0_0000_0000_0000#);\n \n          if EFloat then\n-            IV_Ill := (0, 0, 0, 0, 0, 0, 0, 16#80#, 16#FF#, 16#FF#, 0, 0);\n+            IV_Ill := [0, 0, 0, 0, 0, 0, 0, 16#80#, 16#FF#, 16#FF#, 0, 0];\n          end if;\n \n       --  HI (High values)\n@@ -238,7 +238,7 @@ package body System.Scalar_Values is\n          IV_Ilf := To_ByteLF (16#7FF0_0000_0000_0000#);\n \n          if EFloat then\n-            IV_Ill := (0, 0, 0, 0, 0, 0, 0, 16#80#, 16#FF#, 16#7F#, 0, 0);\n+            IV_Ill := [0, 0, 0, 0, 0, 0, 0, 16#80#, 16#FF#, 16#7F#, 0, 0];\n          end if;\n \n       --  -Shh (hex byte)\n@@ -281,7 +281,7 @@ package body System.Scalar_Values is\n          IV_Ilf := To_ByteLF (IS_Is8);\n \n          if EFloat then\n-            IV_Ill := (B, B, B, B, B, B, B, B, B, B, B, B);\n+            IV_Ill := [B, B, B, B, B, B, B, B, B, B, B, B];\n          end if;\n       end if;\n "}, {"sha": "4de49a9a04d406fc206f21f4d3b9e7bc6667c1ef", "filename": "gcc/ada/libgnat/s-statxd.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-statxd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-statxd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-statxd.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -72,40 +72,40 @@ package body System.Stream_Attributes.XDR is\n \n    type Precision is (Single, Double, Quadruple);\n \n-   Fields : constant array (Precision) of Field_Type := (\n+   Fields : constant array (Precision) of Field_Type := [\n \n                --  Single precision\n \n-              (E_Size  => 8,\n+              [E_Size  => 8,\n                E_Bias  => 127,\n                F_Size  => 23,\n                E_Last  => 2 ** 8 - 1,\n                F_Mask  => 16#7F#,                  --  2 ** 7 - 1,\n                E_Bytes => 2,\n                F_Bytes => 3,\n-               F_Bits  => 23 mod US),\n+               F_Bits  => 23 mod US],\n \n                --  Double precision\n \n-              (E_Size  => 11,\n+              [E_Size  => 11,\n                E_Bias  => 1023,\n                F_Size  => 52,\n                E_Last  => 2 ** 11 - 1,\n                F_Mask  => 16#0F#,                  --  2 ** 4 - 1,\n                E_Bytes => 2,\n                F_Bytes => 7,\n-               F_Bits  => 52 mod US),\n+               F_Bits  => 52 mod US],\n \n                --  Quadruple precision\n \n-              (E_Size  => 15,\n+              [E_Size  => 15,\n                E_Bias  => 16383,\n                F_Size  => 112,\n                E_Last  => 2 ** 8 - 1,\n                F_Mask  => 16#FF#,                  --  2 ** 8 - 1,\n                E_Bytes => 2,\n                F_Bytes => 14,\n-               F_Bits  => 112 mod US));\n+               F_Bits  => 112 mod US]];\n \n    --  The representation of all items requires a multiple of four bytes\n    --  (or 32 bits) of data. The bytes are numbered 0 through n-1. The bytes\n@@ -1244,7 +1244,7 @@ package body System.Stream_Attributes.XDR is\n       Is_Positive : Boolean;\n       E           : Integer;\n       F           : Float;\n-      S           : SEA (1 .. F_L) := (others => 0);\n+      S           : SEA (1 .. F_L) := [others => 0];\n \n    begin\n       if not Item'Valid then\n@@ -1390,7 +1390,7 @@ package body System.Stream_Attributes.XDR is\n       Is_Positive : Boolean;\n       E           : Integer;\n       F           : Long_Float;\n-      S           : SEA (1 .. LF_L) := (others => 0);\n+      S           : SEA (1 .. LF_L) := [others => 0];\n \n    begin\n       if not Item'Valid then\n@@ -1519,7 +1519,7 @@ package body System.Stream_Attributes.XDR is\n       Is_Positive : Boolean;\n       E           : Integer;\n       F           : Long_Long_Float := Item;\n-      S           : SEA (1 .. LLF_L) := (others => 0);\n+      S           : SEA (1 .. LLF_L) := [others => 0];\n \n    begin\n       if not Item'Valid then\n@@ -1737,7 +1737,7 @@ package body System.Stream_Attributes.XDR is\n       Is_Positive : Boolean;\n       E           : Integer;\n       F           : Short_Float;\n-      S           : SEA (1 .. SF_L) := (others => 0);\n+      S           : SEA (1 .. SF_L) := [others => 0];\n \n    begin\n       if not Item'Valid then"}, {"sha": "cd34ab67ae2f52375a04e7b236a4ab0d605ec15c", "filename": "gcc/ada/libgnat/s-stausa.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-stausa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-stausa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stausa.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -127,10 +127,10 @@ package body System.Stack_Usage is\n \n       Result_Array := new Result_Array_Type (1 .. Buffer_Size);\n       Result_Array.all :=\n-        (others =>\n-           (Task_Name   => (others => ASCII.NUL),\n+        [others =>\n+           [Task_Name   => [others => ASCII.NUL],\n             Value       => 0,\n-            Stack_Size  => 0));\n+            Stack_Size  => 0]];\n \n       --  Set the Is_Enabled flag to true, so that the task wrapper knows that\n       --  it has to handle dynamic stack analysis\n@@ -282,7 +282,7 @@ package body System.Stack_Usage is\n       Analyzer.Pattern_Size  := Pattern_Size;\n       Analyzer.Pattern       := Pattern;\n       Analyzer.Result_Id     := Next_Id;\n-      Analyzer.Task_Name     := (others => ' ');\n+      Analyzer.Task_Name     := [others => ' '];\n \n       --  Compute the task name, and truncate if bigger than Task_Name_Length\n \n@@ -455,12 +455,12 @@ package body System.Stack_Usage is\n             Stack_Size_Blanks  : constant\n                                    String (1 .. Max_Stack_Size_Len -\n                                                   Stack_Size_Str'Length) :=\n-                                      (others => ' ');\n+                                      [others => ' '];\n \n             Stack_Usage_Blanks : constant\n                                    String (1 .. Max_Actual_Use_Len -\n                                                   Actual_Size_Str'Length) :=\n-                                      (others => ' ');\n+                                      [others => ' '];\n \n          begin\n             if Stack_Size_Str'Length > Max_Stack_Size_Len then"}, {"sha": "f57669267c2c93cac3c8146ac6dee1463c5601fa", "filename": "gcc/ada/libgnat/s-strops.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-strops.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-strops.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-strops.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -92,7 +92,7 @@ package body System.String_Ops is\n    function Str_Concat_SC (X : String; Y : Character) return String is\n    begin\n       if X'Length = 0 then\n-         return (1 => Y);\n+         return [Y];\n \n       else\n          declare"}, {"sha": "b37383ab203b95420832e5a2a107504c21bebf48", "filename": "gcc/ada/libgnat/s-valrea.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-valrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-valrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valrea.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -63,19 +63,19 @@ package body System.Val_Real is\n    --  index N is the largest K such that N**K <= Num'Last.\n \n    Maxexp32 : constant array (Base_T) of Positive :=\n-     (2  => 127, 3 => 80,  4 => 63,  5 => 55,  6 => 49,\n+     [2  => 127, 3 => 80,  4 => 63,  5 => 55,  6 => 49,\n       7  => 45,  8 => 42,  9 => 40, 10 => 38, 11 => 37,\n-      12 => 35, 13 => 34, 14 => 33, 15 => 32, 16 => 31);\n+      12 => 35, 13 => 34, 14 => 33, 15 => 32, 16 => 31];\n \n    Maxexp64 : constant array (Base_T) of Positive :=\n-     (2  => 1023, 3 => 646,  4 => 511,  5 => 441,  6 => 396,\n+     [2  => 1023, 3 => 646,  4 => 511,  5 => 441,  6 => 396,\n       7  => 364,  8 => 341,  9 => 323, 10 => 308, 11 => 296,\n-      12 => 285, 13 => 276, 14 => 268, 15 => 262, 16 => 255);\n+      12 => 285, 13 => 276, 14 => 268, 15 => 262, 16 => 255];\n \n    Maxexp80 : constant array (Base_T) of Positive :=\n-     (2  => 16383, 3 => 10337, 4 => 8191,  5 => 7056,  6 => 6338,\n+     [2  => 16383, 3 => 10337, 4 => 8191,  5 => 7056,  6 => 6338,\n       7  => 5836,  8 => 5461,  9 => 5168, 10 => 4932, 11 => 4736,\n-      12 => 4570, 13 => 4427, 14 => 4303, 15 => 4193, 16 => 4095);\n+      12 => 4570, 13 => 4427, 14 => 4303, 15 => 4193, 16 => 4095];\n \n    package Double_Real is new System.Double_Real (Num);\n    use type Double_Real.Double_T;"}, {"sha": "897f59556b1e0c9f6d603a0ea749283af3640e57", "filename": "gcc/ada/libgnat/s-wchcon.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-wchcon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Flibgnat%2Fs-wchcon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-wchcon.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -167,12 +167,12 @@ package System.WCh_Con is\n    --  no ambiguity in Ada sources, since the above sequences are illegal Ada).\n \n    WC_Encoding_Letters : constant array (WC_Encoding_Method) of Character :=\n-     (WCEM_Hex       => 'h',\n+     [WCEM_Hex       => 'h',\n       WCEM_Upper     => 'u',\n       WCEM_Shift_JIS => 's',\n       WCEM_EUC       => 'e',\n       WCEM_UTF8      => '8',\n-      WCEM_Brackets  => 'b');\n+      WCEM_Brackets  => 'b'];\n    --  Letters used for selection of wide character encoding method in the\n    --  compiler options (-gnatW? switch) and for Wide_Text_IO (WCEM parameter\n    --  in the form string).\n@@ -191,12 +191,12 @@ package System.WCh_Con is\n    --  or wide wide character sequence for any of the active encoding methods.\n \n    WC_Longest_Sequences : constant array (WC_Encoding_Method) of Natural :=\n-     (WCEM_Hex       => 5,\n+     [WCEM_Hex       => 5,\n       WCEM_Upper     => 2,\n       WCEM_Shift_JIS => 2,\n       WCEM_EUC       => 2,\n       WCEM_UTF8      => 6,\n-      WCEM_Brackets  => 12);\n+      WCEM_Brackets  => 12];\n    --  The longest number of characters that can be used for a wide character\n    --  or wide wide character sequence using the given encoding method.\n "}, {"sha": "d985003751f072e0a6fcbe248b05abf47fb27e93", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1694,6 +1694,10 @@ package body Ch4 is\n                end if;\n             end if;\n          when Tok_Left_Paren =>\n+            if Nkind (Aggregate_Node) = N_Aggregate then\n+               Set_Is_Parenthesis_Aggregate (Aggregate_Node);\n+            end if;\n+\n             T_Right_Paren;\n          when others => raise Program_Error;\n       end case;"}, {"sha": "33a726705be14bb4a2ca1fd76b03b10025a4b8e1", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -1425,11 +1425,11 @@ package body Scng is\n \n          when '[' =>\n \n-            --  [] under -gnatX is an aggregate notation and the special\n+            --  [] under -gnat2022 is an aggregate notation and the special\n             --  wide character notation becomes unsupported since the two\n             --  are ambiguous.\n \n-            if Extensions_Allowed then\n+            if Ada_Version >= Ada_2022 then\n                Scan_Ptr := Scan_Ptr + 1;\n                Token := Tok_Left_Bracket;\n                return;"}, {"sha": "0d4af65e8a655f17811f3169e2a0718bc94c859b", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -248,7 +248,7 @@ package body Sem_Aggr is\n    --  The procedure works by recursively checking each nested aggregate.\n    --  Specifically, after checking a sub-aggregate nested at the i-th level\n    --  we recursively check all the subaggregates at the i+1-st level (if any).\n-   --  Note that for aggregates analysis and resolution go hand in hand.\n+   --  Note that aggregates analysis and resolution go hand in hand.\n    --  Aggregate analysis has been delayed up to here and it is done while\n    --  resolving the aggregate.\n    --\n@@ -918,6 +918,12 @@ package body Sem_Aggr is\n         and then Ekind (Typ) /= E_Record_Type\n         and then Ada_Version >= Ada_2022\n       then\n+         --  Check for Ada 2022 and () aggregate.\n+\n+         if not Is_Homogeneous_Aggregate (N) then\n+            Error_Msg_N (\"container aggregate must use '['], not ()\", N);\n+         end if;\n+\n          Resolve_Container_Aggregate (N, Typ);\n \n       elsif Is_Record_Type (Typ) then\n@@ -1792,6 +1798,21 @@ package body Sem_Aggr is\n          return False;\n       end if;\n \n+      --  Disable the warning for GNAT Mode to allow for easier transition.\n+\n+      if Ada_Version >= Ada_2022\n+        and then Warn_On_Obsolescent_Feature\n+        and then not GNAT_Mode\n+        and then not Is_Homogeneous_Aggregate (N)\n+        and then not Is_Enum_Array_Aggregate (N)\n+        and then Is_Parenthesis_Aggregate (N)\n+        and then Nkind (Parent (N)) /= N_Qualified_Expression\n+      then\n+         Error_Msg_N\n+           (\"?j?array aggregate using () is an\" &\n+              \" obsolescent syntax, use '['] instead\", N);\n+      end if;\n+\n       --  STEP 1: make sure the aggregate is correctly formatted\n \n       if Present (Component_Associations (N)) then"}, {"sha": "9ab2528fd443e13fc36614121c8b7080b25fc35e", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b045f2f2205495b61d63133b16e56c35acbf8090/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=b045f2f2205495b61d63133b16e56c35acbf8090", "patch": "@@ -372,7 +372,7 @@ package Sem_Util is\n    procedure Check_Ambiguous_Aggregate (Call : Node_Id);\n    --  Additional information on an ambiguous call in Ada_2022 when a\n    --  subprogram call has an actual that is an aggregate, and the\n-   --  presence of container aggregates (or types with the correwponding\n+   --  presence of container aggregates (or types with the corresponding\n    --  aspect)  provides an additional interpretation. Message indicates\n    --  that an aggregate actual should carry a type qualification.\n "}]}