{"sha": "66443ad2fda37477c32f6230d9d784717e167b9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY0NDNhZDJmZGEzNzQ3N2MzMmY2MjMwZDlkNzg0NzE3ZTE2N2I5YQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-06-24T05:08:02Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-06-24T05:08:02Z"}, "message": "libiberty.h (basename): Don't declare if HAVE_DECL_BASENAME.\n\n\t* libiberty.h (basename): Don't declare if HAVE_DECL_BASENAME.\n\t* getopt.h (getopt): Don't declare if HAVE_DECL_GETOPT.\n\nFrom-SVN: r54941", "tree": {"sha": "c78ad635ae4460c3603d07b2ee9bb5e277ca6011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c78ad635ae4460c3603d07b2ee9bb5e277ca6011"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66443ad2fda37477c32f6230d9d784717e167b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66443ad2fda37477c32f6230d9d784717e167b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66443ad2fda37477c32f6230d9d784717e167b9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66443ad2fda37477c32f6230d9d784717e167b9a/comments", "author": null, "committer": null, "parents": [{"sha": "b2ae5f70a0b554aa98cf7748c1f6dc64e14276a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2ae5f70a0b554aa98cf7748c1f6dc64e14276a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2ae5f70a0b554aa98cf7748c1f6dc64e14276a4"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "28cbe0779f07b95f02d02441facb6024dd9296e5", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66443ad2fda37477c32f6230d9d784717e167b9a/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66443ad2fda37477c32f6230d9d784717e167b9a/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=66443ad2fda37477c32f6230d9d784717e167b9a", "patch": "@@ -1,3 +1,8 @@\n+2002-06-24  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* libiberty.h (basename): Don't declare if HAVE_DECL_BASENAME.\n+\t* getopt.h (getopt): Don't declare if HAVE_DECL_GETOPT.\n+\n 2002-06-06  DJ Delorie  <dj@redhat.com>\n \n \t* hashtab.h (htab): Rearrange new members for backward"}, {"sha": "0c6470b3ddb9f1e12d1dff146b0a4b47bcb5818f", "filename": "include/getopt.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66443ad2fda37477c32f6230d9d784717e167b9a/include%2Fgetopt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66443ad2fda37477c32f6230d9d784717e167b9a/include%2Fgetopt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fgetopt.h?ref=66443ad2fda37477c32f6230d9d784717e167b9a", "patch": "@@ -105,16 +105,17 @@ struct option\n    declaration without arguments.  If it is 0, we checked and failed\n    to find the declaration so provide a fully prototyped one.  If it\n    is 1, we found it so don't provide any declaration at all.  */\n-#if defined (__GNU_LIBRARY__) || (defined (HAVE_DECL_GETOPT) && !HAVE_DECL_GETOPT)\n+#if !HAVE_DECL_GETOPT\n+#if defined (__GNU_LIBRARY__) || defined (HAVE_DECL_GETOPT)\n /* Many other libraries have conflicting prototypes for getopt, with\n    differences in the consts, in stdlib.h.  To avoid compilation\n    errors, only prototype getopt for the GNU C library.  */\n extern int getopt (int argc, char *const *argv, const char *shortopts);\n-#else /* not __GNU_LIBRARY__ */\n-# if !defined (HAVE_DECL_GETOPT)\n+#else\n extern int getopt ();\n-# endif\n-#endif /* __GNU_LIBRARY__ */\n+#endif\n+#endif /* !HAVE_DECL_GETOPT */\n+\n extern int getopt_long (int argc, char *const *argv, const char *shortopts,\n \t\t        const struct option *longopts, int *longind);\n extern int getopt_long_only (int argc, char *const *argv,"}, {"sha": "0463301832e92dcf5b4ac20f4f638a71c3232306", "filename": "include/libiberty.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66443ad2fda37477c32f6230d9d784717e167b9a/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66443ad2fda37477c32f6230d9d784717e167b9a/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=66443ad2fda37477c32f6230d9d784717e167b9a", "patch": "@@ -73,12 +73,12 @@ extern char **dupargv PARAMS ((char **)) ATTRIBUTE_MALLOC;\n    declaration without arguments.  If it is 0, we checked and failed\n    to find the declaration so provide a fully prototyped one.  If it\n    is 1, we found it so don't provide any declaration at all.  */\n-#if defined (__GNU_LIBRARY__ ) || defined (__linux__) || defined (__FreeBSD__) || defined (__OpenBSD__) || defined (__CYGWIN__) || defined (__CYGWIN32__) || (defined (HAVE_DECL_BASENAME) && !HAVE_DECL_BASENAME)\n+#if !HAVE_DECL_BASENAME\n+#if defined (__GNU_LIBRARY__ ) || defined (__linux__) || defined (__FreeBSD__) || defined (__OpenBSD__) || defined (__CYGWIN__) || defined (__CYGWIN32__) || defined (HAVE_DECL_BASENAME)\n extern char *basename PARAMS ((const char *));\n #else\n-# if !defined (HAVE_DECL_BASENAME)\n extern char *basename ();\n-# endif\n+#endif\n #endif\n \n /* A well-defined basename () that is always compiled in.  */"}]}