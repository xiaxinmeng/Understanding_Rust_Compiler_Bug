{"sha": "14e58be03205af4b54fcf290a9f650ae3d9f4686", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRlNThiZTAzMjA1YWY0YjU0ZmNmMjkwYTlmNjUwYWUzZDlmNDY4Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-09-04T19:32:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-09-04T19:32:04Z"}, "message": "re PR target/41262 (ICE compiling 09/03/09 snapshot of gcc on DEC Alpha)\n\n\tPR target/41262\n\t* config/alpha/alpha.c (alpha_does_function_need_gp): Use\n\tNONDEBUG_INSN_P instead of INSN_P.\n\nFrom-SVN: r151439", "tree": {"sha": "091ad99156a0a0cecf9d1dd4b7f9a8ad1db42527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/091ad99156a0a0cecf9d1dd4b7f9a8ad1db42527"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14e58be03205af4b54fcf290a9f650ae3d9f4686", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e58be03205af4b54fcf290a9f650ae3d9f4686", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14e58be03205af4b54fcf290a9f650ae3d9f4686", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e58be03205af4b54fcf290a9f650ae3d9f4686/comments", "author": null, "committer": null, "parents": [{"sha": "3157b0c242844c97a2469591543208013cfc8a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3157b0c242844c97a2469591543208013cfc8a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3157b0c242844c97a2469591543208013cfc8a9c"}], "stats": {"total": 102, "additions": 53, "deletions": 49}, "files": [{"sha": "21737846a3c47b731952f2efd03d1b19152cd540", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 44, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e58be03205af4b54fcf290a9f650ae3d9f4686/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e58be03205af4b54fcf290a9f650ae3d9f4686/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14e58be03205af4b54fcf290a9f650ae3d9f4686", "patch": "@@ -1,3 +1,9 @@\n+2009-09-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/41262\n+\t* config/alpha/alpha.c (alpha_does_function_need_gp): Use\n+\tNONDEBUG_INSN_P instead of INSN_P.\n+\n 2009-09-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/41225\n@@ -80,16 +86,13 @@\n \t(ctzsi2): New expand.\n \t* config/arm/arm.h (CTZ_DEFINED_VALUE_AT_ZERO): New macro.\n \n-\ttestsuite/\n-\t* gcc.target/arm/ctz.c: New test case.\n-\n 2009-09-03  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-sra.c (duplicate_expr_for_different_base): Removed.\n \t(create_artificial_child_access): Use build_ref_for_offset instead\n \tof duplicate_expr_for_different_base.\n \t(propagate_subacesses_accross_link): Likewise.\n-\t\n+\n 2009-09-03  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (USEFUL_INSN_P): Use NONDEBUG_INSN_P instead\n@@ -163,39 +166,18 @@\n 2009-09-03  Razya Ladelsky  <razya@il.ibm.com>\n \n \t* tree-parloops.c (separate_decls_in_region): Add space.\n-\t\t\n+\n 2009-09-03  Razya Ladelsky  <razya@il.ibm.com>\n \n-\t* tree-parloops.c (separate_decls_in_region): Change the condition \n+\t* tree-parloops.c (separate_decls_in_region): Change the condition\n \tchecking if there are reductions in the loop.\n \n 2009-09-03  Razya Ladelsky  <razya@il.ibm.com>\n \n \tPR tree-optimization/38275\n-\t\n-\t* tree-parloops.c (parallelize_loops): Replace profitability condition \n+\t* tree-parloops.c (parallelize_loops): Replace profitability condition\n \tfor expected number of iterations.\n \n-2009-09-03  Alon Dayan  <alond@il.ibm.com>\n-\t\n-\tPR tree-optimization/38275\n-\t\n-\t* testsuite/gcc.dg/autopar/reduc-1char.c: Increase number \n-\tof iterations. Adjust the logic accordingly.\n-\t* testsuite/gcc.dg/autopar/reduc-2char.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-1.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-2.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-3.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-6.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-7.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-8.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-9.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/pr39500-1.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-1short.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/reduc-2short.c: Ditto.\n-\t* testsuite/gcc.dg/autopar/parallelization-1.c: Ditto.\n-\n-\n 2009-09-03  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* doc/invoke.texi (BUILD_CONFIG): Document --with-build-config.\n@@ -360,11 +342,11 @@\n \n \t* doc/invoke.texi (-fsched-pressure): Document it.\n \t(-fsched-reg-pressure-heuristic): Remove it.\n-\t\n+\n \t* reload.c (ira.h): Include.\n \t(find_reloads): Add choosing reload on number of small spilled\n \tclasses.\n-\t\n+\n \t* haifa-sched.c (ira.h): Include.\n \t(sched_pressure_p, sched_regno_cover_class, curr_reg_pressure,\n \tsaved_reg_pressure, curr_reg_live, saved_reg_live,\n@@ -393,7 +375,7 @@\n \t(fix_tick_ready): Make insn always ready if pressure_p.\n \t(init_h_i_d): Don't call find_insn_reg_weight.\n \t(haifa_finish_h_i_d): Free insn reg pressure info.\n-\t\n+\n \t* ira-int.h (ira_hard_regno_cover_class, ira_reg_class_nregs,\n \tira_memory_move_cost, ira_class_hard_regs,\n \tira_class_hard_regs_num, ira_no_alloc_regs,\n@@ -429,15 +411,15 @@\n \timplicit sets when clearing reg_last_in_use.\n \t(init_deps_global): Clear implicit_reg_pending_clobbers and\n \timplicit_reg_pending_uses.\n-\t\n+\n \t* ira.h (ira_hard_regno_cover_class, ira_reg_class_nregs,\n \tira_memory_move_cost, ira_class_hard_regs,\n \tira_class_hard_regs_num, ira_no_alloc_regs,\n \tira_available_class_regs, ira_reg_class_cover_size,\n \tira_reg_class_cover, ira_class_translate): Move from ira-int.h.\n \t(ira_setup_eliminable_regset, ira_set_pseudo_classes,\n \tira_implicitly_set_insn_hard_regs): New prototypes.\n-\t\n+\n \t* ira-costs.c (pseudo_classes_defined_p, allocno_p,\n \tcost_elements_num): New variables.\n \t(allocno_costs, total_costs): Rename to costs and\n@@ -473,7 +455,7 @@\n \t(resize_reg_info): Change return type.\n \t(reg_cover_class): New.\n \t(setup_reg_classes): Add new parameter.\n-\t\n+\n \t* sched-int.h (struct deps_reg): New member implicit_sets.\n \t(sched_pressure_p, sched_regno_cover_class): New external\n \tdefinitions.\n@@ -492,8 +474,8 @@\n \tmacros.\n \t(sched_init_region_reg_pressure_info,\n \tsched_setup_bb_reg_pressure_info): New prototypes.\n-\t\n-        * reginfo.c (struct reg_pref): New member coverclass.\n+\n+\t* reginfo.c (struct reg_pref): New member coverclass.\n \t(reg_cover_class): New function.\n \t(reginfo_init, pass_reginfo_init): Move after free_reg_info.\n \t(reg_info_size): New variable.\n@@ -507,10 +489,10 @@\n \t* sched-rgn.c (deps_join): Set up implicit_sets.\n \t(schedule_region): Set up region and basic blocks pressure\n \trelative info.\n-\t\n+\n \t* passes.c (init_optimization_passes): Move\n \tpass_subregs_of_mode_init before pass_sched.\n-\t\n+\n 2009-09-02  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-sra.c (struct access): New field grp_hint.\n@@ -544,7 +526,7 @@\n \tRevert:\n \t2009-07-31  Christian Bruel  <christian.bruel@st.com>\n \t* gcc/config.gcc (sh*-*-elf): test with_libgloss.\n-\t\n+\n 2009-09-01  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* doc/invoke.texi (-fvar-tracking-assignments): New.\n@@ -597,7 +579,7 @@\n \t* rtlanal.c (reg_used_between_p): Skip debug insns.\n \t(side_effects_p): Likewise.\n \t(canonicalize_condition): Likewise.\n-\t* ddg.c (create_ddg_dep_from_intra_loop_link): Check that non-debug \n+\t* ddg.c (create_ddg_dep_from_intra_loop_link): Check that non-debug\n \tinsns never depend on debug insns.\n \t(create_ddg_dep_no_link): Likewise.\n \t(add_cross_iteration_register_deps): Use ANTI_DEP for debug insns.\n@@ -636,7 +618,7 @@\n \t(contributes_to_priority): Skip debug insns.\n \t(dep_list_size): New.\n \t(priority): Use it.\n-\t(rank_for_schedule): Likewise.  Schedule debug insns as soon as \n+\t(rank_for_schedule): Likewise.  Schedule debug insns as soon as\n \tthey're ready.  Disregard previous debug insns to make decisions.\n \t(queue_insn): Never queue debug insns.\n \t(ready_add, ready_remove_first, ready_remove): Count debug insns.\n@@ -742,7 +724,7 @@\n \tval_long_long change to CONST_DOUBLE rtx from a long hi/lo pair.\n \t(output_die): Likewise.  Use HOST_BITS_PER_WIDE_INT size of each\n \tcomponent instead of HOST_BITS_PER_LONG.\n-\t(output_loc_operands): Likewise.   For const8* assert\n+\t(output_loc_operands): Likewise.  For const8* assert\n \tHOST_BITS_PER_WIDE_INT rather than HOST_BITS_PER_LONG is >= 64.\n \t(output_loc_operands_raw): For const8* assert HOST_BITS_PER_WIDE_INT\n \trather than HOST_BITS_PER_LONG is >= 64.\n@@ -1231,7 +1213,7 @@\n \tand var needs to be modified.\n \t(dataflow_set_union): Set traversed_vars during canonicalization.\n \t(VALUE_CHANGED, DECL_CHANGED): Define.\n-\t(set_dv_changed, dv_changed_p): New static inlines.\t\n+\t(set_dv_changed, dv_changed_p): New static inlines.\n \t(track_expr_p): Clear DECL_CHANGED.\n \t(dump_dataflow_sets): Set it.\n \t(variable_was_changed): Call set_dv_changed.\n@@ -1368,7 +1350,7 @@\n \n 2009-09-01  Richard Henderson  <rth@redhat.com>\n \n-\t* tree-ssa-ccp.c (ccp_initialize): Make sure to simulate \n+\t* tree-ssa-ccp.c (ccp_initialize): Make sure to simulate\n \tstmt_ends_pp_p statements at least once.\n \t* tree-vrp.c (vrp_initialize): Likewise.\n \t(vrp_visit_stmt): Be prepared for non-interesting stmts."}, {"sha": "021ea0c3ab277e391f016bc8e47d0e98b9a653f9", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e58be03205af4b54fcf290a9f650ae3d9f4686/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e58be03205af4b54fcf290a9f650ae3d9f4686/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=14e58be03205af4b54fcf290a9f650ae3d9f4686", "patch": "@@ -7664,7 +7664,7 @@ alpha_does_function_need_gp (void)\n   pop_topmost_sequence ();\n \n   for (; insn; insn = NEXT_INSN (insn))\n-    if (INSN_P (insn)\n+    if (NONDEBUG_INSN_P (insn)\n \t&& ! JUMP_TABLE_DATA_P (insn)\n \t&& GET_CODE (PATTERN (insn)) != USE\n \t&& GET_CODE (PATTERN (insn)) != CLOBBER"}, {"sha": "57ddbac05ba9a403332dbe4cd3ecfe6aca6dc5dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e58be03205af4b54fcf290a9f650ae3d9f4686/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e58be03205af4b54fcf290a9f650ae3d9f4686/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14e58be03205af4b54fcf290a9f650ae3d9f4686", "patch": "@@ -23,6 +23,28 @@\n \tPR tree-optimization/41112\n \t* gnat.dg/array8.adb: New test.\n \n+2009-09-03  Daniel Gutson  <dgutson@codesourcery.com>\n+\n+\t* gcc.target/arm/ctz.c: New test case.\n+\n+2009-09-03  Alon Dayan  <alond@il.ibm.com>\n+\n+\tPR tree-optimization/38275\n+\t* testsuite/gcc.dg/autopar/reduc-1char.c: Increase number\n+\tof iterations. Adjust the logic accordingly.\n+\t* testsuite/gcc.dg/autopar/reduc-2char.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-1.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-2.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-3.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-6.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-7.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-8.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-9.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/pr39500-1.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-1short.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/reduc-2short.c: Ditto.\n+\t* testsuite/gcc.dg/autopar/parallelization-1.c: Ditto.\n+\n 2009-09-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/guality/guality.exp: Only run guality tests if a trivial\n@@ -59,7 +81,7 @@\n \t* gcc.dg/memcpy-1.c: Add . to match pattern.\n \t* gcc.dg/uninit-I.c: XFAIL warning test.\n \t* g++.dg/warn/unit-1.C: XFAIL warning test.\n-\t\n+\n 2009-09-02  Ian Lance Taylor  <iant@google.com>\n \n \t* gcc.dg/20090902-1.c: New test.\n@@ -71,9 +93,9 @@\n 2009-09-02  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/array7.ad[bs]: Add check for Signed_Integer_Type_Definition.\n-\t\n+\n 2009-09-02  Eric Botcazou  <ebotcazou@adacore.com>\n-            Olivier Hainque  <hainque@adacore.com>\n+\t    Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/misaligned_param.adb: New test.\n \t* gnat.dg/misaligned_param_pkg.ad[sb]: New helper.\n@@ -381,7 +403,7 @@\n \n 2009-08-11  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-       * gcc.target/arm/combine-cmp-shift.c: New test.\n+\t* gcc.target/arm/combine-cmp-shift.c: New test.\n \n 2009-08-24  Kai Tietz  <kai.tietz@onevision.com>\n "}]}