{"sha": "0a90c336200ac1bed97b54a7561f3ab6f21ab1d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE5MGMzMzYyMDBhYzFiZWQ5N2I1NGE3NTYxZjNhYjZmMjFhYjFkMg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-01-22T21:51:28Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-01-22T21:51:28Z"}, "message": "Use Pmode and cleanup\n\nFrom-SVN: r11083", "tree": {"sha": "032486176a890c28eec1320f325ff6a4f30b58b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/032486176a890c28eec1320f325ff6a4f30b58b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a90c336200ac1bed97b54a7561f3ab6f21ab1d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a90c336200ac1bed97b54a7561f3ab6f21ab1d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a90c336200ac1bed97b54a7561f3ab6f21ab1d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a90c336200ac1bed97b54a7561f3ab6f21ab1d2/comments", "author": null, "committer": null, "parents": [{"sha": "455376771ffd21a96482f501e0b951a6d95e883d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/455376771ffd21a96482f501e0b951a6d95e883d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/455376771ffd21a96482f501e0b951a6d95e883d"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "4830957e4c01c502887715f9bf64d65b5eb9e426", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a90c336200ac1bed97b54a7561f3ab6f21ab1d2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a90c336200ac1bed97b54a7561f3ab6f21ab1d2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=0a90c336200ac1bed97b54a7561f3ab6f21ab1d2", "patch": "@@ -1655,10 +1655,7 @@ typedef struct rs6000_args\n #define GO_IF_LEGITIMATE_ADDRESS(MODE, X, ADDR)\t\t\\\n { if (LEGITIMATE_INDIRECT_ADDRESS_P (X))\t\t\\\n     goto ADDR;\t\t\t\t\t\t\\\n-  if (GET_CODE (X) == PRE_INC\t\t\t\t\\\n-      && LEGITIMATE_INDIRECT_ADDRESS_P (XEXP (X, 0)))\t\\\n-    goto ADDR;\t\t\t\t\t\t\\\n-  if (GET_CODE (X) == PRE_DEC\t\t\t\t\\\n+  if ((GET_CODE (X) == PRE_INC || GET_CODE (X) == PRE_DEC) \\\n       && LEGITIMATE_INDIRECT_ADDRESS_P (XEXP (X, 0)))\t\\\n     goto ADDR;\t\t\t\t\t\t\\\n   if (LEGITIMATE_CONSTANT_POOL_ADDRESS_P (X))\t\t\\\n@@ -1705,9 +1702,9 @@ typedef struct rs6000_args\n       low_int = INTVAL (XEXP (X, 1)) & 0xffff;\t\t\t\t\\\n       if (low_int & 0x8000)\t\t\t\t\t\t\\\n \thigh_int += 1, low_int |= 0xffff0000;\t\t\t\t\\\n-      (X) = gen_rtx (PLUS, SImode,\t\t\t\t\t\\\n+      (X) = gen_rtx (PLUS, Pmode,\t\t\t\t\t\\\n \t\t     force_operand\t\t\t\t\t\\\n-\t\t     \t(gen_rtx (PLUS, SImode, XEXP (X, 0),\t\t\\\n+\t\t     \t(gen_rtx (PLUS, Pmode, XEXP (X, 0),\t\t\\\n \t\t\t\t  gen_rtx (CONST_INT, VOIDmode,\t\t\\\n \t\t\t\t\t\t      high_int << 16)), 0), \\\n \t\t     gen_rtx (CONST_INT, VOIDmode, low_int));\t\t\\\n@@ -1718,8 +1715,8 @@ typedef struct rs6000_args\n \t   && (TARGET_HARD_FLOAT || (MODE) != DFmode)\t\t\t\\\n \t   && (MODE) != DImode && (MODE) != TImode)\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      (X) = gen_rtx (PLUS, SImode, XEXP (X, 0),\t\t\t\t\\\n-\t\t     force_reg (SImode, force_operand (XEXP (X, 1), 0))); \\\n+      (X) = gen_rtx (PLUS, Pmode, XEXP (X, 0),\t\t\t\t\\\n+\t\t     force_reg (Pmode, force_operand (XEXP (X, 1), 0))); \\\n       goto WIN;\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else if (TARGET_ELF && !TARGET_64BIT && TARGET_NO_TOC\t\t\t\\\n@@ -1763,7 +1760,7 @@ typedef struct rs6000_args\n \n /* Specify the machine mode that this machine uses\n    for the index in the tablejump instruction.  */\n-#define CASE_VECTOR_MODE SImode\n+#define CASE_VECTOR_MODE (TARGET_64BIT ? DImode : SImode)\n \n /* Define this if the tablejump instruction expects the table\n    to contain offsets from the address of the table."}]}