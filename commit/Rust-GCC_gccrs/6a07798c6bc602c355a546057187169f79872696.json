{"sha": "6a07798c6bc602c355a546057187169f79872696", "node_id": "C_kwDOANBUbNoAKDZhMDc3OThjNmJjNjAyYzM1NWE1NDYwNTcxODcxNjlmNzk4NzI2OTY", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-12-07T20:27:27Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-12-08T22:49:28Z"}, "message": "docs: Suggest options to improve ASAN stack traces\n\nI got a complaint that while Clang docs suggest options that improve\nthe quality of the backtraces ASAN prints (cf.\n<https://clang.llvm.org/docs/AddressSanitizer.html#usage>), our docs\ndon't say anything to that effect.  This patch amends that with a new\nparagraph.  (It deliberately doesn't mention -fno-omit-frame-pointer.)\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi (-fsanitize=address): Suggest options to improve\n\tstack traces.", "tree": {"sha": "b4a155a0e4f9160976296b8ccad6cca85c842eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4a155a0e4f9160976296b8ccad6cca85c842eb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a07798c6bc602c355a546057187169f79872696", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a07798c6bc602c355a546057187169f79872696", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a07798c6bc602c355a546057187169f79872696", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a07798c6bc602c355a546057187169f79872696/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a9f6d5a8ee490adf9a18f93feaf86542642be7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9f6d5a8ee490adf9a18f93feaf86542642be7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9f6d5a8ee490adf9a18f93feaf86542642be7d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "3f2512ce16a3568f7946cb02a78eee1cfbc398e8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a07798c6bc602c355a546057187169f79872696/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a07798c6bc602c355a546057187169f79872696/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6a07798c6bc602c355a546057187169f79872696", "patch": "@@ -16510,6 +16510,16 @@ The option cannot be combined with @option{-fsanitize=thread} or\n @option{-fsanitize=hwaddress}.  Note that the only target\n @option{-fsanitize=hwaddress} is currently supported on is AArch64.\n \n+To get more accurate stack traces, it is possible to use options such as\n+@option{-O0}, @option{-O1}, or @option{-Og} (which, for instance, prevent\n+most function inlining), @option{-fno-optimize-sibling-calls} (which prevents\n+optimizing sibling and tail recursive calls; this option is implicit for\n+@option{-O0}, @option{-O1}, or @option{-Og}), or @option{-fno-ipa-icf} (which\n+disables Identical Code Folding for functions).  Since multiple runs of the\n+program may yield backtraces with different addresses due to ASLR (Address\n+Space Layout Randomization), it may be desirable to turn ASLR off.  On Linux,\n+this can be achieved with @samp{setarch `uname -m` -R ./prog}.\n+\n @item -fsanitize=kernel-address\n @opindex fsanitize=kernel-address\n Enable AddressSanitizer for Linux kernel."}]}