{"sha": "8829ef30e475e306b0e6023cc62597f4d820b31b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgyOWVmMzBlNDc1ZTMwNmIwZTYwMjNjYzYyNTk3ZjRkODIwYjMxYg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2006-10-17T04:12:59Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-10-17T04:12:59Z"}, "message": "natevents.cc (env): Delete.\n\n\t* testsuite/libjava.jvmti/natevents.cc (env): Delete.\n\t(ExceptionCB): Fix types for printf arguments.\n\t(ExceptionCatchCB): Likewise.\n\t(SingleStepCB): Likewise.\n\t(BreakpointCB): Likewise.\n\t(FieldAccessCB): Likewise.\n\t(FieldModificationCB): Likewise.\n\t(CompiledMethodLoadCB): Likewise.\n\nFrom-SVN: r117817", "tree": {"sha": "2f3ea7ae85da8052160a40c7f803daa665022006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f3ea7ae85da8052160a40c7f803daa665022006"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8829ef30e475e306b0e6023cc62597f4d820b31b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8829ef30e475e306b0e6023cc62597f4d820b31b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8829ef30e475e306b0e6023cc62597f4d820b31b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8829ef30e475e306b0e6023cc62597f4d820b31b/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed1cf8ff80985e2bc036ffcf4a7f250a5f5970be"}], "stats": {"total": 45, "additions": 27, "deletions": 18}, "files": [{"sha": "98d4c41a90f64163ed1f181e84f9ec8b202566ce", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8829ef30e475e306b0e6023cc62597f4d820b31b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8829ef30e475e306b0e6023cc62597f4d820b31b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8829ef30e475e306b0e6023cc62597f4d820b31b", "patch": "@@ -1,3 +1,14 @@\n+2006-10-16  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* testsuite/libjava.jvmti/natevents.cc (env): Delete.\n+\t(ExceptionCB): Fix types for printf arguments.\n+\t(ExceptionCatchCB): Likewise.\n+\t(SingleStepCB): Likewise.\n+\t(BreakpointCB): Likewise.\n+\t(FieldAccessCB): Likewise.\n+\t(FieldModificationCB): Likewise.\n+\t(CompiledMethodLoadCB): Likewise.\n+\n 2006-10-14  Keith Seitz  <keiths@redhat.com>\n \n \t* include/java-insns.h (enum java_code): Add op_breakpoint."}, {"sha": "2945e233bd2ee8a913e2b5da2885ca99ddce3edb", "filename": "libjava/testsuite/libjava.jvmti/natevents.cc", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8829ef30e475e306b0e6023cc62597f4d820b31b/libjava%2Ftestsuite%2Flibjava.jvmti%2Fnatevents.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8829ef30e475e306b0e6023cc62597f4d820b31b/libjava%2Ftestsuite%2Flibjava.jvmti%2Fnatevents.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jvmti%2Fnatevents.cc?ref=8829ef30e475e306b0e6023cc62597f4d820b31b", "patch": "@@ -7,8 +7,6 @@\n #include \"jvmti-int.h\"\n #include \"events.h\"\n \n-static jvmtiEnv *env = NULL;\n-\n void\n print_events ()\n {\n@@ -119,27 +117,27 @@ ExceptionCB (jvmtiEnv *env, JNIEnv *jni_env, jthread thread, jmethodID method,\n \t     jlocation location, jobject exception, jmethodID catch_method,\n \t     jlocation catch_location)\n {\n-  printf (\"ExceptionCB jni_env=%p thread=%p method=%p location=%p\", jni_env,\n-\t  thread, method, location);\n-  printf (\" exception=%p catch_method=%p catch_location=%p\\n\", exception,\n-\t  catch_method, catch_location);\n+  printf (\"ExceptionCB jni_env=%p thread=%p method=%p location=%#llx\", jni_env,\n+\t  thread, method, (unsigned long long) location);\n+  printf (\" exception=%p catch_method=%p catch_location=%#llx\\n\", exception,\n+\t  catch_method, (unsigned long long) catch_location);\n }\n \n static void\n ExceptionCatchCB (jvmtiEnv *env, JNIEnv *jni_env, jthread thread,\n \t\t  jmethodID method, jlocation location, jobject exception)\n {\n-  printf (\"ExceptionCatchCB jni_env=%p thread=%p method=%p location=%p\",\n-\t  jni_env, thread, method, location);\n+  printf (\"ExceptionCatchCB jni_env=%p thread=%p method=%p location=%#llx\",\n+\t  jni_env, thread, method, (unsigned long long) location);\n   printf (\" exception=%p\\n\", exception);\n }\n \n static void\n SingleStepCB (jvmtiEnv *env, JNIEnv *jni_env, jthread thread, jmethodID method,\n \t      jlocation location)\n {\n-  printf (\"SingleStepCB jni_env=%p thread=%p method=%p location=%p\\n\", \n-\t  jni_env, thread, method, location);\n+  printf (\"SingleStepCB jni_env=%p thread=%p method=%p location=%#llx\\n\", \n+\t  jni_env, thread, method, (unsigned long long) location);\n }\n \n static void\n@@ -156,17 +154,17 @@ static void\n BreakpointCB (jvmtiEnv *env, JNIEnv *jni_env, jthread thread, jmethodID method,\n \t      jlocation location)\n {\n-  printf (\"BreakpointCB  jni_env=%p thread=%p method=%p location=%p\\n\",\n-\t  jni_env, thread, method, location);\n+  printf (\"BreakpointCB  jni_env=%p thread=%p method=%p location=%#llx\\n\",\n+\t  jni_env, thread, method, (unsigned long long) location);\n }\n \n static void\n FieldAccessCB (jvmtiEnv *env, JNIEnv *jni_env, jthread thread,\n \t       jmethodID method, jlocation location, jclass field_klass,\n \t       jobject object, jfieldID field)\n {\n-  printf (\"FieldAccessCB jni_env=%p thread=%p method=%p location=%p\",\n-\t  jni_env, thread, method, location);\n+  printf (\"FieldAccessCB jni_env=%p thread=%p method=%p location=%#llx\",\n+\t  jni_env, thread, method, (unsigned long long) location);\n   printf (\" field_klass=%p object=%p field=%p\\n\", field_klass, object, field);\n }\n \n@@ -177,8 +175,8 @@ FieldModificationCB (jvmtiEnv *env, JNIEnv *jni_env, jthread thread,\n \t\t     jvalue new_value)\n \n {\n-  printf (\"FieldModificationCB  jni_env=%p thread=%p method=%p location=%p\",\n-\t  jni_env, thread, method, location);\n+  printf (\"FieldModificationCB  jni_env=%p thread=%p method=%p location=%#llx\",\n+\t  jni_env, thread, method, (unsigned long long) location);\n   printf (\" field_klass=%p object=%p field=%p signature_type=%c\", field_klass,\n \t  object, field, signature_type);\n   printf (\" new_value=%d\\n\", (int) new_value.i);\n@@ -218,8 +216,8 @@ CompiledMethodLoadCB (jvmtiEnv *env, jmethodID method, jint code_size,\n \t\t      const jvmtiAddrLocationMap *map,\n \t\t      const void *compile_info)\n {\n-  printf (\"CompiledMethodLoadCB method=%p code_size=%p code_addr=%p\",\n-\t  method, code_size, code_addr);\n+  printf (\"CompiledMethodLoadCB method=%p code_size=%#x code_addr=%p\",\n+\t  method, (unsigned) code_size, code_addr);\n   printf (\" map_length=%d map=%p compile_info=%p\\n\", (int) map_length, map,\n \t  compile_info);\n }"}]}