{"sha": "08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhmZDZkMDQxOTlhYzhkMWYxNTcxZDFmODA3ODUzYjhmZjdmMmZjMA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2005-06-06T18:13:31Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2005-06-06T18:13:31Z"}, "message": "expr.c (do_store_flag): Remove check for non-negative BRANCH_COST.\n\n\n2005-06-06  Eric Christopher  <echristo@redhat.com>\n\n\ttarget/21927\n\t* expr.c (do_store_flag): Remove check for non-negative BRANCH_COST.\n\nFrom-SVN: r100670", "tree": {"sha": "b91fab24723a61559698e77950c8ea9800d7c8ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b91fab24723a61559698e77950c8ea9800d7c8ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e97d404553157c7d74c399907b60125111f130f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e97d404553157c7d74c399907b60125111f130f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e97d404553157c7d74c399907b60125111f130f"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "5eaa8edf7386d8e7a13514fd2a036ecf96244afb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0", "patch": "@@ -1,3 +1,8 @@\n+2005-06-06  Eric Christopher  <echristo@redhat.com>\n+\n+\ttarget/21927\n+\t* expr.c (do_store_flag): Remove check for non-negative BRANCH_COST.\n+\n 2005-06-06  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* config/i386/x86-64.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Guard with"}, {"sha": "a3ee9e77a60d9864d33541605b0fdbb7a50fee0d", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=08fd6d04199ac8d1f1571d1f807853b8ff7f2fc0", "patch": "@@ -8729,8 +8729,7 @@ do_store_flag (tree exp, rtx target, enum machine_mode mode, int only_cheap)\n       if ((code == LT && integer_zerop (arg1))\n \t  || (! only_cheap && code == GE && integer_zerop (arg1)))\n \t;\n-      else if (BRANCH_COST >= 0\n-\t       && ! only_cheap && (code == NE || code == EQ)\n+      else if (! only_cheap && (code == NE || code == EQ)\n \t       && TREE_CODE (type) != REAL_TYPE\n \t       && ((abs_optab->handlers[(int) operand_mode].insn_code\n \t\t    != CODE_FOR_nothing)"}]}