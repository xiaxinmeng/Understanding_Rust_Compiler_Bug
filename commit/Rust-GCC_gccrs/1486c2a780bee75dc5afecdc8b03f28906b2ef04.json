{"sha": "1486c2a780bee75dc5afecdc8b03f28906b2ef04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ4NmMyYTc4MGJlZTc1ZGM1YWZlY2RjOGIwM2YyODkwNmIyZWYwNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2017-02-21T17:58:00Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-02-21T17:58:00Z"}, "message": "re PR tree-optimization/79621 (Missed path isolation opportunity)\n\n\tPR tree-optimization/79621\n\t* gimple-ssa-isolate-paths.c (find_implicit_erroneous_behavior): Ignore\n\tblocks with edges to themselves.\n\n\tPR tree-optimization/79621\n\t* gcc.c-torture/compile/pr79621.c: New test.\n\nFrom-SVN: r245637", "tree": {"sha": "e20843060c099ad84815b9aebcf3148a87cd4912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20843060c099ad84815b9aebcf3148a87cd4912"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1486c2a780bee75dc5afecdc8b03f28906b2ef04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1486c2a780bee75dc5afecdc8b03f28906b2ef04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1486c2a780bee75dc5afecdc8b03f28906b2ef04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1486c2a780bee75dc5afecdc8b03f28906b2ef04/comments", "author": null, "committer": null, "parents": [{"sha": "3bb4311904171b4938f6682566a24180f318b196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb4311904171b4938f6682566a24180f318b196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb4311904171b4938f6682566a24180f318b196"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "c0f554fed11ee3161f9ee04e21d77cfa41ce1b73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1486c2a780bee75dc5afecdc8b03f28906b2ef04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1486c2a780bee75dc5afecdc8b03f28906b2ef04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1486c2a780bee75dc5afecdc8b03f28906b2ef04", "patch": "@@ -1,3 +1,9 @@\n+2017-02-21 Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/79621\n+\t* gimple-ssa-isolate-paths.c (find_implicit_erroneous_behavior): Ignore\n+\tblocks with edges to themselves.\n+\n 2017-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/79633"}, {"sha": "7babe0923625782e8d4e55681d92a2ee3154b234", "filename": "gcc/gimple-ssa-isolate-paths.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1486c2a780bee75dc5afecdc8b03f28906b2ef04/gcc%2Fgimple-ssa-isolate-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1486c2a780bee75dc5afecdc8b03f28906b2ef04/gcc%2Fgimple-ssa-isolate-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-isolate-paths.c?ref=1486c2a780bee75dc5afecdc8b03f28906b2ef04", "patch": "@@ -35,6 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa.h\"\n #include \"cfgloop.h\"\n #include \"tree-cfg.h\"\n+#include \"cfganal.h\"\n #include \"intl.h\"\n \n \n@@ -352,6 +353,16 @@ find_implicit_erroneous_behavior (void)\n       if (has_abnormal_or_eh_outgoing_edge_p (bb))\n \tcontinue;\n \n+\n+      /* If BB has an edge to itself, then duplication of BB below\n+\t could result in reallocation of BB's PHI nodes.   If that happens\n+\t then the loop below over the PHIs would use the old PHI and\n+\t thus invalid information.  We don't have a good way to know\n+\t if a PHI has been reallocated, so just avoid isolation in\n+\t this case.  */\n+      if (find_edge (bb, bb))\n+\tcontinue;\n+\n       /* First look for a PHI which sets a pointer to NULL and which\n  \t is then dereferenced within BB.  This is somewhat overly\n \t conservative, but probably catches most of the interesting"}, {"sha": "9f278bb8b8399daf4165443ff666afe64f81a8e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1486c2a780bee75dc5afecdc8b03f28906b2ef04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1486c2a780bee75dc5afecdc8b03f28906b2ef04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1486c2a780bee75dc5afecdc8b03f28906b2ef04", "patch": "@@ -1,3 +1,8 @@\n+2017-02-21  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/79621\n+\t* gcc.c-torture/compile/pr79621.c: New test.\n+\n 2017-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/79655"}, {"sha": "f115c07a2a42868c06f4ed49e1af0598cf057e34", "filename": "gcc/testsuite/gcc.c-torture/compile/pr79621.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1486c2a780bee75dc5afecdc8b03f28906b2ef04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr79621.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1486c2a780bee75dc5afecdc8b03f28906b2ef04/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr79621.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr79621.c?ref=1486c2a780bee75dc5afecdc8b03f28906b2ef04", "patch": "@@ -0,0 +1,18 @@\n+int b5;\n+\n+void\n+h6 (int zb, int e7)\n+{\n+  while (b5 > 0)\n+    {\n+      int gv;\n+\n+      for (gv = 1; gv < 4; ++gv)\n+        {\n+          ((zb != 0) ? b5 : gv) && (b5 /= e7);\n+          zb = 0;\n+        }\n+      e7 = 0;\n+    }\n+}\n+"}]}