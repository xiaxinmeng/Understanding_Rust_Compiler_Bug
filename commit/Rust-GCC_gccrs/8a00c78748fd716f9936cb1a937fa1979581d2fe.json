{"sha": "8a00c78748fd716f9936cb1a937fa1979581d2fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEwMGM3ODc0OGZkNzE2Zjk5MzZjYjFhOTM3ZmExOTc5NTgxZDJmZQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2016-12-08T11:01:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2016-12-08T11:01:03Z"}, "message": "[PR78112] Remove platform-dependent checks in g++.dg/pr78112.C\n\n... as there checks failed on many platforms. As a replacement, this\ncommit also adds a new testcase from source reduction. The hope is that\nthis new testcase will get a consistent output across all platforms.\n\ngcc/testsuite/\n\tPR debug/78112\n\t* g++.dg/pr78112.C: Remove platform-dependent checks.\n\t* g++.dg/pr78112-2.C: New testcase.\n\nFrom-SVN: r243432", "tree": {"sha": "045bc7307ed4604a1737c6d0ef4acccae80c0535", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/045bc7307ed4604a1737c6d0ef4acccae80c0535"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a00c78748fd716f9936cb1a937fa1979581d2fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a00c78748fd716f9936cb1a937fa1979581d2fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a00c78748fd716f9936cb1a937fa1979581d2fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a00c78748fd716f9936cb1a937fa1979581d2fe/comments", "author": null, "committer": null, "parents": [{"sha": "a5b03f2a17a7d41380de232bae2ab4800015407f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b03f2a17a7d41380de232bae2ab4800015407f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b03f2a17a7d41380de232bae2ab4800015407f"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "d9d18ffb4e1e9f5c0cd1305fe8097ec1395959f7", "filename": "gcc/testsuite/g++.dg/pr78112-2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a00c78748fd716f9936cb1a937fa1979581d2fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a00c78748fd716f9936cb1a937fa1979581d2fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112-2.C?ref=8a00c78748fd716f9936cb1a937fa1979581d2fe", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g -dA -gdwarf-4 -std=gnu++11\" } */\n+/* { dg-options \"-g -dA -std=gnu++11 -gdwarf-4\" } */\n+/* { dg-final { scan-assembler-times DW_AT_object_pointer 18 } } */\n+\n+void run (int *int_p, void(*func)(int *)) { func (int_p); }\n+namespace foo {\n+   struct Foo {\n+      int a;\n+      Foo() { run (&a, [](int *int_p) { *int_p = 0; }); }\n+   };\n+}\n+int main (void) { foo::Foo f; }"}, {"sha": "83122923f9151c822f131c9b4c3a1b76dc0d3dad", "filename": "gcc/testsuite/g++.dg/pr78112.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a00c78748fd716f9936cb1a937fa1979581d2fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a00c78748fd716f9936cb1a937fa1979581d2fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112.C?ref=8a00c78748fd716f9936cb1a937fa1979581d2fe", "patch": "@@ -1,7 +1,5 @@\n /* { dg-do compile } */\n /* { dg-options \"-g -dA -std=gnu++11\" } */\n-/* { dg-final { scan-assembler-times DW_AT_inline 6 { xfail *-*-aix* } } } */\n-/* { dg-final { scan-assembler-times DW_AT_object_pointer 37 { xfail *-*-aix* } } } */\n namespace std\n {\n template <typename _Tp> struct integral_constant"}]}