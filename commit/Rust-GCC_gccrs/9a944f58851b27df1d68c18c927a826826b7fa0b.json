{"sha": "9a944f58851b27df1d68c18c927a826826b7fa0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE5NDRmNTg4NTFiMjdkZjFkNjhjMThjOTI3YTgyNjgyNmI3ZmEwYg==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2011-12-01T23:01:58Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2011-12-01T23:01:58Z"}, "message": "re PR target/50814 (SH Target: SHAD / SHLD instructions not used on SH2A)\n\n\tPR target/50814.\n\t* config/sh/sh.c (expand_ashiftrt): Handle TARGET_SH2A same as\n\tTARGET_SH3.\n\t(shl_sext_kind): Likewise.\n\t* config/sh/sh.h (SH_DYNAMIC_SHIFT_COST): Likewise.\n\t* config/sh/sh.md (ashlsi3_sh2a, ashrsi3_sh2a, lshrsi3_sh2a):\n\tRemove.\n\t(ashlsi3_std): Handle TARGET_SH2A same as TARGET_SH3.\n\t(ashlsi3): Likewise.\n\t(ashrsi3_d): Likewise.\n\t(lshrsi3_d): Likewise.\n\t(lshrsi3): Likewise.\n\nFrom-SVN: r181896", "tree": {"sha": "f5f622789151e37f5432e3c298982ac49ba40635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f622789151e37f5432e3c298982ac49ba40635"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a944f58851b27df1d68c18c927a826826b7fa0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a944f58851b27df1d68c18c927a826826b7fa0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a944f58851b27df1d68c18c927a826826b7fa0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a944f58851b27df1d68c18c927a826826b7fa0b/comments", "author": null, "committer": null, "parents": [{"sha": "c2985fe5596ebf32bbd14e29fa824a33cb2ff232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2985fe5596ebf32bbd14e29fa824a33cb2ff232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2985fe5596ebf32bbd14e29fa824a33cb2ff232"}], "stats": {"total": 64, "additions": 27, "deletions": 37}, "files": [{"sha": "0a15c0389549c17106022905a2e733df92909df1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a944f58851b27df1d68c18c927a826826b7fa0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a944f58851b27df1d68c18c927a826826b7fa0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a944f58851b27df1d68c18c927a826826b7fa0b", "patch": "@@ -1,3 +1,18 @@\n+2011-12-01  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/50814.\n+\t* config/sh/sh.c (expand_ashiftrt): Handle TARGET_SH2A same as\n+\tTARGET_SH3.\n+\t(shl_sext_kind): Likewise.\n+\t* config/sh/sh.h (SH_DYNAMIC_SHIFT_COST): Likewise.\n+\t* config/sh/sh.md (ashlsi3_sh2a, ashrsi3_sh2a, lshrsi3_sh2a):\n+\tRemove.\n+\t(ashlsi3_std): Handle TARGET_SH2A same as TARGET_SH3.\n+\t(ashlsi3): Likewise.\n+\t(ashrsi3_d): Likewise.\n+\t(lshrsi3_d): Likewise.\n+\t(lshrsi3): Likewise.\n+\n 2011-12-01   Diego Novillo  <dnovillo@google.com>\n \n \tPR bootstrap/51346"}, {"sha": "b9834fb5c9f2a57dc1ce8e9ca164d0543fee440e", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a944f58851b27df1d68c18c927a826826b7fa0b/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a944f58851b27df1d68c18c927a826826b7fa0b/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=9a944f58851b27df1d68c18c927a826826b7fa0b", "patch": "@@ -3266,7 +3266,7 @@ expand_ashiftrt (rtx *operands)\n   char func[18];\n   int value;\n \n-  if (TARGET_SH3)\n+  if (TARGET_SH3 || TARGET_SH2A)\n     {\n       if (!CONST_INT_P (operands[2]))\n \t{\n@@ -3715,7 +3715,7 @@ shl_sext_kind (rtx left_rtx, rtx size_rtx, int *costp)\n \t    }\n \t}\n     }\n-  if (TARGET_SH3)\n+  if (TARGET_SH3 || TARGET_SH2A)\n     {\n       /* Try to use a dynamic shift.  */\n       cost = shift_insns[32 - insize] + 1 + SH_DYNAMIC_SHIFT_COST;"}, {"sha": "f873b9d72a36a1a5524e89e0cb060bef635e3cf3", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a944f58851b27df1d68c18c927a826826b7fa0b/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a944f58851b27df1d68c18c927a826826b7fa0b/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=9a944f58851b27df1d68c18c927a826826b7fa0b", "patch": "@@ -2394,7 +2394,8 @@ extern int current_function_interrupt;\n #define ACCUMULATE_OUTGOING_ARGS TARGET_ACCUMULATE_OUTGOING_ARGS\n \n #define SH_DYNAMIC_SHIFT_COST \\\n-  (TARGET_HARD_SH4 ? 1 : TARGET_SH3 ? (optimize_size ? 1 : 2) : 20)\n+  (TARGET_HARD_SH4 ? 1\t\\\n+   : (TARGET_SH3 || TARGET_SH2A) ? (optimize_size ? 1 : 2) : 20)\n \n \n #define NUM_MODES_FOR_MODE_SWITCHING { FP_MODE_NONE }"}, {"sha": "b63c8572d740faf23b658dd6f09c240155ae9d6c", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 8, "deletions": 34, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a944f58851b27df1d68c18c927a826826b7fa0b/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a944f58851b27df1d68c18c927a826826b7fa0b/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=9a944f58851b27df1d68c18c927a826826b7fa0b", "patch": "@@ -1,6 +1,6 @@\n ;;- Machine description for Renesas / SuperH SH.\n ;;  Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-;;  2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+;;  2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n ;;  Free Software Foundation, Inc.\n ;;  Contributed by Steve Chamberlain (sac@cygnus.com).\n ;;  Improved by Jim Wilson (wilson@cygnus.com).\n@@ -3568,15 +3568,6 @@ label:\n ;;\n ;; shift left\n \n-(define_insn \"ashlsi3_sh2a\"\n-  [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n-\t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n-\t\t   (match_operand:SI 2 \"arith_reg_operand\" \"r\")))]\n-  \"TARGET_SH2A\"\n-  \"shad\t%2,%0\"\n-  [(set_attr \"type\" \"arith\")\n-   (set_attr \"length\" \"4\")])\n-\n ;; This pattern is used by init_expmed for computing the costs of shift\n ;; insns.\n \n@@ -3585,14 +3576,14 @@ label:\n \t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"0,0,0,0\")\n \t\t   (match_operand:SI 2 \"nonmemory_operand\" \"r,M,P27,?ri\")))\n    (clobber (match_scratch:SI 3 \"=X,X,X,&r\"))]\n-  \"TARGET_SH3\n+  \"(TARGET_SH3 || TARGET_SH2A)\n    || (TARGET_SH1 && satisfies_constraint_P27 (operands[2]))\"\n   \"@\n    shld\t%2,%0\n    add\t%0,%0\n    shll%O2\t%0\n    #\"\n-  \"TARGET_SH3\n+  \"(TARGET_SH3 || TARGET_SH2A)\n    && reload_completed\n    && CONST_INT_P (operands[2])\n    && ! satisfies_constraint_P27 (operands[2])\"\n@@ -3671,7 +3662,7 @@ label:\n   if (CONST_INT_P (operands[2])\n       && sh_dynamicalize_shift_p (operands[2]))\n     operands[2] = force_reg (SImode, operands[2]);\n-  if (TARGET_SH3)\n+  if (TARGET_SH3 || TARGET_SH2A)\n     {\n       emit_insn (gen_ashlsi3_std (operands[0], operands[1], operands[2]));\n       DONE;\n@@ -3728,15 +3719,6 @@ label:\n ; arithmetic shift right\n ;\n \n-(define_insn \"ashrsi3_sh2a\"\n-  [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n-\t(ashiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n-\t\t   (neg:SI (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))]\n-  \"TARGET_SH2A\"\n-  \"shad\t%2,%0\"\n-  [(set_attr \"type\" \"dyn_shift\")\n-   (set_attr \"length\" \"4\")])\n-\n (define_insn \"ashrsi3_k\"\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n \t(ashiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n@@ -3831,7 +3813,7 @@ label:\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n \t(ashiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t     (neg:SI (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))]\n-  \"TARGET_SH3\"\n+  \"TARGET_SH3 || TARGET_SH2A\"\n   \"shad\t%2,%0\"\n   [(set_attr \"type\" \"dyn_shift\")])\n \n@@ -3879,20 +3861,11 @@ label:\n \n ;; logical shift right\n \n-(define_insn \"lshrsi3_sh2a\"\n-  [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n-\t(lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n-\t\t     (neg:SI (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))]\n-  \"TARGET_SH2A\"\n-  \"shld\t%2,%0\"\n-  [(set_attr \"type\" \"dyn_shift\")\n-   (set_attr \"length\" \"4\")])\n-\n (define_insn \"lshrsi3_d\"\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n \t(lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t     (neg:SI (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))]\n-  \"TARGET_SH3\"\n+  \"TARGET_SH3 || TARGET_SH2A\"\n   \"shld\t%2,%0\"\n   [(set_attr \"type\" \"dyn_shift\")])\n \n@@ -3973,7 +3946,8 @@ label:\n   if (CONST_INT_P (operands[2])\n       && sh_dynamicalize_shift_p (operands[2]))\n     operands[2] = force_reg (SImode, operands[2]);\n-  if (TARGET_SH3 && arith_reg_operand (operands[2], GET_MODE (operands[2])))\n+  if ((TARGET_SH3 || TARGET_SH2A)\n+      && arith_reg_operand (operands[2], GET_MODE (operands[2])))\n     {\n       rtx count = copy_to_mode_reg (SImode, operands[2]);\n       emit_insn (gen_negsi2 (count, count));"}]}