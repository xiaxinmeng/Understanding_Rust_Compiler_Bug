{"sha": "686048e48a63dae75b9ba0dca24d9fb6c2e44cea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2MDQ4ZTQ4YTYzZGFlNzViOWJhMGRjYTI0ZDlmYjZjMmU0NGNlYQ==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2017-05-10T23:54:58Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2017-05-10T23:54:58Z"}, "message": "re PR target/80090 (Incorrect assembler - output_addr_const may generate visibility output between op and address constant)\n\n\tPR target/80090\n\t* config/pa/pa.c (pa_assemble_integer): When outputting a SYMBOL_REF,\n\thandle calling assemble_external ourself.\n\nFrom-SVN: r247872", "tree": {"sha": "78a8cde74a33dbdce1d370320fca8661a8526137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78a8cde74a33dbdce1d370320fca8661a8526137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/686048e48a63dae75b9ba0dca24d9fb6c2e44cea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686048e48a63dae75b9ba0dca24d9fb6c2e44cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/686048e48a63dae75b9ba0dca24d9fb6c2e44cea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686048e48a63dae75b9ba0dca24d9fb6c2e44cea/comments", "author": null, "committer": null, "parents": [{"sha": "212b7e9cf3ea60a38943239707d82ab369e83c71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212b7e9cf3ea60a38943239707d82ab369e83c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/212b7e9cf3ea60a38943239707d82ab369e83c71"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "4ee565be7b4d1d1d82148f80e5003c682b18220f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686048e48a63dae75b9ba0dca24d9fb6c2e44cea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686048e48a63dae75b9ba0dca24d9fb6c2e44cea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=686048e48a63dae75b9ba0dca24d9fb6c2e44cea", "patch": "@@ -1,5 +1,9 @@\n 2017-05-10  John David Anglin  <danglin@gcc.gnu.org>\n \n+\tPR target/80090\n+\t* config/pa/pa.c (pa_assemble_integer): When outputting a SYMBOL_REF,\n+\thandle calling assemble_external ourself.\n+\n \tPR target/79027\n \t* config/pa/pa.c (pa_cannot_change_mode_class): Reject changes to/from\n \tmodes with zero size.  Enhance comment."}, {"sha": "3e65ba1db59d14bca40f221120dcc0d3735a9f21", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686048e48a63dae75b9ba0dca24d9fb6c2e44cea/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686048e48a63dae75b9ba0dca24d9fb6c2e44cea/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=686048e48a63dae75b9ba0dca24d9fb6c2e44cea", "patch": "@@ -3299,6 +3299,24 @@ pa_output_64bit_ior (rtx *operands)\n static bool\n pa_assemble_integer (rtx x, unsigned int size, int aligned_p)\n {\n+  bool result;\n+  tree decl = NULL;\n+\n+  /* When we have a SYMBOL_REF with a SYMBOL_REF_DECL, we need to call\n+     call assemble_external and set the SYMBOL_REF_DECL to NULL before\n+     calling output_addr_const.  Otherwise, it may call assemble_external\n+     in the midst of outputing the assembler code for the SYMBOL_REF.\n+     We restore the SYMBOL_REF_DECL after the output is done.  */\n+  if (GET_CODE (x) == SYMBOL_REF)\n+    {\n+      decl = SYMBOL_REF_DECL (x);\n+      if (decl)\n+\t{\n+\t  assemble_external (decl);\n+\t  SET_SYMBOL_REF_DECL (x, NULL);\n+\t}\n+    }\n+\n   if (size == UNITS_PER_WORD\n       && aligned_p\n       && function_label_operand (x, VOIDmode))\n@@ -3311,9 +3329,15 @@ pa_assemble_integer (rtx x, unsigned int size, int aligned_p)\n \n       output_addr_const (asm_out_file, x);\n       fputc ('\\n', asm_out_file);\n-      return true;\n+      result = true;\n     }\n-  return default_assemble_integer (x, size, aligned_p);\n+  else\n+    result = default_assemble_integer (x, size, aligned_p);\n+\n+  if (decl)\n+    SET_SYMBOL_REF_DECL (x, decl);\n+\n+  return result;\n }\n \f\n /* Output an ascii string.  */"}]}