{"sha": "4e6f5666ac37c9cb8cc86008c906b0095b628ac4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU2ZjU2NjZhYzM3YzljYjhjYzg2MDA4YzkwNmIwMDk1YjYyOGFjNA==", "commit": {"author": {"name": "Jie Zhang", "email": "jie@codesourcery.com", "date": "2010-07-03T16:35:02Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2010-07-03T16:35:02Z"}, "message": "vfp.md (*push_multi_vfp): Use vfp_register_operand as predicate for operand 1 and remove its constraint.\n\n\t* config/arm/vfp.md (*push_multi_vfp): Use vfp_register_operand\n\tas predicate for operand 1 and remove its constraint.\n\t* config/arm/predicates.md (vfp_register_operand): New.\n\t* config/arm/arm.md (*push_multi): Remove the constraint of\n\toperand 1.\n\t(*push_fp_multi): Likewise.\n\nFrom-SVN: r161775", "tree": {"sha": "c6a8034b7dc81dc63de262449fe660e1b939ede7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6a8034b7dc81dc63de262449fe660e1b939ede7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e6f5666ac37c9cb8cc86008c906b0095b628ac4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e6f5666ac37c9cb8cc86008c906b0095b628ac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e6f5666ac37c9cb8cc86008c906b0095b628ac4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/comments", "author": null, "committer": null, "parents": [{"sha": "6687b74039b24bf8e3bdd35c4f250d5e08e5d5a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6687b74039b24bf8e3bdd35c4f250d5e08e5d5a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6687b74039b24bf8e3bdd35c4f250d5e08e5d5a3"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "8aceaf783264ae2c73d70128a0359bed4590f923", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e6f5666ac37c9cb8cc86008c906b0095b628ac4", "patch": "@@ -1,3 +1,12 @@\n+2010-07-03  Jie Zhang  <jie@codesourcery.com>\n+\n+\t* config/arm/vfp.md (*push_multi_vfp): Use vfp_register_operand\n+\tas predicate for operand 1 and remove its constraint.\n+\t* config/arm/predicates.md (vfp_register_operand): New.\n+\t* config/arm/arm.md (*push_multi): Remove the constraint of\n+\toperand 1.\n+\t(*push_fp_multi): Likewise.\n+\n 2010-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimplify.c (mostly_copy_tree_r): Deal with BIND_EXPR."}, {"sha": "9052bff69a8125868c3fcd50dff1ae76eea4ab3f", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=4e6f5666ac37c9cb8cc86008c906b0095b628ac4", "patch": "@@ -10902,7 +10902,7 @@\n (define_insn \"*push_multi\"\n   [(match_parallel 2 \"multi_register_push\"\n     [(set (match_operand:BLK 0 \"memory_operand\" \"=m\")\n-\t  (unspec:BLK [(match_operand:SI 1 \"s_register_operand\" \"r\")]\n+\t  (unspec:BLK [(match_operand:SI 1 \"s_register_operand\" \"\")]\n \t\t      UNSPEC_PUSH_MULT))])]\n   \"TARGET_32BIT\"\n   \"*\n@@ -10955,7 +10955,7 @@\n (define_insn \"*push_fp_multi\"\n   [(match_parallel 2 \"multi_register_push\"\n     [(set (match_operand:BLK 0 \"memory_operand\" \"=m\")\n-\t  (unspec:BLK [(match_operand:XF 1 \"f_register_operand\" \"f\")]\n+\t  (unspec:BLK [(match_operand:XF 1 \"f_register_operand\" \"\")]\n \t\t      UNSPEC_PUSH_MULT))])]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_FPA\"\n   \"*"}, {"sha": "f53c54fa110e975b569a60b89f47f120654f69bd", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=4e6f5666ac37c9cb8cc86008c906b0095b628ac4", "patch": "@@ -73,6 +73,21 @@\n \t      || REGNO_REG_CLASS (REGNO (op)) == FPA_REGS));\n })\n \n+(define_predicate \"vfp_register_operand\"\n+  (match_code \"reg,subreg\")\n+{\n+  if (GET_CODE (op) == SUBREG)\n+    op = SUBREG_REG (op);\n+\n+  /* We don't consider registers whose class is NO_REGS\n+     to be a register operand.  */\n+  return (GET_CODE (op) == REG\n+\t  && (REGNO (op) >= FIRST_PSEUDO_REGISTER\n+\t      || REGNO_REG_CLASS (REGNO (op)) == VFP_LO_REGS\n+\t      || (TARGET_VFPD32\n+\t\t  && REGNO_REG_CLASS (REGNO (op)) == VFP_REGS)));\n+})\n+\n (define_special_predicate \"subreg_lowpart_operator\"\n   (and (match_code \"subreg\")\n        (match_test \"subreg_lowpart_p (op)\")))"}, {"sha": "26fd11826df20319016437756c1f64d9af1f30ba", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6f5666ac37c9cb8cc86008c906b0095b628ac4/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=4e6f5666ac37c9cb8cc86008c906b0095b628ac4", "patch": "@@ -1132,7 +1132,7 @@\n (define_insn \"*push_multi_vfp\"\n   [(match_parallel 2 \"multi_register_push\"\n     [(set (match_operand:BLK 0 \"memory_operand\" \"=m\")\n-\t  (unspec:BLK [(match_operand:DF 1 \"s_register_operand\" \"w\")]\n+\t  (unspec:BLK [(match_operand:DF 1 \"vfp_register_operand\" \"\")]\n \t\t      UNSPEC_PUSH_MULT))])]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n   \"* return vfp_output_fstmd (operands);\""}]}