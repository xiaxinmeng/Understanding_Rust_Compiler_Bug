{"sha": "f311e16612262241a694f1c260cea65405e30efe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMxMWUxNjYxMjI2MjI0MWE2OTRmMWMyNjBjZWE2NTQwNWUzMGVmZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2001-12-05T02:36:13Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-05T02:36:13Z"}, "message": "* sem_ch12.adb:\n\n\t(Analyze_Formal_Type_Definition): Defend against Error.\n\t(Analyze_Formal_Subprogram): Defend against Error.\n\n\t* par-ch12.adb (F_Formal_Type_Declaration): In case of error,\n\tremove following semicolon if present. Removes cascaded error.\n\nFrom-SVN: r47652", "tree": {"sha": "b32bbdea84387d896522202090ae3ce29cf18d67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b32bbdea84387d896522202090ae3ce29cf18d67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f311e16612262241a694f1c260cea65405e30efe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f311e16612262241a694f1c260cea65405e30efe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f311e16612262241a694f1c260cea65405e30efe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f311e16612262241a694f1c260cea65405e30efe/comments", "author": null, "committer": null, "parents": [{"sha": "d61bd65a64aa5332fd5d4e585a27839712229d1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61bd65a64aa5332fd5d4e585a27839712229d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d61bd65a64aa5332fd5d4e585a27839712229d1f"}], "stats": {"total": 69, "additions": 45, "deletions": 24}, "files": [{"sha": "3153721082247b0cbf9d7e3040b2d3c70100ea67", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f311e16612262241a694f1c260cea65405e30efe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f311e16612262241a694f1c260cea65405e30efe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f311e16612262241a694f1c260cea65405e30efe", "patch": "@@ -1,3 +1,12 @@\n+2001-12-04  Robert Dewar <dewar@gnat.com>\n+\n+\t* sem_ch12.adb:\n+\t(Analyze_Formal_Type_Definition): Defend against Error.\n+\t(Analyze_Formal_Subprogram): Defend against Error.\n+\t\n+\t* par-ch12.adb (F_Formal_Type_Declaration): In case of error, \n+\tremove following semicolon if present. Removes cascaded error.\n+\n 2001-12-04  Douglas B. Rupp <rupp@gnat.com>\n \n \t* bindgen.adb:"}, {"sha": "5a8b9e34a3b555e9b25592e7faad20276f9b674b", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f311e16612262241a694f1c260cea65405e30efe/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f311e16612262241a694f1c260cea65405e30efe/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=f311e16612262241a694f1c260cea65405e30efe", "patch": "@@ -454,8 +454,14 @@ package body Ch12 is\n          TF_Semicolon;\n       else\n          Decl_Node := Error;\n+\n+         if Token = Tok_Semicolon then\n+            --   Avoid further cascaded errors.\n+            Scan;\n+         end if;\n       end if;\n \n+\n       return Decl_Node;\n    end P_Formal_Type_Declaration;\n "}, {"sha": "bf6892d55c0891b493952519b2293afbac9c50de", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f311e16612262241a694f1c260cea65405e30efe/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f311e16612262241a694f1c260cea65405e30efe/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=f311e16612262241a694f1c260cea65405e30efe", "patch": "@@ -1702,6 +1702,10 @@ package body Sem_Ch12 is\n       Subp : Entity_Id;\n \n    begin\n+      if Nam = Error then\n+         return;\n+      end if;\n+\n       if Nkind (Nam) = N_Defining_Program_Unit_Name then\n          Error_Msg_N (\"name of formal subprogram must be a direct name\", Nam);\n          return;\n@@ -1858,45 +1862,47 @@ package body Sem_Ch12 is\n       --  Enter the new name, and branch to specific routine.\n \n       case Nkind (Def) is\n-         when N_Formal_Private_Type_Definition\n-                        => Analyze_Formal_Private_Type (N, T, Def);\n+         when N_Formal_Private_Type_Definition         =>\n+            Analyze_Formal_Private_Type (N, T, Def);\n \n-         when N_Formal_Derived_Type_Definition\n-                        => Analyze_Formal_Derived_Type (N, T, Def);\n+         when N_Formal_Derived_Type_Definition         =>\n+            Analyze_Formal_Derived_Type (N, T, Def);\n \n-         when N_Formal_Discrete_Type_Definition\n-                        => Analyze_Formal_Discrete_Type (T, Def);\n+         when N_Formal_Discrete_Type_Definition        =>\n+            Analyze_Formal_Discrete_Type (T, Def);\n \n-         when N_Formal_Signed_Integer_Type_Definition\n-                        => Analyze_Formal_Signed_Integer_Type (T, Def);\n+         when N_Formal_Signed_Integer_Type_Definition  =>\n+            Analyze_Formal_Signed_Integer_Type (T, Def);\n \n-         when N_Formal_Modular_Type_Definition\n-                        => Analyze_Formal_Modular_Type (T, Def);\n+         when N_Formal_Modular_Type_Definition         =>\n+            Analyze_Formal_Modular_Type (T, Def);\n \n-         when N_Formal_Floating_Point_Definition\n-                        => Analyze_Formal_Floating_Type (T, Def);\n+         when N_Formal_Floating_Point_Definition       =>\n+            Analyze_Formal_Floating_Type (T, Def);\n \n-         when N_Formal_Ordinary_Fixed_Point_Definition\n-                        => Analyze_Formal_Ordinary_Fixed_Point_Type (T, Def);\n+         when N_Formal_Ordinary_Fixed_Point_Definition =>\n+            Analyze_Formal_Ordinary_Fixed_Point_Type (T, Def);\n \n-         when N_Formal_Decimal_Fixed_Point_Definition\n-                        => Analyze_Formal_Decimal_Fixed_Point_Type (T, Def);\n+         when N_Formal_Decimal_Fixed_Point_Definition  =>\n+            Analyze_Formal_Decimal_Fixed_Point_Type (T, Def);\n \n-         when N_Array_Type_Definition\n-                        => Analyze_Formal_Array_Type (T, Def);\n+         when N_Array_Type_Definition =>\n+            Analyze_Formal_Array_Type (T, Def);\n \n-         when N_Access_To_Object_Definition |\n-              N_Access_Function_Definition  |\n-              N_Access_Procedure_Definition\n-                        => Analyze_Generic_Access_Type (T, Def);\n+         when N_Access_To_Object_Definition            |\n+              N_Access_Function_Definition             |\n+              N_Access_Procedure_Definition            =>\n+            Analyze_Generic_Access_Type (T, Def);\n \n-         when others =>\n+         when N_Error                                  =>\n+            null;\n+\n+         when others                                   =>\n             raise Program_Error;\n \n       end case;\n \n       Set_Is_Generic_Type (T);\n-\n    end Analyze_Formal_Type_Declaration;\n \n    ------------------------------------"}]}