{"sha": "e8c66fe0e19849b41b227666405de82bf3391e5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThjNjZmZTBlMTk4NDliNDFiMjI3NjY2NDA1ZGU4MmJmMzM5MWU1Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-12-14T15:39:12Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-12-14T15:39:12Z"}, "message": "re PR c++/18949 (trouble with const_cast in templates)\n\ncp:\n\tPR c++/18949\n\t* pt.c (tsubst_copy_and_build): <INDIRECT_REF case> Check that a\n\tREFERENCE_REF_P is dereferencing a reference type.\n\t* typeck.c (build_static_cast): Convert from reference even in a\n\ttemplate.\n\t(build_reinterpret_cast, build_const_cast, build_c_cast): Likewise.\ntestsuite:\n\tPR c++/18949\n\t* g++.dg/template/cast1.C: New.\n\nFrom-SVN: r92136", "tree": {"sha": "7dbf4d083fa9aa07d8ff70f0e237f880b53e8a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dbf4d083fa9aa07d8ff70f0e237f880b53e8a1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8c66fe0e19849b41b227666405de82bf3391e5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c66fe0e19849b41b227666405de82bf3391e5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8c66fe0e19849b41b227666405de82bf3391e5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c66fe0e19849b41b227666405de82bf3391e5f/comments", "author": null, "committer": null, "parents": [{"sha": "3a42aebe0bc6555520bbd648f491b55079914f5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a42aebe0bc6555520bbd648f491b55079914f5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a42aebe0bc6555520bbd648f491b55079914f5d"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "1dd91a12f17ecd506fbeadc1150ca82494aa63ed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e8c66fe0e19849b41b227666405de82bf3391e5f", "patch": "@@ -1,3 +1,12 @@\n+2004-12-14  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/18949\n+\t* pt.c (tsubst_copy_and_build): <INDIRECT_REF case> Check that a\n+\tREFERENCE_REF_P is dereferencing a reference type.\n+\t* typeck.c (build_static_cast): Convert from reference even in a\n+\ttemplate.\n+\t(build_reinterpret_cast, build_const_cast, build_c_cast): Likewise.\n+\n 2004-12-14  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \t* parser.c (cp_parser_uncommitted_to_tentative_parse_p): New function."}, {"sha": "5da280610b42cc864fab79735785685c729921e5", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e8c66fe0e19849b41b227666405de82bf3391e5f", "patch": "@@ -8395,8 +8395,11 @@ tsubst_copy_and_build (tree t,\n \n \tif (REFERENCE_REF_P (t))\n \t  {\n-\t    gcc_assert (TREE_CODE (TREE_TYPE (r)) == REFERENCE_TYPE);\n-\t    r = convert_from_reference (r);\n+\t    /* A type conversion to reference type will be enclosed in\n+\t       such an indirect ref, but the substitution of the cast\n+\t       will have also added such an indirect ref.  */\n+\t    if (TREE_CODE (TREE_TYPE (r)) == REFERENCE_TYPE)\n+\t      r = convert_from_reference (r);\n \t  }\n \telse\n \t  r = build_x_indirect_ref (r, \"unary *\");"}, {"sha": "9d347c299d19050aa548a508b39416c7b7b5588d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e8c66fe0e19849b41b227666405de82bf3391e5f", "patch": "@@ -4767,7 +4767,7 @@ build_static_cast (tree type, tree expr)\n       expr = build_min (STATIC_CAST_EXPR, type, expr);\n       /* We don't know if it will or will not have side effects.  */\n       TREE_SIDE_EFFECTS (expr) = 1;\n-      return expr;\n+      return convert_from_reference (expr);\n     }\n \n   /* build_c_cast puts on a NOP_EXPR to make the result not an lvalue.\n@@ -4983,7 +4983,7 @@ build_reinterpret_cast (tree type, tree expr)\n \t  && type_dependent_expression_p (expr))\n \t/* There might turn out to be side effects inside expr.  */\n \tTREE_SIDE_EFFECTS (t) = 1;\n-      return t;\n+      return convert_from_reference (t);\n     }\n \n   return build_reinterpret_cast_1 (type, expr, /*c_cast_p=*/false,\n@@ -5111,7 +5111,7 @@ build_const_cast (tree type, tree expr)\n \t  && type_dependent_expression_p (expr))\n \t/* There might turn out to be side effects inside expr.  */\n \tTREE_SIDE_EFFECTS (t) = 1;\n-      return t;\n+      return convert_from_reference (t);\n     }\n \n   return build_const_cast_1 (type, expr, /*complain=*/true,\n@@ -5137,7 +5137,7 @@ build_c_cast (tree type, tree expr)\n \t\t\t  tree_cons (NULL_TREE, value, NULL_TREE));\n       /* We don't know if it will or will not have side effects.  */\n       TREE_SIDE_EFFECTS (t) = 1;\n-      return t;\n+      return convert_from_reference (t);\n     }\n \n   /* Casts to a (pointer to a) specific ObjC class (or 'id' or"}, {"sha": "d94cb679d0eb6fa0e3d054f3a90746388625d21b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e8c66fe0e19849b41b227666405de82bf3391e5f", "patch": "@@ -1,3 +1,8 @@\n+2004-12-14  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/18949\n+\t* g++.dg/template/cast1.C: New.\n+\n 2004-12-13  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/i386-sse-10.c: Fix typo in options."}, {"sha": "fca3511e2e95c811ccec82ec3c1c8f4de8208b44", "filename": "gcc/testsuite/g++.dg/template/cast1.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c66fe0e19849b41b227666405de82bf3391e5f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcast1.C?ref=e8c66fe0e19849b41b227666405de82bf3391e5f", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 14 Dec 2004 <nathan@codesourcery.com>\n+\n+// PR 18949. Forgot to convert from reference.\n+// Origin: Volker Reichelt <reichelt@gcc.gnu.org>\n+\n+struct A\n+{\n+    void foo();\n+};\n+\n+template<int> void bar(A& a)\n+{\n+    const_cast<A&>(a).foo();\n+    static_cast<A&>(a).foo();\n+    reinterpret_cast<A&>(a).foo();\n+    ((A&)a).foo();\n+}\n+\n+template void bar<0>(A& a);"}]}