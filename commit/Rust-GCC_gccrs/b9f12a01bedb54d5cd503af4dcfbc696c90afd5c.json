{"sha": "b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlmMTJhMDFiZWRiNTRkNWNkNTAzYWY0ZGNmYmM2OTZjOTBhZmQ1Yw==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2015-01-19T18:33:24Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2015-01-19T18:33:24Z"}, "message": "default64.h: Include rs6000-cpus.def.\n\n        * config/rs6000/default64.h: Include rs6000-cpus.def.\n        (TARGET_DEFAULT) [LITTLE_ENDIAN]: Use ISA 2.7 (POWER8).\n        (TARGET_DEFAULT) [BIG_ENDIAN]: Use POWER4.\n        * config/rs6000/driver-rs6000.c (detect_processor_aix): Add POWER7\n        and POWER8.\n        * config/rs6000/linux64.h (PROCESSOR_DEFAULT64): Always default to\n        POWER8.\n        * config/rs6000/rs6000.c (rs6000_file_start): Emit .machine\n        pseudo-op to specify assembler dialect.\n\nFrom-SVN: r219854", "tree": {"sha": "030b5645dec533ebcaffeb830e52dd5567f151aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/030b5645dec533ebcaffeb830e52dd5567f151aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90190bb3ccf6809fc742f6d29459f4d30ef420e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90190bb3ccf6809fc742f6d29459f4d30ef420e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90190bb3ccf6809fc742f6d29459f4d30ef420e5"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "7bcc9bc9ac3caaca9110408fac3aa602e855fe8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "patch": "@@ -1,3 +1,15 @@\n+2015-01-19  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/default64.h: Include rs6000-cpus.def.\n+\t(TARGET_DEFAULT) [LITTLE_ENDIAN]: Use ISA 2.7 (POWER8).\n+\t(TARGET_DEFAULT) [BIG_ENDIAN]: Use POWER4.\n+\t* config/rs6000/driver-rs6000.c (detect_processor_aix): Add POWER7\n+\tand POWER8.\n+\t* config/rs6000/linux64.h (PROCESSOR_DEFAULT64): Always default to\n+\tPOWER8.\n+\t* config/rs6000/rs6000.c (rs6000_file_start): Emit .machine\n+\tpseudo-op to specify assembler dialect.\n+\n 2015-01-19  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/64664"}, {"sha": "7a29672a1eac8a6ad7a4f049112490fedb725b68", "filename": "gcc/config/rs6000/default64.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2Fconfig%2Frs6000%2Fdefault64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2Fconfig%2Frs6000%2Fdefault64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdefault64.h?ref=b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "patch": "@@ -18,10 +18,14 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#define RS6000_CPU(NAME, CPU, FLAGS)\n+#include \"rs6000-cpus.def\"\n+#undef RS6000_CPU\n+\n #if (TARGET_DEFAULT & MASK_LITTLE_ENDIAN)\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_PPC_GFXOPT | MASK_POWERPC64 | MASK_64BIT | MASK_LITTLE_ENDIAN)\n+#define TARGET_DEFAULT (ISA_2_7_MASKS_SERVER | MASK_POWERPC64 | MASK_64BIT | MASK_LITTLE_ENDIAN)\n #else\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_PPC_GFXOPT | MASK_POWERPC64 | MASK_64BIT)\n+#define TARGET_DEFAULT (MASK_PPC_GFXOPT | MASK_PPC_GPOPT | MASK_MFCRF | MASK_POWERPC64 | MASK_64BIT)\n #endif"}, {"sha": "af324712b2088aae2e53da649e122b9731193310", "filename": "gcc/config/rs6000/driver-rs6000.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdriver-rs6000.c?ref=b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "patch": "@@ -327,6 +327,12 @@ detect_processor_aix (void)\n     case 0x4000:\n       return \"power6\";\n \n+    case 0x8000:\n+      return \"power7\";\n+\n+    case 0x10000:\n+      return \"power8\";\n+\n     default:\n       return \"powerpc\";\n     }"}, {"sha": "0fb3911a1656a44801fa220831e693083733d06b", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "patch": "@@ -71,11 +71,7 @@ extern int dot_symbols;\n #undef  PROCESSOR_DEFAULT\n #define PROCESSOR_DEFAULT PROCESSOR_POWER7\n #undef  PROCESSOR_DEFAULT64\n-#ifdef LINUX64_DEFAULT_ABI_ELFv2\n #define PROCESSOR_DEFAULT64 PROCESSOR_POWER8\n-#else\n-#define PROCESSOR_DEFAULT64 PROCESSOR_POWER7\n-#endif\n \n /* We don't need to generate entries in .fixup, except when\n    -mrelocatable or -mrelocatable-lib is given.  */"}, {"sha": "aad4c02132d4c5e80cf07134ec2a02822bb7db88", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f12a01bedb54d5cd503af4dcfbc696c90afd5c/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b9f12a01bedb54d5cd503af4dcfbc696c90afd5c", "patch": "@@ -5077,6 +5077,28 @@ rs6000_file_start (void)\n \tputc ('\\n', file);\n     }\n \n+#ifdef USING_ELFOS_H\n+  if (rs6000_default_cpu == 0 || rs6000_default_cpu[0] == '\\0'\n+      || !global_options_set.x_rs6000_cpu_index)\n+    {\n+      fputs (\"\\t.machine \", asm_out_file);\n+      if ((TARGET_DEFAULT & OPTION_MASK_DIRECT_MOVE) != 0)\n+\tfputs (\"power8\\n\", asm_out_file);\n+      else if ((TARGET_DEFAULT & OPTION_MASK_POPCNTD) != 0)\n+\tfputs (\"power7\\n\", asm_out_file);\n+      else if ((TARGET_DEFAULT & OPTION_MASK_CMPB) != 0)\n+\tfputs (\"power6\\n\", asm_out_file);\n+      else if ((TARGET_DEFAULT & OPTION_MASK_POPCNTB) != 0)\n+\tfputs (\"power5\\n\", asm_out_file);\n+      else if ((TARGET_DEFAULT & OPTION_MASK_MFCRF) != 0)\n+\tfputs (\"power4\\n\", asm_out_file);\n+      else if ((TARGET_DEFAULT & OPTION_MASK_POWERPC64) != 0)\n+\tfputs (\"ppc64\\n\", asm_out_file);\n+      else\n+\tfputs (\"ppc\\n\", asm_out_file);\n+    }\n+#endif\n+\n   if (DEFAULT_ABI == ABI_ELFv2)\n     fprintf (file, \"\\t.abiversion 2\\n\");\n "}]}