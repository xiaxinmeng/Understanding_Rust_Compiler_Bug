{"sha": "31d04616b57669ad6727d4c0052e31c1a300a8d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFkMDQ2MTZiNTc2NjlhZDY3MjdkNGMwMDUyZTMxYzFhMzAwYThkNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-27T19:09:18Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-27T19:09:18Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r843", "tree": {"sha": "31e06cbda5c01c381346a57c62fbd6997a6f6bd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31e06cbda5c01c381346a57c62fbd6997a6f6bd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31d04616b57669ad6727d4c0052e31c1a300a8d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d04616b57669ad6727d4c0052e31c1a300a8d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d04616b57669ad6727d4c0052e31c1a300a8d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d04616b57669ad6727d4c0052e31c1a300a8d4/comments", "author": null, "committer": null, "parents": [{"sha": "1388448843645292b5ada30f840fe15cfb6e29fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1388448843645292b5ada30f840fe15cfb6e29fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1388448843645292b5ada30f840fe15cfb6e29fc"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "dfdcecf7176e77e580b44c5098ed8fa1a4d0aa59", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=31d04616b57669ad6727d4c0052e31c1a300a8d4", "patch": "@@ -97,6 +97,7 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n extern void free ();\n+extern rtx read_rtx ();\n \n static void fatal ();\n void fancy_abort ();\n@@ -3830,7 +3831,6 @@ main (argc, argv)\n {\n   rtx desc;\n   FILE *infile;\n-  extern rtx read_rtx ();\n   register int c;\n   struct attr_desc *attr;\n   struct attr_value *av;"}, {"sha": "86302e27b01cb0d75e27fe91d8fb1863f5edc00c", "filename": "gcc/genconfig.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=31d04616b57669ad6727d4c0052e31c1a300a8d4", "patch": "@@ -32,6 +32,7 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n extern void free ();\n+extern rtx read_rtx ();\n \n /* flags to determine output of machine description dependent #define's.  */\n static int max_recog_operands;\n@@ -257,7 +258,6 @@ main (argc, argv)\n {\n   rtx desc;\n   FILE *infile;\n-  extern rtx read_rtx ();\n   register int c;\n \n   obstack_init (rtl_obstack);"}, {"sha": "05f60f3921d2904d97087b1dc4c1856efdc64eb3", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=31d04616b57669ad6727d4c0052e31c1a300a8d4", "patch": "@@ -30,6 +30,7 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n extern void free ();\n+extern rtx read_rtx ();\n \n char *xmalloc ();\n static void fatal ();\n@@ -710,7 +711,6 @@ main (argc, argv)\n {\n   rtx desc;\n   FILE *infile;\n-  extern rtx read_rtx ();\n   register int c;\n \n   obstack_init (rtl_obstack);"}, {"sha": "afb7e7ab9eb3297986e8123fe3e82d66a663af5d", "filename": "gcc/genextract.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=31d04616b57669ad6727d4c0052e31c1a300a8d4", "patch": "@@ -31,6 +31,7 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n extern void free ();\n+extern rtx read_rtx ();\n \n /* This structure contains all the information needed to describe one\n    set of extractions methods.  Each method may be used by more than \n@@ -390,7 +391,6 @@ main (argc, argv)\n {\n   rtx desc;\n   FILE *infile;\n-  extern rtx read_rtx ();\n   register int c, i;\n   struct extraction *p;\n   struct code_ptr *link;"}, {"sha": "76d96936414effefd76e13beb81178d48b96455a", "filename": "gcc/genoutput.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=31d04616b57669ad6727d4c0052e31c1a300a8d4", "patch": "@@ -107,6 +107,7 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n extern void free ();\n+extern rtx read_rtx ();\n \n char *xmalloc ();\n static void fatal ();\n@@ -925,7 +926,6 @@ main (argc, argv)\n {\n   rtx desc;\n   FILE *infile;\n-  extern rtx read_rtx ();\n   register int c;\n \n   obstack_init (rtl_obstack);"}, {"sha": "eb14a69f26ba7f9fd48c161fd6b83abcb4ceb459", "filename": "gcc/genpeep.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=31d04616b57669ad6727d4c0052e31c1a300a8d4", "patch": "@@ -30,6 +30,7 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n extern void free ();\n+extern rtx read_rtx ();\n \n /* While tree-walking an instruction pattern, we keep a chain\n    of these `struct link's to record how to get down to the\n@@ -412,7 +413,6 @@ main (argc, argv)\n {\n   rtx desc;\n   FILE *infile;\n-  extern rtx read_rtx ();\n   register int c;\n \n   max_opno = -1;"}, {"sha": "7e88f3c1e16a41f11fedc69c94fe4d21c8f9a560", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d04616b57669ad6727d4c0052e31c1a300a8d4/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=31d04616b57669ad6727d4c0052e31c1a300a8d4", "patch": "@@ -57,6 +57,7 @@ struct obstack *rtl_obstack = &obstack;\n #define obstack_chunk_free free\n \n extern void free ();\n+extern rtx read_rtx ();\n \n /* Data structure for a listhead of decision trees.  The alternatives\n    to a node are kept in a doublely-linked list so we can easily add nodes\n@@ -1650,7 +1651,6 @@ main (argc, argv)\n   struct decision_head recog_tree;\n   struct decision_head split_tree;\n   FILE *infile;\n-  extern rtx read_rtx ();\n   register int c;\n \n   obstack_init (rtl_obstack);"}]}