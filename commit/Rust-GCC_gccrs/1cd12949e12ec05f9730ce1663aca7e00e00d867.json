{"sha": "1cd12949e12ec05f9730ce1663aca7e00e00d867", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNkMTI5NDllMTJlYzA1Zjk3MzBjZTE2NjNhY2E3ZTAwZTAwZDg2Nw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-09-27T08:08:16Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-09-27T08:08:16Z"}, "message": "avr.md (ashrqi3): Split alternative \"n\" into its remaining parts C03...\n\n\t* config/avr/avr.md (ashrqi3): Split alternative \"n\"\n\tinto its remaining parts C03, C04, C05, C06, C07 and describe\n\timpact in CC by attribute \"cc\" appropriately.\n\t* config/avr/avr.c (notice_update_cc): Clean-up: Don't patch CC0\n\tby digging RTX.\n\nFrom-SVN: r179241", "tree": {"sha": "9fe74561bda193cd03df786340f041ff5815badf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fe74561bda193cd03df786340f041ff5815badf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cd12949e12ec05f9730ce1663aca7e00e00d867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd12949e12ec05f9730ce1663aca7e00e00d867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd12949e12ec05f9730ce1663aca7e00e00d867", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd12949e12ec05f9730ce1663aca7e00e00d867/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7c82a992521536902a0b230d9b7508e27cd7839", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c82a992521536902a0b230d9b7508e27cd7839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c82a992521536902a0b230d9b7508e27cd7839"}], "stats": {"total": 38, "additions": 13, "deletions": 25}, "files": [{"sha": "27f31c7c2486dc212bf51d699951c92d7c430b05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd12949e12ec05f9730ce1663aca7e00e00d867/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd12949e12ec05f9730ce1663aca7e00e00d867/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cd12949e12ec05f9730ce1663aca7e00e00d867", "patch": "@@ -1,3 +1,11 @@\n+2011-09-27  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.md (ashrqi3): Split alternative \"n\"\n+\tinto its remaining parts C03, C04, C05, C06, C07 and describe\n+\timpact in CC by attribute \"cc\" appropriately.\n+\t* config/avr/avr.c (notice_update_cc): Clean-up: Don't patch CC0\n+\tby digging RTX.\n+\n 2011-09-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* rtl.h (const_tiny_rtx): Change into array of 4 x MAX_MACHINE_MODE"}, {"sha": "5ffa7fc2a17f3bf38b12b70c967dca9501e48d47", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd12949e12ec05f9730ce1663aca7e00e00d867/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd12949e12ec05f9730ce1663aca7e00e00d867/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=1cd12949e12ec05f9730ce1663aca7e00e00d867", "patch": "@@ -1574,26 +1574,6 @@ notice_update_cc (rtx body ATTRIBUTE_UNUSED, rtx insn)\n     case CC_CLOBBER:\n       /* Insn doesn't leave CC in a usable state.  */\n       CC_STATUS_INIT;\n-\n-      /* Correct CC for the ashrqi3 with the shift count as CONST_INT < 6 */\n-      set = single_set (insn);\n-      if (set)\n-\t{\n-\t  rtx src = SET_SRC (set);\n-\t  \n-\t  if (GET_CODE (src) == ASHIFTRT\n-\t      && GET_MODE (src) == QImode)\n-\t    {\n-\t      rtx x = XEXP (src, 1);\n-\n-\t      if (CONST_INT_P (x)\n-\t\t  && IN_RANGE (INTVAL (x), 1, 5))\n-\t\t{\n-\t\t  cc_status.value1 = SET_DEST (set);\n-\t\t  cc_status.flags |= CC_OVERFLOW_UNUSABLE;\n-\t\t}\n-\t    }\n-\t}\n       break;\n     }\n }"}, {"sha": "3b1800d3fb07eb4999ff27c27f3b35281f512ab5", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cd12949e12ec05f9730ce1663aca7e00e00d867/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cd12949e12ec05f9730ce1663aca7e00e00d867/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=1cd12949e12ec05f9730ce1663aca7e00e00d867", "patch": "@@ -2820,14 +2820,14 @@\n ;; arithmetic shift right\n \n (define_insn \"ashrqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r,r,r,r,r,r\")\n-\t(ashiftrt:QI (match_operand:QI 1 \"register_operand\" \"0,0,0,0,0,0\")\n-\t\t     (match_operand:QI 2 \"general_operand\"  \"r,L,P,K,n,Qm\")))]\n+  [(set (match_operand:QI 0 \"register_operand\"             \"=r,r,r,r,r          ,r      ,r\")\n+        (ashiftrt:QI (match_operand:QI 1 \"register_operand\" \"0,0,0,0,0          ,0      ,0\")\n+                     (match_operand:QI 2 \"general_operand\"  \"r,L,P,K,C03 C04 C05,C06 C07,Qm\")))]\n   \"\"\n   \"* return ashrqi3_out (insn, operands, NULL);\"\n-  [(set_attr \"length\" \"5,0,1,2,5,9\")\n+  [(set_attr \"length\" \"5,0,1,2,5,4,9\")\n    (set_attr \"adjust_len\" \"ashrqi\")\n-   (set_attr \"cc\" \"clobber,none,clobber,clobber,clobber,clobber\")])\n+   (set_attr \"cc\" \"clobber,none,set_czn,set_czn,set_czn,clobber,clobber\")])\n \n (define_insn \"ashrhi3\"\n   [(set (match_operand:HI 0 \"register_operand\"             \"=r,r,r,r,r,r,r\")"}]}