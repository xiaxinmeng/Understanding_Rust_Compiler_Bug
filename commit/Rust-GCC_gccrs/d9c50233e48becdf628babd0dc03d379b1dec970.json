{"sha": "d9c50233e48becdf628babd0dc03d379b1dec970", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDljNTAyMzNlNDhiZWNkZjYyOGJhYmQwZGMwM2QzNzliMWRlYzk3MA==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2019-11-22T08:00:33Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2019-11-22T08:00:33Z"}, "message": "[ARC] Fix failing pr77309 for ARC700\n\nThe patterns neg_scc_insn and not_scc_insn are not correct, leading to\nfailing pr77309 test for ARC700. Add two new bic compare with zero\npatterns to improve output code.\n\ngcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.md (bic_f): Use cc_set_register predicate.\n\t(bic_cmp0_noout): New pattern.\n\t(bic_cmp0): Likewise.\n\t(neg_scc_insn): Remove pattern.\n\t(not_scc_insn): Likewise.\n\nFrom-SVN: r278610", "tree": {"sha": "eff11addcb545f4c88cc61743922eaa8dd735898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eff11addcb545f4c88cc61743922eaa8dd735898"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9c50233e48becdf628babd0dc03d379b1dec970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c50233e48becdf628babd0dc03d379b1dec970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9c50233e48becdf628babd0dc03d379b1dec970", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c50233e48becdf628babd0dc03d379b1dec970/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "713877cbd73783fac1a1013cefd24cc273bb4635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713877cbd73783fac1a1013cefd24cc273bb4635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713877cbd73783fac1a1013cefd24cc273bb4635"}], "stats": {"total": 60, "additions": 37, "deletions": 23}, "files": [{"sha": "986324acba3a0aab42a23662f2daf8894efc1e19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9c50233e48becdf628babd0dc03d379b1dec970/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9c50233e48becdf628babd0dc03d379b1dec970/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9c50233e48becdf628babd0dc03d379b1dec970", "patch": "@@ -1,3 +1,11 @@\n+2019-11-22  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.md (bic_f): Use cc_set_register predicate.\n+\t(bic_cmp0_noout): New pattern.\n+\t(bic_cmp0): Likewise.\n+\t(neg_scc_insn): Remove pattern.\n+\t(not_scc_insn): Likewise.\n+\n 2019-11-21  Harald van Dijk  <harald@gigawatt.nl>\n \n \t* doc/invoke.texi (-fcommon): Remove claim about ISO C."}, {"sha": "6b4ed0e75de9f5de54a330e8ab0c2e8496663814", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 29, "deletions": 23, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9c50233e48becdf628babd0dc03d379b1dec970/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9c50233e48becdf628babd0dc03d379b1dec970/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=d9c50233e48becdf628babd0dc03d379b1dec970", "patch": "@@ -1263,7 +1263,7 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n   \"\")\n \n (define_insn \"*bic_f\"\n-  [(set (match_operand 3 \"cc_register\" \"=Rcc,Rcc,Rcc\")\n+  [(set (match_operand 3 \"cc_set_register\" \"\")\n \t(match_operator 4 \"zn_compare_operator\"\n \t  [(and:SI (match_operand:SI 1 \"register_operand\" \"c,0,c\")\n \t\t   (not:SI\n@@ -1277,6 +1277,34 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n    (set_attr \"cond\" \"set_zn,set_zn,set_zn\")\n    (set_attr \"length\" \"4,4,8\")])\n \n+(define_insn \"*bic_cmp0_noout\"\n+  [(set (match_operand 0 \"cc_set_register\" \"\")\n+\t(compare:CC_ZN\n+\t (and:SI (not:SI (match_operand:SI 1 \"nonmemory_operand\" \"Lr,Cal,r\"))\n+\t\t (match_operand:SI 2 \"nonmemory_operand\" \"r,r,Cal\"))\n+\t (const_int 0)))]\n+  \"register_operand (operands[1], SImode)\n+   || register_operand (operands[2], SImode)\"\n+  \"bic.f\\\\t0,%2,%1\"\n+  [(set_attr \"type\" \"unary\")\n+   (set_attr \"cond\" \"set_zn\")\n+   (set_attr \"length\" \"4,8,8\")])\n+\n+(define_insn \"*bic_cmp0\"\n+  [(set (match_operand 0 \"cc_set_register\" \"\")\n+\t(compare:CC_ZN\n+\t (and:SI (not:SI (match_operand:SI 1 \"nonmemory_operand\" \"Lr,Cal,r\"))\n+\t\t (match_operand:SI 2 \"nonmemory_operand\" \"r,r,Cal\"))\n+\t (const_int 0)))\n+   (set (match_operand:SI 3 \"register_operand\" \"=r,r,r\")\n+\t(and:SI (not:SI (match_dup 1)) (match_dup 2)))]\n+  \"register_operand (operands[1], SImode)\n+   || register_operand (operands[2], SImode)\"\n+  \"bic.f\\\\t%3,%2,%1\"\n+  [(set_attr \"type\" \"unary\")\n+   (set_attr \"cond\" \"set_zn\")\n+   (set_attr \"length\" \"4,8,8\")])\n+\n (define_expand \"movdi\"\n   [(set (match_operand:DI 0 \"move_dest_operand\" \"\")\n \t(match_operand:DI 1 \"general_operand\" \"\"))]\n@@ -3762,28 +3790,6 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n }\n   [(set_attr \"type\" \"unary\")])\n \n-;; ??? At least for ARC600, we should use sbc b,b,s12 if we want a value\n-;; that is one lower if the carry flag is set.\n-\n-;; ??? Look up negscc insn.  See pa.md for example.\n-(define_insn \"*neg_scc_insn\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=w\")\n-\t(neg:SI (match_operator:SI 1 \"proper_comparison_operator\"\n-\t\t [(reg CC_REG) (const_int 0)])))]\n-  \"\"\n-  \"mov %0,-1\\;sub.%D1 %0,%0,%0\"\n-  [(set_attr \"type\" \"unary\")\n-   (set_attr \"length\" \"8\")])\n-\n-(define_insn \"*not_scc_insn\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=w\")\n-\t(not:SI (match_operator:SI 1 \"proper_comparison_operator\"\n-\t\t [(reg CC_REG) (const_int 0)])))]\n-  \"\"\n-  \"mov %0,1\\;sub.%d1 %0,%0,%0\"\n-  [(set_attr \"type\" \"unary\")\n-   (set_attr \"length\" \"8\")])\n-\n ; cond_exec patterns\n (define_insn \"*movsi_ne\"\n   [(cond_exec"}]}