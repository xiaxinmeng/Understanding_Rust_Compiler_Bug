{"sha": "4f48d56aa72831182c3d4ece0f8065865b36daf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY0OGQ1NmFhNzI4MzExODJjM2Q0ZWNlMGY4MDY1ODY1YjM2ZGFmOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-14T23:46:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-14T23:46:08Z"}, "message": "(expand_call): If IS_CONST and VALREG == 0, end our sequence and emit\nthe insns.\n\nFrom-SVN: r8431", "tree": {"sha": "a3b7e76f47ac0ea37a6051c02353d36179d50ad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3b7e76f47ac0ea37a6051c02353d36179d50ad4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f48d56aa72831182c3d4ece0f8065865b36daf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f48d56aa72831182c3d4ece0f8065865b36daf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f48d56aa72831182c3d4ece0f8065865b36daf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f48d56aa72831182c3d4ece0f8065865b36daf9/comments", "author": null, "committer": null, "parents": [{"sha": "e80316129f08a13630a1751c9eb9fea4d5888d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e80316129f08a13630a1751c9eb9fea4d5888d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e80316129f08a13630a1751c9eb9fea4d5888d35"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "b168e85c3eb5972a288d319d9aa62d17cb4a9fee", "filename": "gcc/calls.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f48d56aa72831182c3d4ece0f8065865b36daf9/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f48d56aa72831182c3d4ece0f8065865b36daf9/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=4f48d56aa72831182c3d4ece0f8065865b36daf9", "patch": "@@ -1624,10 +1624,11 @@ expand_call (exp, target, ignore)\n \t    && args[i].mode != BLKmode\n \t    && rtx_cost (args[i].value, SET) > 2\n #ifdef SMALL_REGISTER_CLASSES\n-\t    && (reg_parm_seen || preserve_subexpressions_p ()))\n+\t    && (reg_parm_seen || preserve_subexpressions_p ())\n #else\n-\t    && preserve_subexpressions_p ())\n+\t    && preserve_subexpressions_p ()\n #endif\n+\t    )\n \t  args[i].value = copy_to_mode_reg (args[i].mode, args[i].value);\n       }\n \n@@ -1909,6 +1910,14 @@ expand_call (exp, target, ignore)\n \n       valreg = temp;\n     }\n+  else if (is_const)\n+    {\n+      /* Otherwise, just write out the sequence without a note.  */\n+      rtx insns = get_insns ();\n+\n+      end_sequence ();\n+      emit_insns (insns);\n+    }\n \n   /* For calls to `setjmp', etc., inform flow.c it should complain\n      if nonvolatile values are live.  */"}]}