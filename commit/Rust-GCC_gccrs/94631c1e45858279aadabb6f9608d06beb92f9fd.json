{"sha": "94631c1e45858279aadabb6f9608d06beb92f9fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ2MzFjMWU0NTg1ODI3OWFhZGFiYjZmOTYwOGQwNmJlYjkyZjlmZA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-06-11T22:33:11Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-06-11T22:33:11Z"}, "message": "re PR fortran/17792 ([4.0 only] deallocate does not return stat)\n\n\tPR fortran/17792\n\tPR fortran/21375\n\t* gfortran.dg/deallocate_statO.f90:  New test.\n\nFrom-SVN: r100847", "tree": {"sha": "bffc7b10caad9deb8a33c38c11402d962864d70f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bffc7b10caad9deb8a33c38c11402d962864d70f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94631c1e45858279aadabb6f9608d06beb92f9fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94631c1e45858279aadabb6f9608d06beb92f9fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94631c1e45858279aadabb6f9608d06beb92f9fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94631c1e45858279aadabb6f9608d06beb92f9fd/comments", "author": null, "committer": null, "parents": [{"sha": "411e6c1e103bd087cce5a006b3e15622aa9ac83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411e6c1e103bd087cce5a006b3e15622aa9ac83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/411e6c1e103bd087cce5a006b3e15622aa9ac83c"}], "stats": {"total": 85, "additions": 84, "deletions": 1}, "files": [{"sha": "6140b216890972da47f403ebe1f4066a0e6df543", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94631c1e45858279aadabb6f9608d06beb92f9fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94631c1e45858279aadabb6f9608d06beb92f9fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94631c1e45858279aadabb6f9608d06beb92f9fd", "patch": "@@ -1,4 +1,10 @@\n-2005-05-11  Thomas Koenig  <Thomas.Koenig@online.de>\n+2005-06-11  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/17792\n+\tPR fortran/21375\n+\t* gfortran.dg/deallocate_stat.f90:  New test.\n+\n+2005-06-11  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \t* gfortran.fortran-torture/execute/in-pack.f90:  New test.\n "}, {"sha": "b691f21c74ed873545b3b815d31d0da836030863", "filename": "gcc/testsuite/gfortran.dg/deallocate_stat.f90", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94631c1e45858279aadabb6f9608d06beb92f9fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_stat.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94631c1e45858279aadabb6f9608d06beb92f9fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_stat.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_stat.f90?ref=94631c1e45858279aadabb6f9608d06beb92f9fd", "patch": "@@ -0,0 +1,77 @@\n+! { dg-do run }\n+! PR 17792\n+! PR 21375\n+! Test that the STAT argument to DEALLOCATE works with POINTERS and \n+! ALLOCATABLE arrays.\n+program deallocate_stat\n+   \n+   implicit none\n+\n+   integer i\n+   real, pointer :: a1(:), a2(:,:), a3(:,:,:), a4(:,:,:,:), &\n+   &  a5(:,:,:,:,:), a6(:,:,:,:,:,:), a7(:,:,:,:,:,:,:)\n+\n+   real, allocatable :: b1(:), b2(:,:), b3(:,:,:), b4(:,:,:,:), &\n+   &  b5(:,:,:,:,:), b6(:,:,:,:,:,:), b7(:,:,:,:,:,:,:)\n+\n+   allocate(a1(2), a2(2,2), a3(2,2,2), a4(2,2,2,2), a5(2,2,2,2,2))\n+   allocate(a6(2,2,2,2,2,2), a7(2,2,2,2,2,2,2))\n+\n+   a1 = 1. ; a2 = 2. ; a3 = 3. ; a4 = 4. ; a5 = 5. ; a6 = 6. ; a7 = 7.\n+\n+   i = 13\n+   deallocate(a1, stat=i) ; if (i /= 0) call abort\n+   deallocate(a2, stat=i) ; if (i /= 0) call abort\n+   deallocate(a3, stat=i) ; if (i /= 0) call abort\n+   deallocate(a4, stat=i) ; if (i /= 0) call abort\n+   deallocate(a5, stat=i) ; if (i /= 0) call abort\n+   deallocate(a6, stat=i) ; if (i /= 0) call abort\n+   deallocate(a7, stat=i) ; if (i /= 0) call abort\n+\n+   i = 14\n+   deallocate(a1, stat=i) ; if (i /= 1) call abort\n+   deallocate(a2, stat=i) ; if (i /= 1) call abort\n+   deallocate(a3, stat=i) ; if (i /= 1) call abort\n+   deallocate(a4, stat=i) ; if (i /= 1) call abort\n+   deallocate(a5, stat=i) ; if (i /= 1) call abort\n+   deallocate(a6, stat=i) ; if (i /= 1) call abort\n+   deallocate(a7, stat=i) ; if (i /= 1) call abort\n+\n+   allocate(b1(2), b2(2,2), b3(2,2,2), b4(2,2,2,2), b5(2,2,2,2,2))\n+   allocate(b6(2,2,2,2,2,2), b7(2,2,2,2,2,2,2))\n+\n+   b1 = 1. ; b2 = 2. ; b3 = 3. ; b4 = 4. ; b5 = 5. ; b6 = 6. ; b7 = 7.\n+\n+   i = 13\n+   deallocate(b1, stat=i) ; if (i /= 0) call abort\n+   deallocate(b2, stat=i) ; if (i /= 0) call abort\n+   deallocate(b3, stat=i) ; if (i /= 0) call abort\n+   deallocate(b4, stat=i) ; if (i /= 0) call abort\n+   deallocate(b5, stat=i) ; if (i /= 0) call abort\n+   deallocate(b6, stat=i) ; if (i /= 0) call abort\n+   deallocate(b7, stat=i) ; if (i /= 0) call abort\n+\n+   i = 14\n+   deallocate(b1, stat=i) ; if (i /= 1) call abort\n+   deallocate(b2, stat=i) ; if (i /= 1) call abort\n+   deallocate(b3, stat=i) ; if (i /= 1) call abort\n+   deallocate(b4, stat=i) ; if (i /= 1) call abort\n+   deallocate(b5, stat=i) ; if (i /= 1) call abort\n+   deallocate(b6, stat=i) ; if (i /= 1) call abort\n+   deallocate(b7, stat=i) ; if (i /= 1) call abort\n+\n+\n+   allocate(a1(2), a2(2,2), a3(2,2,2), b4(2,2,2,2), b5(2,2,2,2,2))\n+   allocate(b6(2,2,2,2,2,2))\n+\n+   a1 = 1. ; a2 = 2. ; a3 = 3. ; b4 = 4. ; b5 = 5. ; b6 = 6.\n+\n+   i = 13\n+   deallocate(a1, stat=i) ;         if (i /= 0) call abort\n+   deallocate(a2, a1, stat=i) ;     if (i /= 1) call abort\n+   deallocate(a1, a3, a2, stat=i) ; if (i /= 2) call abort\n+   deallocate(b4, stat=i) ;         if (i /= 0) call abort\n+   deallocate(b4, b5, stat=i) ;     if (i /= 1) call abort\n+   deallocate(b4, b5, b6, stat=i) ; if (i /= 2) call abort\n+\n+end program deallocate_stat"}]}