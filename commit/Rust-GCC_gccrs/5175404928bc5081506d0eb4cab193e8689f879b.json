{"sha": "5175404928bc5081506d0eb4cab193e8689f879b", "node_id": "C_kwDOANBUbNoAKDUxNzU0MDQ5MjhiYzUwODE1MDZkMGViNGNhYjE5M2U4Njg5Zjg3OWI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-26T19:52:35Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-31T10:36:52Z"}, "message": "Add guards against getting data from an empty vector", "tree": {"sha": "8c6e68db6e219fd7a42deb91270b40b9195bd604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c6e68db6e219fd7a42deb91270b40b9195bd604"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5175404928bc5081506d0eb4cab193e8689f879b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5175404928bc5081506d0eb4cab193e8689f879b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5175404928bc5081506d0eb4cab193e8689f879b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5175404928bc5081506d0eb4cab193e8689f879b/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebb127f2aed32f21a37b31e8a5330defc6bfe5e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb127f2aed32f21a37b31e8a5330defc6bfe5e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb127f2aed32f21a37b31e8a5330defc6bfe5e7"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "c46d5909c94c3d2339166e699516acdb5182ce55", "filename": "gcc/rust/typecheck/rust-tyctx.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5175404928bc5081506d0eb4cab193e8689f879b/gcc%2Frust%2Ftypecheck%2Frust-tyctx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5175404928bc5081506d0eb4cab193e8689f879b/gcc%2Frust%2Ftypecheck%2Frust-tyctx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyctx.cc?ref=5175404928bc5081506d0eb4cab193e8689f879b", "patch": "@@ -142,12 +142,14 @@ TypeCheckContext::push_return_type (TypeCheckContextItem item,\n void\n TypeCheckContext::pop_return_type ()\n {\n+  rust_assert (!return_type_stack.empty ());\n   return_type_stack.pop_back ();\n }\n \n TypeCheckContextItem &\n TypeCheckContext::peek_context ()\n {\n+  rust_assert (!return_type_stack.empty ());\n   return return_type_stack.back ().first;\n }\n "}]}