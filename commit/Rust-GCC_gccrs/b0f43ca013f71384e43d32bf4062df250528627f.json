{"sha": "b0f43ca013f71384e43d32bf4062df250528627f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBmNDNjYTAxM2Y3MTM4NGU0M2QzMmJmNDA2MmRmMjUwNTI4NjI3Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-06-17T22:48:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-06-17T22:48:45Z"}, "message": "expr.c (struct move_by_pieces_d): Rename from move_by_pieces.\n\n\t* expr.c (struct move_by_pieces_d): Rename from move_by_pieces.\n\tChange all uses.\n\t(struct store_by_pieces_d): Rename from store_by_pieces.  Change\n\tcall uses.\n\nFrom-SVN: r148633", "tree": {"sha": "023f2c52125e0942edb058786009cefca6000ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/023f2c52125e0942edb058786009cefca6000ea9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0f43ca013f71384e43d32bf4062df250528627f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f43ca013f71384e43d32bf4062df250528627f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0f43ca013f71384e43d32bf4062df250528627f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f43ca013f71384e43d32bf4062df250528627f/comments", "author": null, "committer": null, "parents": [{"sha": "23314e77ec9e3dfea806f31b6dd65920f628f207", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23314e77ec9e3dfea806f31b6dd65920f628f207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23314e77ec9e3dfea806f31b6dd65920f628f207"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "9bcafa2f7585d65019ecd7fa7b29ad0ed3c839c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f43ca013f71384e43d32bf4062df250528627f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f43ca013f71384e43d32bf4062df250528627f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0f43ca013f71384e43d32bf4062df250528627f", "patch": "@@ -1,3 +1,10 @@\n+2009-06-17  Ian Lance Taylor  <iant@google.com>\n+\n+\t* expr.c (struct move_by_pieces_d): Rename from move_by_pieces.\n+\tChange all uses.\n+\t(struct store_by_pieces_d): Rename from store_by_pieces.  Change\n+\tcall uses.\n+\n 2009-06-17  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* tree.h (STRIP_NOPS, STRIP_SIGN_NOPS,"}, {"sha": "32cb9bb755eb3d57217c1c4035e0b3de4ecab065", "filename": "gcc/expr.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f43ca013f71384e43d32bf4062df250528627f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f43ca013f71384e43d32bf4062df250528627f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b0f43ca013f71384e43d32bf4062df250528627f", "patch": "@@ -91,7 +91,7 @@ int cse_not_expected;\n \n /* This structure is used by move_by_pieces to describe the move to\n    be performed.  */\n-struct move_by_pieces\n+struct move_by_pieces_d\n {\n   rtx to;\n   rtx to_addr;\n@@ -109,7 +109,7 @@ struct move_by_pieces\n /* This structure is used by store_by_pieces to describe the clear to\n    be performed.  */\n \n-struct store_by_pieces\n+struct store_by_pieces_d\n {\n   rtx to;\n   rtx to_addr;\n@@ -126,16 +126,16 @@ static unsigned HOST_WIDE_INT move_by_pieces_ninsns (unsigned HOST_WIDE_INT,\n \t\t\t\t\t\t     unsigned int,\n \t\t\t\t\t\t     unsigned int);\n static void move_by_pieces_1 (rtx (*) (rtx, ...), enum machine_mode,\n-\t\t\t      struct move_by_pieces *);\n+\t\t\t      struct move_by_pieces_d *);\n static bool block_move_libcall_safe_for_call_parm (void);\n static bool emit_block_move_via_movmem (rtx, rtx, rtx, unsigned, unsigned, HOST_WIDE_INT);\n static tree emit_block_move_libcall_fn (int);\n static void emit_block_move_via_loop (rtx, rtx, rtx, unsigned);\n static rtx clear_by_pieces_1 (void *, HOST_WIDE_INT, enum machine_mode);\n static void clear_by_pieces (rtx, unsigned HOST_WIDE_INT, unsigned int);\n-static void store_by_pieces_1 (struct store_by_pieces *, unsigned int);\n+static void store_by_pieces_1 (struct store_by_pieces_d *, unsigned int);\n static void store_by_pieces_2 (rtx (*) (rtx, ...), enum machine_mode,\n-\t\t\t       struct store_by_pieces *);\n+\t\t\t       struct store_by_pieces_d *);\n static tree clear_storage_libcall_fn (int);\n static rtx compress_float_constant (rtx, rtx);\n static rtx get_subtarget (rtx);\n@@ -876,7 +876,7 @@ rtx\n move_by_pieces (rtx to, rtx from, unsigned HOST_WIDE_INT len,\n \t\tunsigned int align, int endp)\n {\n-  struct move_by_pieces data;\n+  struct move_by_pieces_d data;\n   rtx to_addr, from_addr = XEXP (from, 0);\n   unsigned int max_size = MOVE_MAX_PIECES + 1;\n   enum machine_mode mode = VOIDmode, tmode;\n@@ -1088,7 +1088,7 @@ move_by_pieces_ninsns (unsigned HOST_WIDE_INT l, unsigned int align,\n \n static void\n move_by_pieces_1 (rtx (*genfun) (rtx, ...), enum machine_mode mode,\n-\t\t  struct move_by_pieces *data)\n+\t\t  struct move_by_pieces_d *data)\n {\n   unsigned int size = GET_MODE_SIZE (mode);\n   rtx to1 = NULL_RTX, from1;\n@@ -2382,7 +2382,7 @@ store_by_pieces (rtx to, unsigned HOST_WIDE_INT len,\n \t\t rtx (*constfun) (void *, HOST_WIDE_INT, enum machine_mode),\n \t\t void *constfundata, unsigned int align, bool memsetp, int endp)\n {\n-  struct store_by_pieces data;\n+  struct store_by_pieces_d data;\n \n   if (len == 0)\n     {\n@@ -2434,7 +2434,7 @@ store_by_pieces (rtx to, unsigned HOST_WIDE_INT len,\n static void\n clear_by_pieces (rtx to, unsigned HOST_WIDE_INT len, unsigned int align)\n {\n-  struct store_by_pieces data;\n+  struct store_by_pieces_d data;\n \n   if (len == 0)\n     return;\n@@ -2462,7 +2462,7 @@ clear_by_pieces_1 (void *data ATTRIBUTE_UNUSED,\n    rtx with BLKmode).  ALIGN is maximum alignment we can assume.  */\n \n static void\n-store_by_pieces_1 (struct store_by_pieces *data ATTRIBUTE_UNUSED,\n+store_by_pieces_1 (struct store_by_pieces_d *data ATTRIBUTE_UNUSED,\n \t\t   unsigned int align ATTRIBUTE_UNUSED)\n {\n   rtx to_addr = XEXP (data->to, 0);\n@@ -2560,7 +2560,7 @@ store_by_pieces_1 (struct store_by_pieces *data ATTRIBUTE_UNUSED,\n \n static void\n store_by_pieces_2 (rtx (*genfun) (rtx, ...), enum machine_mode mode,\n-\t\t   struct store_by_pieces *data)\n+\t\t   struct store_by_pieces_d *data)\n {\n   unsigned int size = GET_MODE_SIZE (mode);\n   rtx to1, cst;"}]}