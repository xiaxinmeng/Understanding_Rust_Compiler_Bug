{"sha": "48154969d4b2e530af68ae9cd4277facf9d3f1a2", "node_id": "C_kwDOANBUbNoAKDQ4MTU0OTY5ZDRiMmU1MzBhZjY4YWU5Y2Q0Mjc3ZmFjZjlkM2YxYTI", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-21T15:55:19Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-21T15:55:19Z"}, "message": "libstdc++: Implement P2432R1 changes for views::istream\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (istream_view): Replace this function\n\ttemplate with an alias template as per P2432R1.\n\t(wistream_view): Define as per P2432R1.\n\t(views::_Istream, views::istream): Likewise.\n\t* testsuite/std/ranges/istream_view.cc (test07): New test.", "tree": {"sha": "f2ecd913098f38786b42e9ac07a582f9df5aa05e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2ecd913098f38786b42e9ac07a582f9df5aa05e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48154969d4b2e530af68ae9cd4277facf9d3f1a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48154969d4b2e530af68ae9cd4277facf9d3f1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48154969d4b2e530af68ae9cd4277facf9d3f1a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48154969d4b2e530af68ae9cd4277facf9d3f1a2/comments", "author": null, "committer": null, "parents": [{"sha": "9626e44713ac4bd3c8a04ae7e62a77fae7b771e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9626e44713ac4bd3c8a04ae7e62a77fae7b771e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9626e44713ac4bd3c8a04ae7e62a77fae7b771e0"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "7521cd675b3655bcee0d97c04618a975bcfd4c3f", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48154969d4b2e530af68ae9cd4277facf9d3f1a2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48154969d4b2e530af68ae9cd4277facf9d3f1a2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=48154969d4b2e530af68ae9cd4277facf9d3f1a2", "patch": "@@ -782,10 +782,27 @@ namespace views\n       friend _Iterator;\n     };\n \n-  template<typename _Val, typename _CharT, typename _Traits>\n-    basic_istream_view<_Val, _CharT, _Traits>\n-    istream_view(basic_istream<_CharT, _Traits>& __s)\n-    { return basic_istream_view<_Val, _CharT, _Traits>{__s}; }\n+  template<typename _Val>\n+    using istream_view = basic_istream_view<_Val, char>;\n+\n+  template<typename _Val>\n+    using wistream_view = basic_istream_view<_Val, wchar_t>;\n+\n+namespace views\n+{\n+  template<typename _Tp>\n+    struct _Istream\n+    {\n+      template<typename _CharT, typename _Traits>\n+\t[[nodiscard]]\n+\tconstexpr auto\n+\toperator()(basic_istream<_CharT, _Traits>& __e) const\n+\t{ return basic_istream_view<_Tp, _CharT, _Traits>(__e); }\n+    };\n+\n+  template<typename _Tp>\n+    inline constexpr _Istream<_Tp> istream;\n+}\n \n   // C++20 24.7 [range.adaptors] Range adaptors\n "}, {"sha": "ea7c5a35ef77a4186c60afad806582ad3214aa6c", "filename": "libstdc++-v3/testsuite/std/ranges/istream_view.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48154969d4b2e530af68ae9cd4277facf9d3f1a2/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fistream_view.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48154969d4b2e530af68ae9cd4277facf9d3f1a2/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fistream_view.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fistream_view.cc?ref=48154969d4b2e530af68ae9cd4277facf9d3f1a2", "patch": "@@ -103,6 +103,18 @@ test06()\n   static_assert( std::is_same_v<V, W> );\n }\n \n+void\n+test07()\n+{\n+  // P2432R1, views::istream\n+  auto nums = std::istringstream(\"0 1 2 3 4\");\n+  ranges::istream_view<int> v(nums);\n+  int sum = 0;\n+  for (int val : views::istream<int>(nums))\n+    sum += val;\n+  VERIFY( sum == 10 );\n+}\n+\n int\n main()\n {\n@@ -112,4 +124,5 @@ main()\n   test04();\n   test05();\n   test06();\n+  test07();\n }"}]}