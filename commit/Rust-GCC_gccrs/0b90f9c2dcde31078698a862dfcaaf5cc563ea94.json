{"sha": "0b90f9c2dcde31078698a862dfcaaf5cc563ea94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI5MGY5YzJkY2RlMzEwNzg2OThhODYyZGZjYWFmNWNjNTYzZWE5NA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-10-04T20:53:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1994-10-04T20:53:02Z"}, "message": "If the POSIX.1 wait macros are defined, use them.\n\nFrom-SVN: r8213", "tree": {"sha": "8a014280d417c4ddd255ddba5eab01de2180301a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a014280d417c4ddd255ddba5eab01de2180301a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b90f9c2dcde31078698a862dfcaaf5cc563ea94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b90f9c2dcde31078698a862dfcaaf5cc563ea94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b90f9c2dcde31078698a862dfcaaf5cc563ea94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b90f9c2dcde31078698a862dfcaaf5cc563ea94/comments", "author": null, "committer": null, "parents": [{"sha": "713225d41db4603c3b42a96b7017190088f05623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713225d41db4603c3b42a96b7017190088f05623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713225d41db4603c3b42a96b7017190088f05623"}], "stats": {"total": 72, "additions": 57, "deletions": 15}, "files": [{"sha": "d810aca6e062dd090c514392e4c0434540e8fd33", "filename": "gcc/collect2.c", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b90f9c2dcde31078698a862dfcaaf5cc563ea94/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b90f9c2dcde31078698a862dfcaaf5cc563ea94/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=0b90f9c2dcde31078698a862dfcaaf5cc563ea94", "patch": "@@ -79,6 +79,19 @@ extern int sys_nerr;\n #define X_OK 1\n #endif\n \n+#ifndef WIFSIGNALED\n+#define WIFSIGNALED(S) (((S) & 0xff) != 0 && ((S) & 0xff) != 0x7f)\n+#endif\n+#ifndef WTERMSIG\n+#define WTERMSIG(S) ((S) & 0x7f)\n+#endif\n+#ifndef WIFEXITED\n+#define WIFEXITED(S) (((S) & 0xff) == 0)\n+#endif\n+#ifndef WEXITSTATUS\n+#define WEXITSTATUS(S) (((S) & 0xff00) >> 8)\n+#endif\n+\n /* On MSDOS, write temp files in current dir\n    because there's no place else we can expect to use.  */\n #ifdef __MSDOS__\n@@ -1254,11 +1267,9 @@ do_wait (prog)\n   wait (&status);\n   if (status)\n     {\n-      int sig = status & 0x7F;\n-      int ret;\n-\n-      if (sig != -1 && sig != 0)\n+      if (WIFSIGNALED (status))\n \t{\n+\t  int sig = WTERMSIG (status);\n #ifdef NO_SYS_SIGLIST\n \t  error (\"%s terminated with signal %d %s\",\n \t\t prog,\n@@ -1275,11 +1286,14 @@ do_wait (prog)\n \t  my_exit (127);\n \t}\n \n-      ret = ((status & 0xFF00) >> 8);\n-      if (ret != -1 && ret != 0)\n+      if (WIFEXITED (status))\n \t{\n-\t  error (\"%s returned %d exit status\", prog, ret);\n-\t  my_exit (ret);\n+\t  int ret = WEXITSTATUS (status);\n+\t  if (ret != 0)\n+\t    {\n+\t      error (\"%s returned %d exit status\", prog, ret);\n+\t      my_exit (ret);\n+\t    }\n \t}\n     }\n }"}, {"sha": "e1e870e6423935cbf770888944846f5917b255aa", "filename": "gcc/gcc.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b90f9c2dcde31078698a862dfcaaf5cc563ea94/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b90f9c2dcde31078698a862dfcaaf5cc563ea94/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=0b90f9c2dcde31078698a862dfcaaf5cc563ea94", "patch": "@@ -60,6 +60,19 @@ compilation is specified by a string called a \"spec\".  */\n #define X_OK 1\n #endif\n \n+#ifndef WIFSIGNALED\n+#define WIFSIGNALED(S) (((S) & 0xff) != 0 && ((S) & 0xff) != 0x7f)\n+#endif\n+#ifndef WTERMSIG\n+#define WTERMSIG(S) ((S) & 0x7f)\n+#endif\n+#ifndef WIFEXITED\n+#define WIFEXITED(S) (((S) & 0xff) == 0)\n+#endif\n+#ifndef WEXITSTATUS\n+#define WEXITSTATUS(S) (((S) & 0xff00) >> 8)\n+#endif\n+\n /* Add prototype support.  */\n #ifndef PROTO\n #if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n@@ -2262,13 +2275,15 @@ execute ()\n \t      if (commands[j].pid == pid)\n \t\tprog = commands[j].prog;\n \n-\t    if ((status & 0x7F) != 0)\n+\t    if (WIFSIGNALED (status))\n \t      {\n \t\tfatal (\"Internal compiler error: program %s got fatal signal %d\",\n-\t\t       prog, (status & 0x7F));\n+\t\t       prog, WTERMSIG (status));\n \t\tsignal_count++;\n+\t\tret_code = -1;\n \t      }\n-\t    if (((status & 0xFF00) >> 8) >= MIN_FATAL_STATUS)\n+\t    else if (WIFEXITED (status)\n+\t\t     && WEXITSTATUS (status) >= MIN_FATAL_STATUS)\n \t      ret_code = -1;\n \t  }\n       }"}, {"sha": "f79871ee251c2b77f00ae51ccaece0d9b675f8ef", "filename": "gcc/protoize.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b90f9c2dcde31078698a862dfcaaf5cc563ea94/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b90f9c2dcde31078698a862dfcaaf5cc563ea94/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=0b90f9c2dcde31078698a862dfcaaf5cc563ea94", "patch": "@@ -132,6 +132,19 @@ typedef char * const_pointer_type;\n #define O_RDONLY        0\n #define O_WRONLY        1\n \n+#ifndef WIFSIGNALED\n+#define WIFSIGNALED(S) (((S) & 0xff) != 0 && ((S) & 0xff) != 0x7f)\n+#endif\n+#ifndef WTERMSIG\n+#define WTERMSIG(S) ((S) & 0x7f)\n+#endif\n+#ifndef WIFEXITED\n+#define WIFEXITED(S) (((S) & 0xff) == 0)\n+#endif\n+#ifndef WEXITSTATUS\n+#define WEXITSTATUS(S) (((S) & 0xff00) >> 8)\n+#endif\n+\n /* Declaring stat or __flsbuf with a prototype\n    causes conflicts with system headers on some systems.  */\n \n@@ -2090,16 +2103,16 @@ gen_aux_info_file (base_filename)\n \t\t     pname, sys_errlist[errno]);\n             return 0;\n           }\n-\tif ((wait_status & 0x7F) != 0)\n+\tif (WIFSIGNALED (wait_status))\n \t  {\n \t    fprintf (stderr, \"%s: subprocess got fatal signal %d\",\n-\t\t     pname, (wait_status & 0x7F));\n+\t\t     pname, WTERMSIG (wait_status));\n \t    return 0;\n \t  }\n-\tif (((wait_status & 0xFF00) >> 8) != 0)\n+\tif (WIFEXITED (wait_status) && WEXITSTATUS (wait_status) != 0)\n \t  {\n \t    fprintf (stderr, \"%s: %s exited with status %d\\n\",\n-\t\t     pname, base_filename, ((wait_status & 0xFF00) >> 8));\n+\t\t     pname, base_filename, WEXITSTATUS (wait_status));\n \t    return 0;\n \t  }\n \treturn 1;"}]}