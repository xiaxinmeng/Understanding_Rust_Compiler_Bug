{"sha": "f69bc49776f95f4cef791f96884739c319058278", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY5YmM0OTc3NmY5NWY0Y2VmNzkxZjk2ODg0NzM5YzMxOTA1ODI3OA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-12-11T19:18:59Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-12-11T19:18:59Z"}, "message": "ClassLoader.java (loadedClasses): New field.\n\n\t* java/lang/ClassLoader.java (loadedClasses): New field.\n\t(defineClass): Fixed indentation.  Put new class in\n\tloadedClasses.\n\t(findLoadedClass): Implement here.\n\t* java/lang/natClassLoader.cc (findLoadedClass): Removed.\n\nFrom-SVN: r60043", "tree": {"sha": "3e002364cfa458275995352fb8c5730532048616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e002364cfa458275995352fb8c5730532048616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f69bc49776f95f4cef791f96884739c319058278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f69bc49776f95f4cef791f96884739c319058278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f69bc49776f95f4cef791f96884739c319058278", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f69bc49776f95f4cef791f96884739c319058278/comments", "author": null, "committer": null, "parents": [{"sha": "70a72ca423ac2ca9d5541ef1b940e4dd319b9d07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70a72ca423ac2ca9d5541ef1b940e4dd319b9d07"}], "stats": {"total": 73, "additions": 43, "deletions": 30}, "files": [{"sha": "af421ed0e70632c9513e793f30fcce7d911fc5fb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f69bc49776f95f4cef791f96884739c319058278/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f69bc49776f95f4cef791f96884739c319058278/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f69bc49776f95f4cef791f96884739c319058278", "patch": "@@ -1,3 +1,11 @@\n+2002-12-11  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/ClassLoader.java (loadedClasses): New field.\n+\t(defineClass): Fixed indentation.  Put new class in\n+\tloadedClasses.\n+\t(findLoadedClass): Implement here.\n+\t* java/lang/natClassLoader.cc (findLoadedClass): Removed.\n+\n 2002-12-10  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in: Rebuilt."}, {"sha": "00cf011fac02e90bc6eaa45b15229401893d0721", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 35, "deletions": 24, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f69bc49776f95f4cef791f96884739c319058278/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f69bc49776f95f4cef791f96884739c319058278/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=f69bc49776f95f4cef791f96884739c319058278", "patch": "@@ -86,6 +86,14 @@\n  */\n public abstract class ClassLoader\n {\n+  /**\n+   * All classes loaded by this classloader. VM's may choose to implement\n+   * this cache natively; but it is here available for use if necessary. It\n+   * is not private in order to allow native code (and trusted subclasses)\n+   * access to this field.\n+   */\n+  final Map loadedClasses = new HashMap();\n+\n   /**\n    * The desired assertion status of classes loaded by this loader, if not\n    * overridden by package or class instructions.\n@@ -446,31 +454,32 @@ protected final synchronized Class defineClass(String name,\n       throw new java.lang.LinkageError (\"class \" \n \t\t\t\t\t+ name \n \t\t\t\t\t+ \" already loaded\");\n-    \n+\n     if (protectionDomain == null)\n       protectionDomain = defaultProtectionDomain;\n \n-    try {\n-      // Since we're calling into native code here, \n-      // we better make sure that any generated\n-      // exception is to spec!\n-\n-      return defineClass0 (name, data, off, len, protectionDomain);\n-\n-    } catch (LinkageError x) {\n-      throw x;\t\t// rethrow\n-\n-    } catch (java.lang.VirtualMachineError x) {\n-      throw x;\t\t// rethrow\n-\n-    } catch (java.lang.Throwable x) {\n-      // This should never happen, or we are beyond spec.  \n-      \n-      throw new InternalError (\"Unexpected exception \"\n-\t\t\t       + \"while defining class \"\n-\t\t\t       + name + \": \" \n-\t\t\t       + x.toString ());\n-    }\n+    try\n+      {\n+\tClass retval = defineClass0 (name, data, off, len, protectionDomain);\n+\tloadedClasses.put(retval.getName(), retval);\n+\treturn retval;\n+      }\n+    catch (LinkageError x)\n+      {\n+\tthrow x;\t\t// rethrow\n+      }\n+    catch (java.lang.VirtualMachineError x)\n+      {\n+\tthrow x;\t\t// rethrow\n+      }\n+    catch (java.lang.Throwable x)\n+      {\n+\t// This should never happen, or we are beyond spec.  \n+      \tthrow new InternalError (\"Unexpected exception \"\n+\t\t\t\t + \"while defining class \"\n+\t\t\t\t + name + \": \" \n+\t\t\t\t + x.toString ());\n+      }\n   }\n \n   /** This is the entry point of defineClass into the native code */\n@@ -722,8 +731,10 @@ protected final void setSigners(Class c, Object[] signers)\n    * @param     name  class to find.\n    * @return    the class loaded, or null.\n    */ \n-  protected final native Class findLoadedClass(String name);\n-\n+  protected final Class findLoadedClass(String name)\n+  {\n+    return (Class) loadedClasses.get(name);\n+  }\n \n   /**\n    * Get a resource using the system classloader."}, {"sha": "aeee08a62659eae88b2f6303032a07f48b88bba5", "filename": "libjava/java/lang/natClassLoader.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f69bc49776f95f4cef791f96884739c319058278/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f69bc49776f95f4cef791f96884739c319058278/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClassLoader.cc?ref=f69bc49776f95f4cef791f96884739c319058278", "patch": "@@ -189,12 +189,6 @@ java::lang::VMClassLoader::getPrimitiveClass (jchar type)\n   return _Jv_FindClassFromSignature (sig, NULL);\n }\n \n-jclass\n-java::lang::ClassLoader::findLoadedClass (jstring name)\n-{\n-  return _Jv_FindClassInCache (_Jv_makeUtf8Const (name), this);\n-}\n-\n /** This function does class-preparation for compiled classes.  \n     NOTE: It contains replicated functionality from\n     _Jv_ResolvePoolEntry, and this is intentional, since that function"}]}