{"sha": "ab95fe61fea38fbac7f4e00abd32c2530532351a", "node_id": "C_kwDOANBUbNoAKGFiOTVmZTYxZmVhMzhmYmFjN2Y0ZTAwYWJkMzJjMjUzMDUzMjM1MWE", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-02-02T10:51:38Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-02-02T10:51:38Z"}, "message": "AArch64: use canonical ordering for complex mul, fma and fms\n\nAfter the first patch in the series this updates the optabs to expect the\ncanonical sequence.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/102819\n\tPR tree-optimization/103169\n\t* config/aarch64/aarch64-simd.md (cml<fcmac1><conj_op><mode>4): Use\n\tcanonical order.\n\t* config/aarch64/aarch64-sve.md (cml<fcmac1><conj_op><mode>4): Likewise.", "tree": {"sha": "d85447ba2281fd95c0c2b53eea8e2ef6ab2a5925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d85447ba2281fd95c0c2b53eea8e2ef6ab2a5925"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab95fe61fea38fbac7f4e00abd32c2530532351a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab95fe61fea38fbac7f4e00abd32c2530532351a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab95fe61fea38fbac7f4e00abd32c2530532351a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab95fe61fea38fbac7f4e00abd32c2530532351a/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55d83cdf23b5f284b4e0bd0a6d1af3d947b2e7c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d83cdf23b5f284b4e0bd0a6d1af3d947b2e7c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d83cdf23b5f284b4e0bd0a6d1af3d947b2e7c3"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "13255be84fd2bd621a01905289c7a4e9363b6819", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab95fe61fea38fbac7f4e00abd32c2530532351a/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab95fe61fea38fbac7f4e00abd32c2530532351a/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=ab95fe61fea38fbac7f4e00abd32c2530532351a", "patch": "@@ -556,17 +556,17 @@\n ;; remainder.  Because of this, expand early.\n (define_expand \"cml<fcmac1><conj_op><mode>4\"\n   [(set (match_operand:VHSDF 0 \"register_operand\")\n-\t(plus:VHSDF (match_operand:VHSDF 1 \"register_operand\")\n-\t\t    (unspec:VHSDF [(match_operand:VHSDF 2 \"register_operand\")\n-\t\t\t\t   (match_operand:VHSDF 3 \"register_operand\")]\n-\t\t\t\t   FCMLA_OP)))]\n+\t(plus:VHSDF (unspec:VHSDF [(match_operand:VHSDF 1 \"register_operand\")\n+\t\t\t\t   (match_operand:VHSDF 2 \"register_operand\")]\n+\t\t\t\t   FCMLA_OP)\n+\t\t    (match_operand:VHSDF 3 \"register_operand\")))]\n   \"TARGET_COMPLEX && !BYTES_BIG_ENDIAN\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n-  emit_insn (gen_aarch64_fcmla<rotsplit1><mode> (tmp, operands[1],\n-\t\t\t\t\t\t operands[3], operands[2]));\n+  emit_insn (gen_aarch64_fcmla<rotsplit1><mode> (tmp, operands[3],\n+\t\t\t\t\t\t operands[2], operands[1]));\n   emit_insn (gen_aarch64_fcmla<rotsplit2><mode> (operands[0], tmp,\n-\t\t\t\t\t\t operands[3], operands[2]));\n+\t\t\t\t\t\t operands[2], operands[1]));\n   DONE;\n })\n "}, {"sha": "bd60e65b0c3f05f1c931f03807170f3b9d699de5", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab95fe61fea38fbac7f4e00abd32c2530532351a/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab95fe61fea38fbac7f4e00abd32c2530532351a/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=ab95fe61fea38fbac7f4e00abd32c2530532351a", "patch": "@@ -7278,11 +7278,11 @@\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn\n     (gen_aarch64_pred_fcmla<sve_rot1><mode> (tmp, operands[4],\n-\t\t\t\t\t     operands[3], operands[2],\n-\t\t\t\t\t     operands[1], operands[5]));\n+\t\t\t\t\t     operands[2], operands[1],\n+\t\t\t\t\t     operands[3], operands[5]));\n   emit_insn\n     (gen_aarch64_pred_fcmla<sve_rot2><mode> (operands[0], operands[4],\n-\t\t\t\t\t     operands[3], operands[2],\n+\t\t\t\t\t     operands[2], operands[1],\n \t\t\t\t\t     tmp, operands[5]));\n   DONE;\n })"}]}