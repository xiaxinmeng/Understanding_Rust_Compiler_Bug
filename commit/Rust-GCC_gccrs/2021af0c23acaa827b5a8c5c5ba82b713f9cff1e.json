{"sha": "2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyMWFmMGMyM2FjYWE4MjdiNWE4YzVjNWJhODJiNzEzZjljZmYxZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-17T08:41:17Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-17T09:37:34Z"}, "message": "gcc-changelog: Support 'Backported from master'.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Print 'Backported from master'\n\theading to backported commits.\n\t* gcc-changelog/test_email.py: Test it.\n\t* gcc-changelog/test_patches.txt: Add new patch.\n\t* gcc-changelog/git_repository.py: Add commit_to_date hook.\n\t* gcc-changelog/git_email.py: Add fuzzy implementation\n\tof commit_to_date_hook.", "tree": {"sha": "334125cdf41c3dc8c1b707c56e390270deb54673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/334125cdf41c3dc8c1b707c56e390270deb54673"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7p5F4ACgkQTcGC3A+n\nN4UxqAf+JR7v3bAE5S/I6Up237zsDJAfF0aFDGF5LxylG6tpUwWcdqnJGqH+5ttU\nT4/v8C+BSWaFMtFWBmOMl+fpLsxi6diAzFx+fPezY6JrnTPe5jxp05UXuK5Hnjct\nuagV/VuIek6rOgJlExJZ12n0H92MHR6TzdY5LA6TO4zBe8g5nbjbdkqvf2hnL3U9\nTAkF2RiX+ME/3B37Okuys3fenu3o7tV/2Bm/9cx0aiANf9zLpju2DNSaP4dpLWQH\njNkLKzFV0darqV1/pNsuueWVFUYaw7Q5uLrjU1G7ecMy9q2LMMrtmAqOtxm8gke9\nRgQSgfEYUGyzSbkeyITeE2Ixgu0hbA==\n=77uN\n-----END PGP SIGNATURE-----", "payload": "tree 334125cdf41c3dc8c1b707c56e390270deb54673\nparent f062c3f11505b70c5275e5bc0e52f3e441f8afbc\nauthor Martin Liska <mliska@suse.cz> 1592383277 +0200\ncommitter Martin Liska <mliska@suse.cz> 1592386654 +0200\n\ngcc-changelog: Support 'Backported from master'.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Print 'Backported from master'\n\theading to backported commits.\n\t* gcc-changelog/test_email.py: Test it.\n\t* gcc-changelog/test_patches.txt: Add new patch.\n\t* gcc-changelog/git_repository.py: Add commit_to_date hook.\n\t* gcc-changelog/git_email.py: Add fuzzy implementation\n\tof commit_to_date_hook.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f062c3f11505b70c5275e5bc0e52f3e441f8afbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f062c3f11505b70c5275e5bc0e52f3e441f8afbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f062c3f11505b70c5275e5bc0e52f3e441f8afbc"}], "stats": {"total": 90, "additions": 80, "deletions": 10}, "files": [{"sha": "ab9fdbd52fd7f94a312a8c244906c205ca1c51c7", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "patch": "@@ -163,6 +163,7 @@\n REVIEW_PREFIXES = ('reviewed-by: ', 'reviewed-on: ', 'signed-off-by: ',\n                    'acked-by: ', 'tested-by: ', 'reported-by: ',\n                    'suggested-by: ')\n+DATE_FORMAT = '%Y-%m-%d'\n \n \n class Error:\n@@ -246,7 +247,7 @@ def contains_author(self, author):\n \n class GitCommit:\n     def __init__(self, hexsha, date, author, body, modified_files,\n-                 strict=True):\n+                 strict=True, commit_to_date_hook=None):\n         self.hexsha = hexsha\n         self.lines = body\n         self.modified_files = modified_files\n@@ -259,6 +260,8 @@ def __init__(self, hexsha, date, author, body, modified_files,\n         self.top_level_authors = []\n         self.co_authors = []\n         self.top_level_prs = []\n+        self.cherry_pick_commit = None\n+        self.commit_to_date_hook = commit_to_date_hook\n \n         project_files = [f for f in self.modified_files\n                          if self.is_changelog_filename(f[0])\n@@ -402,6 +405,8 @@ def parse_changelog(self):\n                 elif lowered_line.startswith(REVIEW_PREFIXES):\n                     continue\n                 elif line.startswith(CHERRY_PICK_PREFIX):\n+                    commit = line[len(CHERRY_PICK_PREFIX):].rstrip(')')\n+                    self.cherry_pick_commit = commit\n                     continue\n \n                 # ChangeLog name will be deduced later\n@@ -592,24 +597,42 @@ def check_for_correct_changelog(self):\n                     err = Error(msg % (entry.folder, changelog_location), file)\n                     self.errors.append(err)\n \n+    @classmethod\n+    def format_authors_in_changelog(cls, authors, timestamp, prefix=''):\n+        output = ''\n+        for i, author in enumerate(authors):\n+            if i == 0:\n+                output += '%s%s  %s\\n' % (prefix, timestamp, author)\n+            else:\n+                output += '%s\\t    %s\\n' % (prefix, author)\n+        output += '\\n'\n+        return output\n+\n     def to_changelog_entries(self, use_commit_ts=False):\n+        current_timestamp = self.date.strftime(DATE_FORMAT)\n         for entry in self.changelog_entries:\n             output = ''\n             timestamp = entry.datetime\n+            if self.cherry_pick_commit:\n+                timestamp = self.commit_to_date_hook(self.cherry_pick_commit)\n+                if timestamp:\n+                    timestamp = timestamp.strftime(DATE_FORMAT)\n             if not timestamp or use_commit_ts:\n-                timestamp = self.date.strftime('%Y-%m-%d')\n+                timestamp = current_timestamp\n             authors = entry.authors if entry.authors else [self.author]\n             # add Co-Authored-By authors to all ChangeLog entries\n             for author in self.co_authors:\n                 if author not in authors:\n                     authors.append(author)\n \n-            for i, author in enumerate(authors):\n-                if i == 0:\n-                    output += '%s  %s\\n' % (timestamp, author)\n-                else:\n-                    output += '\\t    %s\\n' % author\n-            output += '\\n'\n+            if self.cherry_pick_commit:\n+                output += self.format_authors_in_changelog([self.author],\n+                                                           current_timestamp)\n+                output += '\\tBackported from master:\\n'\n+                output += self.format_authors_in_changelog(authors,\n+                                                           timestamp, '\\t')\n+            else:\n+                output += self.format_authors_in_changelog(authors, timestamp)\n             for pr in entry.prs:\n                 output += '\\t%s\\n' % pr\n             for line in entry.lines:"}, {"sha": "2083d7b7ec9af3904b4f2ab3299ccac33b4933bf", "filename": "contrib/gcc-changelog/git_email.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Fgit_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Fgit_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_email.py?ref=2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "patch": "@@ -67,7 +67,7 @@ def __init__(self, filename, strict=False):\n                 t = 'M'\n             modified_files.append((target, t))\n         super().__init__(None, date, author, body, modified_files,\n-                         strict=strict)\n+                         strict=strict, commit_to_date_hook=lambda x: date)\n \n \n # With zero arguments, process every patch file in the ./patches directory."}, {"sha": "a419bd97701b3598d792ef704b2c4dfd37c98312", "filename": "contrib/gcc-changelog/git_repository.py", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Fgit_repository.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Fgit_repository.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_repository.py?ref=2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "patch": "@@ -32,6 +32,13 @@\n def parse_git_revisions(repo_path, revisions, strict=False):\n     repo = Repo(repo_path)\n \n+    def commit_to_date(commit):\n+        try:\n+            c = repo.commit(commit)\n+            return datetime.utcfromtimestamp(c.committed_date)\n+        except ValueError:\n+            return None\n+\n     parsed_commits = []\n     if '..' in revisions:\n         commits = list(repo.iter_commits(revisions))\n@@ -60,6 +67,7 @@ def parse_git_revisions(repo_path, revisions, strict=False):\n         author = '%s  <%s>' % (commit.author.name, commit.author.email)\n         git_commit = GitCommit(commit.hexsha, date, author,\n                                commit.message.split('\\n'), modified_files,\n-                               strict=strict)\n+                               strict=strict,\n+                               commit_to_date_hook=commit_to_date)\n         parsed_commits.append(git_commit)\n     return parsed_commits"}, {"sha": "1c9f8847fe76ef6be21da8b64fae5773bf57c8fe", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "patch": "@@ -351,3 +351,13 @@ def test_parse_git_name_status(self):\n         assert len(modified_files) == 3\n         assert modified_files[1] == ('gcc/ada/libgnat/s-atopar.adb', 'D')\n         assert modified_files[2] == ('gcc/ada/libgnat/s-aoinar.adb', 'A')\n+\n+    def test_backport(self):\n+        email = self.from_patch_glob('0001-asan-fix-RTX-emission.patch')\n+        assert not email.errors\n+        assert len(email.changelog_entries) == 1\n+        entry = list(email.to_changelog_entries())[0][1]\n+        assert entry.startswith('2020-06-11  Martin Liska  <mliska@suse.cz>')\n+        assert '\\tBackported from master:' in entry\n+        assert '\\t2020-06-11  Martin Liska  <mliska@suse.cz>' in entry\n+        assert '\\t\\t    Jakub Jelinek  <jakub@redhat.com>' in entry"}, {"sha": "1463fb94936142a930da37fc72ad9bf1ca6b0171", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2021af0c23acaa827b5a8c5c5ba82b713f9cff1e/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=2021af0c23acaa827b5a8c5c5ba82b713f9cff1e", "patch": "@@ -3131,3 +3131,32 @@ index 60d83c30771..9e7efd13ecc 100644\n +\n -- \n 2.26.2\n+\n+=== 0001-asan-fix-RTX-emission.patch ===\n+From e1d68582022cfa2b1dc76646724b397ba2739439 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Thu, 11 Jun 2020 09:34:41 +0200\n+Subject: [PATCH] asan: fix RTX emission for ilp32\n+\n+gcc/ChangeLog:\n+\n+\tPR sanitizer/95634\n+\t* asan.c (asan_emit_stack_protection): Fix emission for ilp32\n+\tby using Pmode instead of ptr_mode.\n+\n+Co-Authored-By: Jakub Jelinek <jakub@redhat.com>\n+(cherry picked from commit 8cff672cb9a132d3d3158c2edfc9a64b55292b80)\n+---\n+ gcc/asan.c | 1 +\n+ 1 file changed, 1 insertion(+)\n+\n+diff --git a/gcc/asan.c b/gcc/asan.c\n+index 823eb539993..4ec22162c12 100644\n+--- a/gcc/asan.c\n++++ b/gcc/asan.c\n+@@ -1 +1,2 @@\n+ \n++\n+-- \n+2.27.0\n+"}]}