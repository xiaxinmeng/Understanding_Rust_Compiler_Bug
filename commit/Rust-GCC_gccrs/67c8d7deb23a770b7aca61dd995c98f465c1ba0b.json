{"sha": "67c8d7deb23a770b7aca61dd995c98f465c1ba0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjOGQ3ZGViMjNhNzcwYjdhY2E2MWRkOTk1Yzk4ZjQ2NWMxYmEwYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-05T23:13:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-05T23:13:31Z"}, "message": "(contains_placeholder): Return 0 for WITH_RECORD_EXPR.\n\nFrom-SVN: r5620", "tree": {"sha": "c43e3bdfbc6f61a90d92ad54a0b0567d2c92d05f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c43e3bdfbc6f61a90d92ad54a0b0567d2c92d05f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67c8d7deb23a770b7aca61dd995c98f465c1ba0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c8d7deb23a770b7aca61dd995c98f465c1ba0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67c8d7deb23a770b7aca61dd995c98f465c1ba0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c8d7deb23a770b7aca61dd995c98f465c1ba0b/comments", "author": null, "committer": null, "parents": [{"sha": "518e5ce827c8c11174503f024d401aaec006784b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518e5ce827c8c11174503f024d401aaec006784b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518e5ce827c8c11174503f024d401aaec006784b"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "bc4af6e83b023822419b250efeacc49af67bc4a8", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c8d7deb23a770b7aca61dd995c98f465c1ba0b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c8d7deb23a770b7aca61dd995c98f465c1ba0b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=67c8d7deb23a770b7aca61dd995c98f465c1ba0b", "patch": "@@ -1887,6 +1887,11 @@ contains_placeholder_p (exp)\n   register enum tree_code code = TREE_CODE (exp);\n   tree inner;\n \n+  /* If we have a WITH_RECORD_EXPR, it \"cancels\" any PLACEHOLDER_EXPR\n+     in it since it is supplying a value for it.  */\n+  if (code == WITH_RECORD_EXPR)\n+    return 0;\n+\n   switch (TREE_CODE_CLASS (code))\n     {\n     case 'r':"}]}