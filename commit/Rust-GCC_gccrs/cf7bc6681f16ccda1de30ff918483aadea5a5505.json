{"sha": "cf7bc6681f16ccda1de30ff918483aadea5a5505", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y3YmM2NjgxZjE2Y2NkYTFkZTMwZmY5MTg0ODNhYWRlYTVhNTUwNQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-03-07T08:48:57Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2008-03-07T08:48:57Z"}, "message": "c-common.c (vector_types_convertible_p): Call langhook instead of comptypes.\n\n2008-03-07  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* c-common.c (vector_types_convertible_p): Call langhook\n\tinstead of comptypes.\n\ncp:\n2008-03-07  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* cp-objcp-common.c (cxx_types_compatible_p): Remove obsolete\n\ttest for equivalence between pointer and references.\n\nFrom-SVN: r133002", "tree": {"sha": "d0a8a63f1d083ee8be3bd90899f0a3bca212b063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0a8a63f1d083ee8be3bd90899f0a3bca212b063"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf7bc6681f16ccda1de30ff918483aadea5a5505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7bc6681f16ccda1de30ff918483aadea5a5505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf7bc6681f16ccda1de30ff918483aadea5a5505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7bc6681f16ccda1de30ff918483aadea5a5505/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83644cd5009a9bbd7d30d741251ceabb6e8604d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83644cd5009a9bbd7d30d741251ceabb6e8604d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83644cd5009a9bbd7d30d741251ceabb6e8604d7"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "783ad5e147cf1fd21f7740fceb32885f7f165e27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7bc6681f16ccda1de30ff918483aadea5a5505/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7bc6681f16ccda1de30ff918483aadea5a5505/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf7bc6681f16ccda1de30ff918483aadea5a5505", "patch": "@@ -1,3 +1,8 @@\n+2008-03-07  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* c-common.c (vector_types_convertible_p): Call langhook\n+\tinstead of comptypes.\n+\n 2008-03-06  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/35402"}, {"sha": "2bc74348e6a9f734eee7fd4997a54d83f61884df", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7bc6681f16ccda1de30ff918483aadea5a5505/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7bc6681f16ccda1de30ff918483aadea5a5505/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=cf7bc6681f16ccda1de30ff918483aadea5a5505", "patch": "@@ -1196,7 +1196,7 @@ vector_types_convertible_p (const_tree t1, const_tree t2, bool emit_lax_note)\n     return convertible_lax;\n \n   if (TYPE_VECTOR_SUBPARTS (t1) == TYPE_VECTOR_SUBPARTS (t2)\n-      && comptypes (TREE_TYPE (t1), TREE_TYPE (t2)))\n+      && lang_hooks.types_compatible_p (TREE_TYPE (t1), TREE_TYPE (t2)))\n     return true;\n \n   if (emit_lax_note && !emitted_lax_note)"}, {"sha": "df3fc96638a58a9995d7907b1cba4f51f589fa42", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7bc6681f16ccda1de30ff918483aadea5a5505/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7bc6681f16ccda1de30ff918483aadea5a5505/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cf7bc6681f16ccda1de30ff918483aadea5a5505", "patch": "@@ -1,3 +1,8 @@\n+2008-03-07  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* cp-objcp-common.c (cxx_types_compatible_p): Remove obsolete\n+\ttest for equivalence between pointer and references.\n+\n 2008-03-02  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR 24924"}, {"sha": "140541db05fb94ddefbdebff941659057b0f2ee8", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7bc6681f16ccda1de30ff918483aadea5a5505/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7bc6681f16ccda1de30ff918483aadea5a5505/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=cf7bc6681f16ccda1de30ff918483aadea5a5505", "patch": "@@ -185,19 +185,7 @@ cxx_initialize_diagnostics (diagnostic_context *context)\n int\n cxx_types_compatible_p (tree x, tree y)\n {\n-  if (same_type_ignoring_top_level_qualifiers_p (x, y))\n-    return 1;\n-\n-  /* Once we get to the middle-end, references and pointers are\n-     interchangeable.  FIXME should we try to replace all references with\n-     pointers?  */\n-  if (POINTER_TYPE_P (x) && POINTER_TYPE_P (y)\n-      && TYPE_MODE (x) == TYPE_MODE (y)\n-      && TYPE_REF_CAN_ALIAS_ALL (x) == TYPE_REF_CAN_ALIAS_ALL (y)\n-      && same_type_p (TREE_TYPE (x), TREE_TYPE (y)))\n-    return 1;\n-\n-  return 0;\n+  return same_type_ignoring_top_level_qualifiers_p (x, y);\n }\n \n tree"}]}