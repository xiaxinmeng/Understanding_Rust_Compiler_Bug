{"sha": "90f062488298bd17b7a552acaff14b33c4d03cea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBmMDYyNDg4Mjk4YmQxN2I3YTU1MmFjYWZmMTRiMzNjNGQwM2NlYQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-06-05T06:18:50Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-06-05T06:18:50Z"}, "message": "dwarf2out.c (deferred_asm_name): New.\n\n* dwarf2out.c (deferred_asm_name): New.\n(add_name_and_src_coords_attributes): Defer creation of\nDW_AT_MIPS_linkage_name attribute if DECL_ASSEMBLER_NAME was not\ncomputed yet.\n(move_linkage_attr): New.\n(dwarf2out_finish): Revisit deferrals and emit attributes at the\nright place.\n\nFrom-SVN: r148199", "tree": {"sha": "5ab1ec5ff01472f6a52171ac419ef36327e34d73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ab1ec5ff01472f6a52171ac419ef36327e34d73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90f062488298bd17b7a552acaff14b33c4d03cea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f062488298bd17b7a552acaff14b33c4d03cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90f062488298bd17b7a552acaff14b33c4d03cea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f062488298bd17b7a552acaff14b33c4d03cea/comments", "author": null, "committer": null, "parents": [{"sha": "c10348e5af223f2a4be2ace859b8cda39a523e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10348e5af223f2a4be2ace859b8cda39a523e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c10348e5af223f2a4be2ace859b8cda39a523e7c"}], "stats": {"total": 77, "additions": 74, "deletions": 3}, "files": [{"sha": "3db4c9b512f21afb95ee5f9420a538999b99bc3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f062488298bd17b7a552acaff14b33c4d03cea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f062488298bd17b7a552acaff14b33c4d03cea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90f062488298bd17b7a552acaff14b33c4d03cea", "patch": "@@ -1,3 +1,13 @@\n+2009-06-05  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* dwarf2out.c (deferred_asm_name): New.\n+\t(add_name_and_src_coords_attributes): Defer creation of\n+\tDW_AT_MIPS_linkage_name attribute if DECL_ASSEMBLER_NAME was not\n+\tcomputed yet.\n+\t(move_linkage_attr): New.\n+\t(dwarf2out_finish): Revisit deferrals and emit attributes at the\n+\tright place.\n+\n 2009-06-05  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tree-nested.c (finalize_nesting_tree_1): Declare the"}, {"sha": "dc5ed24c18ae3e06ba2301c5b9f0e00a4af4c480", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 64, "deletions": 3, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f062488298bd17b7a552acaff14b33c4d03cea/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f062488298bd17b7a552acaff14b33c4d03cea/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=90f062488298bd17b7a552acaff14b33c4d03cea", "patch": "@@ -5182,6 +5182,11 @@ static GTY(()) dw_die_ref comp_unit_die;\n /* A list of DIEs with a NULL parent waiting to be relocated.  */\n static GTY(()) limbo_die_node *limbo_die_list;\n \n+/* A list of DIEs for which we may have to generate\n+   DW_AT_MIPS_linkage_name once their DECL_ASSEMBLER_NAMEs are\n+   set.  */\n+static GTY(()) limbo_die_node *deferred_asm_name;\n+\n /* Filenames referenced by this compilation unit.  */\n static GTY((param_is (struct dwarf_file_data))) htab_t file_table;\n \n@@ -12915,12 +12920,25 @@ add_name_and_src_coords_attributes (dw_die_ref die, tree decl)\n \n       if ((TREE_CODE (decl) == FUNCTION_DECL || TREE_CODE (decl) == VAR_DECL)\n \t  && TREE_PUBLIC (decl)\n-\t  && DECL_ASSEMBLER_NAME (decl) != DECL_NAME (decl)\n \t  && !DECL_ABSTRACT (decl)\n \t  && !(TREE_CODE (decl) == VAR_DECL && DECL_REGISTER (decl))\n \t  && !is_fortran ())\n-\tadd_AT_string (die, DW_AT_MIPS_linkage_name,\n-\t\t       IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\t{\n+\t  /* Defer until we have an assembler name set.  */\n+\t  if (!DECL_ASSEMBLER_NAME_SET_P (decl))\n+\t    {\n+\t      limbo_die_node *asm_name;\n+\n+\t      asm_name = GGC_CNEW (limbo_die_node);\n+\t      asm_name->die = die;\n+\t      asm_name->created_for = decl;\n+\t      asm_name->next = deferred_asm_name;\n+\t      deferred_asm_name = asm_name;\n+\t    }\n+\t  else if (DECL_ASSEMBLER_NAME (decl) != DECL_NAME (decl))\n+\t    add_AT_string (die, DW_AT_MIPS_linkage_name,\n+\t\t\t   IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\t}\n     }\n \n #ifdef VMS_DEBUGGING_INFO\n@@ -16824,6 +16842,36 @@ file_table_relative_p (void ** slot, void *param)\n   return 1;\n }\n \n+/* Move a DW_AT_MIPS_linkage_name attribute just added to dw_die_ref\n+   to the location it would have been added, should we know its\n+   DECL_ASSEMBLER_NAME when we added other attributes.  This will\n+   probably improve compactness of debug info, removing equivalent\n+   abbrevs, and hide any differences caused by deferring the\n+   computation of the assembler name, triggered by e.g. PCH.  */\n+\n+static inline void\n+move_linkage_attr (dw_die_ref die)\n+{\n+  unsigned ix = VEC_length (dw_attr_node, die->die_attr);\n+  dw_attr_node linkage = *VEC_index (dw_attr_node, die->die_attr, ix - 1);\n+\n+  gcc_assert (linkage.dw_attr == DW_AT_MIPS_linkage_name);\n+\n+  while (--ix > 0)\n+    {\n+      dw_attr_node *prev = VEC_index (dw_attr_node, die->die_attr, ix - 1);\n+\n+      if (prev->dw_attr == DW_AT_decl_line || prev->dw_attr == DW_AT_name)\n+\tbreak;\n+    }\n+\n+  if (ix != VEC_length (dw_attr_node, die->die_attr) - 1)\n+    {\n+      VEC_pop (dw_attr_node, die->die_attr);\n+      VEC_quick_insert (dw_attr_node, die->die_attr, ix, &linkage);\n+    }\n+}\n+\n /* Output stuff that dwarf requires at the end of every file,\n    and generate the DWARF-2 debugging info.  */\n \n@@ -16912,6 +16960,19 @@ dwarf2out_finish (const char *filename)\n \n   limbo_die_list = NULL;\n \n+  for (node = deferred_asm_name; node; node = node->next)\n+    {\n+      tree decl = node->created_for;\n+      if (DECL_ASSEMBLER_NAME (decl) != DECL_NAME (decl))\n+\t{\n+\t  add_AT_string (node->die, DW_AT_MIPS_linkage_name,\n+\t\t\t IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\t  move_linkage_attr (node->die);\n+\t}\n+    }\n+\n+  deferred_asm_name = NULL;\n+\n   /* Walk through the list of incomplete types again, trying once more to\n      emit full debugging info for them.  */\n   retry_incomplete_types ();"}]}