{"sha": "5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUzNDIwNmI3ZThiMjBmYzZhMWNmNDIwMDc2YjY0NjFjNDBhYjRkYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-08-20T16:03:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-08-20T16:03:58Z"}, "message": "tree-pass.h (TDF_GRAPH): Define.\n\n\t* tree-pass.h (TDF_GRAPH): Define.\n\t* tree-dump.c (dump_options): Don't set TDF_GRAPH in \"all\".\n\t* passes.c (finish_optimization_passes): Only call\n\tfinish_graph_dump_file if TDF_GRAPH is set.\n\t(execute_one_pass): Only call clean_graph_dump_file if dump_file !=\n\tNULL.  Set TDF_GRAPH bit.\n\t(execute_todo): Call print_rtl_graph_with_bb if TDF_GRAPH is set.\n\n\t* gcc.dg/20050811-1.c: New test.\n\t* gcc.dg/20050811-2.c: New test.\n\nFrom-SVN: r103304", "tree": {"sha": "a4df578ab0cd10699ab3f63bdf10bd3ac48643fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4df578ab0cd10699ab3f63bdf10bd3ac48643fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b00d752c95b349b39530e12648f5a79b3e8c0956", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00d752c95b349b39530e12648f5a79b3e8c0956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b00d752c95b349b39530e12648f5a79b3e8c0956"}], "stats": {"total": 86, "additions": 77, "deletions": 9}, "files": [{"sha": "a0eb6f1ece5a42e1febb297da9994d1a38987617", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "patch": "@@ -1,3 +1,13 @@\n+2005-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-pass.h (TDF_GRAPH): Define.\n+\t* tree-dump.c (dump_options): Don't set TDF_GRAPH in \"all\".\n+\t* passes.c (finish_optimization_passes): Only call\n+\tfinish_graph_dump_file if TDF_GRAPH is set.\n+\t(execute_one_pass): Only call clean_graph_dump_file if dump_file !=\n+\tNULL.  Set TDF_GRAPH bit.\n+\t(execute_todo): Call print_rtl_graph_with_bb if TDF_GRAPH is set.\n+\n 2005-08-20  Richard Earnshaw  <richard.earnshaw@arm.com>\n \n \t* arm.h (arm_stack_offsets): Add locals_base field."}, {"sha": "6728e105c96f0a748f0794133e203655165bd22d", "filename": "gcc/passes.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "patch": "@@ -237,12 +237,12 @@ finish_optimization_passes (void)\n   if (graph_dump_format != no_graph)\n     for (i = TDI_end; (dfi = get_dump_file_info (i)) != NULL; ++i)\n       if (dump_initialized_p (i)\n-\t  && (dfi->flags & TDF_RTL) != 0\n+\t  && (dfi->flags & TDF_GRAPH) != 0\n \t  && (name = get_dump_file_name (i)) != NULL)\n-        {\n-          finish_graph_dump_file (name);\n-          free (name);\n-        }\n+\t{\n+\t  finish_graph_dump_file (name);\n+\t  free (name);\n+\t}\n \n   timevar_pop (TV_DUMP);\n }\n@@ -708,7 +708,13 @@ execute_todo (struct tree_opt_pass *pass, unsigned int flags, bool use_required)\n         dump_function_to_file (current_function_decl,\n                                dump_file, dump_flags);\n       else if (properties & PROP_cfg)\n-        print_rtl_with_bb (dump_file, get_insns ());\n+\t{\n+\t  print_rtl_with_bb (dump_file, get_insns ());\n+\n+\t  if (graph_dump_format != no_graph\n+\t      && (dump_flags & TDF_GRAPH))\n+\t    print_rtl_graph_with_bb (dump_file_name, get_insns ());\n+\t}\n       else\n         print_rtl (dump_file, get_insns ());\n \n@@ -782,10 +788,15 @@ execute_one_pass (struct tree_opt_pass *pass)\n \t}\n \n       if (initializing_dump\n-          && graph_dump_format != no_graph\n+\t  && dump_file\n+\t  && graph_dump_format != no_graph\n \t  && (pass->properties_provided & (PROP_cfg | PROP_rtl))\n \t      == (PROP_cfg | PROP_rtl))\n-        clean_graph_dump_file (dump_file_name);\n+\t{\n+\t  get_dump_file_info (pass->static_pass_number)->flags |= TDF_GRAPH;\n+\t  dump_flags |= TDF_GRAPH;\n+\t  clean_graph_dump_file (dump_file_name);\n+\t}\n     }\n \n   /* If a timevar is present, start it.  */"}, {"sha": "39f7cd74cbc14f4961b2a8583ca36a548572bb42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "patch": "@@ -1,3 +1,8 @@\n+2005-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20050811-1.c: New test.\n+\t* gcc.dg/20050811-2.c: New test.\n+\n 2005-08-20  Richard Earnshaw  <richard.earnshaw@arm.com>\n \n \t* gcc.dg/arm-eabi1.c (main): Exit with 0 on success."}, {"sha": "cfc181692c1274ded3833066262c025d1352e7d7", "filename": "gcc/testsuite/gcc.dg/20050811-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftestsuite%2Fgcc.dg%2F20050811-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftestsuite%2Fgcc.dg%2F20050811-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050811-1.c?ref=5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "patch": "@@ -0,0 +1,20 @@\n+/* Test whether -dav doesn't crash.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -dav\" } */\n+\n+int foo (void)\n+{\n+  return 6;\n+}\n+\n+int bar (int x)\n+{\n+  if (x < 0)\n+    return foo () + 8;\n+  else if (x > 0)\n+    return 2 * foo ();\n+  else\n+    return foo ();\n+}\n+\n+// { dg-final { cleanup-rtl-dump \"*\" } }"}, {"sha": "2f1d48b350e80b9fc5a61315684cd27b84f80f29", "filename": "gcc/testsuite/gcc.dg/20050811-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftestsuite%2Fgcc.dg%2F20050811-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftestsuite%2Fgcc.dg%2F20050811-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050811-2.c?ref=5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "patch": "@@ -0,0 +1,20 @@\n+/* Test whether -dov doesn't crash.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -dov\" } */\n+\n+int foo (void)\n+{\n+  return 6;\n+}\n+\n+int bar (int x)\n+{\n+  if (x < 0)\n+    return foo () + 8;\n+  else if (x > 0)\n+    return 2 * foo ();\n+  else\n+    return foo ();\n+}\n+\n+// { dg-final { cleanup-rtl-dump \"postreload*\" } }"}, {"sha": "632687108e81a9afe0ca3c19918ea2e947e4f7c9", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "patch": "@@ -752,7 +752,7 @@ static const struct dump_option_value_info dump_options[] =\n   {\"uid\", TDF_UID},\n   {\"stmtaddr\", TDF_STMTADDR},\n   {\"all\", ~(TDF_RAW | TDF_SLIM | TDF_LINENO | TDF_TREE | TDF_RTL | TDF_IPA \n-\t    | TDF_STMTADDR)},\n+\t    | TDF_STMTADDR | TDF_GRAPH)},\n   {NULL, 0}\n };\n "}, {"sha": "57dc029438eeea05da849250a3cebb600819dc22", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e34206b7e8b20fc6a1cf420076b6461c40ab4da/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=5e34206b7e8b20fc6a1cf420076b6461c40ab4da", "patch": "@@ -67,6 +67,8 @@ enum tree_dump_index\n #define TDF_IPA\t\t(1 << 11)\t/* is an IPA dump */\n #define TDF_STMTADDR\t(1 << 12)\t/* Address of stmt.  */\n \n+#define TDF_GRAPH\t(1 << 13)\t/* a graph dump is being emitted */\n+\n extern char *get_dump_file_name (enum tree_dump_index);\n extern int dump_enabled_p (enum tree_dump_index);\n extern int dump_initialized_p (enum tree_dump_index);"}]}