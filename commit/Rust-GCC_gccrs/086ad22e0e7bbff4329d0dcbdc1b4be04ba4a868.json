{"sha": "086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg2YWQyMmUwZTdiYmZmNDMyOWQwZGNiZGMxYjRiZTA0YmE0YTg2OA==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-08-04T13:20:57Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-08-04T13:20:57Z"}, "message": "re PR target/70903 (wrong code with bfi @ aarch64 with -Os)\n\n2016-08-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR rtl-optimization/70903\n        * cse.c (cse_insn): If DEST is a paradoxical SUBREG, don't record DEST.\n\ntestsuite:\n2016-08-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR rtl-optimization/70903\n        * gcc.c-torture/execute/pr70903.c: New test.\n\nFrom-SVN: r239122", "tree": {"sha": "c1189eb5f7c1e72590aee39e3b908fd9838a97a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1189eb5f7c1e72590aee39e3b908fd9838a97a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a8e528cf1e5aa1a7e7fa09716a3b5b87b56dc93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a8e528cf1e5aa1a7e7fa09716a3b5b87b56dc93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a8e528cf1e5aa1a7e7fa09716a3b5b87b56dc93"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "6c41321c47a26e1298a01c0b6170ca8d8526260f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868", "patch": "@@ -1,3 +1,8 @@\n+2016-08-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR rtl-optimization/70903\n+\t* cse.c (cse_insn): If DEST is a paradoxical SUBREG, don't record DEST.\n+\n 2016-08-04  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* tree-inline.c (remap_ssa_name): Check for POINTER_TYPE_P before"}, {"sha": "0bfd7ff16699b74530368eb6e602cbd26b0e4099", "filename": "gcc/cse.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868", "patch": "@@ -5898,15 +5898,7 @@ cse_insn (rtx_insn *insn)\n \t    || GET_MODE (dest) == BLKmode\n \t    /* If we didn't put a REG_EQUAL value or a source into the hash\n \t       table, there is no point is recording DEST.  */\n-\t    || sets[i].src_elt == 0\n-\t    /* If DEST is a paradoxical SUBREG and SRC is a ZERO_EXTEND\n-\t       or SIGN_EXTEND, don't record DEST since it can cause\n-\t       some tracking to be wrong.\n-\n-\t       ??? Think about this more later.  */\n-\t    || (paradoxical_subreg_p (dest)\n-\t\t&& (GET_CODE (sets[i].src) == SIGN_EXTEND\n-\t\t    || GET_CODE (sets[i].src) == ZERO_EXTEND)))\n+\t    || sets[i].src_elt == 0)\n \t  continue;\n \n \t/* STRICT_LOW_PART isn't part of the value BEING set,\n@@ -5925,6 +5917,11 @@ cse_insn (rtx_insn *insn)\n \t      sets[i].dest_hash = HASH (dest, GET_MODE (dest));\n \t    }\n \n+\t/* If DEST is a paradoxical SUBREG, don't record DEST since the bits\n+\t   outside the mode of GET_MODE (SUBREG_REG (dest)) are undefined.  */\n+\tif (paradoxical_subreg_p (dest))\n+\t  continue;\n+\n \telt = insert (dest, sets[i].src_elt,\n \t\t      sets[i].dest_hash, GET_MODE (dest));\n "}, {"sha": "0b2a7f211a8301305d2b011cda822d019b3ce1f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868", "patch": "@@ -1,3 +1,8 @@\n+2016-08-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR rtl-optimization/70903\n+\t* gcc.c-torture/execute/pr70903.c: New test.\n+\n 2016-08-04  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/params/params.exp: Replace file exists with"}, {"sha": "6ffd0aa1641752171af33222aae6b3ed9ecb27fb", "filename": "gcc/testsuite/gcc.c-torture/execute/pr70903.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70903.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70903.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70903.c?ref=086ad22e0e7bbff4329d0dcbdc1b4be04ba4a868", "patch": "@@ -0,0 +1,38 @@\n+typedef unsigned char V8 __attribute__ ((vector_size (32)));\n+typedef unsigned int V32 __attribute__ ((vector_size (32)));\n+typedef unsigned long long V64 __attribute__ ((vector_size (32)));\n+\n+static V32 __attribute__ ((noinline, noclone))\n+foo (V64 x)\n+{\n+  V64 y = (V64)(V8){((V8)(V64){65535, x[0]})[1]};\n+  return (V32){y[0], 255};\n+}\n+\n+int main ()\n+{\n+  V32 x = foo ((V64){});\n+//  __builtin_printf (\"%08x %08x %08x %08x %08x %08x %08x %08x\\n\", x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7]);\n+  if (x[1] != 255)\n+    __builtin_abort();\n+  return 0;\n+}\n+typedef unsigned char V8 __attribute__ ((vector_size (32)));\n+typedef unsigned int V32 __attribute__ ((vector_size (32)));\n+typedef unsigned long long V64 __attribute__ ((vector_size (32)));\n+\n+static V32 __attribute__ ((noinline, noclone))\n+foo (V64 x)\n+{\n+  V64 y = (V64)(V8){((V8)(V64){65535, x[0]})[1]};\n+  return (V32){y[0], 255};\n+}\n+\n+int main ()\n+{\n+  V32 x = foo ((V64){});\n+//  __builtin_printf (\"%08x %08x %08x %08x %08x %08x %08x %08x\\n\", x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7]);\n+  if (x[1] != 255)\n+    __builtin_abort();\n+  return 0;\n+}"}]}