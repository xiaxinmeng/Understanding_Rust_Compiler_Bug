{"sha": "6895fffb46e3bc351492f92d788981807f90b444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5NWZmZmI0NmUzYmMzNTE0OTJmOTJkNzg4OTgxODA3ZjkwYjQ0NA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2015-04-23T12:36:43Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2015-04-23T12:36:43Z"}, "message": "crypto.md (crypto_vpmsum<CR_char>): Change TARGET_CRYPTO to TARGET_P8_VECTOR>\n\n[gcc]\n\n2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/crypto.md (crypto_vpmsum<CR_char>): Change\n\tTARGET_CRYPTO to TARGET_P8_VECTOR>\n\t(crypto_vpermxor_<mode>): Likewise.\n\t* config/rs6000/rs6000-builtin.def (BU_CRYPTO_2A): New #define.\n\t(BU_CRYPTO_3A): Likewise.\n\t(BU_CRYPTO_OVERLOAD_2A): Rename from BU_CRYPTO_OVERLOAD_2.\n\t(BU_CRYPTO_OVERLOAD_3A): New #define.\n\t(VPMSUMB): Change from BU_CRYPTO_2 to BU_CRYPTO_2A.\n\t(VPMSUMH): Likewise.\n\t(VPMSUMW): Likewise.\n\t(VPMSUMD): Likewise.\n\t(VPERMXOR_V2DI): Change from BU_CRYPTO_3 to BU_CRYPTO_3A.\n\t(VPERMXOR_V4SI): Likewise.\n\t(VPERMXOR_V8HI): Likewise.\n\t(VPERMXOR_V16QI): Likewise.\n\t(VPMSUM): Change from BU_CRYPTO_OVERLOAD_2 to\n\tBU_CRYPTO_OVERLOAD_2A.\n\t(VPERMXOR): Change from BU_CRYPTO_OVERLOAD3 to\n\tBU_CRYPTO_OVERLOAD_3A.\n\t* config/rs6000/rs6000.opt (mcrypto): Change description of\n\toption.\n\n[gcc/testsuite]\n\n2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/crypto-builtin-2.c: New.\n\nFrom-SVN: r222362", "tree": {"sha": "9d30eb1a2be6104c3265a8c20b233586cf0e6746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d30eb1a2be6104c3265a8c20b233586cf0e6746"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6895fffb46e3bc351492f92d788981807f90b444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6895fffb46e3bc351492f92d788981807f90b444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6895fffb46e3bc351492f92d788981807f90b444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6895fffb46e3bc351492f92d788981807f90b444/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3b0bb7a560be0f05b09287401a10c4c4b12cfc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b0bb7a560be0f05b09287401a10c4c4b12cfc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3b0bb7a560be0f05b09287401a10c4c4b12cfc6"}], "stats": {"total": 127, "additions": 112, "deletions": 15}, "files": [{"sha": "a9b43c2c2806b0410796de98fed8c8ab639e59ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6895fffb46e3bc351492f92d788981807f90b444/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6895fffb46e3bc351492f92d788981807f90b444/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6895fffb46e3bc351492f92d788981807f90b444", "patch": "@@ -1,3 +1,27 @@\n+2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/crypto.md (crypto_vpmsum<CR_char>): Change\n+\tTARGET_CRYPTO to TARGET_P8_VECTOR>\n+\t(crypto_vpermxor_<mode>): Likewise.\n+\t* config/rs6000/rs6000-builtin.def (BU_CRYPTO_2A): New #define.\n+\t(BU_CRYPTO_3A): Likewise.\n+\t(BU_CRYPTO_OVERLOAD_2A): Rename from BU_CRYPTO_OVERLOAD_2.\n+\t(BU_CRYPTO_OVERLOAD_3A): New #define.\n+\t(VPMSUMB): Change from BU_CRYPTO_2 to BU_CRYPTO_2A.\n+\t(VPMSUMH): Likewise.\n+\t(VPMSUMW): Likewise.\n+\t(VPMSUMD): Likewise.\n+\t(VPERMXOR_V2DI): Change from BU_CRYPTO_3 to BU_CRYPTO_3A.\n+\t(VPERMXOR_V4SI): Likewise.\n+\t(VPERMXOR_V8HI): Likewise.\n+\t(VPERMXOR_V16QI): Likewise.\n+\t(VPMSUM): Change from BU_CRYPTO_OVERLOAD_2 to\n+\tBU_CRYPTO_OVERLOAD_2A.\n+\t(VPERMXOR): Change from BU_CRYPTO_OVERLOAD3 to\n+\tBU_CRYPTO_OVERLOAD_3A.\n+\t* config/rs6000/rs6000.opt (mcrypto): Change description of\n+\toption.\n+\n 2015-04-23  Richard Biener  <rguenther@suse.de>\n \n \t* passes.def: Remove copy propagation passes run directly after CCP."}, {"sha": "6a2cfc60f47e508f8e7e6da21d62dc1a691ca71d", "filename": "gcc/config/rs6000/crypto.md", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Fconfig%2Frs6000%2Fcrypto.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Fconfig%2Frs6000%2Fcrypto.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcrypto.md?ref=6895fffb46e3bc351492f92d788981807f90b444", "patch": "@@ -18,6 +18,15 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n+;; NOTE: Although this file contains all the instructions from\n+;; section 5.11 of ISA 2.07, only those in sections 5.11.1 and\n+;; 5.11.2 are in Category:Vector.Crypto.  Those are the only\n+;; ones controlled by -m[no-]crypto.\n+\n+;; FIXME: The builtin names for the instructions in this file\n+;; are likely to be deprecated in favor of other names to be\n+;; agreed upon with the XL compilers and LLVM.\n+\n (define_c_enum \"unspec\"\n   [UNSPEC_VCIPHER\n    UNSPEC_VNCIPHER\n@@ -65,7 +74,7 @@\n \t(unspec:CR_mode [(match_operand:CR_mode 1 \"register_operand\" \"v\")\n \t\t\t (match_operand:CR_mode 2 \"register_operand\" \"v\")]\n \t\t\tUNSPEC_VPMSUM))]\n-  \"TARGET_CRYPTO\"\n+  \"TARGET_P8_VECTOR\"\n   \"vpmsum<CR_char> %0,%1,%2\"\n   [(set_attr \"type\" \"crypto\")])\n \n@@ -76,7 +85,7 @@\n \t\t\t (match_operand:CR_mode 2 \"register_operand\" \"v\")\n \t\t\t (match_operand:CR_mode 3 \"register_operand\" \"v\")]\n \t\t\tUNSPEC_VPERMXOR))]\n-  \"TARGET_CRYPTO\"\n+  \"TARGET_P8_VECTOR\"\n   \"vpermxor %0,%1,%2,%3\"\n   [(set_attr \"type\" \"crypto\")])\n "}, {"sha": "0f384ca2be2f2df6f2a15acf39fe5f839b8acaba", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 36, "deletions": 12, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=6895fffb46e3bc351492f92d788981807f90b444", "patch": "@@ -392,6 +392,14 @@\n \t\t     | RS6000_BTC_BINARY),\t\t\t\t\\\n \t\t    CODE_FOR_ ## ICODE)\t\t\t/* ICODE */\n \n+#define BU_CRYPTO_2A(ENUM, NAME, ATTR, ICODE)\t\t\t\t\\\n+  RS6000_BUILTIN_2 (CRYPTO_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n+\t\t    \"__builtin_crypto_\" NAME,\t\t/* NAME */\t\\\n+\t\t    RS6000_BTM_P8_VECTOR,\t\t/* MASK */\t\\\n+\t\t    (RS6000_BTC_ ## ATTR\t\t/* ATTR */\t\\\n+\t\t     | RS6000_BTC_BINARY),\t\t\t\t\\\n+\t\t    CODE_FOR_ ## ICODE)\t\t\t/* ICODE */\n+\n #define BU_CRYPTO_3(ENUM, NAME, ATTR, ICODE)\t\t\t\t\\\n   RS6000_BUILTIN_3 (CRYPTO_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n \t\t    \"__builtin_crypto_\" NAME,\t\t/* NAME */\t\\\n@@ -400,6 +408,14 @@\n \t\t     | RS6000_BTC_TERNARY),\t\t\t\t\\\n \t\t    CODE_FOR_ ## ICODE)\t\t\t/* ICODE */\n \n+#define BU_CRYPTO_3A(ENUM, NAME, ATTR, ICODE)\t\t\t\t\\\n+  RS6000_BUILTIN_3 (CRYPTO_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n+\t\t    \"__builtin_crypto_\" NAME,\t\t/* NAME */\t\\\n+\t\t    RS6000_BTM_P8_VECTOR,\t\t/* MASK */\t\\\n+\t\t    (RS6000_BTC_ ## ATTR\t\t/* ATTR */\t\\\n+\t\t     | RS6000_BTC_TERNARY),\t\t\t\t\\\n+\t\t    CODE_FOR_ ## ICODE)\t\t\t/* ICODE */\n+\n #define BU_CRYPTO_OVERLOAD_1(ENUM, NAME)\t\t\t\t\\\n   RS6000_BUILTIN_1 (CRYPTO_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n \t\t    \"__builtin_crypto_\" NAME,\t\t/* NAME */\t\\\n@@ -408,10 +424,10 @@\n \t\t     | RS6000_BTC_UNARY),\t\t\t\t\\\n \t\t    CODE_FOR_nothing)\t\t\t/* ICODE */\n \n-#define BU_CRYPTO_OVERLOAD_2(ENUM, NAME)\t\t\t\t\\\n+#define BU_CRYPTO_OVERLOAD_2A(ENUM, NAME)\t\t\t\t\\\n   RS6000_BUILTIN_2 (CRYPTO_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n \t\t    \"__builtin_crypto_\" NAME,\t\t/* NAME */\t\\\n-\t\t    RS6000_BTM_CRYPTO,\t\t\t/* MASK */\t\\\n+\t\t    RS6000_BTM_P8_VECTOR,\t\t/* MASK */\t\\\n \t\t    (RS6000_BTC_OVERLOADED\t\t/* ATTR */\t\\\n \t\t     | RS6000_BTC_BINARY),\t\t\t\t\\\n \t\t    CODE_FOR_nothing)\t\t\t/* ICODE */\n@@ -424,6 +440,14 @@\n \t\t     | RS6000_BTC_TERNARY),\t\t\t\t\\\n \t\t    CODE_FOR_nothing)\t\t\t/* ICODE */\n \n+#define BU_CRYPTO_OVERLOAD_3A(ENUM, NAME)\t\t\t\t\\\n+  RS6000_BUILTIN_3 (CRYPTO_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n+\t\t    \"__builtin_crypto_\" NAME,\t\t/* NAME */\t\\\n+\t\t    RS6000_BTM_P8_VECTOR,\t\t/* MASK */\t\\\n+\t\t    (RS6000_BTC_OVERLOADED\t\t/* ATTR */\t\\\n+\t\t     | RS6000_BTC_TERNARY),\t\t\t\t\\\n+\t\t    CODE_FOR_nothing)\t\t\t/* ICODE */\n+\n /* HTM convenience macros.  */\n #define BU_HTM_0(ENUM, NAME, ATTR, ICODE)\t\t\t\t\\\n   RS6000_BUILTIN_H (HTM_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n@@ -1611,24 +1635,24 @@ BU_CRYPTO_2 (VCIPHER,\t\t\"vcipher\",\t  CONST, crypto_vcipher)\n BU_CRYPTO_2 (VCIPHERLAST,\t\"vcipherlast\",\t  CONST, crypto_vcipherlast)\n BU_CRYPTO_2 (VNCIPHER,\t\t\"vncipher\",\t  CONST, crypto_vncipher)\n BU_CRYPTO_2 (VNCIPHERLAST,\t\"vncipherlast\",\t  CONST, crypto_vncipherlast)\n-BU_CRYPTO_2 (VPMSUMB,\t\t\"vpmsumb\",\t  CONST, crypto_vpmsumb)\n-BU_CRYPTO_2 (VPMSUMH,\t\t\"vpmsumh\",\t  CONST, crypto_vpmsumh)\n-BU_CRYPTO_2 (VPMSUMW,\t\t\"vpmsumw\",\t  CONST, crypto_vpmsumw)\n-BU_CRYPTO_2 (VPMSUMD,\t\t\"vpmsumd\",\t  CONST, crypto_vpmsumd)\n+BU_CRYPTO_2A (VPMSUMB,\t\t\"vpmsumb\",\t  CONST, crypto_vpmsumb)\n+BU_CRYPTO_2A (VPMSUMH,\t\t\"vpmsumh\",\t  CONST, crypto_vpmsumh)\n+BU_CRYPTO_2A (VPMSUMW,\t\t\"vpmsumw\",\t  CONST, crypto_vpmsumw)\n+BU_CRYPTO_2A (VPMSUMD,\t\t\"vpmsumd\",\t  CONST, crypto_vpmsumd)\n \n /* 3 argument crypto functions.  */\n-BU_CRYPTO_3 (VPERMXOR_V2DI,\t\"vpermxor_v2di\",  CONST, crypto_vpermxor_v2di)\n-BU_CRYPTO_3 (VPERMXOR_V4SI,\t\"vpermxor_v4si\",  CONST, crypto_vpermxor_v4si)\n-BU_CRYPTO_3 (VPERMXOR_V8HI,\t\"vpermxor_v8hi\",  CONST, crypto_vpermxor_v8hi)\n-BU_CRYPTO_3 (VPERMXOR_V16QI,\t\"vpermxor_v16qi\", CONST, crypto_vpermxor_v16qi)\n+BU_CRYPTO_3A (VPERMXOR_V2DI,\t\"vpermxor_v2di\",  CONST, crypto_vpermxor_v2di)\n+BU_CRYPTO_3A (VPERMXOR_V4SI,\t\"vpermxor_v4si\",  CONST, crypto_vpermxor_v4si)\n+BU_CRYPTO_3A (VPERMXOR_V8HI,\t\"vpermxor_v8hi\",  CONST, crypto_vpermxor_v8hi)\n+BU_CRYPTO_3A (VPERMXOR_V16QI,\t\"vpermxor_v16qi\", CONST, crypto_vpermxor_v16qi)\n BU_CRYPTO_3 (VSHASIGMAW,\t\"vshasigmaw\",\t  CONST, crypto_vshasigmaw)\n BU_CRYPTO_3 (VSHASIGMAD,\t\"vshasigmad\",\t  CONST, crypto_vshasigmad)\n \n /* 2 argument crypto overloaded functions.  */\n-BU_CRYPTO_OVERLOAD_2 (VPMSUM,\t \"vpmsum\")\n+BU_CRYPTO_OVERLOAD_2A (VPMSUM,\t \"vpmsum\")\n \n /* 3 argument crypto overloaded functions.  */\n-BU_CRYPTO_OVERLOAD_3 (VPERMXOR,\t \"vpermxor\")\n+BU_CRYPTO_OVERLOAD_3A (VPERMXOR,\t \"vpermxor\")\n BU_CRYPTO_OVERLOAD_3 (VSHASIGMA, \"vshasigma\")\n \n \f"}, {"sha": "989422d186e6a3ba81a2359fbe7359c7c59643f0", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=6895fffb46e3bc351492f92d788981807f90b444", "patch": "@@ -563,7 +563,7 @@ Use/do not use vector and scalar instructions added in ISA 2.07.\n \n mcrypto\n Target Report Mask(CRYPTO) Var(rs6000_isa_flags)\n-Use ISA 2.07 crypto instructions\n+Use ISA 2.07 Category:Vector.Crypto instructions\n \n mdirect-move\n Target Report Mask(DIRECT_MOVE) Var(rs6000_isa_flags)"}, {"sha": "e4a224a60668b97cd90d8405ca3bf5539a5cc057", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6895fffb46e3bc351492f92d788981807f90b444", "patch": "@@ -1,3 +1,7 @@\n+2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/crypto-builtin-2.c: New.\n+\n 2015-04-23  Andre Vehreschild  <vehre@gmx.de>\n \n \tPR fortran/60322"}, {"sha": "6d5ecdc0c12b1b540eabb59ffdcbada5af15240e", "filename": "gcc/testsuite/gcc.target/powerpc/crypto-builtin-2.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6895fffb46e3bc351492f92d788981807f90b444/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c?ref=6895fffb46e3bc351492f92d788981807f90b444", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-O2 -mcpu=power8 -mno-crypto\" } */\n+\n+void use_builtins_d (__vector unsigned long long *p, __vector unsigned long long *q, __vector unsigned long long *r, __vector unsigned long long *s)\n+{\n+  p[0] = __builtin_crypto_vcipher (q[0], r[0]); /* { dg-error \"Builtin function __builtin_crypto_vcipher is not supported with the current options\" } */\n+  p[1] = __builtin_crypto_vcipherlast (q[1], r[1]); /* { dg-error \"Builtin function __builtin_crypto_vcipherlast is not supported with the current options\" } */\n+  p[2] = __builtin_crypto_vncipher (q[2], r[2]); /* { dg-error \"Builtin function __builtin_crypto_vncipher is not supported with the current options\" } */\n+  p[3] = __builtin_crypto_vncipherlast (q[3], r[3]); /* { dg-error \"Builtin function __builtin_crypto_vncipherlast is not supported with the current options\" } */\n+  p[4] = __builtin_crypto_vpermxor (q[4], r[4], s[4]);\n+  p[5] = __builtin_crypto_vpmsumd (q[5], r[5]);\n+  p[6] = __builtin_crypto_vshasigmad (q[6], 1, 15); /* { dg-error \"Builtin function __builtin_crypto_vshasigmad is not supported with the current options\" } */\n+  p[7] = __builtin_crypto_vsbox (q[7]); /* { dg-error \"Builtin function __builtin_crypto_vsbox is not supported with the current options\" } */\n+}\n+\n+void use_builtins_w (__vector unsigned int *p, __vector unsigned int *q, __vector unsigned int *r, __vector unsigned int *s)\n+{\n+  p[0] = __builtin_crypto_vpermxor (q[0], r[0], s[0]);\n+  p[1] = __builtin_crypto_vpmsumw (q[1], r[1]);\n+  p[2] = __builtin_crypto_vshasigmaw (q[2], 1, 15); /* { dg-error \"Builtin function __builtin_crypto_vshasigmaw is not supported with the current options\" } */\n+}\n+\n+void use_builtins_h (__vector unsigned short *p, __vector unsigned short *q, __vector unsigned short *r, __vector unsigned short *s)\n+{\n+  p[0] = __builtin_crypto_vpermxor (q[0], r[0], s[0]);\n+  p[1] = __builtin_crypto_vpmsumh (q[1], r[1]);\n+}\n+\n+void use_builtins_b (__vector unsigned char *p, __vector unsigned char *q, __vector unsigned char *r, __vector unsigned char *s)\n+{\n+  p[0] = __builtin_crypto_vpermxor (q[0], r[0], s[0]);\n+  p[1] = __builtin_crypto_vpmsumb (q[1], r[1]);\n+}"}]}