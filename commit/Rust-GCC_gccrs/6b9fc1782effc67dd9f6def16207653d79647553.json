{"sha": "6b9fc1782effc67dd9f6def16207653d79647553", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI5ZmMxNzgyZWZmYzY3ZGQ5ZjZkZWYxNjIwNzY1M2Q3OTY0NzU1Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-18T10:12:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-18T10:12:20Z"}, "message": "tree-dfa.c (get_ref_base_and_extent): Use range-info to refine results when processing array refs with variable index.\n\n2018-05-18  Richard Biener  <rguenther@suse.de>\n\n\t* tree-dfa.c (get_ref_base_and_extent): Use range-info to refine\n\tresults when processing array refs with variable index.\n\n\t* gcc.dg/tree-ssa/ssa-dse-35.c: New testcase.\n\t* gcc.dg/graphite/scop-10.c: Adjust to avoid dead code.\n\t* gcc.dg/graphite/scop-6.c: Likewise.\n\t* gcc.dg/graphite/scop-7.c: Likewise.\n\t* gcc.dg/graphite/scop-8.c: Likewise.\n\t* gcc.dg/graphite/scop-9.c: Likewise.\n\nFrom-SVN: r260354", "tree": {"sha": "fd645ec37779713599dd830519f77baa421a0e2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd645ec37779713599dd830519f77baa421a0e2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b9fc1782effc67dd9f6def16207653d79647553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b9fc1782effc67dd9f6def16207653d79647553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b9fc1782effc67dd9f6def16207653d79647553", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b9fc1782effc67dd9f6def16207653d79647553/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f007d14ce68073906656b725938a3be2625435b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f007d14ce68073906656b725938a3be2625435b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f007d14ce68073906656b725938a3be2625435b"}], "stats": {"total": 80, "additions": 75, "deletions": 5}, "files": [{"sha": "8a1bc05c3b9165e3db7e585baf853c0c9e3f4030", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -1,3 +1,8 @@\n+2018-05-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-dfa.c (get_ref_base_and_extent): Use range-info to refine\n+\tresults when processing array refs with variable index.\n+\n 2018-05-18  Toon Moene  <toon@moene.org>\n \n \t* doc/invoke.texi: Move -floop-unroll-and-jam documentation"}, {"sha": "7d53f322505d2ca945fa3824dd14547c8577309b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -1,3 +1,12 @@\n+2018-05-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-dse-35.c: New testcase.\n+\t* gcc.dg/graphite/scop-10.c: Adjust to avoid dead code.\n+\t* gcc.dg/graphite/scop-6.c: Likewise.\n+\t* gcc.dg/graphite/scop-7.c: Likewise.\n+\t* gcc.dg/graphite/scop-8.c: Likewise.\n+\t* gcc.dg/graphite/scop-9.c: Likewise.\n+\n 2018-05-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/vect-init-ld1.c: New test."}, {"sha": "d04183072f38624e5503a5739974a30c784786c5", "filename": "gcc/testsuite/gcc.dg/graphite/scop-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-10.c?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -22,7 +22,7 @@ int toto()\n         b[i+k] = b[i+k-5] + 2;\n     }\n \n-  return a[3][5] + b[1];\n+  return a[3][5] + b[2];\n }\n \n /* { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\"} } */"}, {"sha": "9bc1d9f4ccd0ef6b368eebd3485ec1b07d23256a", "filename": "gcc/testsuite/gcc.dg/graphite/scop-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-6.c?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -23,7 +23,7 @@ int toto()\n         b[i+k] = b[i+k-5] + 2;\n     }\n \n-  return a[3][5] + b[1];\n+  return a[3][5] + b[2];\n }\n \n /* { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\"} } */"}, {"sha": "f4f3093fcafc9f8ef86e35281aaa4ca6953a6af8", "filename": "gcc/testsuite/gcc.dg/graphite/scop-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-7.c?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -23,7 +23,7 @@ int toto()\n         b[i+k] = b[i+k-5] + 2;\n     }\n \n-  return a[3][5] + b[1];\n+  return a[3][5] + b[2];\n }\n \n /* { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\"} } */"}, {"sha": "b06265108c6e82f6b80af796401cf345ec1a0afe", "filename": "gcc/testsuite/gcc.dg/graphite/scop-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-8.c?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -23,7 +23,7 @@ int toto()\n         b[i+k] = b[i+k-5] + 2;\n     }\n \n-  return a[3][5] + b[1];\n+  return a[3][5] + b[2];\n }\n \n /* { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\"} } */"}, {"sha": "b19291be2f8166021bccad5f09508bafbc21c4e2", "filename": "gcc/testsuite/gcc.dg/graphite/scop-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-9.c?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -18,7 +18,7 @@ int toto()\n         b[i+k] = b[i+k-5] + 2;\n     }\n \n-  return a[3][5] + b[1];\n+  return a[3][5] + b[2];\n }\n \n /* { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\"} } */"}, {"sha": "1f21670406f94497e7d35dea5351721a9ec709c6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-35.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-35.c?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse1-details\" } */\n+\n+int a[256];\n+void foo (void)\n+{\n+  a[0] = 1;\n+  for (int i = 5; i < 17; ++i)\n+    a[i] = i;\n+  a[0] = 2;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Deleted dead store\" 1 \"dse1\" } } */"}, {"sha": "00aa75f47ab03e46d7ca4b1b7e44f12f4716c51c", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b9fc1782effc67dd9f6def16207653d79647553/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=6b9fc1782effc67dd9f6def16207653d79647553", "patch": "@@ -529,6 +529,49 @@ get_ref_base_and_extent (tree exp, poly_int64_pod *poffset,\n \t\t/* Remember that we have seen an array ref with a variable\n \t\t   index.  */\n \t\tseen_variable_array_ref = true;\n+\n+\t\twide_int min, max;\n+\t\tif (TREE_CODE (index) == SSA_NAME\n+\t\t    && (low_bound = array_ref_low_bound (exp),\n+\t\t\tpoly_int_tree_p (low_bound))\n+\t\t    && (unit_size = array_ref_element_size (exp),\n+\t\t\tTREE_CODE (unit_size) == INTEGER_CST)\n+\t\t    && get_range_info (index, &min, &max) == VR_RANGE)\n+\t\t  {\n+\t\t    poly_offset_int lbound = wi::to_poly_offset (low_bound);\n+\t\t    /* Try to constrain maxsize with range information.  */\n+\t\t    offset_int omax\n+\t\t      = offset_int::from (max, TYPE_SIGN (TREE_TYPE (index)));\n+\t\t    if (known_lt (lbound, omax))\n+\t\t      {\n+\t\t\tpoly_offset_int rmaxsize;\n+\t\t\trmaxsize = (omax - lbound + 1)\n+\t\t\t    * wi::to_offset (unit_size) << LOG2_BITS_PER_UNIT;\n+\t\t\tif (!known_size_p (maxsize)\n+\t\t\t    || known_lt (rmaxsize, maxsize))\n+\t\t\t  {\n+\t\t\t    /* If we know an upper bound below the declared\n+\t\t\t       one this is no longer variable.  */\n+\t\t\t    if (known_size_p (maxsize))\n+\t\t\t      seen_variable_array_ref = false;\n+\t\t\t    maxsize = rmaxsize;\n+\t\t\t  }\n+\t\t      }\n+\t\t    /* Try to adjust bit_offset with range information.  */\n+\t\t    offset_int omin\n+\t\t      = offset_int::from (min, TYPE_SIGN (TREE_TYPE (index)));\n+\t\t    if (known_le (lbound, omin))\n+\t\t      {\n+\t\t\tpoly_offset_int woffset\n+\t\t\t  = wi::sext (omin - lbound,\n+\t\t\t\t      TYPE_PRECISION (TREE_TYPE (index)));\n+\t\t\twoffset *= wi::to_offset (unit_size);\n+\t\t\twoffset <<= LOG2_BITS_PER_UNIT;\n+\t\t\tbit_offset += woffset;\n+\t\t\tif (known_size_p (maxsize))\n+\t\t\t  maxsize -= woffset;\n+\t\t      }\n+\t\t  }\n \t      }\n \t  }\n \t  break;"}]}