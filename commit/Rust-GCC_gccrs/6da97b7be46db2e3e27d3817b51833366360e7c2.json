{"sha": "6da97b7be46db2e3e27d3817b51833366360e7c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhOTdiN2JlNDZkYjJlM2UyN2QzODE3YjUxODMzMzY2MzYwZTdjMg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-02-19T01:54:03Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-02-19T01:54:03Z"}, "message": "Updated comments in objc-act.c\n\nFrom-SVN: r170299", "tree": {"sha": "583657cc6f5a625a0fd5f92441494621a69f2c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/583657cc6f5a625a0fd5f92441494621a69f2c90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6da97b7be46db2e3e27d3817b51833366360e7c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da97b7be46db2e3e27d3817b51833366360e7c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da97b7be46db2e3e27d3817b51833366360e7c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da97b7be46db2e3e27d3817b51833366360e7c2/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c433f96c2a31f5bd15dc710f8ce3ff14e54699"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "799cd408a66339a745a0689e0126b025347d3f53", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da97b7be46db2e3e27d3817b51833366360e7c2/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da97b7be46db2e3e27d3817b51833366360e7c2/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=6da97b7be46db2e3e27d3817b51833366360e7c2", "patch": "@@ -1,3 +1,8 @@\n+2011-01-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (objc_init, generate_struct_by_value_array): Updated\n+\tcomments.\n+\n 2011-01-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c: Updated comments."}, {"sha": "7a329219f38c553900eda15eaad9e963e27cfc60", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da97b7be46db2e3e27d3817b51833366360e7c2/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da97b7be46db2e3e27d3817b51833366360e7c2/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=6da97b7be46db2e3e27d3817b51833366360e7c2", "patch": "@@ -330,8 +330,9 @@ generate_struct_by_value_array (void)\n   int aggregate_in_mem[32];\n   int found = 0;\n \n-  /* ??? as an example, m64/ppc/Darwin can pass up to 8*long+13*double in regs.\n-     Presumably no platform passes 32 byte structures in a register.  */\n+  /* Presumably no platform passes 32 byte structures in a register.  */\n+  /* ??? As an example, m64/ppc/Darwin can pass up to 8*long+13*double\n+     in registers.  */\n   for (i = 1; i < 32; i++)\n     {\n       char buffer[5];\n@@ -379,8 +380,24 @@ objc_init (void)\n #endif\n     return false;\n \n+  /* print_struct_values is triggered by -print-runtime-info (used\n+     when building libobjc, with an empty file as input).  It does not\n+     require any ObjC setup, and it never returns.\n+\n+     -fcompare-debug is used to check the compiler output; we are\n+     executed twice, once with flag_compare_debug set, and once with\n+     it not set.  If the flag is used together with\n+     -print-runtime-info, we want to print the runtime info only once,\n+     else it would be output in duplicate.  So we check\n+     flag_compare_debug to output it in only one of the invocations.\n+\n+     As a side effect, this also that means -fcompare-debug\n+     -print-runtime-info will run the compiler twice, and compare the\n+     generated assembler file; the first time the compiler exits\n+     immediately (producing no file), and the second time it compiles\n+     an empty file.  This checks, as a side effect, that compiling an\n+     empty file produces no assembler output.  */\n   if (print_struct_values && !flag_compare_debug)\n-    /* This routine does not require any ObjC set-up and never returns.  */\n     generate_struct_by_value_array ();\n \n   /* Set up stuff used by FE parser and all runtimes.  */"}]}