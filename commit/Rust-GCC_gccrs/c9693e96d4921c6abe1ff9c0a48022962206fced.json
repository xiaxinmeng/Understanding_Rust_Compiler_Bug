{"sha": "c9693e96d4921c6abe1ff9c0a48022962206fced", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk2OTNlOTZkNDkyMWM2YWJlMWZmOWMwYTQ4MDIyOTYyMjA2ZmNlZA==", "commit": {"author": {"name": "Larin Hennessy", "email": "larin@science.oregonstate.edu", "date": "2002-12-23T23:02:49Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2002-12-23T23:02:49Z"}, "message": "install.texi: Remove i386-*-isc, i860-*-bsd, m68k-altos-sysv, m68k-isi-bsd, m68k-sony-bsd entries.\n\n2002-12-23  Larin Hennessy  <larin@science.oregonstate.edu>\n\n\t* doc/install.texi: Remove i386-*-isc, i860-*-bsd,\n\tm68k-altos-sysv, m68k-isi-bsd, m68k-sony-bsd entries.\n\t* doc/invoke.texi: Remove AMD 29K, ARM RISC/iX, Clipper, Convex,\n\tDG/UX entries.\n\t* doc/md.texi: Remove AMD 29K entries.\n\t* doc/trouble.texi: Remove Alliant, DG/UX, Iris 4.0.5F, GAS\n\t1.38.1, NewsOS, RT PC, WE32K entries.\n\nFrom-SVN: r60455", "tree": {"sha": "131100ef2f9aff9c2864d57f63116391d242ce69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/131100ef2f9aff9c2864d57f63116391d242ce69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9693e96d4921c6abe1ff9c0a48022962206fced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9693e96d4921c6abe1ff9c0a48022962206fced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9693e96d4921c6abe1ff9c0a48022962206fced", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9693e96d4921c6abe1ff9c0a48022962206fced/comments", "author": null, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a67ed43f1f1e0a64e55a207c7e8626330a91559d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a67ed43f1f1e0a64e55a207c7e8626330a91559d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a67ed43f1f1e0a64e55a207c7e8626330a91559d"}], "stats": {"total": 409, "additions": 19, "deletions": 390}, "files": [{"sha": "c046383477451a5b98ef0c9493b3f73462d6f52f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9693e96d4921c6abe1ff9c0a48022962206fced", "patch": "@@ -1,3 +1,13 @@\n+2002-12-23  Larin Hennessy  <larin@science.oregonstate.edu>\n+\n+\t* doc/install.texi: Remove i386-*-isc, i860-*-bsd,\n+\tm68k-altos-sysv, m68k-isi-bsd, m68k-sony-bsd entries.\n+\t* doc/invoke.texi: Remove AMD 29K, ARM RISC/iX, Clipper, Convex,\n+\tDG/UX entries.\n+\t* doc/md.texi: Remove AMD 29K entries.\n+\t* doc/trouble.texi: Remove Alliant, DG/UX, Iris 4.0.5F, GAS\n+\t1.38.1, NewsOS, RT PC, WE32K entries.\n+\n 2002-12-23  Aldy Hernandez  <aldyh@redhat.com>\n \n         PR/8763"}, {"sha": "f6e8cfa895fec3e5a4aba97573a7a8aaaced7400", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=c9693e96d4921c6abe1ff9c0a48022962206fced", "patch": "@@ -559,12 +559,8 @@ whether you use the GNU assembler.  On any other system,\n @item @samp{hppa1.0-@var{any}-@var{any}}\n @item @samp{hppa1.1-@var{any}-@var{any}}\n @item @samp{i386-@var{any}-sysv}\n-@item @samp{i386-@var{any}-isc}\n-@item @samp{i860-@var{any}-bsd}\n @item @samp{m68k-bull-sysv}\n @item @samp{m68k-hp-hpux}\n-@item @samp{m68k-sony-bsd}\n-@item @samp{m68k-altos-sysv}\n @item @samp{m68000-hp-hpux}\n @item @samp{m68000-att-sysv}\n @item @samp{@var{any}-lynx-lynxos}\n@@ -822,8 +818,8 @@ option.  This option has no effect on the other hosts.\n \n @item --nfp\n Specify that the machine does not have a floating point unit.  This\n-option only applies to @samp{m68k-sun-sunos@var{n}} and\n-@samp{m68k-isi-bsd}.  On any other system, @option{--nfp} has no effect.\n+option only applies to @samp{m68k-sun-sunos@var{n}}.  On any other\n+system, @option{--nfp} has no effect.\n \n @item --enable-checking\n @itemx --enable-checking=@var{list}"}, {"sha": "c1bfae47ccef226b073239dbd78e4ff90d7ffc44", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 255, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c9693e96d4921c6abe1ff9c0a48022962206fced", "patch": "@@ -367,22 +367,6 @@ in the following sections.\n -msoft-float  -msoft-quad-float  -msparclite  -mstack-bias @gol\n -msupersparc  -munaligned-doubles  -mv8}\n \n-@emph{Convex Options}\n-@gccoptlist{\n--mc1  -mc2  -mc32  -mc34  -mc38 @gol\n--margcount  -mnoargcount @gol\n--mlong32  -mlong64 @gol\n--mvolatile-cache  -mvolatile-nocache}\n-\n-@emph{AMD29K Options}\n-@gccoptlist{\n--m29000  -m29050  -mbw  -mnbw  -mdw  -mndw @gol\n--mlarge  -mnormal  -msmall @gol\n--mkernel-registers  -mno-reuse-arg-regs @gol\n--mno-stack-check  -mno-storem-bug @gol\n--mreuse-arg-regs  -msoft-float  -mstack-check @gol\n--mstorem-bug  -muser-registers}\n-\n @emph{ARM Options}\n @gccoptlist{\n -mapcs-frame  -mno-apcs-frame @gol\n@@ -397,7 +381,6 @@ in the following sections.\n -mthumb-interwork  -mno-thumb-interwork @gol\n -mcpu=@var{name}  -march=@var{name}  -mfpe=@var{name}  @gol\n -mstructure-size-boundary=@var{n} @gol\n--mbsd -mxopen  -mno-symrename @gol\n -mabort-on-noreturn @gol\n -mlong-calls  -mno-long-calls @gol\n -msingle-pic-base  -mno-single-pic-base @gol\n@@ -566,10 +549,6 @@ in the following sections.\n @gccoptlist{\n -mvms-return-codes}\n \n-@emph{Clipper Options}\n-@gccoptlist{\n--mc300  -mc400}\n-\n @emph{H8/300 Options}\n @gccoptlist{\n -mrelax  -mh  -ms  -mn  -mint32  -malign-300}\n@@ -5252,8 +5231,6 @@ that macro, which enables you to change the defaults.\n * M68hc1x Options::\n * VAX Options::\n * SPARC Options::\n-* Convex Options::\n-* AMD29K Options::\n * ARM Options::\n * MN10200 Options::\n * MN10300 Options::\n@@ -5268,7 +5245,6 @@ that macro, which enables you to change the defaults.\n * Intel 960 Options::\n * DEC Alpha Options::\n * DEC Alpha/VMS Options::\n-* Clipper Options::\n * H8/300 Options::\n * SH Options::\n * System V Options::\n@@ -5799,195 +5775,6 @@ when making stack frame references.\n Otherwise, assume no such offset is present.\n @end table\n \n-@node Convex Options\n-@subsection Convex Options\n-@cindex Convex options\n-\n-These @samp{-m} options are defined for Convex:\n-\n-@table @gcctabopt\n-@item -mc1\n-@opindex mc1\n-Generate output for C1.  The code will run on any Convex machine.\n-The preprocessor symbol @code{__convex__c1__} is defined.\n-\n-@item -mc2\n-@opindex mc2\n-Generate output for C2.  Uses instructions not available on C1.\n-Scheduling and other optimizations are chosen for max performance on C2.\n-The preprocessor symbol @code{__convex_c2__} is defined.\n-\n-@item -mc32\n-@opindex mc32\n-Generate output for C32xx.  Uses instructions not available on C1.\n-Scheduling and other optimizations are chosen for max performance on C32.\n-The preprocessor symbol @code{__convex_c32__} is defined.\n-\n-@item -mc34\n-@opindex mc34\n-Generate output for C34xx.  Uses instructions not available on C1.\n-Scheduling and other optimizations are chosen for max performance on C34.\n-The preprocessor symbol @code{__convex_c34__} is defined.\n-\n-@item -mc38\n-@opindex mc38\n-Generate output for C38xx.  Uses instructions not available on C1.\n-Scheduling and other optimizations are chosen for max performance on C38.\n-The preprocessor symbol @code{__convex_c38__} is defined.\n-\n-@item -margcount\n-@opindex margcount\n-Generate code which puts an argument count in the word preceding each\n-argument list.  This is compatible with regular CC, and a few programs\n-may need the argument count word.  GDB and other source-level debuggers\n-do not need it; this info is in the symbol table.\n-\n-@item -mnoargcount\n-@opindex mnoargcount\n-Omit the argument count word.  This is the default.\n-\n-@item -mvolatile-cache\n-@opindex mvolatile-cache\n-Allow volatile references to be cached.  This is the default.\n-\n-@item -mvolatile-nocache\n-@opindex mvolatile-nocache\n-Volatile references bypass the data cache, going all the way to memory.\n-This is only needed for multi-processor code that does not use standard\n-synchronization instructions.  Making non-volatile references to volatile\n-locations will not necessarily work.\n-\n-@item -mlong32\n-@opindex mlong32\n-Type long is 32 bits, the same as type int.  This is the default.\n-\n-@item -mlong64\n-@opindex mlong64\n-Type long is 64 bits, the same as type long long.  This option is useless,\n-because no library support exists for it.\n-@end table\n-\n-@node AMD29K Options\n-@subsection AMD29K Options\n-@cindex AMD29K options\n-\n-These @samp{-m} options are defined for the AMD Am29000:\n-\n-@table @gcctabopt\n-@item -mdw\n-@opindex mdw\n-@cindex DW bit (29k)\n-Generate code that assumes the @code{DW} bit is set, i.e., that byte and\n-halfword operations are directly supported by the hardware.  This is the\n-default.\n-\n-@item -mndw\n-@opindex mndw\n-Generate code that assumes the @code{DW} bit is not set.\n-\n-@item -mbw\n-@opindex mbw\n-@cindex byte writes (29k)\n-Generate code that assumes the system supports byte and halfword write\n-operations.  This is the default.\n-\n-@item -mnbw\n-@opindex mnbw\n-Generate code that assumes the systems does not support byte and\n-halfword write operations.  @option{-mnbw} implies @option{-mndw}.\n-\n-@item -msmall\n-@opindex msmall\n-@cindex memory model (29k)\n-Use a small memory model that assumes that all function addresses are\n-either within a single 256 KB segment or at an absolute address of less\n-than 256k.  This allows the @code{call} instruction to be used instead\n-of a @code{const}, @code{consth}, @code{calli} sequence.\n-\n-@item -mnormal\n-@opindex mnormal\n-Use the normal memory model: Generate @code{call} instructions only when\n-calling functions in the same file and @code{calli} instructions\n-otherwise.  This works if each file occupies less than 256 KB but allows\n-the entire executable to be larger than 256 KB@.  This is the default.\n-\n-@item -mlarge\n-@opindex mlarge\n-Always use @code{calli} instructions.  Specify this option if you expect\n-a single file to compile into more than 256 KB of code.\n-\n-@item -m29050\n-@opindex m29050\n-@cindex processor selection (29k)\n-Generate code for the Am29050.\n-\n-@item -m29000\n-@opindex m29000\n-Generate code for the Am29000.  This is the default.\n-\n-@item -mkernel-registers\n-@opindex mkernel-registers\n-@cindex kernel and user registers (29k)\n-Generate references to registers @code{gr64-gr95} instead of to\n-registers @code{gr96-gr127}.  This option can be used when compiling\n-kernel code that wants a set of global registers disjoint from that used\n-by user-mode code.\n-\n-Note that when this option is used, register names in @samp{-f} flags\n-must use the normal, user-mode, names.\n-\n-@item -muser-registers\n-@opindex muser-registers\n-Use the normal set of global registers, @code{gr96-gr127}.  This is the\n-default.\n-\n-@item -mstack-check\n-@itemx -mno-stack-check\n-@opindex mstack-check\n-@opindex mno-stack-check\n-@cindex stack checks (29k)\n-Insert (or do not insert) a call to @code{__msp_check} after each stack\n-adjustment.  This is often used for kernel code.\n-\n-@item -mstorem-bug\n-@itemx -mno-storem-bug\n-@opindex mstorem-bug\n-@opindex mno-storem-bug\n-@cindex storem bug (29k)\n-@option{-mstorem-bug} handles 29k processors which cannot handle the\n-separation of a mtsrim insn and a storem instruction (most 29000 chips\n-to date, but not the 29050).\n-\n-@item -mno-reuse-arg-regs\n-@itemx -mreuse-arg-regs\n-@opindex mno-reuse-arg-regs\n-@opindex mreuse-arg-regs\n-@option{-mno-reuse-arg-regs} tells the compiler to only use incoming argument\n-registers for copying out arguments.  This helps detect calling a function\n-with fewer arguments than it was declared with.\n-\n-@item -mno-impure-text\n-@itemx -mimpure-text\n-@opindex mno-impure-text\n-@opindex mimpure-text\n-@option{-mimpure-text}, used in addition to @option{-shared}, tells the compiler to\n-not pass @option{-assert pure-text} to the linker when linking a shared object.\n-\n-@item -msoft-float\n-@opindex msoft-float\n-Generate output containing library calls for floating point.\n-@strong{Warning:} the requisite libraries are not part of GCC@.\n-Normally the facilities of the machine's usual C compiler are used, but\n-this can't be done directly in cross-compilation.  You must make your\n-own arrangements to provide suitable library functions for\n-cross-compilation.\n-\n-@item -mno-multm\n-@opindex mno-multm\n-Do not generate multm or multmu instructions.  This is useful for some embedded\n-systems which do not have trap handlers for these instructions.\n-@end table\n-\n @node ARM Options\n @subsection ARM Options\n @cindex ARM options\n@@ -6152,25 +5939,6 @@ These are deprecated aliases for @option{-malignment-traps}.\n @opindex mshort-load-words\n This are deprecated aliases for @option{-mno-alignment-traps}.\n \n-@item -mbsd\n-@opindex mbsd\n-This option only applies to RISC iX@.  Emulate the native BSD-mode\n-compiler.  This is the default if @option{-ansi} is not specified.\n-\n-@item -mxopen\n-@opindex mxopen\n-This option only applies to RISC iX@.  Emulate the native X/Open-mode\n-compiler.\n-\n-@item -mno-symrename\n-@opindex mno-symrename\n-This option only applies to RISC iX@.  Do not run the assembler\n-post-processor, @samp{symrename}, after code has been assembled.\n-Normally it is necessary to modify some of the standard symbols in\n-preparation for linking with the RISC iX C library; this option\n-suppresses this pass.  The post-processor is never run when the\n-compiler is built for cross-compilation.\n-\n @item -mcpu=@var{name}\n @opindex mcpu\n This specifies the name of the target ARM processor.  GCC uses this name\n@@ -6512,17 +6280,17 @@ underscore as prefix on each name.\n Include (or omit) additional debugging information (about registers used\n in each stack frame) as specified in the 88open Object Compatibility\n Standard, ``OCS''@.  This extra information allows debugging of code that\n-has had the frame pointer eliminated.  The default for DG/UX, SVr4, and\n-Delta 88 SVr3.2 is to include this information; other 88k configurations\n-omit this information by default.\n+has had the frame pointer eliminated.  The default for SVr4 and Delta 88\n+SVr3.2 is to include this information; other 88k configurations omit this\n+information by default.\n \n @item -mocs-frame-position\n @opindex mocs-frame-position\n @cindex register positions in frame (88k)\n When emitting COFF debugging information for automatic variables and\n parameters stored on the stack, use the offset from the canonical frame\n address, which is the stack pointer (register 31) on entry to the\n-function.  The DG/UX, SVr4, Delta88 SVr3.2, and BCS configurations use\n+function.  The SVr4 and Delta88 SVr3.2, and BCS configurations use\n @option{-mocs-frame-position}; other 88k configurations have the default\n @option{-mno-ocs-frame-position}.\n \n@@ -6609,9 +6377,8 @@ that is used on System V release 4.\n SVr4.\n @end enumerate\n \n-@option{-msvr4} is the default for the m88k-motorola-sysv4 and\n-m88k-dg-dgux m88k configurations.  @option{-msvr3} is the default for all\n-other m88k configurations.\n+@option{-msvr4} is the default for the m88k-motorola-sysv4 configuration.\n+@option{-msvr3} is the default for all other m88k configurations.\n \n @item -mversion-03.00\n @opindex mversion-03.00\n@@ -8844,22 +8611,6 @@ Return VMS condition codes from main.  The default is to return POSIX\n style condition (e.g.@ error) codes.\n @end table\n \n-@node Clipper Options\n-@subsection Clipper Options\n-\n-These @samp{-m} options are defined for the Clipper implementations:\n-\n-@table @gcctabopt\n-@item -mc300\n-@opindex mc300\n-Produce code for a C300 Clipper processor.  This is the default.\n-\n-@item -mc400\n-@opindex mc400\n-Produce code for a C400 Clipper processor, i.e.@: use floating point\n-registers f8--f15.\n-@end table\n-\n @node H8/300 Options\n @subsection H8/300 Options\n "}, {"sha": "14b911f82f61aac99f82ebe198b4a613d757b244", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 56, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=c9693e96d4921c6abe1ff9c0a48022962206fced", "patch": "@@ -1376,60 +1376,6 @@ An item in the constant pool\n A symbol in the text segment of the current file\n @end table\n \n-@item AMD 29000 family---@file{a29k.h}\n-@table @code\n-@item l\n-Local register 0\n-\n-@item b\n-Byte Pointer (@samp{BP}) register\n-\n-@item q\n-@samp{Q} register\n-\n-@item h\n-Special purpose register\n-\n-@item A\n-First accumulator register\n-\n-@item a\n-Other accumulator register\n-\n-@item f\n-Floating point register\n-\n-@item I\n-Constant greater than 0, less than 0x100\n-\n-@item J\n-Constant greater than 0, less than 0x10000\n-\n-@item K\n-Constant whose high 24 bits are on (1)\n-\n-@item L\n-16-bit constant whose high 8 bits are on (1)\n-\n-@item M\n-32-bit constant whose high 16 bits are on (1)\n-\n-@item N\n-32-bit negative constant that fits in 8 bits\n-\n-@item O\n-The constant 0x80000000 or, on the 29050, any 32-bit constant\n-whose low 16 bits are 0.\n-\n-@item P\n-16-bit negative constant that fits in 8 bits\n-\n-@item G\n-@itemx H\n-A floating point constant (in @code{asm} statements, use the machine\n-independent @samp{E} or @samp{F} instead)\n-@end table\n-\n @item AVR family---@file{avr.h}\n @table @code\n @item l\n@@ -2494,8 +2440,7 @@ Write the generated insn as a @code{parallel} with elements being a\n @code{set} of one register from the appropriate memory location (you may\n also need @code{use} or @code{clobber} elements).  Use a\n @code{match_parallel} (@pxref{RTL Template}) to recognize the insn.  See\n-@file{a29k.md} and @file{rs6000.md} for examples of the use of this insn\n-pattern.\n+@file{rs6000.md} for examples of the use of this insn pattern.\n \n @cindex @samp{store_multiple} instruction pattern\n @item @samp{store_multiple}"}, {"sha": "a3ef96e2dfe4180a17b1116c864192168d351683", "filename": "gcc/doc/trouble.texi", "status": "modified", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2Fdoc%2Ftrouble.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9693e96d4921c6abe1ff9c0a48022962206fced/gcc%2Fdoc%2Ftrouble.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftrouble.texi?ref=c9693e96d4921c6abe1ff9c0a48022962206fced", "patch": "@@ -338,47 +338,6 @@ you cannot successfully use @samp{$} in identifiers on the RS/6000 due\n to a restriction in the IBM assembler.  GAS supports these\n identifiers.\n \n-@item\n-@opindex mno-serialize-volatile\n-There is an assembler bug in versions of DG/UX prior to 5.4.2.01 that\n-occurs when the @samp{fldcr} instruction is used.  GCC uses\n-@samp{fldcr} on the 88100 to serialize volatile memory references.  Use\n-the option @option{-mno-serialize-volatile} if your version of the\n-assembler has this bug.\n-\n-@item\n-On VMS, GAS versions 1.38.1 and earlier may cause spurious warning\n-messages from the linker.  These warning messages complain of mismatched\n-psect attributes.  You can ignore them.\n-\n-@item\n-On NewsOS version 3, if you include both of the files @file{stddef.h}\n-and @file{sys/types.h}, you get an error because there are two typedefs\n-of @code{size_t}.  You should change @file{sys/types.h} by adding these\n-lines around the definition of @code{size_t}:\n-\n-@smallexample\n-#ifndef _SIZE_T\n-#define _SIZE_T\n-@var{actual-typedef-here}\n-#endif\n-@end smallexample\n-\n-@cindex Alliant\n-@item\n-On the Alliant, the system's own convention for returning structures\n-and unions is unusual, and is not compatible with GCC no matter\n-what options are used.\n-\n-@cindex RT PC\n-@cindex IBM RT PC\n-@item\n-@opindex mhc-struct-return\n-On the IBM RT PC, the MetaWare HighC compiler (hc) uses a different\n-convention for structure and union returning.  Use the option\n-@option{-mhc-struct-return} to tell GCC to use a convention compatible\n-with it.\n-\n @cindex VAX calling convention\n @cindex Ultrix calling convention\n @item\n@@ -394,43 +353,11 @@ these options to produce code compatible with the Fortran compiler:\n -fcall-saved-r2 -fcall-saved-r3 -fcall-saved-r4 -fcall-saved-r5\n @end smallexample\n \n-@item\n-On the WE32k, you may find that programs compiled with GCC do not\n-work with the standard shared C library.  You may need to link with\n-the ordinary C compiler.  If you do so, you must specify the following\n-options:\n-\n-@smallexample\n--L/usr/local/lib/gcc-lib/we32k-att-sysv/2.8.1 -lgcc -lc_s\n-@end smallexample\n-\n-The first specifies where to find the library @file{libgcc.a}\n-specified with the @option{-lgcc} option.\n-\n-GCC does linking by invoking @command{ld}, just as @command{cc} does, and\n-there is no reason why it @emph{should} matter which compilation program\n-you use to invoke @command{ld}.  If someone tracks this problem down,\n-it can probably be fixed easily.\n-\n @item\n On the Alpha, you may get assembler errors about invalid syntax as a\n result of floating point constants.  This is due to a bug in the C\n library functions @code{ecvt}, @code{fcvt} and @code{gcvt}.  Given valid\n floating point numbers, they sometimes print @samp{NaN}.\n-\n-@item\n-On Irix 4.0.5F (and perhaps in some other versions), an assembler bug\n-sometimes reorders instructions incorrectly when optimization is turned\n-on.  If you think this may be happening to you, try using the GNU\n-assembler; GAS version 2.1 supports ECOFF on Irix.\n-\n-@opindex noasmopt\n-Or use the @option{-noasmopt} option when you compile GCC with itself,\n-and then again when you compile your program.  (This is a temporary\n-kludge to turn off assembler optimization on Irix.)  If this proves to\n-be what you need, edit the assembler spec in the file @file{specs} so\n-that it unconditionally passes @option{-O0} to the assembler, and never\n-passes @option{-O2} or @option{-O3}.\n @end itemize\n \n @node External Bugs"}]}