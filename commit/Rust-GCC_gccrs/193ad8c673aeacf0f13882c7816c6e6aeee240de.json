{"sha": "193ad8c673aeacf0f13882c7816c6e6aeee240de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzYWQ4YzY3M2FlYWNmMGYxMzg4MmM3ODE2YzZlNmFlZWUyNDBkZQ==", "commit": {"author": {"name": "Laurynas Biveinis", "email": "lauras@softhome.net", "date": "2000-12-09T16:27:51Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2000-12-09T16:27:51Z"}, "message": "Makefile.in: use $(build_exeext) for all build system executable targets.\n\n* Makefile.in: use $(build_exeext) for all build\nsystem executable targets.\n\nFrom-SVN: r38157", "tree": {"sha": "7825a379f0f4eb6eb803ebdf9153fefa9ff650d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7825a379f0f4eb6eb803ebdf9153fefa9ff650d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/193ad8c673aeacf0f13882c7816c6e6aeee240de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193ad8c673aeacf0f13882c7816c6e6aeee240de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/193ad8c673aeacf0f13882c7816c6e6aeee240de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193ad8c673aeacf0f13882c7816c6e6aeee240de/comments", "author": null, "committer": null, "parents": [{"sha": "961046eacb8593a573f43343167c965941baf2df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/961046eacb8593a573f43343167c965941baf2df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/961046eacb8593a573f43343167c965941baf2df"}], "stats": {"total": 100, "additions": 54, "deletions": 46}, "files": [{"sha": "ac3ed9e7765dc1140b70b4981ce196d095db8579", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/193ad8c673aeacf0f13882c7816c6e6aeee240de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/193ad8c673aeacf0f13882c7816c6e6aeee240de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=193ad8c673aeacf0f13882c7816c6e6aeee240de", "patch": "@@ -1,3 +1,8 @@\n+2000-12-09  Laurynas Biveinis  <lauras@softhome.net>\n+\n+\t* Makefile.in: use $(build_exeext) for all build\n+\tsystem executable targets.\n+\n 2000-12-09  Laurynas Biveinis  <lauras@softhome.net>\n \n \t* install.texi: remove i[345]86-*-winnt3.5 section."}, {"sha": "dac7aede53c8f2ee14d943ba72a79b4b83e53c3c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 49, "deletions": 46, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/193ad8c673aeacf0f13882c7816c6e6aeee240de/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/193ad8c673aeacf0f13882c7816c6e6aeee240de/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=193ad8c673aeacf0f13882c7816c6e6aeee240de", "patch": "@@ -743,8 +743,10 @@ BACKEND = toplev.o libbackend.a\n # GEN files are listed separately, so they can be built before doing parallel\n #  makes for cc1 or cc1plus.  Otherwise sequent parallel make attempts to load\n #  them before rtl.o is compiled.\n-GEN= genemit genoutput genrecog genextract genflags gencodes genconfig \\\n- genpeep gengenrtl gencheck\n+GEN= genemit$(build_exeext) genoutput$(build_exeext) genrecog$(build_exeext) \\\n+ genextract$(build_exeext) genflags$(build_exeext) gencodes$(build_exeext)   \\\n+ genconfig$(build_exeext) genpeep$(build_exeext) gengenrtl$(build_exeext)    \\\n+ gencheck$(build_exeext)\n \n # Files to be copied away after each stage in building.\n STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n@@ -1247,12 +1249,12 @@ gccspec.o: gccspec.c $(CONFIG_H) system.h $(GCC_H)\n cppspec.o: cppspec.c $(CONFIG_H) system.h $(GCC_H)\n \n tree-check.h: s-check ; @true\n-s-check : gencheck $(srcdir)/move-if-change\n-\t./gencheck > tmp-check.h\n+s-check : gencheck$(build_exeext) $(srcdir)/move-if-change\n+\t./gencheck$(build_exeext) > tmp-check.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-check.h tree-check.h\n \ttouch s-check\n \n-gencheck : gencheck.o $(HOST_LIBDEPS)\n+gencheck$(build_exeext) : gencheck.o $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gencheck.o $(HOST_LIBS)\n \n@@ -1547,20 +1549,20 @@ alloca.o:\t$(srcdir)/../libiberty/alloca.c\n # trailing `;'), we call true for each.\n \n insn-config.h: s-config ; @true\n-s-config : $(md_file) genconfig $(srcdir)/move-if-change\n-\t./genconfig $(md_file) > tmp-config.h\n+s-config : $(md_file) genconfig$(build_exeext) $(srcdir)/move-if-change\n+\t./genconfig$(build_exeext) $(md_file) > tmp-config.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-config.h insn-config.h\n \ttouch s-config\n \n insn-flags.h: s-flags ; @true\n-s-flags : $(md_file) genflags $(srcdir)/move-if-change\n-\t./genflags $(md_file) > tmp-flags.h\n+s-flags : $(md_file) genflags$(build_exeext) $(srcdir)/move-if-change\n+\t./genflags$(build_exeext) $(md_file) > tmp-flags.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-flags.h insn-flags.h\n \ttouch s-flags\n \n insn-codes.h: s-codes ; @true\n-s-codes : $(md_file) gencodes $(srcdir)/move-if-change\n-\t./gencodes $(md_file) > tmp-codes.h\n+s-codes : $(md_file) gencodes$(build_exeext) $(srcdir)/move-if-change\n+\t./gencodes$(build_exeext) $(md_file) > tmp-codes.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-codes.h insn-codes.h\n \ttouch s-codes\n \n@@ -1570,8 +1572,8 @@ insn-emit.o : insn-emit.c $(CONFIG_H) $(RTL_H) $(EXPR_H) real.h output.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c\n \n insn-emit.c: s-emit ; @true\n-s-emit : $(md_file) genemit $(srcdir)/move-if-change\n-\t./genemit $(md_file) > tmp-emit.c\n+s-emit : $(md_file) genemit$(build_exeext) $(srcdir)/move-if-change\n+\t./genemit$(build_exeext) $(md_file) > tmp-emit.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-emit.c insn-emit.c\n \ttouch s-emit\n \n@@ -1580,8 +1582,8 @@ insn-recog.o : insn-recog.c $(CONFIG_H) $(RTL_H) insn-config.h $(RECOG_H) \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-recog.c\n \n insn-recog.c: s-recog ; @true\n-s-recog : $(md_file) genrecog $(srcdir)/move-if-change\n-\t./genrecog $(md_file) > tmp-recog.c\n+s-recog : $(md_file) genrecog$(build_exeext) $(srcdir)/move-if-change\n+\t./genrecog$(build_exeext) $(md_file) > tmp-recog.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-recog.c insn-recog.c\n \ttouch s-recog\n \n@@ -1590,8 +1592,8 @@ insn-opinit.o : insn-opinit.c $(CONFIG_H) $(RTL_H) insn-codes.h insn-flags.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-opinit.c\n \n insn-opinit.c: s-opinit ; @true\n-s-opinit : $(md_file) genopinit $(srcdir)/move-if-change\n-\t./genopinit $(md_file) > tmp-opinit.c\n+s-opinit : $(md_file) genopinit$(build_exeext) $(srcdir)/move-if-change\n+\t./genopinit$(build_exeext) $(md_file) > tmp-opinit.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-opinit.c insn-opinit.c\n \ttouch s-opinit\n \n@@ -1600,8 +1602,8 @@ insn-extract.o : insn-extract.c $(CONFIG_H) $(RTL_H) system.h toplev.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-extract.c\n \n insn-extract.c: s-extract ; @true\n-s-extract : $(md_file) genextract $(srcdir)/move-if-change\n-\t./genextract $(md_file) > tmp-extract.c\n+s-extract : $(md_file) genextract$(build_exeext) $(srcdir)/move-if-change\n+\t./genextract$(build_exeext) $(md_file) > tmp-extract.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-extract.c insn-extract.c\n \ttouch s-extract\n \n@@ -1610,8 +1612,8 @@ insn-peep.o : insn-peep.c $(CONFIG_H) $(RTL_H) $(REGS_H) output.h real.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-peep.c\n \n insn-peep.c: s-peep ; @true\n-s-peep : $(md_file) genpeep $(srcdir)/move-if-change\n-\t./genpeep $(md_file) > tmp-peep.c\n+s-peep : $(md_file) genpeep$(build_exeext) $(srcdir)/move-if-change\n+\t./genpeep$(build_exeext) $(md_file) > tmp-peep.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-peep.c insn-peep.c\n \ttouch s-peep\n \n@@ -1620,14 +1622,14 @@ insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) $(REGS_H) real.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c\n \n insn-attr.h: s-attr ; @true\n-s-attr : $(md_file) genattr $(srcdir)/move-if-change\n-\t./genattr $(md_file) > tmp-attr.h\n+s-attr : $(md_file) genattr$(build_exeext) $(srcdir)/move-if-change\n+\t./genattr$(build_exeext) $(md_file) > tmp-attr.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-attr.h insn-attr.h\n \ttouch s-attr\n \n insn-attrtab.c: s-attrtab ; @true\n-s-attrtab : $(md_file) genattrtab $(srcdir)/move-if-change\n-\t./genattrtab $(md_file) > tmp-attrtab.c\n+s-attrtab : $(md_file) genattrtab$(build_exeext) $(srcdir)/move-if-change\n+\t./genattrtab$(build_exeext) $(md_file) > tmp-attrtab.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-attrtab.c insn-attrtab.c\n \ttouch s-attrtab\n \n@@ -1637,19 +1639,19 @@ insn-output.o : insn-output.c $(CONFIG_H) $(RTL_H) $(GGC_H) $(REGS_H) real.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-output.c\n \n insn-output.c: s-output ; @true\n-s-output : $(md_file) genoutput $(srcdir)/move-if-change\n-\t./genoutput $(md_file) > tmp-output.c\n+s-output : $(md_file) genoutput$(build_exeext) $(srcdir)/move-if-change\n+\t./genoutput$(build_exeext) $(md_file) > tmp-output.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-output.c insn-output.c\n \ttouch s-output\n \n genrtl.o : genrtl.c $(CONFIG_H) $(RTL_H) system.h $(GGC_H)\n genrtl.c genrtl.h : s-genrtl\n \t@true\t# force gnu make to recheck modification times.\n \n-s-genrtl: gengenrtl $(srcdir)/move-if-change $(RTL_BASE_H)\n-\t./gengenrtl -h >tmp-genrtl.h\n+s-genrtl: gengenrtl$(build_exeext) $(srcdir)/move-if-change $(RTL_BASE_H)\n+\t./gengenrtl$(build_exeext) -h >tmp-genrtl.h\n \t$(SHELL) $(srcdir)/move-if-change tmp-genrtl.h genrtl.h\n-\t./gengenrtl >tmp-genrtl.c\n+\t./gengenrtl$(build_exeext) >tmp-genrtl.c\n \t$(SHELL) $(srcdir)/move-if-change tmp-genrtl.c genrtl.c\n \ttouch s-genrtl\n #\f\n@@ -1676,91 +1678,92 @@ safe-ctype.o: $(srcdir)/../libiberty/safe-ctype.c $(GCONFIG_H)\n \t$(LN_S) $(srcdir)/../libiberty/safe-ctype.c safe-ctype.c\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) safe-ctype.c\n \n-genconfig : genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genconfig$(build_exeext) : genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t  genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genconfig.o : genconfig.c $(RTL_H) $(build_xm_file) \\\n   system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c\n \n-genflags : genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genflags$(build_exeext) : genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genflags.o : genflags.c $(RTL_H) $(OBSTACK_H) $(build_xm_file) \\\n   system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c\n \n-gencodes : gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+gencodes$(build_exeext) : gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n gencodes.o : gencodes.c $(RTL_H) $(build_xm_file) \\\n   system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c\n \n-genemit : genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genemit$(build_exeext) : genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genemit.o : genemit.c $(RTL_H) $(build_xm_file) system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c\n \n-genopinit : genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genopinit$(build_exeext) : genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genopinit.o : genopinit.c $(RTL_H) $(build_xm_file) \\\n   system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c\n \n-genrecog : genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genrecog$(build_exeext) : genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genrecog.o : genrecog.c $(RTL_H) $(build_xm_file) \\\n   system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c \n-genextract : genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+\n+genextract$(build_exeext) : genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genextract.o : genextract.c $(RTL_H) $(build_xm_file) \\\n   system.h insn-config.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c\n \n-genpeep : genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genpeep$(build_exeext) : genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genpeep.o : genpeep.c $(RTL_H) $(build_xm_file) system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c\n \n-genattr : genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genattr$(build_exeext) : genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genattr.o : genattr.c $(RTL_H) $(build_xm_file) system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c\n \n-genattrtab : genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genattrtab$(build_exeext) : genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genattrtab.o : genattrtab.c $(RTL_H) $(OBSTACK_H) $(build_xm_file) \\\n   system.h errors.h $(GGC_H) gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c\n \n-genoutput : genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n+genoutput$(build_exeext) : genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genoutput.o : genoutput.c $(RTL_H) $(build_xm_file) \\\n   system.h errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c\n \n-gengenrtl : gengenrtl.o $(HOST_LIBDEPS)\n+gengenrtl$(build_exeext) : gengenrtl.o $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gengenrtl.o $(HOST_LIBS)\n \n@@ -2094,8 +2097,8 @@ deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \tfi\n \n GEN_PROTOS_OBJS = gen-protos.o scan.o\n-gen-protos: $(GEN_PROTOS_OBJS)\n-\t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o gen-protos \\\n+gen-protos$(build_exeext): $(GEN_PROTOS_OBJS)\n+\t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t  $(GEN_PROTOS_OBJS) ../libiberty/libiberty.a\n \n gen-protos.o: gen-protos.c scan.h $(build_xm_file) system.h\n@@ -2104,7 +2107,7 @@ gen-protos.o: gen-protos.c scan.h $(build_xm_file) system.h\n scan.o: scan.c scan.h $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c\n \n-xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos Makefile\n+xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos$(build_exeext) Makefile\n \tsed -e s/TARGET_GETGROUPS_T/$(TARGET_GETGROUPS_T)/ \\\n \t  deduced.h $(srcdir)/sys-protos.h > tmp-fixtmp.c\n \tmv tmp-fixtmp.c fixtmp.c\n@@ -2233,7 +2236,7 @@ mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n \t-rm -f collect collect2 mips-tfile mips-tdump alloca.s\n # Delete files generated for fixproto\n \t-rm -rf fix-header xsys-protos.h deduced.h tmp-deduced.h \\\n-\t  gen-protos fixproto.list fixtmp.* fixhdr.ready\n+\t  gen-protos$(build_exeext) fixproto.list fixtmp.* fixhdr.ready\n # Delete files generated for fixincl\n \t-rm -rf fixincl fixinc.sh specs.ready\n \t(cd fixinc && $(MAKE) clean)"}]}