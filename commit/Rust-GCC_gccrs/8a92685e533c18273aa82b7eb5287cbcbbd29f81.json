{"sha": "8a92685e533c18273aa82b7eb5287cbcbbd29f81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE5MjY4NWU1MzNjMTgyNzNhYTgyYjdlYjUyODdjYmNiYmQyOWY4MQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-09-09T17:57:11Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-09-09T17:57:11Z"}, "message": "re PR fortran/77507 (gfortran rejects keyworded calls to procedures from intrinsic modules)\n\n2016-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/77507\n\t* intrinsic.c (add_functions):  Use correct keyword.\n\n2016-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/77507\n \t* ieee/ieee_arithmetic.F90 (IEEE_VALUE_4,IEEE_VALUE_8,IEEE_VALULE_10,\n\tIEEE_VALUE_16):  Use correct keyword.\n\n2016-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/77507\n\t* gfortran.dg/pr77507.f90: New test.\n\nFrom-SVN: r240050", "tree": {"sha": "2c7f74fc71347284123422e6632e50dc96b6d229", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c7f74fc71347284123422e6632e50dc96b6d229"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a92685e533c18273aa82b7eb5287cbcbbd29f81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a92685e533c18273aa82b7eb5287cbcbbd29f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a92685e533c18273aa82b7eb5287cbcbbd29f81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a92685e533c18273aa82b7eb5287cbcbbd29f81/comments", "author": null, "committer": null, "parents": [{"sha": "7117752523c9d59ac81c6b6fe6cba71eeb946085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7117752523c9d59ac81c6b6fe6cba71eeb946085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7117752523c9d59ac81c6b6fe6cba71eeb946085"}], "stats": {"total": 63, "additions": 44, "deletions": 19}, "files": [{"sha": "a0afe045b9a567c56917c81ce07c81d77fa83b1e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a92685e533c18273aa82b7eb5287cbcbbd29f81/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a92685e533c18273aa82b7eb5287cbcbbd29f81/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8a92685e533c18273aa82b7eb5287cbcbbd29f81", "patch": "@@ -1,3 +1,8 @@\n+2016-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77507\n+\t* intrinsic.c (add_functions):  Use correct keyword.\n+\n 2016-09-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/69514"}, {"sha": "cad54b8100b3487c564e792d54566d7096917e82", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a92685e533c18273aa82b7eb5287cbcbbd29f81/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a92685e533c18273aa82b7eb5287cbcbbd29f81/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=8a92685e533c18273aa82b7eb5287cbcbbd29f81", "patch": "@@ -1239,7 +1239,8 @@ add_functions (void)\n     *z = \"z\", *ln = \"len\", *ut = \"unit\", *han = \"handler\",\n     *num = \"number\", *tm = \"time\", *nm = \"name\", *md = \"mode\",\n     *vl = \"values\", *p1 = \"path1\", *p2 = \"path2\", *com = \"command\",\n-    *ca = \"coarray\", *sub = \"sub\", *dist = \"distance\", *failed=\"failed\";\n+    *ca = \"coarray\", *sub = \"sub\", *dist = \"distance\", *failed=\"failed\",\n+    *c_ptr_1 = \"c_ptr_1\", *c_ptr_2 = \"c_ptr_2\";\n \n   int di, dr, dd, dl, dc, dz, ii;\n \n@@ -2914,8 +2915,8 @@ add_functions (void)\n   /* The following functions are part of ISO_C_BINDING.  */\n   add_sym_2 (\"c_associated\", GFC_ISYM_C_ASSOCIATED, CLASS_INQUIRY, ACTUAL_NO,\n \t     BT_LOGICAL, dl, GFC_STD_F2003, gfc_check_c_associated, NULL, NULL,\n-\t     \"C_PTR_1\", BT_VOID, 0, REQUIRED,\n-\t     \"C_PTR_2\", BT_VOID, 0, OPTIONAL);\n+\t     c_ptr_1, BT_VOID, 0, REQUIRED,\n+\t     c_ptr_2, BT_VOID, 0, OPTIONAL);\n   make_from_module();\n \n   add_sym_1 (\"c_loc\", GFC_ISYM_C_LOC, CLASS_INQUIRY, ACTUAL_NO,"}, {"sha": "407bc30084ca0ea6e17557954639847df93b390f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a92685e533c18273aa82b7eb5287cbcbbd29f81/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a92685e533c18273aa82b7eb5287cbcbbd29f81/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a92685e533c18273aa82b7eb5287cbcbbd29f81", "patch": "@@ -1,3 +1,8 @@\n+2016-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77507\n+\t* gfortran.dg/pr77507.f90: New test.\n+\n 2016-09-09  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/limits-width-1.c, gcc.dg/stdint-width-1.c: New tests."}, {"sha": "a72a0915ca03ad219db5f3bb2870c88db7669ebb", "filename": "gcc/testsuite/gfortran.dg/pr77507.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a92685e533c18273aa82b7eb5287cbcbbd29f81/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77507.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a92685e533c18273aa82b7eb5287cbcbbd29f81/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77507.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77507.f90?ref=8a92685e533c18273aa82b7eb5287cbcbbd29f81", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+Program p\n+  Use ieee_arithmetic\n+  Use iso_c_binding\n+  Print *, ieee_value(x=1.0, class=ieee_negative_inf)\n+  Print *, c_associated(c_ptr_1=c_null_ptr)\n+End Program"}, {"sha": "6454eaeb826324b224b17ea96e9dc1cc5f395bea", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a92685e533c18273aa82b7eb5287cbcbbd29f81/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a92685e533c18273aa82b7eb5287cbcbbd29f81/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8a92685e533c18273aa82b7eb5287cbcbbd29f81", "patch": "@@ -1,3 +1,9 @@\n+2016-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77507\n+ \t* ieee/ieee_arithmetic.F90 (IEEE_VALUE_4,IEEE_VALUE_8,IEEE_VALULE_10,\n+\tIEEE_VALUE_16):  Use correct keyword.\n+\n 2016-09-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/77393"}, {"sha": "4007a33358e301d0d7e9a0a89f399fe9647485d4", "filename": "libgfortran/ieee/ieee_arithmetic.F90", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a92685e533c18273aa82b7eb5287cbcbbd29f81/libgfortran%2Fieee%2Fieee_arithmetic.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a92685e533c18273aa82b7eb5287cbcbbd29f81/libgfortran%2Fieee%2Fieee_arithmetic.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fieee%2Fieee_arithmetic.F90?ref=8a92685e533c18273aa82b7eb5287cbcbbd29f81", "patch": "@@ -857,12 +857,12 @@ elemental function IEEE_CLASS_16 (X) result(res)\n \n   ! IEEE_VALUE\n \n-  elemental real(kind=4) function IEEE_VALUE_4(X, C) result(res)\n-    implicit none\n+  elemental real(kind=4) function IEEE_VALUE_4(X, CLASS) result(res)\n+\n     real(kind=4), intent(in) :: X\n-    type(IEEE_CLASS_TYPE), intent(in) :: C\n+    type(IEEE_CLASS_TYPE), intent(in) :: CLASS\n \n-    select case (C%hidden)\n+    select case (CLASS%hidden)\n       case (1)     ! IEEE_SIGNALING_NAN\n         res = -1\n         res = sqrt(res)\n@@ -895,12 +895,12 @@ elemental real(kind=4) function IEEE_VALUE_4(X, C) result(res)\n      end select\n   end function\n \n-  elemental real(kind=8) function IEEE_VALUE_8(X, C) result(res)\n-    implicit none\n+  elemental real(kind=8) function IEEE_VALUE_8(X, CLASS) result(res)\n+\n     real(kind=8), intent(in) :: X\n-    type(IEEE_CLASS_TYPE), intent(in) :: C\n+    type(IEEE_CLASS_TYPE), intent(in) :: CLASS\n \n-    select case (C%hidden)\n+    select case (CLASS%hidden)\n       case (1)     ! IEEE_SIGNALING_NAN\n         res = -1\n         res = sqrt(res)\n@@ -934,12 +934,12 @@ elemental real(kind=8) function IEEE_VALUE_8(X, C) result(res)\n   end function\n \n #ifdef HAVE_GFC_REAL_10\n-  elemental real(kind=10) function IEEE_VALUE_10(X, C) result(res)\n-    implicit none\n+  elemental real(kind=10) function IEEE_VALUE_10(X, CLASS) result(res)\n+\n     real(kind=10), intent(in) :: X\n-    type(IEEE_CLASS_TYPE), intent(in) :: C\n+    type(IEEE_CLASS_TYPE), intent(in) :: CLASS\n \n-    select case (C%hidden)\n+    select case (CLASS%hidden)\n       case (1)     ! IEEE_SIGNALING_NAN\n         res = -1\n         res = sqrt(res)\n@@ -971,15 +971,16 @@ elemental real(kind=10) function IEEE_VALUE_10(X, C) result(res)\n         res = 0\n      end select\n   end function\n+\n #endif\n \n #ifdef HAVE_GFC_REAL_16\n-  elemental real(kind=16) function IEEE_VALUE_16(X, C) result(res)\n-    implicit none\n+  elemental real(kind=16) function IEEE_VALUE_16(X, CLASS) result(res)\n+\n     real(kind=16), intent(in) :: X\n-    type(IEEE_CLASS_TYPE), intent(in) :: C\n+    type(IEEE_CLASS_TYPE), intent(in) :: CLASS\n \n-    select case (C%hidden)\n+    select case (CLASS%hidden)\n       case (1)     ! IEEE_SIGNALING_NAN\n         res = -1\n         res = sqrt(res)"}]}