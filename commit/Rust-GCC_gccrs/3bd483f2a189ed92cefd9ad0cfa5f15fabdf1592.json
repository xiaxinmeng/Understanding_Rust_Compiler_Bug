{"sha": "3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JkNDgzZjJhMTg5ZWQ5MmNlZmQ5YWQwY2ZhNWYxNWZhYmRmMTU5Mg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-01-16T04:21:35Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-01-16T04:21:35Z"}, "message": "Start of AWT merge with Classpath:\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (awt_java_source_files): Reference files in\n\tgnu/java/awt, not gnu/gcj/awt.\n\t* java/awt/image/BufferedImage.java: Updated copyright.\n\t* java/awt/image/ComponentColorModel.java: Updated copyright.\n\t* java/awt/image/ComponentSampleModel.java: Updated copyright.\n\t* java/awt/image/DataBuffer.java: Updated copyright.\n\t* java/awt/image/DataBufferByte.java: Updated copyright.\n\t* java/awt/image/DataBufferInt.java: Updated copyright.\n\t* java/awt/image/DataBufferUShort.java: Updated copyright.\n\t* java/awt/image/IndexColorModel.java: Updated copyright.\n\t* java/awt/image/PackedColorModel.java: Updated copyright.\n\t* java/awt/image/Raster.java: Updated copyright.\n\t* java/awt/image/RasterOp.java: Updated copyright.\n\t* java/awt/image/SampleModel.java: Updated copyright.\n\t* java/awt/image/SinglePixelPackedSampleModel.java: Updated copyright.\n\t* java/awt/image/WritableRaster.java: Updated copyright.\n\t* java/awt/color/ColorSpace.java: Updated copyright.\n\t* java/awt/color/ICC_ColorSpace.java: Updated copyright\n\t* java/awt/color/ICC_Profile.java: Updated copyright.\n\t* java/awt/event/HierarchyBoundsAdapter.java: Updated copyright.\n\t* java/awt/event/HierarchyBoundsListener.java: Updated copyright.\n\t* java/awt/event/HierarchyEvent.java: Updated copyright.\n\t* java/awt/event/HierarchyListener.java: Updated copyright.\n\t* java/awt/geom/AffineTransform.java: Updated copyright.\n\t* java/awt/geom/Dimension2D.java: Updated copyright.\n\t* java/awt/geom/Ellipse2D.java: Updated copyright.\n\t* java/awt/geom/IllegalPathStateException.java: Updated copyright.\n\t* java/awt/geom/Line2D.java: Updated copyright.\n\t* java/awt/geom/NoninvertibleTransformException.java: Updated\n\tcopyright.\n\t* java/awt/geom/PathIterator.java: Updated copyright.\n\t* java/awt/geom/Point2D.java: Updated copyright.\n\t* java/awt/geom/Rectangle2D.java: Updated copyright.\n\t* java/awt/geom/RectangularShape.java: Updated copyright.\n\t* java/awt/geom/RoundRectangle2D.java: Updated copyright.\n\t* java/awt/Toolkit.java: Updated import for file moves.\n\t* java/awt/Rectangle.java: Updated copyright; added javadoc from\n\tClasspath.\n\t(hashCode): New method from Classpath.\n\t* java/awt/Graphics2D.java: Updated copyright.\n\t* java/awt/Transparency.java: Updated copyright.\n\t* java/awt/Paint.java: Updated copyright.\n\t* java/awt/Graphics.java: New version from Classpath.\n\t* java/awt/EventDispatchThread.java: Updated copyright.\n\t* java/awt/CardLayout.java (layoutContainer): Don't skip invisible\n\tchildren.\n\t(gotoComponent): Wrap around on next/previous.\n\t* gnu/gcj/awt/BitMaskExtent.java: Removed.\n\t* gnu/gcj/awt/Buffers.java: Removed.\n\t* gnu/gcj/awt/ComponentDataBlitOp.java: Removed.\n\t* gnu/gcj/awt/GLightweightPeer.java: Removed.\n\t* gnu/java/awt/BitMaskExtent.java: Added.\n\t* gnu/java/awt/Buffers.java: Added.\n\t* gnu/java/awt/ComponentDataBlitOp.java: Added.\n\t* gnu/java/awt/GLightweightPeer.java: Added.\n\t* java/awt/geom/Line2D.java (clone): Ignore\n\tCloneNotSupportedException.\n\t* gnu/gcj/awt/GLightweightPeer.java (getColorModel): New method.\n\t* java/awt/Frame.java: Merged with Classpath.\n\t* java/awt/RenderingHints.java: Copyright update.\n\t* java/awt/Paint.java: Copyright update.\n\t* java/awt/image/DirectColorModel.java: Merged with Classpath.\n\t* java/awt/image/ColorModel.java: Merged with Classpath.\n\t* java/awt/Window.java (show): New Implementation from Classpath.\n\t(isShowing): Use super.isShowing().\n\t* java/awt/EventQueue.java: Merged with Classpath.\n\t* java/awt/AWTEventMulticaster.java (save): Throw\n\tRuntimeException.\n\t(saveInternal): Likewise.\n\t* java/awt/AWTEvent.java: Now implements Serializable.\n\t* java/awt/Event.java: Copyright update.\n\t* java/awt/peer/ComponentPeer.java: Merged with Classpath.\n\t* java/awt/image/BufferedImage.java: Copyright update.\n\t* java/awt/GraphicsConfiguration.java: Copyright update.\n\t* java/awt/Component.java: (addNotify): Don't call\n\taddNotifyContainerChildren().\n\t(addNotifyContainerChildren): Removed.\n\t(setPeer): New method from Classpath.\n\t(setTreeLock): Likewise.\n\t(setVisible): Rewrote.\n\t(show): Use it.\n\t(hide): Likewise.\n\t(validate): Set `valid'.\n\t(checkImage(Image,ImageObserver)): Implementation from Classpath.\n\t(createImage(ImageProducer)): Likewise.\n\t(prepareImage): Likewise.\n\t* java/awt/Container.java (addImpl): Handle case where constraint\n\tis not a String.  Post event via system event queue.\n\t(remove): Post event via system event queue.\n\t(validateTree): Only validate child if it is invalid.\n\t(getAlignmentX): Call super method as default.\n\t(getAlignmentY): Likewise.\n\t(addContainerListener): Now synchronized.\n\t(removeContainerListener): Likewise.\n\t(addNotifyContainerChildren): Now private.\n\t* java/awt/ComponentOrientation.java: Updated copyright.  Added\n\t@author.\n\t* java/awt/FlowLayout.java (serialVersionUID): New field.\n\t(setAlignment): Better exception message.\n\t(layoutContainer): Don't compute component's preferred size unless\n\twe're going to use it.\n\t* java/awt/BorderLayout.java (AFTER_LAST_LINE, AFTER_LINE_ENDS,\n\tBEFORE_FIRST_LINE, BEFORE_LINE_BEGINS): New constants.\n\t(firstLine, lastLine, firstItem, lastItem): New fields.\n\t(addLayoutComponent): Handle case where constraints is null.\n\tAlso, handle relative locations.\n\t(removeLayoutComponent): Handle relative locations.\n\t(MIN, MAX, PREF): New constants.\n\t(calcCompSize): New method.\n\t(calcSize): New method.\n\t(minimumLayoutSize): Use it.\n\t(preferredLayoutSize): Likewise.\n\t(maximumLayoutSize): Likewise.\n\t(toString): Include more information.\n\t(setBounds): New method.\n\t(layoutContainer): Use libgcj implementation; extended to handle\n\trelative locations.\n\nFrom-SVN: r48896", "tree": {"sha": "a0f126a62903beed11548538a3c963a7e0a7f669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f126a62903beed11548538a3c963a7e0a7f669"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/comments", "author": null, "committer": null, "parents": [{"sha": "c342f12677626f2f683eb9ce43f1d3905105f231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c342f12677626f2f683eb9ce43f1d3905105f231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c342f12677626f2f683eb9ce43f1d3905105f231"}], "stats": {"total": 7115, "additions": 5825, "deletions": 1290}, "files": [{"sha": "9f5fc7e4b4acc3ebdac654901b5e055cd7f4200d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,3 +1,125 @@\n+2002-01-15  Tom Tromey  <tromey@redhat.com>\n+\n+\tStart of AWT merge with Classpath:\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (awt_java_source_files): Reference files in\n+\tgnu/java/awt, not gnu/gcj/awt.\n+\t* java/awt/image/BufferedImage.java: Updated copyright.\n+\t* java/awt/image/ComponentColorModel.java: Updated copyright.\n+\t* java/awt/image/ComponentSampleModel.java: Updated copyright.\n+\t* java/awt/image/DataBuffer.java: Updated copyright.\n+\t* java/awt/image/DataBufferByte.java: Updated copyright.\n+\t* java/awt/image/DataBufferInt.java: Updated copyright.\n+\t* java/awt/image/DataBufferUShort.java: Updated copyright.\n+\t* java/awt/image/IndexColorModel.java: Updated copyright.\n+\t* java/awt/image/PackedColorModel.java: Updated copyright.\n+\t* java/awt/image/Raster.java: Updated copyright.\n+\t* java/awt/image/RasterOp.java: Updated copyright.\n+\t* java/awt/image/SampleModel.java: Updated copyright.\n+\t* java/awt/image/SinglePixelPackedSampleModel.java: Updated copyright.\n+\t* java/awt/image/WritableRaster.java: Updated copyright.\n+\t* java/awt/color/ColorSpace.java: Updated copyright.\n+\t* java/awt/color/ICC_ColorSpace.java: Updated copyright\n+\t* java/awt/color/ICC_Profile.java: Updated copyright.\n+\t* java/awt/event/HierarchyBoundsAdapter.java: Updated copyright.\n+\t* java/awt/event/HierarchyBoundsListener.java: Updated copyright.\n+\t* java/awt/event/HierarchyEvent.java: Updated copyright.\n+\t* java/awt/event/HierarchyListener.java: Updated copyright.\n+\t* java/awt/geom/AffineTransform.java: Updated copyright.\n+\t* java/awt/geom/Dimension2D.java: Updated copyright.\n+\t* java/awt/geom/Ellipse2D.java: Updated copyright.\n+\t* java/awt/geom/IllegalPathStateException.java: Updated copyright.\n+\t* java/awt/geom/Line2D.java: Updated copyright.\n+\t* java/awt/geom/NoninvertibleTransformException.java: Updated\n+\tcopyright.\n+\t* java/awt/geom/PathIterator.java: Updated copyright.\n+\t* java/awt/geom/Point2D.java: Updated copyright.\n+\t* java/awt/geom/Rectangle2D.java: Updated copyright.\n+\t* java/awt/geom/RectangularShape.java: Updated copyright.\n+\t* java/awt/geom/RoundRectangle2D.java: Updated copyright.\n+\t* java/awt/Toolkit.java: Updated import for file moves.\n+\t* java/awt/Rectangle.java: Updated copyright; added javadoc from\n+\tClasspath.\n+\t(hashCode): New method from Classpath.\n+\t* java/awt/Graphics2D.java: Updated copyright.\n+\t* java/awt/Transparency.java: Updated copyright.\n+\t* java/awt/Paint.java: Updated copyright.\n+\t* java/awt/Graphics.java: New version from Classpath.\n+\t* java/awt/EventDispatchThread.java: Updated copyright.\n+\t* java/awt/CardLayout.java (layoutContainer): Don't skip invisible\n+\tchildren.\n+\t(gotoComponent): Wrap around on next/previous.\n+\t* gnu/gcj/awt/BitMaskExtent.java: Removed.\n+\t* gnu/gcj/awt/Buffers.java: Removed.\n+\t* gnu/gcj/awt/ComponentDataBlitOp.java: Removed.\n+\t* gnu/gcj/awt/GLightweightPeer.java: Removed.\n+\t* gnu/java/awt/BitMaskExtent.java: Added.\n+\t* gnu/java/awt/Buffers.java: Added.\n+\t* gnu/java/awt/ComponentDataBlitOp.java: Added.\n+\t* gnu/java/awt/GLightweightPeer.java: Added.\n+\t* java/awt/geom/Line2D.java (clone): Ignore\n+\tCloneNotSupportedException.\n+\t* gnu/gcj/awt/GLightweightPeer.java (getColorModel): New method.\n+\t* java/awt/Frame.java: Merged with Classpath.\n+\t* java/awt/RenderingHints.java: Copyright update.\n+\t* java/awt/Paint.java: Copyright update.\n+\t* java/awt/image/DirectColorModel.java: Merged with Classpath.\n+\t* java/awt/image/ColorModel.java: Merged with Classpath.\n+\t* java/awt/Window.java (show): New Implementation from Classpath.\n+\t(isShowing): Use super.isShowing().\n+\t* java/awt/EventQueue.java: Merged with Classpath.\n+\t* java/awt/AWTEventMulticaster.java (save): Throw\n+\tRuntimeException.\n+\t(saveInternal): Likewise.\n+\t* java/awt/AWTEvent.java: Now implements Serializable.\n+\t* java/awt/Event.java: Copyright update.\n+\t* java/awt/peer/ComponentPeer.java: Merged with Classpath.\n+\t* java/awt/image/BufferedImage.java: Copyright update.\n+\t* java/awt/GraphicsConfiguration.java: Copyright update.\n+\t* java/awt/Component.java: (addNotify): Don't call\n+\taddNotifyContainerChildren().\n+\t(addNotifyContainerChildren): Removed.\n+\t(setPeer): New method from Classpath.\n+\t(setTreeLock): Likewise.\n+\t(setVisible): Rewrote.\n+\t(show): Use it.\n+\t(hide): Likewise.\n+\t(validate): Set `valid'.\n+\t(checkImage(Image,ImageObserver)): Implementation from Classpath.\n+\t(createImage(ImageProducer)): Likewise.\n+\t(prepareImage): Likewise.\n+\t* java/awt/Container.java (addImpl): Handle case where constraint\n+\tis not a String.  Post event via system event queue.\n+\t(remove): Post event via system event queue.\n+\t(validateTree): Only validate child if it is invalid.\n+\t(getAlignmentX): Call super method as default.\n+\t(getAlignmentY): Likewise.\n+\t(addContainerListener): Now synchronized.\n+\t(removeContainerListener): Likewise.\n+\t(addNotifyContainerChildren): Now private.\n+\t* java/awt/ComponentOrientation.java: Updated copyright.  Added\n+\t@author.\n+\t* java/awt/FlowLayout.java (serialVersionUID): New field.\n+\t(setAlignment): Better exception message.\n+\t(layoutContainer): Don't compute component's preferred size unless\n+\twe're going to use it.\n+\t* java/awt/BorderLayout.java (AFTER_LAST_LINE, AFTER_LINE_ENDS,\n+\tBEFORE_FIRST_LINE, BEFORE_LINE_BEGINS): New constants.\n+\t(firstLine, lastLine, firstItem, lastItem): New fields.\n+\t(addLayoutComponent): Handle case where constraints is null.\n+\tAlso, handle relative locations.\n+\t(removeLayoutComponent): Handle relative locations.\n+\t(MIN, MAX, PREF): New constants.\n+\t(calcCompSize): New method.\n+\t(calcSize): New method.\n+\t(minimumLayoutSize): Use it.\n+\t(preferredLayoutSize): Likewise.\n+\t(maximumLayoutSize): Likewise.\n+\t(toString): Include more information.\n+\t(setBounds): New method.\n+\t(layoutContainer): Use libgcj implementation; extended to handle\n+\trelative locations.\n+\n 2002-01-15  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/Float.java (equals): Preserve old code."}, {"sha": "3ce308c6d67d16517a0991441759faccc7a60918", "filename": "libjava/Makefile.am", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -583,10 +583,10 @@ gnu/awt/j2d/DirectRasterGraphics.java \\\n gnu/awt/j2d/Graphics2DImpl.java \\\n gnu/awt/j2d/IntegerGraphicsState.java \\\n gnu/awt/j2d/MappedRaster.java \\\n-gnu/gcj/awt/BitMaskExtent.java \\\n-gnu/gcj/awt/Buffers.java \\\n-gnu/gcj/awt/ComponentDataBlitOp.java \\\n-gnu/gcj/awt/GLightweightPeer.java \\\n+gnu/java/awt/BitMaskExtent.java \\\n+gnu/java/awt/Buffers.java \\\n+gnu/java/awt/ComponentDataBlitOp.java \\\n+gnu/java/awt/GLightweightPeer.java \\\n gnu/java/beans/editors/ColorEditor.java\t\\\n gnu/java/beans/editors/FontEditor.java \\\n gnu/java/beans/editors/NativeBooleanEditor.java\t\\"}, {"sha": "ac5848dab469d632316b5c24ba3c1f73b49c0d69", "filename": "libjava/Makefile.in", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -334,10 +334,10 @@ gnu/awt/j2d/DirectRasterGraphics.java \\\n gnu/awt/j2d/Graphics2DImpl.java \\\n gnu/awt/j2d/IntegerGraphicsState.java \\\n gnu/awt/j2d/MappedRaster.java \\\n-gnu/gcj/awt/BitMaskExtent.java \\\n-gnu/gcj/awt/Buffers.java \\\n-gnu/gcj/awt/ComponentDataBlitOp.java \\\n-gnu/gcj/awt/GLightweightPeer.java \\\n+gnu/java/awt/BitMaskExtent.java \\\n+gnu/java/awt/Buffers.java \\\n+gnu/java/awt/ComponentDataBlitOp.java \\\n+gnu/java/awt/GLightweightPeer.java \\\n gnu/java/beans/editors/ColorEditor.java\t\\\n gnu/java/beans/editors/FontEditor.java \\\n gnu/java/beans/editors/NativeBooleanEditor.java\t\\\n@@ -1732,11 +1732,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/awt/xlib/XGraphicsConfiguration.P \\\n .deps/gnu/awt/xlib/XPanelPeer.P .deps/gnu/awt/xlib/XToolkit.P \\\n .deps/gnu/classpath/Configuration.P .deps/gnu/gcj/Core.P \\\n-.deps/gnu/gcj/RawData.P .deps/gnu/gcj/awt/BitMaskExtent.P \\\n-.deps/gnu/gcj/awt/Buffers.P .deps/gnu/gcj/awt/ComponentDataBlitOp.P \\\n-.deps/gnu/gcj/awt/GLightweightPeer.P \\\n-.deps/gnu/gcj/convert/BytesToUnicode.P .deps/gnu/gcj/convert/Convert.P \\\n-.deps/gnu/gcj/convert/IOConverter.P \\\n+.deps/gnu/gcj/RawData.P .deps/gnu/gcj/convert/BytesToUnicode.P \\\n+.deps/gnu/gcj/convert/Convert.P .deps/gnu/gcj/convert/IOConverter.P \\\n .deps/gnu/gcj/convert/Input_8859_1.P \\\n .deps/gnu/gcj/convert/Input_ASCII.P \\\n .deps/gnu/gcj/convert/Input_EUCJIS.P \\\n@@ -1802,6 +1799,9 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/xlib/natXColor.P .deps/gnu/gcj/xlib/natXConfigureEvent.P \\\n .deps/gnu/gcj/xlib/natXException.P .deps/gnu/gcj/xlib/natXExposeEvent.P \\\n .deps/gnu/gcj/xlib/natXImage.P .deps/gnu/gcj/xlib/natXUnmapEvent.P \\\n+.deps/gnu/java/awt/BitMaskExtent.P .deps/gnu/java/awt/Buffers.P \\\n+.deps/gnu/java/awt/ComponentDataBlitOp.P \\\n+.deps/gnu/java/awt/GLightweightPeer.P \\\n .deps/gnu/java/beans/BeanInfoEmbryo.P \\\n .deps/gnu/java/beans/EmptyBeanInfo.P \\\n .deps/gnu/java/beans/ExplicitBeanInfo.P \\"}, {"sha": "69cc6e2b5e27abfe489ee997c7a4fbef898c3ec2", "filename": "libjava/gnu/awt/xlib/XGraphicsConfiguration.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fawt%2Fxlib%2FXGraphicsConfiguration.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -26,7 +26,7 @@\n import gnu.gcj.xlib.XColor;\n import gnu.gcj.xlib.Screen;\n import gnu.gcj.xlib.Display;\n-import gnu.gcj.awt.Buffers;\n+import gnu.java.awt.Buffers;\n import java.util.Hashtable;\n \n public class XGraphicsConfiguration extends GraphicsConfiguration"}, {"sha": "884ab502dc9c6bd7fb230138566f57283835ac4d", "filename": "libjava/gnu/gcj/awt/BitMaskExtent.java", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c342f12677626f2f683eb9ce43f1d3905105f231/libjava%2Fgnu%2Fgcj%2Fawt%2FBitMaskExtent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c342f12677626f2f683eb9ce43f1d3905105f231/libjava%2Fgnu%2Fgcj%2Fawt%2FBitMaskExtent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fawt%2FBitMaskExtent.java?ref=c342f12677626f2f683eb9ce43f1d3905105f231", "patch": "@@ -1,51 +0,0 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n-\n-package gnu.gcj.awt;\n-\n-/** \n- * Simple transparent utility class that can be used to perform bit\n- * mask extent calculations.\n- */\n-public final class BitMaskExtent\n-{\n-  /** The number of the least significant bit of the bit mask extent. */\n-  public byte leastSignificantBit;\n-\n-  /** The number of bits in the bit mask extent. */\n-  public byte bitWidth;\n-  \n-  /**\n-   * Set the bit mask. This will calculate and set the leastSignificantBit\n-   * and bitWidth fields.\n-   *\n-   * @see #leastSignificantBit\n-   * @see #bitWidth\n-   */\n-  public void setMask(long mask)\n-  {\n-    leastSignificantBit = 0;\n-    bitWidth = 0;\n-    if (mask == 0) return;\n-    long shiftMask = mask;\n-    for (; (shiftMask&1) == 0; shiftMask >>>=1) leastSignificantBit++;\n-    for (; (shiftMask&1) != 0; shiftMask >>>=1) bitWidth++;\n-    \n-    if (shiftMask != 0)\n-      throw new IllegalArgumentException(\"mask must be continuous\");\n-  }\n-  \n-  /** \n-   * Calculate the bit mask based on the values of the\n-   * leastSignificantBit and bitWidth fields.\n-   */\n-  public long toMask()\n-  {\n-    return ((1<<bitWidth)-1) << leastSignificantBit;\n-  }  \n-}"}, {"sha": "4f9cb7cd2aa34da469f2541e38e5bcb4dbc4943a", "filename": "libjava/gnu/java/awt/BitMaskExtent.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fjava%2Fawt%2FBitMaskExtent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fjava%2Fawt%2FBitMaskExtent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FBitMaskExtent.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -0,0 +1,68 @@\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n+\n+package gnu.java.awt;\n+\n+/** \n+ * Simple transparent utility class that can be used to perform bit\n+ * mask extent calculations.\n+ */\n+public final class BitMaskExtent\n+{\n+  /** The number of the least significant bit of the bit mask extent. */\n+  public byte leastSignificantBit;\n+\n+  /** The number of bits in the bit mask extent. */\n+  public byte bitWidth;\n+  \n+  /**\n+   * Set the bit mask. This will calculate and set the leastSignificantBit\n+   * and bitWidth fields.\n+   *\n+   * @see #leastSignificantBit\n+   * @see #bitWidth\n+   */\n+  public void setMask(long mask)\n+  {\n+    leastSignificantBit = 0;\n+    bitWidth = 0;\n+    if (mask == 0) return;\n+    long shiftMask = mask;\n+    for (; (shiftMask&1) == 0; shiftMask >>>=1) leastSignificantBit++;\n+    for (; (shiftMask&1) != 0; shiftMask >>>=1) bitWidth++;\n+    \n+    if (shiftMask != 0)\n+      throw new IllegalArgumentException(\"mask must be continuous\");\n+  }\n+  \n+  /** \n+   * Calculate the bit mask based on the values of the\n+   * leastSignificantBit and bitWidth fields.\n+   */\n+  public long toMask()\n+  {\n+    return ((1<<bitWidth)-1) << leastSignificantBit;\n+  }  \n+}"}, {"sha": "8deccdbc0c098faef7549f459c89c180a05185e3", "filename": "libjava/gnu/java/awt/Buffers.java", "status": "renamed", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fjava%2Fawt%2FBuffers.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fjava%2Fawt%2FBuffers.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FBuffers.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,12 +1,29 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n \n-package gnu.gcj.awt;\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n+\n+package gnu.java.awt;\n \n import java.awt.image.*;\n ", "previous_filename": "libjava/gnu/gcj/awt/Buffers.java"}, {"sha": "ac6eb3ed24e6cf3ff84c345f97cfb04c9202f018", "filename": "libjava/gnu/java/awt/ComponentDataBlitOp.java", "status": "renamed", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fjava%2Fawt%2FComponentDataBlitOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fjava%2Fawt%2FComponentDataBlitOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FComponentDataBlitOp.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,12 +1,29 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n \n-package gnu.gcj.awt;\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n+\n+package gnu.java.awt;\n \n import java.awt.geom.*;\n import java.awt.image.*;", "previous_filename": "libjava/gnu/gcj/awt/ComponentDataBlitOp.java"}, {"sha": "79b9d743a6977207eb7227409b677d7f97ef0441", "filename": "libjava/gnu/java/awt/GLightweightPeer.java", "status": "renamed", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fjava%2Fawt%2FGLightweightPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fgnu%2Fjava%2Fawt%2FGLightweightPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2FGLightweightPeer.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,12 +1,29 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n \n-package gnu.gcj.awt;\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n+\n+package gnu.java.awt;\n \n import java.awt.*;\n import java.awt.peer.*;\n@@ -131,4 +148,9 @@ public void setForeground(Color color) {}\n   public void setVisible(boolean visible) {}\n \n   public void show() {}\n+\n+  public ColorModel getColorModel ()\n+  {\n+    return null;\n+  }\n }", "previous_filename": "libjava/gnu/gcj/awt/GLightweightPeer.java"}, {"sha": "4a0aa7d7ee91299e4c7af1056bea6591fd2fb7b2", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -396,6 +396,9 @@\n /* Define as const if the declaration of iconv() needs const. */\n #undef ICONV_CONST\n \n+/* Define if your <locale.h> file defines LC_MESSAGES. */\n+#undef HAVE_LC_MESSAGES\n+\n /* Required define if using POSIX threads */\n #undef _REENTRANT\n "}, {"sha": "cb37b642c1d7e1682e929e9be989836801f2f866", "filename": "libjava/java/awt/AWTEvent.java", "status": "modified", "additions": 140, "deletions": 24, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FAWTEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FAWTEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEvent.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,28 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n@@ -18,68 +36,166 @@\n /**\n  * AWTEvent is the root event class for all AWT events in the JDK 1.1 event \n  * model. It supersedes the Event class from JDK 1.0.\n+ * @author Warren Levy  <warrenl@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-\n public abstract class AWTEvent extends java.util.EventObject\n {\n+  /**\n+   * @serial Indicates whether or not this event has been consumed.\n+   */\n   protected boolean consumed;\n+\n+  /**\n+   * @serial The identifier number of this event.\n+   */\n   protected int id;\n \n-  /* Event selection masks */\n-  public static final long COMPONENT_EVENT_MASK    = 1 << 0,\n-\t\t\t   CONTAINER_EVENT_MASK    = 1 << 1,\n-\t\t\t   FOCUS_EVENT_MASK        = 1 << 2,\n-\t\t\t   KEY_EVENT_MASK          = 1 << 3,\n-\t\t\t   MOUSE_EVENT_MASK        = 1 << 4, \n-\t\t\t   MOUSE_MOTION_EVENT_MASK = 1 << 5,\n-\t\t\t   WINDOW_EVENT_MASK       = 1 << 6,\n-\t\t\t   ACTION_EVENT_MASK       = 1 << 7,\n-\t\t\t   ADJUSTMENT_EVENT_MASK   = 1 << 8,\n-\t\t\t   ITEM_EVENT_MASK         = 1 << 9,\n-\t\t\t   TEXT_EVENT_MASK         = 1 << 10,\n-\t\t\t   INPUT_METHOD_EVENT_MASK = 1 << 11;\n+  /**\n+  * Mask for selecting component events.\n+  */\n+  public static final long COMPONENT_EVENT_MASK = 0x001;\n+\n+  /**\n+  * Mask for selecting container events.\n+  */\n+  public static final long CONTAINER_EVENT_MASK = 0x002;\n+\n+  /**\n+  * Mask for selecting component focus events.\n+  */\n+  public static final long FOCUS_EVENT_MASK = 0x004;\n+\n+  /**\n+  * Mask for selecting keyboard events.\n+  */\n+  public static final long KEY_EVENT_MASK = 0x008;\n+\n+  /**\n+  * Mask for mouse button events.\n+  */\n+  public static final long MOUSE_EVENT_MASK = 0x010;\n+\n+  /**\n+  * Mask for mouse motion events.\n+  */\n+  public static final long MOUSE_MOTION_EVENT_MASK = 0x020;\n+\n+  /**\n+  * Mask for window events.\n+  */\n+  public static final long WINDOW_EVENT_MASK = 0x040;\n+\n+  /**\n+  * Mask for action events.\n+  */\n+  public static final long ACTION_EVENT_MASK = 0x080;\n+\n+  /**\n+  * Mask for adjustment events.\n+  */\n+  public static final long ADJUSTMENT_EVENT_MASK = 0x100;\n+\n+  /**\n+  * Mask for item events.\n+  */\n+  public static final long ITEM_EVENT_MASK = 0x200;\n+\n+  /**\n+  * Mask for text events.\n+  */\n+  public static final long TEXT_EVENT_MASK = 0x400;\n+\n+  /**\n+  * This is the highest number for event ids that are reserved for use by\n+  * the AWT system itself.\n+  */\n+  public static final int RESERVED_ID_MAX = 1999;\n+\n+  public static final long INPUT_METHOD_EVENT_MASK = 1 << 11;\n \n   /* Additional event selection masks from JDK 1.3 javadocs */\n   public static final long PAINT_EVENT_MASK            = 1 << 13,\n \t\t\t   INVOCATION_EVENT_MASK       = 1 << 14,\n \t\t\t   HIERARCHY_EVENT_MASK        = 1 << 15,\n \t\t\t   HIERARCHY_BOUNDS_EVENT_MASK = 1 << 16;\n \n-  public static final int RESERVED_ID_MAX = 0x7cf;\n-\n+  /**\n+   * Initializes a new instance of <code>AWTEvent</code> from the\n+   * specified Java 1.0 event object.\n+   *\n+   * @param event The Java 1.0 event to initialize from.\n+   *\n+   *\n+   * Removed this method because we no longer support Java 1.0\n+   *\n+   */\n   public AWTEvent(Event event)\n   {\n     // FIXME??\n     super(event.target);\n     this.id = event.id;\n   }\n-  \n+\n+  /**\n+   * Initializes a new instance of <code>AWTEvent</code> with the specified\n+   * source and id.\n+   *\n+   * @param source The object that caused the event.\n+   * @param id The event id.\n+   */\n   public AWTEvent(Object source, int id)\n   {\n     super(source);\n     this.id = id;\n   }\n \n+  /**\n+   * Returns the id number of this event.\n+   *\n+   * @return The id number of this event.\n+   */\n   public int getID()\n   {\n     return id;\n   }\n \n+  /**\n+   * Returns a string representation of this event.\n+   *\n+   * @return A string representation of this event.\n+   */\n   public String paramString ()\n   {\n     return \"\";\n   }\n \n+  /**\n+   * Returns a string representation of this event.\n+   *\n+   * @return A string representation of this event.\n+   */\n   public String toString ()\n   {\n     return getClass().getName() + \"[\" + paramString() + \"] on \" + source;\n   }\n-  \n+\n+  /**\n+   * Consumes this event so that it will not be processed in the default\n+   * manner.\n+   */\n   protected void consume()\n   {\n     consumed = true;\n   }\n-  \n+\n+  /**\n+   * Tests whether not not this event has been consumed.  A consumed event\n+   * is not processed in the default manner.\n+   *\n+   * @return <code>true</code> if this event has been consumed, \n+   * <code>false</code> otherwise.\n+   */\n   protected boolean isConsumed()\n   {\n     return consumed;"}, {"sha": "f417ad94040215943ce4318082b5ea16383c69aa", "filename": "libjava/java/awt/AWTEventMulticaster.java", "status": "modified", "additions": 528, "deletions": 62, "changes": 590, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEventMulticaster.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,28 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n@@ -21,27 +39,80 @@\n  */\n \n /**\n- * Convienience class for thread-safe multicasting of AWT events,\n- * without synchronization.\n- *\n- * @author Bryce McKinlay\n- */\n-\n+  * This class is used to implement a chain of event handlers.  Dispatching\n+  * using this class is thread safe.  Here is a quick example of how to\n+  * add and delete listeners using this class.  For this example, we will\n+  * assume are firing <code>AdjustableEvent</code>'s.  However, this \n+  * same approach is useful for all events in the <code>java.awt.event</code>\n+  * package, and more if this class is subclassed.\n+  * <p>\n+  * <code> \n+  * AdjustmentListener al;\n+  * \n+  * public void \n+  * addAdjustmentListener(AdjustmentListener listener)\n+  * {\n+  *   al = AWTEventMulticaster.add(al, listener);\n+  * }\n+  *\n+  * public void\n+  * removeAdjustmentListener(AdjustmentListener listener)\n+  * {\n+  *   al = AWTEventMulticaster.remove(al, listener);\n+  * }\n+  * </code>\n+  * <p>\n+  * When it come time to process an event, simply call <code>al</code>,\n+  * assuming it is not <code>null</code>.\n+  * <p>\n+  * The first time <code>add</code> is called it is passed\n+  * <code>null</code> and <code>listener</code> as its arguments.  This\n+  * starts building the chain.  This class returns <code>listener</code>\n+  * which becomes the new <code>al</code>.  The next time, <code>add</code>\n+  * is called with <code>al</code> and <code>listener</code> and the\n+  * new listener is then chained to the old.\n+  *\n+  * @author Bryce McKinlay\n+  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  */\n public class AWTEventMulticaster implements ComponentListener, \n   ContainerListener, FocusListener, KeyListener, MouseListener,\n   MouseMotionListener, WindowListener, ActionListener, ItemListener, \n   AdjustmentListener, TextListener, InputMethodListener, HierarchyListener, \n   HierarchyBoundsListener\n {\n-  protected final EventListener a, b;                            \n-\n+  /**\n+   * A variable in the event chain.\n+   */\n+  protected final EventListener a;\n+\n+  /**\n+   * A variable in the event chain\n+   */\n+  protected final EventListener b;\n+\n+  /**\n+   * Initializes a new instance of <code>AWTEventMulticaster</code> with\n+   * the specified event listener parameters.\n+   *\n+   * @param a The \"a\" listener object.\n+   * @param b The \"b\" listener object.\n+   */\n   protected AWTEventMulticaster(EventListener a,\n                         \tEventListener b)\n   {\n     this.a = a;\n     this.b = b;\n   }\n \n+  /**\n+   * Chain <code>EventListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   protected static EventListener addInternal(EventListener a, EventListener b)\n   {\n     if (a == null)\n@@ -50,7 +121,15 @@ else if (b == null)\n       return a;\n     else return new AWTEventMulticaster(a, b);\n   }\n-  \n+\n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   protected static EventListener removeInternal(EventListener l, \n \t\t\t\t\t\tEventListener oldl)\n   {\n@@ -64,7 +143,17 @@ else if (l instanceof AWTEventMulticaster)\n     return l;\n   }\n \n-  /* Remove oldl from this multicaster. */\n+  /**\n+   * Removes the specified object from this multicaster object.  If the\n+   * object to remove is not part of this multicaster, then the remove\n+   * method on the parent multicaster (if it exists) is called and a \n+   * new multicaster object is returned based on that object and this\n+   * multicaster's non-parent object.\n+   *\n+   * @param old The object to remove from this multicaster.\n+   *\n+   * @return The resulting multicaster with the specified listener removed.\n+   */\n   protected EventListener remove(EventListener oldl)\n   {\n     // If oldl is an immediate child, return the other child.\n@@ -73,7 +162,7 @@ protected EventListener remove(EventListener oldl)\n     if (b == oldl)\n       return a;\n \n-    // If a and/or b are Multicaster's, search them recursivly. \n+    // If a and/or b are Multicaster's, search them recursively.\n     if (a instanceof AWTEventMulticaster)\n       {\n         AWTEventMulticaster mc = (AWTEventMulticaster) a;\n@@ -88,108 +177,236 @@ protected EventListener remove(EventListener oldl)\n \tif (newb != b)\n \t  return new AWTEventMulticaster (a, newb);\n       }\n-      \n+\n     // oldl was not found.\n     return this;\n   }\n \n+  /**\n+   * Chain <code>ActionListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static ActionListener add(ActionListener a, ActionListener b)\n   {\n     return (ActionListener) addInternal(a, b);\n   }\n-  \n+\n+  /**\n+   * Chain <code>AdjustmentListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static AdjustmentListener add(AdjustmentListener a, \n \t\t\t\t       AdjustmentListener b)\n   {\n     return (AdjustmentListener) addInternal(a, b);\n   }\t\t\t\t       \n-\t\t\t\t       \n+\n+  /**\n+   * Chain <code>ComponentListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static ComponentListener add(ComponentListener a, ComponentListener b)\n   {\n     return (ComponentListener) addInternal(a, b);\n   }\n-  \n+\n+  /**\n+   * Chain <code>ContainerListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static ContainerListener add(ContainerListener a, ContainerListener b)\n   {\n     return (ContainerListener) addInternal(a, b);\n   }\n-  \n+\n+  /**\n+   * Chain <code>FocusListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static FocusListener add(FocusListener a, FocusListener b) \n   {\n     return (FocusListener) addInternal(a, b);\n   }\n-  \n+\n   public static HierarchyBoundsListener add(HierarchyBoundsListener a, \n \t\t\t\t\t    HierarchyBoundsListener b)\n   {\n     return (HierarchyBoundsListener) addInternal(a, b);\n   }\n-\t\t\t\t\t    \n+\n   public static HierarchyListener add(HierarchyListener a, HierarchyListener b)\n   {\n     return (HierarchyListener) addInternal(a, b);\n   }\n-  \n+\n   public static InputMethodListener add(InputMethodListener a, \n \t\t\t\t\tInputMethodListener b)\n   {\n     return (InputMethodListener) addInternal(a, b);\n   }\n-\t\t\t\t\t\n+\n+  /**\n+   * Chain <code>ItemListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static ItemListener add(ItemListener a, ItemListener b)\n   {\n     return (ItemListener) addInternal(a, b);\n   }\n-  \n+\n+  /**\n+   * Chain <code>KeyListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static KeyListener add(KeyListener a, KeyListener b)\n   {\n     return (KeyListener) addInternal(a, b);\n   }\n \n+  /**\n+   * Chain <code>MouseListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static MouseListener add(MouseListener a, MouseListener b)\n   {\n     return (MouseListener) addInternal(a, b);\n   }\n-  \n+\n+  /**\n+   * Chain <code>MouseMotionListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static MouseMotionListener add(MouseMotionListener a, \n \t\t\t\t\tMouseMotionListener b)\n   {\n     return (MouseMotionListener) addInternal(a, b);\n   }\n-\t\t\t\t\t\n+\n+  /**\n+   * Chain <code>AdjustmentListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static TextListener add(TextListener a, TextListener b)\n   {\n     return (TextListener) addInternal(a, b);\n   }\n-  \n+\n+  /**\n+   * Chain <code>WindowListener</code> b to a.\n+   *\n+   * @param a - Listener to chain to.\n+   * @param b - Listener to chain.\n+   *\n+   * @return Latest entry in the chain.\n+   */\n   public static WindowListener add(WindowListener a, WindowListener b)\n   {\n     return (WindowListener) addInternal(a, b);\n   }\n-  \n+\n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static ActionListener remove(ActionListener l, ActionListener oldl)\n   {\n     return (ActionListener) removeInternal(l, oldl);\n   }\n-  \n+\n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static AdjustmentListener remove(AdjustmentListener l, \n \t\t\t\t\t  AdjustmentListener oldl) \n   {\n     return (AdjustmentListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static ComponentListener remove(ComponentListener l, \n \t\t\t\t\t ComponentListener oldl) \n   {\n     return (ComponentListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static ContainerListener remove(ContainerListener l, \n \t\t\t\t\t ContainerListener oldl) \n   {\n     return (ContainerListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static FocusListener remove(FocusListener l, FocusListener oldl) \n   {\n     return (FocusListener) removeInternal(l, oldl);\n@@ -213,251 +430,500 @@ public static InputMethodListener remove(InputMethodListener l,\n     return (InputMethodListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static ItemListener remove(ItemListener l, ItemListener oldl) \n   {\n     return (ItemListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static KeyListener remove(KeyListener l, KeyListener oldl) \n   {\n     return (KeyListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static MouseListener remove(MouseListener l, MouseListener oldl) \n   {\n     return (MouseListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static MouseMotionListener remove(MouseMotionListener l, \n \t\t\t\t\t   MouseMotionListener oldl) \n   {\n     return (MouseMotionListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static TextListener remove(TextListener l, TextListener oldl)                                            \n   {\n     return (TextListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Removes the listener <code>old</code> from the listener <code>lis</code>.\n+   *\n+   * @param lis The listener to remove <code>old</code> from.\n+   * @param old The listener to remove.\n+   *\n+   * @return The resulting listener after the remove operation.\n+   */\n   public static WindowListener remove(WindowListener l, WindowListener oldl) \n   {\n     return (WindowListener) removeInternal(l, oldl);\n   }\n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void actionPerformed(ActionEvent e) \n   {\n     ((ActionListener) a).actionPerformed(e);\n     ((ActionListener) b).actionPerformed(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void adjustmentValueChanged(AdjustmentEvent e) \n   {\n     ((AdjustmentListener) a).adjustmentValueChanged(e);\n     ((AdjustmentListener) b).adjustmentValueChanged(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void componentHidden(ComponentEvent e)\n   {\n     ((ComponentListener) a).componentHidden(e);\n     ((ComponentListener) b).componentHidden(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void componentMoved(ComponentEvent e)\n   {\n     ((ComponentListener) a).componentMoved(e);\n     ((ComponentListener) b).componentMoved(e);\n   }\n-    \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void componentResized(ComponentEvent e)\n   {\n     ((ComponentListener) a).componentResized(e);\n     ((ComponentListener) b).componentResized(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void componentShown(ComponentEvent e)\n   {\n     ((ComponentListener) a).componentShown(e);\n     ((ComponentListener) b).componentShown(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void componentAdded(ContainerEvent e)\n   {\n     ((ContainerListener) a).componentAdded(e);\n     ((ContainerListener) b).componentAdded(e);\n   }\n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void componentRemoved(ContainerEvent e)\n   {\n     ((ContainerListener) a).componentRemoved(e);\n     ((ContainerListener) b).componentRemoved(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void focusGained(FocusEvent e)\n   {\n     ((FocusListener) a).focusGained(e);\n     ((FocusListener) b).focusGained(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void focusLost(FocusEvent e) \n   {\n     ((FocusListener) a).focusLost(e);\n     ((FocusListener) b).focusLost(e);\n   }\n-  \n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void ancestorMoved(HierarchyEvent e) \n   {\n     ((HierarchyBoundsListener) a).ancestorMoved(e);\n     ((HierarchyBoundsListener) b).ancestorMoved(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void ancestorResized(HierarchyEvent e) \n   {\n     ((HierarchyBoundsListener) a).ancestorResized(e);\n     ((HierarchyBoundsListener) b).ancestorResized(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void hierarchyChanged(HierarchyEvent e) \n   {\n     ((HierarchyListener) a).hierarchyChanged(e);\n     ((HierarchyListener) b).hierarchyChanged(e);\n   }\n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void caretPositionChanged(InputMethodEvent e)\n   {\n     ((InputMethodListener) a).caretPositionChanged(e);\n     ((InputMethodListener) b).caretPositionChanged(e);\n   }\n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void inputMethodTextChanged(InputMethodEvent e) \n   {\n     ((InputMethodListener) a).inputMethodTextChanged(e);\n     ((InputMethodListener) b).inputMethodTextChanged(e);\n   }\n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void itemStateChanged(ItemEvent e) \n   {\n     ((ItemListener) a).itemStateChanged(e);\n     ((ItemListener) b).itemStateChanged(e);\n   }  \n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void keyPressed(KeyEvent e)\n   {\n     ((KeyListener) a).keyPressed(e);\n     ((KeyListener) b).keyPressed(e);\n   }\n-    \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void keyReleased(KeyEvent e) \n   {\n     ((KeyListener) a).keyReleased(e);\n     ((KeyListener) b).keyReleased(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void keyTyped(KeyEvent e) \n   {\n     ((KeyListener) a).keyTyped(e);\n     ((KeyListener) b).keyTyped(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void mouseClicked(MouseEvent e) \n   {\n     ((MouseListener) a).mouseClicked(e);\n     ((MouseListener) b).mouseClicked(e);\n   }\n-  \n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void mouseEntered(MouseEvent e) \n   {\n     ((MouseListener) a).mouseEntered(e);\n     ((MouseListener) b).mouseEntered(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void mouseExited(MouseEvent e) \n   {\n     ((MouseListener) a).mouseExited(e);\n     ((MouseListener) b).mouseExited(e);\n   }\n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void mousePressed(MouseEvent e) \n   {\n     ((MouseListener) a).mousePressed(e);\n     ((MouseListener) b).mousePressed(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void mouseReleased(MouseEvent e) \n   {\n     ((MouseListener) a).mouseReleased(e);\n     ((MouseListener) b).mouseReleased(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void mouseDragged(MouseEvent e) \n   {\n     ((MouseMotionListener) a).mouseDragged(e);\n     ((MouseMotionListener) b).mouseDragged(e);\n   }\n \n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void mouseMoved(MouseEvent e) \n   {\n     ((MouseMotionListener) a).mouseMoved(e);\n     ((MouseMotionListener) b).mouseMoved(e);\n   }\n-    \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void textValueChanged(TextEvent e) \n   {\n     ((TextListener) a).textValueChanged(e);\n     ((TextListener) b).textValueChanged(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void windowActivated(WindowEvent e) \n   {\n     ((WindowListener) a).windowActivated(e);\n     ((WindowListener) b).windowActivated(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void windowClosed(WindowEvent e) \n   {\n     ((WindowListener) a).windowClosed(e);\n     ((WindowListener) b).windowClosed(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void windowClosing(WindowEvent e) \n   {\n     ((WindowListener) a).windowClosing(e);\n     ((WindowListener) b).windowClosing(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void windowDeactivated(WindowEvent e) \n   {\n     ((WindowListener) a).windowDeactivated(e);\n     ((WindowListener) b).windowDeactivated(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void windowDeiconified(WindowEvent e) \n   {\n     ((WindowListener) a).windowDeiconified(e);\n     ((WindowListener) b).windowDeiconified(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void windowIconified(WindowEvent e) \n   {\n     ((WindowListener) a).windowIconified(e);\n     ((WindowListener) b).windowIconified(e);\n   }\n-  \n+\n+  /**\n+   * Handles this event by dispatching it to the \"a\" and \"b\" listener\n+   * instances.\n+   *\n+   * @param event The event to handle.\n+   */\n   public void windowOpened(WindowEvent e) \n   {\n     ((WindowListener) a).windowOpened(e);\n     ((WindowListener) b).windowOpened(e);\n   }\n-  \n+\n   protected static void save(ObjectOutputStream s, String k, EventListener l) \n   {\n-    // FIXME\n+    throw new RuntimeException(\"Not Implemented\");\n   }\n \n   protected void saveInternal(ObjectOutputStream s, String k)\n   {\n-    // FIXME\n+    throw new RuntimeException(\"Not Implemented\");\n   }\n-\n }"}, {"sha": "dd19b0ebb8e59913593dfae90ffbfcf355066216", "filename": "libjava/java/awt/BorderLayout.java", "status": "modified", "additions": 585, "deletions": 224, "changes": 809, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FBorderLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FBorderLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBorderLayout.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,174 +1,481 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* BorderLayout.java -- A layout manager class\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n+/**\n+  * This class implements a layout manager that positions components\n+  * in certain sectors of the parent container.\n+  *\n+  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  * @author Rolf W. Rasmussen  <rolfwr@ii.uib.no>\n+  */\n public class BorderLayout implements LayoutManager2, java.io.Serializable\n {\n-  public static final String NORTH  = \"North\",\n-                             SOUTH  = \"South\",\n-                             EAST   = \"East\",\n-                             WEST   = \"West\",\n-                             CENTER = \"Center\";\n-  \n-  // FIXME: use these too\n-  public static final String BEFORE_FIRST_LINE = \"First\",\n-                             AFTER_LAST_LINE = \"Last\",\n-                             BEFORE_LINE_BEGINS = \"Before\",\n-                             AFTER_LINE_ENDS = \"After\";\n-\n-\n-  // FIXME: check serialization of fields\n-  int hgap;\n-  int vgap;\n-  Component north, south, east, west, center;\n-\n-  public BorderLayout ()\n-  {\n-    this (0, 0);\n-  }\n-\n-  public BorderLayout (int hgap, int vgap)\n-  {\n-    this.hgap = hgap;\n-    this.vgap = vgap;\n-  }\n-\n-  public int getHgap()\n-  {\n-    return hgap;\n-  }    \n-\n-  public void setHgap(int hgap)\n-  {\n-    this.hgap = hgap;\n-  }\n-\n-  public int getVgap()\n-  {\n-    return vgap;\n-  }    \n-\n-  public void setVgap(int vgap)\n-  {\n-    this.vgap = vgap;\n-  }\n-  \n-  public void addLayoutComponent(Component comp, Object constraints)\n-  {\n-    if ((constraints == null) || CENTER.equals(constraints))\n-      {\n-\tcenter = comp; \n-      }\n-    else if (NORTH.equals(constraints))\n-      {\n-\tnorth = comp;\n-      }\n-    else if (SOUTH.equals(constraints))\n-      {\n-\tsouth = comp;\n-      }\n-    else if (EAST.equals(constraints))\n-      {\n-\teast = comp;\n-      }\n-    else if (WEST.equals(constraints))\n-      {\n-\twest = comp;\n-      }\n-  }\n-    \n-  public void addLayoutComponent(String name, Component comp)\n-  {\n-    addLayoutComponent(comp, name);\n-  }\n-\n-  public void removeLayoutComponent(Component comp)\n-  {\n-    if (center == comp)\n-      {\n-\tcenter = null;\n-      }\n-    else if (north == comp)\n-      {\n-\tnorth = null;\n-      }\n-    else if (south == comp)\n-      {\n-\tsouth = null;\n-      }\n-    else if (east == comp)\n-      {\n-\teast = null;\n-      }\n-    else if (west == comp)\n-      {\n-\twest = null;\n-      }\n-  }\n-\n-  public Dimension minimumLayoutSize(Container target)\n-  {\n-    return calcSize(getMinimumSize(center),\n-\t\t    getMinimumSize(north),\n-\t\t    getMinimumSize(south),\n-\t\t    getMinimumSize(east),\n-\t\t    getMinimumSize(west),\n-\t\t    target);\n-  }\n-\n-  public Dimension preferredLayoutSize(Container target)\n-  {\n-    return calcSize(getPreferredSize(center),\n-\t\t    getPreferredSize(north),\n-\t\t    getPreferredSize(south),\n-\t\t    getPreferredSize(east),\n-\t\t    getPreferredSize(west),\n-\t\t    target);\t\n-  }\n-    \n-  /**\n-   * Completely disregards the requested maximum sizes of the\n-   * components, and states that the container has no upper size\n-   * limit.\n-   *\n-   * @return a dimension of width and height Integer.MAX_VALUE.\n-   */\n-  public Dimension maximumLayoutSize(Container target)\n-  {\n-    return (Dimension) DIM_MAX.clone();\n-  }\t\n-\n-  public float getLayoutAlignmentX(Container parent)\n-  {\n-    return Component.CENTER_ALIGNMENT;\n-  }\n-\n-  public float getLayoutAlignmentY(Container parent)\n-  {\n-    return Component.CENTER_ALIGNMENT;\n-  }\n-    \n-  public void invalidateLayout(Container target)\n-  {\n-    // TODO... implement caching?\n-  }\n-\n-  public void layoutContainer(Container target)\n-  {\n-    Insets i = target.getInsets();\n-    Dimension c = getPreferredSize(center);\n-    Dimension n = getPreferredSize(north);\n-    Dimension s = getPreferredSize(south);\n-    Dimension e = getPreferredSize(east);\n-    Dimension w = getPreferredSize(west);\n-    Dimension t = target.getSize();\n-    \n+\n+/*\n+ * Static Variables\n+ */\n+\n+/**\n+  * Constant indicating the top of the container\n+  */\n+public static final String NORTH = \"North\";\n+\n+/**\n+  * Constant indicating the bottom of the container\n+  */\n+public static final String SOUTH = \"South\";\n+\n+/**\n+  * Constant indicating the right side of the container\n+  */\n+public static final String EAST = \"East\";\n+\n+/**\n+  * Constant indicating the left side of the container\n+  */\n+public static final String WEST = \"West\";\n+\n+/**\n+  * Constant indicating the center of the container\n+  */\n+public static final String CENTER = \"Center\";\n+\n+/**\n+  * Constant indicating the position just after the last line of the\n+  * layout.\n+  */\n+public static final String AFTER_LAST_LINE = \"Last\";\n+\n+/**\n+  * Constant indicating the position just after the end of the line.\n+  */\n+public static final String AFTER_LINE_ENDS = \"After\";\n+\n+/**\n+  * Constant indicating the position just before the first line of the\n+  * layout.\n+  */\n+public static final String BEFORE_FIRST_LINE = \"First\";\n+\n+/**\n+  * Constant indicating the position at the beginning of the line.\n+  */\n+public static final String BEFORE_LINE_BEGINS = \"Before\";\n+\n+// Serialization constant\n+private static final long serialVersionUID = -8658291919501921765L;\n+\n+/*************************************************************************/\n+\n+/*\n+ * Instance Variables\n+ */\n+\n+/**\n+  * @serial\n+  */\n+private Component north;\n+\n+/**\n+  * @serial\n+  */\n+private Component south;\n+\n+/**\n+  * @serial\n+  */\n+private Component east;\n+\n+/**\n+  * @serial\n+  */\n+private Component west;\n+\n+/**\n+  * @serial\n+  */\n+private Component center;\n+\n+/**\n+  * @serial\n+  */\n+private Component firstLine;\n+\n+/**\n+  * @serial\n+  */\n+private Component lastLine;\n+\n+/**\n+  * @serial\n+  */\n+private Component firstItem;\n+\n+/**\n+  * @serial\n+  */\n+private Component lastItem;\n+\n+/**\n+  * @serial The horizontal gap between components\n+  */\n+private int hgap;\n+\n+/**\n+  * @serial The vertical gap between components\n+  */\n+private int vgap;\n+\n+/*************************************************************************/\n+\n+/*\n+ * Constructors\n+ */\n+\n+/**\n+  * Initializes a new instance of <code>BorderLayout</code> with no\n+  * horiztonal or vertical gaps between components.\n+  */\n+public\n+BorderLayout()\n+{\n+  this(0,0);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Initializes a new instance of <code>BorderLayout</code> with the\n+  * specified horiztonal and vertical gaps between components.\n+  *\n+  * @param hgap The horizontal gap between components.\n+  * @param vgap The vertical gap between components.\n+  */\n+public\n+BorderLayout(int hgap, int vgap)\n+{\n+  this.hgap = hgap;\n+  this.vgap = vgap;\n+}\n+\n+/*************************************************************************/\n+\n+/*\n+ * Instance Variables\n+ */\n+\n+/**\n+  * Returns the horitzontal gap value.\n+  *\n+  * @return The horitzontal gap value.\n+  */\n+public int\n+getHgap()\n+{\n+  return(hgap);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets the horizontal gap to the specified value.\n+  *\n+  * @param hgap The new horizontal gap.\n+  */\n+public void\n+setHgap(int hgap)\n+{\n+  this.hgap = hgap;\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the vertical gap value.\n+  *\n+  * @return The vertical gap value.\n+  */\n+public int\n+getVgap()\n+{\n+  return(vgap);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets the vertical gap to the specified value.\n+  *\n+  * @param vgap The new vertical gap value.\n+  */\n+public void\n+setVgap(int vgap)\n+{\n+  this.vgap = vgap;\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Adds a component to the layout in the specified constraint position, \n+  * which must be one of the string constants defined in this class.\n+  *\n+  * @param component The component to add.\n+  * @param constraints The constraint string.\n+  *\n+  * @exception IllegalArgumentException If the constraint object is not\n+  * a string, or is not one of the specified constants in this class.\n+  */\n+public void\n+addLayoutComponent(Component component, Object constraints)\n+{\n+  if (constraints != null && ! (constraints instanceof String))\n+    throw new IllegalArgumentException(\"Constraint must be a string\");\n+\n+  String str = (String)constraints;\n+\n+  if (str == null || str.equals(CENTER))\n+    center = component;\n+  if (str.equals(NORTH))\n+    north = component;\n+  else if (str.equals(SOUTH))\n+    south = component;\n+  else if (str.equals(EAST))\n+    east = component;\n+  else if (str.equals(WEST))\n+    west = component;\n+  else if (str.equals(BEFORE_FIRST_LINE))\n+    firstLine = component;\n+  else if (str.equals(AFTER_LAST_LINE))\n+    lastLine = component;\n+  else if (str.equals(BEFORE_LINE_BEGINS))\n+    firstItem = component;\n+  else if (str.equals(AFTER_LINE_ENDS))\n+    lastItem = component;\n+  else\n+    throw new IllegalArgumentException(\"Constraint value not valid: \" + str);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Adds a component to the layout in the specified constraint position, \n+  * which must be one of the string constants defined in this class.\n+  *\n+  * @param constraints The constraint string.\n+  * @param component The component to add.\n+  *\n+  * @exception IllegalArgumentException If the constraint object is not\n+  * one of the specified constants in this class.\n+  *\n+  * @deprecated This method is deprecated in favor of\n+  * <code>addLayoutComponent(Component, Object)</code>.\n+  */\n+public void\n+addLayoutComponent(String constraints, Component component)\n+{\n+  addLayoutComponent(component, constraints);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Removes the specified component from the layout.\n+  *\n+  * @param component The component to remove from the layout.\n+  */\n+public void\n+removeLayoutComponent(Component component)\n+{\n+  if (north == component)\n+    north = null;\n+  if (south == component)\n+    south = null;\n+  if (east == component)\n+    east = null;\n+  if (west == component)\n+    west = null;\n+  if (center == component)\n+    center = null;\n+  if (firstItem == component)\n+    firstItem = null;\n+  if (lastItem == component)\n+    lastItem = null;\n+  if (firstLine == component)\n+    firstLine = null;\n+  if (lastLine == component)\n+    lastLine = null;\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the minimum size of the specified container using this layout.\n+  *\n+  * @param target The container to calculate the minimum size for.\n+  *\n+  * @return The minimum size of the container\n+  */\n+public Dimension \n+minimumLayoutSize(Container target)\n+{\n+  return calcSize(target, MIN);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the preferred size of the specified container using this layout.\n+  *\n+  * @param target The container to calculate the preferred size for.\n+  *\n+  * @return The preferred size of the container\n+  */\n+public Dimension \n+preferredLayoutSize(Container target)\n+{\n+  return calcSize(target, PREF);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the maximum size of the specified container using this layout.\n+  *\n+  * @param target The container to calculate the maximum size for.\n+  *\n+  * @return The maximum size of the container\n+  */\n+public Dimension \n+maximumLayoutSize(Container target)\n+{\n+  return calcSize(target, MAX);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the X axis alignment, which is a <code>float</code> indicating\n+  * where along the X axis this container wishs to position its layout.\n+  * 0 indicates align to the left, 1 indicates align to the right, and 0.5\n+  * indicates align to the center.\n+  *\n+  * @param parent The parent container.\n+  *\n+  * @return The X alignment value.\n+  */\n+public float\n+getLayoutAlignmentX(Container parent)\n+{\n+  return(parent.getAlignmentX());\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the Y axis alignment, which is a <code>float</code> indicating\n+  * where along the Y axis this container wishs to position its layout.\n+  * 0 indicates align to the top, 1 indicates align to the bottom, and 0.5\n+  * indicates align to the center.\n+  *\n+  * @param parent The parent container.\n+  *\n+  * @return The Y alignment value.\n+  */\n+public float\n+getLayoutAlignmentY(Container parent)\n+{\n+  return(parent.getAlignmentY());\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Instructs this object to discard any layout information it might\n+  * have cached.\n+  *\n+  * @param parent The parent container.\n+  */\n+public void\n+invalidateLayout(Container parent)\n+{\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Lays out the specified container according to the constraints\n+  * in this object.\n+  *\n+  * @param target The container to lay out.\n+  */\n+public void\n+layoutContainer(Container target)\n+{\n+  Insets i = target.getInsets();\n+\n+  ComponentOrientation orient = target.getComponentOrientation ();\n+  boolean left_to_right = orient.isLeftToRight ();\n+\n+  Component my_north = north;\n+  Component my_east = east;\n+  Component my_south = south;\n+  Component my_west = west;\n+\n+  // Note that we currently don't handle vertical layouts.  Neither\n+  // does JDK 1.3.\n+  if (firstLine != null)\n+    my_north = firstLine;\n+  if (lastLine != null)\n+    my_south = lastLine;\n+  if (firstItem != null)\n+    {\n+      if (left_to_right)\n+\tmy_west = firstItem;\n+      else\n+\tmy_east = firstItem;\n+    }\n+  if (lastItem != null)\n+    {\n+      if (left_to_right)\n+\tmy_east = lastItem;\n+      else\n+\tmy_west = lastItem;\n+    }\n+\n+  Dimension c = calcCompSize(center, PREF);\n+  Dimension n = calcCompSize(my_north, PREF);\n+  Dimension s = calcCompSize(my_south, PREF);\n+  Dimension e = calcCompSize(my_east, PREF);\n+  Dimension w = calcCompSize(my_west, PREF);\n+  Dimension t = target.getSize();\n+\n     /*\n              <-> hgap     <-> hgap\n       +----------------------------+          }\n@@ -190,65 +497,119 @@ public void layoutContainer(Container target)\n      i.left                    i.right\n     */\n \n-    int x1 = i.left;\n-    int x2 = x1 + w.width + hgap;\n-    int x3 = t.width - i.right - e.width;\n-    int ww = t.width - i.right - i.left;\n-\n-    int y1 = i.top;\n-    int y2 = y1 + n.height + vgap;\n-    int y3 = t.height - i.bottom - s.height;\n-    int hh = y3-y2-vgap;\n-\n-    setBounds(center, x2, y2, x3-x2-hgap, hh);\n-    setBounds(north, x1, y1, ww, n.height);\n-    setBounds(south, x1, y3, ww, s.height);\n-    setBounds(west, x1, y2, w.width, hh);\n-    setBounds(east, x3, y2, e.width, hh);\n-  }\n-  \n-  public String toString()\n-  {\n-    return getClass().getName() + \"[hgap=\" + hgap + \",vgap=\" + vgap + \"]\";\n-  }\n-\n-\n-  // Support:\n-\n-  static final Dimension DIM_0   = new Dimension(0, 0);\n-  static final Dimension DIM_MAX = new Dimension(Integer.MAX_VALUE,\n-\t\t\t\t\t\t Integer.MAX_VALUE);\n-\n-  void setBounds(Component comp, int x, int y, int w, int h)\n-  {\n-    if (comp == null)\n-      return;\n-    comp.setBounds(x, y, w, h);\n-  }\n-\n-  Dimension getMinimumSize(Component comp)\n-  {\n-    if (comp == null)\n-      return DIM_0;\n+  int x1 = i.left;\n+  int x2 = x1 + w.width + hgap;\n+  int x3 = t.width - i.right - e.width;\n+  int ww = t.width - i.right - i.left;\n+\n+  int y1 = i.top;\n+  int y2 = y1 + n.height + vgap;\n+  int y3 = t.height - i.bottom - s.height;\n+  int hh = y3-y2-vgap;\n+\n+  setBounds(center, x2, y2, x3-x2-hgap, hh);\n+  setBounds(my_north, x1, y1, ww, n.height);\n+  setBounds(my_south, x1, y3, ww, s.height);\n+  setBounds(my_west, x1, y2, w.width, hh);\n+  setBounds(my_east, x3, y2, e.width, hh);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns a string representation of this layout manager.\n+  *\n+  * @return A string representation of this object.\n+  */\n+public String\n+toString()\n+{\n+  return getClass().getName() + \"[hgap=\" + hgap + \",vgap=\" + vgap + \"]\";\n+}\n+\n+private void\n+setBounds(Component comp, int x, int y, int w, int h)\n+{\n+  if (comp == null)\n+    return;\n+  comp.setBounds(x, y, w, h);\n+}\n+\n+// Some constants for use with calcSize().\n+private static final int MIN = 0;\n+private static final int MAX = 1;\n+private static final int PREF = 2;\n+\n+private Dimension\n+calcCompSize(Component comp, int what)\n+{\n+  if (comp == null)\n+    return new Dimension(0, 0);\n+  if (what == MIN)\n     return comp.getMinimumSize();\n-  }\n-\n-  Dimension getPreferredSize(Component comp)\n-  {\n-    if (comp == null)\n-      return DIM_0;\n-    return comp.getPreferredSize();\n-  }\n-\n-  Dimension calcSize(Dimension c, Dimension n, Dimension s,\n-\t\t     Dimension e, Dimension w, Container target)\n-  {\n-    Insets i = target.getInsets();\n-    \n-    return new Dimension(c.width + e.width + w.width + hgap*2 +\n-\t\t\t i.left + i.right,\n-\t\t\t c.height + n.height + s.height + vgap*2 +\n-\t\t\t i.top + i.bottom\n-\t\t\t );\n-  }\n+  else if (what == MAX)\n+    return comp.getMaximumSize();\n+  return comp.getPreferredSize();\n+}\n+\n+// This is a helper function used to compute the various sizes for\n+// this layout.\n+private Dimension\n+calcSize(Container target, int what)\n+{\n+  Insets ins = target.getInsets();\n+\n+  ComponentOrientation orient = target.getComponentOrientation ();\n+  boolean left_to_right = orient.isLeftToRight ();\n+\n+  Component my_north = north;\n+  Component my_east = east;\n+  Component my_south = south;\n+  Component my_west = west;\n+\n+  // Note that we currently don't handle vertical layouts.  Neither\n+  // does JDK 1.3.\n+  if (firstLine != null)\n+    my_north = firstLine;\n+  if (lastLine != null)\n+    my_south = lastLine;\n+  if (firstItem != null)\n+    {\n+      if (left_to_right)\n+\tmy_west = firstItem;\n+      else\n+\tmy_east = firstItem;\n+    }\n+  if (lastItem != null)\n+    {\n+      if (left_to_right)\n+\tmy_east = lastItem;\n+      else\n+\tmy_west = lastItem;\n+    }\n+      \n+  Dimension ndim = calcCompSize(my_north, what);\n+  Dimension sdim = calcCompSize(my_south, what);\n+  Dimension edim = calcCompSize(my_east, what);\n+  Dimension wdim = calcCompSize(my_west, what);\n+  Dimension cdim = calcCompSize(center, what);\n+\n+  int width = edim.width + cdim.width + wdim.width + (hgap * 2);\n+  if (ndim.width > width)\n+    width = ndim.width;\n+  if (sdim.width > width)\n+    width = sdim.width;\n+\n+  width += (ins.left + ins.right);\n+\n+  int height = edim.height;\n+  if (cdim.height > height)\n+    height = cdim.height;\n+  if (wdim.height > height)\n+    height = wdim.height;\n+\n+  height += (ndim.height + sdim.height + (vgap * 2) + ins.top + ins.bottom);\n+\n+  return(new Dimension(width, height));\n }\n+} // class BorderLayout "}, {"sha": "9445bf7820f76097625fd818a6368ea382be44fa", "filename": "libjava/java/awt/CardLayout.java", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FCardLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FCardLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCardLayout.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,6 +1,6 @@\n // CardLayout.java - Card-based layout engine\n \n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -137,14 +137,9 @@ public void layoutContainer (Container parent)\n \n     for (int i = 0; i < num; ++i)\n       {\n-\tif (comps[i].isVisible ())\n-\t  {\n-\t    // Only resize the one we care about.\n-\t    comps[i].setBounds (hgap + ins.left, vgap + ins.top,\n-\t\t\t\twidth - 2 * hgap - ins.left - ins.right,\n-\t\t\t\theight - 2 * vgap - ins.top - ins.bottom);\n-\t    break;\n-\t  }\n+\tcomps[i].setBounds (hgap + ins.left, vgap + ins.top,\n+\t\t\t    width - 2 * hgap - ins.left - ins.right,\n+\t\t\t    height - 2 * vgap - ins.top - ins.bottom);\n       }\n   }\n \n@@ -272,13 +267,13 @@ else if (what >= 0)\n \t      {\n \t\tchoice = i + 1;\n \t\tif (choice == num)\n-\t\t  choice = num - 1;\n+\t\t  choice = 0;\n \t      }\n \t    else if (what == PREV)\n \t      {\n \t\tchoice = i - 1;\n \t\tif (choice < 0)\n-\t\t  choice = 0;\n+\t\t  choice = num - 1;\n \t      }\n \t    else\n \t      {"}, {"sha": "8f79f8a1d6635be03ecbf1be4af17549d60d7a27", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 1012, "deletions": 153, "changes": 1165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt;\n import java.awt.event.*;\n@@ -34,13 +51,41 @@\n public abstract class Component implements ImageObserver, MenuContainer, \n \t\t\t\t\t   java.io.Serializable\n {\n+  /**\n+   * Constant returned by the <code>getAlignmentY</code> method to indicate\n+   * that the component wishes to be aligned to the bottom relative to\n+   * other components.\n+   */\n+  public static final float BOTTOM_ALIGNMENT = (float)1.0;\n+\n+  /**\n+   * Constant returned by the <code>getAlignmentY</code> and \n+   * <code>getAlignmentX</code> methods to indicate\n+   * that the component wishes to be aligned to the center relative to\n+   * other components.\n+   */\n+  public static final float CENTER_ALIGNMENT = (float)0.5;\n \n-  /* Constants for use with getAlignmentX()/getAlignmentY(). */\n-  public static final float BOTTOM_ALIGNMENT = 1.0f,\n-\t\t\t    CENTER_ALIGNMENT = 0.5f,\n-\t\t\t    LEFT_ALIGNMENT   = 0.0f,\n-\t\t\t    RIGHT_ALIGNMENT  = 1.0f,\n-\t\t\t    TOP_ALIGNMENT    = 0.0f;\n+  /**\n+   * Constant returned by the <code>getAlignmentY</code> method to indicate\n+   * that the component wishes to be aligned to the top relative to\n+   * other components.\n+   */\n+  public static final float TOP_ALIGNMENT = (float)0.0;\n+\n+  /**\n+   * Constant returned by the <code>getAlignmentX</code> method to indicate\n+   * that the component wishes to be aligned to the right relative to\n+   * other components.\n+   */\n+  public static final float RIGHT_ALIGNMENT = (float)1.0;\n+\n+  /**\n+   * Constant returned by the <code>getAlignmentX</code> method to indicate\n+   * that the component wishes to be aligned to the left relative to\n+   * other components.\n+   */\n+  public static final float LEFT_ALIGNMENT = (float)0.0;\n \n   /* Make the treelock a String so that it can easily be identified\n      in debug dumps. We clone the String in order to avoid a conflict in \n@@ -92,17 +137,30 @@ public abstract class Component implements ImageObserver, MenuContainer,\n \n   transient ComponentOrientation orientation = ComponentOrientation.UNKNOWN;\n \n+  /**\n+   * Default constructor for subclasses.\n+   */\n   protected Component()\n   {\n   }\n \n+  /**\n+   * Returns the name of this component.\n+   *\n+   * @return The name of this component.\n+   */\n   public String getName()\n   {\n     if (name == null && !nameExplicitlySet)\n       name = generateName();\n     return name;\n   }\n-  \n+\n+  /**\n+   * Sets the name of this component to the specified name.\n+   *\n+   * @param name The new name of this component.\n+   */\n   public void setName(String name)\n   {\n     nameExplicitlySet = true;\n@@ -117,19 +175,35 @@ String generateName()\n     // Component is abstract.\n     return null;\n   }\n-  \n+\n+  /**\n+   * Returns the parent of this component.\n+   * \n+   * @return The parent of this component.\n+   */\n   public Container getParent()\n   {\n     return parent;  \n   }\n-  \n-  /** @deprecated */\n-  // However, Classpath's Gtk peers rely on it.\n+\n+  // Sets the peer for this component.\n+  final void setPeer (ComponentPeer peer)\n+  {\n+    this.peer = peer;\n+  }\n+\n+  /**\n+   * Returns the native windowing system peer for this component.\n+   *\n+   * @return The peer for this component.\n+   * @deprecated\n+   */\n+  // Classpath's Gtk peers rely on this.\n   public java.awt.peer.ComponentPeer getPeer()\n   {\n     return peer;\n   }\n-  \n+\n   // FIXME: java.awt.dnd classes not yet implemented\n   /*\n   public void setDropTarget(DropTarget dt)\n@@ -167,11 +241,28 @@ GraphicsConfiguration getGraphicsConfigurationImpl()\n     return null;\n   }\n \n+  /**\n+   * Returns the object used for synchronization locks on this component\n+   * when performing tree and layout functions.\n+   *\n+   * @return The synchronization lock for this component.\n+   */\n   public final Object getTreeLock()\n   {\n     return treeLock;\n   }\n \n+  // The sync lock object for this component.\n+  final void setTreeLock(Object tree_lock)\n+  {\n+    this.treeLock = tree_lock;\n+  }\n+\n+  /**\n+   * Returns the toolkit in use for this component.\n+   *\n+   * @return The toolkit for this component.\n+   */\n   public Toolkit getToolkit()\n   {\n     if (peer != null)\n@@ -185,6 +276,13 @@ public Toolkit getToolkit()\n     return Toolkit.getDefaultToolkit ();\n   }\n \n+  /**\n+   * Tests whether or not this component is valid.  A invalid component needs\n+   * to have its layout redone.\n+   *\n+   * @return <code>true</code> if this component is valid, <code>false</code>\n+   * otherwise.\n+   */\n   public boolean isValid()\n   {\n     return valid;\n@@ -197,95 +295,159 @@ public boolean isDisplayable()\n       return parent.isDisplayable();\n     return false;\n   }\n-  \n+\n+  /**\n+   * Tests whether or not this component is visible.\n+   *\n+   * @return <code>true</code> if the component is visible,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean isVisible()\n   {\n     return visible;\n   }\n-  \n+\n+  /**\n+   * Tests whether or not this component is actually being shown on\n+   * the screen.  This will be true if and only if it this component is\n+   * visible and its parent components are all visible.\n+   *\n+   * @return <code>true</code> if the component is showing on the screen,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean isShowing()\n   {\n     if (! visible || peer == null)\n       return false;\n \n     return parent == null ? true : parent.isShowing ();\n   }\n-  \n+\n+  /**\n+   * Tests whether or not this component is enabled.\n+   *\n+   * @return <code>true</code> if the component is enabled,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean isEnabled()\n   {\n     return enabled;\n   }\n-  \n+\n+  /**\n+   * Enables or disables this component.\n+   *\n+   * @param enabled <code>true</code> to enable this component, \n+   * <code>false</code> to disable it.\n+   *\n+   * @deprecated Deprecated in favor of <code>setEnabled()</code>.\n+   */\n   public void setEnabled(boolean b)\n   {\n     this.enabled = b;\n     if (peer != null)\n       peer.setEnabled(b);\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Enables this component.\n+   *\n+   * @deprecated Deprecated in favor of <code>setEnabled()</code>.\n+   */\n   public void enable()\n   {\n     setEnabled(true);\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Enables or disables this component.\n+   *\n+   * @param enabled <code>true</code> to enable this component, \n+   * <code>false</code> to disable it.\n+   *\n+   * @deprecated Deprecated in favor of <code>setEnabled()</code>.\n+   */\n   public void enable(boolean b)\n   {\n     setEnabled(b);\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Disables this component.\n+   *\n+   * @deprecated Deprecated in favor of <code>setEnabled()</code>.\n+   */\n   public void disable()\n   {\n     setEnabled(false);\n   }\n-  \n+\n   public boolean isDoubleBuffered()\n   {\n     return false;\n   }\n-  \n+\n   /** @since 1.2 */\n   public void enableInputMethods(boolean enable)\n   {\n     // FIXME\n   }\n-  \n-  /** @specnote  Inspection by subclassing shows that Sun's implementation\n-                 calls show(boolean) which then calls show() or hide(). It is\n-\t\t the show() method that is overriden in subclasses like Window.\n-\t\t We do the same to preserve compatibility for subclasses. */\n+\n+  /**\n+   * Makes this component visible or invisible.\n+   *\n+   * @param visible <code>true</code> to make this component visible,\n+   * </code>false</code> to make it invisible.\n+   * @specnote  Inspection by subclassing shows that Sun's implementation\n+   * calls show(boolean) which then calls show() or hide(). It is\n+   * the show() method that is overriden in subclasses like Window.\n+   * We do the same to preserve compatibility for subclasses.\n+   */\n   public void setVisible(boolean b)\n   {\n-    show (b);\n+    if (peer != null)\n+      peer.setVisible (b);\n+    this.visible = b;\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Makes this component visible on the screen.\n+   *\n+   * @deprecated Deprecated in favor of <code>setVisible()</code>.\n+   */\n   public void show()\n   {\n-    if (peer != null)\n-      peer.setVisible(true);\n-    this.visible = true;\n+    setVisible (true);\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Makes this component visible or invisible.\n+   *\n+   * @param visible <code>true</code> to make this component visible,\n+   * </code>false</code> to make it invisible.\n+   *\n+   * @deprecated Deprecated in favor of <code>setVisible()</code>.\n+   */\n   public void show(boolean b)\n   {\n-    if (b)\n-      show();\n-    else\n-      hide();\n+    setVisible (b);\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Hides this component so that it is no longer shown on the screen.\n+   *\n+   * @deprecated Deprecated in favor of <code>setVisible()</code>.\n+   */\n   public void hide()\n   {\n-    if (peer != null)\n-      peer.setVisible(false);\n-    this.visible = false;\n+    setVisible (false);\n   }\n-  \n+\n+  /**\n+   * Returns this component's foreground color.\n+   *\n+   * @return This component's foreground color.\n+   */\n   public Color getForeground()\n   {\n     if (foreground != null)\n@@ -294,18 +456,27 @@ public Color getForeground()\n       return parent.getForeground();\n     return null;\n   }\n-  \n+\n+  /**\n+   * Sets this component's foreground color to the specified color.\n+   *\n+   * @param foreground_color The new foreground color.\n+   */\n   public void setForeground(Color c)\n   {\n     if (peer != null)\n       peer.setForeground(c);\n     this.foreground = c;\n   }\n \n-  /** @return the background color of the component. null may be\n-      returned instead of the actual background color, if this\n-      method is called before the component is added to the\n-      component hierarchy. */\n+  /**\n+   * Returns this component's background color.\n+   *\n+   * @return the background color of the component. null may be\n+   * returned instead of the actual background color, if this\n+   * method is called before the component is added to the\n+   * component hierarchy.\n+   */\n   public Color getBackground()\n   {\n     if (background != null)\n@@ -314,14 +485,24 @@ public Color getBackground()\n       return parent.getBackground();\n     return null;\n   }\n-  \n+\n+  /**\n+   * Sets this component's background color to the specified color.\n+   *\n+   * @param background_color The new background color\n+   */\n   public void setBackground(Color c)\n   {\n     if (peer != null)\n       peer.setBackground(c);\n     this.background = c;\n   }\n-  \n+\n+  /**\n+   * Returns the font in use for this component.\n+   *\n+   * @return The font for this component.\n+   */\n   public Font getFont()\n   {\n     if (font != null)\n@@ -330,14 +511,26 @@ public Font getFont()\n       return parent.getFont();\n     return null;\n   }\n-  \n+\n+  /**\n+   * Sets the font for this component to the specified font.\n+   *\n+   * @param font The new font for this component.\n+   */\n   public void setFont(Font f)\n   {\n     if (peer != null)\n       peer.setFont(f);\n     this.font = f;\n   }\n \n+  /**\n+   * Returns the locale for this component.  If this component does not\n+   * have a locale, the locale of the parent component is returned.  If the\n+   * component has no parent, the system default locale is returned.\n+   *\n+   * @return The locale for this component.\n+   */\n   public Locale getLocale() throws IllegalComponentStateException\n   {\n     if (locale != null)\n@@ -347,16 +540,26 @@ public Locale getLocale() throws IllegalComponentStateException\n         (\"Component has no parent: Can not determine Locale\");\n     return parent.getLocale();\n   }\n-  \n+\n+  /**\n+   * Sets the locale for this component to the specified locale.\n+   *\n+   * @param locale The new locale for this component.\n+   */\n   public void setLocale(Locale l)  \n   {\n     this.locale = l;\n-    \n+\n     /* new writing/layout direction perhaps, or make more/less\n        room for localized text labels */\n     invalidate();\n   }\n-  \n+\n+  /**\n+   * Returns the color model of the device this componet is displayed on.\n+   *\n+   * @return This object's color model.\n+   */\n   public ColorModel getColorModel()\n   {\n     GraphicsConfiguration config = getGraphicsConfiguration();\n@@ -367,11 +570,23 @@ public ColorModel getColorModel()\n     return getToolkit().getColorModel();    \n   }\n \n+  /**\n+   * Returns the location of this component's top left corner relative to\n+   * its parent component.\n+   *\n+   * @return The location of this component.\n+   */\n   public Point getLocation()\n   {\n     return new Point(x, y);\n   }\n \n+  /**\n+   * Returns the location of this component's top left corner in screen\n+   * coordinates.\n+   *\n+   * @return The location of this component in screen coordinates.\n+   */\n   public Point getLocationOnScreen()\n   {\n     if (! isShowing ())\n@@ -381,47 +596,93 @@ public Point getLocationOnScreen()\n     return peer.getLocationOnScreen ();\n   }\n \n-  /** @deprecated Use getLocation() instead. */\n+  /**\n+   * Returns the location of this component's top left corner relative to\n+   * its parent component.\n+   *\n+   * @return The location of this component.\n+   *\n+   * @deprecated This method is deprecated in favor of \n+   * <code>getLocation()</code>.\n+   */\n   public Point location()\n   {\n     return getLocation();\n   }\n \n+  /**\n+   * Moves this component to the specified location.  The coordinates are\n+   * the new upper left corner of this component.\n+   *\n+   * @param x The new X coordinate of this component.\n+   * @param y The new Y coordinate of this component.\n+   */\n   public void setLocation (int x, int y)\n   {\n     if ((this.x == x) && (this.y == y))\n       return;\n-    \n+\n     invalidate();\n-    \n+\n     this.x = x;\n     this.y = y;\n     if (peer != null)\n       peer.setBounds(x, y, width, height);\n   }\n \n-  /** @deprecated */\n+  /**\n+   * Moves this component to the specified location.  The coordinates are\n+   * the new upper left corner of this component.\n+   *\n+   * @param x The new X coordinate of this component.\n+   * @param y The new Y coordinate of this component.\n+   *\n+   * @deprecated Deprecated in favor for <code>setLocation</code>.\n+   */\n   public void move(int x, int y)\n   {\n     setLocation(x,y);\n   }\n-  \n+\n+  /**\n+   * Moves this component to the specified location.  The coordinates are\n+   * the new upper left corner of this component.\n+   *\n+   * @param p New coordinates for this component.\n+   */\n   public void setLocation(Point p)\n   {\n     setLocation(p.x, p.y);\n   }\n-  \n+\n+  /**\n+   * Returns the size of this object.\n+   *\n+   * @return The size of this object.\n+   */\n   public Dimension getSize()\n   {\n     return new Dimension(width, height);\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Returns the size of this object.\n+   *\n+   * @return The size of this object.\n+   *\n+   * @deprecated This method is deprecated in favor of <code>getSize</code>.\n+   */\n   public Dimension size()\n   {\n     return getSize();\n   }\n-  \n+\n+  /**\n+   * Sets the size of this component to the specified width and height.\n+   * \n+   * @param width The new width of this component.\n+   * @param height The new height of this component.\n+   */\n   public void setSize(int width, int height)\n   {\n     if ((this.width == width) && (this.height == height))\n@@ -434,35 +695,78 @@ public void setSize(int width, int height)\n     if (peer != null)\n       peer.setBounds(x, y, width, height);\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Sets the size of this component to the specified value.\n+   * \n+   * @param width The new width of the component.\n+   * @param height The new height of the component.\n+   *\n+   * @deprecated This method is deprecated in favor of <code>setSize</code>.\n+   */\n   public void resize(int width, int height)\n   {\n     setSize(width, height);\n   }\n-  \n+\n+  /**\n+   * Sets the size of this component to the specified value.\n+   * \n+   * @param dim The new size of this component.\n+   */\n   public void setSize(Dimension d)\n   {\n     setSize(d.width, d.height);\n   }\n \n-  /** @deprecated */\n+  /**\n+   * Sets the size of this component to the specified value.\n+   * \n+   * @param dim The new size of this component.\n+   *\n+   * @deprecated This method is deprecated in favor of <code>setSize</code>.\n+   */\n   public void resize(Dimension d)\n   {\n     setSize(d.width, d.height);\n   }\n \n+  /**\n+   * Returns a bounding rectangle for this component.  Note that the\n+   * returned rectange is relative to this component's parent, not to\n+   * the screen.\n+   *\n+   * @return The bounding rectangle for this component.\n+   */\n   public Rectangle getBounds()\n   {\n     return new Rectangle (x, y, width, height);\n   }\n \n-  /** @deprecated */\n+  /**\n+   * Returns a bounding rectangle for this component.  Note that the\n+   * returned rectange is relative to this component's parent, not to\n+   * the screen.\n+   *\n+   * @return The bounding rectangle for this component.\n+   *\n+   * @deprecated Deprecated in favor of <code>getBounds()</code>.\n+   */\n   public Rectangle bounds()\n   {\n     return getBounds();\n   }\n-  \n+\n+  /**\n+   * Sets the bounding rectangle for this component to the specified\n+   * values.  Note that these coordinates are relative to the parent,\n+   * not to the screen.\n+   *\n+   * @param x The X coordinate of the upper left corner of the rectangle.\n+   * @param y The Y coordinate of the upper left corner of the rectangle.\n+   * @param width The width of the rectangle.\n+   * @param height The height of the rectangle.\n+   */\n   public void setBounds(int x, int y, int w, int h)\n   {\n     if (this.x == x\n@@ -481,13 +785,32 @@ public void setBounds(int x, int y, int w, int h)\n     if (peer != null)\n       peer.setBounds(x, y, w, h);\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Sets the bounding rectangle for this component to the specified\n+   * values.  Note that these coordinates are relative to the parent,\n+   * not to the screen.\n+   *\n+   * @param x The X coordinate of the upper left corner of the rectangle.\n+   * @param y The Y coordinate of the upper left corner of the rectangle.\n+   * @param width The width of the rectangle.\n+   * @param height The height of the rectangle.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>setBounds(int, int, int, int)</code>.\n+   */\n   public void reshape(int x, int y, int width, int height)\n   {\n     setBounds(x, y, width, height);\n   }\n-  \n+\n+  /**\n+   * Sets the bounding rectangle for this component to the specified\n+   * rectangle.  Note that these coordinates are relative to the parent,\n+   * not to the screen.\n+   *\n+   * @param bounding_rectangle The new bounding rectangle.\n+   */\n   public void setBounds(Rectangle r)\n   { \n     setBounds(r.x, r.y, r.width, r.height);\n@@ -557,7 +880,12 @@ public boolean isLightweight()\n   {\n     return (peer != null) && (peer instanceof LightweightPeer);\n   }\n-  \n+\n+  /**\n+   * Returns the component's preferred size.\n+   *\n+   * @return The component's preferred size.\n+   */\n   public Dimension getPreferredSize()\n   {\n     if (peer == null)\n@@ -566,12 +894,23 @@ public Dimension getPreferredSize()\n       return peer.getPreferredSize();\n   }\n \n-  /** @deprecated */\n+  /**\n+   * Returns the component's preferred size.\n+   *\n+   * @return The component's preferred size.\n+   *\n+   * @deprecated Deprecated in favor of <code>getPreferredSize()</code>.\n+   */\n   public Dimension preferredSize()\n   {\n     return getPreferredSize();\n   }\n-  \n+\n+  /**\n+   * Returns the component's minimum size.\n+   *\n+   * @return The component's minimum size.\n+   */\n   public Dimension getMinimumSize()\n   {\n     if (peer == null)\n@@ -580,43 +919,82 @@ public Dimension getMinimumSize()\n       return peer.getMinimumSize();\n   }\n \n-  /** @deprecated */\n+  /**\n+   * Returns the component's minimum size.\n+   *\n+   * @return The component's minimum size.\n+   *\n+   * @deprecated Deprecated in favor of <code>getMinimumSize()</code>\n+   */\n   public Dimension minimumSize()\n   {\n     return getMinimumSize();\n   }\n \n+  /**\n+   * Returns the component's maximum size.\n+   *\n+   * @return The component's maximum size.\n+   */\n   public Dimension getMaximumSize()\n   {\n     return new Dimension(Integer.MAX_VALUE, Integer.MAX_VALUE);\n   }\n \n+  /**\n+   * Returns the preferred horizontal alignment of this component.  The\n+   * value returned will be one of the constants defined in this class.\n+   *\n+   * @return The preferred horizontal alignment of this component.\n+   */\n   public float getAlignmentX()\n   {\n     return CENTER_ALIGNMENT;\n   }\n \n+  /**\n+   * Returns the preferred vertical alignment of this component.  The\n+   * value returned will be one of the constants defined in this class.\n+   *\n+   * @return The preferred vertical alignment of this component.\n+   */\n   public float getAlignmentY()\n   {\n     return CENTER_ALIGNMENT;\n   }\n \n+  /**\n+   * Calls the layout manager to re-layout the component.  This is called\n+   * during validation of a container in most cases.\n+   */\n   public void doLayout()\n   {\n     // nothing to do unless we're a container\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * Calls the layout manager to re-layout the component.  This is called\n+   * during validation of a container in most cases.\n+   *\n+   * @deprecated This method is deprecated in favor of <code>doLayout()</code>.\n+   */\n   public void layout()\n   {\n     doLayout();\n   }\n-  \n+\n+  /**\n+   * Called to ensure that the layout for this component is valid.\n+   */\n   public void validate()\n   {\n-    // nothing to do unless we're a container\n+    valid = true;\n   }\n-  \n+\n+  /**\n+   * Invalidates this component and all of its parent components.  This will\n+   * cause them to have their layout redone.\n+   */\n   public void invalidate()\n   {\n     valid = false;\n@@ -625,6 +1003,12 @@ public void invalidate()\n       parent.invalidate ();\n   }\n \n+  /**\n+   * Returns a graphics object for this component.  Returns <code>null</code>\n+   * if this component is not currently displayed on the screen.\n+   *\n+   * @return A graphics object for this component.\n+   */\n   public Graphics getGraphics()\n   {\n     if (peer != null)\n@@ -646,35 +1030,72 @@ public Graphics getGraphics()\n       }\n     return null;\n   }\n-  \n+\n+  /**\n+   * Returns the font metrics for the specified font in this component.\n+   *\n+   * @param font The font to retrieve metrics for.\n+   *\n+   * @return The font metrics for the specified font.\n+   */\n   public FontMetrics getFontMetrics(Font font)\n   {\n     if (peer == null)\n       return getToolkit().getFontMetrics(font);\n     return peer.getFontMetrics (font);\n   }\n \n+  /**\n+   * Sets the cursor for this component to the specified cursor.\n+   *\n+   * @param cursor The new cursor for this component.\n+   */\n   public void setCursor(Cursor cursor)\n   {\n     this.cursor = cursor;\n     if (peer != null)\n       peer.setCursor (cursor);\n   }\n \n+  /**\n+   * Returns the cursor for this component.\n+   *\n+   * @return The cursor for this component.\n+   */\n   public Cursor getCursor()\n   {\n     return this.cursor;\n   }\n-  \n+\n+  /**\n+   * Paints this component on the screen.  The clipping region in the\n+   * graphics context will indicate the region that requires painting.\n+   *\n+   * @param graphics The graphics context for this paint job.\n+   */\n   public void paint(Graphics g)\n-  {  \n+  {\n   }\n-  \n+\n+  /**\n+   * Updates this component.  This method fills the component\n+   * with the background color, then sets the foreground color of the\n+   * specified graphics context to the foreground color of this component\n+   * and calls the <code>paint()</code> method.\n+   * // FIXME: What are the coords relative to?\n+   *\n+   * @param graphics The graphics context for this update.\n+   */\n   public void update(Graphics g)\n   {\n     paint(g);\n   }\n-  \n+\n+  /**\n+   * Paints this entire component, including any sub-components.\n+   *\n+   * @param graphics The graphics context for this paint job.\n+   */\n   public void paintAll(Graphics g)\n   {    \n     if (!visible)\n@@ -684,22 +1105,60 @@ public void paintAll(Graphics g)\n       peer.paint(g);\n     paint(g);\n   }\n-  \n+\n+  /**\n+   * Repaint this entire component.  The <code>update()</code> method\n+   * on this component will be called as soon as possible.\n+   * // FIXME: What are the coords relative to?\n+   */\n   public void repaint()\n   {\n     repaint(0, 0, 0, getWidth(), getHeight());\n   }\n-  \n+\n+  /**\n+   * Repaint this entire component.  The <code>update()</code> method\n+   * on this component will be called in approximate the specified number\n+   * of milliseconds.\n+   * // FIXME: What are the coords relative to?\n+   *\n+   * @param tm The number of milliseconds before this component should\n+   * be repainted.\n+   */\n   public void repaint(long tm)\n   {\n     repaint(tm, 0, 0, getWidth(), getHeight());\n   }\n-  \n+\n+  /**\n+   * Repaints the specified rectangular region within this component.\n+   * This <code>update</code> method on this component will be called as\n+   * soon as possible.\n+   * // FIXME: What are the coords relative to?\n+   *\n+   * @param x The X coordinate of the upper left of the region to repaint\n+   * @param y The Y coordinate of the upper left of the region to repaint\n+   * @param width The width of the region to repaint.\n+   * @param height The height of the region to repaint.\n+   */\n   public void repaint(int x, int y, int width, int height)\n   {\n     repaint(0, x, y, width, height);\n   }\n-  \n+\n+  /**\n+   * Repaints the specified rectangular region within this component.\n+   * This <code>update</code> method on this component will be called in\n+   * approximately the specified number of milliseconds.\n+   * // FIXME: What are the coords relative to?\n+   *\n+   * @param tm The number of milliseconds before this component should\n+   * be repainted.\n+   * @param x The X coordinate of the upper left of the region to repaint\n+   * @param y The Y coordinate of the upper left of the region to repaint\n+   * @param width The width of the region to repaint.\n+   * @param height The height of the region to repaint.\n+   */\n   public void repaint(long tm, int x, int y, int width, int height)\n   {    \n     // Handle lightweight repainting by forwarding to native parent\n@@ -714,104 +1173,264 @@ public void repaint(long tm, int x, int y, int width, int height)\n       peer.repaint(tm, x, y, width, height);\n   }\n \n+  /**\n+   * Prints this component.  This method is\n+   * provided so that printing can be done in a different manner from\n+   * painting.  However, the implementation in this class simply calls\n+   * the <code>paint()</code> method.\n+   *\n+   * @param graphics The graphics context of the print device.\n+   */\n   public void print(Graphics g)\n   {\n     paint(g);\n   }\n \n+  /**\n+   * Prints this component, including all sub-components.  This method is\n+   * provided so that printing can be done in a different manner from\n+   * painting.  However, the implementation in this class simply calls\n+   * the <code>paintAll()</code> method.\n+   *\n+   * @param graphics The graphics context of the print device.\n+   */\n   public void printAll(Graphics g)\n   {\n     paintAll(g);\n   }\n \n+  /**\n+   * Called when an image has changed so that this component is\n+   * repainted.\n+   *\n+   * @param image The image that has been updated.\n+   * @param flags Flags as specified in <code>ImageObserver</code>.\n+   * @param x The X coordinate \n+   * @param y The Y coordinate\n+   * @param width The width\n+   * @param height The height\n+   *\n+   * @return <code>true</code> if the image has been fully loaded,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean imageUpdate (Image img, int infoflags, int x, int y,\n \t\t\t      int w, int h)\n   {\n     // FIXME\n     return false;\n   }\n \n+  /**\n+   * Creates an image from the specified producer.\n+   *\n+   * @param producer The image procedure to create the image from.\n+   *\n+   * @return The resulting image.\n+   */\n   public Image createImage(ImageProducer producer)\n   {\n-    // FIXME\n-    return null;\n+    return peer.createImage(producer);\n   }\n \n+  /**\n+   * Creates an image with the specified width and height for use in\n+   * double buffering.\n+   *\n+   * @param width The width of the image.\n+   * @param height The height of the image.\n+   *\n+   * @return The requested image.\n+   */\n   public Image createImage(int width, int height)\n   {\n     return getGraphicsConfiguration().createCompatibleImage(width, height);\n   }\n \n+  /**\n+   * Prepares the specified image for rendering on this component.\n+   *\n+   * @param image The image to prepare for rendering.\n+   * @param observer The image observer to notify of the status of the\n+   * image preparation.\n+   *\n+   * @return <code>true</code> if the image is already fully prepared\n+   * for rendering, <code>false</code> otherwise.\n+   */\n   public boolean prepareImage(Image image, ImageObserver observer)\n   {\n-    // FIXME\n-    return false;\n+    return prepareImage(image, image.getWidth(observer), \n+\t\t\timage.getHeight(observer), observer);\n   }\n \n-  public boolean prepareImage(Image image, int width, int height, ImageObserver observer)\n+  /**\n+   * Prepares the specified image for rendering on this component at the\n+   * specified scaled width and height\n+   *\n+   * @param image The image to prepare for rendering.\n+   * @param width The scaled width of the image.\n+   * @param height The scaled height of the image.\n+   * @param observer The image observer to notify of the status of the\n+   * image preparation.\n+   *\n+   * @return <code>true</code> if the image is already fully prepared\n+   * for rendering, <code>false</code> otherwise.\n+   */\n+  public boolean prepareImage(Image image, int width, int height,\n+\t\t\t      ImageObserver observer)\n   {\n-    // FIXME\n-    return false;\n+    return peer.prepareImage(image, width, height, observer);\n   }\n \n+  /**\n+   * Returns the status of the loading of the specified image. The value\n+   * returned will be those flags defined in <code>ImageObserver</code>.\n+   *\n+   * @param image The image to check on.\n+   * @param observer The observer to be notified as the image loading\n+   * progresses.\n+   *\n+   * @return The image observer flags indicating the status of the load.\n+   */\n   public int checkImage(Image image, ImageObserver observer)\n   {\n-    // FIXME\n-    return 0;\n+    return checkImage(image, image.getWidth(observer), \n+\t\t      image.getHeight(observer), observer);\n   }\n \n-  public int checkImage (Image image, int width, int height, ImageObserver observer)\n+  /**\n+   * Returns the status of the loading of the specified image. The value\n+   * returned will be those flags defined in <code>ImageObserver</code>.\n+   *\n+   * @param image The image to check on.\n+   * @param width The scaled image width.\n+   * @param height The scaled image height.\n+   * @param observer The observer to be notified as the image loading\n+   * progresses.\n+   *\n+   * @return The image observer flags indicating the status of the load.\n+   */\n+  public int checkImage (Image image, int width, int height,\n+\t\t\t ImageObserver observer)\n   {\n     if (peer != null)\n       return peer.checkImage (image, width, height, observer);\n     return getToolkit ().checkImage (image, width, height, observer);\n   }\n \n+  /**\n+   * Tests whether or not the specified point is contained within this\n+   * component.  Coordinates are relative to this component.\n+   *\n+   * @param x The X coordinate of the point to test.\n+   * @param y The Y coordinate of the point to test.\n+   *\n+   * @return <code>true</code> if the point is within this component,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean contains (int x, int y)\n   {\n     return (x >= 0) && (y >= 0) && (x < width) && (y < height);\n   }\n \n-  /** @deprecated */\n+  /**\n+   * Tests whether or not the specified point is contained within this\n+   * component.  Coordinates are relative to this component.\n+   *\n+   * @param x The X coordinate of the point to test.\n+   * @param y The Y coordinate of the point to test.\n+   *\n+   * @return <code>true</code> if the point is within this component,\n+   * <code>false</code> otherwise.\n+   *\n+   * @deprecated Deprecated in favor of <code>contains(int, int)</code>.\n+   */\n   public boolean inside(int x, int y)\n   {\n     return contains(x,y);\n   }\n \n+  /**\n+   * Tests whether or not the specified point is contained within this\n+   * component.  Coordinates are relative to this component.\n+   *\n+   * @param point The point to test.\n+   *\n+   * @return <code>true</code> if the point is within this component,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean contains(Point p)\n   {\n     return contains(p.x, p.y);\n   }\n \n+  /**\n+   * Returns the component occupying the position (x,y).  This will either\n+   * be this component, an immediate child component, or <code>null</code>\n+   * if neither of the first two occupies the specified location.\n+   *\n+   * @param x The X coordinate to search for components at.\n+   * @param y The Y coordinate to search for components at.\n+   *\n+   * @return The component at the specified location, for <code>null</code>\n+   * if there is none.\n+   */\n   public Component getComponentAt(int x, int y)\n   {\n     if (contains(x,y))\n       return this;\n     return null;\n   }\n \n-  /** @deprecated */\n+  /**\n+   * Returns the component occupying the position (x,y).  This will either\n+   * be this component, an immediate child component, or <code>null</code>\n+   * if neither of the first two occupies the specified location.\n+   *\n+   * @param x The X coordinate to search for components at.\n+   * @param y The Y coordinate to search for components at.\n+   *\n+   * @return The component at the specified location, for <code>null</code>\n+   * if there is none.\n+   *\n+   * @deprecated The method is deprecated in favor of \n+   * <code>getComponentAt()</code>.\n+   */\n   public Component locate(int x, int y)\n   {\n     return getComponentAt(x, y);\n   }\n \n+  /**\n+   * Returns the component occupying the specified point  This will either\n+   * be this component, an immediate child component, or <code>null</code>\n+   * if neither of the first two occupies the specified location.\n+   *\n+   * @param point The point to search for components at.\n+   *\n+   * @return The component at the specified location, for <code>null</code>\n+   * if there is none.\n+   */\n   public Component getComponentAt(Point p)\n   {\n     return getComponentAt(p.x, p.y);\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 event dispatcher.\n+   *\n+   * @deprecated Deprecated in favor of <code>dispatchEvent()</code>.\n+   */\n   public void deliverEvent(Event e)\n   {\n-    \n   }\n \n   /** Forward AWT events to processEvent() if:\n     *     - Events have been enabled for this type of event via enableEvents(),\n     *   OR:\n     *\t - There is at least one registered listener for this type of event\n     * \n+    * @param event The event to dispatch\n+    *\n     * @specnote This method is final, but we need to be able to \n     *           override it in order to handle other event types in our \n     *\t        subclasses. The solution is to define a second, non-final\n@@ -870,31 +1489,55 @@ else if (e.id <= PaintEvent.PAINT_LAST\n       processEvent(e);\n   }\n   \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 event dispatcher.\n+   *\n+   * @deprecated Deprecated in favor of <code>dispatchEvent()</code>.\n+   */\n   public boolean postEvent(Event e)\n   {\n     return false;\n   }\n-  \n+\n+  /**\n+   * Adds the specified listener to this component.\n+   *\n+   * @param listener The new listener to add.\n+   */\n   public synchronized void addComponentListener(ComponentListener l)\n   {\n     componentListener = AWTEventMulticaster.add(componentListener, l);\n     if (componentListener != null)\n       enableEvents(AWTEvent.COMPONENT_EVENT_MASK);\n   }\n-  \n+\n+  /**\n+   * Removes the specified listener from the component.\n+   *\n+   * @param listener The listener to remove.\n+   */\n   public synchronized void removeComponentListener(ComponentListener l)\n   {\n     componentListener = AWTEventMulticaster.remove(componentListener, l);\n   }\n-  \n+\n+  /**\n+   * Adds the specified listener to this component.\n+   *\n+   * @param listener The new listener to add.\n+   */\n   public synchronized void addFocusListener(FocusListener l)\n   {\n     focusListener = AWTEventMulticaster.add(focusListener, l);\n     if (focusListener != null)\n       enableEvents(AWTEvent.FOCUS_EVENT_MASK);    \n   }\n-  \n+\n+  /**\n+   * Removes the specified listener from the component.\n+   *\n+   * @param listener The listener to remove.\n+   */\n   public synchronized void removeFocusListener(FocusListener l)\n   {\n     focusListener = AWTEventMulticaster.remove(focusListener, l);\n@@ -931,37 +1574,67 @@ public synchronized void addHierarchyBoundsListener(HierarchyBoundsListener l)\n       AWTEventMulticaster.remove(hierarchyBoundsListener, l);\n   }\n \n+  /**\n+   * Adds the specified listener to this component.\n+   *\n+   * @param listener The new listener to add.\n+   */\n   public synchronized void addKeyListener(KeyListener l)\n   {\n     keyListener = AWTEventMulticaster.add(keyListener, l);\n     if (keyListener != null)\n       enableEvents(AWTEvent.KEY_EVENT_MASK);    \n   }\n \n+  /**\n+   * Removes the specified listener from the component.\n+   *\n+   * @param listener The listener to remove.\n+   */\n   public synchronized void removeKeyListener(KeyListener l)\n   {\n     keyListener = AWTEventMulticaster.remove(keyListener, l);\n   }\n \n+  /**\n+   * Adds the specified listener to this component.\n+   *\n+   * @param listener The new listener to add.\n+   */\n   public synchronized void addMouseListener(MouseListener l)\n   {\n     mouseListener = AWTEventMulticaster.add(mouseListener, l);\n     if (mouseListener != null)\n       enableEvents(AWTEvent.MOUSE_EVENT_MASK);    \n   }\n \n+  /**\n+   * Removes the specified listener from the component.\n+   *\n+   * @param listener The listener to remove.\n+   */\n   public synchronized void removeMouseListener(MouseListener l)\n   {\n     mouseListener = AWTEventMulticaster.remove(mouseListener, l);    \n   }\n \n+  /**\n+   * Adds the specified listener to this component.\n+   *\n+   * @param listener The new listener to add.\n+   */\n   public synchronized void addMouseMotionListener(MouseMotionListener l)\n   {\n     mouseMotionListener = AWTEventMulticaster.add(mouseMotionListener, l);\n     if (mouseMotionListener != null)\n       enableEvents(AWTEvent.MOUSE_EVENT_MASK);    \n   }\n \n+  /**\n+   * Removes the specified listener from the component.\n+   *\n+   * @param listener The listener to remove.\n+   */\n   public synchronized void removeMouseMotionListener(MouseMotionListener l)\n   {\n     mouseMotionListener = AWTEventMulticaster.remove(mouseMotionListener, l);\n@@ -1043,6 +1716,17 @@ static void getListenerList(EventListener el, Vector v)\n   //\n   // public InputContext getInputContext()\n \n+  /**\n+   * Enables the specified events.  The events to enable are specified\n+   * by OR-ing together the desired masks from <code>AWTEvent</code>.\n+   * <p>\n+   * Events are enabled by default when a listener is attached to the\n+   * component for that event type.  This method can be used by subclasses\n+   * to ensure the delivery of a specified event regardless of whether\n+   * or not a listener is attached.\n+   *\n+   * @param enable_events The desired events to enable.\n+   */\n   protected final void enableEvents(long eventsToEnable)\n   {\n     eventMask |= eventsToEnable;\n@@ -1060,6 +1744,12 @@ else if (peer != null)\n       peer.setEventMask (eventMask);\n   }\n \n+  /**\n+   * Disables the specified events.  The events to disable are specified\n+   * by OR-ing together the desired masks from <code>AWTEvent</code>.\n+   *\n+   * @param disable_events The desired events to disable.\n+   */\n   protected final void disableEvents(long eventsToDisable)\n   {\n     eventMask &= ~eventsToDisable;\n@@ -1111,7 +1801,6 @@ protected AWTEvent coalesceEvents(AWTEvent existingEvent, AWTEvent newEvent)\n    *                 +--+\n    * </pre>\n    */\n-\n   private PaintEvent coalescePaintEvents(PaintEvent queuedEvent,\n \t\t\t\t\t PaintEvent newEvent)\n   {\n@@ -1132,12 +1821,12 @@ private PaintEvent coalescePaintEvents(PaintEvent queuedEvent,\n     return newEvent;\n   }\n \n-\n-\n-\n-  /** Forward event to the appropriate processXXXEvent method based on the\n-    * event type.\n-    */\n+  /**\n+   * Processes the specified event.  In this class, this method simply\n+   * calls one of the more specific event handlers.\n+   * \n+   * @param event The event to process.\n+   */\n   protected void processEvent(AWTEvent e)\n   {\n \n@@ -1172,7 +1861,14 @@ else if (e instanceof HierarchyEvent)\n \t  processHierarchyBoundsEvent((HierarchyEvent) e);\n       }\n   }\n-  \n+\n+  /**\n+   * Called when a component event is dispatched and component events are\n+   * enabled.  This method passes the event along to any listeners\n+   * that are attached.\n+   *\n+   * @param event The <code>ComponentEvent</code> to process.\n+   */\n   protected void processComponentEvent(ComponentEvent e)\n   {\n     if (componentListener == null)\n@@ -1196,7 +1892,14 @@ protected void processComponentEvent(ComponentEvent e)\n \tbreak;\n       }\n   }\n-  \n+\n+  /**\n+   * Called when a focus event is dispatched and component events are\n+   * enabled.  This method passes the event along to any listeners\n+   * that are attached.\n+   *\n+   * @param event The <code>FocusEvent</code> to process.\n+   */\n   protected void processFocusEvent(FocusEvent e)\n   {\n     if (focusListener == null)\n@@ -1211,7 +1914,14 @@ protected void processFocusEvent(FocusEvent e)\n \tbreak;\n       }    \n   }\n-  \n+\n+  /**\n+   * Called when a key event is dispatched and component events are\n+   * enabled.  This method passes the event along to any listeners\n+   * that are attached.\n+   *\n+   * @param event The <code>KeyEvent</code> to process.\n+   */\n   protected void processKeyEvent(KeyEvent e)\n   {\n     if (keyListener == null)\n@@ -1229,7 +1939,14 @@ protected void processKeyEvent(KeyEvent e)\n \tbreak;\n       }\n   }\n-  \n+\n+  /**\n+   * Called when a regular mouse event is dispatched and component events are\n+   * enabled.  This method passes the event along to any listeners\n+   * that are attached.\n+   *\n+   * @param event The <code>MouseEvent</code> to process.\n+   */\n   protected void processMouseEvent(MouseEvent e)\n   {\n     if (mouseListener == null)\n@@ -1254,6 +1971,13 @@ protected void processMouseEvent(MouseEvent e)\n       }\n   }\n \n+  /**\n+   * Called when a mouse motion event is dispatched and component events are\n+   * enabled.  This method passes the event along to any listeners\n+   * that are attached.\n+   *\n+   * @param event The <code>MouseMotionEvent</code> to process.\n+   */\n   protected void processMouseMotionEvent(MouseEvent e)\n   {\n     if (mouseMotionListener == null)\n@@ -1268,7 +1992,7 @@ protected void processMouseMotionEvent(MouseEvent e)\n \tbreak;\n       }\t\n   }\n-  \n+\n   /** @since 1.2 */\n   protected void processInputMethodEvent(InputMethodEvent e)\n   {\n@@ -1332,77 +2056,119 @@ private void processPaintEvent(PaintEvent event)\n \tthrow new IllegalArgumentException(\"unknown paint event\");\n       }\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * AWT 1.0 event processor.\n+   *\n+   * @deprecated Deprecated in favor of <code>processEvent</code>.\n+   */\n   public boolean handleEvent(Event evt)\n   {\n     return false;\n   }\n-  \n-  /** @deprecated */\n+\n+  /**\n+   * AWT 1.0 mouse event.\n+   *\n+   * @deprecated Deprecated in favor of <code>processMouseEvent()</code>.\n+   */\n   public boolean mouseDown(Event evt, int x, int y)\n   {\n     return false;\n   }\n   \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 mouse event.\n+   *\n+   * @deprecated Deprecated in favor of <code>processMouseMotionEvent()</code>.\n+   */\n   public boolean mouseDrag(Event evt, int x, int y)\n   {\n     return false;\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 mouse event.\n+   *\n+   * @deprecated Deprecated in favor of <code>processMouseEvent()</code>.\n+   */\n   public boolean mouseUp(Event evt, int x, int y)\n   {\n     return false;\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 mouse event.\n+   *\n+   * @deprecated Deprecated in favor of <code>processMouseMotionEvent()</code>.\n+   */\n   public boolean mouseMove(Event evt, int x, int y)\n   {\n     return false;\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 mouse event.\n+   *\n+   * @deprecated Deprecated in favor of <code>processMouseEvent()</code>.\n+   */\n   public boolean mouseEnter(Event evt, int x, int y)\n   {\n     return false;\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 mouse event.\n+   *\n+   * @deprecated Deprecated in favor of <code>processMouseEvent()</code>.\n+   */\n   public boolean mouseExit(Event evt, int x, int y)\n   {\n     return false;\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 key press event.\n+   *\n+   * @deprecated Deprecated in favor of <code>processKeyEvent</code>.\n+   */\n   public boolean keyDown(Event evt, int key)\n   {\n     return false;\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 key press event.\n+   *\n+   * @deprecated Deprecated in favor of <code>processKeyEvent</code>.\n+   */\n   public boolean keyUp(Event evt, int key)\n   {\n     return false;\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 action event processor.\n+   *\n+   * @deprecated Deprecated in favor of the <code>ActionListener</code>\n+   * interface.\n+   */\n   public boolean action(Event evt, Object what)\n   {\n     return false;\n   }\n \n+  /**\n+   * Called to inform this component it has been added to a container.\n+   * A native peer - if any - is created at this time.  This method is\n+   * called automatically by the AWT system and should not be called by\n+   * user level code.\n+   */\n   public void addNotify()\n   {\n     if (peer == null)\n       peer = getToolkit().createComponent(this);\n \n-    /* Add notify children using a template method, so that it is\n-       possible to ensure that the new event mask delivered to the\n-       peer. */\n-    addNotifyContainerChildren();\n-\n     /* Now that all the children has gotten their peers, we should\n        have the event mask needed for this component and its\n        lightweight subcomponents. */\n@@ -1415,11 +2181,12 @@ public void addNotify()\n        etc. */\n   }\n \n-  void addNotifyContainerChildren() \n-  {\n-    // nothing to do unless we're a container\n-  }\n-\n+  /**\n+   * Called to inform this component is has been removed from its\n+   * container.  Its native peer - if any - is destroyed at this time.\n+   * This method is called automatically by the AWT system and should\n+   * not be called by user level code.\n+   */\n   public void removeNotify()\n   {    \n     if (peer != null)\n@@ -1439,11 +2206,24 @@ public boolean lostFocus(Event evt, Object what)\n     return false;\n   }\n \n+  /**\n+   * Tests whether or not this component is in the group that can\n+   * be traversed using the keyboard traversal mechanism (such as the TAB\n+   * key).\n+   *\n+   * @return <code>true</code> if the component is traversed via the TAB\n+   * key, <code>false</code> otherwise.\n+   */\n   public boolean isFocusTraversable()\n   {\n     return enabled && visible && (peer == null || peer.isFocusTraversable ());\n   }\n \n+  /**\n+   * Requests that this component be given focus.  The <code>gotFocus()</code>\n+   * method on this event will be called when and if this request was\n+   * successful.\n+   */\n   public void requestFocus()\n   {\n     // If there's no peer then this component can't get the focus.  We\n@@ -1461,6 +2241,9 @@ Component findNextFocusComponent (Component child)\n     return null;\n   }\n \n+  /**\n+   * Transfers focus to the next component in the focus traversal order.\n+   */\n   public void transferFocus()\n   {\n     Component next;\n@@ -1472,7 +2255,11 @@ public void transferFocus()\n       next.requestFocus ();\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 focus event processor.\n+   *\n+   * @deprecated Deprecated in favor of <code>transferFocus()</code>.\n+   */\n   public void nextFocus()\n   {\n     transferFocus();\n@@ -1484,18 +2271,33 @@ public boolean hasFocus()\n     return hasFocus;\n   }\n \n+  /**\n+   * Adds the specified popup menu to this component.\n+   *\n+   * @param menu The popup menu to be added.\n+   */\n   public synchronized void add(PopupMenu popup)\n   {\n     if (popups == null)\n       popups = new Vector();\n     popups.addElement(popup);    \n   }\n \n+  /**\n+   * Removes the specified popup menu from this component.\n+   *\n+   * @param menu The popup menu to remove.\n+   */\n   public synchronized void remove(MenuComponent popup)\n   {\n     popups.removeElement(popup);\n   }\n \n+  /**\n+   * Returns a debugging string representing this component.\n+   *\n+   * @return A string representing this component.\n+   */\n   protected String paramString()\n   {\n     StringBuffer param = new StringBuffer();\n@@ -1527,33 +2329,65 @@ protected String paramString()\n     return param.toString();\n   }\n \n+  /**\n+   * Returns a string representation of this component.\n+   *\n+   * @return A string representation of this component\n+   */\n   public String toString()\n   {\n     return this.getClass().getName() + \"[\" + paramString() + \"]\";\n   }\n \n+  /**\n+   * Prints a listing of this component to the standard output.\n+   */\n   public void list ()\n   {\n     list (System.out, 0);\n   }\n \n+  /**\n+   * Prints a listing of this component to the specified print stream.\n+   *\n+   * @param stream The <code>PrintStream</code> to print to.\n+   */\n   public void list (PrintStream out)\n   {\n     list (out, 0);\n   }\n \n+  /**\n+   * Prints a listing of this component to the specified print stream,\n+   * starting at the specified indentation point.\n+   *\n+   * @param stream The <code>PrintStream</code> to print to.\n+   * @param indent The indentation point.\n+   */\n   public void list (PrintStream out, int indent)\n   {\n     for (int i = 0; i < indent; ++i)\n       out.print (' ');\n     out.println (toString ());\n   }\n \n+  /**\n+   * Prints a listing of this component to the specified print writer.\n+   *\n+   * @param writer The <code>PrintWrinter</code> to print to.\n+   */\n   public void list (PrintWriter out)\n   {\n     list (out, 0);\n   }\n \n+  /**\n+   * Prints a listing of this component to the specified print writer,\n+   * starting at the specified indentation point.\n+   *\n+   * @param writer The <code>PrintWriter</code> to print to.\n+   * @param indent The indentation point.\n+   */\n   public void list (PrintWriter out, int indent)\n   {\n     for (int i = 0; i < indent; ++i)\n@@ -1612,4 +2446,29 @@ public AccessibleContext getAccessibleContext()\n     return accessibleContext;\n   }\n   */\n+\n+/**\n+  * AWT 1.0 focus event processor.\n+  *\n+  * @deprecated Deprecated in favor of <code>processFocusEvent</code>.\n+  \n+public boolean\n+gotFocus(Event event, Object what)\n+{\n+  return(true);\n+}\n+*/\n+\n+/**\n+  * AWT 1.0 focus event processor.\n+  *\n+  * @deprecated Deprecated in favor of <code>processFocusEvent</code>.\n+  \n+public boolean\n+lostFocus(Event event, Object what)\n+{\n+  return(true);\n+}\n+*/\n+\n }"}, {"sha": "c921cf3c9154ba645e7a10de10e0f08b63b5aa0e", "filename": "libjava/java/awt/ComponentOrientation.java", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FComponentOrientation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FComponentOrientation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponentOrientation.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,31 @@\n-/* Copyright (C) 2000, 2001  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n+\n+/**\n+ * @author Bryce McKinlay  <bryce@albatross.co.nz>\n+ */\n \n /* Status: Incomplete. Needs a Locale lookup table. */\n "}, {"sha": "5fd9e9420982172590d9cb76a86540796388900b", "filename": "libjava/java/awt/Container.java", "status": "modified", "additions": 430, "deletions": 50, "changes": 480, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainer.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt;\n \n@@ -31,28 +48,58 @@ public class Container extends Component\n   /* Anything else is non-serializable, and should be declared \"transient\". */\n   transient ContainerListener containerListener;  \n \n+  /**\n+   * Default constructor for subclasses.\n+   */\n   public Container()\n   {\n   }\n \n+  /**\n+   * Returns the number of components in this container.\n+   *\n+   * @return The number of components in this container.\n+   */\n   public int getComponentCount()\n   {\n     return ncomponents;\n   }\n \n-  /** @deprecated Use getComponentCount() instead. */\n+  /**\n+   * Returns the number of components in this container.\n+   *\n+   * @return The number of components in this container.\n+   *\n+   * @deprecated This method is deprecated in favor of \n+   * <code>getComponentCount()</code>.\n+   */\n   public int countComponents()\n   {\n     return ncomponents;\n   }\n \n+  /**\n+   * Returns the component at the specified index.\n+   *\n+   * @param index The index of the component to retrieve.\n+   *\n+   * @return The requested component.\n+   *\n+   * @exception ArrayIndexOutOfBoundsException If the specified index is not\n+   * valid.\n+   */\n   public Component getComponent (int n)\n   {\n     if (n < 0 || n >= ncomponents)\n       throw new ArrayIndexOutOfBoundsException(\"no such component\");\n     return component[n];\n   }\n \n+  /**\n+   * Returns an array of the components in this container.\n+   *\n+   * @return The components in this container.\n+   */\n   public Component[] getComponents()\n   {\n     Component[] result = new Component[ncomponents];\n@@ -61,51 +108,130 @@ public Component[] getComponents()\n     return result;\n   }\n \n+  /**\n+   * Returns the insets for this container, which is the space used for\n+   * borders, the margin, etc.\n+   *\n+   * @return The insets for this container.\n+   */\n   public Insets getInsets()\n   {\n     if (peer == null)\n-\treturn new Insets(0, 0, 0, 0);\n-\t\n+      return new Insets(0, 0, 0, 0);\n     return ((ContainerPeer) peer).getInsets();\n   }\n \n-  /** @deprecated Use getInsets() instead. */\n+  /**\n+   * Returns the insets for this container, which is the space used for\n+   * borders, the margin, etc.\n+   *\n+   * @return The insets for this container.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>getInsets()</code>.\n+   */\n   public Insets insets()\n   {\n     return getInsets();\n   }\n-  \n+\n+  /**\n+   * Adds the specified component to this container at the end of the\n+   * component list.\n+   *\n+   * @param component The component to add to the container.\n+   *\n+   * @return The same component that was added.\n+   */\n   public Component add (Component comp)\n   {\n     addImpl (comp, null, -1);\n     return comp;\n   }\n \n+  /**\n+   * Adds the specified component to the container at the end of the\n+   * component list.  This method should not be used. Instead, use\n+   * <code>add(Component, Object</code>.\n+   *\n+   * @param name FIXME\n+   * @param component The component to be added.\n+   *\n+   * @return The same component that was added.\n+   */\n   public Component add (String name, Component comp)\n   {\n     addImpl (comp, name, -1);\n     return comp;\n   }\n \n+  /**\n+   * Adds the specified component to this container at the specified index\n+   * in the component list.\n+   *\n+   * @param component The component to be added.\n+   * @param index The index in the component list to insert this child\n+   * at, or -1 to add at the end of the list.\n+   *\n+   * @return The same component that was added.\n+   *\n+   * @param throws ArrayIndexOutOfBounds If the specified index is invalid.\n+   */\n   public Component add (Component comp, int index)\n   {\n     addImpl (comp, null, index);\n     return comp;\n   }\n \n+  /**\n+   * Adds the specified component to this container at the end of the\n+   * component list.  The layout manager will use the specified constraints\n+   * when laying out this component.\n+   *\n+   * @param component The component to be added to this container.\n+   * @param constraints The layout constraints for this component.\n+   */\n   public void add (Component comp, Object constraints)\n   {\n     addImpl (comp, constraints, -1);\n   }\n \n+  /**\n+   * Adds the specified component to this container at the specified index\n+   * in the component list.  The layout manager will use the specified\n+   * constraints when layout out this component.\n+   *\n+   * @param component The component to be added.\n+   * @param constraints The layout constraints for this component.\n+   * @param index The index in the component list to insert this child\n+   * at, or -1 to add at the end of the list.\n+   *\n+   * @param throws ArrayIndexOutOfBounds If the specified index is invalid.\n+   */\n   public void add (Component comp, Object constraints, int index)\n   {\n     addImpl (comp, constraints, index);\n   }\n \n+  /**\n+   * This method is called by all the <code>add()</code> methods to perform\n+   * the actual adding of the component.  Subclasses who wish to perform\n+   * their own processing when a component is added should override this\n+   * method.  Any subclass doing this must call the superclass version of\n+   * this method in order to ensure proper functioning of the container.\n+   *\n+   * @param component The component to be added.\n+   * @param constraints The layout constraints for this component, or\n+   * <code>null</code> if there are no constraints.\n+   * @param index The index in the component list to insert this child\n+   * at, or -1 to add at the end of the list.\n+   *\n+   * @param throws ArrayIndexOutOfBounds If the specified index is invalid.\n+   */\n   protected void addImpl (Component comp, Object constraints, int index)\n   {\n     if (index > ncomponents\n+\t|| (index < 0 && index != -1)\n \t|| comp instanceof Window\n \t|| (comp instanceof Container\n \t    && ((Container) comp).isAncestorOf (this)))\n@@ -151,21 +277,29 @@ protected void addImpl (Component comp, Object constraints, int index)\n     // Notify the layout manager.\n     if (layoutMgr != null)\n       {\n-\tif (constraints != null && layoutMgr instanceof LayoutManager2)\n+\tif (layoutMgr instanceof LayoutManager2)\n \t  {\n \t    LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n \t    lm2.addLayoutComponent (comp, constraints);\n \t  }\n-\telse\n+\telse if (constraints instanceof String)\n \t  layoutMgr.addLayoutComponent ((String) constraints, comp);\n+\telse\n+\t  layoutMgr.addLayoutComponent (null, comp);\n       }\n \n+    // Post event to notify of adding the container.\n     ContainerEvent ce = new ContainerEvent (this,\n \t\t\t\t\t    ContainerEvent.COMPONENT_ADDED,\n \t\t\t\t\t    comp);\n-    dispatchEvent (ce);\n+    getToolkit().getSystemEventQueue().postEvent(ce);\n   }\n \n+  /**\n+   * Removes the component at the specified index from this container.\n+   *\n+   * @param index The index of the component to remove.\n+   */\n   public void remove (int index)\n   {\n     Component r = component[index];\n@@ -181,12 +315,18 @@ public void remove (int index)\n     if (layoutMgr != null)\n       layoutMgr.removeLayoutComponent (r);\n \n+    // Post event to notify of adding the container.\n     ContainerEvent ce = new ContainerEvent (this,\n \t\t\t\t\t    ContainerEvent.COMPONENT_REMOVED,\n \t\t\t\t\t    r);\n-    dispatchEvent (ce);\n+    getToolkit().getSystemEventQueue().postEvent(ce);\n   }\n \n+  /**\n+   * Removes the specified component from this container.\n+   *\n+   * @return component The component to remove from this container.\n+   */\n   public void remove (Component comp)\n   {\n     for (int i = 0; i < ncomponents; ++i)\n@@ -199,51 +339,89 @@ public void remove (Component comp)\n       }\n   }\n \n+  /**\n+   * Removes all components from this container.\n+   */\n   public void removeAll()\n   {\n     while (ncomponents > 0)\n       remove (0);\n   }\n \n+  /**\n+   * Returns the current layout manager for this container.\n+   *\n+   * @return The layout manager for this container.\n+   */\n   public LayoutManager getLayout()\n   {\n     return layoutMgr;\n   }\n \n+  /**\n+   * Sets the layout manager for this container to the specified layout\n+   * manager.\n+   *\n+   * @param mgr The new layout manager for this container.\n+   */\n   public void setLayout(LayoutManager mgr)\n   {\n     layoutMgr = mgr;\n     invalidate ();\n   }\n \n+  /**\n+   * Layout the components in this container.\n+   */\n   public void doLayout()\n   {\n     if (layoutMgr != null)\n       layoutMgr.layoutContainer (this);\n   }\n \n-  /** @deprecated Use doLayout() instead. */\n+  /**\n+   * Layout the components in this container.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>doLayout()</code>.\n+   */\n   public void layout()\n   {\n     doLayout();\n   }\n \n+  /**\n+   * Invalidates this container to indicate that it (and all parent\n+   * containers) need to be laid out.\n+   */\n   public void invalidate()\n   {\n     super.invalidate ();\n   }\n \n+  /**\n+   * Re-lays out the components in this container.\n+   */\n   public void validate()\n   {\n-    if (! isValid ())\n+    // FIXME: use the tree lock?\n+    synchronized (this)\n       {\n-\tvalidateTree ();\n+\tif (! isValid ())\n+\t  {\n+\t    validateTree ();\n+\t  }\n       }\n   }\n \n+  /**\n+   * Recursively validates the container tree, recomputing any invalid\n+   * layouts.\n+   */\n   protected void validateTree()\n   {\n-    if (valid) return; \n+    if (valid)\n+      return; \n \n     ContainerPeer cPeer = null;\n     if ((peer != null) && !(peer instanceof LightweightPeer))\n@@ -256,16 +434,19 @@ protected void validateTree()\n     for (int i = 0; i < ncomponents; ++i)\n       {\n \tComponent comp = component[i];\n-\tif (comp instanceof Container)\n-\t  {\n-\t    ((Container) comp).validateTree();\n-\t  }\n-\telse\n+\tif (! comp.isValid ())\n \t  {\n-\t    component[i].validate();\n+\t    if (comp instanceof Container)\n+\t      {\n+\t\t((Container) comp).validateTree();\n+\t      }\n+\t    else\n+\t      {\n+\t\tcomponent[i].validate();\n+\t      }\n \t  }\n       }\n-    \n+\n     /* children will call invalidate() when they are layed out. It\n        is therefore imporant that valid is not set to true\n        before after the children has been layed out. */\n@@ -281,34 +462,63 @@ public void setFont(Font f)\n     // FIXME, should invalidate all children with font == null\n   }\n \n+  /**\n+   * Returns the preferred size of this container.\n+   *\n+   * @return The preferred size of this container.\n+   */\n   public Dimension getPreferredSize()\n   {\n     if (layoutMgr != null)\n       return layoutMgr.preferredLayoutSize (this);\n     else\n       return super.getPreferredSize ();\n   }\n-  \n-  /** @deprecated Use getPreferredSize() instead */\n+\n+  /**\n+   * Returns the preferred size of this container.\n+   *\n+   * @return The preferred size of this container.\n+   * \n+   * @deprecated This method is deprecated in favor of \n+   * <code>getPreferredSize()</code>.\n+   */\n   public Dimension preferredSize()\n   {\n     return getPreferredSize();\n   }\n-  \n+\n+  /**\n+   * Returns the minimum size of this container.\n+   *\n+   * @return The minimum size of this container.\n+   */\n   public Dimension getMinimumSize()\n   {\n     if (layoutMgr != null)\n       return layoutMgr.minimumLayoutSize (this);\n     else\n       return super.getMinimumSize ();\n   }\n-  \n-  /** @deprecated Use getMinimumSize() instead */\n+\n+  /**\n+   * Returns the minimum size of this container.\n+   *\n+   * @return The minimum size of this container.\n+   * \n+   * @deprecated This method is deprecated in favor of \n+   * <code>getMinimumSize()</code>.\n+   */\n   public Dimension minimumSize()\n   {\n     return getMinimumSize();\n   }\n-  \n+\n+  /**\n+   * Returns the maximum size of this container.\n+   *\n+   * @return The maximum size of this container.\n+   */\n   public Dimension getMaximumSize()\n   {\n     if (layoutMgr != null && layoutMgr instanceof LayoutManager2)\n@@ -320,6 +530,13 @@ public Dimension getMaximumSize()\n       return super.getMaximumSize ();\n   }\n \n+  /**\n+   * Returns the preferred alignment along the X axis.  This is a value\n+   * between 0 and 1 where 0 represents alignment flush left and\n+   * 1 means alignment flush right, and 0.5 means centered.\n+   *\n+   * @return The preferred alignment along the X axis.\n+   */\n   public float getAlignmentX()\n   {\n     if (layoutMgr instanceof LayoutManager2)\n@@ -328,9 +545,16 @@ public float getAlignmentX()\n \treturn lm2.getLayoutAlignmentX (this);\n       }\n     else\n-      return CENTER_ALIGNMENT;\n+      return super.getAlignmentX();\n   }\n \n+  /**\n+   * Returns the preferred alignment along the Y axis.  This is a value\n+   * between 0 and 1 where 0 represents alignment flush top and\n+   * 1 means alignment flush bottom, and 0.5 means centered.\n+   *\n+   * @return The preferred alignment along the Y axis.\n+   */\n   public float getAlignmentY()\n   {\n     if (layoutMgr instanceof LayoutManager2)\n@@ -339,9 +563,18 @@ public float getAlignmentY()\n \treturn lm2.getLayoutAlignmentY (this);\n       }\n     else\n-      return CENTER_ALIGNMENT;\n+      return super.getAlignmentY();\n   }\n \n+  /**\n+   * Paints this container.  The implementation of this method in this\n+   * class forwards to any lightweight components in this container.  If\n+   * this method is subclassed, this method should still be invoked as\n+   * a superclass method so that lightweight components are properly\n+   * drawn.\n+   *\n+   * @param graphics The graphics context for this paint job.\n+   */\n   public void paint(Graphics g)\n   {\n     if (!isShowing())\n@@ -365,7 +598,7 @@ public void paint(Graphics g)\n    * be visited.\n    */\n   private void visitChildren(Graphics gfx, GfxVisitor visitor,\n-\t\t     boolean lightweightOnly)\n+\t\t\t     boolean lightweightOnly)\n   {\n     // FIXME: do locking\n \n@@ -408,45 +641,86 @@ private void visitChild(Graphics gfx, GfxVisitor visitor,\n     visitor.visit(comp, gfx2);\n   }\n \n+  /**\n+   * Updates this container.  The implementation of this method in this\n+   * class forwards to any lightweight components in this container.  If\n+   * this method is subclassed, this method should still be invoked as\n+   * a superclass method so that lightweight components are properly\n+   * drawn.\n+   *\n+   * @param graphics The graphics context for this update.\n+   */\n   public void update(Graphics g)\n   {\n     super.update(g);\n   }\n \n+  /**\n+   * Prints this container.  The implementation of this method in this\n+   * class forwards to any lightweight components in this container.  If\n+   * this method is subclassed, this method should still be invoked as\n+   * a superclass method so that lightweight components are properly\n+   * drawn.\n+   *\n+   * @param graphics The graphics context for this print job.\n+   */\n   public void print(Graphics g)\n   {\n     super.print(g);\n     visitChildren(g, GfxPrintVisitor.INSTANCE, true);\n   }\n \n+  /**\n+   * Paints all of the components in this container.\n+   *\n+   * @param graphics The graphics context for this paint job.\n+   */\n   public void paintComponents(Graphics g)\n   {\n     super.paint(g);\n     visitChildren(g, GfxPaintAllVisitor.INSTANCE, true);\n   }\n \n+  /**\n+   * Prints all of the components in this container.\n+   *\n+   * @param graphics The graphics context for this print job.\n+   */\n   public void printComponents(Graphics g)\n   {\n     super.paint(g);\n     visitChildren(g, GfxPrintAllVisitor.INSTANCE, true);\n   }\n-  \n+\n   void dispatchEventImpl(AWTEvent e)\n   {\n     if ((e.id <= ContainerEvent.CONTAINER_LAST\n              && e.id >= ContainerEvent.CONTAINER_FIRST)\n \t&& (containerListener != null\n \t    || (eventMask & AWTEvent.CONTAINER_EVENT_MASK) != 0))\n       processEvent(e); \n-    else super.dispatchEventImpl(e);\n+    else\n+      super.dispatchEventImpl(e);\n   }  \n \n-  public void addContainerListener(ContainerListener l)\n+  /**\n+   * Adds the specified container listener to this object's list of\n+   * container listeners.\n+   *\n+   * @param listener The listener to add.\n+   */\n+  public synchronized void addContainerListener(ContainerListener l)\n   {\n     containerListener = AWTEventMulticaster.add (containerListener, l);\n   }\n \n-  public void removeContainerListener(ContainerListener l)\n+  /**\n+   * Removes the specified container listener from this object's list of\n+   * container listeners.\n+   *\n+   * @param listener The listener to remove.\n+   */\n+  public synchronized void removeContainerListener(ContainerListener l)\n   {\n     containerListener = AWTEventMulticaster.remove(containerListener, l);\n   }\n@@ -458,35 +732,70 @@ public EventListener[] getListeners(Class listenerType)\n       return getListenersImpl(listenerType, containerListener);\n     else return super.getListeners(listenerType);\n   }\n-  \n+\n+  /**\n+   * Processes the specified event.  This method calls\n+   * <code>processContainerEvent()</code> if this method is a\n+   * <code>ContainerEvent</code>, otherwise it calls the superclass\n+   * method.\n+   *\n+   * @param event The event to be processed.\n+   */\n   protected void processEvent(AWTEvent e)\n   {\n     if (e instanceof ContainerEvent)\n       processContainerEvent((ContainerEvent) e);\n     else super.processEvent(e);\n   }\n-  \n+\n+  /**\n+   * Called when a container event occurs if container events are enabled.\n+   * This method calls any registered listeners.\n+   *\n+   * @param event The event that occurred.\n+   */\n   protected void processContainerEvent(ContainerEvent e)\n   {\n     if (containerListener == null)\n       return;\n     switch (e.id)\n       {\n-\tcase ContainerEvent.COMPONENT_ADDED:\n-\t  containerListener.componentAdded(e);\n+      case ContainerEvent.COMPONENT_ADDED:\n+\tcontainerListener.componentAdded(e);\n \tbreak;\n \n-\tcase ContainerEvent.COMPONENT_REMOVED:\n-\t  containerListener.componentRemoved(e);\n+      case ContainerEvent.COMPONENT_REMOVED:\n+\tcontainerListener.componentRemoved(e);\n \tbreak;    \n       }\n   }\n \n-  /** @deprecated */\n+  /**\n+   * AWT 1.0 event processor.\n+   *\n+   * @param event The event that occurred.\n+   *\n+   * @deprecated This method is deprecated in favor of \n+   * <code>dispatchEvent()</code>.\n+   */\n   public void deliverEvent(Event e)\n   {\n   }\n-  \n+\n+  /**\n+   * Returns the component located at the specified point.  This is done\n+   * by checking whether or not a child component claims to contain this\n+   * point.  The first child component that does is returned.  If no\n+   * child component claims the point, the container itself is returned,\n+   * unless the point does not exist within this container, in which\n+   * case <code>null</code> is returned.\n+   *\n+   * @param x The X coordinate of the point.\n+   * @param y The Y coordinate of the point.\n+   *\n+   * @return The component containing the specified point, or\n+   * <code>null</code> if there is no such point.\n+   */\n   public Component getComponentAt (int x, int y)\n   {\n     if (! contains (x, y))\n@@ -505,12 +814,40 @@ public Component getComponentAt (int x, int y)\n     return this;\n   }\n \n-  /** @deprecated Use getComponentAt() instead */\n+  /**\n+   * Returns the component located at the specified point.  This is done\n+   * by checking whether or not a child component claims to contain this\n+   * point.  The first child component that does is returned.  If no\n+   * child component claims the point, the container itself is returned,\n+   * unless the point does not exist within this container, in which\n+   * case <code>null</code> is returned.\n+   *\n+   * @param point The point to return the component at.\n+   *\n+   * @return The component containing the specified point, or <code>null</code>\n+   * if there is no such point.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>getComponentAt(int, int)</code>.\n+   */\n   public Component locate(int x, int y)\n   {\n     return getComponentAt(x, y);\n   }\n \n+  /**\n+   * Returns the component located at the specified point.  This is done\n+   * by checking whether or not a child component claims to contain this\n+   * point.  The first child component that does is returned.  If no\n+   * child component claims the point, the container itself is returned,\n+   * unless the point does not exist within this container, in which\n+   * case <code>null</code> is returned.\n+   *\n+   * @param point The point to return the component at.\n+   *\n+   * @return The component containing the specified point, or <code>null</code>\n+   * if there is no such point.\n+   */\n   public Component getComponentAt(Point p)\n   {\n     return getComponentAt(p.x, p.y);\n@@ -550,12 +887,21 @@ public Component findComponentAt(Point p)\n     return findComponentAt(p.x, p.y);\n   }\n \n+  /**\n+   * Called when this container is added to another container to inform it\n+   * to create its peer.  Peers for any child components will also be\n+   * created.\n+   */\n   public void addNotify ()\n   {\n-    super.addNotify();\n+    if (peer == null)\n+      {\n+\taddNotifyContainerChildren ();\n+\tsuper.addNotify();\n+      }\n   }\n \n-  void addNotifyContainerChildren()\n+  private void addNotifyContainerChildren()\n   {\n     for (int i = ncomponents;  --i >= 0; )\n       {\n@@ -565,13 +911,27 @@ void addNotifyContainerChildren()\n       }\n   }\n \n+  /**\n+   * Called when this container is removed from its parent container to\n+   * inform it to destroy its peer.  This causes the peers of all child\n+   * component to be destroyed as well.\n+   */\n   public void removeNotify()\n   {\n     for (int i = 0; i < ncomponents; ++i)\n       component[i].removeNotify ();\n     super.removeNotify();\n   }\n \n+  /**\n+   * Tests whether or not the specified component is contained within\n+   * this components subtree.\n+   *\n+   * @param component The component to test.\n+   *\n+   * @return <code>true</code> if this container is an ancestor of the\n+   * specified component, <code>false</code>.\n+   */\n   public boolean isAncestorOf (Component comp)\n   {\n     for (;;)\n@@ -584,6 +944,12 @@ public boolean isAncestorOf (Component comp)\n       }\n   }\n \n+  /**\n+   * Returns a string representing the state of this container for\n+   * debugging purposes.\n+   *\n+   * @return A string representing the state of this container.\n+   */\n   protected String paramString()\n   {\n     String param = super.paramString();\n@@ -592,14 +958,28 @@ protected String paramString()\n \n     return param;\n   }\n-  \n+\n+  /**\n+   * Writes a listing of this container to the specified stream starting\n+   * at the specified indentation point.\n+   *\n+   * @param stream The <code>PrintStream</code> to write to.\n+   * @param indent The indentation point.\n+   */\n   public void list (PrintStream out, int indent)\n   {\n     super.list (out, indent);\n     for (int i = 0; i < ncomponents; ++i)\n       component[i].list (out, indent + 2);\n   }\n \n+  /**\n+   * Writes a listing of this container to the specified stream starting\n+   * at the specified indentation point.\n+   *\n+   * @param stream The <code>PrintWriter</code> to write to.\n+   * @param indent The indentation point.\n+   */\n   public void list(PrintWriter out, int indent)\n   {\n     super.list (out, indent);"}, {"sha": "359dc20115e838fbd3c41b4425573aadeaa7df8a", "filename": "libjava/java/awt/Event.java", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEvent.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,28 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n \n package java.awt;\n "}, {"sha": "e15928644dfaf8edb3c20a3b18ec6922c6094921", "filename": "libjava/java/awt/EventDispatchThread.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FEventDispatchThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FEventDispatchThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventDispatchThread.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n /** @author Bryce McKinlay */\n "}, {"sha": "a47d34f21c54ebefbd3dce8b7fb9d9272b283f90", "filename": "libjava/java/awt/EventQueue.java", "status": "modified", "additions": 89, "deletions": 32, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventQueue.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,28 @@\n-/* Copyright (C) 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n@@ -18,13 +36,19 @@\n  * Status:  Believed complete, but untested. Check FIXME's.\n  */\n \n-/** @author Bryce McKinlay */\n-\n+/**\n+ * This class manages a queue of <code>AWTEvent</code> objects that\n+ * are posted to it.  The AWT system uses only one event queue for all\n+ * events.\n+ *\n+ * @author Bryce McKinlay\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ */\n public class EventQueue\n {\n   private static final int INITIAL_QUEUE_DEPTH = 8;\n   private AWTEvent[] queue = new AWTEvent[INITIAL_QUEUE_DEPTH];\n-  \n+\n   private int next_in = 0; // Index where next event will be added to queue\n   private int next_out = 0; // Index of next event to be removed from queue\n \n@@ -33,40 +57,68 @@\n \n   private EventDispatchThread dispatchThread = new EventDispatchThread(this);\n \n+  /**\n+   * Initializes a new instance of <code>EventQueue</code>.\n+   */\n   public EventQueue()\n   {\n   }\n-  \n+\n+  /**\n+   * Returns the next event in the queue.  This method will block until\n+   * an event is available or until the thread is interrupted.\n+   *\n+   * @return The next event in the queue.\n+   *\n+   * @exception InterruptedException If this thread is interrupted while\n+   * waiting for an event to be posted to the queue.\n+   */\n   public synchronized AWTEvent getNextEvent()\n     throws InterruptedException\n   {\n     if (next != null)\n       return next.getNextEvent();\n-      \n+\n     while (next_in == next_out)\n       wait();\n-    \n+\n     AWTEvent res = queue[next_out];\n-    \n+\n     if (++next_out == queue.length)\n       next_out = 0;\n     return res;\n   }\n-  \n-  /** @specnote Does not block. Returns null if there are no events on the \n+\n+  /**\n+   * Returns the next event in the queue without removing it from the queue.\n+   * This method will block until an event is available or until the thread\n+   * is interrupted.\n+   *\n+   * @return The next event in the queue.\n+   * @specnote Does not block. Returns null if there are no events on the \n    *            queue. \n    */ \n   public synchronized AWTEvent peekEvent()\n   {\n     if (next != null)\n       return next.peekEvent();\n-      \n+\n     if (next_in != next_out)\n       return queue[next_out];\n     else return null;\n   }\n-  \n-  /** @specnote Does not block. Returns null if there are no matching events \n+\n+  /**\n+   * Returns the next event in the queue that has the specified id\n+   * without removing it from the queue.\n+   * This method will block until an event is available or until the thread\n+   * is interrupted.\n+   *\n+   * @param id The event id to return.\n+   *\n+   * @return The next event in the queue.\n+   *\n+   * @specnote Does not block. Returns null if there are no matching events \n    *            on the queue. \n    */ \n   public synchronized AWTEvent peekEvent(int id)\n@@ -83,7 +135,12 @@ public synchronized AWTEvent peekEvent(int id)\n       }\n     return null;\n   }\n-  \n+\n+  /**\n+   * Posts a new event to the queue.\n+   *\n+   * @param event The event to post to the queue.\n+   */\n   public synchronized void postEvent(AWTEvent evt)\n   {\n     if (next != null)\n@@ -92,7 +149,7 @@ public synchronized void postEvent(AWTEvent evt)\n \treturn;\n       }\n     // FIXME: Security checks?\n-    \n+\n     /* Check for any events already on the queue with the same source \n        and ID. */\t\n     int i = next_out;\n@@ -123,24 +180,24 @@ public synchronized void postEvent(AWTEvent evt)\n     queue[next_in] = evt;    \n     if (++next_in == queue.length)\n       next_in = 0;\n-      \n+\n     if (next_in == next_out)\n       {\n         /* Queue is full. Extend it. */\n         AWTEvent[] oldQueue = queue;\n \tqueue = new AWTEvent[queue.length * 2];\n-\t\n+\n \tint len = oldQueue.length - next_out;\n \tSystem.arraycopy(oldQueue, next_out, queue, 0, len);\n \tif (next_out != 0)\n \t  System.arraycopy(oldQueue, 0, queue, len, next_out);\n-\t  \n+\n \tnext_out = 0;\n \tnext_in = oldQueue.length;\n       }\n     notify();\n   }\n-  \n+\n   /** @since JDK1.2 */\n   public static void invokeAndWait(Runnable runnable)\n     throws InterruptedException, InvocationTargetException\n@@ -149,7 +206,7 @@ public static void invokeAndWait(Runnable runnable)\n     Thread current = Thread.currentThread();\n     if (current == eq.dispatchThread)\n       throw new Error(\"Can't call invokeAndWait from event dispatch thread\");\n-  \n+\n     InvocationEvent ie = \n       new InvocationEvent(eq, runnable, current, true);\n \n@@ -160,11 +217,11 @@ public static void invokeAndWait(Runnable runnable)\n       }\n \n     Exception exception;\n-    \n+\n     if ((exception = ie.getException()) != null)\n       throw new InvocationTargetException(exception);\n   }\n-  \n+\n   /** @since JDK1.2 */\n   public static void invokeLater(Runnable runnable)\n   {\n@@ -175,13 +232,13 @@ public static void invokeLater(Runnable runnable)\n \n     eq.postEvent(ie);\n   }\n-  \n+\n   public static boolean isDispatchThread()\n   {\n     EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue(); \n     return (Thread.currentThread() == eq.dispatchThread);\n   }\n-  \n+\n   /** Allows a custom EventQueue implementation to replace this one. \n     * All pending events are transferred to the new queue. Calls to postEvent,\n     * getNextEvent, and peekEvent are forwarded to the pushed queue until it\n@@ -201,21 +258,21 @@ public synchronized void push(EventQueue newEventQueue)\n     next = newEventQueue;\n     newEventQueue.prev = this;    \n   }\n-  \n+\n   /** Transfer any pending events from this queue back to the parent queue that\n     * was previously push()ed. Event dispatch from this queue is suspended. */\n   protected void pop() throws EmptyStackException\n   {\n     if (prev == null)\n       throw new EmptyStackException();\n-    \n+\n     // Don't synchronize both this and prev at the same time, or deadlock could\n     // occur.\n     synchronized (prev)\n       {\n \tprev.next = null;\n       }\n-      \n+\n     synchronized (this)\n       {\n \tint i = next_out;\n@@ -228,7 +285,7 @@ protected void pop() throws EmptyStackException\n \t  }\n       }\n   }\n-  \n+\n   protected void dispatchEvent(AWTEvent evt)\n   {\n     if (evt instanceof ActiveEvent)"}, {"sha": "a377d3021905d04db234c4f8af3b8cb07ca2edeb", "filename": "libjava/java/awt/FlowLayout.java", "status": "modified", "additions": 96, "deletions": 31, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FFlowLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FFlowLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFlowLayout.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,12 +1,30 @@\n // FlowLayout.java - Grid-based layout engine\n \n-/* Copyright (C) 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n@@ -17,6 +35,9 @@\n  * without horizontal clipping, a new row is started.  This class\n  * supports horizontal and vertical gaps.  These are used for spacing\n  * between components.\n+ *\n+ * @author Tom Tromey <tromey@redhat.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n public class FlowLayout implements LayoutManager, Serializable\n {\n@@ -34,6 +55,9 @@ public class FlowLayout implements LayoutManager, Serializable\n    * orientation.  */\n   public static final int TRAILING = 4;\n \n+  // Serialization constant\n+  private static final long serialVersionUID = -7262534875583282631L;\n+\n   /** Add a new component to the layout.  This particular implementation\n    * does nothing.\n    */\n@@ -42,42 +66,60 @@ public void addLayoutComponent (String name, Component comp)\n     // Nothing.\n   }\n \n-  /** Return the alignment.  */\n+  /**\n+   * Returns the current justification value for this object.\n+   *\n+   * @return The current justification value for this object.\n+   */\n   public int getAlignment ()\n   {\n     return align;\n   }\n \n-  /** Return the horizontal gap.  */\n+  /**\n+   * Returns the horizontal gap between components.\n+   *\n+   * @return The horizontal gap between components.\n+   */\n   public int getHgap ()\n   {\n     return hgap;\n   }\n \n-  /** Return the vertical gap.  */\n+  /**\n+   * Returns the vertical gap between lines of components.\n+   *\n+   * @return The vertical gap between lines of components.\n+   */\n   public int getVgap ()\n   {\n     return vgap;\n   }\n \n-  /** Create a new FlowLayout with center alignment.\n-   * Both gaps are set to 5.\n+  /**\n+   * Initializes a new instance of <code>FlowLayout</code> with a center\n+   * justification and a default horizontal and vertical gap of 5.\n    */\n   public FlowLayout ()\n   {\n     this (CENTER, 5, 5);\n   }\n \n-  /** Create a new FlowLayout with the alignment.\n-   * columns.  Both gaps are set to 5.\n-   * @param align Alignment\n+  /**\n+   * Initializes a new instance of <code>FlowLayout</code> with the specified\n+   * justification and a default horizontal and vertical gap of 5.\n+   *\n+   * @param align The justification setting, which should be one of the\n+   * contants in this class.\n    */\n   public FlowLayout (int align)\n   {\n     this (align, 5, 5);\n   }\n \n-  /** Create a new FlowLayout with the specified alignment and gaps.\n+  /**\n+   * Initializes a new instance of <code>FlowLayout</code> with the specified\n+   * justification and gap values\n    * @param align Alignment\n    * @param hgap The horizontal gap\n    * @param vgap The vertical gap\n@@ -118,13 +160,12 @@ public void layoutContainer (Container parent)\n \tboolean found_one = false;\n \tfor (j = i; j < num && ! found_one; ++j)\n \t  {\n-\t    // FIXME: this is very inefficient.\n-\t    Dimension c = comps[i].getPreferredSize ();\n-\n \t    // Skip invisible items.\n \t    if (! comps[i].visible)\n \t      continue;\n \n+\t    Dimension c = comps[i].getPreferredSize ();\n+\n \t    int next_w = new_w + hgap + c.width;\n \t    if (next_w <= d.width || ! found_one)\n \t      {\n@@ -157,10 +198,9 @@ else if (myalign == CENTER)\n \n \tfor (int k = i; i < j; ++k)\n \t  {\n-\t    // FIXME: this is very inefficient.\n-\t    Dimension c = comps[i].getPreferredSize ();\n \t    if (comps[i].visible)\n \t      {\n+\t\tDimension c = comps[i].getPreferredSize ();\n \t\tcomps[i].setLocation (x, y);\n \t\tx += c.width + vgap;\n \t      }\n@@ -172,16 +212,22 @@ else if (myalign == CENTER)\n       }\n   }\n \n-  /** Get the minimum layout size of the container.\n+  /**\n+   * Returns the minimum layout size for the specified container using\n+   * this layout.\n    * @param cont The parent container\n+   * @return The minimum layout size.\n    */\n   public Dimension minimumLayoutSize (Container cont)\n   {\n     return getSize (cont, true);\n   }\n \n-  /** Get the preferred layout size of the container.\n+  /**\n+   * Returns the preferred layout size for the specified container using\n+   * this layout.\n    * @param cont The parent container\n+   * @return The preferred layout size.\n    */\n   public Dimension preferredLayoutSize (Container cont)\n   {\n@@ -197,19 +243,24 @@ public void removeLayoutComponent (Component comp)\n     // Nothing.\n   }\n \n-  /** Set the alignment.\n-   * @param align The alignment\n+  /**\n+   * Sets the justification value for this object to the specified value.\n+   *\n+   * @param align The new justification value for this object, which must\n+   * be one of the constants in this class.\n    */\n   public void setAlignment (int align)\n   {\n     if (align != LEFT && align != RIGHT && align != CENTER\n \t&& align != LEADING && align != TRAILING)\n-      throw new IllegalArgumentException (\"invalid align: \" + align);\n+      throw new IllegalArgumentException (\"invalid alignment: \" + align);\n     this.align = align;\n   }\n \n-  /** Set the horizontal gap\n-   * @param hgap The horizontal gap\n+  /**\n+   * Sets the horizontal gap between components to the specified value.\n+   *\n+   * @param hgap The new horizontal gap between components.\n    */\n   public void setHgap (int hgap)\n   {\n@@ -218,8 +269,10 @@ public void setHgap (int hgap)\n     this.hgap = hgap;\n   }\n \n-  /** Set the vertical gap.\n-   * @param vgap The vertical gap\n+  /**\n+   * Sets the vertical gap between lines of components to the specified value.\n+   *\n+   * @param vgap The new vertical gap.\n    */\n   public void setVgap (int vgap)\n   {\n@@ -228,7 +281,9 @@ public void setVgap (int vgap)\n     this.vgap = vgap;\n   }\n \n-  /** Return String description of this object.  */\n+  /** Return String description of this object.\n+   * @return A string representation of this object.\n+   */\n   public String toString ()\n   {\n     return (\"[\" + getClass ().getName () + \",hgap=\" + hgap + \",vgap=\" + vgap\n@@ -270,9 +325,19 @@ private Dimension getSize (Container parent, boolean is_min)\n     return new Dimension (w, h);\n   }\n \n-  // Alignment.\n+  /**\n+   * @serial The justification alignment of the lines of components, which\n+   * will be one of the constants defined in this class.\n+   */\n   private int align;\n-  // The gaps.\n+\n+  /**\n+   * @serial The horizontal gap between components.\n+   */\n   private int hgap;\n+\n+  /**\n+   * @serial The vertical gap between lines of components.\n+   */\n   private int vgap;\n }"}, {"sha": "04f3f152cd88e306a067d603488ba78261de2692", "filename": "libjava/java/awt/Frame.java", "status": "modified", "additions": 440, "deletions": 131, "changes": 571, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFrame.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,150 +1,459 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Frame.java -- AWT toplevel window\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n \n package java.awt;\n+\n import java.awt.peer.FramePeer;\n+import java.awt.peer.WindowPeer;\n+import java.awt.peer.ContainerPeer;\n+import java.awt.peer.ComponentPeer;\n+import java.io.Serializable;\n+import java.util.Enumeration;\n+import java.util.Vector;\n+\n+/**\n+  * This class is a top-level window with a title bar and window\n+  * decorations.\n+  *\n+  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  */\n+public class Frame extends Window implements MenuContainer, Serializable\n+{\n+\n+/*\n+ * Static Variables\n+ */\n+\n+/**\n+  * Constant for a cross-hair cursor.\n+  * @deprecated Use <code>Cursor.CROSSHAIR_CURSOR</code> instead.\n+  */\n+public static final int CROSSHAIR_CURSOR = Cursor.CROSSHAIR_CURSOR;\n+\n+/**\n+  * Constant for a cursor over a text field.\n+  * @deprecated Use <code>Cursor.TEXT_CURSOR</code> instead.\n+  */\n+public static final int TEXT_CURSOR = Cursor.TEXT_CURSOR;\n+\n+/**\n+  * Constant for a cursor to display while waiting for an action to complete.\n+  * @deprecated Use <code>Cursor.WAIT_CURSOR</code>.\n+  */\n+public static final int WAIT_CURSOR = Cursor.WAIT_CURSOR;\n+\n+/**\n+  * Cursor used over SW corner of window decorations.\n+  * @deprecated Use <code>Cursor.SW_RESIZE_CURSOR</code> instead.\n+  */\n+public static final int SW_RESIZE_CURSOR = Cursor.SW_RESIZE_CURSOR;\n+\n+/**\n+  * Cursor used over SE corner of window decorations.\n+  * @deprecated Use <code>Cursor.SE_RESIZE_CURSOR</code> instead.\n+  */\n+public static final int SE_RESIZE_CURSOR = Cursor.SE_RESIZE_CURSOR;\n+\n+/**\n+  * Cursor used over NW corner of window decorations.\n+  * @deprecated Use <code>Cursor.NW_RESIZE_CURSOR</code> instead.\n+  */\n+public static final int NW_RESIZE_CURSOR = Cursor.NW_RESIZE_CURSOR;\n+\n+/**\n+  * Cursor used over NE corner of window decorations.\n+  * @deprecated Use <code>Cursor.NE_RESIZE_CURSOR</code> instead.\n+  */\n+public static final int NE_RESIZE_CURSOR = Cursor.NE_RESIZE_CURSOR;\n+\n+/**\n+  * Cursor used over N edge of window decorations.\n+  * @deprecated Use <code>Cursor.N_RESIZE_CURSOR</code> instead.\n+  */\n+public static final int N_RESIZE_CURSOR = Cursor.N_RESIZE_CURSOR;\n+\n+/**\n+  * Cursor used over S edge of window decorations.\n+  * @deprecated Use <code>Cursor.S_RESIZE_CURSOR</code> instead.\n+  */\n+public static final int S_RESIZE_CURSOR = Cursor.S_RESIZE_CURSOR;\n+\n+/**\n+  * Cursor used over E edge of window decorations.\n+  * @deprecated Use <code>Cursor.E_RESIZE_CURSOR</code> instead.\n+  */\n+public static final int E_RESIZE_CURSOR = Cursor.E_RESIZE_CURSOR;\n+\n+/**\n+  * Cursor used over W edge of window decorations.\n+  * @deprecated Use <code>Cursor.W_RESIZE_CURSOR</code> instead.\n+  */\n+public static final int W_RESIZE_CURSOR = Cursor.W_RESIZE_CURSOR;\n+\n+/**\n+  * Constant for a hand cursor.\n+  * @deprecated Use <code>Cursor.HAND_CURSOR</code> instead.\n+  */\n+public static final int HAND_CURSOR = Cursor.HAND_CURSOR;\n+\n+/**\n+  * Constant for a cursor used during window move operations.\n+  * @deprecated Use <code>Cursor.MOVE_CURSOR</code> instead.\n+  */\n+public static final int MOVE_CURSOR = Cursor.MOVE_CURSOR;\n+\n+// Serialization version constant\n+private static final long serialVersionUID = 2673458971256075116L;\n+\n+/*************************************************************************/\n+\n+/*\n+ * Instance Variables\n+ */\n+\n+/**\n+  * @serial The version of the class data being serialized\n+  * // FIXME: what is this value?\n+  */\n+private int frameSerializedDataVersion;\n+\n+/**\n+  * @serial Image used as the icon when this frame is minimized.\n+  */\n+private Image icon;\n \n-/* A very incomplete placeholder. */\n+/**\n+  * @serial Constant used by the JDK Motif peer set.  Not used in\n+  * this implementation.\n+  */\n+private boolean mbManagement;\n \n-public class Frame extends Window implements MenuContainer\n+/**\n+  * @serial The menu bar for this frame.\n+  */\n+//private MenuBar menuBar = new MenuBar();\n+private MenuBar menuBar;\n+\n+/**\n+  * @serial A list of other top-level windows owned by this window.\n+  */\n+Vector ownedWindows = new Vector();\n+\n+/**\n+  * @serial Indicates whether or not this frame is resizable.\n+  */\n+private boolean resizable = true;\n+\n+/**\n+  * @serial The state of this frame.\n+  * // FIXME: What are the values here?\n+  */\n+private int state;\n+\n+/**\n+  * @serial The title of the frame.\n+  */\n+private String title = \"\";\n+\n+/*************************************************************************/\n+\n+/*\n+ * Constructors\n+ */\n+\n+/**\n+  * Initializes a new instance of <code>Frame</code> that is not visible\n+  * and has no title.\n+  */\n+public\n+Frame()\n+{\n+  this(\"\");\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Initializes a new instance of <code>Frame</code> that is not visible\n+  * and has the specified title.\n+  *\n+  * @param title The title of this frame.\n+  */\n+public\n+Frame(String title)\n+{\n+  super();\n+  System.err.println(\"returned\");\n+  this.title = title;\n+  System.err.println(\"end\");\n+}\n+\n+public\n+Frame(GraphicsConfiguration gc)\n {\n-  public static final int NORMAL = 0;\n-  public static final int ICONIFIED = 1;\n+  super(gc);\n+}\n \n-  MenuBar menuBar = null;\n-  String title;\n+public\n+Frame(String title, GraphicsConfiguration gc)\n+{\n+  super(gc);\n+  setTitle(title);\n+}\n \n-  private transient Image iconImage;\n-  private transient boolean isResizable = true;\n-  private transient int state = NORMAL;\n+/*************************************************************************/\n \n-  public Frame ()\n-  {\n-    super();\n-  }\n+/*\n+ * Instance Methods\n+ */\n \n-  public Frame(GraphicsConfiguration gc)\n-  {\n-    super(gc);\n-  }\n+/**\n+  * Returns this frame's title string.\n+  *\n+  * @return This frame's title string.\n+  */\n+public String\n+getTitle()\n+{\n+  return(title);\n+}\n \n-  public Frame (String title)\n-  {\n-    super();\n-    setTitle(title);\n-  }\n+/*************************************************************************/\n \n-  public Frame(String title, GraphicsConfiguration gc)\n-  {\n-    super(gc);\n-    setTitle(title);\n-  }\n+/*\n+ * Sets this frame's title to the specified value.\n+ *\n+ * @param title The new frame title.\n+ */\n+public synchronized void\n+setTitle(String title)\n+{\n+  this.title = title;\n+  if (peer != null)\n+    ((FramePeer) peer).setTitle(title);\n+}\n \n-  public String getTitle()\n-  {\n-    return (title != null) ? title : \"\";\n-  }\n-    \n-  public void setTitle (String title)\n-  {\n-    this.title = title;\n-    if (peer != null)\n-      ((FramePeer)peer).setTitle(title);\n-  }\n-\n-  public Image getIconImage()\n-  {\n-    return iconImage;\n-  }\n-  \n-  public void setIconImage(Image image)\n-  {\n-    iconImage = image;\n-    if (peer != null)\n-      ((FramePeer) peer).setIconImage(iconImage);\n-  }\n-\n-  protected void finalize() throws Throwable\n-  {\n-    //frames.remove(this);\n-    /* FIXME: This won't work. Finalize will never be called if frames\n-       has a reference to the object. We need weak references to\n-       implement this correctly. */\n-\n-    super.finalize();\n-  }\n-\n-  public synchronized void setMenuBar (MenuBar menuBar)\n-  { \n-    if (this.menuBar != menuBar)\n-      {\n-\t//this.menuBar.removeNotify();\n-\tthis.menuBar = menuBar;\n-\t//this.menuBar.addNotify();\n-      }\t\n-\n-    if (peer != null)\n-      ((FramePeer) peer).setMenuBar(menuBar);\n-  }\n-  \n-  public boolean isResizable()\n-  {\n-    return isResizable;\n-  }\n-\n-  public void setResizable(boolean resizable)\n-  {\n-    isResizable = resizable;\n-    if (peer != null)\n-      ((FramePeer) peer).setResizable(isResizable);\n-  }\n-\n-  public int getState()\n-  {\n-    /* FIXME: State might have changed in the peer... Must check. */\n-    \n-    return state;\n-  }\n-\n-\n-  public synchronized void addNotify ()\n-  {\n-    if (peer == null)\n-      peer = getToolkit ().createFrame (this);\n-    super.addNotify();\n-  }\n-\n-  public boolean postEvent(Event evt) { return false; } // FIXME\n- \n-  public void remove(MenuComponent m)\n-  {\n-    if (m == menuBar)\n-      {\n-\tsetMenuBar(null);\n-\treturn;\n-      }\n-\t\n-    super.remove(m);\n-  }\n-  \n-  public void removeNotify()\n-  {\n-    //if ((peer != null) && (menuBar != null)) menuBar.removeNotify();\n-    super.removeNotify();\n-  }\n+/*************************************************************************/\n+\n+/**\n+  * Returns this frame's icon.\n+  *\n+  * @return This frame's icon, or <code>null</code> if this frame does not\n+  * have an icon.\n+  */\n+public Image\n+getIconImage()\n+{\n+  return(icon);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets this frame's icon to the specified value.\n+  *\n+  * @icon The new icon for this frame.\n+  */\n+public synchronized void\n+setIconImage(Image icon)\n+{\n+  this.icon = icon;\n+  if (peer != null)\n+    ((FramePeer) peer).setIconImage(icon);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns this frame's menu bar.\n+  *\n+  * @return This frame's menu bar, or <code>null</code> if this frame\n+  * does not have a menu bar.\n+  */\n+public MenuBar\n+getMenuBar()\n+{\n+  return(menuBar);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets this frame's menu bar.\n+  *\n+  * @param menuBar The new menu bar for this frame.\n+  */\n+public synchronized void\n+setMenuBar(MenuBar menuBar)\n+{\n+  this.menuBar = menuBar;\n+  if (peer != null)\n+    ((FramePeer) peer).setMenuBar(menuBar);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Tests whether or not this frame is resizable.  This will be \n+  * <code>true</code> by default.\n+  *\n+  * @return <code>true</code> if this frame is resizable, <code>false</code>\n+  * otherwise.\n+  */\n+public boolean\n+isResizable()\n+{\n+  return(resizable);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets the resizability of this frame to the specified value.\n+  *\n+  * @param resizable <code>true</code> to make the frame resizable,\n+  * <code>false</code> to make it non-resizable.\n+  */\n+public synchronized void\n+setResizable(boolean resizable)\n+{\n+  this.resizable = resizable;\n+  if (peer != null)\n+    ((FramePeer) peer).setResizable(resizable);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the cursor type of the cursor for this window.  This will\n+  * be one of the constants in this class.\n+  *\n+  * @return The cursor type for this frame.\n+  *\n+  * @deprecated Use <code>Component.getCursor()</code> instead.\n+  */\n+public int\n+getCursorType()\n+{\n+  return(getCursor().getType());\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets the cursor for this window to the specified type.  The specified\n+  * type should be one of the constants in this class.\n+  *\n+  * @param type The cursor type.\n+  *\n+  * @deprecated.  Use <code>Component.setCursor(Cursor)</code> instead.\n+  */\n+public void\n+setCursor(int type)\n+{\n+  setCursor(new Cursor(type));\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Removes the specified component from this frame's menu.\n+  *\n+  * @param menu The menu component to remove.\n+  */\n+public void\n+remove(MenuComponent menu)\n+{\n+  menuBar.remove(menu);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Notifies this frame that it should create its native peer.\n+  */\n+public void\n+addNotify()\n+{\n+  if (peer == null)\n+    peer = getToolkit ().createFrame (this);\n+  super.addNotify();\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Destroys any resources associated with this frame.  This includes\n+  * all components in the frame and all owned toplevel windows.\n+  */\n+public void\n+dispose()\n+{\n+  Enumeration e = ownedWindows.elements();\n+  while(e.hasMoreElements())\n+    {\n+      Window w = (Window)e.nextElement();\n+      w.dispose();\n+    }\n+\n+  super.dispose();\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns a debugging string describing this window.\n+  *\n+  * @return A debugging string describing this window.\n+  */\n+protected String\n+paramString()\n+{\n+  return(getClass().getName());\n+}\n+\n+public int\n+getState()\n+{\n+  /* FIXME: State might have changed in the peer... Must check. */\n     \n-  public static Frame[] getFrames()\n-  {\n-    //Frame[] array = new Frames[frames.size()];\n-    //return frames.toArray(array);\n+  return state;\n+}\n+\n+public static Frame[]\n+getFrames()\n+{\n+  //Frame[] array = new Frames[frames.size()];\n+  //return frames.toArray(array);\n     \n     // see finalize() comment\n-    String msg = \"FIXME: can't be implemented without weak references\";\n-    throw new UnsupportedOperationException(msg);\n-  }\n+  String msg = \"FIXME: can't be implemented without weak references\";\n+  throw new UnsupportedOperationException(msg);\n }\n+\n+} // class Frame \n+"}, {"sha": "bd785be883e304c9de75f9ef8d05aae1b964434b", "filename": "libjava/java/awt/Graphics.java", "status": "modified", "additions": 743, "deletions": 185, "changes": 928, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphics.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,235 +1,793 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Graphics.java -- Abstract Java drawing class\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n import java.awt.image.ImageObserver;\n \n /**\n- * @author Warren Levy <warrenl@cygnus.com>\n- * @date March 15, 2000.\n+  * This is the abstract superclass of classes for drawing to graphics\n+  * devices such as the screen or printers.\n+  *\n+  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  * @author Warren Levy <warrenl@cygnus.com>\n+  */\n+public abstract class Graphics\n+{\n+\n+/*\n+ * Instance Variables\n+ */\n+\n+/*************************************************************************/\n+\n+/*\n+ * Constructors\n  */\n \n /**\n- * Written using on-line Java Platform 1.2 API Specification, as well\n- * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n- * Status:  Almost complete\n+  * Default constructor for subclasses.\n+  */\n+protected\n+Graphics()\n+{\n+}\n+\n+/*************************************************************************/\n+\n+/*\n+ * Instance Methods\n  */\n \n-public abstract class Graphics\n+/**\n+  * Returns a copy of this <code>Graphics</code> object.\n+  *\n+  * @return A copy of this object.\n+  */\n+public abstract Graphics\n+create();\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns a copy of this <code>Graphics</code> object.  The origin point\n+  * will be translated to the point (x, y) and the cliping rectangle set\n+  * to the intersection of the clipping rectangle in this object and the\n+  * rectangle specified by the parameters to this method.\n+  *\n+  * @param x The new X coordinate of the clipping region rect.\n+  * @param y The new Y coordinate of the clipping region rect.\n+  * @param width The width of the clipping region intersect rectangle. \n+  * @param height The height of the clipping region intersect rectangle. \n+  *\n+  * @return A copy of this object, modified as specified.\n+  */\n+public Graphics\n+create(int x, int y, int width, int height)\n {\n-  protected Graphics() {}\n+  Graphics g = create();\n+\n+  g.translate(x, y);\n+  // FIXME: I'm not sure if this will work.  Are the old clip rect bounds\n+  // translated above?\n+  g.clipRect(0, 0, width, height);\n+\n+  return(g);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Translates this context so that its new origin point is the point\n+  * (x, y).\n+  *\n+  * @param x The new X coordinate of the origin.\n+  * @param y The new Y coordinate of the origin.\n+  */\n+public abstract void\n+translate(int x, int y);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Returns the current color for this object.\n+  *\n+  * @return The color for this object.\n+  */\n+public abstract Color\n+getColor();\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets the current color for this object.\n+  *\n+  * @param color The new color.\n+  */\n+public abstract void\n+setColor(Color color);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets this context into \"paint\" mode, where the target pixels are\n+  * completely overwritten when drawn on.\n+  */\n+public abstract void\n+setPaintMode();\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets this context info \"XOR\" mode, where the targe pixles are\n+  * XOR-ed when drawn on. \n+  *\n+  * @param color The color to XOR against.\n+  */\n+public abstract void\n+setXORMode(Color color);\n   \n-  public abstract Graphics create();\n+/*************************************************************************/\n \n-  public Graphics create(int x, int y, int width, int height)\n-  {\n-    Graphics gfx = create();\n-    gfx.translate(x, y);\n-    gfx.setClip(0, y, width, height);\n-    return gfx;\n-  }\n+/**\n+  * Returns the current font for this graphics context.\n+  *\n+  * @return The current font.\n+  */\n+public abstract Font\n+getFont();\n \n-  public abstract void translate(int x, int y);\n+/*************************************************************************/\n \n-  public abstract Color getColor();\n+/**\n+  * Sets the font for this graphics context to the specified value.\n+  *\n+  * @param font The new font.\n+  */\n+public abstract void\n+setFont(Font font);\n \n-  public abstract void setColor(Color color);\n+/*************************************************************************/\n \n-  public abstract void setPaintMode();\n+/**\n+  * Returns the font metrics for the current font.\n+  *\n+  * @return The font metrics for the current font.\n+  */\n+public FontMetrics\n+getFontMetrics()\n+{\n+  return(getFontMetrics(getFont()));\n+}\n \n-  public abstract void setXORMode(Color altColor);\n+/*************************************************************************/\n \n-  public abstract Font getFont();\n+/**\n+  * Returns the font metrics for the specified font.\n+  *\n+  * @param font The font to return metrics for.\n+  *\n+  * @return The requested font metrics.\n+  */\n+public abstract FontMetrics\n+getFontMetrics(Font font);\n \n-  public abstract void setFont(Font font);\n+/*************************************************************************/\n \n-  public FontMetrics getFontMetrics()\n-  {\n-    return getFontMetrics(getFont());\n-  }\n+/**\n+  * Returns the bounding rectangle of the clipping region for this \n+  * graphics context.\n+  *\n+  * @return The bounding rectangle for the clipping region.\n+  */\n+public abstract Rectangle\n+getClipBounds();\n \n-  public abstract FontMetrics getFontMetrics(Font font);\n+/*************************************************************************/\n \n-  public abstract Rectangle getClipBounds();\n+/**\n+  * Returns the bounding rectangle of the clipping region for this \n+  * graphics context.\n+  *\n+  * @return The bounding rectangle for the clipping region.\n+  *\n+  * @deprecated This method is deprecated in favor of\n+  * <code>getClipBounds()</code>.\n+  */\n+public Rectangle\n+getClipRect()\n+{\n+  return(getClipBounds());\n+}\n \n-  public abstract void clipRect(int x, int y, int width, int height);\n+/*************************************************************************/\n \n-  public abstract void setClip(int x, int y, int width, int height);\n+/**\n+  * Sets the clipping region to the intersection of the current clipping\n+  * region and the rectangle determined by the specified parameters.\n+  *\n+  * @param x The X coordinate of the upper left corner of the intersect rect.\n+  * @param Y The Y coordinate of the upper left corner of the intersect rect.\n+  * @param width The width of the intersect rect.\n+  * @param height The height of the intersect rect.\n+  */\n+public abstract void\n+clipRect(int x, int y, int width, int height);\n \n-  public abstract Shape getClip();\n+/*************************************************************************/\n \n-  public abstract void setClip(Shape clip);\n+/**\n+  * Sets the clipping region to the rectangle determined by the specified\n+  * parameters.\n+  *\n+  * @param x The X coordinate of the upper left corner of the rect.\n+  * @param y The Y coordinate of the upper left corner of the rect.\n+  * @param width The width of the rect.\n+  * @param height The height of the rect.\n+  */\n+public abstract void\n+setClip(int x, int y, int width, int height);\n \n-  public abstract void copyArea(int x, int y, int width, int height,\n-\t\t\t\tint dx, int dy);\n+/*************************************************************************/\n \n-  public abstract void drawLine(int x1, int y1, int x2, int y2);\n-    \n-  public abstract void fillRect(int x, int y, int width, int height);\n-\n-  public void drawRect(int x, int y, int width, int height)\n-  {\n-    int x1 = x;\n-    int y1 = y;\n-    int x2 = x + width;\n-    int y2 = y + height;\n-    drawLine(x1, y1, x2, y1);\n-    drawLine(x2, y1, x2, y2);\n-    drawLine(x2, y2, x1, y2);\n-    drawLine(x1, y2, x1, y1);\n-  }\n-\n-  public abstract void clearRect(int x, int y, int width, int height);\n-  \n-  public abstract void drawRoundRect(int x, int y, int width, int height,\n-\t\t\t\t     int arcWidth, int arcHeight);\n-  \n-  public abstract void fillRoundRect(int x, int y, int width, int height,\n-\t\t\t\t     int arcWidth, int arcHeight);\n-  \n-  public void draw3DRect(int x, int y, int width, int height,\n-\t\t\t boolean raised)\n-  {\n-    Color color = getColor();\n-    Color tl = color.brighter();\n-    Color br = color.darker();\n+/**\n+  * Returns the current clipping region as a <code>Shape</code> object.\n+  *\n+  * @return The clipping region as a <code>Shape</code>.\n+  */\n+public abstract Shape\n+getClip();\n+\n+/*************************************************************************/\n+\n+/**\n+  * Sets the clipping region to the specified <code>Shape</code>.\n+  *\n+  * @param shape The new clipping region.\n+  */\n+public abstract void\n+setClip(Shape clip);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Copies the specified rectangle to the specified offset location.\n+  *\n+  * @param x The X coordinate of the upper left corner of the copy rect.\n+  * @param y The Y coordinate of the upper left corner of the copy rect.\n+  * @param width The width of the copy rect.\n+  * @param height The height of the copy rect.\n+  * @param dx The offset from the X value to start drawing.\n+  * @param dy The offset from the Y value to start drawing.\n+  */\n+public abstract void\n+copyArea(int x, int y, int width, int height, int dx, int dy);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws a line between the two specified points.\n+  *\n+  * @param x1 The X coordinate of the first point.\n+  * @param y1 The Y coordinate of the first point.\n+  * @param x2 The X coordinate of the second point.\n+  * @param y2 The Y coordinate of the second point.\n+  */\n+public abstract void\n+drawLine(int x1, int y1, int x2, int y2);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Fills the area bounded by the specified rectangle.\n+  *\n+  * @param x The X coordinate of the upper left corner of the fill rect.\n+  * @param y The Y coordinate of the upper left corner of the fill rect.\n+  * @param width The width of the fill rect.\n+  * @param height The height of the fill rect.\n+  */\n+public abstract void\n+fillRect(int x, int y, int width, int height); \n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws the outline of the specified rectangle.\n+  *\n+  * @param x The X coordinate of the upper left corner of the draw rect.\n+  * @param y The Y coordinate of the upper left corner of the draw rect.\n+  * @param width The width of the draw rect.\n+  * @param height The height of the draw rect.\n+  */\n+public void\n+drawRect(int x, int y, int width, int height)\n+{\n+  int x1 = x;\n+  int y1 = y;\n+  int x2 = x + width;\n+  int y2 = y + height;\n+  drawLine(x1, y1, x2, y1);\n+  drawLine(x2, y1, x2, y2);\n+  drawLine(x2, y2, x1, y2);\n+  drawLine(x1, y2, x1, y1);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Clears the specified rectangle.\n+  *\n+  * @param x The X coordinate of the upper left corner of the clear rect.\n+  * @param y The Y coordinate of the upper left corner of the clear rect.\n+  * @param width The width of the clear rect.\n+  * @param height The height of the clear rect.\n+  */\n+public abstract void\n+clearRect(int x, int y, int width, int height);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws the outline of the specified rectangle with rounded cornders.\n+  *\n+  * @param x The X coordinate of the upper left corner of the draw rect.\n+  * @param y The Y coordinate of the upper left corner of the draw rect.\n+  * @param width The width of the draw rect.\n+  * @param height The height of the draw rect.\n+  * @param arcWidth The width of the corner arcs.\n+  * @param arcHeigth The height of the corner arcs.\n+  */\n+public abstract void\n+drawRoundRect(int x, int y, int width, int height, int arcWidth, int arcHeight);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Fills the specified rectangle with rounded cornders.\n+  *\n+  * @param x The X coordinate of the upper left corner of the fill rect.\n+  * @param y The Y coordinate of the upper left corner of the fill rect.\n+  * @param width The width of the fill rect.\n+  * @param height The height of the fill rect.\n+  * @param arcWidth The width of the corner arcs.\n+  * @param arcHeigth The height of the corner arcs.\n+  */\n+public abstract void\n+fillRoundRect(int x, int y, int width, int height, int arcWidth, int arcHeight);\n+\n+/*************************************************************************/\n+\n+public void\n+draw3DRect(int x, int y, int width, int height, boolean raised)\n+{\n+  Color color = getColor();\n+  Color tl = color.brighter();\n+  Color br = color.darker();\n     \n-    if (!raised)\n-      {\n-\tColor tmp = tl;\n-\ttl = br;\n-\tbr = tmp;\n-      }\n+  if (!raised)\n+    {\n+      Color tmp = tl;\n+      tl = br;\n+      br = tmp;\n+    }\n     \n-    int x1 = x;\n-    int y1 = y;\n-    int x2 = x + width;\n-    int y2 = y + height;\n+  int x1 = x;\n+  int y1 = y;\n+  int x2 = x + width;\n+  int y2 = y + height;\n     \n-    setColor(tl);\n-    drawLine(x1, y1, x2, y1);\n-    drawLine(x1, y2, x1, y1);\n-    setColor(br);\n-    drawLine(x2, y1, x2, y2);\n-    drawLine(x2, y1, x1, y2);\n-    setColor(color);\n-  }\n-\n-  public void fill3DRect(int x, int y, int width, int height,\n-\t\t\t boolean raised)\n-  {\n-    fillRect(x, y, width, height);\n-    draw3DRect(x, y, width-1, height-1, raised);\n-  }\n-\n-  public abstract void drawOval(int x, int y, int width, int height);\n-  \n-  public abstract void fillOval(int x, int y, int width, int height);\n-  \n-  public abstract void drawArc(int x, int y, int width, int height,\n-\t\t\t       int startAngle, int arcAngle);\n-  \n-  public abstract void fillArc(int x, int y, int width, int height,\n-\t\t\t       int startAngle, int arcAngle);\n-  \n-  public abstract void drawPolyline(int[] xPoints, int[] yPoints,\n-\t\t\t\t    int nPoints);\n-  \n-  public abstract void drawPolygon(int[] xPoints, int[] yPoints,\n-\t\t\t\t   int nPoints);\n-  \n-  //public void drawPolygon(Polygon p);\n-    \n-  public abstract void fillPolygon(int[] xPoints, int[] yPoints,\n-\t\t\t\t   int nPoints);\n+  setColor(tl);\n+  drawLine(x1, y1, x2, y1);\n+  drawLine(x1, y2, x1, y1);\n+  setColor(br);\n+  drawLine(x2, y1, x2, y2);\n+  drawLine(x2, y1, x1, y2);\n+  setColor(color);\n+}\n+\n+/**\n+  * Fills the specified rectangle with a 3D effect\n+  *\n+  * @param x The X coordinate of the upper left corner of the fill rect.\n+  * @param y The Y coordinate of the upper left corner of the fill rect.\n+  * @param width The width of the fill rect.\n+  * @param height The height of the fill rect.\n+  * @param raised <code>true</code> if the rectangle appears raised,\n+  * <code>false</code> if it should appear etched.\n+  */\n+public void\n+fill3DRect(int x, int y, int width, int height, boolean raised)\n+{\n+  fillRect(x, y, width, height);\n+  draw3DRect(x, y, width-1, height-1, raised);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws the outline of the specified rectangle with a 3D effect\n+  *\n+  * @param x The X coordinate of the upper left corner of the draw rect.\n+  * @param y The Y coordinate of the upper left corner of the draw rect.\n+  * @param width The width of the draw rect.\n+  * @param height The height of the draw rect.\n+  * @param raised <code>true</code> if the rectangle appears raised,\n+  * <code>false</code> if it should appear etched.\n+  */\n+public void\n+drawRoundRect(int x, int y, int width, int height, boolean raised)\n+{\n+  // FIXME: ???\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws an oval that just fits within the specified rectangle.\n+  *\n+  * @param x The X coordinate of the upper left corner of the rect.\n+  * @param y The Y coordinate of the upper left corner of the rect.\n+  * @param width The width of the rect.\n+  * @param height The height of the rect.\n+  */\n+public abstract void\n+drawOval(int x, int y, int width, int height);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Fills an oval that just fits within the specified rectangle.\n+  *\n+  * @param x The X coordinate of the upper left corner of the rect.\n+  * @param y The Y coordinate of the upper left corner of the rect.\n+  * @param width The width of the rect.\n+  * @param height The height of the rect.\n+  */\n+public abstract void\n+fillOval(int x, int y, int width, int height);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws an arc using the specified bounding rectangle and the specified\n+  * angle parameter.  The arc is centered at the center of the rectangle.\n+  * The arc starts at the arcAngle position and extend for arcAngle\n+  * degrees.  The degree origin is at the 3 o'clock position.\n+  *\n+  * @param x The X coordinate of the upper left corner of the rect.\n+  * @param y The Y coordinate of the upper left corner of the rect.\n+  * @param width The width of the rect.\n+  * @param height The height of the rect.\n+  * @param arcStart The beginning angle of the arc.\n+  * @param arcAngle The extent of the arc.\n+  */\n+public abstract void\n+drawArc(int x, int y, int width, int height, int startAngle, int arcAngle);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Fills the arc define by the specified bounding rectangle and the specified\n+  * angle parameter.  The arc is centered at the center of the rectangle.\n+  * The arc starts at the arcAngle position and extend for arcAngle\n+  * degrees.  The degree origin is at the 3 o'clock position.\n+  *\n+  * @param x The X coordinate of the upper left corner of the rect.\n+  * @param y The Y coordinate of the upper left corner of the rect.\n+  * @param width The width of the rect.\n+  * @param height The height of the rect.\n+  * @param arcStart The beginning angle of the arc.\n+  * @param arcAngle The extent of the arc.\n+  */\n+public abstract void\n+fillArc(int x, int y, int width, int height, int startAngle, int arcAngle);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws a series of interconnected lines determined by the arrays\n+  * of corresponding x and y coordinates.\n+  *\n+  * @param xPoints The X coordinate array.\n+  * @param yPoints The Y coordinate array.\n+  * @param npoints The number of points to draw.\n+  */\n+public abstract void\n+drawPolyline(int xPoints[], int yPoints[], int npoints);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws a series of interconnected lines determined by the arrays\n+  * of corresponding x and y coordinates.  The figure is closed if necessary\n+  * by connecting the first and last points.\n+  *\n+  * @param xPoints The X coordinate array.\n+  * @param yPoints The Y coordinate array.\n+  * @param npoints The number of points to draw.\n+  */\n+public abstract void\n+drawPolygon(int xPoints[], int yPoints[], int npoints);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws the specified polygon.\n+  *\n+  * @param polygon The polygon to draw.\n+  */\n+public void\n+drawPolygon(Polygon polygon)\n+{\n+  drawPolygon(polygon.xpoints, polygon.ypoints, polygon.npoints);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Fills the polygon determined by the arrays\n+  * of corresponding x and y coordinates.\n+  *\n+  * @param xPoints The X coordinate array.\n+  * @param yPoints The Y coordinate array.\n+  * @param npoints The number of points to draw.\n+  */\n+public abstract void\n+fillPolygon(int xPoints[], int yPoints[], int npoints);\n+\n+/*************************************************************************/\n+\n+/**\n+  * Fills the specified polygon\n+  *\n+  * @param polygon The polygon to fill.\n+  */\n+public void\n+fillPolygon(Polygon polygon)\n+{\n+  fillPolygon(polygon.xpoints, polygon.ypoints, polygon.npoints);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws the specified string starting at the specified point.\n+  *\n+  * @param string The string to draw.\n+  * @param x The X coordinate of the point to draw at.\n+  * @param y The Y coordinate of the point to draw at.\n+  */\n+public abstract void\n+drawString(String string, int x, int y);\n+\n+/*************************************************************************/\n \n-  //public void fillPolygon(Polygon p);\n+/**\n+  * Draws the specified characters starting at the specified point.\n+  *\n+  * @param data The array of characters to draw.\n+  * @param offset The offset into the array to start drawing characters from.\n+  * @param length The number of characters to draw.\n+  * @param x The X coordinate of the point to draw at.\n+  * @param y The Y coordinate of the point to draw at.\n+  */\n+public void\n+drawChars(char data[], int offset, int length, int x, int y)\n+{\n+  drawString(new String(data, offset, length), x, y);\n+}\n \n-  public abstract void drawString(String str, int x, int y);\n+/*************************************************************************/\n+\n+/**\n+  * Draws the specified bytes as text starting at the specified point.\n+  *\n+  * @param data The array of bytes to draw.\n+  * @param offset The offset into the array to start drawing bytes from.\n+  * @param length The number of bytes to draw.\n+  * @param x The X coordinate of the point to draw at.\n+  * @param y The Y coordinate of the point to draw at.\n+  */\n+public void\n+drawChars(byte data[], int offset, int length, int x, int y)\n+{\n+  drawString(new String(data, offset, length), x, y);\n+}\n \n-  /*\n-  public abstract void drawString(AttributedCharacterIterator iterator,\n+/*\n+public abstract void drawString(AttributedCharacterIterator iterator,\n \t        \t\t  int x, int y)\n+*/\n+\n+public void\n+drawBytes(byte[] data, int offset, int length, int x, int y)\n+{\n+  String str = new String(data, offset, length);\n+  drawString(str, x, y);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * Draws all of the image that is available and returns.  If the image\n+  * is not completely loaded, <code>false</code> is returned and \n+  * the specified iamge observer is notified as more data becomes \n+  * available.\n+  *\n+  * @param image The image to draw.\n+  * @param x The X coordinate of the point to draw at.\n+  * @param y The Y coordinate of the point to draw at.\n+  * @param observer The image observer to notify as data becomes available.\n+  *\n+  * @return <code>true</code> if all the image data is available,\n+  * <code>false</code> otherwise.\n   */\n+public abstract boolean\n+drawImage(Image image, int x, int y, ImageObserver observer);\n+ \n+/*************************************************************************/\n \n-  public void drawChars(char[] data, int offset, int length,\n-\t\t\tint x, int y)\n-  {\n-    String str = new String(data, offset, length);\n-    drawString(str, x, y);\n-  }\n+/**\n+  * Draws all of the image that is available and returns.  The image\n+  * is scaled to fit in the specified rectangle.  If the image\n+  * is not completely loaded, <code>false</code> is returned and \n+  * the specified iamge observer is notified as more data becomes \n+  * available.\n+  *\n+  * @param image The image to draw.\n+  * @param x The X coordinate of the point to draw at.\n+  * @param y The Y coordinate of the point to draw at.\n+  * @param width The width of the rectangle to draw in.\n+  * @param height The height of the rectangle to draw in.\n+  * @param observer The image observer to notify as data becomes available.\n+  *\n+  * @return <code>true</code> if all the image data is available,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+drawImage(Image image, int x, int y, int width, int height, \n+          ImageObserver observer);\n+ \n+/*************************************************************************/\n \n-  public void drawBytes(byte[] data, int offset, int length,\n-\t\t\tint x, int y)\n-  {\n-    String str = new String(data, offset, length);\n-    drawString(str, x, y);\n-  }\n+/**\n+  * Draws all of the image that is available and returns.  If the image\n+  * is not completely loaded, <code>false</code> is returned and \n+  * the specified iamge observer is notified as more data becomes \n+  * available.\n+  *\n+  * @param image The image to draw.\n+  * @param x The X coordinate of the point to draw at.\n+  * @param y The Y coordinate of the point to draw at.\n+  * @param bgcolor The background color to use for the image.\n+  * @param observer The image observer to notify as data becomes available.\n+  *\n+  * @return <code>true</code> if all the image data is available,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+drawImage(Image image, int x, int y, Color bgcolor, ImageObserver observer);\n+ \n+/*************************************************************************/\n \n-  public abstract boolean drawImage(Image img, int x, int y,\n-\t\t\t\t    ImageObserver observer);\n+/**\n+  * Draws all of the image that is available and returns.  The image\n+  * is scaled to fit in the specified rectangle.  If the image\n+  * is not completely loaded, <code>false</code> is returned and \n+  * the specified iamge observer is notified as more data becomes \n+  * available.\n+  *\n+  * @param image The image to draw.\n+  * @param x The X coordinate of the point to draw at.\n+  * @param y The Y coordinate of the point to draw at.\n+  * @param width The width of the rectangle to draw in.\n+  * @param height The height of the rectangle to draw in.\n+  * @param bgcolor The background color to use for the image.\n+  * @param observer The image observer to notify as data becomes available.\n+  *\n+  * @return <code>true</code> if all the image data is available,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+drawImage(Image image, int x, int y, int width, int height, Color bgcolor,\n+          ImageObserver observer);\n+ \n+/*************************************************************************/\n \n-  public abstract boolean drawImage(Image img, int x, int y,\n-\t\t\t\t    int width, int height,\n-\t\t\t\t    ImageObserver observer);\n+/**\n+  * FIXME: Write Javadocs for this when you understand it.\n+  */\n+public abstract boolean\n+drawImage(Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1,\n+          int sx2, int sy2, ImageObserver observer);\n \n-  public abstract boolean drawImage(Image img, int x, int y, Color bgcolor,\n-\t\t\t\t    ImageObserver observer);\n-  \n-  public abstract boolean drawImage(Image img, int x, int y,\n-\t\t\t\t    int width, int height, Color bgcolor,\n-\t\t\t\t    ImageObserver observer);\n+/*************************************************************************/\n+\n+/**\n+  * FIXME: Write Javadocs for this when you understand it.\n+  */\n+public abstract boolean\n+drawImage(Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1,\n+          int sx2, int sy2, Color bgcolor, ImageObserver observer);\n+\n+/*************************************************************************/\n \n-  public abstract boolean drawImage(Image img,\n-\t\t\t\t    int dx1, int dy1, int dx2, int dy2,\n-\t\t\t\t    int sx1, int sy1, int sx2, int sy2,\n-\t\t\t\t    ImageObserver observer);\n+/**\n+  * Free any resources held by this graphics context immediately instead\n+  * of waiting for the object to be garbage collected and finalized.\n+  */\n+public abstract void\n+dispose();\n \n-  public abstract boolean drawImage(Image img,\n-\t\t\t\t    int dx1, int dy1, int dx2, int dy2,\n-\t\t\t\t    int sx1, int sy1, int sx2, int sy2,\n-\t\t\t\t    Color bgcolor, ImageObserver observer);\n+/*************************************************************************/\n+\n+/**\n+  * Frees the resources held by this graphics context when it is\n+  * garbage collected.\n+  */\n+public void\n+finalize()\n+{\n+  dispose();\n+}\n \n-  public abstract void dispose();\n+/*************************************************************************/\n+\n+/**\n+  * Returns a string representation of this object.\n+  *\n+  * @param A string representation of this object. \n+  */\n+public String\n+toString()\n+{\n+  return(super.toString());\n+}\n+\n+public boolean\n+hitClip(int x, int y, int width, int height)\n+{\n+  throw new UnsupportedOperationException(\"not implemented yet\");\n+}\n+\n+public Rectangle\n+getClipBounds(Rectangle r)\n+{\n+  Rectangle clipBounds = getClipBounds();\n   \n-  public void finalize()\n-  {\n-    dispose();\n-  }\n-\n-  public String toString()\n-  {\n-    return super.toString(); // FIXME\n-  }\n-    \n-  /** @deprecated */\n-  public Rectangle getClipRect()\n-  {\n-    return getClipBounds(null);\n-  }\n-\n-  public boolean hitClip(int x, int y, int width, int height)\n-  {\n-    throw new UnsupportedOperationException(\"not implemented yet\");\n-  }\n-\n-  public Rectangle getClipBounds(Rectangle r)\n-  {\n-    Rectangle clipBounds = getClipBounds();\n-\n-    if (r == null)\n-      return clipBounds;\n-\n-    r.x      = clipBounds.x;\n-    r.y      = clipBounds.y;\n-    r.width  = clipBounds.width;\n-    r.height = clipBounds.height;\n-    return r;\n-  }\n+  if (r == null)\n+    return clipBounds;\n+\n+  r.x      = clipBounds.x;\n+  r.y      = clipBounds.y;\n+  r.width  = clipBounds.width;\n+  r.height = clipBounds.height;\n+  return r;\n }\n+\n+} // class Graphics\n+"}, {"sha": "c1cbd6dc13f014e0b97cd9c9e8f7cb47fcbab355", "filename": "libjava/java/awt/Graphics2D.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphics2D.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt;\n "}, {"sha": "25e76c7381ef264a0192302e01354aa4654c2955", "filename": "libjava/java/awt/GraphicsConfiguration.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000, 2001  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n /* Status: Complete, but commented out until we have the required\n    GraphicsDevice. */"}, {"sha": "e9b2bccedf39099aa4c3750a81c6ebd494b6ac2c", "filename": "libjava/java/awt/Paint.java", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FPaint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FPaint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPaint.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,28 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt;\n "}, {"sha": "a78adc0828b3422721bf44bef40368381c1b919d", "filename": "libjava/java/awt/Rectangle.java", "status": "modified", "additions": 308, "deletions": 15, "changes": 323, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FRectangle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FRectangle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRectangle.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,28 @@\n-/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n \n package java.awt;\n \n@@ -13,14 +31,42 @@\n \n /* Status:  Mostly complete. Some of the Java2D stuff is commented out. */\n \n+/**\n+ * This class represents a rectangle and all the interesting things you\n+ * might want to do with it.  Note that the coordinate system uses\n+ * the origin (0,0) as the top left of the screen, with the x and y\n+ * values increasing as they move to the right and down respectively.\n+ *\n+ * @author Warren Levy  <warrenl@cygnus.com>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ */\n public class Rectangle extends Rectangle2D\n   implements Cloneable, Shape, Serializable\n {\n+  /**\n+  * The X coordinate of the top-left corner of the rectangle.\n+  */\n   public int x;\n+\n+  /**\n+  * The Y coordinate of the top-left corner of the rectangle;\n+  */\n   public int y;\n+\n+  /**\n+  * The width of the rectangle\n+  */\n   public int width;\n+\n+  /**\n+  * The height of the rectangle\n+  */\n   public int height;\n \n+  /**\n+   * Initializes a new instance of <code>Rectangle</code> with a top\n+   * left corner at (0,0) and a width and height of 0.\n+   */\n   public Rectangle()\n   {\n     x = 0;\n@@ -29,6 +75,12 @@ public Rectangle()\n     height = 0;\n   }\n \n+  /**\n+   * Initializes a new instance of <code>Rectangle</code> from the\n+   * coordinates of the specified rectangle.\n+   *\n+   * @param rect The rectangle to copy from.\n+   */\n   public Rectangle(Rectangle r)\n   {\n     x = r.x;\n@@ -37,6 +89,15 @@ public Rectangle(Rectangle r)\n     height = r.height;\n   }\n \n+  /**\n+   * Initializes a new instance of <code>Rectangle</code> from the specified\n+   * inputs.\n+   *\n+   * @param x The X coordinate of the top left corner of the rectangle.\n+   * @param y The Y coordinate of the top left corner of the rectangle.\n+   * @param width The width of the rectangle.\n+   * @param height The height of the rectangle.\n+   */\n   public Rectangle(int x, int y, int width, int height)\n   {\n     this.x = x;\n@@ -45,6 +106,14 @@ public Rectangle(int x, int y, int width, int height)\n     this.height = height;\n   }\n \n+  /**\n+   * Initializes a new instance of <code>Rectangle</code> with the specified\n+   * width and height.  The upper left corner of the rectangle will be at\n+   * the origin (0,0).\n+   *\n+   * @param width The width of the rectangle.\n+   * @param height the height of the rectange.\n+   */\n   public Rectangle(int width, int height)\n   {\n     x = 0;\n@@ -53,6 +122,14 @@ public Rectangle(int width, int height)\n     this.height = height;\n   }\n \n+  /**\n+   * Initializes a new instance of <code>Rectangle</code> with a top-left\n+   * corner represented by the specified point and the width and height\n+   * represented by the specified dimension.\n+   *\n+   * @param point The upper left corner of the rectangle.\n+   * @param dim The width and height of the rectangle.\n+   */\n   public Rectangle(Point p, Dimension d)\n   {\n     x = p.x;\n@@ -61,6 +138,12 @@ public Rectangle(Point p, Dimension d)\n     height = d.height;\n   }\n \n+  /**\n+   * Initializes a new instance of <code>Rectangle</code> with a top left\n+   * corner at the specified point and a width and height of zero.\n+   *\n+   * @param poin The upper left corner of the rectangle.\n+   */\n   public Rectangle(Point p)\n   {\n     x = p.x;\n@@ -69,6 +152,13 @@ public Rectangle(Point p)\n     height = 0;\n   }\n \n+  /**\n+   * Initializes a new instance of <code>Rectangle</code> with an\n+   * upper left corner at the origin (0,0) and a width and height represented\n+   * by the specified dimension.\n+   *\n+   * @param dim The width and height of the rectangle.\n+   */\n   public Rectangle(Dimension d)\n   {\n     x = 0;\n@@ -77,11 +167,24 @@ public Rectangle(Dimension d)\n     height = d.height;\n   }\n \n+  /**\n+   * Returns the bounding rectangle for this rectangle, which is simply\n+   * this rectange itself.\n+   *\n+   * @return This rectangle.\n+   */\n   public Rectangle getBounds ()\n   {\n     return (Rectangle) this.clone();\n   }\n \n+  /**\n+   * Modifies this rectangle so that it represents the smallest rectangle \n+   * that contains both the existing rectangle and the specified point.\n+   *\n+   * @param x The X coordinate of the point to add to this rectangle.\n+   * @param y The Y coordinate of the point to add to this rectangle.\n+   */\n   public void add(int newx, int newy)\n   {\n     int x = this.x > newx ? newx : this.x;\n@@ -92,11 +195,23 @@ public void add(int newx, int newy)\n     this.y = y;\n   }\n \n+  /**\n+   * Modifies this rectangle so that it represents the smallest rectangle \n+   * that contains both the existing rectangle and the specified point.\n+   *\n+   * @param point The point to add to this rectangle.\n+   */\n   public void add(Point pt)\n   {\n     add (pt.x, pt.y);\n   }\n \n+  /**\n+   * Modifies this rectangle so that it represents the smallest rectangle \n+   * that contains both the existing rectangle and the specified rectangle.\n+   *\n+   * @param rect The rectangle to add to this rectangle.\n+   */\n   public void add(Rectangle r)\n   {\n     int x = this.x > r.x ? r.x : this.x;\n@@ -109,6 +224,15 @@ public void add(Rectangle r)\n     this.y = y;\n   }\n \n+  /**\n+   * Tests whether or not the specified point is inside this rectangle.\n+   *\n+   * @param x The X coordinate of the point to test.\n+   * @param y The Y coordinate of the point to test.\n+   *\n+   * @return <code>true</code> if the point is inside the rectangle,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean contains(int x, int y)\n   {\n     return (x >= this.x && x <= this.x + this.width\n@@ -121,6 +245,14 @@ public boolean contains(int x, int y, int w, int h)\n             && y >= this.y && y + h <= this.y + this.height);\n   }\n \n+  /**\n+   * Tests whether or not the specified point is inside this rectangle.\n+   *\n+   * @param point The point to test.\n+   *\n+   * @return <code>true</code> if the point is inside the rectangle,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean contains(Point p)\n   {\n     return contains(p.x, p.y);\n@@ -131,6 +263,22 @@ public boolean contains(Rectangle r)\n     return contains(r.x, r.y, r.width, r.height);\n   }\n \n+  /**\n+   * Tests this rectangle for equality against the specified object.  This\n+   * will be true if an only if the specified object:\n+   * <p>\n+   * <ul>\n+   * <li>Is not <code>null</code>.\n+   * <li>Is an instance of <code>Rectangle</code>.\n+   * <li>Has X and Y coordinates identical to this rectangle.\n+   * <li>Has a width and height identical to this rectangle.\n+   * </ul>\n+   *\n+   * @param obj The object to test against for equality.\n+   *\n+   * @return <code>true</code> if the specified object is equal to this one,\n+   * <code>false</code> otherwise.\n+   */\n   public boolean equals(Object obj)\n   {\n     if (obj instanceof Rectangle)\n@@ -149,11 +297,22 @@ public double getHeight()\n     return (double) this.height;     \n   }\n \n+  /**\n+   * Returns the location of this rectangle, which is the coordinates of\n+   * its upper left corner.\n+   *\n+   * @return The point where this rectangle is located.\n+   */\n   public Point getLocation()\n   {\n     return new Point(x,y);\n   }\n \n+  /**\n+   * Returns the size of this rectangle.\n+   *\n+   * @return The size of this rectangle.\n+   */\n   public Dimension getSize()\n   {\n     return new Dimension(width, height);\n@@ -174,21 +333,49 @@ public double getY()\n     return (double) y;\n   }\n \n+  /**\n+   * Expands the rectangle by the specified amount.  The horizontal\n+   * and vertical expansion values are applied both to the X,Y coordinate\n+   * of this rectangle, and its width and height.  Thus the width and\n+   * height will increase by 2h and 2v accordingly.\n+   *\n+   * @param h The horizontal expansion value.\n+   * @param v The vertical expansion value.\n+   */\n   public void grow(int h, int v)\n   {\n     width += h;\n     height += v;\n   }\n \n-  /** @deprecated Use contains() instead. */\n+  /**\n+   * Tests whether or not the specified point is inside this rectangle.\n+   *\n+   * @param x The X coordinate of the point to test.\n+   * @param y The Y coordinate of the point to test.\n+   *\n+   * @return <code>true</code> if the point is inside the rectangle,\n+   * <code>false</code> otherwise.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>contains(int, int)</code>.\n+   */\n   public boolean inside(int x, int y)\n   {\n     return contains(x, y);\n   }\n \n-  /** @specnote If there is no intersection, an empty rectangle at 0,0 \n-    *           is returned.\n-    */\n+  /**\n+   * Determines the rectange which is formed by the intersection of this\n+   * rectangle with the specified rectangle.\n+   *\n+   * @param rect The rectange to calculate the intersection with.\n+   *\n+   * @return The rectangle bounding the intersection.\n+   *\n+   * @specnote If there is no intersection, an empty rectangle at 0,0 \n+   *           is returned.\n+   */\n   public Rectangle intersection(Rectangle r)\n   {\n     int newx = x < r.x ? r.x : x;\n@@ -203,9 +390,17 @@ public Rectangle intersection(Rectangle r)\n       return new Rectangle(0, 0, 0, 0);\n   }\n \n-  /** @specnote If the intersection is at an edge or corner only (an empty\n-    *           intersection with a non-zero location), false is returned.\n-    */\n+  /**\n+   * Tests whether or not the specified rectangle intersects this rectangle.\n+   *\n+   * @param rect The rectangle to test against.\n+   *\n+   * @return <code>true</code> if the specified rectangle intersects this\n+   * one, <code>false</code> otherwise.\n+   *\n+   * @specnote If the intersection is at an edge or corner only (an empty\n+   *           intersection with a non-zero location), false is returned.\n+   */\n   public boolean intersects(Rectangle r)\n   {\n     int neww = (x + width < r.x + r.width ?\n@@ -215,12 +410,29 @@ public boolean intersects(Rectangle r)\n     return (neww > 0 && newh > 0);\n   }\n \n+  /**\n+   * Tests whether or not this rectangle is empty.  An empty rectangle\n+   * has a width or height of zero.\n+   *\n+   * @return <code>true</code> if the rectangle is empty, <code>false</code>\n+   * otherwise.\n+   */\n   public boolean isEmpty()\n   {\n     return !(width > 0 && height > 0);\n   }\n \n-  /** @deprecated Use setLocation() instead. */\n+  /**\n+   * Moves the location of this rectangle by setting its upper left\n+   * corner to the specified coordinates.\n+   * // FIXME: Is this true?\n+   *\n+   * @param x The new X coordinate for this rectangle.\n+   * @param y The new Y coordinate for this rectangle.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>setLocation(int, int)</code>.\n+   */\n   public void move(int x, int y)\n   {\n     setLocation(x, y);\n@@ -232,18 +444,44 @@ public int outcode(double x, double y)\n     return 0;\n   }\n \n-  /** @deprecated Use setBounds() instead. */\n+  /**\n+   * Updates this rectangle to have the specified dimensions.\n+   *\n+   * @param x The new X coordinate of the upper left hand corner.\n+   * @param y The new Y coordinate of the upper left hand corner.\n+   * @param width The new width of this rectangle.\n+   * @param height The new height of this rectangle.\n+   *\n+   * @deprecated This method is deprecated in favor of \n+   * <code>setBounds(int, int, int, int)</code>.\n+   */\n   public void reshape(int x, int y, int width, int height)\n   {\n     setBounds(x, y, width, height);\n   }\n \n-  /** @deprecated Use setSize() instead. */\n+  /**\n+   * Sets the size of this rectangle based on the specified dimensions.\n+   *\n+   * @param width The new width of the rectangle.\n+   * @param height The new height of the rectangle.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   * <code>setSize(int, int)</code>.\n+   */\n   public void resize(int width, int height)\n   {\n     setSize(width, height);\n   }\n \n+  /**\n+   * Updates this rectangle to have the specified dimensions.\n+   *\n+   * @param x The new X coordinate of the upper left hand corner.\n+   * @param y The new Y coordinate of the upper left hand corner.\n+   * @param width The new width of this rectangle.\n+   * @param height The new height of this rectangle.\n+   */\n   public void setBounds(int x, int y, int width, int height)\n   {\n     this.x = x;\n@@ -252,6 +490,12 @@ public void setBounds(int x, int y, int width, int height)\n     this.height = height;\n   }\n \n+  /**\n+   * Updates this rectangle to match the dimensions of the specified \n+   * rectangle.\n+   *\n+   * @param rect The rectangle to update from.\n+   */\n   public void setBounds(Rectangle r)\n   {\n     this.x = r.x;\n@@ -260,12 +504,27 @@ public void setBounds(Rectangle r)\n     this.height = r.height;     \n   }\n \n+  /**\n+   * Moves the location of this rectangle by setting its upper left\n+   * corner to the specified coordinates.\n+   * // FIXME: Is this true?\n+   *\n+   * @param x The new X coordinate for this rectangle.\n+   * @param y The new Y coordinate for this rectangle.\n+   */\n   public void setLocation(int x, int y)\n   {\n     this.x = x;\n     this.y = y;\n   }\n \n+  /**\n+   * Moves the location of this rectangle by setting its upper left\n+   * corner to the specified point.\n+   * // FIXME: Is this true?\n+   *\n+   * @param point The point to move the rectange to.\n+   */\n   public void setLocation(Point p)\n   {\n     this.x = p.x;\n@@ -280,12 +539,23 @@ public void setRect(double x, double y, double width, double height)\n     this.height = (int) height;\n   }\n \n+  /**\n+   * Sets the size of this rectangle based on the specified dimensions.\n+   *\n+   * @param dim The new dimensions of the rectangle.\n+   */\n   public void setSize(Dimension d)\n   {\n     this.width = d.width;\n     this.height = d.height;\n   }\n \n+  /**\n+   * Sets the size of this rectangle based on the specified dimensions.\n+   *\n+   * @param width The new width of the rectangle.\n+   * @param height The new height of the rectangle.\n+   */\n   public void setSize(int width, int height)\n   {\n     this.width = width;\n@@ -298,6 +568,14 @@ public void translate(int x, int y)\n     y += y;\n   }\n \n+  /**\n+   * Returns the smallest rectangle that contains both this rectangle\n+   * and the specified rectangle.\n+   *\n+   * @param rect The rectangle to compute the union with.\n+   *\n+   * @return The smallest rectangle containing both rectangles.\n+   */\n   public Rectangle union(Rectangle r)\n   {\n     int newx = x > r.x ? r.x : x;\n@@ -333,9 +611,24 @@ public Rectangle2D getBounds2D()\n     return new Rectangle (x, y, width, height);\n   }\n \n+  /**\n+   * Returns a string representation of this rectangle.\n+   *\n+   * @return A string representation of this rectangle.\n+   */\n   public String toString()\n   {\n     return getClass().getName() + \"[x=\" + x + \",y=\" + y + \",width=\" + width + \n            \",height=\" + height + \"]\";\n   }\n+\n+  /**\n+   * Returns a hash value for this object.\n+   *\n+   * @return A hash value for this object.\n+   */\n+  public int hashCode()\n+  {\n+    return x * y * width * height * 37;\n+  }\n }"}, {"sha": "9a4e928cf446d8d32b1863658232f86d3192e14b", "filename": "libjava/java/awt/RenderingHints.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FRenderingHints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FRenderingHints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRenderingHints.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000, 2001  Free Software Foundation\n+/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt;\n "}, {"sha": "85a38f2a5cdaaa8c429a4911333b9888ff6cdb12", "filename": "libjava/java/awt/Toolkit.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FToolkit.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -14,7 +14,7 @@\n import java.awt.image.*;\n import java.awt.datatransfer.Clipboard;\n import java.util.Hashtable;\n-import gnu.gcj.awt.GLightweightPeer;\n+import gnu.java.awt.GLightweightPeer;\n \n /* A very incomplete placeholder. */\n "}, {"sha": "fc1caa699959507b8451395660aac5cf48891fb8", "filename": "libjava/java/awt/Transparency.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FTransparency.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FTransparency.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTransparency.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt;\n "}, {"sha": "1dba71d3a003304679d97bbba4e6d8ac90886618", "filename": "libjava/java/awt/Window.java", "status": "modified", "additions": 133, "deletions": 34, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,29 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt;\n import java.awt.event.WindowEvent;\n@@ -15,8 +34,12 @@\n import java.util.Locale;\n import java.util.ResourceBundle;\n \n-/* Status: partially implemented. */\n-\n+/**\n+ * This class represents a top-level window with no decorations.\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Warren Levy  <warrenl@cygnus.com>\n+ */\n public class Window extends Container\n {\n   // Serialized fields, from Sun's serialization spec.\n@@ -46,6 +69,12 @@ public class Window extends Container\n     graphicsConfiguration = gc;\n   }\n     \n+  /**\n+   * Initializes a new instance of <code>Window</code> with the specified\n+   * parent.  The window will initially be invisible.\n+   *\n+   * @param parent The owning <code>Frame</code> of this window.\n+   */\n   public Window(Frame owner)\n   {\n     this((Window) owner);\n@@ -99,15 +128,22 @@ protected void finalize() throws Throwable\n     super.finalize();\n   }\n \n+  /**\n+   * Creates the native peer for this window.\n+   */\n   public void addNotify()\n   {\n     if (peer == null)\n       peer = getToolkit ().createWindow (this);\n     super.addNotify ();\n   }\n \n-  /** @specnote pack() doesn't appear to be called internally by show(), so\n-                we duplicate some of the functionality. */\n+  /**\n+   * Relays out this window's child components at their preferred size.\n+   *\n+   * @specnote pack() doesn't appear to be called internally by show(), so\n+   *             we duplicate some of the functionality.\n+   */\n   public void pack()\n   {\n     if (parent != null\n@@ -121,31 +157,16 @@ public void pack()\n     validate();\n   }\n \n+  /**\n+   * Makes this window visible and brings it to the front.\n+   */\n   public void show ()\n   {\n     if (peer == null)\n       addNotify();\n-    validate ();\n-\n-    if (isVisible())\n-      {\n-\tthis.toFront();\n-\treturn;\n-      }\n-  \n-    if (parent != null\n-        && !parent.isDisplayable())\n-      parent.addNotify();\n-    if (peer == null)\n-      addNotify ();    \n \n-    validate ();\n-    \n-    super.show ();\n-\n-    // FIXME: Is this call necessary or do we assume the peer takes care of \n-    // it?\n-    // this.toFront();\n+    super.show();\n+    toFront();\n   }\n \n   public void hide()\n@@ -154,6 +175,9 @@ public void hide()\n     super.hide();\n   }\n \n+  /**\n+   * Called to free any resource associated with this window.\n+   */\n   public void dispose()\n   {\n     hide();\n@@ -167,6 +191,10 @@ public void dispose()\n     this.removeNotify();\n   }\n \n+  /**\n+   * Sends this window to the back so that all other windows display in\n+   * front of it.\n+   */\n   public void toBack ()\n   {\n     if (peer != null)\n@@ -176,6 +204,10 @@ public void toBack ()\n       }\n   }\n \n+  /**\n+   * Brings this window to the front so that it displays in front of\n+   * any other windows.\n+   */\n   public void toFront ()\n   {\n     if (peer != null)\n@@ -185,13 +217,25 @@ public void toFront ()\n       }\n   }\n \n-  /** @specnote Unlike Component.getToolkit, this implementation always \n-                returns the value of Toolkit.getDefaultToolkit(). */\n+  /**\n+   * Returns the toolkit used to create this window.\n+   *\n+   * @return The toolkit used to create this window.\n+   *\n+   * @specnote Unlike Component.getToolkit, this implementation always \n+   *           returns the value of Toolkit.getDefaultToolkit().\n+   */\n   public Toolkit getToolkit()\n   {\n     return Toolkit.getDefaultToolkit ();    \n   }\n \n+  /**\n+   * Returns the warning string that will be displayed if this window is\n+   * popped up by an unsecure applet or application.\n+   *\n+   * @return The unsecure window warning message.\n+   */\n   public final String getWarningString()\n   {\n     boolean secure = true;\n@@ -210,6 +254,11 @@ public final String getWarningString()\n     return null;\n   }\n \n+  /**\n+   * Returns the locale that this window is configured for.\n+   *\n+   * @return The locale this window is configured for.\n+   */\n   public Locale getLocale ()\n   {\n     return locale == null ? Locale.getDefault () : locale;\n@@ -223,9 +272,13 @@ public InputContext getInputContext()\n   }\n   */\n \n+  /**\n+   * Sets the cursor for this window to the specifiec cursor.\n+   *\n+   * @param cursor The new cursor for this window.\n+   */\n   public void setCursor(Cursor cursor)\n   {\n-    // FIXME: why different from Component.setCursor() ?\n     super.setCursor(cursor);\n   }\n \n@@ -242,11 +295,23 @@ public Window[] getOwnedWindows()\n     return null;\n   }\n \n+  /**\n+   * Adds the specified listener to the list of <code>WindowListeners</code>\n+   * that will receive events for this window.\n+   *\n+   * @param listener The <code>WindowListener</code> to add.\n+   */\n   public synchronized void addWindowListener (WindowListener listener)\n   {\n     windowListener = AWTEventMulticaster.add (windowListener, listener);\n   }\n \n+  /**\n+   * Removes the specified listener from the list of\n+   * <code>WindowListeners</code> that will receive events for this window.\n+   *\n+   * @param listener The <code>WindowListener</code> to remove.\n+   */\n   public synchronized void removeWindowListener (WindowListener listener)\n   {\n     windowListener = AWTEventMulticaster.remove (windowListener, listener);\n@@ -272,6 +337,14 @@ void dispatchEventImpl(AWTEvent e)\n       super.dispatchEventImpl(e);\n   }\n \n+  /**\n+   * Processes the specified event for this window.  If the event is an\n+   * instance of <code>WindowEvent</code>, then\n+   * <code>processWindowEvent()</code> is called to process the event,\n+   * otherwise the superclass version of this method is invoked.\n+   *\n+   * @param event The event to process.\n+   */\n   protected void processEvent (AWTEvent evt)\n   {\n     if (evt instanceof WindowEvent)\n@@ -280,6 +353,14 @@ protected void processEvent (AWTEvent evt)\n       super.processEvent (evt);\n   }\n \n+  /**\n+   * Dispatches this event to any listeners that are listening for\n+   * <code>WindowEvents</code> on this window.  This method only gets\n+   * invoked if it is enabled via <code>enableEvents()</code> or if\n+   * a listener has been added.\n+   *\n+   * @param event The event to process.\n+   */\n   protected void processWindowEvent (WindowEvent evt)\n   {\n     if (windowListener != null)\n@@ -311,22 +392,40 @@ protected void processWindowEvent (WindowEvent evt)\n       }\n   }\n \n+  /**\n+   * Returns the child window that has focus if this window is active.\n+   * This method returns <code>null</code> if this window is not active\n+   * or no children have focus.\n+   *\n+   * @return The component that has focus, or <code>null</code> if no\n+   * component has focus.\n+   */\n   public Component getFocusOwner()\n   {\n     // FIXME\n     return null;\n   }\n \n+  /**\n+   * Post a Java 1.0 event to the event queue.\n+   *\n+   * @param event The event to post.\n+   */\n   public boolean postEvent(Event e)\n   {\n     // FIXME\n     return false;\n   }\n \n+  /**\n+   * Tests whether or not this window is visible on the screen.\n+   *\n+   * @return <code>true</code> if this window is visible, <code>false</code>\n+   * otherwise.\n+   */\n   public boolean isShowing()\n   {\n-    // FIXME: Also check if window is within the boundary of the screen?\n-    return isVisible();\n+    return super.isShowing();\n   }\n \n   /** @since 1.2 */"}, {"sha": "6f84b54f3508c627b011e5e7aea47a592460efea", "filename": "libjava/java/awt/color/ColorSpace.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.color;\n "}, {"sha": "6d537423941739b6a710dc569e1ccdb1ab6479a1", "filename": "libjava/java/awt/color/ICC_ColorSpace.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.color;\n "}, {"sha": "06bad3387e728b3429b574eabc1b3d51800ac9b7", "filename": "libjava/java/awt/color/ICC_Profile.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.color;\n "}, {"sha": "bb804723d6478ac80bb75865f8bdbcc4df3265c7", "filename": "libjava/java/awt/event/HierarchyBoundsAdapter.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsAdapter.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.event;\n "}, {"sha": "94d9e77087f235ba11a9c8ce80141bdd5da6c9f8", "filename": "libjava/java/awt/event/HierarchyBoundsListener.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyBoundsListener.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.event;\n "}, {"sha": "feedc1f48872dff775b48d2ef702bf1fad3c56c1", "filename": "libjava/java/awt/event/HierarchyEvent.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.event;\n import java.awt.*;"}, {"sha": "3477957e2395a661e57cc46e99020b43c15fad9a", "filename": "libjava/java/awt/event/HierarchyListener.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FHierarchyListener.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.event;\n "}, {"sha": "5af7277d05f8c96af65f1f110276e8c4ff689e73", "filename": "libjava/java/awt/geom/AffineTransform.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000, 2001  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n import java.awt.*;"}, {"sha": "521a0732fd4896a74afa2a3530d705f9203c19ce", "filename": "libjava/java/awt/geom/Dimension2D.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n "}, {"sha": "8c72aeb15cc8964a37d2de740474675d6eaddd2d", "filename": "libjava/java/awt/geom/Ellipse2D.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FEllipse2D.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n "}, {"sha": "66a7bcdf50ad10f9c2a380cb2fff3437f2438daa", "filename": "libjava/java/awt/geom/IllegalPathStateException.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FIllegalPathStateException.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n "}, {"sha": "9f530e5d7c0424438c4a2ccc1f1112eea2f39b8e", "filename": "libjava/java/awt/geom/Line2D.java", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FLine2D.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000, 2001  Free Software Foundation\n+/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n \n@@ -24,7 +41,15 @@ protected Line2D ()\n \n   public Object clone ()\n   {\n-    return super.clone ();\n+    try\n+      {\n+\treturn super.clone ();\n+      }\n+    catch (CloneNotSupportedException _)\n+      {\n+\t// Can't happen.\n+\treturn null;\n+      }\n   }\n \n   public boolean contains (double x, double y)"}, {"sha": "5d441f2cb2ef404c5618e0adc8e24053ed28b6c5", "filename": "libjava/java/awt/geom/NoninvertibleTransformException.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FNoninvertibleTransformException.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n "}, {"sha": "33baf566ddf2e8653a0ab14706c7022d44567638", "filename": "libjava/java/awt/geom/PathIterator.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPathIterator.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libjava.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n "}, {"sha": "12fd761b0acce0ef98cf85a1e4d1a7220989f66b", "filename": "libjava/java/awt/geom/Point2D.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n "}, {"sha": "2174abdcb0c38aa554c647479a65f479c2276e98", "filename": "libjava/java/awt/geom/Rectangle2D.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000, 2001  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n "}, {"sha": "245d772b9bd2a8c023b94ce901f8d4636aea9fb0", "filename": "libjava/java/awt/geom/RectangularShape.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangularShape.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n import java.awt.*;"}, {"sha": "1b5f374d5c1f7222d7b66a685107cea88ea9749c", "filename": "libjava/java/awt/geom/RoundRectangle2D.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRoundRectangle2D.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libjava.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.geom;\n "}, {"sha": "114d709096133194a5e12952fdd8e0653b875106", "filename": "libjava/java/awt/image/BufferedImage.java", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FBufferedImage.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,18 +1,36 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt.image;\n \n import java.awt.*;\n import java.awt.color.*;\n import java.util.*;\n \n-import gnu.gcj.awt.ComponentDataBlitOp;\n+import gnu.java.awt.ComponentDataBlitOp;\n \n /**\n  * A buffered image always starts at coordinates (0, 0)."}, {"sha": "e69f5f91ee9f8f41295efe0cda6c6da39d816373", "filename": "libjava/java/awt/image/ColorModel.java", "status": "modified", "additions": 40, "deletions": 8, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,17 +1,35 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt.image;\n \n import java.awt.Point;\n import java.awt.Transparency;\n import java.awt.color.ColorSpace;\n-import gnu.gcj.awt.Buffers;\n+import gnu.java.awt.Buffers;\n \n /**\n  * A color model operates with colors in several formats:\n@@ -47,8 +65,8 @@\n  * </ul>\n  *\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author C. Brian Jones (cbj@gnu.org) \n  */\n-\n public abstract class ColorModel implements Transparency\n {\n   protected int pixel_bits;\n@@ -74,6 +92,12 @@ static byte[] nArray(byte value, int times)\n     return array;\n   } \n \n+  /**\n+   * Constructs the default color model.  The default color model \n+   * can be obtained by calling <code>getRGBdefault</code> of this\n+   * class.\n+   * @param b the number of bits wide used for bit size of pixel values\n+   */\n   public ColorModel(int bits)\n   {\n     this(bits * 4, // total bits, sRGB, four channels\n@@ -98,6 +122,10 @@ protected ColorModel(int pixel_bits, int[] bits, ColorSpace cspace,\n     this.transferType = transferType;\n   }\n \n+  /**\n+   * Returns the default color model which in Sun's case is an instance\n+   * of <code>DirectColorModel</code>.\n+   */\n   public static ColorModel getRGBdefault()\n   {\n     return new DirectColorModel(8, 0xff0000, 0xff00, 0xff, 0xff000000);\n@@ -113,6 +141,9 @@ public final boolean isAlphaPremultiplied()\n     return isAlphaPremultiplied;\n   }\n \n+  /**\n+   * Get get number of bits wide used for the bit size of pixel values\n+   */\n   public int getPixelSize()\n   {\n     return pixel_bits;\n@@ -525,7 +556,8 @@ public boolean isCompatibleSampleModel(SampleModel sm)\n     return sm.getTransferType() == transferType;\n   }\n \n-  public void finalize() {\n+  public void finalize()\n+  {\n   }\n \n   /**"}, {"sha": "75a14903c707380d7ed67c9e7433fa580654d9cd", "filename": "libjava/java/awt/image/ComponentColorModel.java", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FComponentColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FComponentColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FComponentColorModel.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,16 +1,33 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n \n import java.awt.color.*;\n import java.awt.Point;\n-import gnu.gcj.awt.Buffers;\n+import gnu.java.awt.Buffers;\n \n public class ComponentColorModel extends ColorModel\n {"}, {"sha": "b3a9962e48d9d282e8ee13a8085a4aca4ef56600", "filename": "libjava/java/awt/image/ComponentSampleModel.java", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FComponentSampleModel.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,14 +1,31 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n \n-import gnu.gcj.awt.Buffers;\n+import gnu.java.awt.Buffers;\n \n /* FIXME: This class does not yet support data type TYPE_SHORT */\n "}, {"sha": "f85539e2fe3a4c1bb737bed58d44fed7281cb51d", "filename": "libjava/java/awt/image/DataBuffer.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBuffer.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n "}, {"sha": "2d22482e81e1e623ac6ef776685bda154cf078b2", "filename": "libjava/java/awt/image/DataBufferByte.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferByte.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n "}, {"sha": "92f30572c94e1c8a799ad27e9ef14b8fa4e31ca0", "filename": "libjava/java/awt/image/DataBufferInt.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferInt.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n "}, {"sha": "7810668ab43cf203ef3e8864a3ce33663cdae0b7", "filename": "libjava/java/awt/image/DataBufferUShort.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDataBufferUShort.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n "}, {"sha": "5931e25a528002cf555ba7839571f9d494987d9d", "filename": "libjava/java/awt/image/DirectColorModel.java", "status": "modified", "additions": 80, "deletions": 11, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,23 +1,56 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n \n package java.awt.image;\n \n import java.awt.Point;\n import java.awt.Transparency;\n import java.awt.color.ColorSpace;\n-import gnu.gcj.awt.Buffers;\n+import gnu.java.awt.Buffers;\n \n /**\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @author C. Brian Jones (cbj@gnu.org)\n+ * @author Mark Benvenuto (mcb54@columbia.edu)\n  */\n public class DirectColorModel extends PackedColorModel\n {\n+  /**\n+   * For the color model created with this constructor the pixels\n+   * will have fully opaque alpha components with a value of 255.\n+   * Each mask should describe a fully contiguous set of bits in the\n+   * most likely order of alpha, red, green, blue from the most significant\n+   * byte to the least significant byte.\n+   * \n+   * @param bits the number of bits wide used for bit size of pixel values\n+   * @param rmask the bits describing the red component of a pixel\n+   * @param gmask the bits describing the green component of a pixel\n+   * @param bmask the bits describing the blue component of a pixel \n+   * @param amask the bits describing the alpha component of a pixel \n+   */\n   public DirectColorModel(int pixelBits, int rmask, int gmask, int bmask)\n   {\n     this(ColorSpace.getInstance(ColorSpace.CS_sRGB), pixelBits,\n@@ -27,6 +60,18 @@ public DirectColorModel(int pixelBits, int rmask, int gmask, int bmask)\n \t );\n   }\n \n+  /**\n+   * For the color model created with this constructor the pixels\n+   * will have fully opaque alpha components with a value of 255.\n+   * Each mask should describe a fully contiguous set of bits in the\n+   * most likely order of red, green, blue from the most significant\n+   * byte to the least significant byte.\n+   * \n+   * @param bits the number of bits wide used for bit size of pixel values\n+   * @param rmask the bits describing the red component of a pixel\n+   * @param gmask the bits describing the green component of a pixel\n+   * @param bmask the bits describing the blue component of a pixel \n+   */\n   public DirectColorModel(int pixelBits,\n \t\t\t  int rmask, int gmask, int bmask, int amask)\n   {\n@@ -68,24 +113,41 @@ public final int getAlphaMask()\n     return hasAlpha() ? getMask(3) : 0;\n   }\n \n+  /**\n+   * Get the red component of the given pixel.\n+   * <br>\n+   */\n   public final int getRed(int pixel)\n   {\n     return extractAndNormalizeSample(pixel, 0);\n   }\n \n+  /**\n+   * Get the green component of the given pixel.\n+   * <br>\n+   */\n   public final int getGreen(int pixel)\n   {\n     return extractAndNormalizeSample(pixel, 1);\n   }\n   \n+  /**\n+   * Get the blue component of the given pixel.\n+   * <br>\n+   */\n   public final int getBlue(int pixel)\n   {\n     return extractAndNormalizeSample(pixel, 2);\n   }\n \n+  /**\n+   * Get the alpha component of the given pixel.\n+   * <br>\n+   */\n   public final int getAlpha(int pixel)\n   {\n-    if (!hasAlpha()) return 0;\n+    if (!hasAlpha())\n+      return 0;\n     return extractAndScaleSample(pixel, 3);\n   }\n \n@@ -106,15 +168,22 @@ private final int extractAndScaleSample(int pixel, int component)\n       (field << to8BitShift) :\n       (field >>> (-to8BitShift));\n   }\n-    \n \n-  /* FIXME: The Sun docs show that this method is overridden, but I don't\n-     see any way to improve on the superclass implementation. */\n+  /**\n+   * Get the RGB color value of the given pixel using the default\n+   * RGB color model. \n+   * <br>\n+   *\n+   * @param pixel a pixel value\n+   */\n   public final int getRGB(int pixel) \n   {\n+    /* FIXME: The Sun docs show that this method is overridden, but I\n+       don't see any way to improve on the superclass\n+       implementation. */\n     return super.getRGB(pixel);\n   }\n-  \n+\n   public int getRed(Object inData)\n   {\n     return getRed(getPixelFromArray(inData));"}, {"sha": "34b9f7298f5fb7824d2ad8c16ef645e91c62de61", "filename": "libjava/java/awt/image/IndexColorModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FIndexColorModel.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -10,7 +10,7 @@\n \n import java.awt.Transparency;\n import java.awt.color.ColorSpace;\n-import gnu.gcj.awt.Buffers;\n+import gnu.java.awt.Buffers;\n \n /**\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>"}, {"sha": "d885e7ec4f7db7e102c009fa1f5fc0ba0753b1c5", "filename": "libjava/java/awt/image/PackedColorModel.java", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FPackedColorModel.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,16 +1,33 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n \n import java.awt.Point;\n import java.awt.color.ColorSpace;\n-import gnu.gcj.awt.BitMaskExtent;\n+import gnu.java.awt.BitMaskExtent;\n \n /**\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>"}, {"sha": "0ebc2bf0ac75fb9a6d4f79f4d0c7d0a3c3458370", "filename": "libjava/java/awt/image/Raster.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRaster.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n "}, {"sha": "7387f6fd7abd1bf4e0e3050d1f3a399d07f49fcb", "filename": "libjava/java/awt/image/RasterOp.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FRasterOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FRasterOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FRasterOp.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n "}, {"sha": "c965086d111ae56d1138dc85c2b85e37fbf0e188", "filename": "libjava/java/awt/image/SampleModel.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000, 2001  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2001, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n "}, {"sha": "bdf8426d43b4746fbbe51405a9a5918e61b24df7", "filename": "libjava/java/awt/image/SinglePixelPackedSampleModel.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FSinglePixelPackedSampleModel.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,15 +1,32 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n \n-   This file is part of libgcj.\n+This file is part of GNU Classpath.\n \n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n \n-import gnu.gcj.awt.BitMaskExtent;\n-import gnu.gcj.awt.Buffers;\n+import gnu.java.awt.BitMaskExtent;\n+import gnu.java.awt.Buffers;\n \n /**\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>"}, {"sha": "cfbaa094df8b2acb3184087a69d507b858245f43", "filename": "libjava/java/awt/image/WritableRaster.java", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FWritableRaster.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592/libjava%2Fjava%2Fawt%2Fimage%2FWritableRaster.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FWritableRaster.java?ref=3bd483f2a189ed92cefd9ad0cfa5f15fabdf1592", "patch": "@@ -1,10 +1,27 @@\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n+/* Copyright (C) 2000, 2002  Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+As a special exception, if you link this library with other files to\n+produce an executable, this library does not by itself cause the\n+resulting executable to be covered by the GNU General Public License.\n+This exception does not however invalidate any other reasons why the\n+executable file might be covered by the GNU General Public License. */\n \n package java.awt.image;\n "}]}