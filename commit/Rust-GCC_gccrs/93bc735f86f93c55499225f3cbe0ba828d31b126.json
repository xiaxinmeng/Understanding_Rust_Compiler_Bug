{"sha": "93bc735f86f93c55499225f3cbe0ba828d31b126", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNiYzczNWY4NmY5M2M1NTQ5OTIyNWYzY2JlMGJhODI4ZDMxYjEyNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-04-21T14:23:44Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-04-21T14:23:44Z"}, "message": "re GNATS libgcj/213 (Another parallel build error)\n\n\tFix for PR libgcj/213:\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (gij_SOURCES): Added gij.cc.\n\t(EXTRA_gij_SOURCES): Removed.\n\t(gij_LDADD): Removed gij.lo.\n\t(gij_DEPENDENCIES): Likewise.\n\t($(gij_OBJECTS)): Depend on nat_headers.\n\nFrom-SVN: r33307", "tree": {"sha": "aba3a330d23aee9a32e898c0e4308127df774328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aba3a330d23aee9a32e898c0e4308127df774328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93bc735f86f93c55499225f3cbe0ba828d31b126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93bc735f86f93c55499225f3cbe0ba828d31b126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93bc735f86f93c55499225f3cbe0ba828d31b126", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93bc735f86f93c55499225f3cbe0ba828d31b126/comments", "author": null, "committer": null, "parents": [{"sha": "ab8d774e06cbd09db41875015d4fb68ce1a65c96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab8d774e06cbd09db41875015d4fb68ce1a65c96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab8d774e06cbd09db41875015d4fb68ce1a65c96"}], "stats": {"total": 103, "additions": 35, "deletions": 68}, "files": [{"sha": "72b1a4b779cc713ff20475287f88bc61a22f9731", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bc735f86f93c55499225f3cbe0ba828d31b126/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bc735f86f93c55499225f3cbe0ba828d31b126/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=93bc735f86f93c55499225f3cbe0ba828d31b126", "patch": "@@ -1,5 +1,13 @@\n 2000-04-21  Tom Tromey  <tromey@cygnus.com>\n \n+\tFix for PR libgcj/213:\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (gij_SOURCES): Added gij.cc.\n+\t(EXTRA_gij_SOURCES): Removed.\n+\t(gij_LDADD): Removed gij.lo.\n+\t(gij_DEPENDENCIES): Likewise.\n+\t($(gij_OBJECTS)): Depend on nat_headers.\n+\n \t* gnu/gcj/protocol/file/Handler.java (openConnection): Use\n \t`setURL', not `url.set'.\n "}, {"sha": "7c2c0e2c7f6afe0ccc865bfed46e8423baa04517", "filename": "libjava/Makefile.am", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bc735f86f93c55499225f3cbe0ba828d31b126/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bc735f86f93c55499225f3cbe0ba828d31b126/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=93bc735f86f93c55499225f3cbe0ba828d31b126", "patch": "@@ -196,7 +196,7 @@ SUFFIXES = .class .java .h\n $(nat_files): %.lo: %.cc\n \t$(LTCXXCOMPILE) -c -o $@ $<\n \n-$(nat_files) $(GCOBJS) $(THREADOBJS) $(libgcj_la_OBJECTS): \\\n+$(nat_files) $(GCOBJS) $(THREADOBJS) $(libgcj_la_OBJECTS) $(gij_OBJECTS): \\\n \t\tinclude/config.h include/java-signal.h $(nat_headers)\n \n ## FIXME: GNU make.\n@@ -373,8 +373,7 @@ jv_convert_LDADD = $(convert_source_files:.java=.lo) libgcj.la \\\n jv_convert_DEPENDENCIES = $(convert_source_files:.java=.lo) \\\n \t$(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n \n-gij_SOURCES =\n-EXTRA_gij_SOURCES = gij.cc\n+gij_SOURCES = gij.cc\n ## We need -nodefaultlibs because we want to avoid gcj's `-lgcj'.  We\n ## need this because we are explicitly using libtool to link using the\n ## `.la' file.\n@@ -386,12 +385,10 @@ gij_LINK = $(LIBTOOL) --mode=link $(GCJ) $(JC1FLAGS) $(LDFLAGS) \\\n ## system libraries we need (via the specs file).\n ## We need the -L so that gcj can find libgcj with `-lgcj'.\n ## FIXME: should be _libs on some systems.\n-gij_LDADD = gij.lo libgcj.la \\\n-\t$(GCLIBS) $(THREADLIBS) $(ZLIBS) -L$(here)/.libs\n+gij_LDADD = libgcj.la $(GCLIBS) $(THREADLIBS) $(ZLIBS) -L$(here)/.libs\n ## Depend on the spec file to make sure it is up to date before\n ## linking this program.\n-gij_DEPENDENCIES = gij.lo \\\n-\t$(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n+gij_DEPENDENCIES = $(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n \n # The Unicode consortium does not permit re-distributing the file JIS0201.TXT.\n # You can get it from ftp://ftp.unicode.org/Public/MAPPINGS/EASTASIA/JIS/."}, {"sha": "d73bde36f47ef988c30ca682de378649b1338de9", "filename": "libjava/Makefile.in", "status": "modified", "additions": 23, "deletions": 61, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bc735f86f93c55499225f3cbe0ba828d31b126/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bc735f86f93c55499225f3cbe0ba828d31b126/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=93bc735f86f93c55499225f3cbe0ba828d31b126", "patch": "@@ -84,7 +84,6 @@ GCOBJS = @GCOBJS@\n GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n INCLTDL = @INCLTDL@\n-LD = @LD@\n LIBDATASTARTSPEC = @LIBDATASTARTSPEC@\n LIBGCJTESTSPEC = @LIBGCJTESTSPEC@\n LIBGCJ_CFLAGS = @LIBGCJ_CFLAGS@\n@@ -95,6 +94,7 @@ LIBTOOL = @LIBTOOL@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n+OBJDUMP = @OBJDUMP@\n PACKAGE = @PACKAGE@\n PERL = @PERL@\n RANLIB = @RANLIB@\n@@ -104,7 +104,6 @@ THREADINCS = @THREADINCS@\n THREADLIBS = @THREADLIBS@\n THREADOBJS = @THREADOBJS@\n THREADSPEC = @THREADSPEC@\n-USE_SYMBOL_UNDERSCORE = @USE_SYMBOL_UNDERSCORE@\n VERSION = @VERSION@\n ZDEPS = @ZDEPS@\n ZINCS = @ZINCS@\n@@ -253,18 +252,13 @@ jv_convert_DEPENDENCIES = $(convert_source_files:.java=.lo) \\\n \t$(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n \n \n-gij_SOURCES = \n-EXTRA_gij_SOURCES = gij.cc\n+gij_SOURCES = gij.cc\n gij_LDFLAGS = -rpath $(toolexeclibdir)\n gij_LINK = $(LIBTOOL) --mode=link $(GCJ) $(JC1FLAGS) $(LDFLAGS) \\\n \t-o gij\n \n-gij_LDADD = gij.lo libgcj.la \\\n-\t$(GCLIBS) $(THREADLIBS) $(ZLIBS) -L$(here)/.libs\n-\n-gij_DEPENDENCIES = gij.lo \\\n-\t$(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n-\n+gij_LDADD = libgcj.la $(GCLIBS) $(THREADLIBS) $(ZLIBS) -L$(here)/.libs\n+gij_DEPENDENCIES = $(GCDEPS) $(THREADDEPS) $(ZDEPS) libgcj.la libgcj.spec\n \n gen_from_JIS_SOURCES = \n EXTRA_gen_from_JIS_SOURCES = $(srcdir)/$(CONVERT_DIR)/gen-from-JIS.c \\\n@@ -832,7 +826,7 @@ libgcjawt_la_OBJECTS =\n PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)\n \n jv_convert_OBJECTS = \n-gij_OBJECTS = \n+gij_OBJECTS =  gij.o\n gen_from_JIS_OBJECTS = \n gen_from_JIS_LDFLAGS = \n CXXFLAGS = @CXXFLAGS@\n@@ -848,14 +842,13 @@ LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n DATA =  $(data_DATA) $(toolexeclib_DATA)\n \n DIST_COMMON =  README COPYING ChangeLog Makefile.am Makefile.in NEWS \\\n-THANKS acconfig.h acinclude.m4 aclocal.m4 configure configure.in \\\n-include/config.h.in include/stamp-h.in libgcj-test.spec.in \\\n-libgcj.spec.in\n+THANKS acinclude.m4 aclocal.m4 configure configure.in \\\n+libgcj-test.spec.in libgcj.spec.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -1143,7 +1136,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/util/zip/ZipOutputStream.P .deps/jni.P .deps/libgcjdata.P \\\n .deps/name-finder.P .deps/no-threads.P .deps/nogc.P \\\n .deps/posix-threads.P .deps/prims.P .deps/resolve.P\n-SOURCES = $(libgcjdata_a_SOURCES) $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(libgcjawt_la_SOURCES) $(EXTRA_libgcjawt_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(EXTRA_gij_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)\n+SOURCES = $(libgcjdata_a_SOURCES) $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(libgcjawt_la_SOURCES) $(EXTRA_libgcjawt_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)\n OBJECTS = $(libgcjdata_a_OBJECTS) $(libgcj_la_OBJECTS) $(libgcjawt_la_OBJECTS) $(jv_convert_OBJECTS) $(gij_OBJECTS) $(gen_from_JIS_OBJECTS)\n \n all: all-redirect\n@@ -1163,34 +1156,6 @@ config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n $(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)\n \tcd $(srcdir) && $(AUTOCONF)\n-\n-include/config.h: include/stamp-h\n-\t@if test ! -f $@; then \\\n-\t\trm -f include/stamp-h; \\\n-\t\t$(MAKE) include/stamp-h; \\\n-\telse :; fi\n-include/stamp-h: $(srcdir)/include/config.h.in $(top_builddir)/config.status\n-\tcd $(top_builddir) \\\n-\t  && CONFIG_FILES= CONFIG_HEADERS=include/config.h \\\n-\t     $(SHELL) ./config.status\n-\t@echo timestamp > include/stamp-h 2> /dev/null\n-$(srcdir)/include/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/include/stamp-h.in\n-\t@if test ! -f $@; then \\\n-\t\trm -f $(srcdir)/include/stamp-h.in; \\\n-\t\t$(MAKE) $(srcdir)/include/stamp-h.in; \\\n-\telse :; fi\n-$(srcdir)/include/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n-\tcd $(top_srcdir) && $(AUTOHEADER)\n-\t@echo timestamp > $(srcdir)/include/stamp-h.in 2> /dev/null\n-\n-mostlyclean-hdr:\n-\n-clean-hdr:\n-\n-distclean-hdr:\n-\t-rm -f include/config.h\n-\n-maintainer-clean-hdr:\n libgcj.spec: $(top_builddir)/config.status libgcj.spec.in\n \tcd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status\n libgcj-test.spec: $(top_builddir)/config.status libgcj-test.spec.in\n@@ -1634,33 +1599,31 @@ distclean-generic:\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n \n maintainer-clean-generic:\n-mostlyclean-am:  mostlyclean-hdr mostlyclean-toolexeclibLIBRARIES \\\n-\t\tmostlyclean-compile mostlyclean-libtool \\\n-\t\tmostlyclean-toolexeclibLTLIBRARIES \\\n+mostlyclean-am:  mostlyclean-toolexeclibLIBRARIES mostlyclean-compile \\\n+\t\tmostlyclean-libtool mostlyclean-toolexeclibLTLIBRARIES \\\n \t\tmostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \\\n \t\tmostlyclean-tags mostlyclean-depend mostlyclean-generic\n \n mostlyclean: mostlyclean-recursive\n \n-clean-am:  clean-hdr clean-toolexeclibLIBRARIES clean-compile \\\n-\t\tclean-libtool clean-toolexeclibLTLIBRARIES \\\n-\t\tclean-binPROGRAMS clean-noinstPROGRAMS clean-tags \\\n-\t\tclean-depend clean-generic mostlyclean-am clean-local\n+clean-am:  clean-toolexeclibLIBRARIES clean-compile clean-libtool \\\n+\t\tclean-toolexeclibLTLIBRARIES clean-binPROGRAMS \\\n+\t\tclean-noinstPROGRAMS clean-tags clean-depend \\\n+\t\tclean-generic mostlyclean-am clean-local\n \n clean: clean-recursive\n \n-distclean-am:  distclean-hdr distclean-toolexeclibLIBRARIES \\\n-\t\tdistclean-compile distclean-libtool \\\n-\t\tdistclean-toolexeclibLTLIBRARIES distclean-binPROGRAMS \\\n-\t\tdistclean-noinstPROGRAMS distclean-tags \\\n-\t\tdistclean-depend distclean-generic clean-am\n+distclean-am:  distclean-toolexeclibLIBRARIES distclean-compile \\\n+\t\tdistclean-libtool distclean-toolexeclibLTLIBRARIES \\\n+\t\tdistclean-binPROGRAMS distclean-noinstPROGRAMS \\\n+\t\tdistclean-tags distclean-depend distclean-generic \\\n+\t\tclean-am\n \t-rm -f libtool\n \n distclean: distclean-recursive\n \t-rm -f config.status\n \n-maintainer-clean-am:  maintainer-clean-hdr \\\n-\t\tmaintainer-clean-toolexeclibLIBRARIES \\\n+maintainer-clean-am:  maintainer-clean-toolexeclibLIBRARIES \\\n \t\tmaintainer-clean-compile maintainer-clean-libtool \\\n \t\tmaintainer-clean-toolexeclibLTLIBRARIES \\\n \t\tmaintainer-clean-binPROGRAMS \\\n@@ -1673,8 +1636,7 @@ maintainer-clean-am:  maintainer-clean-hdr \\\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f config.status\n \n-.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \\\n-mostlyclean-toolexeclibLIBRARIES distclean-toolexeclibLIBRARIES \\\n+.PHONY: mostlyclean-toolexeclibLIBRARIES distclean-toolexeclibLIBRARIES \\\n clean-toolexeclibLIBRARIES maintainer-clean-toolexeclibLIBRARIES \\\n uninstall-toolexeclibLIBRARIES install-toolexeclibLIBRARIES \\\n mostlyclean-compile distclean-compile clean-compile \\\n@@ -1732,7 +1694,7 @@ clean-local:\n $(nat_files): %.lo: %.cc\n \t$(LTCXXCOMPILE) -c -o $@ $<\n \n-$(nat_files) $(GCOBJS) $(THREADOBJS) $(libgcj_la_OBJECTS): \\\n+$(nat_files) $(GCOBJS) $(THREADOBJS) $(libgcj_la_OBJECTS) $(gij_OBJECTS): \\\n \t\tinclude/config.h include/java-signal.h $(nat_headers)\n \n $(c_files): %.lo: %.c"}]}