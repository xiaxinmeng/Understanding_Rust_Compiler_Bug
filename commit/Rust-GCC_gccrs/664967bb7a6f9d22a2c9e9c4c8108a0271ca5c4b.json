{"sha": "664967bb7a6f9d22a2c9e9c4c8108a0271ca5c4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY0OTY3YmI3YTZmOWQyMmEyYzllOWM0YzgxMDhhMDI3MWNhNWM0Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-19T13:44:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-19T13:44:39Z"}, "message": "Use MASK_* macros instead of explicit constants.\n\nFrom-SVN: r12527", "tree": {"sha": "972b142d7b2c8f48500a42a1a54ff6296f81207c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/972b142d7b2c8f48500a42a1a54ff6296f81207c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/664967bb7a6f9d22a2c9e9c4c8108a0271ca5c4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/664967bb7a6f9d22a2c9e9c4c8108a0271ca5c4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/664967bb7a6f9d22a2c9e9c4c8108a0271ca5c4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/664967bb7a6f9d22a2c9e9c4c8108a0271ca5c4b/comments", "author": null, "committer": null, "parents": [{"sha": "6231ef8299b7ddc59134042ad9456b7a23f6563c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6231ef8299b7ddc59134042ad9456b7a23f6563c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6231ef8299b7ddc59134042ad9456b7a23f6563c"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "5ee2498ffff2b6ff4fa348602bf912296259edb3", "filename": "gcc/config/m68k/m68k-none.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/664967bb7a6f9d22a2c9e9c4c8108a0271ca5c4b/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/664967bb7a6f9d22a2c9e9c4c8108a0271ca5c4b/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-none.h?ref=664967bb7a6f9d22a2c9e9c4c8108a0271ca5c4b", "patch": "@@ -94,13 +94,13 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n \n /* Define one of __HAVE_68881__, __HAVE_FPA__, or nothing (soft float), appropriately.  */\n #undef CPP_FPU_SPEC\n-#if TARGET_DEFAULT & 02\n+#if TARGET_DEFAULT & MASK_68881\n /* ??? Why isn't m68302 treated like m68000 here?  */\n #define CPP_FPU_SPEC \\\n \"%{!mc68000:%{!m68000:%{!m68332:%{!m5200:%{!msoft-float:%{mfpa:-D__HAVE_FPA__ }%{!mfpa:-D__HAVE_68881__ }}}}}}\"\n #else\n /* This can't currently happen, but we code it anyway to show how it's done.  */\n-#if TARGET_DEFAULT & 0100\n+#if TARGET_DEFAULT & MASK_FPA\n #define CPP_FPU_SPEC \\\n \"%{!msoft-float:%{m68881:-D__HAVE_68881__ }%{!m68881:-D__HAVE_FPA__ }}\"\n #else\n@@ -113,10 +113,12 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n    Other definitions depend on what the default cpu is and switches\n    given to the compiler:\n \n-   -m68000: define nothing else\n+   -m68000, -mc68000: define nothing else\n+   -m68010: define mc68010\n    -m68020, -mc68020: define mc68020\n    -m68030: define mc68030\n    -m68040: define mc68040\n+   -m68060: define mc68060\n    -m68020-40: define mc68020 mc68030 mc68040\n    -m68302: define mc68302\n    -m68332: define mc68332"}]}