{"sha": "291c0a12c4a00c0aa5a67e570e3194b808ad6946", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkxYzBhMTJjNGEwMGMwYWE1YTY3ZTU3MGUzMTk0YjgwOGFkNjk0Ng==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-03-01T12:44:33Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-03-01T12:44:33Z"}, "message": "re PR pch/14940 (PCH largefile test fails on various platforms)\n\n\tgcc:\n\tPR pch/14940\n\t* config/host-solaris.c (HOST_HOOKS_GT_PCH_GET_ADDRESS): Redefine\n\tto sol_gt_pch_get_address.\n\t(TRY_EMPTY_VM_SPACE): Define for all combinations of 32 and\n\t64-bit, SPARC and x86.\n\t(sol_gt_pch_get_address): New function.\n\n\tgcc/testsuite:\n\tPR pch/14940\n\t* gcc.dg/pch/pch.exp: Don't XFAIL largefile.c on i?86-*-solaris2.10.\n\nFrom-SVN: r157141", "tree": {"sha": "c4f01cb4ed5360a60f66245fa6a8669fe3ee1f42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4f01cb4ed5360a60f66245fa6a8669fe3ee1f42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/291c0a12c4a00c0aa5a67e570e3194b808ad6946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/291c0a12c4a00c0aa5a67e570e3194b808ad6946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/291c0a12c4a00c0aa5a67e570e3194b808ad6946", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/291c0a12c4a00c0aa5a67e570e3194b808ad6946/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72a30e3cf031aadb2b82ef53ad14daac907bf8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a30e3cf031aadb2b82ef53ad14daac907bf8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a30e3cf031aadb2b82ef53ad14daac907bf8c3"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "26c50318a562eddd325beb54080cb1b1d202b34a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291c0a12c4a00c0aa5a67e570e3194b808ad6946/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291c0a12c4a00c0aa5a67e570e3194b808ad6946/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=291c0a12c4a00c0aa5a67e570e3194b808ad6946", "patch": "@@ -1,3 +1,12 @@\n+2010-03-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR pch/14940\n+\t* config/host-solaris.c (HOST_HOOKS_GT_PCH_GET_ADDRESS): Redefine\n+\tto sol_gt_pch_get_address.\n+\t(TRY_EMPTY_VM_SPACE): Define for all combinations of 32 and\n+\t64-bit, SPARC and x86.\n+\t(sol_gt_pch_get_address): New function.\n+\n 2010-03-01  Marco Poletti  <poletti.marco@gmail.com> \n \n \t* toplev.h (inform_n, error_n): Declare."}, {"sha": "1d51a8d21278073c96d6162294530f67353e6534", "filename": "gcc/config/host-solaris.c", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291c0a12c4a00c0aa5a67e570e3194b808ad6946/gcc%2Fconfig%2Fhost-solaris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291c0a12c4a00c0aa5a67e570e3194b808ad6946/gcc%2Fconfig%2Fhost-solaris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-solaris.c?ref=291c0a12c4a00c0aa5a67e570e3194b808ad6946", "patch": "@@ -1,5 +1,5 @@\n /* Solaris host-specific hook definitions.\n-   Copyright (C) 2004, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2007, 2008, 2010 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -25,9 +25,48 @@\n #include \"hosthooks-def.h\"\n \n \n+#undef HOST_HOOKS_GT_PCH_GET_ADDRESS\n+#define HOST_HOOKS_GT_PCH_GET_ADDRESS sol_gt_pch_get_address\n #undef HOST_HOOKS_GT_PCH_USE_ADDRESS\n #define HOST_HOOKS_GT_PCH_USE_ADDRESS sol_gt_pch_use_address\n \n+/* For various ports, try to guess a fixed spot in the vm space\n+   that's probably free.  Based on McDougall, Mauro, Solaris Internals, 2nd\n+   ed., p.460-461, fig. 9-3, 9-4, 9-5.  */\n+#if defined(__sparcv9__)\n+/* This low to avoid VA hole on UltraSPARC I/II.  */\n+# define TRY_EMPTY_VM_SPACE\t0x70000000000\n+#elif defined(__sparc__)\n+# define TRY_EMPTY_VM_SPACE\t0x80000000\n+#elif defined(__x86_64__)\n+# define TRY_EMPTY_VM_SPACE\t0x8000000000000000\n+#elif defined(__i386__)\n+# define TRY_EMPTY_VM_SPACE\t0xB0000000\n+#else\n+# define TRY_EMPTY_VM_SPACE\t0\n+#endif\n+\n+/* Determine a location where we might be able to reliably allocate\n+   SIZE bytes.  FD is the PCH file, though we should return with the\n+   file unmapped.  */\n+\n+static void *\n+sol_gt_pch_get_address (size_t size, int fd)\n+{\n+  void *addr;\n+\n+  addr = mmap ((caddr_t) TRY_EMPTY_VM_SPACE, size, PROT_READ | PROT_WRITE,\n+\t       MAP_PRIVATE, fd, 0);\n+\n+  /* If we failed the map, that means there's *no* free space.  */\n+  if (addr == (void *) MAP_FAILED)\n+    return NULL;\n+  /* Unmap the area before returning.  */\n+  munmap ((caddr_t) addr, size);\n+\n+  return addr;\n+}\n+\n /* Map SIZE bytes of FD+OFFSET at BASE.  Return 1 if we succeeded at \n    mapping the data at BASE, -1 if we couldn't.  */\n "}, {"sha": "009fc96fa1dc39bed7f64474c88a0f8ad27624b8", "filename": "gcc/testsuite/gcc.dg/pch/pch.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/291c0a12c4a00c0aa5a67e570e3194b808ad6946/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fpch.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/291c0a12c4a00c0aa5a67e570e3194b808ad6946/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fpch.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fpch.exp?ref=291c0a12c4a00c0aa5a67e570e3194b808ad6946", "patch": "@@ -43,7 +43,6 @@ foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.c]] {\n set test \"largefile.c\"\n set testh \"largefile.hs\"\n set f [open $test w]\n-puts $f \"/* { dg-xfail-if \\\"PR 14940\\\" { \\\"i?86-*-solaris2.10\\\" } { \\\"*\\\" } { \\\"\\\" } } */\"\n puts $f \"/* { dg-timeout-factor 4.0 } */\"\n set v 0\n for { set v 0 } { $v < 10000 } { incr v } {"}]}