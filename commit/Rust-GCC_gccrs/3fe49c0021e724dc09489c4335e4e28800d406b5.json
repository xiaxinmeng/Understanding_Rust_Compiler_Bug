{"sha": "3fe49c0021e724dc09489c4335e4e28800d406b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlNDljMDAyMWU3MjRkYzA5NDg5YzQzMzVlNGUyODgwMGQ0MDZiNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-01T00:22:08Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-01T00:22:08Z"}, "message": "(xcoff_lastfile): New variable.\n\n(ABS_OR_RELATIVE_LINENO, ASM_OUTPUT_SOURCE_LINE): Define here.\n(xcoffout_source_file, xcoffout_source_line): New functions.\n(xcoffout_declare_function): Use xcoffout_source_file.\n\nFrom-SVN: r7408", "tree": {"sha": "8e8c78140bc28f2b7cf3deeda2ccf1b504d8a4eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e8c78140bc28f2b7cf3deeda2ccf1b504d8a4eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fe49c0021e724dc09489c4335e4e28800d406b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe49c0021e724dc09489c4335e4e28800d406b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe49c0021e724dc09489c4335e4e28800d406b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe49c0021e724dc09489c4335e4e28800d406b5/comments", "author": null, "committer": null, "parents": [{"sha": "9459d8f57eba2d87f1a9df5eaa8063208f5164f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9459d8f57eba2d87f1a9df5eaa8063208f5164f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9459d8f57eba2d87f1a9df5eaa8063208f5164f8"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "42b01f93dcbb2d475a575d078f858a386f65f380", "filename": "gcc/xcoffout.c", "status": "modified", "additions": 63, "deletions": 2, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe49c0021e724dc09489c4335e4e28800d406b5/gcc%2Fxcoffout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe49c0021e724dc09489c4335e4e28800d406b5/gcc%2Fxcoffout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.c?ref=3fe49c0021e724dc09489c4335e4e28800d406b5", "patch": "@@ -71,9 +71,23 @@ char *xcoff_current_function_file;\n char *xcoff_bss_section_name;\n char *xcoff_private_data_section_name;\n char *xcoff_read_only_section_name;\n+\n+/* Last source file name mentioned in a NOTE insn.  */\n+\n+char *xcoff_lastfile;\n \f\n /* Macro definitions used below.  */\n \n+#define ABS_OR_RELATIVE_LINENO(LINENO)\t\t\\\n+ (xcoff_current_include_file ? (LINENO) : (LINENO) - xcoff_begin_function_line)\n+\n+/* Output source line numbers via \".line\" rather than \".stabd\".  */\n+#define ASM_OUTPUT_SOURCE_LINE(FILE,LINENUM) \\\n+  do {\t\t\t\t\t\t\\\n+    if (xcoff_begin_function_line >= 0)\t\t\\\n+      fprintf (FILE, \"\\t.line\\t%d\\n\", ABS_OR_RELATIVE_LINENO (LINENUM)); \\\n+  } while (0)\n+\n #define ASM_OUTPUT_LFB(FILE,LINENUM) \\\n {\t\t\t\t\t\t\\\n   if (xcoff_begin_function_line == -1)\t\t\\\n@@ -300,7 +314,7 @@ stab_to_sclass (stab)\n       abort ();\n   }\n }\n-\n+\f\n /* In XCOFF, we have to have this .bf before the function prologue.\n    Rely on the value of `dbx_begin_function_line' not to duplicate .bf.  */\n \n@@ -314,6 +328,53 @@ xcoffout_output_first_source_line (file, last_linenum)\n   ASM_OUTPUT_SOURCE_LINE (file, last_linenum);\n }\n \n+/* Output debugging info to FILE to switch to sourcefile FILENAME.\n+   INLINE_P is true if this is from an inlined function.  */\n+\n+void\n+xcoffout_source_file (file, filename, inline_p)\n+     FILE *file;\n+     char *filename;\n+     int inline_p;\n+{\n+  if (filename\n+      && (xcoff_lastfile == 0 || strcmp (filename, xcoff_lastfile)\n+\t  || (inline_p && ! xcoff_current_include_file)\n+\t  || (! inline_p && xcoff_current_include_file)))\n+    {\n+      if (xcoff_current_include_file)\n+\t{\n+\t  fprintf (file, \"\\t.ei\\t\");\n+\t  output_quoted_string (file, xcoff_current_include_file);\n+\t  fprintf (file, \"\\n\");\n+\t  xcoff_current_include_file = NULL;\n+\t}\n+      if (strcmp (main_input_filename, filename) || inline_p)\n+\t{\n+\t  fprintf (file, \"\\t.bi\\t\");\n+\t  output_quoted_string (file, filename);\n+\t  fprintf (file, \"\\n\");\n+\t  xcoff_current_include_file = filename;\n+\t}\n+\n+      xcoff_lastfile = filename;\n+    }\n+}\n+\n+/* Output a line number symbol entry into output stream FILE,\n+   for source file FILENAME and line number NOTE.  */\n+\n+void\n+xcoffout_source_line (file, filename, note)\n+     FILE *file;\n+     char *filename;\n+     rtx note;\n+{\n+  xcoffout_source_file (file, filename, RTX_INTEGRATED_P (note));\n+\n+  ASM_OUTPUT_SOURCE_LINE (file, NOTE_LINE_NUMBER (note));\n+}\n+\f\n /* Output the symbols defined in block number DO_BLOCK.\n    Set NEXT_BLOCK_NUMBER to 0 before calling.\n \n@@ -425,7 +486,7 @@ xcoffout_declare_function (file, decl, name)\n   /* Any pending .bi or .ei must occur before the .function psuedo op.\n      Otherwise debuggers will think that the function is in the previous\n      file and/or at the wrong line number.  */\n-  dbxout_source_file (file, DECL_SOURCE_FILE (decl));\n+  xcoffout_source_file (file, DECL_SOURCE_FILE (decl), 0);\n   dbxout_symbol (decl, 0);\n   fprintf (file, \"\\t.function .%s,.%s,16,044,FE..%s-.%s\\n\", n, n, n, n);\n }"}]}