{"sha": "8a0092c83488d75b6733d741804b5d961d5f9289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEwMDkyYzgzNDg4ZDc1YjY3MzNkNzQxODA0YjVkOTYxZDVmOTI4OQ==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-01-23T18:44:43Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-01-23T18:44:43Z"}, "message": "Class.h (_Jv_FindInterpreterMethod): Add new declaration.\n\n        * java/lang/Class.h (_Jv_FindInterpreterMethod): Add new declaration.\n        * java/lang/natClass.cc (_Jv_FindInterpreterMethod): New function.\n\nFrom-SVN: r110142", "tree": {"sha": "851ca1946e5e0ce049a3eb008b9ffc2fd099513e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/851ca1946e5e0ce049a3eb008b9ffc2fd099513e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a0092c83488d75b6733d741804b5d961d5f9289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0092c83488d75b6733d741804b5d961d5f9289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a0092c83488d75b6733d741804b5d961d5f9289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a0092c83488d75b6733d741804b5d961d5f9289/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "192a50ad41ca1582d3d7f75981681506b0615fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192a50ad41ca1582d3d7f75981681506b0615fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/192a50ad41ca1582d3d7f75981681506b0615fe3"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "d13425b1316c24445d203bdc1ca18018ca4cdb55", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0092c83488d75b6733d741804b5d961d5f9289/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0092c83488d75b6733d741804b5d961d5f9289/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8a0092c83488d75b6733d741804b5d961d5f9289", "patch": "@@ -1,3 +1,8 @@\n+2006-01-23  Keith Seitz  <keiths@redhat.com>\n+\n+\t* java/lang/Class.h (_Jv_FindInterpreterMethod): Add new declaration.\n+\t* java/lang/natClass.cc (_Jv_FindInterpreterMethod): New function.\n+\n 2006-01-23  David Daney  <ddaney@avtrex.com>\n \n \t* configure.host (disable_dladdr): Remove variable and its"}, {"sha": "fe31fa2a39cecca2b8fef04205cac23be58047d4", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0092c83488d75b6733d741804b5d961d5f9289/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0092c83488d75b6733d741804b5d961d5f9289/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=8a0092c83488d75b6733d741804b5d961d5f9289", "patch": "@@ -81,6 +81,12 @@ class _Jv_ExecutionEngine;\n class _Jv_CompiledEngine;\n class _Jv_InterpreterEngine;\n \n+#ifdef INTERPRETER\n+class _Jv_ClassReader;\n+class _Jv_InterpClass;\n+class _Jv_InterpMethod;\n+#endif\n+\n struct _Jv_Constants\n {\n   jint size;\n@@ -217,6 +223,11 @@ jmethodID _Jv_FromReflectedConstructor (java::lang::reflect::Constructor *);\n jint JvNumMethods (jclass);\n jmethodID JvGetFirstMethod (jclass);\n \n+#ifdef INTERPRETER\n+// Finds a desired interpreter method in the given class or NULL if not found\n+_Jv_InterpMethod* _Jv_FindInterpreterMethod (jclass, jmethodID);\n+#endif\n+\n // Friend classes and functions to implement the ClassLoader\n class java::lang::ClassLoader;\n class java::lang::VMClassLoader;\n@@ -256,10 +267,6 @@ void _Jv_CopyClassesToSystemLoader (gnu::gcj::runtime::SystemClassLoader *);\n \n #ifdef INTERPRETER\n void _Jv_InitField (jobject, jclass, int);\n-\n-class _Jv_ClassReader;\n-class _Jv_InterpClass;\n-class _Jv_InterpMethod;\n #endif\n \n class _Jv_StackTrace;\n@@ -442,6 +449,10 @@ class java::lang::Class : public java::lang::Object\n   friend jmethodID (::_Jv_FromReflectedConstructor) (java::lang::reflect::Constructor *);\n   friend jint (::JvNumMethods) (jclass);\n   friend jmethodID (::JvGetFirstMethod) (jclass);\n+#ifdef INTERPRETER\n+  friend _Jv_InterpMethod* (::_Jv_FindInterpreterMethod) (jclass klass,\n+\t\t\t\t\t\t\t  jmethodID desired_method);\n+#endif\n \n   // Friends classes and functions to implement the ClassLoader\n   friend class java::lang::ClassLoader;"}, {"sha": "951bab974cc9c5eb1ff6c86d950697befb7f4b4c", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a0092c83488d75b6733d741804b5d961d5f9289/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a0092c83488d75b6733d741804b5d961d5f9289/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=8a0092c83488d75b6733d741804b5d961d5f9289", "patch": "@@ -1,6 +1,6 @@\n // natClass.cc - Implementation of java.lang.Class native methods.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005  \n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006  \n    Free Software Foundation\n \n    This file is part of libgcj.\n@@ -1220,3 +1220,29 @@ _Jv_getInterfaceMethod (jclass search_class, jclass &found_class, int &index,\n \n   return false;\n }\n+\n+#ifdef INTERPRETER\n+_Jv_InterpMethod*\n+_Jv_FindInterpreterMethod (jclass klass, jmethodID desired_method)\n+{\n+  using namespace java::lang::reflect;\n+\n+  _Jv_InterpClass* iclass\n+    = reinterpret_cast<_Jv_InterpClass*> (klass->aux_info);\n+  _Jv_MethodBase** imethods = _Jv_GetFirstMethod (iclass);\n+\n+  for (int i = 0; i < JvNumMethods (klass); ++i)\n+    {\n+      _Jv_MethodBase* imeth = imethods[i];\n+      _Jv_ushort accflags = klass->methods[i].accflags;\n+      if ((accflags & (Modifier::NATIVE | Modifier::ABSTRACT)) == 0)\n+\t{\n+\t  _Jv_InterpMethod* im = reinterpret_cast<_Jv_InterpMethod*> (imeth);\n+\t  if (im->get_method () == desired_method)\n+\t    return im;\n+\t}\n+    }\n+\n+  return NULL;\n+}\n+#endif"}]}