{"sha": "2a3c437d064e6d014ebf82453ba57a02a701ede9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEzYzQzN2QwNjRlNmQwMTRlYmY4MjQ1M2JhNTdhMDJhNzAxZWRlOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-01-07T08:12:10Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-01-07T08:12:10Z"}, "message": "re PR fortran/42597 (ICE with procedure pointer initialized to null())\n\n2010-01-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/42597\n        * trans-decl.c (get_proc_pointer_decl): Fix call to\n        gfc_conv_initializer for array-valued proc-pointer funcs.\n\n2010-01-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/42597\n        * gfortran.dg/proc_ptr_26.f90: New test.\n\nFrom-SVN: r155688", "tree": {"sha": "2a7118b6434bc55292d6637b808a9c67bc24efec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a7118b6434bc55292d6637b808a9c67bc24efec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a3c437d064e6d014ebf82453ba57a02a701ede9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3c437d064e6d014ebf82453ba57a02a701ede9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3c437d064e6d014ebf82453ba57a02a701ede9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3c437d064e6d014ebf82453ba57a02a701ede9/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64b33a7e1eb495404a6a74b8b69368580b1ee874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64b33a7e1eb495404a6a74b8b69368580b1ee874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64b33a7e1eb495404a6a74b8b69368580b1ee874"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "dc3aa9718b1328390cd6e5ce40af6804ad11d13c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3c437d064e6d014ebf82453ba57a02a701ede9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3c437d064e6d014ebf82453ba57a02a701ede9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2a3c437d064e6d014ebf82453ba57a02a701ede9", "patch": "@@ -1,3 +1,9 @@\n+2010-01-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/42597\n+\t* trans-decl.c (get_proc_pointer_decl): Fix call to\n+\tgfc_conv_initializer for array-valued proc-pointer funcs.\n+\n 2010-01-07  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41872"}, {"sha": "612c6f6129699c88e5c06e7312366d6cb6aa067f", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3c437d064e6d014ebf82453ba57a02a701ede9/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3c437d064e6d014ebf82453ba57a02a701ede9/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=2a3c437d064e6d014ebf82453ba57a02a701ede9", "patch": "@@ -1349,7 +1349,9 @@ get_proc_pointer_decl (gfc_symbol *sym)\n     {\n       /* Add static initializer.  */\n       DECL_INITIAL (decl) = gfc_conv_initializer (sym->value, &sym->ts,\n-\t  TREE_TYPE (decl), sym->attr.dimension, sym->attr.proc_pointer);\n+\t  TREE_TYPE (decl),\n+\t  sym->attr.proc_pointer ? false : sym->attr.dimension,\n+\t  sym->attr.proc_pointer);\n     }\n \n   attributes = add_attributes_to_decl (sym->attr, NULL_TREE);"}, {"sha": "459dde397fff58cb85b32ec00ac919d6c5c8d955", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3c437d064e6d014ebf82453ba57a02a701ede9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3c437d064e6d014ebf82453ba57a02a701ede9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a3c437d064e6d014ebf82453ba57a02a701ede9", "patch": "@@ -1,3 +1,8 @@\n+2010-01-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/42597\n+\t* gfortran.dg/proc_ptr_26.f90: New test.\n+\n 2010-01-07  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41872"}, {"sha": "044f0a403bd5464d2a70833741c30b1858e9553c", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_26.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3c437d064e6d014ebf82453ba57a02a701ede9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_26.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3c437d064e6d014ebf82453ba57a02a701ede9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_26.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_26.f90?ref=2a3c437d064e6d014ebf82453ba57a02a701ede9", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+!\n+! PR fortran/42597\n+!\n+! Contributed by mrestelli@gmail.com\n+!\n+\n+module mod_a\n+ implicit none\n+\n+ abstract interface\n+  pure function intf(x) result(y)\n+   real, intent(in) :: x(:,:)\n+   real :: y(size(x,1),size(x,1),size(x,2))\n+  end function intf\n+ end interface\n+\n+ procedure(intf), pointer :: p_fun => null()\n+end module mod_a\n+\n+program main\n+  use mod_a\n+  implicit none\n+\n+  procedure(intf), pointer :: p_fun2 => null()\n+\n+  if (associated(p_fun) .or. associated(p_fun2)) &\n+    call abort ()\n+end program main\n+\n+! { dg-final { cleanup-modules \"mod_a\" } }"}]}