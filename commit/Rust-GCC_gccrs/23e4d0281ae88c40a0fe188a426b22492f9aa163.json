{"sha": "23e4d0281ae88c40a0fe188a426b22492f9aa163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNlNGQwMjgxYWU4OGM0MGEwZmUxODhhNDI2YjIyNDkyZjlhYTE2Mw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-08-22T14:06:57Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-08-22T14:06:57Z"}, "message": "c-common.c (check_format_info): Give the 'some locales' warning for strftime %Ey rather than the unconditional...\n\n\t* c-common.c (check_format_info): Give the 'some locales' warning\n\tfor strftime %Ey rather than the unconditional 'only last 2 digits\n\tof year' one.\n\ntestsuite:\n\t* gcc.dg/c90-strftime-2.c, gcc.dg/c99-strftime-1.c,\n\tgcc.dg/c99-strftime-2.c: New tests.\n\nFrom-SVN: r35874", "tree": {"sha": "499ed41282ed48f4631c14435acf8564cbc1baf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/499ed41282ed48f4631c14435acf8564cbc1baf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23e4d0281ae88c40a0fe188a426b22492f9aa163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e4d0281ae88c40a0fe188a426b22492f9aa163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23e4d0281ae88c40a0fe188a426b22492f9aa163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e4d0281ae88c40a0fe188a426b22492f9aa163/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc82c87cad5bfd662ec03441ee2befe9cfcccd42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc82c87cad5bfd662ec03441ee2befe9cfcccd42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc82c87cad5bfd662ec03441ee2befe9cfcccd42"}], "stats": {"total": 179, "additions": 176, "deletions": 3}, "files": [{"sha": "7d7e5f60267bd27d26503faa3cb8c909119162d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23e4d0281ae88c40a0fe188a426b22492f9aa163", "patch": "@@ -1,3 +1,9 @@\n+2000-08-22  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-common.c (check_format_info): Give the 'some locales' warning\n+\tfor strftime %Ey rather than the unconditional 'only last 2 digits\n+\tof year' one.\n+\n 2000-08-22  Richard Henderson  <rth@cygnus.com>\n \n \t* alias.c (init_alias_analysis): Do not register"}, {"sha": "c72fbe7ff9cd56ab4c19aac4e8f652ba978fa85c", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=23e4d0281ae88c40a0fe188a426b22492f9aa163", "patch": "@@ -2162,11 +2162,12 @@ check_format_info (info, params)\n \t}\n       if (wide && index (fci->flag_chars, 'w') == 0)\n \twarning (\"width used with `%c' format\", format_char);\n-      if (index (fci->flag_chars, '2') != 0)\n-\twarning (\"`%%%c' yields only last 2 digits of year\", format_char);\n-      else if (index (fci->flag_chars, '3') != 0)\n+      if (index (fci->flag_chars, '3') != 0\n+\t  || (format_char == 'y' && index (flag_chars, 'E')))\n \twarning (\"`%%%c' yields only last 2 digits of year in some locales\",\n \t\t format_char);\n+      else if (index (fci->flag_chars, '2') != 0)\n+\twarning (\"`%%%c' yields only last 2 digits of year\", format_char);\n       if (precise && index (fci->flag_chars, 'p') == 0)\n \twarning (\"precision used with `%c' format\", format_char);\n       if (aflag && index (fci->flag_chars, 'a') == 0)"}, {"sha": "45221fb5c7de15093646c109069f4214b39b3333", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=23e4d0281ae88c40a0fe188a426b22492f9aa163", "patch": "@@ -1,3 +1,8 @@\n+2000-08-22  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.dg/c90-strftime-2.c, gcc.dg/c99-strftime-1.c,\n+\tgcc.dg/c99-strftime-2.c: New tests.\n+\n 2000-08-22  Richard Henderson  <rth@cygnus.com>\n \n \t* gcc.c-torture/execute/20000822-1.c: New test."}, {"sha": "4d6c2897bd14037f98c9268e5b836826f36bdbd1", "filename": "gcc/testsuite/gcc.dg/c90-strftime-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-strftime-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-strftime-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-strftime-2.c?ref=23e4d0281ae88c40a0fe188a426b22492f9aa163", "patch": "@@ -0,0 +1,35 @@\n+/* Test for strftime formats.  Rejection of formats using C99 features in\n+   pedantic C90 mode.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1990 -pedantic -Wformat\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+struct tm;\n+\n+extern size_t strftime (char *, size_t, const char *, const struct tm *);\n+\n+void\n+foo (char *s, size_t m, const struct tm *tp)\n+{\n+  strftime (s, m, \"%C\", tp); /* { dg-warning \"C\" \"%C not in C90\" } */\n+  strftime (s, m, \"%D\", tp); /* { dg-warning \"C\" \"%D not in C90\" } */\n+  /* { dg-warning \"only last 2\" \"2-digit year\" { target *-*-* } 17 } */\n+  strftime (s, m, \"%e\", tp); /* { dg-warning \"C\" \"%e not in C90\" } */\n+  strftime (s, m, \"%F\", tp); /* { dg-warning \"C\" \"%F not in C90\" } */\n+  strftime (s, m, \"%g\", tp); /* { dg-warning \"C\" \"%g not in C90\" } */\n+  /* { dg-warning \"only last 2\" \"2-digit year\" { target *-*-* } 21 } */\n+  strftime (s, m, \"%G\", tp); /* { dg-warning \"C\" \"%G not in C90\" } */\n+  strftime (s, m, \"%h\", tp); /* { dg-warning \"C\" \"%h not in C90\" } */\n+  strftime (s, m, \"%n\", tp); /* { dg-warning \"C\" \"%n not in C90\" } */\n+  strftime (s, m, \"%r\", tp); /* { dg-warning \"C\" \"%r not in C90\" } */\n+  strftime (s, m, \"%R\", tp); /* { dg-warning \"C\" \"%R not in C90\" } */\n+  strftime (s, m, \"%t\", tp); /* { dg-warning \"C\" \"%t not in C90\" } */\n+  strftime (s, m, \"%T\", tp); /* { dg-warning \"C\" \"%T not in C90\" } */\n+  strftime (s, m, \"%u\", tp); /* { dg-warning \"C\" \"%u not in C90\" } */\n+  strftime (s, m, \"%V\", tp); /* { dg-warning \"C\" \"%V not in C90\" } */\n+  strftime (s, m, \"%z\", tp); /* { dg-warning \"C\" \"%z not in C90\" } */\n+  strftime (s, m, \"%EX\", tp); /* { dg-warning \"C\" \"%E not in C90\" } */\n+  strftime (s, m, \"%OW\", tp); /* { dg-warning \"C\" \"%O not in C90\" } */\n+}"}, {"sha": "4ab0a4190a7df39c8e3cbc9eea2e2138365c46aa", "filename": "gcc/testsuite/gcc.dg/c99-strftime-1.c", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-strftime-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-strftime-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-strftime-1.c?ref=23e4d0281ae88c40a0fe188a426b22492f9aa163", "patch": "@@ -0,0 +1,99 @@\n+/* Test for strftime formats.  Formats using C99 features.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic -Wformat\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+struct tm;\n+\n+extern size_t strftime (char *, size_t, const char *, const struct tm *);\n+\n+void\n+foo (char *s, size_t m, const struct tm *tp)\n+{\n+  /* See ISO/IEC 9899:1990 (E) subclause 7.12.3.5 (pages 174-175).  */\n+  /* Formats which are Y2K-compliant (no 2-digit years).  */\n+  strftime (s, m, \"%a%A%b%B%C%d%e%F%G%h%H%I%j%m%M%p%R%S%t%T%u%U%V%w%W%X%Y%z%Z%%\", tp);\n+  strftime (s, m, \"%EC%EX%EY%Od%Oe%OH%OI%Om%OM%OS%Ou%OU%OV%Ow%OW\", tp);\n+  /* Formats with 2-digit years.  */\n+  strftime (s, m, \"%D\", tp); /* { dg-warning \"only last 2\" \"2-digit year\" } */\n+  strftime (s, m, \"%g\", tp); /* { dg-warning \"only last 2\" \"2-digit year\" } */\n+  strftime (s, m, \"%y\", tp); /* { dg-warning \"only last 2\" \"2-digit year\" } */\n+  strftime (s, m, \"%Oy\", tp); /* { dg-warning \"only last 2\" \"2-digit year\" } */\n+  /* Formats with 2-digit years in some locales.  */\n+  strftime (s, m, \"%c\", tp); /* { dg-warning \"some locales\" \"2-digit year\" } */\n+  strftime (s, m, \"%Ec\", tp); /* { dg-warning \"some locales\" \"2-digit year\" } */\n+  strftime (s, m, \"%x\", tp); /* { dg-warning \"some locales\" \"2-digit year\" } */\n+  strftime (s, m, \"%Ex\", tp); /* { dg-warning \"some locales\" \"2-digit year\" } */\n+  /* %Ey is explicitly an era offset not a 2-digit year; but in some\n+     locales the E modifier may be ignored.\n+  */\n+  strftime (s, m, \"%Ey\", tp); /* { dg-warning \"some locales\" \"2-digit year\" } */\n+  /* Bad uses of %E and %O.  */\n+  strftime (s, m, \"%EEY\", tp); /* { dg-warning \"multiple\" \"multiple %E/%O\" } */\n+  strftime (s, m, \"%EOY\", tp); /* { dg-warning \"multiple\" \"multiple %E/%O\" } */\n+  strftime (s, m, \"%OEV\", tp); /* { dg-warning \"multiple\" \"multiple %E/%O\" } */\n+  strftime (s, m, \"%OOV\", tp); /* { dg-warning \"multiple\" \"multiple %E/%O\" } */\n+  strftime (s, m, \"%Ea\", tp); /* { dg-warning \"flag\" \"bad %Ea\" } */\n+  strftime (s, m, \"%EA\", tp); /* { dg-warning \"flag\" \"bad %EA\" } */\n+  strftime (s, m, \"%Eb\", tp); /* { dg-warning \"flag\" \"bad %Eb\" } */\n+  strftime (s, m, \"%EB\", tp); /* { dg-warning \"flag\" \"bad %EB\" } */\n+  strftime (s, m, \"%Ed\", tp); /* { dg-warning \"flag\" \"bad %Ed\" } */\n+  strftime (s, m, \"%ED\", tp); /* { dg-warning \"flag\" \"bad %ED\" } */\n+  /* { dg-warning \"only last 2\" \"2-digit year\" { target *-*-* } 43 } */\n+  strftime (s, m, \"%Ee\", tp); /* { dg-warning \"flag\" \"bad %Ee\" } */\n+  strftime (s, m, \"%EF\", tp); /* { dg-warning \"flag\" \"bad %EF\" } */\n+  strftime (s, m, \"%Eg\", tp); /* { dg-warning \"flag\" \"bad %Eg\" } */\n+  /* { dg-warning \"only last 2\" \"2-digit year\" { target *-*-* } 47 } */\n+  strftime (s, m, \"%EG\", tp); /* { dg-warning \"flag\" \"bad %EG\" } */\n+  strftime (s, m, \"%Eh\", tp); /* { dg-warning \"flag\" \"bad %Eh\" } */\n+  strftime (s, m, \"%EH\", tp); /* { dg-warning \"flag\" \"bad %EH\" } */\n+  strftime (s, m, \"%EI\", tp); /* { dg-warning \"flag\" \"bad %EI\" } */\n+  strftime (s, m, \"%Ej\", tp); /* { dg-warning \"flag\" \"bad %Ej\" } */\n+  strftime (s, m, \"%Em\", tp); /* { dg-warning \"flag\" \"bad %Em\" } */\n+  strftime (s, m, \"%EM\", tp); /* { dg-warning \"flag\" \"bad %EM\" } */\n+  strftime (s, m, \"%En\", tp); /* { dg-warning \"flag\" \"bad %En\" } */\n+  strftime (s, m, \"%Ep\", tp); /* { dg-warning \"flag\" \"bad %Ep\" } */\n+  strftime (s, m, \"%Er\", tp); /* { dg-warning \"flag\" \"bad %Er\" } */\n+  strftime (s, m, \"%ER\", tp); /* { dg-warning \"flag\" \"bad %ER\" } */\n+  strftime (s, m, \"%ES\", tp); /* { dg-warning \"flag\" \"bad %ES\" } */\n+  strftime (s, m, \"%Et\", tp); /* { dg-warning \"flag\" \"bad %Et\" } */\n+  strftime (s, m, \"%ET\", tp); /* { dg-warning \"flag\" \"bad %ET\" } */\n+  strftime (s, m, \"%Eu\", tp); /* { dg-warning \"flag\" \"bad %Eu\" } */\n+  strftime (s, m, \"%EU\", tp); /* { dg-warning \"flag\" \"bad %EU\" } */\n+  strftime (s, m, \"%EV\", tp); /* { dg-warning \"flag\" \"bad %EV\" } */\n+  strftime (s, m, \"%Ew\", tp); /* { dg-warning \"flag\" \"bad %Ew\" } */\n+  strftime (s, m, \"%EW\", tp); /* { dg-warning \"flag\" \"bad %EW\" } */\n+  strftime (s, m, \"%Ez\", tp); /* { dg-warning \"flag\" \"bad %Ez\" } */\n+  strftime (s, m, \"%EZ\", tp); /* { dg-warning \"flag\" \"bad %EZ\" } */\n+  strftime (s, m, \"%E%\", tp); /* { dg-warning \"flag\" \"bad %E%\" } */\n+  strftime (s, m, \"%Oa\", tp); /* { dg-warning \"flag\" \"bad %Oa\" } */\n+  strftime (s, m, \"%OA\", tp); /* { dg-warning \"flag\" \"bad %OA\" } */\n+  strftime (s, m, \"%Ob\", tp); /* { dg-warning \"flag\" \"bad %Ob\" } */\n+  strftime (s, m, \"%OB\", tp); /* { dg-warning \"flag\" \"bad %OB\" } */\n+  strftime (s, m, \"%Oc\", tp); /* { dg-warning \"flag\" \"bad %Oc\" } */\n+  /* { dg-warning \"in some locales\" \"2-digit year\" { target *-*-* } 75 } */\n+  strftime (s, m, \"%OC\", tp); /* { dg-warning \"flag|C\" \"bad %OC\" } */\n+  strftime (s, m, \"%OD\", tp); /* { dg-warning \"flag\" \"bad %OD\" } */\n+  /* { dg-warning \"only last 2\" \"2-digit year\" { target *-*-* } 78 } */\n+  strftime (s, m, \"%OF\", tp); /* { dg-warning \"flag\" \"bad %OF\" } */\n+  strftime (s, m, \"%Og\", tp); /* { dg-warning \"flag|C\" \"bad %Og\" } */\n+  /* { dg-warning \"only last 2\" \"2-digit year\" { target *-*-* } 81 } */\n+  strftime (s, m, \"%OG\", tp); /* { dg-warning \"flag|C\" \"bad %OG\" } */\n+  strftime (s, m, \"%Oh\", tp); /* { dg-warning \"flag\" \"bad %Oh\" } */\n+  strftime (s, m, \"%Oj\", tp); /* { dg-warning \"flag|C\" \"bad %Oj\" } */\n+  strftime (s, m, \"%On\", tp); /* { dg-warning \"flag\" \"bad %On\" } */\n+  strftime (s, m, \"%Op\", tp); /* { dg-warning \"flag\" \"bad %Op\" } */\n+  strftime (s, m, \"%Or\", tp); /* { dg-warning \"flag\" \"bad %Or\" } */\n+  strftime (s, m, \"%OR\", tp); /* { dg-warning \"flag\" \"bad %OR\" } */\n+  strftime (s, m, \"%Ot\", tp); /* { dg-warning \"flag\" \"bad %Ot\" } */\n+  strftime (s, m, \"%OT\", tp); /* { dg-warning \"flag\" \"bad %OT\" } */\n+  strftime (s, m, \"%Ox\", tp); /* { dg-warning \"flag\" \"bad %Ox\" } */\n+  /* { dg-warning \"in some locales\" \"2-digit year\" { target *-*-* } 92 } */\n+  strftime (s, m, \"%OX\", tp); /* { dg-warning \"flag\" \"bad %OX\" } */\n+  strftime (s, m, \"%OY\", tp); /* { dg-warning \"flag|C\" \"bad %OY\" } */\n+  strftime (s, m, \"%Oz\", tp); /* { dg-warning \"flag|C\" \"bad %Oz\" } */\n+  strftime (s, m, \"%OZ\", tp); /* { dg-warning \"flag\" \"bad %OZ\" } */\n+  strftime (s, m, \"%O%\", tp); /* { dg-warning \"flag\" \"bad %O%\" } */\n+}"}, {"sha": "45d8ef423f351de3b3c4f0b8b385f1f11cee2955", "filename": "gcc/testsuite/gcc.dg/c99-strftime-2.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-strftime-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e4d0281ae88c40a0fe188a426b22492f9aa163/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-strftime-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-strftime-2.c?ref=23e4d0281ae88c40a0fe188a426b22492f9aa163", "patch": "@@ -0,0 +1,27 @@\n+/* Test for strftime formats.  Rejection of extensions in pedantic mode.  */\n+/* Origin: Joseph Myers <jsm28@cam.ac.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic -Wformat\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+struct tm;\n+\n+extern size_t strftime (char *, size_t, const char *, const struct tm *);\n+\n+void\n+foo (char *s, size_t m, const struct tm *tp)\n+{\n+  /* %P is a lowercase version of %p.  */\n+  strftime (s, m, \"%P\", tp); /* { dg-warning \"C\" \"strftime %P\" } */\n+  /* %k is %H but padded with a space rather than 0 if necessary.  */\n+  strftime (s, m, \"%k\", tp); /* { dg-warning \"C\" \"strftime %k\" } */\n+  /* %l is %I but padded with a space rather than 0 if necessary.  */\n+  strftime (s, m, \"%l\", tp); /* { dg-warning \"C\" \"strftime %l\" } */\n+  /* %s is the number of seconds since the Epoch.  */\n+  strftime (s, m, \"%s\", tp); /* { dg-warning \"C\" \"strftime %s\" } */\n+  /* Extensions using %O already tested in c99-strftime-1.c.  */\n+  /* Width and flags are GNU extensions for strftime.  */\n+  strftime (s, m, \"%20Y\", tp); /* { dg-warning \"C\" \"strftime width\" } */\n+  strftime (s, m, \"%^A\", tp); /* { dg-warning \"C\" \"strftime flags\" } */\n+}"}]}