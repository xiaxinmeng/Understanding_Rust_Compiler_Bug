{"sha": "2b23d3b1b7096566ebd73f58511d2fd14fa5fca5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIyM2QzYjFiNzA5NjU2NmViZDczZjU4NTExZDJmZDE0ZmE1ZmNhNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "1998-09-24T22:30:05Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "1998-09-24T22:30:05Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r22581", "tree": {"sha": "6214ff1bae2ae16e91cceaa74210ede5f5488cb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6214ff1bae2ae16e91cceaa74210ede5f5488cb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b23d3b1b7096566ebd73f58511d2fd14fa5fca5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b23d3b1b7096566ebd73f58511d2fd14fa5fca5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b23d3b1b7096566ebd73f58511d2fd14fa5fca5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b23d3b1b7096566ebd73f58511d2fd14fa5fca5/comments", "author": null, "committer": null, "parents": [{"sha": "9a4690080e01ff43f451ba8e8f1df3ee16ce7da4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4690080e01ff43f451ba8e8f1df3ee16ce7da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4690080e01ff43f451ba8e8f1df3ee16ce7da4"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "92ad7390731fe419d326fad44757dd4a07ca6bf8", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/tem05.C", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b23d3b1b7096566ebd73f58511d2fd14fa5fca5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem05.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b23d3b1b7096566ebd73f58511d2fd14fa5fca5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem05.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem05.C?ref=2b23d3b1b7096566ebd73f58511d2fd14fa5fca5", "patch": "@@ -0,0 +1,58 @@\n+// 980924 bkoz\n+// just a quick test for export, to make sure we are warning for it.\n+// CHANGE ME when it's supported\n+// Build don't link: \n+\n+\n+// 14 Templates\n+//p 6\n+// A namespace-scope declaration or definintion of a non-line function\n+// template, a non-inline member function template, a non-inline\n+// member function of a class template or a static data member of a\n+// class template may be preceeded by the export keyword. If such a\n+// template is defined in the same translation unit in which it is\n+// declared as exported, the definition is considered to be\n+// exported. The first declaration of the template containing the\n+// export keyword must not follow the definition. (meaning that export\n+// can't beredeclared as non-export??)\n+\n+// 1\n+// template definition\n+export template <class T>  // WARNING - \n+bool templ_one(T a) {\n+   if (a > 0)\n+     return true;\n+   else\n+     return false;\n+}\n+\n+\n+// 2\n+// static data, mf, mf template\n+template <class T>\n+class X_one {\n+  unsigned short\tid;\n+  T\ttype;\n+public:\n+  static const bool \tis_specialized ;\n+\n+  X_one(const unsigned short& us = 5): id(us), type(T(0)) {}\n+  unsigned short ret_id ();\n+  template <class T2> bool compare_ge(T2 test);\n+};\n+\n+export template <class T> // WARNING - \n+const bool X_one<T>::is_specialized = false;\n+\n+export template <class T> // WARNING - \n+unsigned short X_one<T>::ret_id() {\n+  return id;\n+}\n+\n+export template <class T> template <class T2> // WARNING - \n+bool compare_ge(T2 test) {\n+  if (test > type)\n+    return true;\n+  return false;\n+}\n+"}]}