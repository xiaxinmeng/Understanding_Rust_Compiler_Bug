{"sha": "75153fba81d4bb413428631ff087e430a604a667", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUxNTNmYmE4MWQ0YmI0MTM0Mjg2MzFmZjA4N2U0MzBhNjA0YTY2Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-05-20T12:21:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-05-20T12:21:15Z"}, "message": "new\n\nFrom-SVN: r27064", "tree": {"sha": "5dda928f0732faece693b076b793bde4e9867391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dda928f0732faece693b076b793bde4e9867391"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75153fba81d4bb413428631ff087e430a604a667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75153fba81d4bb413428631ff087e430a604a667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75153fba81d4bb413428631ff087e430a604a667", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75153fba81d4bb413428631ff087e430a604a667/comments", "author": null, "committer": null, "parents": [{"sha": "06126ca285bb5ec114d8a1c2db4de6c6d8e96d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06126ca285bb5ec114d8a1c2db4de6c6d8e96d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06126ca285bb5ec114d8a1c2db4de6c6d8e96d1d"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "78d99e6c357408f49c71f8957abad84c80857a68", "filename": "gcc/testsuite/g++.old-deja/g++.ext/com1.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75153fba81d4bb413428631ff087e430a604a667/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fcom1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75153fba81d4bb413428631ff087e430a604a667/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fcom1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fcom1.C?ref=75153fba81d4bb413428631ff087e430a604a667", "patch": "@@ -0,0 +1,24 @@\n+// Test that we can use mixins with COM classes.\n+\n+struct A\n+{\n+  virtual int foo () = 0;\n+  virtual int bar () = 0;\n+} __attribute__((__com_interface__));\n+\n+struct B\n+{\n+  virtual int baz () { return 5; }\n+};\n+\n+struct C : public A, public B\n+{\n+  int foo () { return 0; }\n+  int bar () { return 1; }\n+};\n+\n+int main ()\n+{\n+  C c;\n+  return c.foo ();\n+}          "}, {"sha": "f22290d31407e49c68f7fbb09adea5d872986e53", "filename": "gcc/testsuite/g++.old-deja/g++.ext/initp1.C", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75153fba81d4bb413428631ff087e430a604a667/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finitp1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75153fba81d4bb413428631ff087e430a604a667/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finitp1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Finitp1.C?ref=75153fba81d4bb413428631ff087e430a604a667", "patch": "@@ -0,0 +1,90 @@\n+// Test for proper handling of the init_priority attribute.\n+// Contributed by Hugo Tyson <hmt@cygnus.co.uk>\n+\n+class Two {\n+private:\n+    int i, j, k;\n+public:\n+    static int count;\n+    Two( int ii, int jj ) { i = ii; j = jj; k = count++; };\n+    Two( void )           { i =  0; j =  0; k = count++; };\n+    int eye( void ) { return i; };\n+    int jay( void ) { return j; };\n+    int kay( void ) { return k; };\n+};\n+\n+extern Two foo;\n+extern Two goo;\n+extern Two coo[];\n+extern Two koo[];\n+\n+Two foo( 5, 6 ) __attribute__((init_priority(1005)));\n+\n+Two goo __attribute__((init_priority(1007))) = Two( 7, 8 );\n+\n+Two doo[ 3 ];\n+\n+Two hoo[ 3 ] = {\n+    Two( 11, 12 ),\n+    Two( 13, 14 ),\n+    Two( 15, 16 )\n+};\n+\n+Two coo[ 3 ] __attribute__((init_priority(1000)));\n+\n+Two koo[ 3 ] __attribute__((init_priority(1000))) = {\n+    Two( 21, 22 ),\n+    Two( 23, 24 ),\n+    Two( 25, 26 )\n+};\n+\n+Two xoo[ 3 ] __attribute__((init_priority(1100)));\n+\n+Two zoo[ 3 ] __attribute__((init_priority(1100))) = {\n+    Two( 31, 32 ),\n+    Two( 33, 34 ),\n+    Two( 35, 36 )\n+};\n+\n+int Two::count;\n+\n+int x = 0;\n+\n+#define X( n ) \\\n+  do { if ( x & (1 << (n)) ) return 1; else x |= (1 << (n)); } while (0)\n+\n+int main()\n+{\n+\n+    X( coo[0].kay() );\n+    X( coo[1].kay() );\n+    X( coo[2].kay() );\n+    X( koo[0].kay() );\n+    X( koo[1].kay() );\n+    X( koo[2].kay() );\n+    if ( 0x3f != x ) return 1;\n+\n+    X( foo.kay() );\n+    if ( 0x7f != x ) return 1;\n+\n+    X( goo.kay() );\n+    if ( 0xff != x ) return 1;\n+\n+    X( xoo[0].kay() );\n+    X( xoo[1].kay() );\n+    X( xoo[2].kay() );\n+    X( zoo[0].kay() );\n+    X( zoo[1].kay() );\n+    X( zoo[2].kay() );\n+    if ( 0x3fff != x ) return 1;\n+\n+    X( doo[0].kay() );\n+    X( doo[1].kay() );\n+    X( doo[2].kay() );\n+    X( hoo[0].kay() );\n+    X( hoo[1].kay() );\n+    X( hoo[2].kay() );\n+    if ( 0xfffff != x ) return 1;\n+\n+    return 0;\n+}"}]}