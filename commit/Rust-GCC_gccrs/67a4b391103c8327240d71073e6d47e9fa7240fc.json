{"sha": "67a4b391103c8327240d71073e6d47e9fa7240fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdhNGIzOTExMDNjODMyNzI0MGQ3MTA3M2U2ZDQ3ZTlmYTcyNDBmYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2006-05-08T03:43:07Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2006-05-08T03:43:07Z"}, "message": "re PR target/24879 ([4.1]: SSE3 monitor intrinsic doesn't work in 64bit)\n\ngcc/\n\n2006-05-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/24879\n\t* config/i386/pmmintrin.h (_mm_monitor): Remove macro. Use\n\tinline function.\n\t(_mm_mwait): Likewise.\n\n\t* config/i386/sse.md (sse3_mwait): Replace \"mwait\\t%0, %1\" with\n\t\"mwait\".\n\t(sse3_monitor): Make it 32bit only.\n\t(sse3_monitor64): New. 64bit monitor.\n\ngcc/testsuite/\n\n2006-05-07  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/24879\n\t* gcc.target/i386/monitor.c: New file.\n\nFrom-SVN: r113617", "tree": {"sha": "a7a03ed8ac9ba3fd89baa220716806dcfd30ccd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7a03ed8ac9ba3fd89baa220716806dcfd30ccd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67a4b391103c8327240d71073e6d47e9fa7240fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67a4b391103c8327240d71073e6d47e9fa7240fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67a4b391103c8327240d71073e6d47e9fa7240fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67a4b391103c8327240d71073e6d47e9fa7240fc/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b913ffcd3679b7ab579592aa7ed57e512f2699c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b913ffcd3679b7ab579592aa7ed57e512f2699c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b913ffcd3679b7ab579592aa7ed57e512f2699c"}], "stats": {"total": 72, "additions": 63, "deletions": 9}, "files": [{"sha": "4882a2010aac3d92ac3c1a608e0f04d2bd58b297", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67a4b391103c8327240d71073e6d47e9fa7240fc", "patch": "@@ -1,3 +1,15 @@\n+2006-05-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/24879\n+\t* config/i386/pmmintrin.h (_mm_monitor): Remove macro. Use\n+\tinline function.\n+\t(_mm_mwait): Likewise.\n+\n+\t* config/i386/sse.md (sse3_mwait): Replace \"mwait\\t%0, %1\" with\n+\t\"mwait\".\n+\t(sse3_monitor): Make it 32bit only.\n+\t(sse3_monitor64): New. 64bit monitor.\n+\n 2006-05-07  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR target/27421"}, {"sha": "7dbf03043fbc1561eee6eb028963a68515d34ba2", "filename": "gcc/config/i386/pmmintrin.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2Fconfig%2Fi386%2Fpmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2Fconfig%2Fi386%2Fpmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpmmintrin.h?ref=67a4b391103c8327240d71073e6d47e9fa7240fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n+/* Copyright (C) 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -25,7 +25,7 @@\n    Public License.  */\n \n /* Implemented from the specification included in the Intel C++ Compiler\n-   User Guide and Reference, version 8.0.  */\n+   User Guide and Reference, version 9.0.  */\n \n #ifndef _PMMINTRIN_H_INCLUDED\n #define _PMMINTRIN_H_INCLUDED\n@@ -110,7 +110,6 @@ _mm_lddqu_si128 (__m128i const *__P)\n   return (__m128i) __builtin_ia32_lddqu ((char const *)__P);\n }\n \n-#if 0\n static __inline void __attribute__((__always_inline__))\n _mm_monitor (void const * __P, unsigned int __E, unsigned int __H)\n {\n@@ -122,10 +121,6 @@ _mm_mwait (unsigned int __E, unsigned int __H)\n {\n   __builtin_ia32_mwait (__E, __H);\n }\n-#else\n-#define _mm_monitor(P, E, H)\t__builtin_ia32_monitor ((P), (E), (H))\n-#define _mm_mwait(E, H)\t\t__builtin_ia32_mwait ((E), (H))\n-#endif\n \n #endif /* __SSE3__ */\n "}, {"sha": "ed36276c5898fc3f999faf294e41c4dd21f74e7b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=67a4b391103c8327240d71073e6d47e9fa7240fc", "patch": "@@ -3972,14 +3972,29 @@\n \t\t     (match_operand:SI 1 \"register_operand\" \"c\")]\n \t\t    UNSPECV_MWAIT)]\n   \"TARGET_SSE3\"\n-  \"mwait\\t%0, %1\"\n+;; 64bit version is \"mwait %rax,%rcx\". But only lower 32bits are used.\n+;; Since 32bit register operands are implicitly zero extended to 64bit,\n+;; we only need to set up 32bit registers.\n+  \"mwait\"\n   [(set_attr \"length\" \"3\")])\n \n (define_insn \"sse3_monitor\"\n   [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"a\")\n \t\t     (match_operand:SI 1 \"register_operand\" \"c\")\n \t\t     (match_operand:SI 2 \"register_operand\" \"d\")]\n \t\t    UNSPECV_MONITOR)]\n-  \"TARGET_SSE3\"\n+  \"TARGET_SSE3 && !TARGET_64BIT\"\n   \"monitor\\t%0, %1, %2\"\n   [(set_attr \"length\" \"3\")])\n+\n+(define_insn \"sse3_monitor64\"\n+  [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"a\")\n+\t\t     (match_operand:SI 1 \"register_operand\" \"c\")\n+\t\t     (match_operand:SI 2 \"register_operand\" \"d\")]\n+\t\t    UNSPECV_MONITOR)]\n+  \"TARGET_SSE3 && TARGET_64BIT\"\n+;; 64bit version is \"monitor %rax,%rcx,%rdx\". But only lower 32bits in\n+;; RCX and RDX are used.  Since 32bit register operands are implicitly\n+;; zero extended to 64bit, we only need to set up 32bit registers.\n+  \"monitor\"\n+  [(set_attr \"length\" \"3\")])"}, {"sha": "5da14b52b9c57887ce35b6ec471ee6b16e95f8c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67a4b391103c8327240d71073e6d47e9fa7240fc", "patch": "@@ -1,3 +1,8 @@\n+2006-05-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/24879\n+\t* gcc.target/i386/monitor.c: New file.\n+\n 2006-05-08  Alan Modra  <amodra@bigpond.net.au>\n \n \t* gcc.dg/pr27095.c: xfail *-*-darwin*."}, {"sha": "d98a2fd24af369b86b6baa0bb85d8dd91563c3fd", "filename": "gcc/testsuite/gcc.target/i386/monitor.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmonitor.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67a4b391103c8327240d71073e6d47e9fa7240fc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmonitor.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmonitor.c?ref=67a4b391103c8327240d71073e6d47e9fa7240fc", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -msse3\" } */\n+\n+/* Verify that they work in both 32bit and 64bit.  */\n+\n+#include <pmmintrin.h>\n+\n+void\n+foo (char *p, int x, int y, int z)\n+{\n+   _mm_monitor (p, y, x);\n+   _mm_mwait (z, y);\n+}\n+\n+void\n+bar (char *p, long x, long y, long z)\n+{\n+   _mm_monitor (p, y, x);\n+   _mm_mwait (z, y);\n+}\n+\n+void\n+foo1 (char *p)\n+{\n+   _mm_monitor (p, 0, 0);\n+   _mm_mwait (0, 0);\n+}"}]}