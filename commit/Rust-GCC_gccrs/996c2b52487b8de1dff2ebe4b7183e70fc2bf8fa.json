{"sha": "996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk2YzJiNTI0ODdiOGRlMWRmZjJlYmU0YjcxODNlNzBmYzJiZjhmYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-09-17T07:01:11Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-09-17T07:01:11Z"}, "message": "re PR c++/16002 (Strange error message with new parser)\n\n\tPR c++/16002\n\t* parser.c (cp_parser_simple_declaration): Commit to tentative\n\tparses after seeing a decl-specifier.\n\t(cp_parser_simple_declaration): Eliminate spurious message.\n\t(cp_parser_init_declarator): Adjust error message.\n\n\tPR c++/16029\n\t* lex.c (unqualified_name_lookup_error): Mark the dummy\n\tdeclaration as used.\n\n\tPR c++/16002\n\t* g++.dg/template/error18.C: New test.\n\n\tPR c++/16029\n\t* g++.dg/warn/Wunused-8.C: New test.\n\nFrom-SVN: r87633", "tree": {"sha": "31d8b36fa313f0878513ac28178a92704ead8962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31d8b36fa313f0878513ac28178a92704ead8962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/comments", "author": null, "committer": null, "parents": [{"sha": "275a4187085d13c53f0cb27ca74d3d73cebd58f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/275a4187085d13c53f0cb27ca74d3d73cebd58f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/275a4187085d13c53f0cb27ca74d3d73cebd58f9"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "1a862ad9c662a68112122bcffe9407396c185286", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "patch": "@@ -1,5 +1,15 @@\n 2004-09-16  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/16002\n+\t* parser.c (cp_parser_simple_declaration): Commit to tentative\n+\tparses after seeing a decl-specifier.\n+\t(cp_parser_simple_declaration): Eliminate spurious message.\n+\t(cp_parser_init_declarator): Adjust error message.\n+\n+\tPR c++/16029\n+\t* lex.c (unqualified_name_lookup_error): Mark the dummy\n+\tdeclaration as used.\n+\n \tPR c++/17501\n \t* parser.c (cp_parser_nested_name_specifier): Do not resolve\n \ttypename types if the user explicitly said \"typename\"."}, {"sha": "4fa1645d6a2ed8d69ffc9d47428fa326d9b6dc79", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "patch": "@@ -572,6 +572,9 @@ unqualified_name_lookup_error (tree name)\n \t  decl = build_decl (VAR_DECL, name, error_mark_node);\n \t  DECL_CONTEXT (decl) = current_function_decl;\n \t  push_local_binding (name, decl, 0);\n+\t  /* Mark the variable as used so that we do not get warnings\n+\t     about it being unused later.  */\n+\t  TREE_USED (decl) = 1;\n \t}\n     }\n "}, {"sha": "d4b12aadfd6226d045c74db0c39b2b89c9e2aae1", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "patch": "@@ -7026,6 +7026,13 @@ cp_parser_simple_declaration (cp_parser* parser,\n       /* Give up.  */\n       goto done;\n     }\n+  \n+  /* If we have seen at least one decl-specifier, and the next token\n+     is not a parenthesis, then we must be looking at a declaration.\n+     (After \"int (\" we might be looking at a functional cast.)  */\n+  if (decl_specifiers.any_specifiers_p \n+      && cp_lexer_next_token_is_not (parser->lexer, CPP_OPEN_PAREN))\n+    cp_parser_commit_to_tentative_parse (parser);\n \n   /* Keep going until we hit the `;' at the end of the simple\n      declaration.  */\n@@ -7079,7 +7086,12 @@ cp_parser_simple_declaration (cp_parser* parser,\n       /* Anything else is an error.  */\n       else\n \t{\n-\t  cp_parser_error (parser, \"expected `,' or `;'\");\n+\t  /* If we have already issued an error message we don't need\n+\t     to issue another one.  */\n+\t  if (decl != error_mark_node\n+\t      || (cp_parser_parsing_tentatively (parser)\n+\t\t  && !cp_parser_committed_to_tentative_parse (parser)))\n+\t    cp_parser_error (parser, \"expected `,' or `;'\");\n \t  /* Skip tokens until we reach the end of the statement.  */\n \t  cp_parser_skip_to_end_of_statement (parser);\n \t  /* If the next token is now a `;', consume it.  */\n@@ -10641,7 +10653,7 @@ cp_parser_init_declarator (cp_parser* parser,\n       && token->type != CPP_COMMA\n       && token->type != CPP_SEMICOLON)\n     {\n-      cp_parser_error (parser, \"expected init-declarator\");\n+      cp_parser_error (parser, \"expected initializer\");\n       return error_mark_node;\n     }\n "}, {"sha": "d03730861cdd818d9ee46f8fcd926946ecc16aba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "patch": "@@ -1,3 +1,11 @@\n+2004-09-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/16002\n+\t* g++.dg/template/error18.C: New test.\n+\t\n+\tPR c++/16029\n+\t* g++.dg/warn/Wunused-8.C: New test.\n+\n 2004-09-17  Steven Bosscher  <stevenb@suse.de>\n \n \tPR tree-optimization/17513"}, {"sha": "363aae99879840f918f9595bf56651423ebe7baa", "filename": "gcc/testsuite/g++.dg/parse/error18.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror18.C?ref=996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/16002\n+\n+void f()\n+{\n+  double Q *= 5.0; // { dg-error \"initializer\" }\n+}\n+"}, {"sha": "a1c8a1fb4268b8ad7f845f0d41ca11cfe5040d18", "filename": "gcc/testsuite/g++.dg/warn/Wunused-8.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-8.C?ref=996c2b52487b8de1dff2ebe4b7183e70fc2bf8fa", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/16029\n+// { dg-options \"-Wunused\" }\n+\n+int main ()\n+{\n+  // We should not see an \"unused\" warning about \"whatever\" on the\n+  // next line.\n+  return whatever (); // { dg-error \"declared\" }\n+}"}]}