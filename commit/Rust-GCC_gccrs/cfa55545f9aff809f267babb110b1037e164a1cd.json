{"sha": "cfa55545f9aff809f267babb110b1037e164a1cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZhNTU1NDVmOWFmZjgwOWYyNjdiYWJiMTEwYjEwMzdlMTY0YTFjZA==", "commit": {"author": {"name": "Bilyan Borisov", "email": "bilyan.borisov@arm.com", "date": "2015-11-24T11:22:48Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2015-11-24T11:22:48Z"}, "message": "[AARCH64][PATCH 3/3] Adding tests to check proper error reporting of out of...\n\n[AARCH64][PATCH 3/3] Adding tests to check proper error reporting of out\nof bounds accesses to vmulx_lane* NEON intrinsics\n\ngcc/testsuite/\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulx_lane_f32_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulx_lane_f64_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulx_laneq_f32_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulx_laneq_f64_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulxd_lane_f64_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulxd_laneq_f64_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulxq_lane_f32_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulxq_lane_f64_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulxq_laneq_f32_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulxq_laneq_f64_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulxs_lane_f32_indices_1.c:\n\tNew.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmulxs_laneq_f32_indices_1.c:\n\tNew.\n\nFrom-SVN: r230800", "tree": {"sha": "7c3a45f56eba248052d7407219d45591f1fba9d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c3a45f56eba248052d7407219d45591f1fba9d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfa55545f9aff809f267babb110b1037e164a1cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa55545f9aff809f267babb110b1037e164a1cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfa55545f9aff809f267babb110b1037e164a1cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa55545f9aff809f267babb110b1037e164a1cd/comments", "author": null, "committer": null, "parents": [{"sha": "895548a571810f574a7f2a5ebdf6efa3250fa993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/895548a571810f574a7f2a5ebdf6efa3250fa993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/895548a571810f574a7f2a5ebdf6efa3250fa993"}], "stats": {"total": 219, "additions": 219, "deletions": 0}, "files": [{"sha": "2b31f8c71b29ba917367e6a91f8d8557ba6d8aed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -1,3 +1,30 @@\n+2015-11-24  Bilyan Borisov  <bilyan.borisov@arm.com>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulx_lane_f32_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulx_lane_f64_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulx_laneq_f32_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulx_laneq_f64_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulxd_lane_f64_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulxd_laneq_f64_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulxq_lane_f32_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulxq_lane_f64_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulxq_laneq_f32_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulxq_laneq_f64_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulxs_lane_f32_indices_1.c:\n+\tNew.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmulxs_laneq_f32_indices_1.c:\n+\tNew.\n+\n 2015-11-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR middle-end/68375"}, {"sha": "1494633e606d7b9b77d913dbc99b1a127cc9b661", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulx_lane_f32_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_lane_f32_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float32x2_t\n+f_vmulx_lane_f32 (float32x2_t v1, float32x2_t v2)\n+{\n+  float32x2_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n+  res = vmulx_lane_f32 (v1, v2, -1);\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n+  res = vmulx_lane_f32 (v1, v2, 2);\n+  return res;\n+}"}, {"sha": "3fdb557d1bd708c4a0dc0c4311f542adafedf4f5", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulx_lane_f64_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_lane_f64_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float64x1_t\n+f_vmulx_lane_f64 (float64x1_t v1, float64x1_t v2)\n+{\n+  float64x1_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n+  res = vmulx_lane_f64 (v1, v2, -1);\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" { target *-*-* } 0 } */\n+  res = vmulx_lane_f64 (v1, v2, 1);\n+  return res;\n+}"}, {"sha": "1f8dfd0a097dff16304eff239e484bc765e38902", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulx_laneq_f32_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_laneq_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_laneq_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_laneq_f32_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float32x2_t\n+f_vmulx_laneq_f32 (float32x2_t v1, float32x4_t v2)\n+{\n+  float32x2_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" {target *-*-*} 0 } */\n+  res = vmulx_laneq_f32 (v1, v2, -1);\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" {target *-*-*} 0 } */\n+  res = vmulx_laneq_f32 (v1, v2, 4);\n+  return res;\n+}"}, {"sha": "8d54ebe74a9c187d7dcde860099ae6e2c674e399", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulx_laneq_f64_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_laneq_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_laneq_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulx_laneq_f64_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float64x1_t\n+f_vmulx_laneq_f64 (float64x1_t v1, float64x2_t v2)\n+{\n+  float64x1_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" {target *-*-*} 0 } */\n+  res = vmulx_laneq_f64 (v1, v2, -1);\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" {target *-*-*} 0 } */\n+  res = vmulx_laneq_f64 (v1, v2, 2);\n+  return res;\n+}"}, {"sha": "0db5cd0f73e1c34552487501ae351d72a74159b1", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulxd_lane_f64_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxd_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxd_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxd_lane_f64_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float64_t\n+f_vmulxd_lane_f64 (float64_t v1, float64x1_t v2)\n+{\n+  float64_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" {target *-*-*} 0 } */\n+  res = vmulxd_lane_f64 (v1, v2, -1);\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" {target *-*-*} 0 } */\n+  res = vmulxd_lane_f64 (v1, v2, 1);\n+  return res;\n+}"}, {"sha": "6df1a0d55b31e382c5272cddde155132e5800d2b", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulxd_laneq_f64_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxd_laneq_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxd_laneq_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxd_laneq_f64_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float64_t\n+f_vmulxd_laneq_f64 (float64_t v1, float64x2_t v2)\n+{\n+  float64_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" {target *-*-*} 0 } */\n+  res = vmulxd_laneq_f64 (v1, v2, -1);\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" {target *-*-*} 0 } */\n+  res = vmulxd_laneq_f64 (v1, v2, 2);\n+  return res;\n+}"}, {"sha": "3fee966230d12e54213ab79a86d37059785cd40e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulxq_lane_f32_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_lane_f32_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float32x4_t\n+f_vmulxq_lane_f32 (float32x4_t v1, float32x2_t v2)\n+{\n+  float32x4_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n+  res = vmulxq_lane_f32 (v1, v2, -1);\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" { target *-*-* } 0 } */\n+  res = vmulxq_lane_f32 (v1, v2, 2);\n+  return res;\n+}"}, {"sha": "2acddf2e8869557574742a8563bf3af4c008e43a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulxq_lane_f64_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_lane_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_lane_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_lane_f64_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float64x2_t\n+f_vmulxq_lane_f64 (float64x2_t v1, float64x1_t v2)\n+{\n+  float64x2_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 0\" \"\" {target *-*-*} 0 } */\n+  res = vmulxq_lane_f64 (v1, v2, -1);\n+  /* { dg-error \"lane 1 out of range 0 - 0\" \"\" {target *-*-*} 0 } */\n+  res = vmulxq_lane_f64 (v1, v2, 1);\n+  return res;\n+}"}, {"sha": "bbd3e00c844fdda45dff03d085ee86c13992f81e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulxq_laneq_f32_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_laneq_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_laneq_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_laneq_f32_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float32x4_t\n+f_vmulxq_laneq_f32 (float32x4_t v1, float32x4_t v2)\n+{\n+  float32x4_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" {target *-*-*} 0 } */\n+  res = vmulxq_laneq_f32 (v1, v2, -1);\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" {target *-*-*} 0 } */\n+  res = vmulxq_laneq_f32 (v1, v2, 4);\n+  return res;\n+}"}, {"sha": "0284193c42f1fb62f9a4028e8bf9f5967d8f6633", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulxq_laneq_f64_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_laneq_f64_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_laneq_f64_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxq_laneq_f64_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float64x2_t\n+f_vmulxq_laneq_f64 (float64x2_t v1, float64x2_t v2)\n+{\n+  float64x2_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" {target *-*-*} 0 } */\n+  res = vmulxq_laneq_f64 (v1, v2, -1);\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" {target *-*-*} 0 } */\n+  res = vmulxq_laneq_f64 (v1, v2, 2);\n+  return res;\n+}"}, {"sha": "73a6e7110fb35c309faffe889f4c3ad4a4026bb3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulxs_lane_f32_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxs_lane_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxs_lane_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxs_lane_f32_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float32_t\n+f_vmulxs_lane_f32 (float32_t v1, float32x2_t v2)\n+{\n+  float32_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 1\" \"\" {target *-*-*} 0 } */\n+  res = vmulxs_lane_f32 (v1, v2, -1);\n+  /* { dg-error \"lane 2 out of range 0 - 1\" \"\" {target *-*-*} 0 } */\n+  res = vmulxs_lane_f32 (v1, v2, 2);\n+  return res;\n+}"}, {"sha": "132ffb1c09648c437b326f978cea22987cf76415", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmulxs_laneq_f32_indices_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxs_laneq_f32_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa55545f9aff809f267babb110b1037e164a1cd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxs_laneq_f32_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmulxs_laneq_f32_indices_1.c?ref=cfa55545f9aff809f267babb110b1037e164a1cd", "patch": "@@ -0,0 +1,16 @@\n+#include <arm_neon.h>\n+\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-skip-if \"\" { arm*-*-* } } */\n+\n+float32_t\n+f_vmulxs_laneq_f32 (float32_t v1, float32x4_t v2)\n+{\n+  float32_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" {target *-*-*} 0 } */\n+  res = vmulxs_laneq_f32 (v1, v2, -1);\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" {target *-*-*} 0 } */\n+  res = vmulxs_laneq_f32 (v1, v2, 4);\n+  return res;\n+}"}]}