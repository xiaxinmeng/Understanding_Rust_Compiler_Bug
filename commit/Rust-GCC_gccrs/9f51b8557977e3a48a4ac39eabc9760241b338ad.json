{"sha": "9f51b8557977e3a48a4ac39eabc9760241b338ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY1MWI4NTU3OTc3ZTNhNDhhNGFjMzllYWJjOTc2MDI0MWIzMzhhZA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2018-12-11T11:09:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:09:29Z"}, "message": "[Ada] Fix an ACATS regression with CCG\n\n2018-12-11  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb (In_Object_Declaration): Removed.\n\t(Is_CCG_Supported_Aggregate): New subprogram that replaces\n\tIn_Object_Declaration extending its functionality to indicate if\n\tan aggregate is in a context supported by the CCG backend.\n\nFrom-SVN: r266982", "tree": {"sha": "d7fb14e1e75eb8f2fd91fbb94c19b31b366397a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7fb14e1e75eb8f2fd91fbb94c19b31b366397a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f51b8557977e3a48a4ac39eabc9760241b338ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f51b8557977e3a48a4ac39eabc9760241b338ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f51b8557977e3a48a4ac39eabc9760241b338ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f51b8557977e3a48a4ac39eabc9760241b338ad/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3f2ff72f246cd5ad5c0352ecb2772ba89740aa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f2ff72f246cd5ad5c0352ecb2772ba89740aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f2ff72f246cd5ad5c0352ecb2772ba89740aa1"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "c07f9d0156d6223f68863015f7b88b8a896b620e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f51b8557977e3a48a4ac39eabc9760241b338ad/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f51b8557977e3a48a4ac39eabc9760241b338ad/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9f51b8557977e3a48a4ac39eabc9760241b338ad", "patch": "@@ -1,3 +1,10 @@\n+2018-12-11  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_aggr.adb (In_Object_Declaration): Removed.\n+\t(Is_CCG_Supported_Aggregate): New subprogram that replaces\n+\tIn_Object_Declaration extending its functionality to indicate if\n+\tan aggregate is in a context supported by the CCG backend.\n+\n 2018-12-11  Bob Duff  <duff@adacore.com>\n \n \t* doc/gnat_ugn/gnat_utility_programs.rst: Update gnatstub"}, {"sha": "1c1890fac7ab834b479caa6ec7e636650761a475", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f51b8557977e3a48a4ac39eabc9760241b338ad/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f51b8557977e3a48a4ac39eabc9760241b338ad/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=9f51b8557977e3a48a4ac39eabc9760241b338ad", "patch": "@@ -90,8 +90,9 @@ package body Exp_Aggr is\n    --  N is an aggregate (record or array). Checks the presence of default\n    --  initialization (<>) in any component (Ada 2005: AI-287).\n \n-   function In_Object_Declaration (N : Node_Id) return Boolean;\n-   --  Return True if N is part of an object declaration, False otherwise\n+   function Is_CCG_Supported_Aggregate (N : Node_Id) return Boolean;\n+   --  Return True if aggregate N is located in a context supported by the\n+   --  CCG backend; False otherwise.\n \n    function Is_Static_Dispatch_Table_Aggregate (N : Node_Id) return Boolean;\n    --  Returns true if N is an aggregate used to initialize the components\n@@ -4741,7 +4742,7 @@ package body Exp_Aggr is\n       --  object declaration, this is the only case where aggregates are\n       --  supported in C.\n \n-      if Modify_Tree_For_C and then not In_Object_Declaration (N) then\n+      if Modify_Tree_For_C and then not Is_CCG_Supported_Aggregate (N) then\n          return;\n       end if;\n \n@@ -7553,7 +7554,7 @@ package body Exp_Aggr is\n       --  When generating C, only generate an aggregate when declaring objects\n       --  since C does not support aggregates in e.g. assignment statements.\n \n-      elsif Modify_Tree_For_C and then not In_Object_Declaration (N) then\n+      elsif Modify_Tree_For_C and then not Is_CCG_Supported_Aggregate (N) then\n          Convert_To_Assignments (N, Typ);\n \n       --  In all other cases, build a proper aggregate to be handled by gigi\n@@ -7661,23 +7662,40 @@ package body Exp_Aggr is\n       end if;\n    end Is_Delayed_Aggregate;\n \n-   ---------------------------\n-   -- In_Object_Declaration --\n-   ---------------------------\n+   --------------------------------\n+   -- Is_CCG_Supported_Aggregate --\n+   --------------------------------\n \n-   function In_Object_Declaration (N : Node_Id) return Boolean is\n-      P : Node_Id := Parent (N);\n+   function Is_CCG_Supported_Aggregate\n+     (N : Node_Id) return Boolean\n+   is\n+      In_Obj_Decl : Boolean := False;\n+      P           : Node_Id := Parent (N);\n    begin\n       while Present (P) loop\n          if Nkind (P) = N_Object_Declaration then\n-            return True;\n+            In_Obj_Decl := True;\n          end if;\n \n          P := Parent (P);\n       end loop;\n \n+      --  Cases where aggregates are supported by the CCG backend\n+\n+      if In_Obj_Decl then\n+         if Nkind (Parent (N)) = N_Object_Declaration then\n+            return True;\n+\n+         elsif Nkind (Parent (N)) = N_Qualified_Expression\n+            and then Nkind_In (Parent (Parent (N)), N_Allocator,\n+                                                    N_Object_Declaration)\n+         then\n+            return True;\n+         end if;\n+      end if;\n+\n       return False;\n-   end In_Object_Declaration;\n+   end Is_CCG_Supported_Aggregate;\n \n    ----------------------------------------\n    -- Is_Static_Dispatch_Table_Aggregate --"}]}