{"sha": "51856718a82ce60f067910d9037ca255645b37eb", "node_id": "C_kwDOANBUbNoAKDUxODU2NzE4YTgyY2U2MGYwNjc5MTBkOTAzN2NhMjU1NjQ1YjM3ZWI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-04-12T14:55:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-04-12T14:55:15Z"}, "message": "reassoc: Fix up another ICE with returns_twice call [PR109410]\n\nThe following testcase ICEs in reassoc, unlike the last case I've fixed\nthere here SSA_NAME_USED_IN_ABNORMAL_PHI is not the case anywhere.\nbuild_and_add_sum places new statements after the later appearing definition\nof an operand but if both operands are default defs or constants, we place\nstatement at the start of the function.\n\nIf the very first statement of a function is a call to returns_twice\nfunction, this doesn't work though, because that call has to be the first\nthing in its basic block, so the following patch splits the entry successor\nedge such that the new statements are added into a different block from the\nreturns_twice call.\n\nI think we should in stage1 reconsider such placements, I think it\nunnecessarily enlarges the lifetime of the new lhs if its operand(s)\nare used more than once in the function.  Unless something sinks those\nagain.  Would be nice to place it closer to the actual uses (or where\nthey will be placed).\n\n2023-04-12  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/109410\n\t* tree-ssa-reassoc.cc (build_and_add_sum): Split edge from entry\n\tblock if first statement of the function is a call to returns_twice\n\tfunction.\n\n\t* gcc.dg/pr109410.c: New test.", "tree": {"sha": "b943e384e80ef8b6d789fb2041d76cb92db2f7d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b943e384e80ef8b6d789fb2041d76cb92db2f7d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51856718a82ce60f067910d9037ca255645b37eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51856718a82ce60f067910d9037ca255645b37eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51856718a82ce60f067910d9037ca255645b37eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51856718a82ce60f067910d9037ca255645b37eb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4073ce2c4e5584c1be58fbe76dd66285de2529bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4073ce2c4e5584c1be58fbe76dd66285de2529bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4073ce2c4e5584c1be58fbe76dd66285de2529bb"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "a6401fc100cad8f4f19d7f4481982a1ff9d4760b", "filename": "gcc/testsuite/gcc.dg/pr109410.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51856718a82ce60f067910d9037ca255645b37eb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109410.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51856718a82ce60f067910d9037ca255645b37eb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109410.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109410.c?ref=51856718a82ce60f067910d9037ca255645b37eb", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/109410 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+__attribute__((returns_twice)) int baz (int, int);\n+\n+int\n+bar (int x)\n+{\n+  return x;\n+}\n+\n+int\n+foo (int x, int y)\n+{\n+  baz (x, y);\n+  int a = bar (x);\n+  return y || a == 42 || a > 42;\n+}"}, {"sha": "067a3f07f7efddb8eef48253fe0f65a8d085e30e", "filename": "gcc/tree-ssa-reassoc.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51856718a82ce60f067910d9037ca255645b37eb/gcc%2Ftree-ssa-reassoc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51856718a82ce60f067910d9037ca255645b37eb/gcc%2Ftree-ssa-reassoc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.cc?ref=51856718a82ce60f067910d9037ca255645b37eb", "patch": "@@ -1564,6 +1564,15 @@ build_and_add_sum (tree type, tree op1, tree op2, enum tree_code opcode)\n       && (!op2def || gimple_nop_p (op2def)))\n     {\n       gsi = gsi_after_labels (single_succ (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n+      if (!gsi_end_p (gsi)\n+\t  && is_gimple_call (gsi_stmt (gsi))\n+\t  && (gimple_call_flags (gsi_stmt (gsi)) & ECF_RETURNS_TWICE))\n+\t{\n+\t  /* Don't add statements before a returns_twice call at the start\n+\t     of a function.  */\n+\t  split_edge (single_succ_edge (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n+\t  gsi = gsi_after_labels (single_succ (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n+\t}\n       if (gsi_end_p (gsi))\n \t{\n \t  gimple_stmt_iterator gsi2"}]}