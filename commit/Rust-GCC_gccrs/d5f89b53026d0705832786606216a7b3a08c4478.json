{"sha": "d5f89b53026d0705832786606216a7b3a08c4478", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVmODliNTMwMjZkMDcwNTgzMjc4NjYwNjIxNmE3YjNhMDhjNDQ3OA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2009-03-26T19:21:18Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2009-03-26T19:21:18Z"}, "message": "re PR rtl-optimization/39522 (fix for PR37514 gives FAIL: gcc.c-torture/execute/stdarg-3.c compilation,  -O3 -fomit-frame-pointer -funroll-loops  (internal compiler error))\n\n2009-03-26  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/39522\n\t* reload1.c (reload_as_needed): Invalidate reg_last_reload_reg too\n\twhen reg_reloaded_valid is set.\n\nFrom-SVN: r145093", "tree": {"sha": "2ef34201f4df14c498170cd86eb9e4b7f45f141f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ef34201f4df14c498170cd86eb9e4b7f45f141f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5f89b53026d0705832786606216a7b3a08c4478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f89b53026d0705832786606216a7b3a08c4478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f89b53026d0705832786606216a7b3a08c4478", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f89b53026d0705832786606216a7b3a08c4478/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "359b867255469491a68466f8d4258aa63ef2ff5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/359b867255469491a68466f8d4258aa63ef2ff5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/359b867255469491a68466f8d4258aa63ef2ff5c"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "947f34f30a284a86b4a90b775a4cdf193f8cce31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f89b53026d0705832786606216a7b3a08c4478/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f89b53026d0705832786606216a7b3a08c4478/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5f89b53026d0705832786606216a7b3a08c4478", "patch": "@@ -1,3 +1,9 @@\n+2009-03-26  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/39522\n+\t* reload1.c (reload_as_needed): Invalidate reg_last_reload_reg too\n+\twhen reg_reloaded_valid is set.\n+\n 2009-03-26  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/spu/divv2df3.c: New file."}, {"sha": "fcf0bd3fc4d3588e290fb12dc69a7d623762e0ef", "filename": "gcc/reload1.c", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f89b53026d0705832786606216a7b3a08c4478/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f89b53026d0705832786606216a7b3a08c4478/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=d5f89b53026d0705832786606216a7b3a08c4478", "patch": "@@ -4367,29 +4367,39 @@ reload_as_needed (int live_known)\n \t\t      SET_REGNO_REG_SET (&reg_has_output_reload,\n \t\t\t\t\t REGNO (XEXP (in_reg, 0)));\n \t\t    }\n-\t\t  else if ((code == PRE_INC || code == PRE_DEC\n-\t\t\t    || code == POST_INC || code == POST_DEC))\n+\t\t  else if (code == PRE_INC || code == PRE_DEC\n+\t\t\t   || code == POST_INC || code == POST_DEC)\n \t\t    {\n-\t\t      int in_hard_regno;\n \t\t      int in_regno = REGNO (XEXP (in_reg, 0));\n \n \t\t      if (reg_last_reload_reg[in_regno] != NULL_RTX)\n \t\t\t{\n+\t\t\t  int in_hard_regno;\n+\t\t\t  bool forget_p = true;\n+\n \t\t\t  in_hard_regno = REGNO (reg_last_reload_reg[in_regno]);\n-\t\t\t  gcc_assert (TEST_HARD_REG_BIT (reg_reloaded_valid,\n-\t\t\t\t\t\t\t in_hard_regno));\n-\t\t\t  for (x = old_prev ? NEXT_INSN (old_prev) : insn;\n-\t\t\t       x != old_next;\n-\t\t\t       x = NEXT_INSN (x))\n-\t\t\t    if (x == reg_reloaded_insn[in_hard_regno])\n-\t\t\t      break;\n+\t\t\t  if (TEST_HARD_REG_BIT (reg_reloaded_valid,\n+\t\t\t\t\t\t in_hard_regno))\n+\t\t\t    {\n+\t\t\t      for (x = old_prev ? NEXT_INSN (old_prev) : insn;\n+\t\t\t\t   x != old_next;\n+\t\t\t\t   x = NEXT_INSN (x))\n+\t\t\t\tif (x == reg_reloaded_insn[in_hard_regno])\n+\t\t\t\t  {\n+\t\t\t\t    forget_p = false;\n+\t\t\t\t    break;\n+\t\t\t\t  }\n+\t\t\t    }\n \t\t\t  /* If for some reasons, we didn't set up\n \t\t\t     reg_last_reload_reg in this insn,\n \t\t\t     invalidate inheritance from previous\n \t\t\t     insns for the incremented/decremented\n \t\t\t     register.  Such registers will be not in\n-\t\t\t     reg_has_output_reload.  */\n-\t\t\t  if (x == old_next)\n+\t\t\t     reg_has_output_reload.  Invalidate it\n+\t\t\t     also if the corresponding element in\n+\t\t\t     reg_reloaded_insn is also\n+\t\t\t     invalidated.  */\n+\t\t\t  if (forget_p)\n \t\t\t    forget_old_reloads_1 (XEXP (in_reg, 0),\n \t\t\t\t\t\t  NULL_RTX, NULL);\n \t\t\t}"}]}