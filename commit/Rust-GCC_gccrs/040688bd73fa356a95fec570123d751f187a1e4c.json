{"sha": "040688bd73fa356a95fec570123d751f187a1e4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwNjg4YmQ3M2ZhMzU2YTk1ZmVjNTcwMTIzZDc1MWYxODdhMWU0Yw==", "commit": {"author": {"name": "Geoffrey Noer", "email": "noer@cygnus.com", "date": "1998-11-04T15:25:33Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-11-04T15:25:33Z"}, "message": "Add -mno-cygwin flag that links in the mingw libraries.\n\n\t* i386/cygwin32.h (MASK_WIN32, MASK_CYGWIN, MASK_WINDOWS, MASK_DLL,\n\tTARGET_WIN32, TARGET_CYGWIN, TARGET_WINDOWS, TARGET_DLL): New.\n\t(SUBTARGET_SWITCHES): Add -mno-cygwin, -mcygwin, and -mdll options.\n\t(CPP_PREDEFINES): Don't define __CYGWIN32__ here.\n\t(STARTFILE_SPEC): Handle -mdll, -mno-cygwin options.\n\t(CPP_SPEC): Handle -mno-cygwin option.  Define __CYWIN__ in addition\n\tto __CYGWIN32__.\n\t(LIB_SPEC): Handle -mno-cyginw option.\n\t(LINK_SPEC): Handle -mdll.\n\nFrom-SVN: r23523", "tree": {"sha": "cdefc5734410f5b3c0f829ccf5782a30e45c6726", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdefc5734410f5b3c0f829ccf5782a30e45c6726"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040688bd73fa356a95fec570123d751f187a1e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040688bd73fa356a95fec570123d751f187a1e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040688bd73fa356a95fec570123d751f187a1e4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040688bd73fa356a95fec570123d751f187a1e4c/comments", "author": null, "committer": null, "parents": [{"sha": "e0d7bb0d756a0d0466394672ec48715721fc9279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d7bb0d756a0d0466394672ec48715721fc9279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d7bb0d756a0d0466394672ec48715721fc9279"}], "stats": {"total": 79, "additions": 58, "deletions": 21}, "files": [{"sha": "657025587047f106bd6e64bafab4c5c19de398ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040688bd73fa356a95fec570123d751f187a1e4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040688bd73fa356a95fec570123d751f187a1e4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=040688bd73fa356a95fec570123d751f187a1e4c", "patch": "@@ -1,3 +1,15 @@\n+Wed Nov  4 15:11:15 1998  Geoffrey Noer  <noer@cygnus.com>\n+\n+\t* i386/cygwin32.h (MASK_WIN32, MASK_CYGWIN, MASK_WINDOWS, MASK_DLL,\n+\tTARGET_WIN32, TARGET_CYGWIN, TARGET_WINDOWS, TARGET_DLL): New.\n+\t(SUBTARGET_SWITCHES): Add -mno-cygwin, -mcygwin, and -mdll options.\n+\t(CPP_PREDEFINES): Don't define __CYGWIN32__ here.\n+\t(STARTFILE_SPEC): Handle -mdll, -mno-cygwin options.\n+\t(CPP_SPEC): Handle -mno-cygwin option.  Define __CYWIN__ in addition\n+\tto __CYGWIN32__.\n+\t(LIB_SPEC): Handle -mno-cyginw option.\n+\t(LINK_SPEC): Handle -mdll.\n+\n Wed Nov  4 22:56:14 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* reload.c (find_reloads): Fix test for usage by other reload"}, {"sha": "af0b25e5917f9539eca3248966fc8b9dd8a3e823", "filename": "gcc/config/i386/cygwin32.h", "status": "modified", "additions": 46, "deletions": 21, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040688bd73fa356a95fec570123d751f187a1e4c/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040688bd73fa356a95fec570123d751f187a1e4c/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin32.h?ref=040688bd73fa356a95fec570123d751f187a1e4c", "patch": "@@ -30,6 +30,29 @@ Boston, MA 02111-1307, USA. */\n #include \"i386/gas.h\"\n #include \"dbxcoff.h\"\n \n+/* Augment TARGET_SWITCHES with the cygwin/no-cygwin options. */\n+#define MASK_WIN32 0x40000000 /* Use -lming32 interface */\n+#define MASK_CYGWIN  0x20000000 /* Use -lcygwin interface */\n+#define MASK_WINDOWS 0x10000000 /* Use windows interface */\n+#define MASK_DLL     0x08000000 /* Use dll interface    */\n+#define MASK_NOP_FUN_DLLIMPORT 0x20000 /* Ignore dllimport for functions */\n+\n+#define TARGET_WIN32             (target_flags & MASK_WIN32)\n+#define TARGET_CYGWIN            (target_flags & MASK_CYGWIN)\n+#define TARGET_WINDOWS           (target_flags & MASK_WINDOWS)\n+#define TARGET_DLL               (target_flags & MASK_DLL)\n+#define TARGET_NOP_FUN_DLLIMPORT (target_flags & MASK_NOP_FUN_DLLIMPORT)\n+\n+#undef  SUBTARGET_SWITCHES\n+#define SUBTARGET_SWITCHES \\\n+{ \"no-cygwin\",                       MASK_WIN32 }, \\\n+{ \"cygwin\",                          MASK_CYGWIN },  \\\n+{ \"windows\",                         MASK_WINDOWS }, \\\n+{ \"dll\",                             MASK_DLL },     \\\n+{ \"nop-fun-dllimport\",               MASK_NOP_FUN_DLLIMPORT }, \\\n+{ \"no-nop-fun-dllimport\",            MASK_NOP_FUN_DLLIMPORT },\n+\n+\n /* Support the __declspec keyword by turning them into attributes.\n    We currently only support: dllimport and dllexport.\n    Note that the current way we do this may result in a collision with\n@@ -43,14 +66,27 @@ Boston, MA 02111-1307, USA. */\n #endif\n \n #define CPP_PREDEFINES \"-Di386 -D_WIN32 \\\n-  -D__CYGWIN32__ -DWINNT  -D_X86_=1 -D__STDC__=1\\\n+  -DWINNT  -D_X86_=1 -D__STDC__=1\\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -D__declspec(x)=__attribute__((x)) \\\n   -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n \n+/* Normally, -lgcc is not needed since everything in it is in the DLL, but we\n+   want to allow things to be added to it when installing new versions of\n+   GCC without making a new CYGWIN.DLL, so we leave it.  Profiling is handled\n+   by calling the init function from the prologue. */\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"%{mdll: %{!mno-cygwin:dllcrt0%O%s} \\\n+                                %{mno-cygwin:dllcrt1%O%s}} \\\n+                        %{!mdll: %{!mno-cygwin:crt0%O%s} \\\n+                                 %{mno-cygwin:crt1%O%s} %{pg:gcrt0%O%s}}\"\n+\n #undef CPP_SPEC\n-#define CPP_SPEC \"-remap %(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"-remap %(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\\n+  %{!mno-cygwin:-D__CYGWIN32__ -D__CYGWIN__} \\\n+  %{mno-cygwin:-iwithprefixbefore include/mingw32 -D__MINGW32__=0.2}\"\n \n /* We have to dynamic link to get to the system DLLs.  All of libc, libm and\n    the Unix stuff is in cygwin.dll.  The import library is called\n@@ -59,36 +95,25 @@ Boston, MA 02111-1307, USA. */\n    ld, but that doesn't work just yet.  */\n \n #undef LIB_SPEC\n-#define LIB_SPEC \"%{pg:-lgmon} -lcygwin %{mwindows:-luser32 -lgdi32 -lcomdlg32}\\\n-   -lkernel32 -ladvapi32 -lshell32\"\n+#define LIB_SPEC \"%{pg:-lgmon} \\\n+                  %{!mno-cygwin:-lcygwin} \\\n+                  %{mno-cygwin:-lmingw32 -lmoldname -lcrtdll} \\\n+                  %{mwindows:-luser32 -lgdi32 -lcomdlg32} \\\n+\t\t  -lkernel32 -ladvapi32 -lshell32\"\n \n-#define LINK_SPEC \"%{mwindows:--subsystem windows}\"\n+#define LINK_SPEC \"%{mwindows:--subsystem windows} \\\n+                   %{mdll:--dll -e _DllMainCRTStartup@12}\"\n \n-/* Normally, -lgcc is not needed since everything in it is in the DLL, but we\n-   want to allow things to be added to it when installing new versions of\n-   GCC without making a new CYGWIN.DLL, so we leave it.  Profiling is handled\n-   by calling the init function from the prologue. */\n-\n-#undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{pg:gcrt0%O%s} crt0%O%s\"\n \n #define SIZE_TYPE \"unsigned int\"\n #define PTRDIFF_TYPE \"int\"\n #define WCHAR_UNSIGNED 1\n #define WCHAR_TYPE_SIZE 16\n #define WCHAR_TYPE \"short unsigned int\"\n+\n #define HAVE_ATEXIT 1\n \n \f\n-/* Ignore dllimport for functions.  */\n-#define TARGET_NOP_FUN_DLLIMPORT (target_flags & 0x20000)\n-\n-#undef SUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES \t\t\t\\\n-  { \"nop-fun-dllimport\",\t 0x20000 },\t\\\n-  { \"no-nop-fun-dllimport\",\t-0x20000 },\t\\\n-  { \"windows\",\t\t\t 0x0     },\n-\n /* Enable parsing of #pragma pack(push,<n>) and #pragma pack(pop).  */\n #define HANDLE_PRAGMA_PACK_PUSH_POP 1\n "}]}