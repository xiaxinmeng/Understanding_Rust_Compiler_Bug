{"sha": "490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkwZWQ5YmE4NDZkMTViYWJhMjQ2NDZiN2VjZjNlZDZiN2MxOWZjYg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-11T08:01:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-11T08:01:21Z"}, "message": "[Ada] Elaboration order v4.0 and infinite loops\n\nThis patch introduces binder switch -d_S which prompts the various\nphases of the elaboration order mechanism to output a short message\nconcerning their commencement and completion. The output is useful when\ntrying to determine whether a phase is stuck in an infinite loop.\n\n------------\n-- Source --\n------------\n\n--  main.adb\n\nprocedure Main is begin null; end Main;\n\n----------------------------\n-- Compilation and output --\n----------------------------\n\n$ gnatmake -q main.adb -bargs -d_S -d_V\nelaborating units...\ncollecting units...\nunits collected.\nconstructing library graph...\nvalidating library graph...\nlibrary graph validated.\nlibrary graph constructed.\nconstructing invocation graph...\nvalidating invocation graph...\ninvocation graph validated.\ninvocation graph constructed.\naugmenting library graph...\nlibrary graph augmented.\ndiscovering components...\ncomponents discovered.\nvalidating elaboration order...\nelaboration order validated.\nunits elaborated.\n\n2019-07-11  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* bindo.adb: Update the section of switches and debugging\n\telaboration issues.\n\t* bindo.ads: Add type Elaboration_Phase.\n\t* bindo-augmentors.adb: Add use clause for\n\tBindo.Writers.Phase_Writers.\n\t(Augment_Library_Graph): Signal the start and end of the\n\taubmentation phase.\n\t* bindo-builders.adb: Add with and use clause for Bindo.Writers.\n\tAdd use clause for Bindo.Writers.Phase_Writers.\n\t(Build_Invocation_Graph): Signal the start and end of the\n\tinvocation graph construction phase.\n\t(Build_Library_Graph): Signal the start and end of the library\n\tgraph construction phase.\n\t* bindo-diagnostics.adb: Add use clause for\n\tBindo.Writers.Phase_Writers.\n\t(Diagnose_Cycle): Signal the start and end of the cycle\n\tdiagnostic phase.\n\t* bindo-elaborators.adb: Add use clause for\n\tBindo.Writers.Phase_Writers.\n\t(Elaborate_Units): Signal the start and end of the unit\n\telaboration phase.\n\t* bindo-graphs.adb: Add use clause for\n\tBindo.Writers.Phase_Writers.\n\t(Find_Components): Signal the start and end of the component\n\tdiscovery phase.\n\t(Find_Cycles): Signal the start and end of the cycle discovery\n\tphase.\n\t* bindo-units.adb: Add with and use clause for Bindo.Writers.\n\tAdd use clause for Bindo.Writers.Phase_Writers.\n\t(Collect_Elaborable_Units): Signal the start and end of the unit\n\tcollection phase.\n\t* bindo-validators.adb: Add with and use clause for\n\tBindo.Writers.  Add use clause for Bindo.Writers.Phase_Writers.\n\t(Validate_Cycles, Validate_Elaboration_Order,\n\tValidate_Invocation_Graph, Validate_Library_Graph): Signal the\n\tstart and end of the libray graph validation phase.\n\t* bindo-writers.ads, bindo-writers.adb: Add new nested package\n\tPhase_Writers.\n\t* debug.adb: Update the documentation of switch d_S.\n\nFrom-SVN: r273379", "tree": {"sha": "61fa6e8e97c43d5f61918800f2d506ef1e245aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61fa6e8e97c43d5f61918800f2d506ef1e245aaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a34badbdf000e931dfa1a1291cf2739e2c75e68d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34badbdf000e931dfa1a1291cf2739e2c75e68d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a34badbdf000e931dfa1a1291cf2739e2c75e68d"}], "stats": {"total": 252, "additions": 246, "deletions": 6}, "files": [{"sha": "fa580d293f0f0bf3f1f274d41f680f7dca8d4324", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -1,3 +1,45 @@\n+2019-07-11  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* bindo.adb: Update the section of switches and debugging\n+\telaboration issues.\n+\t* bindo.ads: Add type Elaboration_Phase.\n+\t* bindo-augmentors.adb: Add use clause for\n+\tBindo.Writers.Phase_Writers.\n+\t(Augment_Library_Graph): Signal the start and end of the\n+\taubmentation phase.\n+\t* bindo-builders.adb: Add with and use clause for Bindo.Writers.\n+\tAdd use clause for Bindo.Writers.Phase_Writers.\n+\t(Build_Invocation_Graph): Signal the start and end of the\n+\tinvocation graph construction phase.\n+\t(Build_Library_Graph): Signal the start and end of the library\n+\tgraph construction phase.\n+\t* bindo-diagnostics.adb: Add use clause for\n+\tBindo.Writers.Phase_Writers.\n+\t(Diagnose_Cycle): Signal the start and end of the cycle\n+\tdiagnostic phase.\n+\t* bindo-elaborators.adb: Add use clause for\n+\tBindo.Writers.Phase_Writers.\n+\t(Elaborate_Units): Signal the start and end of the unit\n+\telaboration phase.\n+\t* bindo-graphs.adb: Add use clause for\n+\tBindo.Writers.Phase_Writers.\n+\t(Find_Components): Signal the start and end of the component\n+\tdiscovery phase.\n+\t(Find_Cycles): Signal the start and end of the cycle discovery\n+\tphase.\n+\t* bindo-units.adb: Add with and use clause for Bindo.Writers.\n+\tAdd use clause for Bindo.Writers.Phase_Writers.\n+\t(Collect_Elaborable_Units): Signal the start and end of the unit\n+\tcollection phase.\n+\t* bindo-validators.adb: Add with and use clause for\n+\tBindo.Writers.  Add use clause for Bindo.Writers.Phase_Writers.\n+\t(Validate_Cycles, Validate_Elaboration_Order,\n+\tValidate_Invocation_Graph, Validate_Library_Graph): Signal the\n+\tstart and end of the libray graph validation phase.\n+\t* bindo-writers.ads, bindo-writers.adb: Add new nested package\n+\tPhase_Writers.\n+\t* debug.adb: Update the documentation of switch d_S.\n+\n 2019-07-11  Yannick Moy  <moy@adacore.com>\n \n \t* sem_res.adb (Check_Argument_Order): Special case calls to"}, {"sha": "57fb5418b34f846f1ec60aa759360a5b2d9b98b2", "filename": "gcc/ada/bindo-augmentors.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-augmentors.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-augmentors.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-augmentors.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -27,7 +27,9 @@ with Debug;  use Debug;\n with Output; use Output;\n with Types;  use Types;\n \n-with Bindo.Writers; use Bindo.Writers;\n+with Bindo.Writers;\n+use  Bindo.Writers;\n+use  Bindo.Writers.Phase_Writers;\n \n package body Bindo.Augmentors is\n \n@@ -124,13 +126,17 @@ package body Bindo.Augmentors is\n             return;\n          end if;\n \n+         Start_Phase (Library_Graph_Augmentation);\n+\n          --  Prepare the statistics data\n \n          Longest_Path  := 0;\n          Total_Visited := 0;\n \n          Visit_Elaboration_Roots (Inv_Graph, Lib_Graph);\n          Write_Statistics;\n+\n+         End_Phase (Library_Graph_Augmentation);\n       end Augment_Library_Graph;\n \n       ----------------------------"}, {"sha": "9919007d53cb8ac36a291bf9b0fd8d1fd2570733", "filename": "gcc/ada/bindo-builders.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-builders.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-builders.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-builders.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -37,6 +37,10 @@ use  Bindo.Validators;\n use  Bindo.Validators.Invocation_Graph_Validators;\n use  Bindo.Validators.Library_Graph_Validators;\n \n+with Bindo.Writers;\n+use  Bindo.Writers;\n+use  Bindo.Writers.Phase_Writers;\n+\n with GNAT;                 use GNAT;\n with GNAT.Dynamic_HTables; use GNAT.Dynamic_HTables;\n \n@@ -99,6 +103,8 @@ package body Bindo.Builders is\n       begin\n          pragma Assert (Present (Lib_G));\n \n+         Start_Phase (Invocation_Graph_Construction);\n+\n          --  Prepare the global data\n \n          Inv_Graph :=\n@@ -111,6 +117,7 @@ package body Bindo.Builders is\n          For_Each_Elaborable_Unit (Create_Edges'Access);\n \n          Validate_Invocation_Graph (Inv_Graph);\n+         End_Phase (Invocation_Graph_Construction);\n \n          return Inv_Graph;\n       end Build_Invocation_Graph;\n@@ -375,6 +382,8 @@ package body Bindo.Builders is\n \n       function Build_Library_Graph return Library_Graph is\n       begin\n+         Start_Phase (Library_Graph_Construction);\n+\n          --  Prepare the global data\n \n          Lib_Graph :=\n@@ -388,6 +397,7 @@ package body Bindo.Builders is\n          Create_Forced_Edges;\n \n          Validate_Library_Graph (Lib_Graph);\n+         End_Phase (Library_Graph_Construction);\n \n          return Lib_Graph;\n       end Build_Library_Graph;"}, {"sha": "6f19ac0961a244c24a331c2ebe9fa17918c0b53b", "filename": "gcc/ada/bindo-diagnostics.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-diagnostics.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-diagnostics.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-diagnostics.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -36,6 +36,7 @@ use  Bindo.Validators.Cycle_Validators;\n with Bindo.Writers;\n use  Bindo.Writers;\n use  Bindo.Writers.Cycle_Writers;\n+use  Bindo.Writers.Phase_Writers;\n \n package body Bindo.Diagnostics is\n \n@@ -348,6 +349,8 @@ package body Bindo.Diagnostics is\n       Next_Edge    : Library_Graph_Edge_Id;\n \n    begin\n+      Start_Phase (Cycle_Diagnostics);\n+\n       First_Edge := No_Library_Graph_Edge;\n \n       --  Inspect the edges of the cycle in pairs, emitting diagnostics based\n@@ -402,6 +405,8 @@ package body Bindo.Diagnostics is\n         (G          => Lib_Graph,\n          Cycle      => Cycle,\n          First_Edge => First_Edge);\n+\n+      End_Phase (Cycle_Diagnostics);\n    end Diagnose_Cycle;\n \n    --------------------------------------"}, {"sha": "9e207e1e8305222d1c44a8702633502317ace28f", "filename": "gcc/ada/bindo-elaborators.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-elaborators.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-elaborators.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-elaborators.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -54,6 +54,7 @@ use  Bindo.Writers.Dependency_Writers;\n use  Bindo.Writers.Elaboration_Order_Writers;\n use  Bindo.Writers.Invocation_Graph_Writers;\n use  Bindo.Writers.Library_Graph_Writers;\n+use  Bindo.Writers.Phase_Writers;\n use  Bindo.Writers.Unit_Closure_Writers;\n \n with GNAT;        use GNAT;\n@@ -711,6 +712,8 @@ package body Bindo.Elaborators is\n          Status    : Elaboration_Order_Status;\n \n       begin\n+         Start_Phase (Unit_Elaboration);\n+\n          --  Initialize all unit-related data structures and gather all units\n          --  that need elaboration.\n \n@@ -786,6 +789,7 @@ package body Bindo.Elaborators is\n          --  Destroy all unit-related data structures\n \n          Finalize_Units;\n+         End_Phase (Unit_Elaboration);\n \n          --  Halt the bind when there is no satisfactory elaboration order\n "}, {"sha": "9621bb4b4883043b4971f9a30a209d10184ba490", "filename": "gcc/ada/bindo-graphs.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-graphs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-graphs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-graphs.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -31,6 +31,7 @@ with Output; use Output;\n \n with Bindo.Writers;\n use  Bindo.Writers;\n+use  Bindo.Writers.Phase_Writers;\n \n package body Bindo.Graphs is\n \n@@ -2636,6 +2637,8 @@ package body Bindo.Graphs is\n       begin\n          pragma Assert (Present (G));\n \n+         Start_Phase (Component_Discovery);\n+\n          --  Initialize or reinitialize the components of the graph\n \n          Initialize_Components (G);\n@@ -2660,6 +2663,7 @@ package body Bindo.Graphs is\n          --  before they can be elaborated.\n \n          Update_Pending_Predecessors_Of_Components (G);\n+         End_Phase (Component_Discovery);\n       end Find_Components;\n \n       -----------------\n@@ -2683,6 +2687,8 @@ package body Bindo.Graphs is\n       begin\n          pragma Assert (Present (G));\n \n+         Start_Phase (Cycle_Discovery);\n+\n          --  The cycles of graph G are discovered using Tarjan's enumeration\n          --  of the elementary circuits of a directed-graph algorithm. Do not\n          --  modify this code unless you intimately understand the algorithm.\n@@ -2721,6 +2727,8 @@ package body Bindo.Graphs is\n                Cycle_Count => Cycle_Count,\n                Cycle_Limit => All_Cycle_Limit);\n          end loop;\n+\n+         End_Phase (Cycle_Discovery);\n       end Find_Cycles;\n \n       --------------------------------"}, {"sha": "284aa625c128f90fd5e2fe98c3ce859f92ecbdf7", "filename": "gcc/ada/bindo-units.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-units.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-units.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-units.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -23,6 +23,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Bindo.Writers;\n+use  Bindo.Writers;\n+use  Bindo.Writers.Phase_Writers;\n+\n package body Bindo.Units is\n \n    -------------------\n@@ -79,9 +83,13 @@ package body Bindo.Units is\n \n    procedure Collect_Elaborable_Units is\n    begin\n+      Start_Phase (Unit_Collection);\n+\n       for U_Id in ALI.Units.First .. ALI.Units.Last loop\n          Process_Unit (U_Id);\n       end loop;\n+\n+      End_Phase (Unit_Collection);\n    end Collect_Elaborable_Units;\n \n    ------------------------"}, {"sha": "584d33fc4884d1a6d693587a9a40d4227793e76f", "filename": "gcc/ada/bindo-validators.adb", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-validators.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-validators.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-validators.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -27,7 +27,12 @@ with Debug;  use Debug;\n with Output; use Output;\n with Types;  use Types;\n \n-with Bindo.Units; use Bindo.Units;\n+with Bindo.Units;\n+use  Bindo.Units;\n+\n+with Bindo.Writers;\n+use  Bindo.Writers;\n+use  Bindo.Writers.Phase_Writers;\n \n package body Bindo.Validators is\n \n@@ -188,13 +193,17 @@ package body Bindo.Validators is\n             return;\n          end if;\n \n+         Start_Phase (Cycle_Validation);\n+\n          Iter := Iterate_All_Cycles (G);\n          while Has_Next (Iter) loop\n             Next (Iter, Cycle);\n \n             Validate_Cycle (G, Cycle);\n          end loop;\n \n+         End_Phase (Cycle_Validation);\n+\n          if Has_Invalid_Cycle then\n             raise Invalid_Cycle;\n          end if;\n@@ -330,8 +339,12 @@ package body Bindo.Validators is\n             return;\n          end if;\n \n+         Start_Phase (Elaboration_Order_Validation);\n+\n          Validate_Units (Order);\n \n+         End_Phase (Elaboration_Order_Validation);\n+\n          if Has_Invalid_Data then\n             raise Invalid_Elaboration_Order;\n          end if;\n@@ -444,8 +457,12 @@ package body Bindo.Validators is\n             return;\n          end if;\n \n+         Start_Phase (Invocation_Graph_Validation);\n+\n          Validate_Invocation_Graph_Vertices (G);\n-         Validate_Invocation_Graph_Edges (G);\n+         Validate_Invocation_Graph_Edges    (G);\n+\n+         End_Phase (Invocation_Graph_Validation);\n \n          if Has_Invalid_Data then\n             raise Invalid_Invocation_Graph;\n@@ -638,8 +655,12 @@ package body Bindo.Validators is\n             return;\n          end if;\n \n+         Start_Phase (Library_Graph_Validation);\n+\n          Validate_Library_Graph_Vertices (G);\n-         Validate_Library_Graph_Edges (G);\n+         Validate_Library_Graph_Edges    (G);\n+\n+         End_Phase (Library_Graph_Validation);\n \n          if Has_Invalid_Data then\n             raise Invalid_Library_Graph;"}, {"sha": "021d50f31d3094e0a6dc3332721313b9e1559455", "filename": "gcc/ada/bindo-writers.adb", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-writers.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-writers.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-writers.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -1404,6 +1404,94 @@ package body Bindo.Writers is\n       end Write_Statistics;\n    end Library_Graph_Writers;\n \n+   -------------------\n+   -- Phase_Writers --\n+   -------------------\n+\n+   package body Phase_Writers is\n+\n+      subtype Phase_Message is String (1 .. 32);\n+\n+      --  The following table contains the phase-specific messages for phase\n+      --  completion.\n+\n+      End_Messages : constant array (Elaboration_Phase) of Phase_Message :=\n+        (Component_Discovery           => \"components discovered.          \",\n+         Cycle_Diagnostics             => \"cycle diagnosed.                \",\n+         Cycle_Discovery               => \"cycles discovered.              \",\n+         Cycle_Validation              => \"cycles validated.               \",\n+         Elaboration_Order_Validation  => \"elaboration order validated.    \",\n+         Invocation_Graph_Construction => \"invocation graph constructed.   \",\n+         Invocation_Graph_Validation   => \"invocation graph validated.     \",\n+         Library_Graph_Augmentation    => \"library graph augmented.        \",\n+         Library_Graph_Construction    => \"library graph constructed.      \",\n+         Library_Graph_Elaboration     => \"library graph elaborated.       \",\n+         Library_Graph_Validation      => \"library graph validated.        \",\n+         Unit_Collection               => \"units collected.                \",\n+         Unit_Elaboration              => \"units elaborated.               \");\n+\n+      --  The following table contains the phase-specific messages for phase\n+      --  commencement.\n+\n+      Start_Messages : constant array (Elaboration_Phase) of Phase_Message :=\n+        (Component_Discovery           => \"discovering components...       \",\n+         Cycle_Diagnostics             => \"diagnosing cycle...             \",\n+         Cycle_Discovery               => \"discovering cycles...           \",\n+         Cycle_Validation              => \"validating cycles...            \",\n+         Elaboration_Order_Validation  => \"validating elaboration order... \",\n+         Invocation_Graph_Construction => \"constructing invocation graph...\",\n+         Invocation_Graph_Validation   => \"validating invocation graph...  \",\n+         Library_Graph_Augmentation    => \"augmenting library graph...     \",\n+         Library_Graph_Construction    => \"constructing library graph...   \",\n+         Library_Graph_Elaboration     => \"elaborating library graph...    \",\n+         Library_Graph_Validation      => \"validating library graph...     \",\n+         Unit_Collection               => \"collecting units...             \",\n+         Unit_Elaboration              => \"elaborating units...            \");\n+\n+      -----------------------\n+      -- Local subprograms --\n+      -----------------------\n+\n+      procedure Write_Phase_Message (Msg : Phase_Message);\n+      pragma Inline (Write_Phase_Message);\n+      --  Write elaboration phase-related message Msg to standard output\n+\n+      ---------------\n+      -- End_Phase --\n+      ---------------\n+\n+      procedure End_Phase (Phase : Elaboration_Phase) is\n+      begin\n+         Write_Phase_Message (End_Messages (Phase));\n+      end End_Phase;\n+\n+      -----------------\n+      -- Start_Phase --\n+      -----------------\n+\n+      procedure Start_Phase (Phase : Elaboration_Phase) is\n+      begin\n+         Write_Phase_Message (Start_Messages (Phase));\n+      end Start_Phase;\n+\n+      -------------------------\n+      -- Write_Phase_Message --\n+      -------------------------\n+\n+      procedure Write_Phase_Message (Msg : Phase_Message) is\n+      begin\n+         --  Nothing to do when switch -d_S (output elaboration order status)\n+         --  is not in effect.\n+\n+         if not Debug_Flag_Underscore_SS then\n+            return;\n+         end if;\n+\n+         Write_Str (Msg);\n+         Write_Eol;\n+      end Write_Phase_Message;\n+   end Phase_Writers;\n+\n    --------------------------\n    -- Unit_Closure_Writers --\n    --------------------------"}, {"sha": "66483d07278f285dc52aee6785eec4f22eb325b9", "filename": "gcc/ada/bindo-writers.ads", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-writers.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo-writers.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-writers.ads?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -132,6 +132,23 @@ package Bindo.Writers is\n \n    end Library_Graph_Writers;\n \n+   -------------------\n+   -- Phase_Writers --\n+   -------------------\n+\n+   package Phase_Writers is\n+      procedure End_Phase (Phase : Elaboration_Phase);\n+      pragma Inline (End_Phase);\n+      --  Write the end message associated with elaboration phase Phase to\n+      --  standard output.\n+\n+      procedure Start_Phase (Phase : Elaboration_Phase);\n+      pragma Inline (Start_Phase);\n+      --  Write the start message associated with elaboration phase Phase to\n+      --  standard output.\n+\n+   end Phase_Writers;\n+\n    --------------------------\n    -- Unit_Closure_Writers --\n    --------------------------"}, {"sha": "d5830cab098d263cb9ffc69c46ee5dbeba01a800", "filename": "gcc/ada/bindo.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -355,6 +355,11 @@ package body Bindo is\n    --\n    --        GNATbind output the cycle paths in text format to standard output\n    --\n+   --  -d_S  Output elaboration-order status information\n+   --\n+   --        GNATbind outputs trace information concerning the status of its\n+   --        various phases to standard output.\n+   --\n    --  -d_T  Output elaboration-order trace information\n    --\n    --        GNATbind outputs trace information on elaboration-order detection\n@@ -416,6 +421,11 @@ package body Bindo is\n    --    plgv   --  print library-graph vertex\n    --    pu     --  print units\n    --\n+   --  * Apparent infinite loop\n+   --\n+   --    The elaboration order mechanism appears to be stuck in an infinite\n+   --    loop. Use switch -d_S to output the status of each elaboration phase.\n+   --\n    --  * Invalid elaboration order\n    --\n    --    The elaboration order is invalid when:"}, {"sha": "ae35c956f14568626fde10674d0c1db75f529ff5", "filename": "gcc/ada/bindo.ads", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fbindo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo.ads?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -31,6 +31,24 @@ with Namet; use Namet;\n \n package Bindo is\n \n+   --  The following type represents the various phases of the elaboration\n+   --  order mechanism.\n+\n+   type Elaboration_Phase is\n+     (Component_Discovery,\n+      Cycle_Diagnostics,\n+      Cycle_Discovery,\n+      Cycle_Validation,\n+      Elaboration_Order_Validation,\n+      Invocation_Graph_Construction,\n+      Invocation_Graph_Validation,\n+      Library_Graph_Augmentation,\n+      Library_Graph_Construction,\n+      Library_Graph_Elaboration,\n+      Library_Graph_Validation,\n+      Unit_Collection,\n+      Unit_Elaboration);\n+\n    --  The following type represents the various kinds of precedence between\n    --  two items.\n "}, {"sha": "44f0b9ec4cb9107e6d69151d3d08f030342d28f8", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/490ed9ba846d15baba24646b7ecf3ed6b7c19fcb/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=490ed9ba846d15baba24646b7ecf3ed6b7c19fcb", "patch": "@@ -394,8 +394,8 @@ package body Debug is\n    --  d_P  Output cycle paths\n    --  d_Q\n    --  d_R\n-   --  d_S\n-   --  d_T  Output elaboration order trace information\n+   --  d_S  Output elaboration-order status\n+   --  d_T  Output elaboration-order trace information\n    --  d_U\n    --  d_V  Validate bindo cycles, graphs, and order\n    --  d_W\n@@ -1167,6 +1167,9 @@ package body Debug is\n \n    --  d_P  GNATBIND outputs the cycle paths to standard output\n \n+   --  d_S  GNATBIND outputs trace information concerning the status of its\n+   --       various phases to standard output.\n+\n    --  d_T  GNATBIND outputs trace information of elaboration order detection\n    --       activities to standard output.\n "}]}