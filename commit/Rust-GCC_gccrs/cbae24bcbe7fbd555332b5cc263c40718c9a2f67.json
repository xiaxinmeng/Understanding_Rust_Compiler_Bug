{"sha": "cbae24bcbe7fbd555332b5cc263c40718c9a2f67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JhZTI0YmNiZTdmYmQ1NTUzMzJiNWNjMjYzYzQwNzE4YzlhMmY2Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-02T03:25:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-02T03:25:39Z"}, "message": "(redundant_insn): If INSN or possible match has REG_UNUSED note, don't\nhave match.\n\nFrom-SVN: r14370", "tree": {"sha": "e7cf4c04b77f6099add1f9e5f5540ee564e3162b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7cf4c04b77f6099add1f9e5f5540ee564e3162b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbae24bcbe7fbd555332b5cc263c40718c9a2f67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbae24bcbe7fbd555332b5cc263c40718c9a2f67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbae24bcbe7fbd555332b5cc263c40718c9a2f67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbae24bcbe7fbd555332b5cc263c40718c9a2f67/comments", "author": null, "committer": null, "parents": [{"sha": "4144ff62cfdd1912de6a98e8cb9928c81d0dbd9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4144ff62cfdd1912de6a98e8cb9928c81d0dbd9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4144ff62cfdd1912de6a98e8cb9928c81d0dbd9b"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "77279f9d812ff7a2c5dcdde45d4bfc2a2ee6aa56", "filename": "gcc/reorg.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbae24bcbe7fbd555332b5cc263c40718c9a2f67/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbae24bcbe7fbd555332b5cc263c40718c9a2f67/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=cbae24bcbe7fbd555332b5cc263c40718c9a2f67", "patch": "@@ -1997,6 +1997,11 @@ redundant_insn (insn, target, delay_list)\n   struct resources needed, set;\n   int i;\n \n+  /* If INSN has any REG_UNUSED notes, it can't match anything since we\n+     are allowed to not actually assign to such a register.  */\n+  if (find_reg_note (insn, REG_UNUSED, NULL_RTX) != 0)\n+    return 0;\n+\n   /* Scan backwards looking for a match.  */\n   for (trial = PREV_INSN (target); trial; trial = PREV_INSN (trial))\n     {\n@@ -2035,15 +2040,17 @@ redundant_insn (insn, target, delay_list)\n \t     resource requirements as we go.  */\n \t  for (i = XVECLEN (pat, 0) - 1; i > 0; i--)\n \t    if (GET_CODE (XVECEXP (pat, 0, i)) == GET_CODE (insn)\n-\t\t&& rtx_equal_p (PATTERN (XVECEXP (pat, 0, i)), ipat))\n+\t\t&& rtx_equal_p (PATTERN (XVECEXP (pat, 0, i)), ipat)\n+\t\t&& ! find_reg_note (XVECEXP (pat, 0, i), REG_UNUSED, NULL_RTX))\n \t      break;\n \n \t  /* If found a match, exit this loop early.  */\n \t  if (i > 0)\n \t    break;\n \t}\n \n-      else if (GET_CODE (trial) == GET_CODE (insn) && rtx_equal_p (pat, ipat))\n+      else if (GET_CODE (trial) == GET_CODE (insn) && rtx_equal_p (pat, ipat)\n+\t       && ! find_reg_note (trial, REG_UNUSED, NULL_RTX))\n \tbreak;\n     }\n "}]}