{"sha": "11ec770e46f664966c53b6af90a2849c1eb4dbd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFlYzc3MGU0NmY2NjQ5NjZjNTNiNmFmOTBhMjg0OWMxZWI0ZGJkMQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2012-04-27T14:14:14Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2012-04-27T14:14:14Z"}, "message": "dwarf2out.c (dwarf_stack_op_name): Use get_DW_OP_name.\n\ngcc\n\t* dwarf2out.c (dwarf_stack_op_name): Use get_DW_OP_name.\n\t(dwarf_tag_name): Use get_DW_TAG_name.\n\t(dwarf_attr_name): Use get_DW_AT_name.\n\t(dwarf_form_name): Use get_DW_FORM_name.\n\t* dwarf2cfi.c (dwarf_cfi_name): Use get_DW_CFA_name.\ninclude\n\t* dwarf2.h (enum dwarf_tag, enum dwarf_form, enum dwarf_attribute)\n\t(enum dwarf_location_atom, enum dwarf_type, enum\n\tdwarf_call_frame_info): Remove.\n\t(DW_TAG, DW_TAG_DUP, DW_FORM, DW_AT, DW_AT_DUP, DW_OP)\n\t(DW_OP_DUP, DW_ATE, DW_ATE_DUP, DW_CFA): New macros.\n\tInclude dwarf2.def.\n\t(get_DW_TAG_name, get_DW_AT_name, get_DW_FORM_name)\n\t(get_DW_OP_name, get_DW_ATE_name): Declare.\n\t* dwarf2.def: New file, from dwarf2.h.\nlibiberty\n\t* dwarfnames.c: New file.\n\t* Makefile.in (CFILES): Add dwarfnames.\n\t(REQUIRED_OFILES): Add dwarfnames.\n\t(./dwarfnames.$(objext)): New target.\n\nFrom-SVN: r186908", "tree": {"sha": "575755334553a36f8125712174d0e7eda2bf9d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/575755334553a36f8125712174d0e7eda2bf9d9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11ec770e46f664966c53b6af90a2849c1eb4dbd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11ec770e46f664966c53b6af90a2849c1eb4dbd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11ec770e46f664966c53b6af90a2849c1eb4dbd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11ec770e46f664966c53b6af90a2849c1eb4dbd1/comments", "author": null, "committer": null, "parents": [{"sha": "809c929ccfeb2dfb3fdd19fd3bf5e540c778b4bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/809c929ccfeb2dfb3fdd19fd3bf5e540c778b4bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/809c929ccfeb2dfb3fdd19fd3bf5e540c778b4bc"}], "stats": {"total": 2405, "additions": 926, "deletions": 1479}, "files": [{"sha": "aeda32c9791c0caeb451c0765af01c4a00a48b6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -1,3 +1,11 @@\n+2012-04-27  Tom Tromey  <tromey@redhat.com>\n+\n+\t* dwarf2out.c (dwarf_stack_op_name): Use get_DW_OP_name.\n+\t(dwarf_tag_name): Use get_DW_TAG_name.\n+\t(dwarf_attr_name): Use get_DW_AT_name.\n+\t(dwarf_form_name): Use get_DW_FORM_name.\n+\t* dwarf2cfi.c (dwarf_cfi_name): Use get_DW_CFA_name.\n+\n 2012-04-27  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* tree-ssa-phiopt.c (conditional_replacement): Replace PHIs"}, {"sha": "bf2d802ffae26713f5966b7e01c0865b6b190e5a", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 4, "deletions": 64, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -2925,72 +2925,12 @@ execute_dwarf2_frame (void)\n static const char *\n dwarf_cfi_name (unsigned int cfi_opc)\n {\n-  switch (cfi_opc)\n-    {\n-    case DW_CFA_advance_loc:\n-      return \"DW_CFA_advance_loc\";\n-    case DW_CFA_offset:\n-      return \"DW_CFA_offset\";\n-    case DW_CFA_restore:\n-      return \"DW_CFA_restore\";\n-    case DW_CFA_nop:\n-      return \"DW_CFA_nop\";\n-    case DW_CFA_set_loc:\n-      return \"DW_CFA_set_loc\";\n-    case DW_CFA_advance_loc1:\n-      return \"DW_CFA_advance_loc1\";\n-    case DW_CFA_advance_loc2:\n-      return \"DW_CFA_advance_loc2\";\n-    case DW_CFA_advance_loc4:\n-      return \"DW_CFA_advance_loc4\";\n-    case DW_CFA_offset_extended:\n-      return \"DW_CFA_offset_extended\";\n-    case DW_CFA_restore_extended:\n-      return \"DW_CFA_restore_extended\";\n-    case DW_CFA_undefined:\n-      return \"DW_CFA_undefined\";\n-    case DW_CFA_same_value:\n-      return \"DW_CFA_same_value\";\n-    case DW_CFA_register:\n-      return \"DW_CFA_register\";\n-    case DW_CFA_remember_state:\n-      return \"DW_CFA_remember_state\";\n-    case DW_CFA_restore_state:\n-      return \"DW_CFA_restore_state\";\n-    case DW_CFA_def_cfa:\n-      return \"DW_CFA_def_cfa\";\n-    case DW_CFA_def_cfa_register:\n-      return \"DW_CFA_def_cfa_register\";\n-    case DW_CFA_def_cfa_offset:\n-      return \"DW_CFA_def_cfa_offset\";\n+  const char *name = get_DW_CFA_name (cfi_opc);\n \n-    /* DWARF 3 */\n-    case DW_CFA_def_cfa_expression:\n-      return \"DW_CFA_def_cfa_expression\";\n-    case DW_CFA_expression:\n-      return \"DW_CFA_expression\";\n-    case DW_CFA_offset_extended_sf:\n-      return \"DW_CFA_offset_extended_sf\";\n-    case DW_CFA_def_cfa_sf:\n-      return \"DW_CFA_def_cfa_sf\";\n-    case DW_CFA_def_cfa_offset_sf:\n-      return \"DW_CFA_def_cfa_offset_sf\";\n+  if (name != NULL)\n+    return name;\n \n-    /* SGI/MIPS specific */\n-    case DW_CFA_MIPS_advance_loc8:\n-      return \"DW_CFA_MIPS_advance_loc8\";\n-\n-    /* GNU extensions */\n-    case DW_CFA_GNU_window_save:\n-      return \"DW_CFA_GNU_window_save\";\n-    case DW_CFA_GNU_args_size:\n-      return \"DW_CFA_GNU_args_size\";\n-    case DW_CFA_GNU_negative_offset_extended:\n-      return \"DW_CFA_GNU_negative_offset_extended\";\n-\n-    default:\n-      return \"DW_CFA_<unknown>\";\n-    }\n+  return \"DW_CFA_<unknown>\";\n }\n \n /* This routine will generate the correct assembly data for a location"}, {"sha": "98b53f0a10e4eb2dca2b5d9f8392e67aa2706d04", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 26, "deletions": 786, "changes": 812, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -1229,344 +1229,12 @@ static dw_loc_descr_ref int_loc_descriptor (HOST_WIDE_INT);\n static const char *\n dwarf_stack_op_name (unsigned int op)\n {\n-  switch (op)\n-    {\n-    case DW_OP_addr:\n-      return \"DW_OP_addr\";\n-    case DW_OP_deref:\n-      return \"DW_OP_deref\";\n-    case DW_OP_const1u:\n-      return \"DW_OP_const1u\";\n-    case DW_OP_const1s:\n-      return \"DW_OP_const1s\";\n-    case DW_OP_const2u:\n-      return \"DW_OP_const2u\";\n-    case DW_OP_const2s:\n-      return \"DW_OP_const2s\";\n-    case DW_OP_const4u:\n-      return \"DW_OP_const4u\";\n-    case DW_OP_const4s:\n-      return \"DW_OP_const4s\";\n-    case DW_OP_const8u:\n-      return \"DW_OP_const8u\";\n-    case DW_OP_const8s:\n-      return \"DW_OP_const8s\";\n-    case DW_OP_constu:\n-      return \"DW_OP_constu\";\n-    case DW_OP_consts:\n-      return \"DW_OP_consts\";\n-    case DW_OP_dup:\n-      return \"DW_OP_dup\";\n-    case DW_OP_drop:\n-      return \"DW_OP_drop\";\n-    case DW_OP_over:\n-      return \"DW_OP_over\";\n-    case DW_OP_pick:\n-      return \"DW_OP_pick\";\n-    case DW_OP_swap:\n-      return \"DW_OP_swap\";\n-    case DW_OP_rot:\n-      return \"DW_OP_rot\";\n-    case DW_OP_xderef:\n-      return \"DW_OP_xderef\";\n-    case DW_OP_abs:\n-      return \"DW_OP_abs\";\n-    case DW_OP_and:\n-      return \"DW_OP_and\";\n-    case DW_OP_div:\n-      return \"DW_OP_div\";\n-    case DW_OP_minus:\n-      return \"DW_OP_minus\";\n-    case DW_OP_mod:\n-      return \"DW_OP_mod\";\n-    case DW_OP_mul:\n-      return \"DW_OP_mul\";\n-    case DW_OP_neg:\n-      return \"DW_OP_neg\";\n-    case DW_OP_not:\n-      return \"DW_OP_not\";\n-    case DW_OP_or:\n-      return \"DW_OP_or\";\n-    case DW_OP_plus:\n-      return \"DW_OP_plus\";\n-    case DW_OP_plus_uconst:\n-      return \"DW_OP_plus_uconst\";\n-    case DW_OP_shl:\n-      return \"DW_OP_shl\";\n-    case DW_OP_shr:\n-      return \"DW_OP_shr\";\n-    case DW_OP_shra:\n-      return \"DW_OP_shra\";\n-    case DW_OP_xor:\n-      return \"DW_OP_xor\";\n-    case DW_OP_bra:\n-      return \"DW_OP_bra\";\n-    case DW_OP_eq:\n-      return \"DW_OP_eq\";\n-    case DW_OP_ge:\n-      return \"DW_OP_ge\";\n-    case DW_OP_gt:\n-      return \"DW_OP_gt\";\n-    case DW_OP_le:\n-      return \"DW_OP_le\";\n-    case DW_OP_lt:\n-      return \"DW_OP_lt\";\n-    case DW_OP_ne:\n-      return \"DW_OP_ne\";\n-    case DW_OP_skip:\n-      return \"DW_OP_skip\";\n-    case DW_OP_lit0:\n-      return \"DW_OP_lit0\";\n-    case DW_OP_lit1:\n-      return \"DW_OP_lit1\";\n-    case DW_OP_lit2:\n-      return \"DW_OP_lit2\";\n-    case DW_OP_lit3:\n-      return \"DW_OP_lit3\";\n-    case DW_OP_lit4:\n-      return \"DW_OP_lit4\";\n-    case DW_OP_lit5:\n-      return \"DW_OP_lit5\";\n-    case DW_OP_lit6:\n-      return \"DW_OP_lit6\";\n-    case DW_OP_lit7:\n-      return \"DW_OP_lit7\";\n-    case DW_OP_lit8:\n-      return \"DW_OP_lit8\";\n-    case DW_OP_lit9:\n-      return \"DW_OP_lit9\";\n-    case DW_OP_lit10:\n-      return \"DW_OP_lit10\";\n-    case DW_OP_lit11:\n-      return \"DW_OP_lit11\";\n-    case DW_OP_lit12:\n-      return \"DW_OP_lit12\";\n-    case DW_OP_lit13:\n-      return \"DW_OP_lit13\";\n-    case DW_OP_lit14:\n-      return \"DW_OP_lit14\";\n-    case DW_OP_lit15:\n-      return \"DW_OP_lit15\";\n-    case DW_OP_lit16:\n-      return \"DW_OP_lit16\";\n-    case DW_OP_lit17:\n-      return \"DW_OP_lit17\";\n-    case DW_OP_lit18:\n-      return \"DW_OP_lit18\";\n-    case DW_OP_lit19:\n-      return \"DW_OP_lit19\";\n-    case DW_OP_lit20:\n-      return \"DW_OP_lit20\";\n-    case DW_OP_lit21:\n-      return \"DW_OP_lit21\";\n-    case DW_OP_lit22:\n-      return \"DW_OP_lit22\";\n-    case DW_OP_lit23:\n-      return \"DW_OP_lit23\";\n-    case DW_OP_lit24:\n-      return \"DW_OP_lit24\";\n-    case DW_OP_lit25:\n-      return \"DW_OP_lit25\";\n-    case DW_OP_lit26:\n-      return \"DW_OP_lit26\";\n-    case DW_OP_lit27:\n-      return \"DW_OP_lit27\";\n-    case DW_OP_lit28:\n-      return \"DW_OP_lit28\";\n-    case DW_OP_lit29:\n-      return \"DW_OP_lit29\";\n-    case DW_OP_lit30:\n-      return \"DW_OP_lit30\";\n-    case DW_OP_lit31:\n-      return \"DW_OP_lit31\";\n-    case DW_OP_reg0:\n-      return \"DW_OP_reg0\";\n-    case DW_OP_reg1:\n-      return \"DW_OP_reg1\";\n-    case DW_OP_reg2:\n-      return \"DW_OP_reg2\";\n-    case DW_OP_reg3:\n-      return \"DW_OP_reg3\";\n-    case DW_OP_reg4:\n-      return \"DW_OP_reg4\";\n-    case DW_OP_reg5:\n-      return \"DW_OP_reg5\";\n-    case DW_OP_reg6:\n-      return \"DW_OP_reg6\";\n-    case DW_OP_reg7:\n-      return \"DW_OP_reg7\";\n-    case DW_OP_reg8:\n-      return \"DW_OP_reg8\";\n-    case DW_OP_reg9:\n-      return \"DW_OP_reg9\";\n-    case DW_OP_reg10:\n-      return \"DW_OP_reg10\";\n-    case DW_OP_reg11:\n-      return \"DW_OP_reg11\";\n-    case DW_OP_reg12:\n-      return \"DW_OP_reg12\";\n-    case DW_OP_reg13:\n-      return \"DW_OP_reg13\";\n-    case DW_OP_reg14:\n-      return \"DW_OP_reg14\";\n-    case DW_OP_reg15:\n-      return \"DW_OP_reg15\";\n-    case DW_OP_reg16:\n-      return \"DW_OP_reg16\";\n-    case DW_OP_reg17:\n-      return \"DW_OP_reg17\";\n-    case DW_OP_reg18:\n-      return \"DW_OP_reg18\";\n-    case DW_OP_reg19:\n-      return \"DW_OP_reg19\";\n-    case DW_OP_reg20:\n-      return \"DW_OP_reg20\";\n-    case DW_OP_reg21:\n-      return \"DW_OP_reg21\";\n-    case DW_OP_reg22:\n-      return \"DW_OP_reg22\";\n-    case DW_OP_reg23:\n-      return \"DW_OP_reg23\";\n-    case DW_OP_reg24:\n-      return \"DW_OP_reg24\";\n-    case DW_OP_reg25:\n-      return \"DW_OP_reg25\";\n-    case DW_OP_reg26:\n-      return \"DW_OP_reg26\";\n-    case DW_OP_reg27:\n-      return \"DW_OP_reg27\";\n-    case DW_OP_reg28:\n-      return \"DW_OP_reg28\";\n-    case DW_OP_reg29:\n-      return \"DW_OP_reg29\";\n-    case DW_OP_reg30:\n-      return \"DW_OP_reg30\";\n-    case DW_OP_reg31:\n-      return \"DW_OP_reg31\";\n-    case DW_OP_breg0:\n-      return \"DW_OP_breg0\";\n-    case DW_OP_breg1:\n-      return \"DW_OP_breg1\";\n-    case DW_OP_breg2:\n-      return \"DW_OP_breg2\";\n-    case DW_OP_breg3:\n-      return \"DW_OP_breg3\";\n-    case DW_OP_breg4:\n-      return \"DW_OP_breg4\";\n-    case DW_OP_breg5:\n-      return \"DW_OP_breg5\";\n-    case DW_OP_breg6:\n-      return \"DW_OP_breg6\";\n-    case DW_OP_breg7:\n-      return \"DW_OP_breg7\";\n-    case DW_OP_breg8:\n-      return \"DW_OP_breg8\";\n-    case DW_OP_breg9:\n-      return \"DW_OP_breg9\";\n-    case DW_OP_breg10:\n-      return \"DW_OP_breg10\";\n-    case DW_OP_breg11:\n-      return \"DW_OP_breg11\";\n-    case DW_OP_breg12:\n-      return \"DW_OP_breg12\";\n-    case DW_OP_breg13:\n-      return \"DW_OP_breg13\";\n-    case DW_OP_breg14:\n-      return \"DW_OP_breg14\";\n-    case DW_OP_breg15:\n-      return \"DW_OP_breg15\";\n-    case DW_OP_breg16:\n-      return \"DW_OP_breg16\";\n-    case DW_OP_breg17:\n-      return \"DW_OP_breg17\";\n-    case DW_OP_breg18:\n-      return \"DW_OP_breg18\";\n-    case DW_OP_breg19:\n-      return \"DW_OP_breg19\";\n-    case DW_OP_breg20:\n-      return \"DW_OP_breg20\";\n-    case DW_OP_breg21:\n-      return \"DW_OP_breg21\";\n-    case DW_OP_breg22:\n-      return \"DW_OP_breg22\";\n-    case DW_OP_breg23:\n-      return \"DW_OP_breg23\";\n-    case DW_OP_breg24:\n-      return \"DW_OP_breg24\";\n-    case DW_OP_breg25:\n-      return \"DW_OP_breg25\";\n-    case DW_OP_breg26:\n-      return \"DW_OP_breg26\";\n-    case DW_OP_breg27:\n-      return \"DW_OP_breg27\";\n-    case DW_OP_breg28:\n-      return \"DW_OP_breg28\";\n-    case DW_OP_breg29:\n-      return \"DW_OP_breg29\";\n-    case DW_OP_breg30:\n-      return \"DW_OP_breg30\";\n-    case DW_OP_breg31:\n-      return \"DW_OP_breg31\";\n-    case DW_OP_regx:\n-      return \"DW_OP_regx\";\n-    case DW_OP_fbreg:\n-      return \"DW_OP_fbreg\";\n-    case DW_OP_bregx:\n-      return \"DW_OP_bregx\";\n-    case DW_OP_piece:\n-      return \"DW_OP_piece\";\n-    case DW_OP_deref_size:\n-      return \"DW_OP_deref_size\";\n-    case DW_OP_xderef_size:\n-      return \"DW_OP_xderef_size\";\n-    case DW_OP_nop:\n-      return \"DW_OP_nop\";\n+  const char *name = get_DW_OP_name (op);\n \n-    case DW_OP_push_object_address:\n-      return \"DW_OP_push_object_address\";\n-    case DW_OP_call2:\n-      return \"DW_OP_call2\";\n-    case DW_OP_call4:\n-      return \"DW_OP_call4\";\n-    case DW_OP_call_ref:\n-      return \"DW_OP_call_ref\";\n-    case DW_OP_implicit_value:\n-      return \"DW_OP_implicit_value\";\n-    case DW_OP_stack_value:\n-      return \"DW_OP_stack_value\";\n-    case DW_OP_form_tls_address:\n-      return \"DW_OP_form_tls_address\";\n-    case DW_OP_call_frame_cfa:\n-      return \"DW_OP_call_frame_cfa\";\n-    case DW_OP_bit_piece:\n-      return \"DW_OP_bit_piece\";\n-\n-    case DW_OP_GNU_push_tls_address:\n-      return \"DW_OP_GNU_push_tls_address\";\n-    case DW_OP_GNU_uninit:\n-      return \"DW_OP_GNU_uninit\";\n-    case DW_OP_GNU_encoded_addr:\n-      return \"DW_OP_GNU_encoded_addr\";\n-    case DW_OP_GNU_implicit_pointer:\n-      return \"DW_OP_GNU_implicit_pointer\";\n-    case DW_OP_GNU_entry_value:\n-      return \"DW_OP_GNU_entry_value\";\n-    case DW_OP_GNU_const_type:\n-      return \"DW_OP_GNU_const_type\";\n-    case DW_OP_GNU_regval_type:\n-      return \"DW_OP_GNU_regval_type\";\n-    case DW_OP_GNU_deref_type:\n-      return \"DW_OP_GNU_deref_type\";\n-    case DW_OP_GNU_convert:\n-      return \"DW_OP_GNU_convert\";\n-    case DW_OP_GNU_reinterpret:\n-      return \"DW_OP_GNU_reinterpret\";\n-    case DW_OP_GNU_parameter_ref:\n-      return \"DW_OP_GNU_parameter_ref\";\n+  if (name != NULL)\n+    return name;\n \n-    default:\n-      return \"OP_<unknown>\";\n-    }\n+  return \"OP_<unknown>\";\n }\n \n /* Return a pointer to a newly allocated location description.  Location\n@@ -3695,487 +3363,59 @@ get_ref_die_offset (dw_die_ref ref)\n static const char *\n dwarf_tag_name (unsigned int tag)\n {\n-  switch (tag)\n-    {\n-    case DW_TAG_padding:\n-      return \"DW_TAG_padding\";\n-    case DW_TAG_array_type:\n-      return \"DW_TAG_array_type\";\n-    case DW_TAG_class_type:\n-      return \"DW_TAG_class_type\";\n-    case DW_TAG_entry_point:\n-      return \"DW_TAG_entry_point\";\n-    case DW_TAG_enumeration_type:\n-      return \"DW_TAG_enumeration_type\";\n-    case DW_TAG_formal_parameter:\n-      return \"DW_TAG_formal_parameter\";\n-    case DW_TAG_imported_declaration:\n-      return \"DW_TAG_imported_declaration\";\n-    case DW_TAG_label:\n-      return \"DW_TAG_label\";\n-    case DW_TAG_lexical_block:\n-      return \"DW_TAG_lexical_block\";\n-    case DW_TAG_member:\n-      return \"DW_TAG_member\";\n-    case DW_TAG_pointer_type:\n-      return \"DW_TAG_pointer_type\";\n-    case DW_TAG_reference_type:\n-      return \"DW_TAG_reference_type\";\n-    case DW_TAG_compile_unit:\n-      return \"DW_TAG_compile_unit\";\n-    case DW_TAG_string_type:\n-      return \"DW_TAG_string_type\";\n-    case DW_TAG_structure_type:\n-      return \"DW_TAG_structure_type\";\n-    case DW_TAG_subroutine_type:\n-      return \"DW_TAG_subroutine_type\";\n-    case DW_TAG_typedef:\n-      return \"DW_TAG_typedef\";\n-    case DW_TAG_union_type:\n-      return \"DW_TAG_union_type\";\n-    case DW_TAG_unspecified_parameters:\n-      return \"DW_TAG_unspecified_parameters\";\n-    case DW_TAG_variant:\n-      return \"DW_TAG_variant\";\n-    case DW_TAG_common_block:\n-      return \"DW_TAG_common_block\";\n-    case DW_TAG_common_inclusion:\n-      return \"DW_TAG_common_inclusion\";\n-    case DW_TAG_inheritance:\n-      return \"DW_TAG_inheritance\";\n-    case DW_TAG_inlined_subroutine:\n-      return \"DW_TAG_inlined_subroutine\";\n-    case DW_TAG_module:\n-      return \"DW_TAG_module\";\n-    case DW_TAG_ptr_to_member_type:\n-      return \"DW_TAG_ptr_to_member_type\";\n-    case DW_TAG_set_type:\n-      return \"DW_TAG_set_type\";\n-    case DW_TAG_subrange_type:\n-      return \"DW_TAG_subrange_type\";\n-    case DW_TAG_with_stmt:\n-      return \"DW_TAG_with_stmt\";\n-    case DW_TAG_access_declaration:\n-      return \"DW_TAG_access_declaration\";\n-    case DW_TAG_base_type:\n-      return \"DW_TAG_base_type\";\n-    case DW_TAG_catch_block:\n-      return \"DW_TAG_catch_block\";\n-    case DW_TAG_const_type:\n-      return \"DW_TAG_const_type\";\n-    case DW_TAG_constant:\n-      return \"DW_TAG_constant\";\n-    case DW_TAG_enumerator:\n-      return \"DW_TAG_enumerator\";\n-    case DW_TAG_file_type:\n-      return \"DW_TAG_file_type\";\n-    case DW_TAG_friend:\n-      return \"DW_TAG_friend\";\n-    case DW_TAG_namelist:\n-      return \"DW_TAG_namelist\";\n-    case DW_TAG_namelist_item:\n-      return \"DW_TAG_namelist_item\";\n-    case DW_TAG_packed_type:\n-      return \"DW_TAG_packed_type\";\n-    case DW_TAG_subprogram:\n-      return \"DW_TAG_subprogram\";\n-    case DW_TAG_template_type_param:\n-      return \"DW_TAG_template_type_param\";\n-    case DW_TAG_template_value_param:\n-      return \"DW_TAG_template_value_param\";\n-    case DW_TAG_thrown_type:\n-      return \"DW_TAG_thrown_type\";\n-    case DW_TAG_try_block:\n-      return \"DW_TAG_try_block\";\n-    case DW_TAG_variant_part:\n-      return \"DW_TAG_variant_part\";\n-    case DW_TAG_variable:\n-      return \"DW_TAG_variable\";\n-    case DW_TAG_volatile_type:\n-      return \"DW_TAG_volatile_type\";\n-    case DW_TAG_dwarf_procedure:\n-      return \"DW_TAG_dwarf_procedure\";\n-    case DW_TAG_restrict_type:\n-      return \"DW_TAG_restrict_type\";\n-    case DW_TAG_interface_type:\n-      return \"DW_TAG_interface_type\";\n-    case DW_TAG_namespace:\n-      return \"DW_TAG_namespace\";\n-    case DW_TAG_imported_module:\n-      return \"DW_TAG_imported_module\";\n-    case DW_TAG_unspecified_type:\n-      return \"DW_TAG_unspecified_type\";\n-    case DW_TAG_partial_unit:\n-      return \"DW_TAG_partial_unit\";\n-    case DW_TAG_imported_unit:\n-      return \"DW_TAG_imported_unit\";\n-    case DW_TAG_condition:\n-      return \"DW_TAG_condition\";\n-    case DW_TAG_shared_type:\n-      return \"DW_TAG_shared_type\";\n-    case DW_TAG_type_unit:\n-      return \"DW_TAG_type_unit\";\n-    case DW_TAG_rvalue_reference_type:\n-      return \"DW_TAG_rvalue_reference_type\";\n-    case DW_TAG_template_alias:\n-      return \"DW_TAG_template_alias\";\n-    case DW_TAG_GNU_template_parameter_pack:\n-      return \"DW_TAG_GNU_template_parameter_pack\";\n-    case DW_TAG_GNU_formal_parameter_pack:\n-      return \"DW_TAG_GNU_formal_parameter_pack\";\n-    case DW_TAG_MIPS_loop:\n-      return \"DW_TAG_MIPS_loop\";\n-    case DW_TAG_format_label:\n-      return \"DW_TAG_format_label\";\n-    case DW_TAG_function_template:\n-      return \"DW_TAG_function_template\";\n-    case DW_TAG_class_template:\n-      return \"DW_TAG_class_template\";\n-    case DW_TAG_GNU_BINCL:\n-      return \"DW_TAG_GNU_BINCL\";\n-    case DW_TAG_GNU_EINCL:\n-      return \"DW_TAG_GNU_EINCL\";\n-    case DW_TAG_GNU_template_template_param:\n-      return \"DW_TAG_GNU_template_template_param\";\n-    case DW_TAG_GNU_call_site:\n-      return \"DW_TAG_GNU_call_site\";\n-    case DW_TAG_GNU_call_site_parameter:\n-      return \"DW_TAG_GNU_call_site_parameter\";\n-    default:\n-      return \"DW_TAG_<unknown>\";\n-    }\n+  const char *name = get_DW_TAG_name (tag);\n+\n+  if (name != NULL)\n+    return name;\n+\n+  return \"DW_TAG_<unknown>\";\n }\n \n /* Convert a DWARF attribute code into its string name.  */\n \n static const char *\n dwarf_attr_name (unsigned int attr)\n {\n+  const char *name;\n+\n   switch (attr)\n     {\n-    case DW_AT_sibling:\n-      return \"DW_AT_sibling\";\n-    case DW_AT_location:\n-      return \"DW_AT_location\";\n-    case DW_AT_name:\n-      return \"DW_AT_name\";\n-    case DW_AT_ordering:\n-      return \"DW_AT_ordering\";\n-    case DW_AT_subscr_data:\n-      return \"DW_AT_subscr_data\";\n-    case DW_AT_byte_size:\n-      return \"DW_AT_byte_size\";\n-    case DW_AT_bit_offset:\n-      return \"DW_AT_bit_offset\";\n-    case DW_AT_bit_size:\n-      return \"DW_AT_bit_size\";\n-    case DW_AT_element_list:\n-      return \"DW_AT_element_list\";\n-    case DW_AT_stmt_list:\n-      return \"DW_AT_stmt_list\";\n-    case DW_AT_low_pc:\n-      return \"DW_AT_low_pc\";\n-    case DW_AT_high_pc:\n-      return \"DW_AT_high_pc\";\n-    case DW_AT_language:\n-      return \"DW_AT_language\";\n-    case DW_AT_member:\n-      return \"DW_AT_member\";\n-    case DW_AT_discr:\n-      return \"DW_AT_discr\";\n-    case DW_AT_discr_value:\n-      return \"DW_AT_discr_value\";\n-    case DW_AT_visibility:\n-      return \"DW_AT_visibility\";\n-    case DW_AT_import:\n-      return \"DW_AT_import\";\n-    case DW_AT_string_length:\n-      return \"DW_AT_string_length\";\n-    case DW_AT_common_reference:\n-      return \"DW_AT_common_reference\";\n-    case DW_AT_comp_dir:\n-      return \"DW_AT_comp_dir\";\n-    case DW_AT_const_value:\n-      return \"DW_AT_const_value\";\n-    case DW_AT_containing_type:\n-      return \"DW_AT_containing_type\";\n-    case DW_AT_default_value:\n-      return \"DW_AT_default_value\";\n-    case DW_AT_inline:\n-      return \"DW_AT_inline\";\n-    case DW_AT_is_optional:\n-      return \"DW_AT_is_optional\";\n-    case DW_AT_lower_bound:\n-      return \"DW_AT_lower_bound\";\n-    case DW_AT_producer:\n-      return \"DW_AT_producer\";\n-    case DW_AT_prototyped:\n-      return \"DW_AT_prototyped\";\n-    case DW_AT_return_addr:\n-      return \"DW_AT_return_addr\";\n-    case DW_AT_start_scope:\n-      return \"DW_AT_start_scope\";\n-    case DW_AT_bit_stride:\n-      return \"DW_AT_bit_stride\";\n-    case DW_AT_upper_bound:\n-      return \"DW_AT_upper_bound\";\n-    case DW_AT_abstract_origin:\n-      return \"DW_AT_abstract_origin\";\n-    case DW_AT_accessibility:\n-      return \"DW_AT_accessibility\";\n-    case DW_AT_address_class:\n-      return \"DW_AT_address_class\";\n-    case DW_AT_artificial:\n-      return \"DW_AT_artificial\";\n-    case DW_AT_base_types:\n-      return \"DW_AT_base_types\";\n-    case DW_AT_calling_convention:\n-      return \"DW_AT_calling_convention\";\n-    case DW_AT_count:\n-      return \"DW_AT_count\";\n-    case DW_AT_data_member_location:\n-      return \"DW_AT_data_member_location\";\n-    case DW_AT_decl_column:\n-      return \"DW_AT_decl_column\";\n-    case DW_AT_decl_file:\n-      return \"DW_AT_decl_file\";\n-    case DW_AT_decl_line:\n-      return \"DW_AT_decl_line\";\n-    case DW_AT_declaration:\n-      return \"DW_AT_declaration\";\n-    case DW_AT_discr_list:\n-      return \"DW_AT_discr_list\";\n-    case DW_AT_encoding:\n-      return \"DW_AT_encoding\";\n-    case DW_AT_external:\n-      return \"DW_AT_external\";\n-    case DW_AT_explicit:\n-      return \"DW_AT_explicit\";\n-    case DW_AT_frame_base:\n-      return \"DW_AT_frame_base\";\n-    case DW_AT_friend:\n-      return \"DW_AT_friend\";\n-    case DW_AT_identifier_case:\n-      return \"DW_AT_identifier_case\";\n-    case DW_AT_macro_info:\n-      return \"DW_AT_macro_info\";\n-    case DW_AT_namelist_items:\n-      return \"DW_AT_namelist_items\";\n-    case DW_AT_priority:\n-      return \"DW_AT_priority\";\n-    case DW_AT_segment:\n-      return \"DW_AT_segment\";\n-    case DW_AT_specification:\n-      return \"DW_AT_specification\";\n-    case DW_AT_static_link:\n-      return \"DW_AT_static_link\";\n-    case DW_AT_type:\n-      return \"DW_AT_type\";\n-    case DW_AT_use_location:\n-      return \"DW_AT_use_location\";\n-    case DW_AT_variable_parameter:\n-      return \"DW_AT_variable_parameter\";\n-    case DW_AT_virtuality:\n-      return \"DW_AT_virtuality\";\n-    case DW_AT_vtable_elem_location:\n-      return \"DW_AT_vtable_elem_location\";\n-\n-    case DW_AT_allocated:\n-      return \"DW_AT_allocated\";\n-    case DW_AT_associated:\n-      return \"DW_AT_associated\";\n-    case DW_AT_data_location:\n-      return \"DW_AT_data_location\";\n-    case DW_AT_byte_stride:\n-      return \"DW_AT_byte_stride\";\n-    case DW_AT_entry_pc:\n-      return \"DW_AT_entry_pc\";\n-    case DW_AT_use_UTF8:\n-      return \"DW_AT_use_UTF8\";\n-    case DW_AT_extension:\n-      return \"DW_AT_extension\";\n-    case DW_AT_ranges:\n-      return \"DW_AT_ranges\";\n-    case DW_AT_trampoline:\n-      return \"DW_AT_trampoline\";\n-    case DW_AT_call_column:\n-      return \"DW_AT_call_column\";\n-    case DW_AT_call_file:\n-      return \"DW_AT_call_file\";\n-    case DW_AT_call_line:\n-      return \"DW_AT_call_line\";\n-    case DW_AT_object_pointer:\n-      return \"DW_AT_object_pointer\";\n-\n-    case DW_AT_signature:\n-      return \"DW_AT_signature\";\n-    case DW_AT_main_subprogram:\n-      return \"DW_AT_main_subprogram\";\n-    case DW_AT_data_bit_offset:\n-      return \"DW_AT_data_bit_offset\";\n-    case DW_AT_const_expr:\n-      return \"DW_AT_const_expr\";\n-    case DW_AT_enum_class:\n-      return \"DW_AT_enum_class\";\n-    case DW_AT_linkage_name:\n-      return \"DW_AT_linkage_name\";\n-\n-    case DW_AT_MIPS_fde:\n-      return \"DW_AT_MIPS_fde\";\n-    case DW_AT_MIPS_loop_begin:\n-      return \"DW_AT_MIPS_loop_begin\";\n-    case DW_AT_MIPS_tail_loop_begin:\n-      return \"DW_AT_MIPS_tail_loop_begin\";\n-    case DW_AT_MIPS_epilog_begin:\n-      return \"DW_AT_MIPS_epilog_begin\";\n #if VMS_DEBUGGING_INFO\n     case DW_AT_HP_prologue:\n       return \"DW_AT_HP_prologue\";\n #else\n     case DW_AT_MIPS_loop_unroll_factor:\n       return \"DW_AT_MIPS_loop_unroll_factor\";\n #endif\n-    case DW_AT_MIPS_software_pipeline_depth:\n-      return \"DW_AT_MIPS_software_pipeline_depth\";\n-    case DW_AT_MIPS_linkage_name:\n-      return \"DW_AT_MIPS_linkage_name\";\n+\n #if VMS_DEBUGGING_INFO\n     case DW_AT_HP_epilogue:\n       return \"DW_AT_HP_epilogue\";\n #else\n     case DW_AT_MIPS_stride:\n       return \"DW_AT_MIPS_stride\";\n #endif\n-    case DW_AT_MIPS_abstract_name:\n-      return \"DW_AT_MIPS_abstract_name\";\n-    case DW_AT_MIPS_clone_origin:\n-      return \"DW_AT_MIPS_clone_origin\";\n-    case DW_AT_MIPS_has_inlines:\n-      return \"DW_AT_MIPS_has_inlines\";\n-\n-    case DW_AT_sf_names:\n-      return \"DW_AT_sf_names\";\n-    case DW_AT_src_info:\n-      return \"DW_AT_src_info\";\n-    case DW_AT_mac_info:\n-      return \"DW_AT_mac_info\";\n-    case DW_AT_src_coords:\n-      return \"DW_AT_src_coords\";\n-    case DW_AT_body_begin:\n-      return \"DW_AT_body_begin\";\n-    case DW_AT_body_end:\n-      return \"DW_AT_body_end\";\n-\n-    case DW_AT_GNU_vector:\n-      return \"DW_AT_GNU_vector\";\n-    case DW_AT_GNU_guarded_by:\n-      return \"DW_AT_GNU_guarded_by\";\n-    case DW_AT_GNU_pt_guarded_by:\n-      return \"DW_AT_GNU_pt_guarded_by\";\n-    case DW_AT_GNU_guarded:\n-      return \"DW_AT_GNU_guarded\";\n-    case DW_AT_GNU_pt_guarded:\n-      return \"DW_AT_GNU_pt_guarded\";\n-    case DW_AT_GNU_locks_excluded:\n-      return \"DW_AT_GNU_locks_excluded\";\n-    case DW_AT_GNU_exclusive_locks_required:\n-      return \"DW_AT_GNU_exclusive_locks_required\";\n-    case DW_AT_GNU_shared_locks_required:\n-      return \"DW_AT_GNU_shared_locks_required\";\n-    case DW_AT_GNU_odr_signature:\n-      return \"DW_AT_GNU_odr_signature\";\n-    case DW_AT_GNU_template_name:\n-      return \"DW_AT_GNU_template_name\";\n-    case DW_AT_GNU_call_site_value:\n-      return \"DW_AT_GNU_call_site_value\";\n-    case DW_AT_GNU_call_site_data_value:\n-      return \"DW_AT_GNU_call_site_data_value\";\n-    case DW_AT_GNU_call_site_target:\n-      return \"DW_AT_GNU_call_site_target\";\n-    case DW_AT_GNU_call_site_target_clobbered:\n-      return \"DW_AT_GNU_call_site_target_clobbered\";\n-    case DW_AT_GNU_tail_call:\n-      return \"DW_AT_GNU_tail_call\";\n-    case DW_AT_GNU_all_tail_call_sites:\n-      return \"DW_AT_GNU_all_tail_call_sites\";\n-    case DW_AT_GNU_all_call_sites:\n-      return \"DW_AT_GNU_all_call_sites\";\n-    case DW_AT_GNU_all_source_call_sites:\n-      return \"DW_AT_GNU_all_source_call_sites\";\n-    case DW_AT_GNU_macros:\n-      return \"DW_AT_GNU_macros\";\n-\n-    case DW_AT_GNAT_descriptive_type:\n-      return \"DW_AT_GNAT_descriptive_type\";\n-\n-    case DW_AT_VMS_rtnbeg_pd_address:\n-      return \"DW_AT_VMS_rtnbeg_pd_address\";\n-\n-    default:\n-      return \"DW_AT_<unknown>\";\n     }\n+\n+  name = get_DW_AT_name (attr);\n+\n+  if (name != NULL)\n+    return name;\n+\n+  return \"DW_AT_<unknown>\";\n }\n \n /* Convert a DWARF value form code into its string name.  */\n \n static const char *\n dwarf_form_name (unsigned int form)\n {\n-  switch (form)\n-    {\n-    case DW_FORM_addr:\n-      return \"DW_FORM_addr\";\n-    case DW_FORM_block2:\n-      return \"DW_FORM_block2\";\n-    case DW_FORM_block4:\n-      return \"DW_FORM_block4\";\n-    case DW_FORM_data2:\n-      return \"DW_FORM_data2\";\n-    case DW_FORM_data4:\n-      return \"DW_FORM_data4\";\n-    case DW_FORM_data8:\n-      return \"DW_FORM_data8\";\n-    case DW_FORM_string:\n-      return \"DW_FORM_string\";\n-    case DW_FORM_block:\n-      return \"DW_FORM_block\";\n-    case DW_FORM_block1:\n-      return \"DW_FORM_block1\";\n-    case DW_FORM_data1:\n-      return \"DW_FORM_data1\";\n-    case DW_FORM_flag:\n-      return \"DW_FORM_flag\";\n-    case DW_FORM_sdata:\n-      return \"DW_FORM_sdata\";\n-    case DW_FORM_strp:\n-      return \"DW_FORM_strp\";\n-    case DW_FORM_udata:\n-      return \"DW_FORM_udata\";\n-    case DW_FORM_ref_addr:\n-      return \"DW_FORM_ref_addr\";\n-    case DW_FORM_ref1:\n-      return \"DW_FORM_ref1\";\n-    case DW_FORM_ref2:\n-      return \"DW_FORM_ref2\";\n-    case DW_FORM_ref4:\n-      return \"DW_FORM_ref4\";\n-    case DW_FORM_ref8:\n-      return \"DW_FORM_ref8\";\n-    case DW_FORM_ref_udata:\n-      return \"DW_FORM_ref_udata\";\n-    case DW_FORM_indirect:\n-      return \"DW_FORM_indirect\";\n-    case DW_FORM_sec_offset:\n-      return \"DW_FORM_sec_offset\";\n-    case DW_FORM_exprloc:\n-      return \"DW_FORM_exprloc\";\n-    case DW_FORM_flag_present:\n-      return \"DW_FORM_flag_present\";\n-    case DW_FORM_ref_sig8:\n-      return \"DW_FORM_ref_sig8\";\n-    default:\n-      return \"DW_FORM_<unknown>\";\n-    }\n+  const char *name = get_DW_FORM_name (form);\n+\n+  if (name != NULL)\n+    return name;\n+\n+  return \"DW_FORM_<unknown>\";\n }\n \f\n /* Determine the \"ultimate origin\" of a decl.  The decl may be an inlined"}, {"sha": "8c5a1bf789c0ff0f16d0c36fbe428f2cd1aac1c0", "filename": "include/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -1,3 +1,15 @@\n+2012-04-27  Tom Tromey  <tromey@redhat.com>\n+\n+\t* dwarf2.h (enum dwarf_tag, enum dwarf_form, enum dwarf_attribute)\n+\t(enum dwarf_location_atom, enum dwarf_type, enum\n+\tdwarf_call_frame_info): Remove.\n+\t(DW_TAG, DW_TAG_DUP, DW_FORM, DW_AT, DW_AT_DUP, DW_OP)\n+\t(DW_OP_DUP, DW_ATE, DW_ATE_DUP, DW_CFA): New macros.\n+\tInclude dwarf2.def.\n+\t(get_DW_TAG_name, get_DW_AT_name, get_DW_FORM_name)\n+\t(get_DW_OP_name, get_DW_ATE_name): Declare.\n+\t* dwarf2.def: New file, from dwarf2.h.\n+\n 2012-04-10  Tristan Gingold  <gingold@adacore.com>\n \n \t* splay-tree.h: Conditionnaly includes stdint.h and inttypes.h"}, {"sha": "4fe919454d0c667c601f4864e82339fc3d8fbf2e", "filename": "include/dwarf2.def", "status": "added", "additions": 679, "deletions": 0, "changes": 679, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/include%2Fdwarf2.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/include%2Fdwarf2.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.def?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -0,0 +1,679 @@\n+/* -*- c -*-\n+   Declarations and definitions of codes relating to the DWARF2 and\n+   DWARF3 symbolic debugging information formats.\n+   Copyright (C) 1992, 1993, 1995, 1996, 1997, 1999, 2000, 2001, 2002,\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n+   Free Software Foundation, Inc.\n+\n+   Written by Gary Funck (gary@intrepid.com) The Ada Joint Program\n+   Office (AJPO), Florida State University and Silicon Graphics Inc.\n+   provided support for this effort -- June 21, 1995.\n+\n+   Derived from the DWARF 1 implementation written by Ron Guilmette\n+   (rfg@netcom.com), November 1990.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 3, or (at your option) any later\n+   version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* This file is derived from the DWARF specification (a public document)\n+   Revision 2.0.0 (July 27, 1993) developed by the UNIX International\n+   Programming Languages Special Interest Group (UI/PLSIG) and distributed\n+   by UNIX International.  Copies of this specification are available from\n+   UNIX International, 20 Waterview Boulevard, Parsippany, NJ, 07054.\n+\n+   This file also now contains definitions from the DWARF 3 specification\n+   published Dec 20, 2005, available from: http://dwarf.freestandards.org.\n+\n+   This file also now contains definitions from the DWARF 4\n+   specification, available from: http://dwarfstd.org/ */\n+\n+/* This file declares various DWARF-related constants using a set of\n+   macros which can be redefined by the including file.\n+   \n+   The macros are in sections.  Each section corresponds to a single\n+   set of DWARF constants and has a corresponding key.  The key is\n+   used in all the macro names.\n+   \n+   The sections are TAG (for DW_TAG_ constants), FORM (DW_FORM_), AT\n+   (DW_AT_), OP (DW_OP_), ATE (DW_ATE_), and CFA (DW_CFA_).\n+   \n+   Using TAG as an example, the following macros may be used for each\n+   key:\n+   \n+   DW_FIRST_TAG(name, value) - Introduce the first DW_TAG constant.\n+   \n+   DW_TAG(name, value) - Define a subsequent constant.\n+   \n+   DW_TAG_DUP(name, value) - Define a subsequent constant whose value\n+   is a duplicate of some other constant.  Not all keys use the _DUP\n+   macro form.  If more than one name shares a value, then the base\n+   (DW_TAG) form will be the preferred name and DW_TAG_DUP will hold\n+   any alternate names.\n+   \n+   DW_END_TAG - Invoked at the end of the DW_TAG constants.  */\n+\n+DW_FIRST_TAG (DW_TAG_padding, 0x00)\n+DW_TAG (DW_TAG_array_type, 0x01)\n+DW_TAG (DW_TAG_class_type, 0x02)\n+DW_TAG (DW_TAG_entry_point, 0x03)\n+DW_TAG (DW_TAG_enumeration_type, 0x04)\n+DW_TAG (DW_TAG_formal_parameter, 0x05)\n+DW_TAG (DW_TAG_imported_declaration, 0x08)\n+DW_TAG (DW_TAG_label, 0x0a)\n+DW_TAG (DW_TAG_lexical_block, 0x0b)\n+DW_TAG (DW_TAG_member, 0x0d)\n+DW_TAG (DW_TAG_pointer_type, 0x0f)\n+DW_TAG (DW_TAG_reference_type, 0x10)\n+DW_TAG (DW_TAG_compile_unit, 0x11)\n+DW_TAG (DW_TAG_string_type, 0x12)\n+DW_TAG (DW_TAG_structure_type, 0x13)\n+DW_TAG (DW_TAG_subroutine_type, 0x15)\n+DW_TAG (DW_TAG_typedef, 0x16)\n+DW_TAG (DW_TAG_union_type, 0x17)\n+DW_TAG (DW_TAG_unspecified_parameters, 0x18)\n+DW_TAG (DW_TAG_variant, 0x19)\n+DW_TAG (DW_TAG_common_block, 0x1a)\n+DW_TAG (DW_TAG_common_inclusion, 0x1b)\n+DW_TAG (DW_TAG_inheritance, 0x1c)\n+DW_TAG (DW_TAG_inlined_subroutine, 0x1d)\n+DW_TAG (DW_TAG_module, 0x1e)\n+DW_TAG (DW_TAG_ptr_to_member_type, 0x1f)\n+DW_TAG (DW_TAG_set_type, 0x20)\n+DW_TAG (DW_TAG_subrange_type, 0x21)\n+DW_TAG (DW_TAG_with_stmt, 0x22)\n+DW_TAG (DW_TAG_access_declaration, 0x23)\n+DW_TAG (DW_TAG_base_type, 0x24)\n+DW_TAG (DW_TAG_catch_block, 0x25)\n+DW_TAG (DW_TAG_const_type, 0x26)\n+DW_TAG (DW_TAG_constant, 0x27)\n+DW_TAG (DW_TAG_enumerator, 0x28)\n+DW_TAG (DW_TAG_file_type, 0x29)\n+DW_TAG (DW_TAG_friend, 0x2a)\n+DW_TAG (DW_TAG_namelist, 0x2b)\n+DW_TAG (DW_TAG_namelist_item, 0x2c)\n+DW_TAG (DW_TAG_packed_type, 0x2d)\n+DW_TAG (DW_TAG_subprogram, 0x2e)\n+DW_TAG (DW_TAG_template_type_param, 0x2f)\n+DW_TAG (DW_TAG_template_value_param, 0x30)\n+DW_TAG (DW_TAG_thrown_type, 0x31)\n+DW_TAG (DW_TAG_try_block, 0x32)\n+DW_TAG (DW_TAG_variant_part, 0x33)\n+DW_TAG (DW_TAG_variable, 0x34)\n+DW_TAG (DW_TAG_volatile_type, 0x35)\n+/* DWARF 3.  */\n+DW_TAG (DW_TAG_dwarf_procedure, 0x36)\n+DW_TAG (DW_TAG_restrict_type, 0x37)\n+DW_TAG (DW_TAG_interface_type, 0x38)\n+DW_TAG (DW_TAG_namespace, 0x39)\n+DW_TAG (DW_TAG_imported_module, 0x3a)\n+DW_TAG (DW_TAG_unspecified_type, 0x3b)\n+DW_TAG (DW_TAG_partial_unit, 0x3c)\n+DW_TAG (DW_TAG_imported_unit, 0x3d)\n+DW_TAG (DW_TAG_condition, 0x3f)\n+DW_TAG (DW_TAG_shared_type, 0x40)\n+/* DWARF 4.  */\n+DW_TAG (DW_TAG_type_unit, 0x41)\n+DW_TAG (DW_TAG_rvalue_reference_type, 0x42)\n+DW_TAG (DW_TAG_template_alias, 0x43)\n+\n+DW_TAG_DUP (DW_TAG_lo_user, 0x4080)\n+DW_TAG_DUP (DW_TAG_hi_user, 0xffff)\n+\n+/* SGI/MIPS Extensions.  */\n+DW_TAG (DW_TAG_MIPS_loop, 0x4081)\n+\n+/* HP extensions.  See: ftp://ftp.hp.com/pub/lang/tools/WDB/wdb-4.0.tar.gz .  */\n+DW_TAG (DW_TAG_HP_array_descriptor, 0x4090)\n+DW_TAG (DW_TAG_HP_Bliss_field, 0x4091)\n+DW_TAG (DW_TAG_HP_Bliss_field_set, 0x4092)\n+\n+/* GNU extensions.  */\n+DW_TAG (DW_TAG_format_label, 0x4101)\t/* For FORTRAN 77 and Fortran 90.  */\n+DW_TAG (DW_TAG_function_template, 0x4102)\t/* For C++.  */\n+DW_TAG (DW_TAG_class_template, 0x4103)\t/* For C++.  */\n+DW_TAG (DW_TAG_GNU_BINCL, 0x4104)\n+DW_TAG (DW_TAG_GNU_EINCL, 0x4105)\n+/* Template template parameter.\n+   See http://gcc.gnu.org/wiki/TemplateParmsDwarf .  */\n+DW_TAG (DW_TAG_GNU_template_template_param, 0x4106)\n+\n+/* Template parameter pack extension, specified at\n+   http://wiki.dwarfstd.org/index.php?title=C%2B%2B0x:_Variadic_templates\n+   The values of these two TAGS are in the DW_TAG_GNU_* space until the tags\n+   are properly part of DWARF 5.  */\n+DW_TAG (DW_TAG_GNU_template_parameter_pack, 0x4107)\n+DW_TAG (DW_TAG_GNU_formal_parameter_pack, 0x4108)\n+/* The GNU call site extension, specified at\n+   http://www.dwarfstd.org/ShowIssue.php?issue=100909.2&type=open .\n+   The values of these two TAGS are in the DW_TAG_GNU_* space until the tags\n+   are properly part of DWARF 5.  */\n+DW_TAG (DW_TAG_GNU_call_site, 0x4109)\n+DW_TAG (DW_TAG_GNU_call_site_parameter, 0x410a)\n+/* Extensions for UPC.  See: http://upc.gwu.edu/~upc.  */\n+DW_TAG (DW_TAG_upc_shared_type, 0x8765)\n+DW_TAG (DW_TAG_upc_strict_type, 0x8766)\n+DW_TAG (DW_TAG_upc_relaxed_type, 0x8767)\n+/* PGI (STMicroelectronics) extensions.  No documentation available.  */\n+DW_TAG (DW_TAG_PGI_kanji_type, 0xA000)\n+DW_TAG (DW_TAG_PGI_interface_block, 0xA020)\n+DW_END_TAG\n+\n+DW_FIRST_FORM (DW_FORM_addr, 0x01)\n+DW_FORM (DW_FORM_block2, 0x03)\n+DW_FORM (DW_FORM_block4, 0x04)\n+DW_FORM (DW_FORM_data2, 0x05)\n+DW_FORM (DW_FORM_data4, 0x06)\n+DW_FORM (DW_FORM_data8, 0x07)\n+DW_FORM (DW_FORM_string, 0x08)\n+DW_FORM (DW_FORM_block, 0x09)\n+DW_FORM (DW_FORM_block1, 0x0a)\n+DW_FORM (DW_FORM_data1, 0x0b)\n+DW_FORM (DW_FORM_flag, 0x0c)\n+DW_FORM (DW_FORM_sdata, 0x0d)\n+DW_FORM (DW_FORM_strp, 0x0e)\n+DW_FORM (DW_FORM_udata, 0x0f)\n+DW_FORM (DW_FORM_ref_addr, 0x10)\n+DW_FORM (DW_FORM_ref1, 0x11)\n+DW_FORM (DW_FORM_ref2, 0x12)\n+DW_FORM (DW_FORM_ref4, 0x13)\n+DW_FORM (DW_FORM_ref8, 0x14)\n+DW_FORM (DW_FORM_ref_udata, 0x15)\n+DW_FORM (DW_FORM_indirect, 0x16)\n+/* DWARF 4.  */\n+DW_FORM (DW_FORM_sec_offset, 0x17)\n+DW_FORM (DW_FORM_exprloc, 0x18)\n+DW_FORM (DW_FORM_flag_present, 0x19)\n+DW_FORM (DW_FORM_ref_sig8, 0x20)\n+/* Extensions for Fission.  See http://gcc.gnu.org/wiki/DebugFission.  */\n+DW_FORM (DW_FORM_GNU_ref_index, 0x1f00)\n+DW_FORM (DW_FORM_GNU_addr_index, 0x1f01)\n+DW_FORM (DW_FORM_GNU_str_index, 0x1f02)\n+DW_END_FORM\n+\n+DW_FIRST_AT (DW_AT_sibling, 0x01)\n+DW_AT (DW_AT_location, 0x02)\n+DW_AT (DW_AT_name, 0x03)\n+DW_AT (DW_AT_ordering, 0x09)\n+DW_AT (DW_AT_subscr_data, 0x0a)\n+DW_AT (DW_AT_byte_size, 0x0b)\n+DW_AT (DW_AT_bit_offset, 0x0c)\n+DW_AT (DW_AT_bit_size, 0x0d)\n+DW_AT (DW_AT_element_list, 0x0f)\n+DW_AT (DW_AT_stmt_list, 0x10)\n+DW_AT (DW_AT_low_pc, 0x11)\n+DW_AT (DW_AT_high_pc, 0x12)\n+DW_AT (DW_AT_language, 0x13)\n+DW_AT (DW_AT_member, 0x14)\n+DW_AT (DW_AT_discr, 0x15)\n+DW_AT (DW_AT_discr_value, 0x16)\n+DW_AT (DW_AT_visibility, 0x17)\n+DW_AT (DW_AT_import, 0x18)\n+DW_AT (DW_AT_string_length, 0x19)\n+DW_AT (DW_AT_common_reference, 0x1a)\n+DW_AT (DW_AT_comp_dir, 0x1b)\n+DW_AT (DW_AT_const_value, 0x1c)\n+DW_AT (DW_AT_containing_type, 0x1d)\n+DW_AT (DW_AT_default_value, 0x1e)\n+DW_AT (DW_AT_inline, 0x20)\n+DW_AT (DW_AT_is_optional, 0x21)\n+DW_AT (DW_AT_lower_bound, 0x22)\n+DW_AT (DW_AT_producer, 0x25)\n+DW_AT (DW_AT_prototyped, 0x27)\n+DW_AT (DW_AT_return_addr, 0x2a)\n+DW_AT (DW_AT_start_scope, 0x2c)\n+DW_AT (DW_AT_bit_stride, 0x2e)\n+DW_AT (DW_AT_upper_bound, 0x2f)\n+DW_AT (DW_AT_abstract_origin, 0x31)\n+DW_AT (DW_AT_accessibility, 0x32)\n+DW_AT (DW_AT_address_class, 0x33)\n+DW_AT (DW_AT_artificial, 0x34)\n+DW_AT (DW_AT_base_types, 0x35)\n+DW_AT (DW_AT_calling_convention, 0x36)\n+DW_AT (DW_AT_count, 0x37)\n+DW_AT (DW_AT_data_member_location, 0x38)\n+DW_AT (DW_AT_decl_column, 0x39)\n+DW_AT (DW_AT_decl_file, 0x3a)\n+DW_AT (DW_AT_decl_line, 0x3b)\n+DW_AT (DW_AT_declaration, 0x3c)\n+DW_AT (DW_AT_discr_list, 0x3d)\n+DW_AT (DW_AT_encoding, 0x3e)\n+DW_AT (DW_AT_external, 0x3f)\n+DW_AT (DW_AT_frame_base, 0x40)\n+DW_AT (DW_AT_friend, 0x41)\n+DW_AT (DW_AT_identifier_case, 0x42)\n+DW_AT (DW_AT_macro_info, 0x43)\n+DW_AT (DW_AT_namelist_items, 0x44)\n+DW_AT (DW_AT_priority, 0x45)\n+DW_AT (DW_AT_segment, 0x46)\n+DW_AT (DW_AT_specification, 0x47)\n+DW_AT (DW_AT_static_link, 0x48)\n+DW_AT (DW_AT_type, 0x49)\n+DW_AT (DW_AT_use_location, 0x4a)\n+DW_AT (DW_AT_variable_parameter, 0x4b)\n+DW_AT (DW_AT_virtuality, 0x4c)\n+DW_AT (DW_AT_vtable_elem_location, 0x4d)\n+/* DWARF 3 values.  */\n+DW_AT (DW_AT_allocated, 0x4e)\n+DW_AT (DW_AT_associated, 0x4f)\n+DW_AT (DW_AT_data_location, 0x50)\n+DW_AT (DW_AT_byte_stride, 0x51)\n+DW_AT (DW_AT_entry_pc, 0x52)\n+DW_AT (DW_AT_use_UTF8, 0x53)\n+DW_AT (DW_AT_extension, 0x54)\n+DW_AT (DW_AT_ranges, 0x55)\n+DW_AT (DW_AT_trampoline, 0x56)\n+DW_AT (DW_AT_call_column, 0x57)\n+DW_AT (DW_AT_call_file, 0x58)\n+DW_AT (DW_AT_call_line, 0x59)\n+DW_AT (DW_AT_description, 0x5a)\n+DW_AT (DW_AT_binary_scale, 0x5b)\n+DW_AT (DW_AT_decimal_scale, 0x5c)\n+DW_AT (DW_AT_small, 0x5d)\n+DW_AT (DW_AT_decimal_sign, 0x5e)\n+DW_AT (DW_AT_digit_count, 0x5f)\n+DW_AT (DW_AT_picture_string, 0x60)\n+DW_AT (DW_AT_mutable, 0x61)\n+DW_AT (DW_AT_threads_scaled, 0x62)\n+DW_AT (DW_AT_explicit, 0x63)\n+DW_AT (DW_AT_object_pointer, 0x64)\n+DW_AT (DW_AT_endianity, 0x65)\n+DW_AT (DW_AT_elemental, 0x66)\n+DW_AT (DW_AT_pure, 0x67)\n+DW_AT (DW_AT_recursive, 0x68)\n+/* DWARF 4.  */\n+DW_AT (DW_AT_signature, 0x69)\n+DW_AT (DW_AT_main_subprogram, 0x6a)\n+DW_AT (DW_AT_data_bit_offset, 0x6b)\n+DW_AT (DW_AT_const_expr, 0x6c)\n+DW_AT (DW_AT_enum_class, 0x6d)\n+DW_AT (DW_AT_linkage_name, 0x6e)\n+\n+DW_AT_DUP (DW_AT_lo_user, 0x2000) /* Implementation-defined range start.  */\n+DW_AT_DUP (DW_AT_hi_user, 0x3fff) /* Implementation-defined range end.  */\n+\n+/* SGI/MIPS extensions.  */\n+DW_AT (DW_AT_MIPS_fde, 0x2001)\n+DW_AT (DW_AT_MIPS_loop_begin, 0x2002)\n+DW_AT (DW_AT_MIPS_tail_loop_begin, 0x2003)\n+DW_AT (DW_AT_MIPS_epilog_begin, 0x2004)\n+DW_AT (DW_AT_MIPS_loop_unroll_factor, 0x2005)\n+DW_AT (DW_AT_MIPS_software_pipeline_depth, 0x2006)\n+DW_AT (DW_AT_MIPS_linkage_name, 0x2007)\n+DW_AT (DW_AT_MIPS_stride, 0x2008)\n+DW_AT (DW_AT_MIPS_abstract_name, 0x2009)\n+DW_AT (DW_AT_MIPS_clone_origin, 0x200a)\n+DW_AT (DW_AT_MIPS_has_inlines, 0x200b)\n+/* HP extensions.  */\n+DW_AT (DW_AT_HP_block_index, 0x2000)\n+DW_AT_DUP (DW_AT_HP_unmodifiable, 0x2001) /* Same as DW_AT_MIPS_fde.  */\n+DW_AT_DUP (DW_AT_HP_prologue, 0x2005) /* Same as DW_AT_MIPS_loop_unroll.  */\n+DW_AT_DUP (DW_AT_HP_epilogue, 0x2008) /* Same as DW_AT_MIPS_stride.  */\n+DW_AT (DW_AT_HP_actuals_stmt_list, 0x2010)\n+DW_AT (DW_AT_HP_proc_per_section, 0x2011)\n+DW_AT (DW_AT_HP_raw_data_ptr, 0x2012)\n+DW_AT (DW_AT_HP_pass_by_reference, 0x2013)\n+DW_AT (DW_AT_HP_opt_level, 0x2014)\n+DW_AT (DW_AT_HP_prof_version_id, 0x2015)\n+DW_AT (DW_AT_HP_opt_flags, 0x2016)\n+DW_AT (DW_AT_HP_cold_region_low_pc, 0x2017)\n+DW_AT (DW_AT_HP_cold_region_high_pc, 0x2018)\n+DW_AT (DW_AT_HP_all_variables_modifiable, 0x2019)\n+DW_AT (DW_AT_HP_linkage_name, 0x201a)\n+DW_AT (DW_AT_HP_prof_flags, 0x201b)  /* In comp unit of procs_info for -g.  */\n+DW_AT (DW_AT_HP_unit_name, 0x201f)\n+DW_AT (DW_AT_HP_unit_size, 0x2020)\n+DW_AT (DW_AT_HP_widened_byte_size, 0x2021)\n+DW_AT (DW_AT_HP_definition_points, 0x2022)\n+DW_AT (DW_AT_HP_default_location, 0x2023)\n+DW_AT (DW_AT_HP_is_result_param, 0x2029)\n+\n+/* GNU extensions.  */\n+DW_AT (DW_AT_sf_names, 0x2101)\n+DW_AT (DW_AT_src_info, 0x2102)\n+DW_AT (DW_AT_mac_info, 0x2103)\n+DW_AT (DW_AT_src_coords, 0x2104)\n+DW_AT (DW_AT_body_begin, 0x2105)\n+DW_AT (DW_AT_body_end, 0x2106)\n+DW_AT (DW_AT_GNU_vector, 0x2107)\n+/* Thread-safety annotations.\n+   See http://gcc.gnu.org/wiki/ThreadSafetyAnnotation .  */\n+DW_AT (DW_AT_GNU_guarded_by, 0x2108)\n+DW_AT (DW_AT_GNU_pt_guarded_by, 0x2109)\n+DW_AT (DW_AT_GNU_guarded, 0x210a)\n+DW_AT (DW_AT_GNU_pt_guarded, 0x210b)\n+DW_AT (DW_AT_GNU_locks_excluded, 0x210c)\n+DW_AT (DW_AT_GNU_exclusive_locks_required, 0x210d)\n+DW_AT (DW_AT_GNU_shared_locks_required, 0x210e)\n+/* One-definition rule violation detection.\n+   See http://gcc.gnu.org/wiki/DwarfSeparateTypeInfo .  */\n+DW_AT (DW_AT_GNU_odr_signature, 0x210f)\n+/* Template template argument name.\n+   See http://gcc.gnu.org/wiki/TemplateParmsDwarf .  */\n+DW_AT (DW_AT_GNU_template_name, 0x2110)\n+/* The GNU call site extension.\n+   See http://www.dwarfstd.org/ShowIssue.php?issue=100909.2&type=open .  */\n+DW_AT (DW_AT_GNU_call_site_value, 0x2111)\n+DW_AT (DW_AT_GNU_call_site_data_value, 0x2112)\n+DW_AT (DW_AT_GNU_call_site_target, 0x2113)\n+DW_AT (DW_AT_GNU_call_site_target_clobbered, 0x2114)\n+DW_AT (DW_AT_GNU_tail_call, 0x2115)\n+DW_AT (DW_AT_GNU_all_tail_call_sites, 0x2116)\n+DW_AT (DW_AT_GNU_all_call_sites, 0x2117)\n+DW_AT (DW_AT_GNU_all_source_call_sites, 0x2118)\n+/* Section offset into .debug_macro section.  */\n+DW_AT (DW_AT_GNU_macros, 0x2119)\n+/* Extensions for Fission.  See http://gcc.gnu.org/wiki/DebugFission.  */\n+DW_AT (DW_AT_GNU_dwo_name, 0x2130)\n+DW_AT (DW_AT_GNU_dwo_id, 0x2131)\n+DW_AT (DW_AT_GNU_ref_base, 0x2132)\n+DW_AT (DW_AT_GNU_addr_base, 0x2133)\n+DW_AT (DW_AT_GNU_pubnames, 0x2134)\n+DW_AT (DW_AT_GNU_pubtypes, 0x2135)\n+/* VMS extensions.  */\n+DW_AT (DW_AT_VMS_rtnbeg_pd_address, 0x2201)\n+/* GNAT extensions.  */\n+/* GNAT descriptive type.\n+   See http://gcc.gnu.org/wiki/DW_AT_GNAT_descriptive_type .  */\n+DW_AT (DW_AT_use_GNAT_descriptive_type, 0x2301)\n+DW_AT (DW_AT_GNAT_descriptive_type, 0x2302)\n+/* UPC extension.  */\n+DW_AT (DW_AT_upc_threads_scaled, 0x3210)\n+/* PGI (STMicroelectronics) extensions.  */\n+DW_AT (DW_AT_PGI_lbase, 0x3a00)\n+DW_AT (DW_AT_PGI_soffset, 0x3a01)\n+DW_AT (DW_AT_PGI_lstride, 0x3a02)\n+DW_END_AT\n+\n+DW_FIRST_OP (DW_OP_addr, 0x03)\n+DW_OP (DW_OP_deref, 0x06)\n+DW_OP (DW_OP_const1u, 0x08)\n+DW_OP (DW_OP_const1s, 0x09)\n+DW_OP (DW_OP_const2u, 0x0a)\n+DW_OP (DW_OP_const2s, 0x0b)\n+DW_OP (DW_OP_const4u, 0x0c)\n+DW_OP (DW_OP_const4s, 0x0d)\n+DW_OP (DW_OP_const8u, 0x0e)\n+DW_OP (DW_OP_const8s, 0x0f)\n+DW_OP (DW_OP_constu, 0x10)\n+DW_OP (DW_OP_consts, 0x11)\n+DW_OP (DW_OP_dup, 0x12)\n+DW_OP (DW_OP_drop, 0x13)\n+DW_OP (DW_OP_over, 0x14)\n+DW_OP (DW_OP_pick, 0x15)\n+DW_OP (DW_OP_swap, 0x16)\n+DW_OP (DW_OP_rot, 0x17)\n+DW_OP (DW_OP_xderef, 0x18)\n+DW_OP (DW_OP_abs, 0x19)\n+DW_OP (DW_OP_and, 0x1a)\n+DW_OP (DW_OP_div, 0x1b)\n+DW_OP (DW_OP_minus, 0x1c)\n+DW_OP (DW_OP_mod, 0x1d)\n+DW_OP (DW_OP_mul, 0x1e)\n+DW_OP (DW_OP_neg, 0x1f)\n+DW_OP (DW_OP_not, 0x20)\n+DW_OP (DW_OP_or, 0x21)\n+DW_OP (DW_OP_plus, 0x22)\n+DW_OP (DW_OP_plus_uconst, 0x23)\n+DW_OP (DW_OP_shl, 0x24)\n+DW_OP (DW_OP_shr, 0x25)\n+DW_OP (DW_OP_shra, 0x26)\n+DW_OP (DW_OP_xor, 0x27)\n+DW_OP (DW_OP_bra, 0x28)\n+DW_OP (DW_OP_eq, 0x29)\n+DW_OP (DW_OP_ge, 0x2a)\n+DW_OP (DW_OP_gt, 0x2b)\n+DW_OP (DW_OP_le, 0x2c)\n+DW_OP (DW_OP_lt, 0x2d)\n+DW_OP (DW_OP_ne, 0x2e)\n+DW_OP (DW_OP_skip, 0x2f)\n+DW_OP (DW_OP_lit0, 0x30)\n+DW_OP (DW_OP_lit1, 0x31)\n+DW_OP (DW_OP_lit2, 0x32)\n+DW_OP (DW_OP_lit3, 0x33)\n+DW_OP (DW_OP_lit4, 0x34)\n+DW_OP (DW_OP_lit5, 0x35)\n+DW_OP (DW_OP_lit6, 0x36)\n+DW_OP (DW_OP_lit7, 0x37)\n+DW_OP (DW_OP_lit8, 0x38)\n+DW_OP (DW_OP_lit9, 0x39)\n+DW_OP (DW_OP_lit10, 0x3a)\n+DW_OP (DW_OP_lit11, 0x3b)\n+DW_OP (DW_OP_lit12, 0x3c)\n+DW_OP (DW_OP_lit13, 0x3d)\n+DW_OP (DW_OP_lit14, 0x3e)\n+DW_OP (DW_OP_lit15, 0x3f)\n+DW_OP (DW_OP_lit16, 0x40)\n+DW_OP (DW_OP_lit17, 0x41)\n+DW_OP (DW_OP_lit18, 0x42)\n+DW_OP (DW_OP_lit19, 0x43)\n+DW_OP (DW_OP_lit20, 0x44)\n+DW_OP (DW_OP_lit21, 0x45)\n+DW_OP (DW_OP_lit22, 0x46)\n+DW_OP (DW_OP_lit23, 0x47)\n+DW_OP (DW_OP_lit24, 0x48)\n+DW_OP (DW_OP_lit25, 0x49)\n+DW_OP (DW_OP_lit26, 0x4a)\n+DW_OP (DW_OP_lit27, 0x4b)\n+DW_OP (DW_OP_lit28, 0x4c)\n+DW_OP (DW_OP_lit29, 0x4d)\n+DW_OP (DW_OP_lit30, 0x4e)\n+DW_OP (DW_OP_lit31, 0x4f)\n+DW_OP (DW_OP_reg0, 0x50)\n+DW_OP (DW_OP_reg1, 0x51)\n+DW_OP (DW_OP_reg2, 0x52)\n+DW_OP (DW_OP_reg3, 0x53)\n+DW_OP (DW_OP_reg4, 0x54)\n+DW_OP (DW_OP_reg5, 0x55)\n+DW_OP (DW_OP_reg6, 0x56)\n+DW_OP (DW_OP_reg7, 0x57)\n+DW_OP (DW_OP_reg8, 0x58)\n+DW_OP (DW_OP_reg9, 0x59)\n+DW_OP (DW_OP_reg10, 0x5a)\n+DW_OP (DW_OP_reg11, 0x5b)\n+DW_OP (DW_OP_reg12, 0x5c)\n+DW_OP (DW_OP_reg13, 0x5d)\n+DW_OP (DW_OP_reg14, 0x5e)\n+DW_OP (DW_OP_reg15, 0x5f)\n+DW_OP (DW_OP_reg16, 0x60)\n+DW_OP (DW_OP_reg17, 0x61)\n+DW_OP (DW_OP_reg18, 0x62)\n+DW_OP (DW_OP_reg19, 0x63)\n+DW_OP (DW_OP_reg20, 0x64)\n+DW_OP (DW_OP_reg21, 0x65)\n+DW_OP (DW_OP_reg22, 0x66)\n+DW_OP (DW_OP_reg23, 0x67)\n+DW_OP (DW_OP_reg24, 0x68)\n+DW_OP (DW_OP_reg25, 0x69)\n+DW_OP (DW_OP_reg26, 0x6a)\n+DW_OP (DW_OP_reg27, 0x6b)\n+DW_OP (DW_OP_reg28, 0x6c)\n+DW_OP (DW_OP_reg29, 0x6d)\n+DW_OP (DW_OP_reg30, 0x6e)\n+DW_OP (DW_OP_reg31, 0x6f)\n+DW_OP (DW_OP_breg0, 0x70)\n+DW_OP (DW_OP_breg1, 0x71)\n+DW_OP (DW_OP_breg2, 0x72)\n+DW_OP (DW_OP_breg3, 0x73)\n+DW_OP (DW_OP_breg4, 0x74)\n+DW_OP (DW_OP_breg5, 0x75)\n+DW_OP (DW_OP_breg6, 0x76)\n+DW_OP (DW_OP_breg7, 0x77)\n+DW_OP (DW_OP_breg8, 0x78)\n+DW_OP (DW_OP_breg9, 0x79)\n+DW_OP (DW_OP_breg10, 0x7a)\n+DW_OP (DW_OP_breg11, 0x7b)\n+DW_OP (DW_OP_breg12, 0x7c)\n+DW_OP (DW_OP_breg13, 0x7d)\n+DW_OP (DW_OP_breg14, 0x7e)\n+DW_OP (DW_OP_breg15, 0x7f)\n+DW_OP (DW_OP_breg16, 0x80)\n+DW_OP (DW_OP_breg17, 0x81)\n+DW_OP (DW_OP_breg18, 0x82)\n+DW_OP (DW_OP_breg19, 0x83)\n+DW_OP (DW_OP_breg20, 0x84)\n+DW_OP (DW_OP_breg21, 0x85)\n+DW_OP (DW_OP_breg22, 0x86)\n+DW_OP (DW_OP_breg23, 0x87)\n+DW_OP (DW_OP_breg24, 0x88)\n+DW_OP (DW_OP_breg25, 0x89)\n+DW_OP (DW_OP_breg26, 0x8a)\n+DW_OP (DW_OP_breg27, 0x8b)\n+DW_OP (DW_OP_breg28, 0x8c)\n+DW_OP (DW_OP_breg29, 0x8d)\n+DW_OP (DW_OP_breg30, 0x8e)\n+DW_OP (DW_OP_breg31, 0x8f)\n+DW_OP (DW_OP_regx, 0x90)\n+DW_OP (DW_OP_fbreg, 0x91)\n+DW_OP (DW_OP_bregx, 0x92)\n+DW_OP (DW_OP_piece, 0x93)\n+DW_OP (DW_OP_deref_size, 0x94)\n+DW_OP (DW_OP_xderef_size, 0x95)\n+DW_OP (DW_OP_nop, 0x96)\n+/* DWARF 3 extensions.  */\n+DW_OP (DW_OP_push_object_address, 0x97)\n+DW_OP (DW_OP_call2, 0x98)\n+DW_OP (DW_OP_call4, 0x99)\n+DW_OP (DW_OP_call_ref, 0x9a)\n+DW_OP (DW_OP_form_tls_address, 0x9b)\n+DW_OP (DW_OP_call_frame_cfa, 0x9c)\n+DW_OP (DW_OP_bit_piece, 0x9d)\n+\n+/* DWARF 4 extensions.  */\n+DW_OP (DW_OP_implicit_value, 0x9e)\n+DW_OP (DW_OP_stack_value, 0x9f)\n+\n+DW_OP_DUP (DW_OP_lo_user, 0xe0)\t/* Implementation-defined range start.  */\n+DW_OP_DUP (DW_OP_hi_user, 0xff)\t/* Implementation-defined range end.  */\n+\n+/* GNU extensions.  */\n+DW_OP (DW_OP_GNU_push_tls_address, 0xe0)\n+/* The following is for marking variables that are uninitialized.  */\n+DW_OP (DW_OP_GNU_uninit, 0xf0)\n+DW_OP (DW_OP_GNU_encoded_addr, 0xf1)\n+/* The GNU implicit pointer extension.\n+   See http://www.dwarfstd.org/ShowIssue.php?issue=100831.1&type=open .  */\n+DW_OP (DW_OP_GNU_implicit_pointer, 0xf2)\n+/* The GNU entry value extension.\n+   See http://www.dwarfstd.org/ShowIssue.php?issue=100909.1&type=open .  */\n+DW_OP (DW_OP_GNU_entry_value, 0xf3)\n+/* The GNU typed stack extension.\n+   See http://www.dwarfstd.org/doc/040408.1.html .  */\n+DW_OP (DW_OP_GNU_const_type, 0xf4)\n+DW_OP (DW_OP_GNU_regval_type, 0xf5)\n+DW_OP (DW_OP_GNU_deref_type, 0xf6)\n+DW_OP (DW_OP_GNU_convert, 0xf7)\n+DW_OP (DW_OP_GNU_reinterpret, 0xf9)\n+/* The GNU parameter ref extension.  */\n+DW_OP (DW_OP_GNU_parameter_ref, 0xfa)\n+/* HP extensions.  */\n+DW_OP_DUP (DW_OP_HP_unknown, 0xe0) /* Ouch, the same as GNU_push_tls_address.  */\n+DW_OP (DW_OP_HP_is_value, 0xe1)\n+DW_OP (DW_OP_HP_fltconst4, 0xe2)\n+DW_OP (DW_OP_HP_fltconst8, 0xe3)\n+DW_OP (DW_OP_HP_mod_range, 0xe4)\n+DW_OP (DW_OP_HP_unmod_range, 0xe5)\n+DW_OP (DW_OP_HP_tls, 0xe6)\n+/* PGI (STMicroelectronics) extensions.  */\n+DW_OP (DW_OP_PGI_omp_thread_num, 0xf8)\n+DW_END_OP\n+\n+DW_FIRST_ATE (DW_ATE_void, 0x0)\n+DW_ATE (DW_ATE_address, 0x1)\n+DW_ATE (DW_ATE_boolean, 0x2)\n+DW_ATE (DW_ATE_complex_float, 0x3)\n+DW_ATE (DW_ATE_float, 0x4)\n+DW_ATE (DW_ATE_signed, 0x5)\n+DW_ATE (DW_ATE_signed_char, 0x6)\n+DW_ATE (DW_ATE_unsigned, 0x7)\n+DW_ATE (DW_ATE_unsigned_char, 0x8)\n+/* DWARF 3.  */\n+DW_ATE (DW_ATE_imaginary_float, 0x9)\n+DW_ATE (DW_ATE_packed_decimal, 0xa)\n+DW_ATE (DW_ATE_numeric_string, 0xb)\n+DW_ATE (DW_ATE_edited, 0xc)\n+DW_ATE (DW_ATE_signed_fixed, 0xd)\n+DW_ATE (DW_ATE_unsigned_fixed, 0xe)\n+DW_ATE (DW_ATE_decimal_float, 0xf)\n+/* DWARF 4.  */\n+DW_ATE (DW_ATE_UTF, 0x10)\n+\n+DW_ATE_DUP (DW_ATE_lo_user, 0x80)\n+DW_ATE_DUP (DW_ATE_hi_user, 0xff)\n+\n+/* HP extensions.  */\n+DW_ATE (DW_ATE_HP_float80, 0x80) /* Floating-point (80 bit).  */\n+DW_ATE (DW_ATE_HP_complex_float80, 0x81) /* Complex floating-point (80 bit).  */\n+DW_ATE (DW_ATE_HP_float128, 0x82) /* Floating-point (128 bit).  */\n+DW_ATE (DW_ATE_HP_complex_float128, 0x83) /* Complex fp (128 bit).  */\n+DW_ATE (DW_ATE_HP_floathpintel, 0x84) /* Floating-point (82 bit IA64).  */\n+DW_ATE (DW_ATE_HP_imaginary_float80, 0x85)\n+DW_ATE (DW_ATE_HP_imaginary_float128, 0x86)\n+DW_ATE (DW_ATE_HP_VAX_float, 0x88) /* F or G floating.  */\n+DW_ATE (DW_ATE_HP_VAX_float_d, 0x89) /* D floating.  */\n+DW_ATE (DW_ATE_HP_packed_decimal, 0x8a) /* Cobol.  */\n+DW_ATE (DW_ATE_HP_zoned_decimal, 0x8b) /* Cobol.  */\n+DW_ATE (DW_ATE_HP_edited, 0x8c) /* Cobol.  */\n+DW_ATE (DW_ATE_HP_signed_fixed, 0x8d) /* Cobol.  */\n+DW_ATE (DW_ATE_HP_unsigned_fixed, 0x8e) /* Cobol.  */\n+DW_ATE (DW_ATE_HP_VAX_complex_float, 0x8f) /* F or G floating complex.  */\n+DW_ATE (DW_ATE_HP_VAX_complex_float_d, 0x90) /* D floating complex.  */\n+\n+DW_END_ATE\n+\n+DW_FIRST_CFA (DW_CFA_advance_loc, 0x40)\n+DW_CFA (DW_CFA_offset, 0x80)\n+DW_CFA (DW_CFA_restore, 0xc0)\n+DW_CFA (DW_CFA_nop, 0x00)\n+DW_CFA (DW_CFA_set_loc, 0x01)\n+DW_CFA (DW_CFA_advance_loc1, 0x02)\n+DW_CFA (DW_CFA_advance_loc2, 0x03)\n+DW_CFA (DW_CFA_advance_loc4, 0x04)\n+DW_CFA (DW_CFA_offset_extended, 0x05)\n+DW_CFA (DW_CFA_restore_extended, 0x06)\n+DW_CFA (DW_CFA_undefined, 0x07)\n+DW_CFA (DW_CFA_same_value, 0x08)\n+DW_CFA (DW_CFA_register, 0x09)\n+DW_CFA (DW_CFA_remember_state, 0x0a)\n+DW_CFA (DW_CFA_restore_state, 0x0b)\n+DW_CFA (DW_CFA_def_cfa, 0x0c)\n+DW_CFA (DW_CFA_def_cfa_register, 0x0d)\n+DW_CFA (DW_CFA_def_cfa_offset, 0x0e)\n+/* DWARF 3.  */\n+DW_CFA (DW_CFA_def_cfa_expression, 0x0f)\n+DW_CFA (DW_CFA_expression, 0x10)\n+DW_CFA (DW_CFA_offset_extended_sf, 0x11)\n+DW_CFA (DW_CFA_def_cfa_sf, 0x12)\n+DW_CFA (DW_CFA_def_cfa_offset_sf, 0x13)\n+DW_CFA (DW_CFA_val_offset, 0x14)\n+DW_CFA (DW_CFA_val_offset_sf, 0x15)\n+DW_CFA (DW_CFA_val_expression, 0x16)\n+\n+DW_CFA (DW_CFA_lo_user, 0x1c)\n+DW_CFA (DW_CFA_hi_user, 0x3f)\n+\n+/* SGI/MIPS specific.  */\n+DW_CFA (DW_CFA_MIPS_advance_loc8, 0x1d)\n+/* GNU extensions.  */\n+DW_CFA (DW_CFA_GNU_window_save, 0x2d)\n+DW_CFA (DW_CFA_GNU_args_size, 0x2e)\n+DW_CFA (DW_CFA_GNU_negative_offset_extended, 0x2f)\n+\n+DW_END_CFA"}, {"sha": "c86b022b6ea28c13f08ba9ed8cfaeffd51817fde", "filename": "include/dwarf2.h", "status": "modified", "additions": 81, "deletions": 626, "changes": 707, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/include%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/include%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.h?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -1,7 +1,7 @@\n /* Declarations and definitions of codes relating to the DWARF2 and\n    DWARF3 symbolic debugging information formats.\n    Copyright (C) 1992, 1993, 1995, 1996, 1997, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n    Written by Gary Funck (gary@intrepid.com) The Ada Joint Program\n@@ -41,599 +41,71 @@\n    This file also now contains definitions from the DWARF 3 specification\n    published Dec 20, 2005, available from: http://dwarf.freestandards.org.  */\n \n-/* This file is shared between GCC and GDB, and should not contain\n-   prototypes.  */\n-\n #ifndef _DWARF2_H\n #define _DWARF2_H\n \n-/* Tag names and codes.  */\n-enum dwarf_tag\n-  {\n-    DW_TAG_padding = 0x00,\n-    DW_TAG_array_type = 0x01,\n-    DW_TAG_class_type = 0x02,\n-    DW_TAG_entry_point = 0x03,\n-    DW_TAG_enumeration_type = 0x04,\n-    DW_TAG_formal_parameter = 0x05,\n-    DW_TAG_imported_declaration = 0x08,\n-    DW_TAG_label = 0x0a,\n-    DW_TAG_lexical_block = 0x0b,\n-    DW_TAG_member = 0x0d,\n-    DW_TAG_pointer_type = 0x0f,\n-    DW_TAG_reference_type = 0x10,\n-    DW_TAG_compile_unit = 0x11,\n-    DW_TAG_string_type = 0x12,\n-    DW_TAG_structure_type = 0x13,\n-    DW_TAG_subroutine_type = 0x15,\n-    DW_TAG_typedef = 0x16,\n-    DW_TAG_union_type = 0x17,\n-    DW_TAG_unspecified_parameters = 0x18,\n-    DW_TAG_variant = 0x19,\n-    DW_TAG_common_block = 0x1a,\n-    DW_TAG_common_inclusion = 0x1b,\n-    DW_TAG_inheritance = 0x1c,\n-    DW_TAG_inlined_subroutine = 0x1d,\n-    DW_TAG_module = 0x1e,\n-    DW_TAG_ptr_to_member_type = 0x1f,\n-    DW_TAG_set_type = 0x20,\n-    DW_TAG_subrange_type = 0x21,\n-    DW_TAG_with_stmt = 0x22,\n-    DW_TAG_access_declaration = 0x23,\n-    DW_TAG_base_type = 0x24,\n-    DW_TAG_catch_block = 0x25,\n-    DW_TAG_const_type = 0x26,\n-    DW_TAG_constant = 0x27,\n-    DW_TAG_enumerator = 0x28,\n-    DW_TAG_file_type = 0x29,\n-    DW_TAG_friend = 0x2a,\n-    DW_TAG_namelist = 0x2b,\n-    DW_TAG_namelist_item = 0x2c,\n-    DW_TAG_packed_type = 0x2d,\n-    DW_TAG_subprogram = 0x2e,\n-    DW_TAG_template_type_param = 0x2f,\n-    DW_TAG_template_value_param = 0x30,\n-    DW_TAG_thrown_type = 0x31,\n-    DW_TAG_try_block = 0x32,\n-    DW_TAG_variant_part = 0x33,\n-    DW_TAG_variable = 0x34,\n-    DW_TAG_volatile_type = 0x35,\n-    /* DWARF 3.  */\n-    DW_TAG_dwarf_procedure = 0x36,\n-    DW_TAG_restrict_type = 0x37,\n-    DW_TAG_interface_type = 0x38,\n-    DW_TAG_namespace = 0x39,\n-    DW_TAG_imported_module = 0x3a,\n-    DW_TAG_unspecified_type = 0x3b,\n-    DW_TAG_partial_unit = 0x3c,\n-    DW_TAG_imported_unit = 0x3d,\n-    DW_TAG_condition = 0x3f,\n-    DW_TAG_shared_type = 0x40,\n-    /* DWARF 4.  */\n-    DW_TAG_type_unit = 0x41,\n-    DW_TAG_rvalue_reference_type = 0x42,\n-    DW_TAG_template_alias = 0x43,\n-\n-    DW_TAG_lo_user = 0x4080,\n-    DW_TAG_hi_user = 0xffff,\n-\n-    /* SGI/MIPS Extensions.  */\n-    DW_TAG_MIPS_loop = 0x4081,\n-\n-    /* HP extensions.  See: ftp://ftp.hp.com/pub/lang/tools/WDB/wdb-4.0.tar.gz .  */\n-    DW_TAG_HP_array_descriptor = 0x4090,\n-    DW_TAG_HP_Bliss_field      = 0x4091,\n-    DW_TAG_HP_Bliss_field_set  = 0x4092,\n-\n-    /* GNU extensions.  */\n-    DW_TAG_format_label = 0x4101,\t/* For FORTRAN 77 and Fortran 90.  */\n-    DW_TAG_function_template = 0x4102,\t/* For C++.  */\n-    DW_TAG_class_template = 0x4103,\t/* For C++.  */\n-    DW_TAG_GNU_BINCL = 0x4104,\n-    DW_TAG_GNU_EINCL = 0x4105,\n-    /* Template template parameter.\n-       See http://gcc.gnu.org/wiki/TemplateParmsDwarf .  */\n-    DW_TAG_GNU_template_template_param = 0x4106,\n-\n-    /* Template parameter pack extension, specified at\n-       http://wiki.dwarfstd.org/index.php?title=C%2B%2B0x:_Variadic_templates\n-       The values of these two TAGS are in the DW_TAG_GNU_* space until the tags\n-       are properly part of DWARF 5.  */\n-    DW_TAG_GNU_template_parameter_pack = 0x4107,\n-    DW_TAG_GNU_formal_parameter_pack = 0x4108,\n-    /* The GNU call site extension, specified at\n-       http://www.dwarfstd.org/ShowIssue.php?issue=100909.2&type=open .\n-       The values of these two TAGS are in the DW_TAG_GNU_* space until the tags\n-       are properly part of DWARF 5.  */\n-    DW_TAG_GNU_call_site = 0x4109,\n-    DW_TAG_GNU_call_site_parameter = 0x410a,\n-    /* Extensions for UPC.  See: http://upc.gwu.edu/~upc.  */\n-    DW_TAG_upc_shared_type = 0x8765,\n-    DW_TAG_upc_strict_type = 0x8766,\n-    DW_TAG_upc_relaxed_type = 0x8767,\n-    /* PGI (STMicroelectronics) extensions.  No documentation available.  */\n-    DW_TAG_PGI_kanji_type      = 0xA000,\n-    DW_TAG_PGI_interface_block = 0xA020\n-  };\n+#define DW_TAG(name, value) , name = value\n+#define DW_TAG_DUP(name, value) , name = value\n+#define DW_FORM(name, value) , name = value\n+#define DW_AT(name, value) , name = value\n+#define DW_AT_DUP(name, value) , name = value\n+#define DW_OP(name, value) , name = value\n+#define DW_OP_DUP(name, value) , name = value\n+#define DW_ATE(name, value) , name = value\n+#define DW_ATE_DUP(name, value) , name = value\n+#define DW_CFA(name, value) , name = value\n+\n+#define DW_FIRST_TAG(name, value) enum dwarf_tag { \\\n+  name = value\n+#define DW_END_TAG };\n+#define DW_FIRST_FORM(name, value) enum dwarf_form { \\\n+  name = value\n+#define DW_END_FORM };\n+#define DW_FIRST_AT(name, value) enum dwarf_attribute { \\\n+  name = value\n+#define DW_END_AT };\n+#define DW_FIRST_OP(name, value) enum dwarf_location_atom { \\\n+  name = value\n+#define DW_END_OP };\n+#define DW_FIRST_ATE(name, value) enum dwarf_type { \\\n+  name = value\n+#define DW_END_ATE };\n+#define DW_FIRST_CFA(name, value) enum dwarf_call_frame_info { \\\n+  name = value\n+#define DW_END_CFA };\n+\n+#include \"dwarf2.def\"\n+\n+#undef DW_FIRST_TAG\n+#undef DW_END_TAG\n+#undef DW_FIRST_FORM\n+#undef DW_END_FORM\n+#undef DW_FIRST_AT\n+#undef DW_END_AT\n+#undef DW_FIRST_OP\n+#undef DW_END_OP\n+#undef DW_FIRST_ATE\n+#undef DW_END_ATE\n+#undef DW_FIRST_CFA\n+#undef DW_END_CFA\n+\n+#undef DW_TAG\n+#undef DW_TAG_DUP\n+#undef DW_FORM\n+#undef DW_AT\n+#undef DW_AT_DUP\n+#undef DW_OP\n+#undef DW_OP_DUP\n+#undef DW_ATE\n+#undef DW_ATE_DUP\n+#undef DW_CFA\n \n /* Flag that tells whether entry has a child or not.  */\n #define DW_children_no   0\n #define\tDW_children_yes  1\n \n-/* Form names and codes.  */\n-enum dwarf_form\n-  {\n-    DW_FORM_addr = 0x01,\n-    DW_FORM_block2 = 0x03,\n-    DW_FORM_block4 = 0x04,\n-    DW_FORM_data2 = 0x05,\n-    DW_FORM_data4 = 0x06,\n-    DW_FORM_data8 = 0x07,\n-    DW_FORM_string = 0x08,\n-    DW_FORM_block = 0x09,\n-    DW_FORM_block1 = 0x0a,\n-    DW_FORM_data1 = 0x0b,\n-    DW_FORM_flag = 0x0c,\n-    DW_FORM_sdata = 0x0d,\n-    DW_FORM_strp = 0x0e,\n-    DW_FORM_udata = 0x0f,\n-    DW_FORM_ref_addr = 0x10,\n-    DW_FORM_ref1 = 0x11,\n-    DW_FORM_ref2 = 0x12,\n-    DW_FORM_ref4 = 0x13,\n-    DW_FORM_ref8 = 0x14,\n-    DW_FORM_ref_udata = 0x15,\n-    DW_FORM_indirect = 0x16,\n-    /* DWARF 4.  */\n-    DW_FORM_sec_offset = 0x17,\n-    DW_FORM_exprloc = 0x18,\n-    DW_FORM_flag_present = 0x19,\n-    DW_FORM_ref_sig8 = 0x20,\n-    /* Extensions for Fission.  See http://gcc.gnu.org/wiki/DebugFission.  */\n-    DW_FORM_GNU_ref_index = 0x1f00,\n-    DW_FORM_GNU_addr_index = 0x1f01,\n-    DW_FORM_GNU_str_index = 0x1f02\n-  };\n-\n-/* Attribute names and codes.  */\n-enum dwarf_attribute\n-  {\n-    DW_AT_sibling = 0x01,\n-    DW_AT_location = 0x02,\n-    DW_AT_name = 0x03,\n-    DW_AT_ordering = 0x09,\n-    DW_AT_subscr_data = 0x0a,\n-    DW_AT_byte_size = 0x0b,\n-    DW_AT_bit_offset = 0x0c,\n-    DW_AT_bit_size = 0x0d,\n-    DW_AT_element_list = 0x0f,\n-    DW_AT_stmt_list = 0x10,\n-    DW_AT_low_pc = 0x11,\n-    DW_AT_high_pc = 0x12,\n-    DW_AT_language = 0x13,\n-    DW_AT_member = 0x14,\n-    DW_AT_discr = 0x15,\n-    DW_AT_discr_value = 0x16,\n-    DW_AT_visibility = 0x17,\n-    DW_AT_import = 0x18,\n-    DW_AT_string_length = 0x19,\n-    DW_AT_common_reference = 0x1a,\n-    DW_AT_comp_dir = 0x1b,\n-    DW_AT_const_value = 0x1c,\n-    DW_AT_containing_type = 0x1d,\n-    DW_AT_default_value = 0x1e,\n-    DW_AT_inline = 0x20,\n-    DW_AT_is_optional = 0x21,\n-    DW_AT_lower_bound = 0x22,\n-    DW_AT_producer = 0x25,\n-    DW_AT_prototyped = 0x27,\n-    DW_AT_return_addr = 0x2a,\n-    DW_AT_start_scope = 0x2c,\n-    DW_AT_bit_stride = 0x2e,\n #define DW_AT_stride_size   DW_AT_bit_stride  /* Note: The use of DW_AT_stride_size is deprecated.  */\n-    DW_AT_upper_bound = 0x2f,\n-    DW_AT_abstract_origin = 0x31,\n-    DW_AT_accessibility = 0x32,\n-    DW_AT_address_class = 0x33,\n-    DW_AT_artificial = 0x34,\n-    DW_AT_base_types = 0x35,\n-    DW_AT_calling_convention = 0x36,\n-    DW_AT_count = 0x37,\n-    DW_AT_data_member_location = 0x38,\n-    DW_AT_decl_column = 0x39,\n-    DW_AT_decl_file = 0x3a,\n-    DW_AT_decl_line = 0x3b,\n-    DW_AT_declaration = 0x3c,\n-    DW_AT_discr_list = 0x3d,\n-    DW_AT_encoding = 0x3e,\n-    DW_AT_external = 0x3f,\n-    DW_AT_frame_base = 0x40,\n-    DW_AT_friend = 0x41,\n-    DW_AT_identifier_case = 0x42,\n-    DW_AT_macro_info = 0x43,\n-    DW_AT_namelist_items = 0x44,\n-    DW_AT_priority = 0x45,\n-    DW_AT_segment = 0x46,\n-    DW_AT_specification = 0x47,\n-    DW_AT_static_link = 0x48,\n-    DW_AT_type = 0x49,\n-    DW_AT_use_location = 0x4a,\n-    DW_AT_variable_parameter = 0x4b,\n-    DW_AT_virtuality = 0x4c,\n-    DW_AT_vtable_elem_location = 0x4d,\n-    /* DWARF 3 values.  */\n-    DW_AT_allocated     = 0x4e,\n-    DW_AT_associated    = 0x4f,\n-    DW_AT_data_location = 0x50,\n-    DW_AT_byte_stride   = 0x51,\n #define DW_AT_stride   DW_AT_byte_stride  /* Note: The use of DW_AT_stride is deprecated.  */\n-    DW_AT_entry_pc      = 0x52,\n-    DW_AT_use_UTF8      = 0x53,\n-    DW_AT_extension     = 0x54,\n-    DW_AT_ranges        = 0x55,\n-    DW_AT_trampoline    = 0x56,\n-    DW_AT_call_column   = 0x57,\n-    DW_AT_call_file     = 0x58,\n-    DW_AT_call_line     = 0x59,\n-    DW_AT_description   = 0x5a,\n-    DW_AT_binary_scale  = 0x5b,\n-    DW_AT_decimal_scale = 0x5c,\n-    DW_AT_small         = 0x5d,\n-    DW_AT_decimal_sign  = 0x5e,\n-    DW_AT_digit_count   = 0x5f,\n-    DW_AT_picture_string = 0x60,\n-    DW_AT_mutable       = 0x61,\n-    DW_AT_threads_scaled = 0x62,\n-    DW_AT_explicit      = 0x63,\n-    DW_AT_object_pointer = 0x64,\n-    DW_AT_endianity     = 0x65,\n-    DW_AT_elemental     = 0x66,\n-    DW_AT_pure          = 0x67,\n-    DW_AT_recursive     = 0x68,\n-    /* DWARF 4.  */\n-    DW_AT_signature       = 0x69,\n-    DW_AT_main_subprogram = 0x6a,\n-    DW_AT_data_bit_offset = 0x6b,\n-    DW_AT_const_expr      = 0x6c,\n-    DW_AT_enum_class      = 0x6d,\n-    DW_AT_linkage_name    = 0x6e,\n-\n-    DW_AT_lo_user = 0x2000,\t/* Implementation-defined range start.  */\n-    DW_AT_hi_user = 0x3fff,\t/* Implementation-defined range end.  */\n-\n-    /* SGI/MIPS extensions.  */\n-    DW_AT_MIPS_fde = 0x2001,\n-    DW_AT_MIPS_loop_begin = 0x2002,\n-    DW_AT_MIPS_tail_loop_begin = 0x2003,\n-    DW_AT_MIPS_epilog_begin = 0x2004,\n-    DW_AT_MIPS_loop_unroll_factor = 0x2005,\n-    DW_AT_MIPS_software_pipeline_depth = 0x2006,\n-    DW_AT_MIPS_linkage_name = 0x2007,\n-    DW_AT_MIPS_stride = 0x2008,\n-    DW_AT_MIPS_abstract_name = 0x2009,\n-    DW_AT_MIPS_clone_origin = 0x200a,\n-    DW_AT_MIPS_has_inlines = 0x200b,\n-    /* HP extensions.  */\n-    DW_AT_HP_block_index         = 0x2000,\n-    DW_AT_HP_unmodifiable        = 0x2001, /* Same as DW_AT_MIPS_fde.  */\n-    DW_AT_HP_prologue            = 0x2005, /* Same as DW_AT_MIPS_loop_unroll.  */\n-    DW_AT_HP_epilogue            = 0x2008, /* Same as DW_AT_MIPS_stride.  */\n-    DW_AT_HP_actuals_stmt_list   = 0x2010,\n-    DW_AT_HP_proc_per_section    = 0x2011,\n-    DW_AT_HP_raw_data_ptr        = 0x2012,\n-    DW_AT_HP_pass_by_reference   = 0x2013,\n-    DW_AT_HP_opt_level           = 0x2014,\n-    DW_AT_HP_prof_version_id     = 0x2015,\n-    DW_AT_HP_opt_flags           = 0x2016,\n-    DW_AT_HP_cold_region_low_pc  = 0x2017,\n-    DW_AT_HP_cold_region_high_pc = 0x2018,\n-    DW_AT_HP_all_variables_modifiable = 0x2019,\n-    DW_AT_HP_linkage_name        = 0x201a,\n-    DW_AT_HP_prof_flags          = 0x201b,  /* In comp unit of procs_info for -g.  */\n-    DW_AT_HP_unit_name           = 0x201f,\n-    DW_AT_HP_unit_size           = 0x2020,\n-    DW_AT_HP_widened_byte_size   = 0x2021,\n-    DW_AT_HP_definition_points   = 0x2022,\n-    DW_AT_HP_default_location    = 0x2023,\n-    DW_AT_HP_is_result_param     = 0x2029,\n-\n-    /* GNU extensions.  */\n-    DW_AT_sf_names   = 0x2101,\n-    DW_AT_src_info   = 0x2102,\n-    DW_AT_mac_info   = 0x2103,\n-    DW_AT_src_coords = 0x2104,\n-    DW_AT_body_begin = 0x2105,\n-    DW_AT_body_end   = 0x2106,\n-    DW_AT_GNU_vector = 0x2107,\n-    /* Thread-safety annotations.\n-       See http://gcc.gnu.org/wiki/ThreadSafetyAnnotation .  */\n-    DW_AT_GNU_guarded_by    = 0x2108,\n-    DW_AT_GNU_pt_guarded_by = 0x2109,\n-    DW_AT_GNU_guarded       = 0x210a,\n-    DW_AT_GNU_pt_guarded    = 0x210b,\n-    DW_AT_GNU_locks_excluded = 0x210c,\n-    DW_AT_GNU_exclusive_locks_required = 0x210d,\n-    DW_AT_GNU_shared_locks_required = 0x210e,\n-    /* One-definition rule violation detection.\n-       See http://gcc.gnu.org/wiki/DwarfSeparateTypeInfo .  */\n-    DW_AT_GNU_odr_signature = 0x210f,\n-    /* Template template argument name.\n-       See http://gcc.gnu.org/wiki/TemplateParmsDwarf .  */\n-    DW_AT_GNU_template_name = 0x2110,\n-    /* The GNU call site extension.\n-       See http://www.dwarfstd.org/ShowIssue.php?issue=100909.2&type=open .  */\n-    DW_AT_GNU_call_site_value = 0x2111,\n-    DW_AT_GNU_call_site_data_value = 0x2112,\n-    DW_AT_GNU_call_site_target = 0x2113,\n-    DW_AT_GNU_call_site_target_clobbered = 0x2114,\n-    DW_AT_GNU_tail_call = 0x2115,\n-    DW_AT_GNU_all_tail_call_sites = 0x2116,\n-    DW_AT_GNU_all_call_sites = 0x2117,\n-    DW_AT_GNU_all_source_call_sites = 0x2118,\n-    /* Section offset into .debug_macro section.  */\n-    DW_AT_GNU_macros = 0x2119,\n-    /* Extensions for Fission.  See http://gcc.gnu.org/wiki/DebugFission.  */\n-    DW_AT_GNU_dwo_name = 0x2130,\n-    DW_AT_GNU_dwo_id = 0x2131,\n-    DW_AT_GNU_ref_base = 0x2132,\n-    DW_AT_GNU_addr_base = 0x2133,\n-    DW_AT_GNU_pubnames = 0x2134,\n-    DW_AT_GNU_pubtypes = 0x2135,\n-    /* VMS extensions.  */\n-    DW_AT_VMS_rtnbeg_pd_address = 0x2201,\n-    /* GNAT extensions.  */\n-    /* GNAT descriptive type.\n-       See http://gcc.gnu.org/wiki/DW_AT_GNAT_descriptive_type .  */\n-    DW_AT_use_GNAT_descriptive_type = 0x2301,\n-    DW_AT_GNAT_descriptive_type\t= 0x2302,\n-    /* UPC extension.  */\n-    DW_AT_upc_threads_scaled = 0x3210,\n-    /* PGI (STMicroelectronics) extensions.  */\n-    DW_AT_PGI_lbase    = 0x3a00,\n-    DW_AT_PGI_soffset  = 0x3a01,\n-    DW_AT_PGI_lstride  = 0x3a02\n-  };\n-\n-/* Location atom names and codes.  */\n-enum dwarf_location_atom\n-  {\n-    DW_OP_addr = 0x03,\n-    DW_OP_deref = 0x06,\n-    DW_OP_const1u = 0x08,\n-    DW_OP_const1s = 0x09,\n-    DW_OP_const2u = 0x0a,\n-    DW_OP_const2s = 0x0b,\n-    DW_OP_const4u = 0x0c,\n-    DW_OP_const4s = 0x0d,\n-    DW_OP_const8u = 0x0e,\n-    DW_OP_const8s = 0x0f,\n-    DW_OP_constu = 0x10,\n-    DW_OP_consts = 0x11,\n-    DW_OP_dup = 0x12,\n-    DW_OP_drop = 0x13,\n-    DW_OP_over = 0x14,\n-    DW_OP_pick = 0x15,\n-    DW_OP_swap = 0x16,\n-    DW_OP_rot = 0x17,\n-    DW_OP_xderef = 0x18,\n-    DW_OP_abs = 0x19,\n-    DW_OP_and = 0x1a,\n-    DW_OP_div = 0x1b,\n-    DW_OP_minus = 0x1c,\n-    DW_OP_mod = 0x1d,\n-    DW_OP_mul = 0x1e,\n-    DW_OP_neg = 0x1f,\n-    DW_OP_not = 0x20,\n-    DW_OP_or = 0x21,\n-    DW_OP_plus = 0x22,\n-    DW_OP_plus_uconst = 0x23,\n-    DW_OP_shl = 0x24,\n-    DW_OP_shr = 0x25,\n-    DW_OP_shra = 0x26,\n-    DW_OP_xor = 0x27,\n-    DW_OP_bra = 0x28,\n-    DW_OP_eq = 0x29,\n-    DW_OP_ge = 0x2a,\n-    DW_OP_gt = 0x2b,\n-    DW_OP_le = 0x2c,\n-    DW_OP_lt = 0x2d,\n-    DW_OP_ne = 0x2e,\n-    DW_OP_skip = 0x2f,\n-    DW_OP_lit0 = 0x30,\n-    DW_OP_lit1 = 0x31,\n-    DW_OP_lit2 = 0x32,\n-    DW_OP_lit3 = 0x33,\n-    DW_OP_lit4 = 0x34,\n-    DW_OP_lit5 = 0x35,\n-    DW_OP_lit6 = 0x36,\n-    DW_OP_lit7 = 0x37,\n-    DW_OP_lit8 = 0x38,\n-    DW_OP_lit9 = 0x39,\n-    DW_OP_lit10 = 0x3a,\n-    DW_OP_lit11 = 0x3b,\n-    DW_OP_lit12 = 0x3c,\n-    DW_OP_lit13 = 0x3d,\n-    DW_OP_lit14 = 0x3e,\n-    DW_OP_lit15 = 0x3f,\n-    DW_OP_lit16 = 0x40,\n-    DW_OP_lit17 = 0x41,\n-    DW_OP_lit18 = 0x42,\n-    DW_OP_lit19 = 0x43,\n-    DW_OP_lit20 = 0x44,\n-    DW_OP_lit21 = 0x45,\n-    DW_OP_lit22 = 0x46,\n-    DW_OP_lit23 = 0x47,\n-    DW_OP_lit24 = 0x48,\n-    DW_OP_lit25 = 0x49,\n-    DW_OP_lit26 = 0x4a,\n-    DW_OP_lit27 = 0x4b,\n-    DW_OP_lit28 = 0x4c,\n-    DW_OP_lit29 = 0x4d,\n-    DW_OP_lit30 = 0x4e,\n-    DW_OP_lit31 = 0x4f,\n-    DW_OP_reg0 = 0x50,\n-    DW_OP_reg1 = 0x51,\n-    DW_OP_reg2 = 0x52,\n-    DW_OP_reg3 = 0x53,\n-    DW_OP_reg4 = 0x54,\n-    DW_OP_reg5 = 0x55,\n-    DW_OP_reg6 = 0x56,\n-    DW_OP_reg7 = 0x57,\n-    DW_OP_reg8 = 0x58,\n-    DW_OP_reg9 = 0x59,\n-    DW_OP_reg10 = 0x5a,\n-    DW_OP_reg11 = 0x5b,\n-    DW_OP_reg12 = 0x5c,\n-    DW_OP_reg13 = 0x5d,\n-    DW_OP_reg14 = 0x5e,\n-    DW_OP_reg15 = 0x5f,\n-    DW_OP_reg16 = 0x60,\n-    DW_OP_reg17 = 0x61,\n-    DW_OP_reg18 = 0x62,\n-    DW_OP_reg19 = 0x63,\n-    DW_OP_reg20 = 0x64,\n-    DW_OP_reg21 = 0x65,\n-    DW_OP_reg22 = 0x66,\n-    DW_OP_reg23 = 0x67,\n-    DW_OP_reg24 = 0x68,\n-    DW_OP_reg25 = 0x69,\n-    DW_OP_reg26 = 0x6a,\n-    DW_OP_reg27 = 0x6b,\n-    DW_OP_reg28 = 0x6c,\n-    DW_OP_reg29 = 0x6d,\n-    DW_OP_reg30 = 0x6e,\n-    DW_OP_reg31 = 0x6f,\n-    DW_OP_breg0 = 0x70,\n-    DW_OP_breg1 = 0x71,\n-    DW_OP_breg2 = 0x72,\n-    DW_OP_breg3 = 0x73,\n-    DW_OP_breg4 = 0x74,\n-    DW_OP_breg5 = 0x75,\n-    DW_OP_breg6 = 0x76,\n-    DW_OP_breg7 = 0x77,\n-    DW_OP_breg8 = 0x78,\n-    DW_OP_breg9 = 0x79,\n-    DW_OP_breg10 = 0x7a,\n-    DW_OP_breg11 = 0x7b,\n-    DW_OP_breg12 = 0x7c,\n-    DW_OP_breg13 = 0x7d,\n-    DW_OP_breg14 = 0x7e,\n-    DW_OP_breg15 = 0x7f,\n-    DW_OP_breg16 = 0x80,\n-    DW_OP_breg17 = 0x81,\n-    DW_OP_breg18 = 0x82,\n-    DW_OP_breg19 = 0x83,\n-    DW_OP_breg20 = 0x84,\n-    DW_OP_breg21 = 0x85,\n-    DW_OP_breg22 = 0x86,\n-    DW_OP_breg23 = 0x87,\n-    DW_OP_breg24 = 0x88,\n-    DW_OP_breg25 = 0x89,\n-    DW_OP_breg26 = 0x8a,\n-    DW_OP_breg27 = 0x8b,\n-    DW_OP_breg28 = 0x8c,\n-    DW_OP_breg29 = 0x8d,\n-    DW_OP_breg30 = 0x8e,\n-    DW_OP_breg31 = 0x8f,\n-    DW_OP_regx = 0x90,\n-    DW_OP_fbreg = 0x91,\n-    DW_OP_bregx = 0x92,\n-    DW_OP_piece = 0x93,\n-    DW_OP_deref_size = 0x94,\n-    DW_OP_xderef_size = 0x95,\n-    DW_OP_nop = 0x96,\n-    /* DWARF 3 extensions.  */\n-    DW_OP_push_object_address = 0x97,\n-    DW_OP_call2 = 0x98,\n-    DW_OP_call4 = 0x99,\n-    DW_OP_call_ref = 0x9a,\n-    DW_OP_form_tls_address = 0x9b,\n-    DW_OP_call_frame_cfa = 0x9c,\n-    DW_OP_bit_piece = 0x9d,\n-\n-    /* DWARF 4 extensions.  */\n-    DW_OP_implicit_value = 0x9e,\n-    DW_OP_stack_value = 0x9f,\n-\n-    DW_OP_lo_user = 0xe0,\t/* Implementation-defined range start.  */\n-    DW_OP_hi_user = 0xff,\t/* Implementation-defined range end.  */\n-\n-    /* GNU extensions.  */\n-    DW_OP_GNU_push_tls_address = 0xe0,\n-    /* The following is for marking variables that are uninitialized.  */\n-    DW_OP_GNU_uninit     = 0xf0,\n-    DW_OP_GNU_encoded_addr = 0xf1,\n-    /* The GNU implicit pointer extension.\n-       See http://www.dwarfstd.org/ShowIssue.php?issue=100831.1&type=open .  */\n-    DW_OP_GNU_implicit_pointer = 0xf2,\n-    /* The GNU entry value extension.\n-       See http://www.dwarfstd.org/ShowIssue.php?issue=100909.1&type=open .  */\n-    DW_OP_GNU_entry_value = 0xf3,\n-    /* The GNU typed stack extension.\n-       See http://www.dwarfstd.org/doc/040408.1.html .  */\n-    DW_OP_GNU_const_type = 0xf4,\n-    DW_OP_GNU_regval_type = 0xf5,\n-    DW_OP_GNU_deref_type = 0xf6,\n-    DW_OP_GNU_convert = 0xf7,\n-    DW_OP_GNU_reinterpret = 0xf9,\n-    /* The GNU parameter ref extension.  */\n-    DW_OP_GNU_parameter_ref = 0xfa,\n-    /* HP extensions.  */\n-    DW_OP_HP_unknown     = 0xe0, /* Ouch, the same as GNU_push_tls_address.  */\n-    DW_OP_HP_is_value    = 0xe1,\n-    DW_OP_HP_fltconst4   = 0xe2,\n-    DW_OP_HP_fltconst8   = 0xe3,\n-    DW_OP_HP_mod_range   = 0xe4,\n-    DW_OP_HP_unmod_range = 0xe5,\n-    DW_OP_HP_tls         = 0xe6,\n-    /* PGI (STMicroelectronics) extensions.  */\n-    DW_OP_PGI_omp_thread_num = 0xf8\n-  };\n-\n-/* Type encodings.  */\n-enum dwarf_type\n-  {\n-    DW_ATE_void = 0x0,\n-    DW_ATE_address = 0x1,\n-    DW_ATE_boolean = 0x2,\n-    DW_ATE_complex_float = 0x3,\n-    DW_ATE_float = 0x4,\n-    DW_ATE_signed = 0x5,\n-    DW_ATE_signed_char = 0x6,\n-    DW_ATE_unsigned = 0x7,\n-    DW_ATE_unsigned_char = 0x8,\n-    /* DWARF 3.  */\n-    DW_ATE_imaginary_float = 0x9,\n-    DW_ATE_packed_decimal = 0xa,\n-    DW_ATE_numeric_string = 0xb,\n-    DW_ATE_edited = 0xc,\n-    DW_ATE_signed_fixed = 0xd,\n-    DW_ATE_unsigned_fixed = 0xe,\n-    DW_ATE_decimal_float = 0xf,\n-    /* DWARF 4.  */\n-    DW_ATE_UTF = 0x10,\n-\n-    DW_ATE_lo_user = 0x80,\n-    DW_ATE_hi_user = 0xff,\n-\n-    /* HP extensions.  */\n-    DW_ATE_HP_float80             = 0x80, /* Floating-point (80 bit).  */\n-    DW_ATE_HP_complex_float80     = 0x81, /* Complex floating-point (80 bit).  */\n-    DW_ATE_HP_float128            = 0x82, /* Floating-point (128 bit).  */\n-    DW_ATE_HP_complex_float128    = 0x83, /* Complex fp (128 bit).  */\n-    DW_ATE_HP_floathpintel        = 0x84, /* Floating-point (82 bit IA64).  */\n-    DW_ATE_HP_imaginary_float80   = 0x85,\n-    DW_ATE_HP_imaginary_float128  = 0x86,\n-    DW_ATE_HP_VAX_float           = 0x88, /* F or G floating.  */\n-    DW_ATE_HP_VAX_float_d         = 0x89, /* D floating.  */\n-    DW_ATE_HP_packed_decimal      = 0x8a, /* Cobol.  */\n-    DW_ATE_HP_zoned_decimal       = 0x8b, /* Cobol.  */\n-    DW_ATE_HP_edited              = 0x8c, /* Cobol.  */\n-    DW_ATE_HP_signed_fixed        = 0x8d, /* Cobol.  */\n-    DW_ATE_HP_unsigned_fixed      = 0x8e, /* Cobol.  */\n-    DW_ATE_HP_VAX_complex_float   = 0x8f, /* F or G floating complex.  */\n-    DW_ATE_HP_VAX_complex_float_d = 0x90  /* D floating complex.  */\n-  };\n \n /* Decimal sign encodings.  */\n enum dwarf_decimal_sign_encoding\n@@ -787,48 +259,6 @@ enum dwarf_line_number_hp_sfc_ops\n     DW_LNE_HP_SFC_associate = 3\n   };\n \n-/* Call frame information.  */\n-enum dwarf_call_frame_info\n-  {\n-    DW_CFA_advance_loc = 0x40,\n-    DW_CFA_offset = 0x80,\n-    DW_CFA_restore = 0xc0,\n-    DW_CFA_nop = 0x00,\n-    DW_CFA_set_loc = 0x01,\n-    DW_CFA_advance_loc1 = 0x02,\n-    DW_CFA_advance_loc2 = 0x03,\n-    DW_CFA_advance_loc4 = 0x04,\n-    DW_CFA_offset_extended = 0x05,\n-    DW_CFA_restore_extended = 0x06,\n-    DW_CFA_undefined = 0x07,\n-    DW_CFA_same_value = 0x08,\n-    DW_CFA_register = 0x09,\n-    DW_CFA_remember_state = 0x0a,\n-    DW_CFA_restore_state = 0x0b,\n-    DW_CFA_def_cfa = 0x0c,\n-    DW_CFA_def_cfa_register = 0x0d,\n-    DW_CFA_def_cfa_offset = 0x0e,\n-    /* DWARF 3.  */\n-    DW_CFA_def_cfa_expression = 0x0f,\n-    DW_CFA_expression = 0x10,\n-    DW_CFA_offset_extended_sf = 0x11,\n-    DW_CFA_def_cfa_sf = 0x12,\n-    DW_CFA_def_cfa_offset_sf = 0x13,\n-    DW_CFA_val_offset = 0x14,\n-    DW_CFA_val_offset_sf = 0x15,\n-    DW_CFA_val_expression = 0x16,\n-\n-    DW_CFA_lo_user = 0x1c,\n-    DW_CFA_hi_user = 0x3f,\n-\n-    /* SGI/MIPS specific.  */\n-    DW_CFA_MIPS_advance_loc8 = 0x1d,\n-    /* GNU extensions.  */\n-    DW_CFA_GNU_window_save = 0x2d,\n-    DW_CFA_GNU_args_size = 0x2e,\n-    DW_CFA_GNU_negative_offset_extended = 0x2f\n-  };\n-\n #define DW_CIE_ID\t  0xffffffff\n #define DW64_CIE_ID\t  0xffffffffffffffffULL\n #define DW_CIE_VERSION\t  1\n@@ -930,4 +360,29 @@ enum dwarf_macro_record_type\n \n #define DW_EH_PE_indirect\t0x80\n \n+\n+/* Return the name of a DW_TAG_ constant, or NULL if the value is not\n+   recognized.  */\n+extern const char *get_DW_TAG_name (unsigned int tag);\n+\n+/* Return the name of a DW_AT_ constant, or NULL if the value is not\n+   recognized.  */\n+extern const char *get_DW_AT_name (unsigned int attr);\n+\n+/* Return the name of a DW_FORM_ constant, or NULL if the value is not\n+   recognized.  */\n+extern const char *get_DW_FORM_name (unsigned int form);\n+\n+/* Return the name of a DW_OP_ constant, or NULL if the value is not\n+   recognized.  */\n+extern const char *get_DW_OP_name (unsigned int op);\n+\n+/* Return the name of a DW_ATE_ constant, or NULL if the value is not\n+   recognized.  */\n+extern const char *get_DW_ATE_name (unsigned int enc);\n+\n+/* Return the name of a DW_CFA_ constant, or NULL if the value is not\n+   recognized.  */\n+extern const char *get_DW_CFA_name (unsigned int opc);\n+\n #endif /* _DWARF2_H */"}, {"sha": "eb37699e14b1a6ca99f8f1f6760b65fec119b60c", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -1,3 +1,10 @@\n+2012-04-27  Tom Tromey  <tromey@redhat.com>\n+\n+\t* dwarfnames.c: New file.\n+\t* Makefile.in (CFILES): Add dwarfnames.\n+\t(REQUIRED_OFILES): Add dwarfnames.\n+\t(./dwarfnames.$(objext)): New target.\n+\n 2012-04-04  Tristan Gingold  <gingold@adacore.com>\n \n \t* pex-unix.c (to_ptr32): Fix style."}, {"sha": "0a5da3178b17ea7a8ebccc59e17913ffbc314d1a", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -2,7 +2,7 @@\n # Originally written by K. Richard Pixley <rich@cygnus.com>.\n #\n # Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n # Free Software Foundation\n #\n # This file is part of the libiberty library.\n@@ -126,7 +126,7 @@ CFILES = alloca.c argv.c asprintf.c atexit.c\t\t\t\t\\\n \tbasename.c bcmp.c bcopy.c bsearch.c bzero.c\t\t\t\\\n \tcalloc.c choose-temp.c clock.c concat.c cp-demangle.c\t\t\\\n \t cp-demint.c cplus-dem.c crc32.c\t\t\t\t\\\n-\tdyn-string.c\t\t\t\t\t\t\t\\\n+\tdwarfnames.c dyn-string.c\t\t\t\t\t\\\n \tfdmatch.c ffs.c fibheap.c filename_cmp.c floatformat.c\t\t\\\n \tfnmatch.c fopen_unlocked.c\t\t\t\t\t\\\n \tgetcwd.c getopt.c getopt1.c getpagesize.c getpwd.c getruntime.c\t\\\n@@ -166,7 +166,8 @@ REQUIRED_OFILES =\t\t\t\t\t\t\t\\\n \t./md5.$(objext) ./sha1.$(objext) ./alloca.$(objext)\t\t\\\n \t./argv.$(objext)\t\t\t\t\t\t\\\n \t./choose-temp.$(objext) ./concat.$(objext)\t\t\t\\\n-\t./cp-demint.$(objext) ./crc32.$(objext) ./dyn-string.$(objext)\t\\\n+\t./cp-demint.$(objext) ./crc32.$(objext)\t\t\t\t\\\n+\t./dwarfnames.$(objext) ./dyn-string.$(objext)\t\t\t\\\n \t./fdmatch.$(objext) ./fibheap.$(objext)\t\t\t\t\\\n \t./filename_cmp.$(objext) ./floatformat.$(objext)\t\t\\\n \t./fnmatch.$(objext) ./fopen_unlocked.$(objext)\t\t\t\\\n@@ -621,6 +622,13 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/crc32.c $(OUTPUT_OPTION)\n \n+./dwarfnames.$(objext): $(srcdir)/dwarfnames.c $(INCDIR)/dwarf2.h \\\n+\t$(INCDIR)/dwarf2.def\n+\tif [ x\"$(PICFLAG)\" != x ]; then \\\n+\t  $(COMPILE.c) $(PICFLAG) $(srcdir)/dwarfnames.c -o pic/$@; \\\n+\telse true; fi\n+\t$(COMPILE.c) $(srcdir)/dwarfnames.c $(OUTPUT_OPTION)\n+\n ./dyn-string.$(objext): $(srcdir)/dyn-string.c config.h $(INCDIR)/ansidecl.h \\\n \t$(INCDIR)/dyn-string.h $(INCDIR)/libiberty.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\"}, {"sha": "7017308d987e99fdfc03acdb95dc811d245439dd", "filename": "libiberty/dwarfnames.c", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11ec770e46f664966c53b6af90a2849c1eb4dbd1/libiberty%2Fdwarfnames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11ec770e46f664966c53b6af90a2849c1eb4dbd1/libiberty%2Fdwarfnames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fdwarfnames.c?ref=11ec770e46f664966c53b6af90a2849c1eb4dbd1", "patch": "@@ -0,0 +1,98 @@\n+/* Names of various DWARF tags.\n+   Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+   \n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+In addition to the permissions in the GNU General Public License, the\n+Free Software Foundation gives you unlimited permission to link the\n+compiled version of this file into combinations with other programs,\n+and to distribute those combinations without any restriction coming\n+from the use of this file.  (The General Public License restrictions\n+do apply in other respects; for example, they cover modification of\n+the file, and distribution when not linked into a combined\n+executable.)\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 51 Franklin Street - Fifth Floor,\n+Boston, MA 02110-1301, USA.  */\n+\n+#include \"dwarf2.h\"\n+\n+#define DW_FIRST_TAG(name, value) \\\n+  const char *get_DW_TAG_name (unsigned int tag)\t\\\n+  { switch (tag) { \\\n+  DW_TAG (name, value)\n+#define DW_END_TAG } return 0; }\n+#define DW_FIRST_FORM(name, value) \\\n+  const char *get_DW_FORM_name (unsigned int form)\t\\\n+  { switch (form) { \\\n+  DW_FORM (name, value)\n+#define DW_END_FORM } return 0; }\n+#define DW_FIRST_AT(name, value) \\\n+  const char *get_DW_AT_name (unsigned int attr) {\t\\\n+  switch (attr) { \\\n+  DW_AT (name, value)\n+#define DW_END_AT } return 0; }\n+#define DW_FIRST_OP(name, value) \\\n+  const char *get_DW_OP_name (unsigned int op) {\t\\\n+  switch (op) { \\\n+  DW_OP (name, value)\n+#define DW_END_OP } return 0; }\n+#define DW_FIRST_ATE(name, value)\t\t\t\\\n+  const char *get_DW_ATE_name (unsigned int enc) {\t\\\n+  switch (enc) { \\\n+  DW_ATE (name, value)\n+#define DW_END_ATE } return 0; }\n+#define DW_FIRST_CFA(name, value) \\\n+  const char *get_DW_CFA_name (unsigned int opc) {\t\\\n+  switch (opc) {\t\t\t\t\t\\\n+  DW_CFA (name, value)\n+#define DW_END_CFA } return 0; }\n+\n+#define DW_TAG(name, value) case name: return # name ;\n+#define DW_TAG_DUP(name, value)\n+#define DW_FORM(name, value) case name: return # name ;\n+#define DW_AT(name, value) case name: return # name ;\n+#define DW_AT_DUP(name, value)\n+#define DW_OP(name, value) case name: return # name ;\n+#define DW_OP_DUP(name, value)\n+#define DW_ATE(name, value) case name: return # name ;\n+#define DW_ATE_DUP(name, value)\n+#define DW_CFA(name, value) case name: return # name ;\n+\n+#include \"dwarf2.def\"\n+\n+#undef DW_FIRST_TAG\n+#undef DW_END_TAG\n+#undef DW_FIRST_FORM\n+#undef DW_END_FORM\n+#undef DW_FIRST_AT\n+#undef DW_END_AT\n+#undef DW_FIRST_OP\n+#undef DW_END_OP\n+#undef DW_FIRST_ATE\n+#undef DW_END_ATE\n+#undef DW_FIRST_CFA\n+#undef DW_END_CFA\n+\n+#undef DW_TAG\n+#undef DW_TAG_DUP\n+#undef DW_FORM\n+#undef DW_AT\n+#undef DW_AT_DUP\n+#undef DW_OP\n+#undef DW_OP_DUP\n+#undef DW_ATE\n+#undef DW_ATE_DUP\n+#undef DW_CFA"}]}