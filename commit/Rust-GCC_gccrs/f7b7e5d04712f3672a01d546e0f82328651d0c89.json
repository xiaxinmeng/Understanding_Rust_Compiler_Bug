{"sha": "f7b7e5d04712f3672a01d546e0f82328651d0c89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdiN2U1ZDA0NzEyZjM2NzJhMDFkNTQ2ZTBmODIzMjg2NTFkMGM4OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-05-08T07:21:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-05-08T07:21:48Z"}, "message": "re PR tree-optimization/90356 (Missed optimization for variables initialized to 0.0)\n\n\tPR tree-optimization/90356\n\t* match.pd ((X +/- 0.0) +/- 0.0): Optimize into X +/- 0.0 if possible.\n\n\t* gcc.dg/tree-ssa/pr90356-1.c: New test.\n\t* gcc.dg/tree-ssa/pr90356-2.c: New test.\n\t* gcc.dg/tree-ssa/pr90356-3.c: New test.\n\t* gcc.dg/tree-ssa/pr90356-4.c: New test.\n\nFrom-SVN: r271001", "tree": {"sha": "51a86a4fed83edf3c604bf59e061f83a6cc3898b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51a86a4fed83edf3c604bf59e061f83a6cc3898b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7b7e5d04712f3672a01d546e0f82328651d0c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7b7e5d04712f3672a01d546e0f82328651d0c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7b7e5d04712f3672a01d546e0f82328651d0c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7b7e5d04712f3672a01d546e0f82328651d0c89/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b65b77cc80885f72f710da4134f05fc6b12fc8c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65b77cc80885f72f710da4134f05fc6b12fc8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b65b77cc80885f72f710da4134f05fc6b12fc8c5"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "90354983a74eda6c51849f1c21a941917484eeb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7b7e5d04712f3672a01d546e0f82328651d0c89", "patch": "@@ -1,3 +1,8 @@\n+2019-05-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/90356\n+\t* match.pd ((X +/- 0.0) +/- 0.0): Optimize into X +/- 0.0 if possible.\n+\n 2019-05-07  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000-protos.h (rs6000_legitimize_reload_address_ptr):"}, {"sha": "29c94e01f7d6c973e96492b770a79b19d133a171", "filename": "gcc/match.pd", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=f7b7e5d04712f3672a01d546e0f82328651d0c89", "patch": "@@ -152,6 +152,28 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (if (fold_real_zero_addition_p (type, @1, 1))\n   (non_lvalue @0)))\n \n+/* Even if the fold_real_zero_addition_p can't simplify X + 0.0\n+   into X, we can optimize (X + 0.0) + 0.0 or (X + 0.0) - 0.0\n+   or (X - 0.0) + 0.0 into X + 0.0 and (X - 0.0) - 0.0 into X - 0.0\n+   if not -frounding-math.  For sNaNs the first operation would raise\n+   exceptions but turn the result into qNan, so the second operation\n+   would not raise it.   */\n+(for inner_op (plus minus)\n+ (for outer_op (plus minus)\n+  (simplify\n+   (outer_op (inner_op@3 @0 REAL_CST@1) REAL_CST@2)\n+    (if (real_zerop (@1)\n+\t && real_zerop (@2)\n+\t && !HONOR_SIGN_DEPENDENT_ROUNDING (type))\n+     (with { bool inner_plus = ((inner_op == PLUS_EXPR)\n+\t\t\t\t^ REAL_VALUE_MINUS_ZERO (TREE_REAL_CST (@1)));\n+\t     bool outer_plus\n+\t       = ((outer_op == PLUS_EXPR)\n+\t\t  ^ REAL_VALUE_MINUS_ZERO (TREE_REAL_CST (@2))); }\n+      (if (outer_plus && !inner_plus)\n+       (outer_op @0 @2)\n+       @3))))))\n+\n /* Simplify x - x.\n    This is unsafe for certain floats even in non-IEEE formats.\n    In IEEE, it is unsafe because it does wrong for NaNs."}, {"sha": "363518ee64eb91ba2c11a0c50786615dfb932abd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7b7e5d04712f3672a01d546e0f82328651d0c89", "patch": "@@ -1,3 +1,11 @@\n+2019-05-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/90356\n+\t* gcc.dg/tree-ssa/pr90356-1.c: New test.\n+\t* gcc.dg/tree-ssa/pr90356-2.c: New test.\n+\t* gcc.dg/tree-ssa/pr90356-3.c: New test.\n+\t* gcc.dg/tree-ssa/pr90356-4.c: New test.\n+\n 2019-05-07  Cherry Zhang  <cherryyz@google.com>\n \n \t* go.dg/arrayclear.go: New test."}, {"sha": "c3a15ea21afde8f1eef13b9a78f4e673de8365f9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr90356-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-1.c?ref=f7b7e5d04712f3672a01d546e0f82328651d0c89", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/90356 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-rounding-math -fsignaling-nans -fsigned-zeros -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \"x_\\[0-9]*.D. \\\\+ 0.0;\" 12 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"y_\\[0-9]*.D. - 0.0;\" 4 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" \\[+-] 0.0;\" 16 \"optimized\" } } */\n+\n+double f1 (double x) { return (x + 0.0) + 0.0; }\n+double f2 (double y) { return (y + (-0.0)) + (-0.0); }\n+double f3 (double y) { return (y - 0.0) - 0.0; }\n+double f4 (double x) { return (x - (-0.0)) - (-0.0); }\n+double f5 (double x) { return (x + 0.0) - 0.0; }\n+double f6 (double x) { return (x + (-0.0)) - (-0.0); }\n+double f7 (double x) { return (x - 0.0) + 0.0; }\n+double f8 (double x) { return (x - (-0.0)) + (-0.0); }\n+double f9 (double x) { double t = x + 0.0; return t + 0.0; }\n+double f10 (double y) { double t = y + (-0.0); return t + (-0.0); }\n+double f11 (double y) { double t = y - 0.0; return t - 0.0; }\n+double f12 (double x) { double t = x - (-0.0); return t - (-0.0); }\n+double f13 (double x) { double t = x + 0.0; return t - 0.0; }\n+double f14 (double x) { double t = x + (-0.0); return t - (-0.0); }\n+double f15 (double x) { double t = x - 0.0; return t + 0.0; }\n+double f16 (double x) { double t = x - (-0.0); return t + (-0.0); }"}, {"sha": "a58c5aca205918985be5e26883ce6013536b7e7c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr90356-2.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-2.c?ref=f7b7e5d04712f3672a01d546e0f82328651d0c89", "patch": "@@ -0,0 +1,8 @@\n+/* PR tree-optimization/90356 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-rounding-math -fno-signaling-nans -fsigned-zeros -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \"x_\\[0-9]*.D. \\\\+ 0.0;\" 12 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"y_\\[0-9]*.D. - 0.0;\" 0 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" \\[+-] 0.0;\" 12 \"optimized\" } } */\n+\n+#include \"pr90356-1.c\""}, {"sha": "e658130c69f75729f97df99b7ec9cc8b9d2b4025", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr90356-3.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-3.c?ref=f7b7e5d04712f3672a01d546e0f82328651d0c89", "patch": "@@ -0,0 +1,6 @@\n+/* PR tree-optimization/90356 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -frounding-math -fsignaling-nans -fsigned-zeros -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \" \\[+-] 0.0;\" 32 \"optimized\" } } */\n+\n+#include \"pr90356-1.c\""}, {"sha": "126cd10928bd47338ac4d6453c5394d150ba0a8c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr90356-4.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7b7e5d04712f3672a01d546e0f82328651d0c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90356-4.c?ref=f7b7e5d04712f3672a01d546e0f82328651d0c89", "patch": "@@ -0,0 +1,6 @@\n+/* PR tree-optimization/90356 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -frounding-math -fno-signaling-nans -fsigned-zeros -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \" \\[+-] 0.0;\" 32 \"optimized\" } } */\n+\n+#include \"pr90356-1.c\""}]}