{"sha": "b3b37e2c5cda1eace7acf9dad6eb6568a90a4ea4", "node_id": "C_kwDOANBUbNoAKGIzYjM3ZTJjNWNkYTFlYWNlN2FjZjlkYWQ2ZWI2NTY4YTkwYTRlYTQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-21T21:22:19Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-22T10:48:42Z"}, "message": "Extract const helper method is_receiver_generic for path probes.", "tree": {"sha": "d26611c3195461c78145b092a29c452a97d2619d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d26611c3195461c78145b092a29c452a97d2619d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3b37e2c5cda1eace7acf9dad6eb6568a90a4ea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b37e2c5cda1eace7acf9dad6eb6568a90a4ea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b37e2c5cda1eace7acf9dad6eb6568a90a4ea4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b37e2c5cda1eace7acf9dad6eb6568a90a4ea4/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "243e5d800dc03f36025e72d275b79a2098dbb953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243e5d800dc03f36025e72d275b79a2098dbb953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243e5d800dc03f36025e72d275b79a2098dbb953"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "589b0d66131bbab75c965c78369ba557b2a2d705", "filename": "gcc/rust/typecheck/rust-hir-path-probe.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b37e2c5cda1eace7acf9dad6eb6568a90a4ea4/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b37e2c5cda1eace7acf9dad6eb6568a90a4ea4/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h?ref=b3b37e2c5cda1eace7acf9dad6eb6568a90a4ea4", "patch": "@@ -275,16 +275,7 @@ class PathProbeType : public TypeCheckBase\n \t  }\n \n \tTyTy::BaseType *trait_item_tyty = trait_item_ref->get_tyty ();\n-\n-\t// we cannot auto setup associated type mappings when our receiver is a\n-\t// generic type bound\n-\tconst TyTy::BaseType *root = receiver->get_root ();\n-\tbool receiver_is_type_param\n-\t  = root->get_kind () == TyTy::TypeKind::PARAM;\n-\tbool receiver_is_dyn = root->get_kind () == TyTy::TypeKind::DYNAMIC;\n-\tbool receiver_is_generic = receiver_is_type_param || receiver_is_dyn;\n-\n-\tif (impl != nullptr && !receiver_is_generic)\n+\tif (impl != nullptr && !is_reciever_generic ())\n \n \t  {\n \t    HirId impl_block_id = impl->get_mappings ().get_hirid ();\n@@ -367,6 +358,14 @@ class PathProbeType : public TypeCheckBase\n     return union_set;\n   }\n \n+  bool is_reciever_generic () const\n+  {\n+    const TyTy::BaseType *root = receiver->get_root ();\n+    bool receiver_is_type_param = root->get_kind () == TyTy::TypeKind::PARAM;\n+    bool receiver_is_dyn = root->get_kind () == TyTy::TypeKind::DYNAMIC;\n+    return receiver_is_type_param || receiver_is_dyn;\n+  }\n+\n   const TyTy::BaseType *receiver;\n   const HIR::PathIdentSegment &search;\n   std::vector<PathProbeCandidate> candidates;"}]}