{"sha": "795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1YTZjNjc2YWU1ZjM5ZDJiOWU1ZTZiY2EyYmFlZDIwNGI3YTFmMQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2018-11-23T22:00:43Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2018-11-23T22:00:43Z"}, "message": "re PR bootstrap/88157 (ICE when building libgo encoding/gob.lo starting with r266385)\n\n2018-11-23  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR bootstrap/88157\n\t* ira-costs.c (record_operand_costs): Use bigger hard reg class if\n\tits mode does not fit to the original class.\n\nFrom-SVN: r266422", "tree": {"sha": "ce8f90a5d21d348f3e3dff327bd737ef5588ef12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce8f90a5d21d348f3e3dff327bd737ef5588ef12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b8ccb9d55e862b40d978207ee4b44db914acd91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b8ccb9d55e862b40d978207ee4b44db914acd91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b8ccb9d55e862b40d978207ee4b44db914acd91"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "b0b85bac352e6e41f02f45a2795d4a5dd3ad9185", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1", "patch": "@@ -1,3 +1,9 @@\n+2018-11-23  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR bootstrap/88157\n+\t* ira-costs.c (record_operand_costs): Use bigger hard reg class if\n+\tits mode does not fit to the original class.\n+\n 2018-11-23  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/87756"}, {"sha": "cfda4322bc35ede37582f5a0479e55ace730bc43", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=795a6c676ae5f39d2b9e5e6bca2baed204b7a1f1", "patch": "@@ -1319,6 +1319,13 @@ record_operand_costs (rtx_insn *insn, enum reg_class *pref)\n \t  bool dead_p = find_regno_note (insn, REG_DEAD, REGNO (src));\n \n \t  hard_reg_class = REGNO_REG_CLASS (other_regno);\n+\t  /* Target code may return any cost for mode which does not\n+\t     fit the the hard reg class (e.g. DImode for AREG on\n+\t     i386).  Check this and use a bigger class to get the\n+\t     right cost.  */\n+\t  if (! ira_hard_reg_in_set_p (other_regno, mode,\n+\t\t\t\t       reg_class_contents[hard_reg_class]))\n+\t    hard_reg_class = ira_pressure_class_translate[hard_reg_class];\n \t  i = regno == (int) REGNO (src) ? 1 : 0;\n \t  for (k = cost_classes_ptr->num - 1; k >= 0; k--)\n \t    {"}]}