{"sha": "4e417eea8f3f14131f7370f9bd5dd568611d11df", "node_id": "C_kwDOANBUbNoAKDRlNDE3ZWVhOGYzZjE0MTMxZjczNzBmOWJkNWRkNTY4NjExZDExZGY", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-23T06:59:24Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-26T06:20:11Z"}, "message": "[PR testsuite/102857] Tweak ssa-dom-thread-7.c for aarch64.\n\nFirst, ssa-dom-thread-7 was looking at a dump file that was not\nbeing generated.  This probably happened in the detangling of the VRP\nthreader from VRP, and I didn't notice because the test came back as\nwith UNRESOLVED instead of FAIL.\n\nSecond, aarch64 gets far more threads than other architectures (20\nversus 12).  The difference is sufficiently different to make the\nregex awkward.\n\nWe already have special casing for aarch64 in other parts of this\ntest, so perhaps it's simplest to have an arch specific test\nfor the thread3 count.\n\nI don't know perhaps there's a better way.  I wake up with chills in\nthe middle of the night thinking about this test ;-).\n\nTested on x86-64 Linux and aarch64 Linux.\n\ngcc/testsuite/ChangeLog:\n\n\tPR testsuite/102857\n\t* gcc.dg/tree-ssa/ssa-dom-thread-7.c: Add -fdump-tree-vrp2-stats.\n\tTweak for aarch64.", "tree": {"sha": "2b57fd1fdd30de8f04ab9cc7c3d88efca3d76574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b57fd1fdd30de8f04ab9cc7c3d88efca3d76574"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e417eea8f3f14131f7370f9bd5dd568611d11df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e417eea8f3f14131f7370f9bd5dd568611d11df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e417eea8f3f14131f7370f9bd5dd568611d11df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e417eea8f3f14131f7370f9bd5dd568611d11df/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e53fbb17839723ea1697fcbaf76b1c092675eaaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e53fbb17839723ea1697fcbaf76b1c092675eaaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e53fbb17839723ea1697fcbaf76b1c092675eaaf"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ee17edd7934bdb6e1f4b96707eba9077e2d1c430", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-thread-7.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e417eea8f3f14131f7370f9bd5dd568611d11df/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e417eea8f3f14131f7370f9bd5dd568611d11df/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-7.c?ref=4e417eea8f3f14131f7370f9bd5dd568611d11df", "patch": "@@ -1,14 +1,15 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-thread1-stats -fdump-tree-thread2-stats -fdump-tree-dom2-stats -fdump-tree-thread3-stats -fdump-tree-dom3-stats -fdump-tree-vrp2-stats -fno-guess-branch-probability\" } */\n+/* { dg-options \"-O2 -fdump-tree-dom2-stats -fdump-tree-thread3-stats -fdump-tree-dom3-stats -fdump-tree-vrp-thread2-stats -fno-guess-branch-probability\" } */\n \n-/* { dg-final { scan-tree-dump \"Jumps threaded: 11\" \"thread3\" } } */\n /* { dg-final { scan-tree-dump-not \"Jumps threaded\"  \"dom2\" } } */\n \n /* aarch64 has the highest CASE_VALUES_THRESHOLD in GCC.  It's high enough\n    to change decisions in switch expansion which in turn can expose new\n    jump threading opportunities.  Skip the later tests on aarch64.  */\n /* { dg-final { scan-tree-dump-not \"Jumps threaded\"  \"dom3\" { target { ! aarch64*-*-* } } } } */\n /* { dg-final { scan-tree-dump-not \"Jumps threaded\"  \"vrp-thread2\" { target { ! aarch64*-*-* } } } } */\n+/* { dg-final { scan-tree-dump \"Jumps threaded: 11\"  \"thread3\" { target { ! aarch64*-*-* } } } } */\n+/* { dg-final { scan-tree-dump \"Jumps threaded: 18\"  \"thread3\" { target { aarch64*-*-* } } } } */\n \n enum STATE {\n   S0=0,"}]}