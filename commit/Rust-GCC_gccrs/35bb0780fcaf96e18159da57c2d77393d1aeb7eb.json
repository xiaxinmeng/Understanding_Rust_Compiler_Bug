{"sha": "35bb0780fcaf96e18159da57c2d77393d1aeb7eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzViYjA3ODBmY2FmOTZlMTgxNTlkYTU3YzJkNzczOTNkMWFlYjdlYg==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2001-04-13T04:10:56Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2001-04-13T04:10:56Z"}, "message": "jump.c (jump_optimize_1): Don't delete dead stores here.\n\n\t* jump.c (jump_optimize_1): Don't delete dead stores here.\n\t* toplev.c (rest_of_compilation): Call delete_trivially_dead_insns\n\tprior to running jump optimize before cse2.\n\nFrom-SVN: r41320", "tree": {"sha": "6c074d7a000673d864424a17e5abaabb72a7bdce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c074d7a000673d864424a17e5abaabb72a7bdce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35bb0780fcaf96e18159da57c2d77393d1aeb7eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35bb0780fcaf96e18159da57c2d77393d1aeb7eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35bb0780fcaf96e18159da57c2d77393d1aeb7eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35bb0780fcaf96e18159da57c2d77393d1aeb7eb/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a5428f737b19b58f505bec4e774ff93df40683d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5428f737b19b58f505bec4e774ff93df40683d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5428f737b19b58f505bec4e774ff93df40683d"}], "stats": {"total": 41, "additions": 12, "deletions": 29}, "files": [{"sha": "4f431b6fadc199ba713f9fef353d5cba759f5828", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35bb0780fcaf96e18159da57c2d77393d1aeb7eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35bb0780fcaf96e18159da57c2d77393d1aeb7eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35bb0780fcaf96e18159da57c2d77393d1aeb7eb", "patch": "@@ -1,3 +1,9 @@\n+Fri Apr 13 00:09:22 EDT 2001  John Wehle  (john@feith.com)\n+\n+\t* jump.c (jump_optimize_1): Don't delete dead stores here.\n+\t* toplev.c (rest_of_compilation): Call delete_trivially_dead_insns\n+\tprior to running jump optimize before cse2.\n+\n 2001-04-12  Stan Shebs  <shebs@apple.com>\n \n \t* objc/objc-act.c: Remove all code ifdefed with the never-used"}, {"sha": "e4a7cf8222831f716a41619bd59717a44f79a3ac", "filename": "gcc/jump.c", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35bb0780fcaf96e18159da57c2d77393d1aeb7eb/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35bb0780fcaf96e18159da57c2d77393d1aeb7eb/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=35bb0780fcaf96e18159da57c2d77393d1aeb7eb", "patch": "@@ -248,35 +248,6 @@ jump_optimize_1 (f, cross_jump, noop_moves, after_regscan,\n   if (noop_moves)\n     delete_noop_moves (f);\n \n-  /* If we haven't yet gotten to reload and we have just run regscan,\n-     delete any insn that sets a register that isn't used elsewhere.\n-     This helps some of the optimizations below by having less insns\n-     being jumped around.  */\n-\n-  if (optimize && ! reload_completed && after_regscan)\n-    for (insn = f; insn; insn = next)\n-      {\n-\trtx set = single_set (insn);\n-\n-\tnext = NEXT_INSN (insn);\n-\n-\tif (set && GET_CODE (SET_DEST (set)) == REG\n-\t    && REGNO (SET_DEST (set)) >= FIRST_PSEUDO_REGISTER\n-\t    && REGNO_FIRST_UID (REGNO (SET_DEST (set))) == INSN_UID (insn)\n-\t    /* We use regno_last_note_uid so as not to delete the setting\n-\t       of a reg that's used in notes.  A subsequent optimization\n-\t       might arrange to use that reg for real.  */\n-\t    && REGNO_LAST_NOTE_UID (REGNO (SET_DEST (set))) == INSN_UID (insn)\n-\t    && ! side_effects_p (SET_SRC (set))\n-\t    && ! find_reg_note (insn, REG_RETVAL, 0)\n-\t    /* An ADDRESSOF expression can turn into a use of the internal arg\n-\t       pointer, so do not delete the initialization of the internal\n-\t       arg pointer yet.  If it is truly dead, flow will delete the\n-\t       initializing insn.  */\n-\t    && SET_DEST (set) != current_function_internal_arg_pointer)\n-\t  delete_insn (insn);\n-      }\n-\n   /* Now iterate optimizing jumps until nothing changes over one pass.  */\n   changed = 1;\n   old_max_reg = max_reg_num ();"}, {"sha": "ae4de0e46ed3f374dc20dcede01894765861939e", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35bb0780fcaf96e18159da57c2d77393d1aeb7eb/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35bb0780fcaf96e18159da57c2d77393d1aeb7eb/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=35bb0780fcaf96e18159da57c2d77393d1aeb7eb", "patch": "@@ -3224,6 +3224,12 @@ rest_of_compilation (decl)\n \t     ??? Rework to not call reg_scan so often.  */\n \t  timevar_push (TV_JUMP);\n \n+\t  /* The previous call to loop_optimize makes some instructions\n+\t     trivially dead.  We delete those instructions now in the\n+\t     hope that doing so will make the heuristics in jump work\n+\t     better and possibly speed up compilation.  */\n+\t  delete_trivially_dead_insns (insns, max_reg_num ());\n+\n \t  reg_scan (insns, max_reg_num (), 0);\n \t  jump_optimize (insns, !JUMP_CROSS_JUMP,\n \t\t\t !JUMP_NOOP_MOVES, JUMP_AFTER_REGSCAN);"}]}