{"sha": "9663f8f74821638d2f2ef1a333ec4e937c3c6040", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2M2Y4Zjc0ODIxNjM4ZDJmMmVmMWEzMzNlYzRlOTM3YzNjNjA0MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-03T19:30:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-03T19:30:22Z"}, "message": "re PR tree-optimization/70916 (gcc ICE at -O3 on valid code on x86_64-linux-gnu in \"tree_operand_check\")\n\n\tPR tree-optimization/70916\n\t* tree-if-conv.c: Include cfganal.h.\n\t(pass_if_conversion::execute): Call connect_infinite_loops_to_exit\n\tand remove_fake_exit_edges around the optimization pass.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r235842", "tree": {"sha": "fc585f904ca096966637c2ab6bb34f46a32434cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc585f904ca096966637c2ab6bb34f46a32434cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9663f8f74821638d2f2ef1a333ec4e937c3c6040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9663f8f74821638d2f2ef1a333ec4e937c3c6040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9663f8f74821638d2f2ef1a333ec4e937c3c6040", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9663f8f74821638d2f2ef1a333ec4e937c3c6040/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a0bf5e11baddeb3b12e02d85b5e2504ce151abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a0bf5e11baddeb3b12e02d85b5e2504ce151abd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a0bf5e11baddeb3b12e02d85b5e2504ce151abd"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "f9950c420f868796fe55922b31a15f90ad590929", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663f8f74821638d2f2ef1a333ec4e937c3c6040/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663f8f74821638d2f2ef1a333ec4e937c3c6040/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9663f8f74821638d2f2ef1a333ec4e937c3c6040", "patch": "@@ -1,3 +1,11 @@\n+2016-05-03  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70916\n+\t* tree-if-conv.c: Include cfganal.h.\n+\t(pass_if_conversion::execute): Call connect_infinite_loops_to_exit\n+\tand remove_fake_exit_edges around the optimization pass.\n+\n 2016-05-03  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cgraph.c (symbol_table::create_edge): Set inline_failed."}, {"sha": "52292c36cd21a4a70c0a17f0996aacc4236d3500", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9663f8f74821638d2f2ef1a333ec4e937c3c6040/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9663f8f74821638d2f2ef1a333ec4e937c3c6040/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=9663f8f74821638d2f2ef1a333ec4e937c3c6040", "patch": "@@ -113,6 +113,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"varasm.h\"\n #include \"builtins.h\"\n #include \"params.h\"\n+#include \"cfganal.h\"\n \n /* Only handle PHIs with no more arguments unless we are asked to by\n    simd pragma.  */\n@@ -2812,13 +2813,23 @@ pass_if_conversion::execute (function *fun)\n   if (number_of_loops (fun) <= 1)\n     return 0;\n \n+  /* If there are infinite loops, during CDI_POST_DOMINATORS computation\n+     we can pick pretty much random bb inside of the infinite loop that\n+     has the fake edge.  If we are unlucky enough, this can confuse the\n+     add_to_predicate_list post-dominator check to optimize as if that\n+     bb or some other one is a join block when it actually is not.\n+     See PR70916.  */\n+  connect_infinite_loops_to_exit ();\n+\n   FOR_EACH_LOOP (loop, 0)\n     if (flag_tree_loop_if_convert == 1\n \t|| flag_tree_loop_if_convert_stores == 1\n \t|| ((flag_tree_loop_vectorize || loop->force_vectorize)\n \t    && !loop->dont_vectorize))\n       todo |= tree_if_conversion (loop);\n \n+  remove_fake_exit_edges ();\n+\n   if (flag_checking)\n     {\n       basic_block bb;"}]}