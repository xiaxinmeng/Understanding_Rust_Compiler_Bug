{"sha": "e164f32df23b309963bf17bf725cd8fcae58d2d5", "node_id": "C_kwDOANBUbNoAKGUxNjRmMzJkZjIzYjMwOTk2M2JmMTdiZjcyNWNkOGZjYWU1OGQyZDU", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-02-27T14:16:29Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-02-28T20:38:35Z"}, "message": "gccrs: Make coercion sites autoderef cycle optional\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>\n\ngcc/rust/ChangeLog:\n\n\t* typecheck/rust-casts.cc (TypeCastRules::check): update to new interface\n\t* typecheck/rust-coercion.cc (TypeCoercionRules::Coerce): likewise\n\t(TypeCoercionRules::TryCoerce): likewise\n\t(TypeCoercionRules::TypeCoercionRules): likewise\n\t* typecheck/rust-coercion.h: likewise\n\t* typecheck/rust-type-util.cc (coercion_site): likewise", "tree": {"sha": "717ea25813706c59a8288591a713eb99b5f05323", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/717ea25813706c59a8288591a713eb99b5f05323"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e164f32df23b309963bf17bf725cd8fcae58d2d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e164f32df23b309963bf17bf725cd8fcae58d2d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e164f32df23b309963bf17bf725cd8fcae58d2d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e164f32df23b309963bf17bf725cd8fcae58d2d5/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd4556fb65c64396fc6a429bc03b58932dc3c263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd4556fb65c64396fc6a429bc03b58932dc3c263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd4556fb65c64396fc6a429bc03b58932dc3c263"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "0ecb50f7d1d7a607a70a14b9808dc29358680a07", "filename": "gcc/rust/typecheck/rust-casts.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e164f32df23b309963bf17bf725cd8fcae58d2d5/gcc%2Frust%2Ftypecheck%2Frust-casts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e164f32df23b309963bf17bf725cd8fcae58d2d5/gcc%2Frust%2Ftypecheck%2Frust-casts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-casts.cc?ref=e164f32df23b309963bf17bf725cd8fcae58d2d5", "patch": "@@ -39,7 +39,8 @@ TypeCastRules::check ()\n {\n   // https://github.com/rust-lang/rust/blob/7eac88abb2e57e752f3302f02be5f3ce3d7adfb4/compiler/rustc_typeck/src/check/cast.rs#L565-L582\n   auto possible_coercion\n-    = TypeCoercionRules::TryCoerce (from.get_ty (), to.get_ty (), locus);\n+    = TypeCoercionRules::TryCoerce (from.get_ty (), to.get_ty (), locus,\n+\t\t\t\t    true /*allow-autoderef*/);\n   if (!possible_coercion.is_error ())\n     return possible_coercion;\n "}, {"sha": "7a3f51aa419e3d49f2dc1067f513408ec099ddae", "filename": "gcc/rust/typecheck/rust-coercion.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e164f32df23b309963bf17bf725cd8fcae58d2d5/gcc%2Frust%2Ftypecheck%2Frust-coercion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e164f32df23b309963bf17bf725cd8fcae58d2d5/gcc%2Frust%2Ftypecheck%2Frust-coercion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-coercion.cc?ref=e164f32df23b309963bf17bf725cd8fcae58d2d5", "patch": "@@ -25,25 +25,26 @@ namespace Resolver {\n \n TypeCoercionRules::CoercionResult\n TypeCoercionRules::Coerce (TyTy::BaseType *receiver, TyTy::BaseType *expected,\n-\t\t\t   Location locus)\n+\t\t\t   Location locus, bool allow_autoderef)\n {\n-  TypeCoercionRules resolver (expected, locus, true);\n+  TypeCoercionRules resolver (expected, locus, true, allow_autoderef);\n   bool ok = resolver.do_coercion (receiver);\n   return ok ? resolver.try_result : CoercionResult::get_error ();\n }\n \n TypeCoercionRules::CoercionResult\n TypeCoercionRules::TryCoerce (TyTy::BaseType *receiver,\n-\t\t\t      TyTy::BaseType *expected, Location locus)\n+\t\t\t      TyTy::BaseType *expected, Location locus,\n+\t\t\t      bool allow_autoderef)\n {\n-  TypeCoercionRules resolver (expected, locus, false);\n+  TypeCoercionRules resolver (expected, locus, false, allow_autoderef);\n   bool ok = resolver.do_coercion (receiver);\n   return ok ? resolver.try_result : CoercionResult::get_error ();\n }\n \n TypeCoercionRules::TypeCoercionRules (TyTy::BaseType *expected, Location locus,\n-\t\t\t\t      bool emit_errors)\n-  : AutoderefCycle (false), mappings (Analysis::Mappings::get ()),\n+\t\t\t\t      bool emit_errors, bool allow_autoderef)\n+  : AutoderefCycle (!allow_autoderef), mappings (Analysis::Mappings::get ()),\n     context (TypeCheckContext::get ()), expected (expected), locus (locus),\n     try_result (CoercionResult::get_error ()), emit_errors (emit_errors)\n {}"}, {"sha": "69442e5a260d09a1b12e207aa6b7d8fd5c40eef1", "filename": "gcc/rust/typecheck/rust-coercion.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e164f32df23b309963bf17bf725cd8fcae58d2d5/gcc%2Frust%2Ftypecheck%2Frust-coercion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e164f32df23b309963bf17bf725cd8fcae58d2d5/gcc%2Frust%2Ftypecheck%2Frust-coercion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-coercion.h?ref=e164f32df23b309963bf17bf725cd8fcae58d2d5", "patch": "@@ -42,10 +42,12 @@ class TypeCoercionRules : protected AutoderefCycle\n   };\n \n   static CoercionResult Coerce (TyTy::BaseType *receiver,\n-\t\t\t\tTyTy::BaseType *expected, Location locus);\n+\t\t\t\tTyTy::BaseType *expected, Location locus,\n+\t\t\t\tbool allow_autoderef);\n \n   static CoercionResult TryCoerce (TyTy::BaseType *receiver,\n-\t\t\t\t   TyTy::BaseType *expected, Location locus);\n+\t\t\t\t   TyTy::BaseType *expected, Location locus,\n+\t\t\t\t   bool allow_autoderef);\n \n   CoercionResult coerce_unsafe_ptr (TyTy::BaseType *receiver,\n \t\t\t\t    TyTy::PointerType *expected,\n@@ -66,8 +68,8 @@ class TypeCoercionRules : protected AutoderefCycle\n   void object_unsafe_error (Location expr_locus, Location lhs, Location rhs);\n \n protected:\n-  TypeCoercionRules (TyTy::BaseType *expected, Location locus,\n-\t\t     bool emit_errors);\n+  TypeCoercionRules (TyTy::BaseType *expected, Location locus, bool emit_errors,\n+\t\t     bool allow_autoderef);\n \n   bool select (const TyTy::BaseType &autoderefed) override;\n "}, {"sha": "da9a724aca814beabe7e58f7439f063d15340c88", "filename": "gcc/rust/typecheck/rust-type-util.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e164f32df23b309963bf17bf725cd8fcae58d2d5/gcc%2Frust%2Ftypecheck%2Frust-type-util.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e164f32df23b309963bf17bf725cd8fcae58d2d5/gcc%2Frust%2Ftypecheck%2Frust-type-util.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-type-util.cc?ref=e164f32df23b309963bf17bf725cd8fcae58d2d5", "patch": "@@ -186,7 +186,8 @@ coercion_site (HirId id, TyTy::TyWithLocation lhs, TyTy::TyWithLocation rhs,\n     return expr;\n \n   // can we autoderef it?\n-  auto result = TypeCoercionRules::Coerce (expr, expected, locus);\n+  auto result = TypeCoercionRules::Coerce (expr, expected, locus,\n+\t\t\t\t\t   true /*allow-autodref*/);\n \n   // the result needs to be unified\n   TyTy::BaseType *receiver = expr;"}]}