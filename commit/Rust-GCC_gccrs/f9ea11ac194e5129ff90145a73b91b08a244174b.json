{"sha": "f9ea11ac194e5129ff90145a73b91b08a244174b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjllYTExYWMxOTRlNTEyOWZmOTAxNDVhNzNiOTFiMDhhMjQ0MTc0Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-04T14:45:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-04T14:45:56Z"}, "message": "re PR target/70059 (Invalid codegen on AVX-512 when using _mm512_inserti64x4(x, y, 0))\n\n\tPR target/70059\n\t* config/i386/sse.md (vec_set_lo_<mode><mask_name>,\n\t<extract_type_2>_vinsert<shuffletype><extract_suf_2>_mask): Formatting\n\tfixes.\n\t(vec_set_hi_<mode><mask_name>): Likewise.  Swap VEC_CONCAT operands.\n\n\t* gcc.target/i386/avx512f-pr70059.c: New test.\n\t* gcc.target/i386/avx512dq-pr70059.c: New test.\n\nFrom-SVN: r233968", "tree": {"sha": "79cf44129e61d39274937a65c0b994a817856342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79cf44129e61d39274937a65c0b994a817856342"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9ea11ac194e5129ff90145a73b91b08a244174b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ea11ac194e5129ff90145a73b91b08a244174b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ea11ac194e5129ff90145a73b91b08a244174b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ea11ac194e5129ff90145a73b91b08a244174b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6c38c695832904acacf5cae38f435ef831f00e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c38c695832904acacf5cae38f435ef831f00e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6c38c695832904acacf5cae38f435ef831f00e1"}], "stats": {"total": 112, "additions": 96, "deletions": 16}, "files": [{"sha": "a65e347054defc62096a3ca5c3bb4f8b27968656", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9ea11ac194e5129ff90145a73b91b08a244174b", "patch": "@@ -1,3 +1,11 @@\n+2016-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70059\n+\t* config/i386/sse.md (vec_set_lo_<mode><mask_name>,\n+\t<extract_type_2>_vinsert<shuffletype><extract_suf_2>_mask): Formatting\n+\tfixes.\n+\t(vec_set_hi_<mode><mask_name>): Likewise.  Swap VEC_CONCAT operands.\n+\n 2016-03-04  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR rtl-optimization/57676"}, {"sha": "3dd787c6abb21e02dce7fa86e70c5c79f8822b67", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=f9ea11ac194e5129ff90145a73b91b08a244174b", "patch": "@@ -12426,13 +12426,13 @@\n {\n   int mask = INTVAL (operands[3]);\n   if (mask == 0)\n-    emit_insn (gen_vec_set_lo_<mode>_mask\n-      (operands[0], operands[1], operands[2],\n-       operands[4], operands[5]));\n+    emit_insn (gen_vec_set_lo_<mode>_mask (operands[0], operands[1],\n+\t\t\t\t\t   operands[2], operands[4],\n+\t\t\t\t\t   operands[5]));\n   else\n-    emit_insn (gen_vec_set_hi_<mode>_mask\n-      (operands[0], operands[1], operands[2],\n-       operands[4], operands[5]));\n+    emit_insn (gen_vec_set_hi_<mode>_mask (operands[0], operands[1],\n+\t\t\t\t\t   operands[2], operands[4],\n+\t\t\t\t\t   operands[5]));\n   DONE;\n })\n \n@@ -12443,9 +12443,9 @@\n \t  (vec_select:<ssehalfvecmode>\n \t    (match_operand:V16FI 1 \"register_operand\" \"v\")\n \t    (parallel [(const_int 8) (const_int 9)\n-\t      (const_int 10) (const_int 11)\n-\t      (const_int 12) (const_int 13)\n-              (const_int 14) (const_int 15)]))))]\n+\t\t       (const_int 10) (const_int 11)\n+\t\t       (const_int 12) (const_int 13)\n+\t\t       (const_int 14) (const_int 15)]))))]\n   \"TARGET_AVX512DQ\"\n   \"vinsert<shuffletype>32x8\\t{$0x0, %2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2, $0x0}\"\n   [(set_attr \"type\" \"sselog\")\n@@ -12456,13 +12456,13 @@\n (define_insn \"vec_set_hi_<mode><mask_name>\"\n   [(set (match_operand:V16FI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V16FI\n-\t  (match_operand:<ssehalfvecmode> 2 \"nonimmediate_operand\" \"vm\")\n \t  (vec_select:<ssehalfvecmode>\n \t    (match_operand:V16FI 1 \"register_operand\" \"v\")\n \t    (parallel [(const_int 0) (const_int 1)\n-\t      (const_int 2) (const_int 3)\n-\t      (const_int 4) (const_int 5)\n-              (const_int 6) (const_int 7)]))))]\n+\t\t       (const_int 2) (const_int 3)\n+\t\t       (const_int 4) (const_int 5)\n+\t\t       (const_int 6) (const_int 7)]))\n+\t  (match_operand:<ssehalfvecmode> 2 \"nonimmediate_operand\" \"vm\")))]\n   \"TARGET_AVX512DQ\"\n   \"vinsert<shuffletype>32x8\\t{$0x1, %2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2, $0x1}\"\n   [(set_attr \"type\" \"sselog\")\n@@ -12477,7 +12477,7 @@\n \t  (vec_select:<ssehalfvecmode>\n \t    (match_operand:V8FI 1 \"register_operand\" \"v\")\n \t    (parallel [(const_int 4) (const_int 5)\n-              (const_int 6) (const_int 7)]))))]\n+\t\t       (const_int 6) (const_int 7)]))))]\n   \"TARGET_AVX512F\"\n   \"vinsert<shuffletype>64x4\\t{$0x0, %2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2, $0x0}\"\n   [(set_attr \"type\" \"sselog\")\n@@ -12488,11 +12488,11 @@\n (define_insn \"vec_set_hi_<mode><mask_name>\"\n   [(set (match_operand:V8FI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V8FI\n-\t  (match_operand:<ssehalfvecmode> 2 \"nonimmediate_operand\" \"vm\")\n \t  (vec_select:<ssehalfvecmode>\n \t    (match_operand:V8FI 1 \"register_operand\" \"v\")\n \t    (parallel [(const_int 0) (const_int 1)\n-              (const_int 2) (const_int 3)]))))]\n+\t\t       (const_int 2) (const_int 3)]))\n+\t  (match_operand:<ssehalfvecmode> 2 \"nonimmediate_operand\" \"vm\")))]\n   \"TARGET_AVX512F\"\n   \"vinsert<shuffletype>64x4\\t{$0x1, %2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2, $0x1}\"\n   [(set_attr \"type\" \"sselog\")"}, {"sha": "baf683a25fc790d5f8cda7977841e670ca5e6fb0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9ea11ac194e5129ff90145a73b91b08a244174b", "patch": "@@ -1,3 +1,9 @@\n+2016-03-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70059\n+\t* gcc.target/i386/avx512f-pr70059.c: New test.\n+\t* gcc.target/i386/avx512dq-pr70059.c: New test.\n+\n 2016-03-04  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR rtl-optimization/57676"}, {"sha": "932ff6a6f6af22fef25d19bda073eecfb3611c44", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-pr70059.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr70059.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr70059.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-pr70059.c?ref=f9ea11ac194e5129ff90145a73b91b08a244174b", "patch": "@@ -0,0 +1,33 @@\n+/* PR target/70059 */\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx512dq } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+\n+#include \"avx512dq-check.h\"\n+\n+__attribute__((noinline, noclone)) __m512i\n+foo (__m256i a, __m256i b)\n+{\n+  __m512i r = _mm512_undefined_si512 ();\n+  r = _mm512_inserti32x8 (r, a, 0);\n+  r = _mm512_inserti32x8 (r, b, 1);\n+  return r;\n+}\n+\n+static void\n+avx512dq_test (void)\n+{\n+  union256i_q a, b;\n+  union512i_q r;\n+  long long r_ref[8];\n+  int i;\n+  for (i = 0; i < 4; i++)\n+    {\n+      a.a[i] = 0x0101010101010101ULL * i;\n+      b.a[i] = 0x1010101010101010ULL * i;\n+      r_ref[i] = a.a[i];\n+      r_ref[i + 4] = b.a[i];\n+    }\n+  r.x = foo (a.x, b.x);\n+  check_union512i_q (r, r_ref);\n+}"}, {"sha": "95c8915a93bd1289d03abbc99292eb2a34baf43d", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr70059.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr70059.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ea11ac194e5129ff90145a73b91b08a244174b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr70059.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr70059.c?ref=f9ea11ac194e5129ff90145a73b91b08a244174b", "patch": "@@ -0,0 +1,33 @@\n+/* PR target/70059 */\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx512f } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+\n+#include \"avx512f-check.h\"\n+\n+__attribute__((noinline, noclone)) __m512i\n+foo (__m256i a, __m256i b)\n+{\n+  __m512i r = _mm512_undefined_si512 ();\n+  r = _mm512_inserti64x4 (r, a, 0);\n+  r = _mm512_inserti64x4 (r, b, 1);\n+  return r;\n+}\n+\n+static void\n+avx512f_test (void)\n+{\n+  union256i_q a, b;\n+  union512i_q r;\n+  long long r_ref[8];\n+  int i;\n+  for (i = 0; i < 4; i++)\n+    {\n+      a.a[i] = 0x0101010101010101ULL * i;\n+      b.a[i] = 0x1010101010101010ULL * i;\n+      r_ref[i] = a.a[i];\n+      r_ref[i + 4] = b.a[i];\n+    }\n+  r.x = foo (a.x, b.x);\n+  check_union512i_q (r, r_ref);\n+}"}]}