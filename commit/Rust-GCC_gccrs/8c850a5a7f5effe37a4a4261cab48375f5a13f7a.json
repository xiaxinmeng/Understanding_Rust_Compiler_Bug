{"sha": "8c850a5a7f5effe37a4a4261cab48375f5a13f7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4NTBhNWE3ZjVlZmZlMzdhNGE0MjYxY2FiNDgzNzVmNWExM2Y3YQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@google.com", "date": "2011-09-28T19:09:50Z"}, "committer": {"name": "Doug Evans", "email": "devans@gcc.gnu.org", "date": "2011-09-28T19:09:50Z"}, "message": "timeval-utils.h: New file.\n\n\tinclude/\n\t* timeval-utils.h: New file.\n\n\tlibiberty/\n\t* timeval-utils.c: New file.\n\t* Makefile.in (CFILES): Add it.\n\t(REQUIRED_OFILES): Add timeval-utils.$(objext).\n\t(INSTALLED_HEADERS): Add timeval-utils.h.\n\t(timeval-utils.$(objext)): Add rule.\n\nFrom-SVN: r179319", "tree": {"sha": "c6b2cef2eb65af24805c3eb17f1e6207d9c1a47f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6b2cef2eb65af24805c3eb17f1e6207d9c1a47f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c850a5a7f5effe37a4a4261cab48375f5a13f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c850a5a7f5effe37a4a4261cab48375f5a13f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c850a5a7f5effe37a4a4261cab48375f5a13f7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/comments", "author": null, "committer": null, "parents": [{"sha": "be50fcea4e4482bff587119732223f1d4639f47b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be50fcea4e4482bff587119732223f1d4639f47b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be50fcea4e4482bff587119732223f1d4639f47b"}], "stats": {"total": 135, "additions": 135, "deletions": 0}, "files": [{"sha": "342ae36e17656c722f57ae4615ae69f99dd32af3", "filename": "include/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=8c850a5a7f5effe37a4a4261cab48375f5a13f7a", "patch": "@@ -1,5 +1,7 @@\n 2011-09-28  Doug Evans  <dje@google.com>\n \n+\t* timeval-utils.h: New file.\n+\n \t* libiberty.h (countargv): Declare.\n \n 2011-09-26  Cary Coutant  <ccoutant@google.com>"}, {"sha": "1caf9b36d15788898454ef82c3aa0cc0c360ce7a", "filename": "include/timeval-utils.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/include%2Ftimeval-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/include%2Ftimeval-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Ftimeval-utils.h?ref=8c850a5a7f5effe37a4a4261cab48375f5a13f7a", "patch": "@@ -0,0 +1,40 @@\n+/* Basic struct timeval utilities.\n+   Copyright (C) 2011 Free Software Foundation, Inc.\n+\n+This file is part of the libiberty library.\n+Libiberty is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Library General Public\n+License as published by the Free Software Foundation; either\n+version 2 of the License, or (at your option) any later version.\n+\n+Libiberty is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+Library General Public License for more details.\n+\n+You should have received a copy of the GNU Library General Public\n+License along with libiberty; see the file COPYING.LIB.  If not,\n+write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,\n+Boston, MA 02110-1301, USA.  */\n+\n+#ifndef TIMEVAL_UTILS_H\n+#define TIMEVAL_UTILS_H\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif /* __cplusplus */\n+\n+/* forward decl */\n+struct timeval;\n+\n+extern void timeval_add (struct timeval *result,\n+\t\t\t const struct timeval *a, const struct timeval *b);\n+\n+extern void timeval_sub (struct timeval *result,\n+\t\t\t const struct timeval *a, const struct timeval *b);\n+\n+#ifdef __cplusplus\n+}\n+#endif /* __cplusplus */\n+\n+#endif /* TIMEVAL_UTILS_H */"}, {"sha": "59460e43f091ef79e4f3a7e288cdd3b5b2415112", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8c850a5a7f5effe37a4a4261cab48375f5a13f7a", "patch": "@@ -1,5 +1,11 @@\n 2011-09-28  Doug Evans  <dje@google.com>\n \n+\t* timeval-utils.c: New file.\n+\t* Makefile.in (CFILES): Add it.\n+\t(REQUIRED_OFILES): Add timeval-utils.$(objext).\n+\t(INSTALLED_HEADERS): Add timeval-utils.h.\n+\t(timeval-utils.$(objext)): Add rule.\n+\n \t* argv.c (countargv): New function.\n \n 2011-09-23  Cary Coutant  <ccoutant@google.com>"}, {"sha": "4c9f6a85ee268c6f0663c42d6bc350f0a76d58cf", "filename": "libiberty/timeval-utils.c", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/libiberty%2Ftimeval-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c850a5a7f5effe37a4a4261cab48375f5a13f7a/libiberty%2Ftimeval-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftimeval-utils.c?ref=8c850a5a7f5effe37a4a4261cab48375f5a13f7a", "patch": "@@ -0,0 +1,87 @@\n+/* Basic struct timeval utilities.\n+   Copyright (C) 2011 Free Software Foundation, Inc.\n+\n+This file is part of the libiberty library.\n+Libiberty is free software; you can redistribute it and/or\n+modify it under the terms of the GNU Library General Public\n+License as published by the Free Software Foundation; either\n+version 2 of the License, or (at your option) any later version.\n+\n+Libiberty is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+Library General Public License for more details.\n+\n+You should have received a copy of the GNU Library General Public\n+License along with libiberty; see the file COPYING.LIB.  If not,\n+write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,\n+Boston, MA 02110-1301, USA.  */\n+\n+#include \"config.h\"\n+\n+/* On some systems (such as WindISS), you must include <sys/types.h>\n+   to get the definition of \"time_t\" before you include <time.h>.  */\n+#include <sys/types.h>\n+\n+#ifdef TIME_WITH_SYS_TIME\n+# include <sys/time.h>\n+# include <time.h>\n+#else\n+# if HAVE_SYS_TIME_H\n+#  include <sys/time.h>\n+# else\n+#  ifdef HAVE_TIME_H\n+#   include <time.h>\n+#  endif\n+# endif\n+#endif\n+\n+#include \"timeval-utils.h\"\n+\n+/* \n+\n+@deftypefn Extension void timeval_add (struct timeval *@var{a}, @\n+  struct timeval *@var{b}, struct timeval *@var{result})\n+\n+Adds @var{a} to @var{b} and stores the result in @var{result}.\n+\n+@end deftypefn\n+\n+*/ \n+\n+void\n+timeval_add (struct timeval *result,\n+\t     const struct timeval *a, const struct timeval *b)\n+{\n+  result->tv_sec = a->tv_sec + b->tv_sec;\n+  result->tv_usec = a->tv_usec + b->tv_usec;\n+  if (result->tv_usec >= 1000000)\n+    {\n+      ++result->tv_sec;\n+      result->tv_usec -= 1000000;\n+    }\n+}\n+\n+/* \n+\n+@deftypefn Extension void timeval_sub (struct timeval *@var{a}, @\n+  struct timeval *@var{b}, struct timeval *@var{result})\n+\n+Subtracts @var{b} from @var{a} and stores the result in @var{result}.\n+\n+@end deftypefn\n+\n+*/ \n+\n+void\n+timeval_sub (struct timeval *result,\n+\t     const struct timeval *a, const struct timeval *b)\n+{\n+  result->tv_sec = a->tv_sec - b->tv_sec;\n+  result->tv_usec = a->tv_usec - b->tv_usec;\n+  if (result->tv_usec < 0)\n+    {\n+      --result->tv_sec;\n+      result->tv_usec += 1000000;\n+    }\n+}"}]}