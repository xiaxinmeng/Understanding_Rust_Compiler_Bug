{"sha": "29b91443e955b90f8c8ace2c4c4f1d7242abb4d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjliOTE0NDNlOTU1YjkwZjhjOGFjZTJjNGM0ZjFkNzI0MmFiYjRkNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-05-08T15:33:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-05-08T15:33:04Z"}, "message": "re PR c++/6381 (Missing assembler label)\n\n        * dwarf2out.c (output_call_frame_info): Don't emit a CIE with no FDEs.\n\n        * dwarf2out.c (gen_type_die): Abort on broken recursion.\n\n        PR c++/6381\n        * dwarf2out.c (rtl_for_decl_location): Only expand INTEGER_CST and\n        REAL_CST.\n\nFrom-SVN: r53295", "tree": {"sha": "0aad108ce5fa34a70d37f19bc67a3ef24b870d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aad108ce5fa34a70d37f19bc67a3ef24b870d2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c76b95000cf147f0155a6db1a92e4069cae5e68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c76b95000cf147f0155a6db1a92e4069cae5e68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c76b95000cf147f0155a6db1a92e4069cae5e68"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "5b2c5a832810bc408642e8439cfd3ffc088661b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29b91443e955b90f8c8ace2c4c4f1d7242abb4d5", "patch": "@@ -1,3 +1,13 @@\n+2002-05-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2out.c (output_call_frame_info): Don't emit a CIE with no FDEs.\n+\n+\t* dwarf2out.c (gen_type_die): Abort on broken recursion.\n+\n+\tPR c++/6381\n+\t* dwarf2out.c (rtl_for_decl_location): Only expand INTEGER_CST and\n+\tREAL_CST.\n+\n 2002-05-08  Nick Clifton  <nickc@cambridge.redhat.com>\n \n \t* config/arm/t-arm-elf (MULTILIB): Do not allow big-endian/"}, {"sha": "9c0c6340d75c4c75ba22de652ff7784d69e991eb", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=29b91443e955b90f8c8ace2c4c4f1d7242abb4d5", "patch": "@@ -1814,6 +1814,10 @@ output_call_frame_info (for_eh)\n   int per_encoding = DW_EH_PE_absptr;\n   int lsda_encoding = DW_EH_PE_absptr;\n \n+  /* Don't emit a CIE if there won't be any FDEs.  */\n+  if (fde_table_in_use == 0)\n+    return;\n+\n   /* If we don't have any functions we'll want to unwind out of, don't emit any\n      EH unwind information.  */\n   if (for_eh)\n@@ -8946,15 +8950,17 @@ rtl_for_decl_location (decl)\n \t\t  == strlen (TREE_STRING_POINTER (init)) + 1))\n \t    rtl = gen_rtx_CONST_STRING (VOIDmode, TREE_STRING_POINTER (init));\n \t}\n-\n-      if (rtl == NULL)\n+      /* If the initializer is something that we know will expand into an\n+\t immediate RTL constant, expand it now.  Expanding anything else\n+\t tends to produce unresolved symbols; see debug/5770 and c++/6381.  */\n+      else if (TREE_CODE (DECL_INITIAL (decl)) == INTEGER_CST\n+\t       || TREE_CODE (DECL_INITIAL (decl)) == REAL_CST)\n \t{\n \t  rtl = expand_expr (DECL_INITIAL (decl), NULL_RTX, VOIDmode,\n \t\t\t     EXPAND_INITIALIZER);\n-\t  /* If expand_expr returned a MEM, we cannot use it, since\n-\t     it won't be output, leading to unresolved symbol.  */\n+\t  /* If expand_expr returns a MEM, it wasn't immediate.  */\n \t  if (rtl && GET_CODE (rtl) == MEM)\n-\t    rtl = NULL;\n+\t    abort ();\n \t}\n     }\n \n@@ -11071,6 +11077,10 @@ gen_type_die (type, context_die)\n   if (TYPE_NAME (type) && TREE_CODE (TYPE_NAME (type)) == TYPE_DECL\n       && DECL_ORIGINAL_TYPE (TYPE_NAME (type)))\n     {\n+      /* Prevent broken recursion; we can't hand off to the same type.  */\n+      if (DECL_ORIGINAL_TYPE (TYPE_NAME (type)) == type)\n+\tabort ();\n+\n       TREE_ASM_WRITTEN (type) = 1;\n       gen_decl_die (TYPE_NAME (type), context_die);\n       return;"}, {"sha": "7cbc5714137bd585b771c9a2f4dd6954eabfb626", "filename": "gcc/testsuite/g++.dg/debug/const1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fconst1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29b91443e955b90f8c8ace2c4c4f1d7242abb4d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fconst1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fconst1.C?ref=29b91443e955b90f8c8ace2c4c4f1d7242abb4d5", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/6381\n+// Bug: we were emitting the initializer for bar, which referenced foo,\n+// which was not emitted.\n+\n+// { dg-options \"-O\" }\n+// { dg-do link }\n+\n+static const int foo[] = { 0 };\n+static const int * const bar[] = { foo };\n+\n+int main() {}"}]}