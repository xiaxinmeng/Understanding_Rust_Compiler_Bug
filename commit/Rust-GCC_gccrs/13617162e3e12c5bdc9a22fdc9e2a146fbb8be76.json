{"sha": "13617162e3e12c5bdc9a22fdc9e2a146fbb8be76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2MTcxNjJlM2UxMmM1YmRjOWEyMmZkYzllMmExNDZmYmI4YmU3Ng==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2016-01-27T01:07:26Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2016-01-27T01:07:26Z"}, "message": "d-demangle.c (dlang_call_convention): Handle extern Objective-C function calling convention.\n\nlibiberty/ChangeLog:\n\n2016-01-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\t* d-demangle.c (dlang_call_convention): Handle extern Objective-C\n\tfunction calling convention.\n\t(dlang_call_convention_p): Likewise.\n\t(dlang_type): Likewise.\n\t* testsuite/d-demangle-expected: Add coverage tests.\n\nFrom-SVN: r232864", "tree": {"sha": "13239d12f2690bf745ed033f6fc8c00486fece8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13239d12f2690bf745ed033f6fc8c00486fece8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acf1f7da9628b30a5577bf954f26e328a89c2ac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf1f7da9628b30a5577bf954f26e328a89c2ac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf1f7da9628b30a5577bf954f26e328a89c2ac7"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "d11f4cea099e6b7c4154780ac322981826a5d54e", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=13617162e3e12c5bdc9a22fdc9e2a146fbb8be76", "patch": "@@ -1,3 +1,11 @@\n+2016-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_call_convention): Handle extern Objective-C\n+\tfunction calling convention.\n+\t(dlang_call_convention_p): Likewise.\n+\t(dlang_type): Likewise.\n+\t* testsuite/d-demangle-expected: Add coverage tests.\n+\n 2016-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-demangle.c (dlang_function_args): Append ',' for variadic functions"}, {"sha": "4ad90a6c58c3f7583fc21079fb5ac264a3c60b31", "filename": "libiberty/d-demangle.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76/libiberty%2Fd-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76/libiberty%2Fd-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fd-demangle.c?ref=13617162e3e12c5bdc9a22fdc9e2a146fbb8be76", "patch": "@@ -223,6 +223,10 @@ dlang_call_convention (string *decl, const char *mangled)\n       mangled++;\n       string_append (decl, \"extern(C++) \");\n       break;\n+    case 'Y': /* (Objective-C) */\n+      mangled++;\n+      string_append (decl, \"extern(Objective-C) \");\n+      break;\n     default:\n       return NULL;\n     }\n@@ -539,7 +543,7 @@ dlang_type (string *decl, const char *mangled)\n       switch (*mangled)\n \t{\n \tcase 'F': case 'U': case 'W':\n-\tcase 'V': case 'R':\n+\tcase 'V': case 'R': case 'Y':\n \t  mangled = dlang_function_type (decl, mangled);\n \t  string_append (decl, \"function\");\n \t  return mangled;\n@@ -1338,7 +1342,7 @@ dlang_call_convention_p (const char *mangled)\n   switch (*mangled)\n     {\n     case 'F': case 'U': case 'V':\n-    case 'W': case 'R':\n+    case 'W': case 'R': case 'Y':\n       return 1;\n \n     default:"}, {"sha": "04d39f41015e93c7c20f02afdde3af7de65282fe", "filename": "libiberty/testsuite/d-demangle-expected", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76/libiberty%2Ftestsuite%2Fd-demangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13617162e3e12c5bdc9a22fdc9e2a146fbb8be76/libiberty%2Ftestsuite%2Fd-demangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fd-demangle-expected?ref=13617162e3e12c5bdc9a22fdc9e2a146fbb8be76", "patch": "@@ -394,6 +394,10 @@ _D8demangle4testFDRZaZv\n demangle.test(extern(C++) char() delegate)\n #\n --format=dlang\n+_D8demangle4testFDYZaZv\n+demangle.test(extern(Objective-C) char() delegate)\n+#\n+--format=dlang\n _D8demangle4testFPFZaZv\n demangle.test(char() function)\n #\n@@ -414,6 +418,10 @@ _D8demangle4testFPRZaZv\n demangle.test(extern(C++) char() function)\n #\n --format=dlang\n+_D8demangle4testFPYZaZv\n+demangle.test(extern(Objective-C) char() function)\n+#\n+--format=dlang\n _D8demangle4testFDFNaZaZv\n demangle.test(char() pure delegate)\n #"}]}