{"sha": "6a99221410423745185084b26eeb5fd79860a4aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5OTIyMTQxMDQyMzc0NTE4NTA4NGIyNmVlYjVmZDc5ODYwYTRhYQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-05T09:05:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-05T09:05:58Z"}, "message": "combine.c (simplify_rtx): Do not replace TRUNCATE with a SUBREG if truncation is not a no-op.\n\n8\n        * combine.c (simplify_rtx): Do not replace TRUNCATE with a SUBREG if\n        truncation is not a no-op.\n\nFrom-SVN: r22835", "tree": {"sha": "9ece943458af2f7b8f7e40902dc98b737f1316d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ece943458af2f7b8f7e40902dc98b737f1316d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a99221410423745185084b26eeb5fd79860a4aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a99221410423745185084b26eeb5fd79860a4aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a99221410423745185084b26eeb5fd79860a4aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a99221410423745185084b26eeb5fd79860a4aa/comments", "author": null, "committer": null, "parents": [{"sha": "f385990fce4b9af5c3efd16157557fb23a340df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f385990fce4b9af5c3efd16157557fb23a340df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f385990fce4b9af5c3efd16157557fb23a340df3"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "420a60fca5ff6880231b2dd2e41e76fa3f9a94ad", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a99221410423745185084b26eeb5fd79860a4aa/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a99221410423745185084b26eeb5fd79860a4aa/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=6a99221410423745185084b26eeb5fd79860a4aa", "patch": "@@ -3773,9 +3773,12 @@ simplify_rtx (x, op0_mode, last, in_dest)\n \treturn SUBREG_REG (XEXP (x, 0));\n \n       /* If we know that the value is already truncated, we can\n-         replace the TRUNCATE with a SUBREG.  */\n-      if (num_sign_bit_copies (XEXP (x, 0), GET_MODE (XEXP (x, 0)))\n-\t  >= GET_MODE_BITSIZE (mode) + 1)\n+         replace the TRUNCATE with a SUBREG if TRULY_NOOP_TRUNCATION is\n+\t nonzero for the corresponding modes.  */\n+      if (TRULY_NOOP_TRUNCATION (GET_MODE_BITSIZE (mode),\n+\t\t\t\t GET_MODE_BITSIZE (GET_MODE (XEXP (x, 0))))\n+\t  && num_sign_bit_copies (XEXP (x, 0), GET_MODE (XEXP (x, 0)))\n+\t     >= GET_MODE_BITSIZE (mode) + 1)\n \treturn gen_lowpart_for_combine (mode, XEXP (x, 0));\n \n       /* A truncate of a comparison can be replaced with a subreg if"}]}