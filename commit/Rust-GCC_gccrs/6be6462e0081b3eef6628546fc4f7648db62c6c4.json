{"sha": "6be6462e0081b3eef6628546fc4f7648db62c6c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJlNjQ2MmUwMDgxYjNlZWY2NjI4NTQ2ZmM0Zjc2NDhkYjYyYzZjNA==", "commit": {"author": {"name": "Anthony Green", "email": "green@moxielogic.com", "date": "2009-06-11T12:07:19Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2009-06-11T12:07:19Z"}, "message": "Add PC-relative branch support to Moxie port.\n\nFrom-SVN: r148390", "tree": {"sha": "dd8f088f88a4d02435a24e46bb44a2cb3b1904f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd8f088f88a4d02435a24e46bb44a2cb3b1904f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6be6462e0081b3eef6628546fc4f7648db62c6c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be6462e0081b3eef6628546fc4f7648db62c6c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be6462e0081b3eef6628546fc4f7648db62c6c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be6462e0081b3eef6628546fc4f7648db62c6c4/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ec80803fba73fe898bfc42c57b236c1ca98aaf1"}], "stats": {"total": 59, "additions": 45, "deletions": 14}, "files": [{"sha": "3e39a7408ec3bb6346a6d27f2462365abaaf41c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be6462e0081b3eef6628546fc4f7648db62c6c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be6462e0081b3eef6628546fc4f7648db62c6c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6be6462e0081b3eef6628546fc4f7648db62c6c4", "patch": "@@ -1,3 +1,12 @@\n+2009-06-11  Anthony Green  <green@moxielogic.com>\n+\n+\t* config/moxie/moxie.md: Define length attribute for all\n+\tinstructions.\n+\t(rCC): Define.\n+\t(*b<cond:code>): Support limited branch ranges for new PC-relative\n+\tbranch instructions.\n+\t* config/moxie/moxie.h (HAS_LONG_UNCOND_BRANCH): Define.\n+\n 2009-06-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.c (min_insn_size): Use get_attr_length"}, {"sha": "e63190978f0398a86df1879a70fe24ac20f153ab", "filename": "gcc/config/moxie/moxie.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be6462e0081b3eef6628546fc4f7648db62c6c4/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be6462e0081b3eef6628546fc4f7648db62c6c4/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.h?ref=6be6462e0081b3eef6628546fc4f7648db62c6c4", "patch": "@@ -571,4 +571,6 @@ do\t\t\t\t\t\t\t\t\t      \\\n     builtin_define_std (\"MOXIE\");\t\t\\\n   }\n \n+#define HAS_LONG_UNCOND_BRANCH true\n+\n #endif /* GCC_MOXIE_H */"}, {"sha": "7f3729fdad535403738816f8a3cb2255c4813739", "filename": "gcc/config/moxie/moxie.md", "status": "modified", "additions": 34, "deletions": 14, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be6462e0081b3eef6628546fc4f7648db62c6c4/gcc%2Fconfig%2Fmoxie%2Fmoxie.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be6462e0081b3eef6628546fc4f7648db62c6c4/gcc%2Fconfig%2Fmoxie%2Fmoxie.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.md?ref=6be6462e0081b3eef6628546fc4f7648db62c6c4", "patch": "@@ -19,12 +19,15 @@\n ;; <http://www.gnu.org/licenses/>.\n \n ;; -------------------------------------------------------------------------\n-;; Moxie specific constraints\n+;; Moxie specific constraints, predicates and attributes\n ;; -------------------------------------------------------------------------\n \n (include \"constraints.md\")\n (include \"predicates.md\")\n \n+; Most instructions are two bytes long.\n+(define_attr \"length\" \"\" (const_int 2))\n+\n ;; -------------------------------------------------------------------------\n ;; nop instruction\n ;; -------------------------------------------------------------------------\n@@ -232,7 +235,8 @@\n    ld.l   %0, %1\n    lda.l  %0, %1\n    sto.l  %0, %1\n-   ldo.l  %0, %1\")\n+   ldo.l  %0, %1\"\n+  [(set_attr \"length\"\t\"2,6,2,6,2,6,6,6\")])\n \n (define_expand \"movqi\"\n   [(set (match_operand:QI 0 \"general_operand\" \"\")\n@@ -258,7 +262,8 @@\n    ld.b   %0, %1\n    lda.b  %0, %1\n    sto.b  %0, %1\n-   ldo.b  %0, %1\")\n+   ldo.b  %0, %1\"\n+  [(set_attr \"length\"\t\"2,6,2,6,2,6,6,6\")])\n \n (define_expand \"movhi\"\n   [(set (match_operand:HI 0 \"general_operand\" \"\")\n@@ -284,7 +289,8 @@\n    ld.s   %0, %1\n    lda.s  %0, %1\n    sto.s  %0, %1\n-   ldo.s  %0, %1\")\n+   ldo.s  %0, %1\"\n+  [(set_attr \"length\"\t\"2,6,2,6,2,6,6,6\")])\n \n ;; -------------------------------------------------------------------------\n ;; Compare instructions\n@@ -305,12 +311,12 @@\n                       (pc)))]\n   \"\"\n   \"\n-/* Force the compare operands into registers.  */\n-if (GET_CODE (operands[1]) != REG)\n-  operands[1] = force_reg (SImode, operands[1]);\n-if (GET_CODE (operands[2]) != REG)\n-  operands[2] = force_reg (SImode, operands[2]);\n-\")\n+  /* Force the compare operands into registers.  */\n+  if (GET_CODE (operands[1]) != REG)\n+\toperands[1] = force_reg (SImode, operands[1]);\n+  if (GET_CODE (operands[2]) != REG)\n+\toperands[2] = force_reg (SImode, operands[2]);\n+  \")\n \n (define_insn \"*cmpsi\"\n   [(set (reg:CC CC_REG)\n@@ -329,6 +335,9 @@ if (GET_CODE (operands[2]) != REG)\n (define_code_attr CC [(ne \"ne\") (eq \"eq\") (lt \"lt\") (ltu \"ltu\") \n \t\t      (gt \"gt\") (gtu \"gtu\") (ge \"ge\") (le \"le\") \n \t\t      (geu \"geu\") (leu \"leu\") ])\n+(define_code_attr rCC [(ne \"eq\") (eq \"ne\") (lt \"ge\") (ltu \"geu\") \n+\t\t       (gt \"le\") (gtu \"leu\") (ge \"lt\") (le \"gt\") \n+\t\t       (geu \"ltu\") (leu \"gtu\") ])\n \n (define_insn \"*b<cond:code>\"\n   [(set (pc)\n@@ -337,7 +346,15 @@ if (GET_CODE (operands[2]) != REG)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-  \"b<CC>   %l0\")\n+{\n+  if (get_attr_length (insn) == 2)\n+    return \"b<CC>   %l0\";\n+  else\n+    return \"b<rCC>   .+6\\n\\tjmpa   %l0\";\n+}\n+  [(set (attr \"length\")\n+        (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 1022))\n+                      (const_int 2) (const_int 8)))])\n \n ;; -------------------------------------------------------------------------\n ;; Call and Jump instructions\n@@ -358,7 +375,8 @@ if (GET_CODE (operands[2]) != REG)\n   \"\"\n   \"@\n    jsra   %0\n-   jsr    %0\")\n+   jsr    %0\"\n+  [(set_attr \"length\"\t\"6,2\")])\n \n (define_expand \"call_value\"\n   [(set (match_operand 0 \"\" \"\")\n@@ -375,7 +393,8 @@ if (GET_CODE (operands[2]) != REG)\n \t\t       1 \"immediate_operand\" \"i\"))\n \t      (match_operand 2 \"\" \"\")))]\n   \"\"\n-  \"jsra   %1\")\n+  \"jsra   %1\"\n+  [(set_attr \"length\"\t\"6\")])\n \n (define_insn \"*call_value_indirect\"\n   [(set (match_operand 0 \"register_operand\" \"=r\")\n@@ -394,7 +413,8 @@ if (GET_CODE (operands[2]) != REG)\n   [(set (pc)\n \t(label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n-  \"jmpa   %l0\")\n+  \"jmpa   %l0\"\n+  [(set_attr \"length\"\t\"6\")])\n \n \n ;; -------------------------------------------------------------------------"}]}