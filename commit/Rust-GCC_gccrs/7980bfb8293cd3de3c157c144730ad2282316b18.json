{"sha": "7980bfb8293cd3de3c157c144730ad2282316b18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk4MGJmYjgyOTNjZDNkZTNjMTU3YzE0NDczMGFkMjI4MjMxNmIxOA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-05-26T14:02:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-05-26T14:02:04Z"}, "message": "Makefile.in (COMPILER, [...]): Define.\n\n./:\t* Makefile.in (COMPILER, COMPILER_FLAGS): Define.\n\t(COMPILER_FOR_BUILD, BUILD_COMPILERFLAGS): Define.\n\t(ALL_COMPILERFLAGS): Define.\n\t(.c.o, xgcc$(exeext), cpp$(exeext)): Use $(COMPILER).\n\t(cc1-dummy$(exeext), cc1$(exeext)): Likewise.\n\t(collect2$(exeext), collect2.o): Likewise.\n\t(c-opts.o, c-cppbuiltin.o, c-pch.o, gcc.o, gccspec.o): Likewise.\n\t(gcc-options.o, version.o, prefix.o, toplev.o): Likewise.\n\t($(out_object_file), mips-tfile, mips-tdump): Likewise.\n\t(libbackend.o, intl.o, cppdefault.o): Likewise.\n\t(gcov$(exeext), gcov-dump$(exeext)): Likewise.\n\t(build/%.o): Use $(COMPILER_FOR_BUILD).\n\t(build/gen%$(build_exeext)): Likewise.\n\t(build/gcov-iov$(build_exeext)): LIkewise.\n\t* config/t-darwin (darwin.o): Use $(COMPILER).\n\t(darwin-c.o, darwin-f.o, darwin-driver.o): Likewise.\n\t* config/t-sol2 (sol2-c.o): Likewise.\n\t(sol2.o): Likewise.\n\t* config/t-vxworks (vxworks.o): Likewise.\n\t* config/x-darwin (host-darwin.o): Likewise.\n\t* config/x-hpux (host-hpux.o): Likewise.\n\t* config/x-linux (host-linux.o): Likewise.\n\t* config/x-solaris (host-solaris.o): Likewise.\n\t* config/alpha/x-alpha (driver-alpha.o): Likewise.\n\t* config/arm/t-arm (arm-c.o): Likewise.\n\t* config/arm/t-pe (pe.o): Likewise.\n\t* config/arm/t-wince-pe (pe.o): Likewise.\n\t* config/i386/t-cygming (winnt.o): Likewise.\n\t(winnt-cxx.o, winnt-stubs.o, msformat-c.o): Likewise.\n\t* config/i386/t-cygwin (cygwin1.o): Likewise.\n\t(cygwin2.o): Likewise.\n\t* config/i386/t-i386 (i386-c.o): Likewise.\n\t* config/i386/t-interix (winnt.o): Likewise.\n\t* config/i386/t-netware (netware.o): Likewise.\n\t* config/i386/t-nwld (nwld.o): Likewise.\n\t* config/i386/x-darwin (host-i386-darwin.o): Likewise.\n\t* config/i386/x-i386 (driver-i386.o): Likewise.\n\t* config/i386/x-cygwin (host-cygwin.o): Likewise.\n\t* config/i386/x-mingw32 (host-mingw32.o): Likewise.\n\t* config/ia64/t-ia64 (ia64-c.o): Likewise.\n\t* config/m32c/t-m32c (m32c-pragma.o): Likewise.\n\t* config/mips/x-native (driver-native.o): Likewise.\n\t* config/rs6000/t-rs6000 (rs6000-c.o): Likewise.\n\t* config/rs6000/x-darwin (host-ppc-darwin.o): Likewise.\n\t* config/rs6000/x-darwin64 (host-ppc64-darwin.o): Likewise.\n\t* config/rs6000/x-rs6000 (driver-rs6000.o): Likewise.\n\t* config/score/t-score-elf (score7.o): Likewise.\n\t(score3.o): Likewise.\n\t* config/sh/t-sh (sh-c.o): Likewise.\n\t* config/sh/t-symbian (sh-c.o): Likewise.\n\t(symbian.o): Likewise.\n\t* config/spu/t-spu-elf (spu-c.o): Likewise.\n\t* config/v850/t-v850 (v850-c.o): Likewise.\n\t* config/v850/t-v850e (v850-c.o): Likewise.\nada/:\n\t* gcc-interface/Makefile.in (COMPILER): Define.\n\t(COMPILER_FLAGS, ALL_COMPILERFLAGS): Define.\n\t(.c.o, cio.o, init.o, initialize.o, targext.o): Use $(COMPILER).\n\t(seh_init.o, tracebak.o): Likewise.\n\t* gcc-interface/Make-lang.in (ada/targext.o): Likewise.\n\t(ada/cio.o, ada/init.o, ada/initialize.o, ada/raise.o): Likewise.\n\t(ada/tracebak.o, ada/cuintp.o, ada/decl.o, ada/misc.o): Likewise.\n\t(ada/targtyps.o, ada/trans.o, ada/utils.o): Likewise.\n\t(ada/utils2.o): Likewise.\ncp/:\n\t* Make-lang.in (g++spec.o): Use $(COMPILER).\n\t(g++$(exeext), cc1plus-dummy$(exeext)): Likewise.\n\t(cc1plus$(exeext)): Likewise.\nfortran/:\n\t* Make-lang.in (gfortranspec.o): Use $(COMPILER).\n\t(gfortran$(exeext), f951$(exeext), fortran/cpp.o): Likewise.\njava/:\n\t* Make-lang.in (jvspec.o): Use $(COMPILER).\n\t($(XGCJ)$(exeext), jc1$(exeext), jcf-dump$(exeext)): Likewise.\n\t(jvgenmain$(exeext), java/jcf-io.o, java/jcf-path.o): Likewise.\nobjc/:\n\t* Make-lang.in (cc1obj-dummy$(exeext)): Use $(COMPILER).\n\t(cc1obj$(exeext)): Likewise.\nobjcp/:\n\t* Make-lang.in (cc1objplus-dummy$(exeext)): Use $(COMPILER).\n\t(cc1objplus$(exeext), objcp/objcp-act.o): Likwise.\n\nFrom-SVN: r147873", "tree": {"sha": "caa607db7a47c53b789d90a228f412cd03044b1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caa607db7a47c53b789d90a228f412cd03044b1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7980bfb8293cd3de3c157c144730ad2282316b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7980bfb8293cd3de3c157c144730ad2282316b18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7980bfb8293cd3de3c157c144730ad2282316b18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7980bfb8293cd3de3c157c144730ad2282316b18/comments", "author": null, "committer": null, "parents": [{"sha": "d0cb643b07281f99893d1ecd3162dc520deede5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0cb643b07281f99893d1ecd3162dc520deede5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0cb643b07281f99893d1ecd3162dc520deede5b"}], "stats": {"total": 444, "additions": 292, "deletions": 152}, "files": [{"sha": "0c0647a621d2dab23dbf48efc46a2b5702af2f13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,60 @@\n+2009-05-26  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Makefile.in (COMPILER, COMPILER_FLAGS): Define.\n+\t(COMPILER_FOR_BUILD, BUILD_COMPILERFLAGS): Define.\n+\t(ALL_COMPILERFLAGS): Define.\n+\t(.c.o, xgcc$(exeext), cpp$(exeext)): Use $(COMPILER).\n+\t(cc1-dummy$(exeext), cc1$(exeext)): Likewise.\n+\t(collect2$(exeext), collect2.o): Likewise.\n+\t(c-opts.o, c-cppbuiltin.o, c-pch.o, gcc.o, gccspec.o): Likewise.\n+\t(gcc-options.o, version.o, prefix.o, toplev.o): Likewise.\n+\t($(out_object_file), mips-tfile, mips-tdump): Likewise.\n+\t(libbackend.o, intl.o, cppdefault.o): Likewise.\n+\t(gcov$(exeext), gcov-dump$(exeext)): Likewise.\n+\t(build/%.o): Use $(COMPILER_FOR_BUILD).\n+\t(build/gen%$(build_exeext)): Likewise.\n+\t(build/gcov-iov$(build_exeext)): LIkewise.\n+\t* config/t-darwin (darwin.o): Use $(COMPILER).\n+\t(darwin-c.o, darwin-f.o, darwin-driver.o): Likewise.\n+\t* config/t-sol2 (sol2-c.o): Likewise.\n+\t(sol2.o): Likewise.\n+\t* config/t-vxworks (vxworks.o): Likewise.\n+\t* config/x-darwin (host-darwin.o): Likewise.\n+\t* config/x-hpux (host-hpux.o): Likewise.\n+\t* config/x-linux (host-linux.o): Likewise.\n+\t* config/x-solaris (host-solaris.o): Likewise.\n+\t* config/alpha/x-alpha (driver-alpha.o): Likewise.\n+\t* config/arm/t-arm (arm-c.o): Likewise.\n+\t* config/arm/t-pe (pe.o): Likewise.\n+\t* config/arm/t-wince-pe (pe.o): Likewise.\n+\t* config/i386/t-cygming (winnt.o): Likewise.\n+\t(winnt-cxx.o, winnt-stubs.o, msformat-c.o): Likewise.\n+\t* config/i386/t-cygwin (cygwin1.o): Likewise.\n+\t(cygwin2.o): Likewise.\n+\t* config/i386/t-i386 (i386-c.o): Likewise.\n+\t* config/i386/t-interix (winnt.o): Likewise.\n+\t* config/i386/t-netware (netware.o): Likewise.\n+\t* config/i386/t-nwld (nwld.o): Likewise.\n+\t* config/i386/x-darwin (host-i386-darwin.o): Likewise.\n+\t* config/i386/x-i386 (driver-i386.o): Likewise.\n+\t* config/i386/x-cygwin (host-cygwin.o): Likewise.\n+\t* config/i386/x-mingw32 (host-mingw32.o): Likewise.\n+\t* config/ia64/t-ia64 (ia64-c.o): Likewise.\n+\t* config/m32c/t-m32c (m32c-pragma.o): Likewise.\n+\t* config/mips/x-native (driver-native.o): Likewise.\n+\t* config/rs6000/t-rs6000 (rs6000-c.o): Likewise.\n+\t* config/rs6000/x-darwin (host-ppc-darwin.o): Likewise.\n+\t* config/rs6000/x-darwin64 (host-ppc64-darwin.o): Likewise.\n+\t* config/rs6000/x-rs6000 (driver-rs6000.o): Likewise.\n+\t* config/score/t-score-elf (score7.o): Likewise.\n+\t(score3.o): Likewise.\n+\t* config/sh/t-sh (sh-c.o): Likewise.\n+\t* config/sh/t-symbian (sh-c.o): Likewise.\n+\t(symbian.o): Likewise.\n+\t* config/spu/t-spu-elf (spu-c.o): Likewise.\n+\t* config/v850/t-v850 (v850-c.o): Likewise.\n+\t* config/v850/t-v850e (v850-c.o): Likewise.\n+\n 2009-05-26  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/arm/neon-gen.ml: Include vxWorks.h rather than stdint.h"}, {"sha": "dad6fba41ffde76b02f2f41ebfedea087b6d2ef6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 51, "deletions": 33, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -197,6 +197,11 @@ NM = @NM@\n RANLIB = @RANLIB@\n RANLIB_FLAGS = @ranlib_flags@\n \n+# The name of the compiler to use.  Currently always $(CC).  In the\n+# future this may change to $(CXX).\n+COMPILER = $(CC)\n+COMPILER_FLAGS = $(CFLAGS)\n+\n # -------------------------------------------\n # Programs which operate on the build machine\n # -------------------------------------------\n@@ -698,6 +703,10 @@ DIR = ../gcc\n CC_FOR_BUILD = @CC_FOR_BUILD@\n BUILD_CFLAGS= @BUILD_CFLAGS@ -DGENERATOR_FILE\n \n+# Native compiler that we use.  This may be C++ some day.\n+COMPILER_FOR_BUILD = $(CC_FOR_BUILD)\n+BUILD_COMPILERFLAGS = $(BUILD_CFLAGS)\n+\n # Native linker and preprocessor flags.  For x-fragment overrides.\n BUILD_LDFLAGS=@BUILD_LDFLAGS@\n BUILD_CPPFLAGS=$(ALL_CPPFLAGS)\n@@ -906,6 +915,9 @@ ALL_CFLAGS = $(T_CFLAGS) \\\n # win against random include files in /usr/include.\n ALL_CPPFLAGS = $(INCLUDES) $(CPPFLAGS)\n \n+# This is the variable to use when using $(COMPILER).\n+ALL_COMPILERFLAGS = $(ALL_CFLAGS)\n+\n # Build and host support libraries.\n LIBIBERTY = ../libiberty/libiberty.a\n BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/libiberty.a\n@@ -952,7 +964,7 @@ INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n \t   $(PPLINC) $(CLOOGINC)\n \n .c.o:\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $< $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $< $(OUTPUT_OPTION)\n \n #\f\n # Support for additional languages (other than C).\n@@ -1627,16 +1639,16 @@ libbackend.a: $(OBJS@onestep@)\n # and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n xgcc$(exeext): $(GCC_OBJS) gccspec.o version.o intl.o prefix.o \\\n    version.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) gccspec.o \\\n-\t  intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n+\t  gccspec.o intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # cpp is to cpp0 as gcc is to cc1.\n # The only difference from xgcc is that it's linked with cppspec.o\n # instead of gccspec.o.\n cpp$(exeext): $(GCC_OBJS) cppspec.o version.o intl.o prefix.o \\\n    version.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) cppspec.o \\\n-\t  intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n+\t  cppspec.o intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Dump a specs file to make -B./ read these specs over installed ones.\n $(SPECS): xgcc$(exeext)\n@@ -1652,17 +1664,17 @@ gcc-cross$(exeext): xgcc$(exeext)\n dummy-checksum.o : dummy-checksum.c\n \n cc1-dummy$(exeext): $(C_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) dummy-checksum.o \\\n-\t  $(BACKEND) $(LIBS) $(BACKENDLIBS)\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n+\t  dummy-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n cc1-checksum.c : cc1-dummy$(exeext) build/genchecksum$(build_exeext)\n \tbuild/genchecksum$(build_exeext) cc1-dummy$(exeext) > $@\n \n cc1-checksum.o : cc1-checksum.c\n \n cc1$(exeext): $(C_OBJS) cc1-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) cc1-checksum.o \\\n-\t  $(BACKEND) $(LIBS) $(BACKENDLIBS)\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n+\t  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n #\f\n # Build libgcc.a.\n@@ -1878,13 +1890,13 @@ COLLECT2_OBJS = collect2.o tlink.o intl.o version.o\n COLLECT2_LIBS = @COLLECT2_LIBS@\n collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n # Don't try modifying collect2 (aka ld) in place--it might be linking this.\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o T$@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o T$@ \\\n \t\t$(COLLECT2_OBJS) $(LIBS) $(COLLECT2_LIBS)\n \tmv -f T$@ $@\n \n collect2.o : collect2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h \\\n \t$(OBSTACK_H) $(DEMANGLE_H) collect2.h version.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS)  \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS)  \\\n \t-DTARGET_MACHINE=\\\"$(target_noncanonical)\\\" \\\n \t-c $(srcdir)/collect2.c $(OUTPUT_OPTION)\n \n@@ -1911,15 +1923,15 @@ c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\t\\\n         $(TREE_INLINE_H) $(DIAGNOSTIC_H) intl.h debug.h $(C_COMMON_H)\t\\\n         opts.h options.h $(MKDEPS_H) incpath.h cppdefault.h $(TARGET_H) \\\n \t$(TM_P_H) $(VARRAY_H) $(C_TREE_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n \n c-cppbuiltin.o : c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) version.h $(C_COMMON_H) $(C_PRAGMA_H) $(FLAGS_H) \\\n \t$(TOPLEV_H) output.h $(EXCEPT_H) $(REAL_H) $(TARGET_H) $(TM_P_H) \\\n \t$(BASEVER) debug.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) -DBASEVER=$(BASEVER_s) \\\n-\t\t$< $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n+\t\t-DBASEVER=$(BASEVER_s) $< $(OUTPUT_OPTION)\n \n # A file used by all variants of C and some other languages.\n \n@@ -1943,7 +1955,7 @@ c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n c-pch.o : c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(CPPLIB_H) $(TREE_H) \\\n \t$(C_COMMON_H) output.h $(TOPLEV_H) $(C_PRAGMA_H) $(GGC_H) debug.h \\\n \tlanghooks.h $(FLAGS_H) hosthooks.h version.h $(TARGET_H) opts.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DHOST_MACHINE=\\\"$(host)\\\" -DTARGET_MACHINE=\\\"$(target)\\\" \\\n \t  $< $(OUTPUT_OPTION)\n \n@@ -1969,13 +1981,13 @@ gcc.o: gcc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h multilib.h \\\n     Makefile $(lang_specs_files) specs.h prefix.h $(GCC_H) $(FLAGS_H) \\\n     configargs.h $(OBSTACK_H) opts.h\n \t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gcc.c $(OUTPUT_OPTION))\n \n gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n \t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gccspec.c $(OUTPUT_OPTION))\n \n@@ -2010,7 +2022,8 @@ options.o: options.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TARGET_H) $(FLAGS_H)\n \t$(TM_H) opts.h intl.h\n \n gcc-options.o: options.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) opts.h intl.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(OUTPUT_OPTION) -DGCC_DRIVER options.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(OUTPUT_OPTION) \\\n+\t\t-DGCC_DRIVER options.c\n \n dumpvers: dumpvers.c\n \n@@ -2019,7 +2032,7 @@ version.o: version.c version.h $(REVISION) $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n else\n version.o: version.c version.h $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n endif\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t-DBASEVER=$(BASEVER_s) -DDATESTAMP=$(DATESTAMP_s) \\\n \t-DREVISION=$(REVISION_s) \\\n \t-DDEVPHASE=$(DEVPHASE_s) -DPKGVERSION=$(PKGVERSION_s) \\\n@@ -2051,7 +2064,7 @@ stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \n prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) prefix.h \\\n \tMakefile $(BASEVER)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t-DPREFIX=\\\"$(prefix)\\\" -DBASEVER=$(BASEVER_s) \\\n \t  -c $(srcdir)/prefix.c $(OUTPUT_OPTION)\n \n@@ -2473,7 +2486,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(CGRAPH_H) $(COVERAGE_H) alloc-pool.h $(GGC_H) $(INTEGRATE_H) \\\n    opts.h params.def tree-mudflap.h $(REAL_H) $(TREE_PASS_H) $(GIMPLE_H) \\\n    tree-ssa-alias.h $(PLUGIN_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n \t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)\n \n@@ -3099,18 +3112,20 @@ $(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) \\\n    output.h $(INSN_ATTR_H) $(SYSTEM_H) $(TOPLEV_H) $(TARGET_H) libfuncs.h \\\n    $(TARGET_DEF_H) $(FUNCTION_H) $(SCHED_INT_H) $(TM_P_H) $(EXPR_H) \\\n    langhooks.h $(GGC_H) $(OPTABS_H) $(REAL_H) tm-constrs.h $(GIMPLE_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$(out_file) $(OUTPUT_OPTION)\n \n # Build auxiliary files that support ecoff format.\n mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n-\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tfile.o version.o $(LIBS)\n+\t$(COMPILER) $(COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n+\t\tmips-tfile.o version.o $(LIBS)\n \n mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) version.h $(srcdir)/../include/getopt.h $(GSTAB_H) intl.h\n \n mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n-\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tdump.o version.o $(LIBS)\n+\t$(COMPILER) $(COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n+\t\tmips-tdump.o version.o $(LIBS)\n \n mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) version.h $(srcdir)/../include/getopt.h stab.def\n@@ -3119,7 +3134,7 @@ mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n libbackend.o : $(OBJS-common:.o=.c) $(out_file) \\\n   insn-config.h insn-flags.h insn-codes.h insn-constants.h \\\n   insn-attr.h  $(DATESTAMP) $(BASEVER) $(DEVPHASE) gcov-iov.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n \t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n \t  -c $(filter %.c,$^) -o $@  \\\n@@ -3390,7 +3405,8 @@ s-gtype: build/gengtype$(build_exeext) $(filter-out [%], $(GTFILES)) \\\n # How to compile object files to run on the build machine.\n \n build/%.o :  # dependencies provided by explicit rule later\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) -o $@ $<\n+\t$(COMPILER_FOR_BUILD) -c $(BUILD_COMPILERFLAGS) $(BUILD_CPPFLAGS) \\\n+\t\t-o $@ $<\n \n # Header dependencies for the programs that generate source code.\n # These are library modules...\n@@ -3468,13 +3484,13 @@ build/genrecog.o : genrecog.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n   coretypes.h $(GTM_H) errors.h gensupport.h\n \n # Compile the programs that generate insn-* from the machine description.\n-# They are compiled with $(CC_FOR_BUILD), and associated libraries,\n+# They are compiled with $(COMPILER_FOR_BUILD), and associated libraries,\n # since they need to run on this machine\n # even if GCC is being compiled to run on some other machine.\n \n # As a general rule...\n build/gen%$(build_exeext): build/gen%.o $(BUILD_LIBDEPS)\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t$(COMPILER_FOR_BUILD) $(BUILD_COMPILERFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t    $(filter-out $(BUILD_LIBDEPS), $^) $(BUILD_LIBS)\n \n # All these programs use the MD reader ($(BUILD_RTL)).\n@@ -3498,7 +3514,7 @@ gengtype-lex.c : gengtype-lex.l\n #\f\n # Remake internationalization support.\n intl.o: intl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h Makefile\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n \t  -c $(srcdir)/intl.c $(OUTPUT_OPTION)\n \n@@ -3520,7 +3536,7 @@ PREPROCESSOR_DEFINES = \\\n \n cppdefault.o: cppdefault.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \tcppdefault.h Makefile\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  $(PREPROCESSOR_DEFINES) \\\n \t  -c $(srcdir)/cppdefault.c $(OUTPUT_OPTION)\n \n@@ -3532,7 +3548,8 @@ build/gcov-iov.o: gcov-iov.c $(BCONFIG_H) coretypes.h $(GTM_H) \\\n   $(SYSTEM_H) coretypes.h $(TM_H)\n \n build/gcov-iov$(build_exeext): build/gcov-iov.o\n-\t$(CC_FOR_BUILD) $(BUILD_CFLAGS) $(BUILD_LDFLAGS) build/gcov-iov.o -o $@\n+\t$(COMPILER_FOR_BUILD) $(BUILD_COMPILERFLAGS) $(BUILD_LDFLAGS) \\\n+\t\tbuild/gcov-iov.o -o $@\n \n gcov-iov.h: s-iov\n s-iov: build/gcov-iov$(build_exeext) $(BASEVER) $(DEVPHASE)\n@@ -3548,10 +3565,11 @@ gcov-dump.o: gcov-dump.c gcov-io.c $(GCOV_IO_H) $(SYSTEM_H) coretypes.h \\\n \n GCOV_OBJS = gcov.o intl.o version.o errors.o\n gcov$(exeext): $(GCOV_OBJS) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) $(GCOV_OBJS) $(LIBS) -o $@\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) $(GCOV_OBJS) $(LIBS) -o $@\n GCOV_DUMP_OBJS = gcov-dump.o version.o errors.o\n gcov-dump$(exeext): $(GCOV_DUMP_OBJS) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) $(LIBS) -o $@\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) \\\n+\t\t$(LIBS) -o $@\n #\f\n # Build the include directories.  The stamp files are stmp-* rather than\n # s-* so that mostlyclean does not force the include directory to"}, {"sha": "69aa6229e256967c8f24573d0917342852d4f16a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,15 @@\n+2009-05-26  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gcc-interface/Makefile.in (COMPILER): Define.\n+\t(COMPILER_FLAGS, ALL_COMPILERFLAGS): Define.\n+\t(.c.o, cio.o, init.o, initialize.o, targext.o): Use $(COMPILER).\n+\t(seh_init.o, tracebak.o): Likewise.\n+\t* gcc-interface/Make-lang.in (ada/targext.o): Likewise.\n+\t(ada/cio.o, ada/init.o, ada/initialize.o, ada/raise.o): Likewise.\n+\t(ada/tracebak.o, ada/cuintp.o, ada/decl.o, ada/misc.o): Likewise.\n+\t(ada/targtyps.o, ada/trans.o, ada/utils.o): Likewise.\n+\t(ada/utils2.o): Likewise.\n+\n 2009-05-24  Olivier Hainque  <hainque@adacore.com>\n \n \t* switch.adb (Is_Internal_GCC_Switch, Switch_Last): Bodies of ..."}, {"sha": "1f231aeadc3d96634b0133d8d72b5d721202a086", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1124,43 +1124,43 @@ ada/link.o     : ada/link.c\n \n \n ada/targext.o : ada/targext.c $(SYSTEM_H) coretypes.h $(TM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$< $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t\t$(INCLUDES) $< $(OUTPUT_OPTION)\n \n ada/cio.o     : ada/cio.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n ada/init.o    : ada/init.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h ada/raise.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n ada/initialize.o : ada/initialize.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n ada/raise.o   : ada/raise.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h ada/raise.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n # Need to keep the frame pointer to unwind the stack properly for some targets.\n ada/tracebak.o : ada/tracebak.c $(CONFIG_H) $(SYSTEM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t      -fno-omit-frame-pointer $< $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t      $(INCLUDES) -fno-omit-frame-pointer $< $(OUTPUT_OPTION)\n \n ada/cuintp.o : ada/gcc-interface/cuintp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) ada/gcc-interface/ada.h ada/types.h ada/uintp.h \\\n    ada/atree.h ada/elists.h ada/nlists.h ada/stringt.h ada/fe.h $(ADA_TREE_H) \\\n    ada/gcc-interface/gigi.h\n-\t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/decl.o : ada/gcc-interface/decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(TARGET_H) $(EXPR_H) \\\n    $(TREE_INLINE_H) ada/gcc-interface/ada.h ada/types.h ada/atree.h \\\n    ada/elists.h ada/namet.h ada/nlists.h ada/repinfo.h ada/snames.h \\\n    ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h ada/einfo.h $(ADA_TREE_H) \\\n    ada/gcc-interface/gigi.h gt-ada-decl.h\n-\t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/misc.o : ada/gcc-interface/misc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TARGET_H) $(EXPR_H) libfuncs.h \\\n@@ -1169,22 +1169,22 @@ ada/misc.o : ada/gcc-interface/misc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    ada/gcc-interface/ada.h ada/adadecode.h ada/types.h ada/atree.h \\\n    ada/elists.h ada/namet.h ada/nlists.h ada/stringt.h ada/uintp.h ada/fe.h \\\n    ada/sinfo.h ada/einfo.h $(ADA_TREE_H) ada/gcc-interface/gigi.h\n-\t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/targtyps.o : ada/gcc-interface/targtyps.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) ada/gcc-interface/ada.h ada/types.h \\\n    ada/atree.h ada/elists.h ada/namet.h ada/nlists.h ada/snames.h \\\n    ada/stringt.h ada/uintp.h ada/urealp.h ada/fe.h ada/sinfo.h ada/einfo.h \\\n    $(ADA_TREE_H) ada/gcc-interface/gigi.h\n-\t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/trans.o : ada/gcc-interface/trans.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FLAGS_H) $(EXPR_H) output.h tree-iterator.h \\\n    $(GIMPLE_H) ada/gcc-interface/ada.h ada/adadecode.h ada/types.h \\\n    ada/atree.h ada/elists.h ada/namet.h ada/nlists.h ada/snames.h \\\n    ada/stringt.h ada/uintp.h ada/urealp.h ada/fe.h ada/sinfo.h ada/einfo.h \\\n    $(ADA_TREE_H) ada/gcc-interface/gigi.h gt-ada-trans.h\n-\t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/utils.o : ada/gcc-interface/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(RTL_H) output.h debug.h convert.h \\\n@@ -1193,14 +1193,14 @@ ada/utils.o : ada/gcc-interface/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/elists.h ada/namet.h \\\n    ada/nlists.h ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h ada/einfo.h \\\n    $(ADA_TREE_H) ada/gcc-interface/gigi.h gt-ada-utils.h gtype-ada.h\n-\t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n ada/utils2.o : ada/gcc-interface/utils2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FLAGS_H) output.h $(TREE_INLINE_H) \\\n    ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/elists.h ada/namet.h \\\n    ada/nlists.h ada/snames.h ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h \\\n    ada/einfo.h $(ADA_TREE_H) ada/gcc-interface/gigi.h\n-\t$(CC) -c $(ALL_CFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) -I.. $(ALL_CPPFLAGS) $< -o $@\n \n #\n # DO NOT PUT SPECIAL RULES BELOW, THIS SECTION IS UPDATED AUTOMATICALLY"}, {"sha": "ef42fa3bea98dd255f80f200fde7470b40496793", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -92,6 +92,9 @@ RANLIB = @RANLIB@\n RANLIB_FLAGS = @ranlib_flags@\n AWK = @AWK@\n \n+COMPILER = $(CC)\n+COMPILER_FLAGS = $(CFLAGS)\n+\n SHELL = @SHELL@\n PWD_COMMAND = $${PWDCMD-pwd}\n # How to copy preserving the date\n@@ -218,6 +221,9 @@ ALL_CFLAGS = $(INTERNAL_CFLAGS) $(T_CFLAGS) $(LOOSE_CFLAGS)\n # Likewise.\n ALL_CPPFLAGS = $(CPPFLAGS)\n \n+# Used with $(COMPILER).\n+ALL_COMPILERFLAGS = $(ALL_CFLAGS)\n+\n # This is where we get libiberty.a from.\n LIBIBERTY = ../../libiberty/libiberty.a\n \n@@ -253,8 +259,8 @@ ADA_INCLUDES_FOR_SUBDIR = -I. -I$(fsrcdir)/ada\n \t$(CC) -c -x assembler $< $(OUTPUT_OPTION)\n \n .c.o:\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< \\\n-\t  $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t  $(INCLUDES) $< $(OUTPUT_OPTION)\n \n .adb.o:\n \t$(CC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $< $(OUTPUT_OPTION)\n@@ -2529,33 +2535,33 @@ raise.o   : raise.c raise.h\n vx_stack_info.o : vx_stack_info.c\n \n cio.o     : cio.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n init.o    : init.c adaint.h raise.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n initialize.o : initialize.c raise.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n targext.o : targext.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t\t$(ALL_CPPFLAGS) $(INCLUDES_FOR_SUBDIR) \\\n \t\t$< $(OUTPUT_OPTION)\n \n # No optimization to compile this file as optimizations (-O1 or above) breaks\n # the SEH handling on Windows. The reasons are not clear.\n seh_init.o : seh_init.c raise.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) -O0 \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) -O0 \\\n \t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n # Need to keep the frame pointer in this file to pop the stack properly on\n # some targets.\n tracebak.o  : tracebak.c tb-alvms.c tb-alvxw.c tb-gcc.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t      -fno-omit-frame-pointer $< $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t      $(INCLUDES) -fno-omit-frame-pointer $< $(OUTPUT_OPTION)\n \n # In GNU Make, ignore whether `stage*' exists.\n .PHONY: stage1 stage2 stage3 stage4 clean realclean TAGS bootstrap"}, {"sha": "ecca70424af17b566667253e423dde68668a2cab", "filename": "gcc/config/alpha/x-alpha", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Falpha%2Fx-alpha", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Falpha%2Fx-alpha", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fx-alpha?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,3 @@\n driver-alpha.o: $(srcdir)/config/alpha/driver-alpha.c \\\n   $(CONFIG_H) $(SYSTEM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "c47297f828beed2a4a9448d9430aac7e75133e75", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,6 +1,6 @@\n # Rules common to all arm targets\n #\n-# Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -44,5 +44,5 @@ $(srcdir)/config/arm/arm-tune.md: $(srcdir)/config/arm/gentune.sh \\\n \n arm-c.o: $(srcdir)/config/arm/arm-c.c $(CONFIG_H) $(SYSTEM_H) \\\n     coretypes.h $(TM_H) $(TREE_H) output.h $(C_COMMON_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/arm-c.c\n-\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/arm/arm-c.c"}, {"sha": "e965a1c61c23a2d64b9dbc95470063e64bd7dd81", "filename": "gcc/config/arm/t-pe", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Farm%2Ft-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Farm%2Ft-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-pe?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,5 +1,5 @@\n-# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006,\n-# 2008 Free Software Foundation, Inc.\n+# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2008, 2009\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -41,7 +41,8 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \n pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/pe.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/arm/pe.c\n \n MULTILIB_OPTIONS = mhard-float mthumb\n MULTILIB_DIRNAMES = fpu thumb"}, {"sha": "4fcb48376bd22e58417bb4a132ca0e1a3189977a", "filename": "gcc/config/arm/t-wince-pe", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Farm%2Ft-wince-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Farm%2Ft-wince-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-wince-pe?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2003, 2004, 2006, 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2003, 2004, 2006, 2008, 2009 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -40,7 +40,8 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \n pe.o: $(srcdir)/config/arm/pe.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/arm/pe.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/arm/pe.c\n \n MULTILIB_OPTIONS = mhard-float\n MULTILIB_DIRNAMES = fpu"}, {"sha": "4268633b7c86e2f3cf5845a3bb212781f31b5167", "filename": "gcc/config/i386/t-cygming", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygming?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -31,26 +31,26 @@ LIBGCC2_INCLUDES = -I$(srcdir)/../winsup/w32api/include\n winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n   $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/winnt.c\n \n winnt-cxx.o: $(srcdir)/config/i386/winnt-cxx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n   $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/winnt-cxx.c\n \n \n winnt-stubs.o: $(srcdir)/config/i386/winnt-stubs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n   $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/winnt-stubs.c\n \n msformat-c.o: $(srcdir)/config/i386/msformat-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n   $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/msformat-c.c\n \n STMP_FIXINC=stmp-fixinc"}, {"sha": "8fec6f761d787eb5a22282def4e38d0a41d6617a", "filename": "gcc/config/i386/t-cygwin", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-cygwin?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,5 +1,5 @@\n-# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2008,\n-# 2009 Free Software Foundation, Inc.\n+# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2008, 2009\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -25,12 +25,12 @@ LIBGCC2_INCLUDES += -I$(srcdir)/../winsup/include \\\n \n cygwin1.o: $(srcdir)/config/i386/cygwin1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/cygwin1.c\n \n cygwin2.o: $(srcdir)/config/i386/cygwin2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/i386/cygwin2.c\n \n # Cygwin-specific parts of LIB_SPEC"}, {"sha": "01e5ce413e4f707247d3570bf088bdbf93655e5e", "filename": "gcc/config/i386/t-i386", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-i386?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -28,4 +28,5 @@ i386-c.o: $(srcdir)/config/i386/i386-c.c \\\n   $(srcdir)/config/i386/i386-protos.h $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(FLAGS_H) $(C_COMMON_H) $(GGC_H) \\\n   $(TARGET_H) $(TARGET_DEF_H) $(CPPLIB_H) $(C_PRAGMA_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/i386-c.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/i386/i386-c.c"}, {"sha": "9a25831f13575185b6d7061e8ff2a1b1c3fa4c2f", "filename": "gcc/config/i386/t-interix", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-interix?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -4,4 +4,5 @@ LIB1ASMFUNCS = _chkstk\n winnt.o: $(srcdir)/config/i386/winnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h output.h $(TREE_H) flags.h \\\n   $(TM_P_H) toplev.h $(HASHTAB_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/winnt.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/i386/winnt.c"}, {"sha": "405c98f6a8d25c75ae5d3714cdb678142ef83406", "filename": "gcc/config/i386/t-netware", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-netware", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-netware", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-netware?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,7 +1,8 @@\n TARGET_LIBGCC2_CFLAGS = -mpreferred-stack-boundary=2 -fomit-frame-pointer\n \n netware.o: $(srcdir)/config/i386/netware.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/netware.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/i386/netware.c\n \n # We don't need some of GCC's own include files.\n USER_H = $(srcdir)/ginclude/stdarg.h \\"}, {"sha": "e772791163617863c5cddaa13a3cbbef953710ed", "filename": "gcc/config/i386/t-nwld", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-nwld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Ft-nwld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-nwld?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,5 @@\n-# Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -39,7 +40,8 @@ $(T)posixpre.def: $(srcdir)/config/i386/t-nwld\n \techo \"check POSIX_CheckUnload\" >>$@\n \n nwld.o: $(srcdir)/config/i386/nwld.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/nwld.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/i386/nwld.c\n \n \n s-crt0: $(srcdir)/unwind-dw2-fde.h"}, {"sha": "752af76ef6adc1a3effbf11968024294d76823bf", "filename": "gcc/config/i386/x-cygwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Fx-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Fx-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-cygwin?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n host-cygwin.o : $(srcdir)/config/i386/host-cygwin.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) toplev.h diagnostic.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/i386/host-cygwin.c"}, {"sha": "f0196bac41da54354b2347c50d509f162dae2641", "filename": "gcc/config/i386/x-darwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-darwin?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n host-i386-darwin.o : $(srcdir)/config/i386/host-i386-darwin.c \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) \\\n   config/host-darwin.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "2bf8fed5db5b84a2a056b6dee887cb33815cf078", "filename": "gcc/config/i386/x-i386", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Fx-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Fx-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-i386?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n driver-i386.o : $(srcdir)/config/i386/driver-i386.c \\\n   $(srcdir)/config/i386/cpuid.h \\\n   $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "2a1ca47c7c4bee23e146bd0158c3abb985d8d3a5", "filename": "gcc/config/i386/x-mingw32", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Fx-mingw32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fi386%2Fx-mingw32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-mingw32?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -27,5 +27,5 @@ WERROR_FLAGS += -Wno-format\n \n host-mingw32.o : $(srcdir)/config/i386/host-mingw32.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h hosthooks.h hosthooks-def.h toplev.h $(DIAGNOSTIC_H) $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/i386/host-mingw32.c"}, {"sha": "db7a8298d1778e3abe34a90efbc1887ff4bb8087", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,5 +1,5 @@\n-# Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,\n-# 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -47,7 +47,8 @@ LIB2ADDEH = $(srcdir)/config/ia64/unwind-ia64.c $(srcdir)/unwind-sjlj.c \\\n \n ia64-c.o: $(srcdir)/config/ia64/ia64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n     coretypes.h $(TM_H) $(TREE_H) $(CPPLIB_H) $(C_COMMON_H) c-pragma.h toplev.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/ia64/ia64-c.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/ia64/ia64-c.c\n \n # genattrtab generates very long string literals.\n insn-attrtab.o-warn = -Wno-error"}, {"sha": "30b8f6f0b45ee787565716553cdba6591dbd2bee", "filename": "gcc/config/m32c/t-m32c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fm32c%2Ft-m32c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fm32c%2Ft-m32c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Ft-m32c?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,5 +1,5 @@\n # Target Makefile Fragment for R8C/M16C/M32C\n-# Copyright (C) 2005, 2007\n+# Copyright (C) 2005, 2006, 2007, 2008, 2009\n # Free Software Foundation, Inc.\n # Contributed by Red Hat.\n #\n@@ -57,7 +57,7 @@ md : $(MD_FILES:%=$(srcdir)/config/m32c/%.md) $(srcdir)/config/m32c/t-m32c\n \tdone > md\n \n m32c-pragma.o: $(srcdir)/config/m32c/m32c-pragma.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n # We support four CPU series, but R8C and M16C share one multilib, and\n # M32C and M32CM share another."}, {"sha": "5e31121ede101154dff69b8b8a1c47e58a17420d", "filename": "gcc/config/mips/x-native", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fmips%2Fx-native", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fmips%2Fx-native", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-native?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,3 @@\n driver-native.o : $(srcdir)/config/mips/driver-native.c \\\n   $(CONFIG_H) $(SYSTEM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "1a838c54bc35a4392467e0375d9ca427c12889f3", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,7 +1,7 @@\n # General rules that all rs6000/ targets must have.\n #\n-# Copyright (C) 1995, 1997, 1998, 1999, 2001, 2002, 2003, 2004,\n-# 2008 Free Software Foundation, Inc.\n+# Copyright (C) 1995, 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2008, 2009 \n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -31,7 +31,8 @@ rs6000-c.o: $(srcdir)/config/rs6000/rs6000-c.c \\\n     $(srcdir)/config/rs6000/rs6000-protos.h \\\n     $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPPLIB_H) \\\n     $(TM_P_H) c-pragma.h errors.h coretypes.h $(TM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/rs6000/rs6000-c.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/rs6000/rs6000-c.c\n \n # The rs6000 backend doesn't cause warnings in these files.\n insn-conditions.o-warn ="}, {"sha": "5672c698b1efe425e2634928fd3f3e0553771927", "filename": "gcc/config/rs6000/x-darwin", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Frs6000%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Frs6000%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-darwin?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,5 @@\n host-ppc-darwin.o : $(srcdir)/config/rs6000/host-darwin.c \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) toplev.h \\\n   config/host-darwin.h $(DIAGNOSTIC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n+\t\t$(INCLUDES) $< -o $@"}, {"sha": "921d555ba010dc78f24568235bbdcadea44f13af", "filename": "gcc/config/rs6000/x-darwin64", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Frs6000%2Fx-darwin64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Frs6000%2Fx-darwin64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-darwin64?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,5 @@\n host-ppc64-darwin.o : $(srcdir)/config/rs6000/host-ppc64-darwin.c \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) toplev.h \\\n   config/host-darwin.h $(DIAGNOSTIC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< -o $@\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n+\t\t$(INCLUDES) $< -o $@"}, {"sha": "9e31f24cd64d88c941f525f79816b51ff0f88cc7", "filename": "gcc/config/rs6000/x-rs6000", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Frs6000%2Fx-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Frs6000%2Fx-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-rs6000?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,3 @@\n driver-rs6000.o : $(srcdir)/config/rs6000/driver-rs6000.c \\\n   $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "e30a5a1000fef9534e051ba90d1f8be1c25413db", "filename": "gcc/config/score/t-score-elf", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fscore%2Ft-score-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fscore%2Ft-score-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Ft-score-elf?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -20,13 +20,13 @@\n score7.o: $(srcdir)/config/score/score7.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(RTL_H) output.h flags.h $(TREE_H) \\\n   expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/score/score7.c\n \n score3.o: $(srcdir)/config/score/score3.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(RTL_H) output.h flags.h $(TREE_H) \\\n   expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(srcdir)/config/score/score3.c\n \n "}, {"sha": "216a86b0090c4cd5cd03518d0e04c81a73474313", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -19,7 +19,8 @@\n \n sh-c.o: $(srcdir)/config/sh/sh-c.c \\\n   $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_H) $(TM_P_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/sh/sh-c.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/sh/sh-c.c\n \n LIB1ASMSRC = sh/lib1funcs.asm\n LIB1ASMFUNCS = _ashiftrt _ashiftrt_n _ashiftlt _lshiftrt _movmem \\"}, {"sha": "1698b722edc09f0956972072fe9c2f9f7697bdb9", "filename": "gcc/config/sh/t-symbian", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fsh%2Ft-symbian", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fsh%2Ft-symbian", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-symbian?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2004, 2006, 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2006, 2008, 2009 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -18,7 +18,8 @@\n \n sh-c.o: $(srcdir)/config/sh/sh-c.c \\\n   $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_H) $(TM_P_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/sh/sh-c.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/sh/sh-c.c\n \n LIB1ASMSRC = sh/lib1funcs.asm\n LIB1ASMFUNCS = _ashiftrt _ashiftrt_n _ashiftlt _lshiftrt _movstr \\\n@@ -49,7 +50,8 @@ gt-sh.h : s-gtype ; @true\n \n symbian.o: $(srcdir)/config/sh/symbian.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) output.h flags.h $(TREE_H) expr.h toplev.h $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/sh/symbian.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/sh/symbian.c\n \n \n # Local Variables:"}, {"sha": "0c9236fa89f6b6c7fb3e63a4ff91dd92f7d9a038", "filename": "gcc/config/spu/t-spu-elf", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Ft-spu-elf?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n-#  Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n+#  Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n #\n #  This file is free software; you can redistribute it and/or modify it under\n #  the terms of the GNU General Public License as published by the Free\n@@ -91,5 +91,5 @@ spu-c.o: $(srcdir)/config/spu/spu-c.c \\\n     $(srcdir)/config/spu/spu-protos.h \\\n     $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPPLIB_H) \\\n     $(TM_P_H) c-pragma.h coretypes.h $(TM_H) insn-codes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/spu/spu-c.c\n-\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/spu/spu-c.c"}, {"sha": "49dfa2ecce8c31b4a3f76db6e1d7576ffb5577b8", "filename": "gcc/config/t-darwin", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-darwin?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,5 +1,5 @@\n-# Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007,\n-# 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -22,22 +22,24 @@ darwin.o: $(srcdir)/config/darwin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h     \\\n   conditions.h insn-flags.h output.h insn-attr.h flags.h $(TREE_H) expr.h   \\\n   reload.h function.h $(GGC_H) langhooks.h $(TARGET_H) $(TM_P_H) gt-darwin.h \\\n   config/darwin-sections.def\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/darwin.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/darwin.c\n \n darwin-c.o: $(srcdir)/config/darwin-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h $(C_TREE_H) toplev.h $(TM_P_H) \\\n   incpath.h flags.h $(C_COMMON_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/darwin-c.c $(PREPROCESSOR_DEFINES)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/darwin-c.c $(PREPROCESSOR_DEFINES)\n \n darwin-f.o: $(srcdir)/config/darwin-f.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/darwin-f.c $(PREPROCESSOR_DEFINES)\n \n gt-darwin.h : s-gtype ; @true\n \n darwin-driver.o: $(srcdir)/config/darwin-driver.c \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/darwin-driver.c\n \n # How to build crt3.o"}, {"sha": "28aa8651f2578d86031203487c921e47f5a86505", "filename": "gcc/config/t-sol2", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-sol2?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2004, 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2008, 2009 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -20,11 +20,11 @@\n sol2-c.o: $(srcdir)/config/sol2-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   tree.h c-format.h intl.h $(CPPLIB_H) c-pragma.h $(TM_H) $(TM_P_H) \\\n   toplev.h $(C_COMMON_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/sol2-c.c\n \n # Solaris-specific attributes\n sol2.o: $(srcdir)/config/sol2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   tree.h $(TM_H) $(TM_P_H) toplev.h $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/sol2.c"}, {"sha": "42eab72771fef2af4c04318e5876563c72c8edcc", "filename": "gcc/config/t-vxworks", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-vxworks?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -50,4 +50,4 @@ EXTRA_MULTILIB_PARTS =\n \n vxworks.o: $(srcdir)/config/vxworks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TARGET_H) toplev.h output.h $(TM_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "5c893d802e3c157ba778b257e78260ed44b01e7a", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,5 +1,5 @@\n-# Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003,\n-# 2008 Free Software Foundation, Inc.\n+# Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2008, 2009\n+# Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -109,7 +109,8 @@ TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsign\n \n v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/v850/v850-c.c \n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/v850/v850-c.c \n \n # Local Variables:\n # mode: Makefile"}, {"sha": "9fcd897bb17b0a92185ebe93be8ae02397b9dade", "filename": "gcc/config/v850/t-v850e", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fv850%2Ft-v850e", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fv850%2Ft-v850e", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850e?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -107,7 +107,8 @@ TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsign\n \n v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/v850/v850-c.c \n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/v850/v850-c.c \n \n # Local Variables:\n # mode: Makefile"}, {"sha": "f671d911f0d986eb7cc21b579cad4b4b8ac5f5fd", "filename": "gcc/config/x-darwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-darwin?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,3 @@\n host-darwin.o : $(srcdir)/config/host-darwin.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h toplev.h config/host-darwin.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "e9f2f18f1b8c970356a0bf469642a38fa00ab127", "filename": "gcc/config/x-hpux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fx-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fx-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-hpux?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n host-hpux.o : $(srcdir)/config/host-hpux.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h hosthooks.h hosthooks-def.h $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/host-hpux.c"}, {"sha": "f87a45b24d936ad8d3f01718020294a3060d1e5d", "filename": "gcc/config/x-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fx-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fx-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-linux?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n host-linux.o : $(srcdir)/config/host-linux.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h hosthooks.h hosthooks-def.h $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/host-linux.c"}, {"sha": "3e99df65748b03ea549924b28ccc3750e344170a", "filename": "gcc/config/x-solaris", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fx-solaris", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fconfig%2Fx-solaris", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-solaris?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,4 +1,4 @@\n host-solaris.o : $(srcdir)/config/host-solaris.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h hosthooks.h hosthooks-def.h $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/host-solaris.c"}, {"sha": "cae4c47e162fbeb865ed31db9bf0fface2191163", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,9 @@\n+2009-05-26  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (g++spec.o): Use $(COMPILER).\n+\t(g++$(exeext), cc1plus-dummy$(exeext)): Likewise.\n+\t(cc1plus$(exeext)): Likewise.\n+\n 2009-05-26  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/40007"}, {"sha": "35843db6afc1367aec430d9aaeb2d128bac47ae7", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,6 +1,6 @@\n # Top level -*- makefile -*- fragment for GNU C++.\n #   Copyright (C) 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-#   2005, 2007, 2008\n+#   2005, 2007, 2008, 2009\n #   Free Software Foundation, Inc.\n \n #This file is part of GCC.\n@@ -54,13 +54,13 @@ c++: cc1plus$(exeext)\n \n g++spec.o: $(srcdir)/cp/g++spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) $(CONFIG_H)\n \t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/cp/g++spec.c)\n \n # Create the compiler driver for g++.\n GXX_OBJS = $(GCC_OBJS) g++spec.o intl.o prefix.o version.o\n g++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the g++ driver which calls the cross-compiler.\n@@ -92,7 +92,7 @@ c++_OBJS = $(CXX_OBJS) dummy-checksum.o cc1plus-checksum.o cp/g++spec.o\n cp-warn = $(STRICT_WARN)\n \n cc1plus-dummy$(exeext): $(CXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(CXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n cc1plus-checksum.c : cc1plus-dummy$(exeext) build/genchecksum$(build_exeext)\n@@ -101,7 +101,7 @@ cc1plus-checksum.c : cc1plus-dummy$(exeext) build/genchecksum$(build_exeext)\n cc1plus-checksum.o : cc1plus-checksum.c\n \n cc1plus$(exeext): $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n # Special build rules."}, {"sha": "7695b79501d7f29f764ce662f66d5ba07fc20def", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,8 @@\n+2009-05-26  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (gfortranspec.o): Use $(COMPILER).\n+\t(gfortran$(exeext), f951$(exeext), fortran/cpp.o): Likewise.\n+\n 2009-05-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gfortran.h (GFC_MPC_RND_MODE): New."}, {"sha": "15a896949e617244f7b923882a97fdea81e8f71b", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,6 +1,6 @@\n # -*- makefile -*-\n # Top level makefile fragment for GNU gfortran, the GNU Fortran 95 compiler.\n-# Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008 Free Software\n+# Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software\n # Foundation, Inc.\n # Contributed by Paul Brook <paul@nowt.org\n # and Steven Bosscher <s.bosscher@student.tudelft.nl>\n@@ -80,13 +80,13 @@ fortran: f951$(exeext)\n gfortranspec.o: $(srcdir)/fortran/gfortranspec.c $(SYSTEM_H) $(TM_H) $(GCC_H) \\\n \t$(CONFIG_H) coretypes.h intl.h\n \t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/fortran/gfortranspec.c)\n \n # Create the compiler driver gfortran.\n GFORTRAN_D_OBJS = $(GCC_OBJS) gfortranspec.o version.o prefix.o intl.o\n gfortran$(exeext): $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the gfortran driver which calls the cross-compiler.\n@@ -97,7 +97,7 @@ gfortran-cross$(exeext): gfortran$(exeext)\n # The compiler itself is called f951.\n f951$(exeext): $(F95_OBJS) \\\n \t\t$(BACKEND) $(LIBDEPS) attribs.o\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(F95_OBJS) $(BACKEND) $(LIBS) attribs.o $(BACKENDLIBS)\n \n gt-fortran-trans.h    : s-gtype; @true\n@@ -338,5 +338,5 @@ fortran/resolve.o: fortran/dependency.h fortran/data.h fortran/target-memory.h\n fortran/data.o: fortran/data.h\n fortran/options.o: $(PARAMS_H) $(TARGET_H) fortran/cpp.h\n fortran/cpp.o: fortran/cpp.c $(BASEVER) incpath.h incpath.o\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) -DBASEVER=$(BASEVER_s) \\\n-\t\t$< $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n+\t\t-DBASEVER=$(BASEVER_s) $< $(OUTPUT_OPTION)"}, {"sha": "21f03a31cb781302c808086192ddc0795979b5cf", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,9 @@\n+2009-05-26  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (jvspec.o): Use $(COMPILER).\n+\t($(XGCJ)$(exeext), jc1$(exeext), jcf-dump$(exeext)): Likewise.\n+\t(jvgenmain$(exeext), java/jcf-io.o, java/jcf-path.o): Likewise.\n+\n 2009-05-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* Make-lang.in (GCJ): Renamed to..."}, {"sha": "159cd0682ae5c55ad71783b03e16f731a8619f1b", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,7 +1,7 @@\n # Top level -*- makefile -*- fragment for the GNU compiler for the Java(TM)\n # language.\n #   Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-#   2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+#   2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -59,14 +59,14 @@ JAVA_TARGET_INDEPENDENT_BIN_TOOLS = jcf-dump\n jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(GCC_H) $(CONFIG_H) java/jcf.h java/javaop.h\n \t(SHLIB_LINK='$(SHLIB_LINK)'; \\\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/java/jvspec.c $(OUTPUT_OPTION))\n \n # Create the compiler driver for $(XGCJ).\n $(XGCJ)$(exeext): $(GCC_OBJS) jvspec.o java/jcf-path.o version.o \\\n \t   prefix.o intl.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) jvspec.o \\\n-\t  java/jcf-path.o prefix.o intl.o \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n+\t  jvspec.o java/jcf-path.o prefix.o intl.o \\\n \t  version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the $(XGCJ) driver which calls the cross-compiler.\n@@ -100,17 +100,18 @@ jvspec.o-warn = -Wno-error\n \n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS) attribs.o\n \trm -f $@\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(JAVA_OBJS) $(BACKEND) $(ZLIB) $(LIBICONV) $(LIBS) attribs.o $(BACKENDLIBS)\n \n jcf-dump$(exeext): $(JCFDUMP_OBJS) $(LIBDEPS)\n \trm -f $@\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(JCFDUMP_OBJS) \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ $(JCFDUMP_OBJS) \\\n \t\t$(CPPLIBS) $(ZLIB) $(LDEXP_LIB) $(LIBS)\n \n jvgenmain$(exeext): $(JVGENMAIN_OBJS) $(LIBDEPS)\n \trm -f $@\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(JVGENMAIN_OBJS) $(LIBS)\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ $(JVGENMAIN_OBJS) \\\n+\t\t$(LIBS)\n \n #\f\n # Build hooks:\n@@ -305,13 +306,13 @@ java/java-gimplify.o: java/java-gimplify.c $(CONFIG_H) $(SYSTEM_H) \\\n # jcf-io.o needs $(ZLIBINC) added to cflags.\n java/jcf-io.o: java/jcf-io.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(JAVA_TREE_H) java/zipfile.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(ZLIBINC) \\\n-\t\t$(srcdir)/java/jcf-io.c $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(ZLIBINC) $(srcdir)/java/jcf-io.c $(OUTPUT_OPTION)\n \n # jcf-path.o needs a -D.\n java/jcf-path.o: java/jcf-path.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   java/jcf.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DLIBGCJ_ZIP_FILE='\"$(datadir)/java/libgcj-$(version).jar\"' \\\n \t  -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n \t  $(srcdir)/java/jcf-path.c $(OUTPUT_OPTION)"}, {"sha": "09f1c55587dcafda6b77808e09c9da69493d18bf", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,8 @@\n+2009-05-26  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (cc1obj-dummy$(exeext)): Use $(COMPILER).\n+\t(cc1obj$(exeext)): Likewise.\n+\n 2009-05-20  Ian Lance Taylor  <iant@google.com>\n \n \t* objc-act.c (objc_generate_cxx_ctor_or_dtor): Pass NULL rather"}, {"sha": "b687cfdff92eff8f801b5ed22cd963f2bd3f7f73", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,6 +1,6 @@\n # Top level -*- makefile -*- fragment for GNU Objective-C\n #   Copyright (C) 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2007,\n-#   2008 Free Software Foundation, Inc.\n+#   2008, 2009 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -52,7 +52,7 @@ OBJC_OBJS = objc/objc-lang.o objc/objc-act.o\n objc_OBJS = $(OBJC_OBJS) cc1obj-checksum.o\n \n cc1obj-dummy$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o \\\n \t      $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n@@ -62,7 +62,7 @@ cc1obj-checksum.c : cc1obj-dummy$(exeext) build/genchecksum$(build_exeext)\n cc1obj-checksum.o : cc1obj-checksum.c\n \n cc1obj$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o \\\n \t      $(BACKEND) $(LIBS) $(BACKENDLIBS)\n "}, {"sha": "502146d8c7c07ce2cdb1b44b9581a9baf77180cd", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,3 +1,8 @@\n+2009-05-26  Ian Lance Taylor  <iant@google.com>\n+\n+\t* Make-lang.in (cc1objplus-dummy$(exeext)): Use $(COMPILER).\n+\t(cc1objplus$(exeext), objcp/objcp-act.o): Likwise.\n+\n 2009-05-10  Ian Lance Taylor  <iant@google.com>\n \n \t* objcp-decl.h (start_struct): Add three new, ignored, macro"}, {"sha": "62b7e60cc3619ec1aa4d23ebf245ec1cf1d617ce", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7980bfb8293cd3de3c157c144730ad2282316b18/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=7980bfb8293cd3de3c157c144730ad2282316b18", "patch": "@@ -1,5 +1,5 @@\n # Top level -*- makefile -*- fragment for GNU Objective-C++\n-#   Copyright (C) 2005, 2007, 2008 Free Software Foundation, Inc.\n+#   Copyright (C) 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n #   Contributed by Ziemowit Laski  <zlaski@apple.com>\n \n #This file is part of GCC.\n@@ -55,7 +55,7 @@ obj-c++_OBJS = $(OBJCXX_OBJS) cc1objplus-checksum.o\n \n cc1objplus-dummy$(exeext): $(OBJCXX_OBJS) dummy-checksum.o $(BACKEND) \\\n \t\t$(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(OBJCXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n cc1objplus-checksum.c : cc1objplus-dummy$(exeext) build/genchecksum$(build_exeext)\n@@ -64,7 +64,7 @@ cc1objplus-checksum.c : cc1objplus-dummy$(exeext) build/genchecksum$(build_exeex\n cc1objplus-checksum.o : cc1objplus-checksum.c\n \n cc1objplus$(exeext): $(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n # Objective C++ language specific files.\n@@ -87,7 +87,8 @@ objcp/objcp-act.o : objc/objc-act.c \\\n    objc/objc-act.h input.h $(FUNCTION_H) output.h debug.h langhooks.h \\\n    objcp/objcp-decl.h $(LANGHOOKS_DEF_H) $(HASHTAB_H) gt-objc-objc-act.h \\\n    $(GIMPLE_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< \\\n+\t\t$(OUTPUT_OPTION)\n \n po-generated:\n "}]}