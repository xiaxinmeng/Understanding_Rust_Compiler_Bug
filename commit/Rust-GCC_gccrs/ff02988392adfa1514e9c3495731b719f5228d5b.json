{"sha": "ff02988392adfa1514e9c3495731b719f5228d5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYwMjk4ODM5MmFkZmExNTE0ZTljMzQ5NTczMWI3MTlmNTIyOGQ1Yg==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2018-06-21T09:01:21Z"}, "committer": {"name": "Andre Vieira", "email": "avieira@gcc.gnu.org", "date": "2018-06-21T09:01:21Z"}, "message": "[AArch64][PATCH 1/2] Make AES unspecs commutative\n\ngcc\n2018-06-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/aarch64/aarch64-simd.md (aarch64_crypto_aes<aes_op>v16qi):\n\tMake opernads of the unspec commutative.\n\ngcc/testsuite\n2018-06-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* gcc/gcc.target/aarch64/aes_2.c: New test.\n\nFrom-SVN: r261835", "tree": {"sha": "e20aa2a537b6596f94666f604500a7ec2d0e7720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20aa2a537b6596f94666f604500a7ec2d0e7720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff02988392adfa1514e9c3495731b719f5228d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff02988392adfa1514e9c3495731b719f5228d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff02988392adfa1514e9c3495731b719f5228d5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff02988392adfa1514e9c3495731b719f5228d5b/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5fa234669f3882aa2190c916df497259153412e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa234669f3882aa2190c916df497259153412e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fa234669f3882aa2190c916df497259153412e4"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "1731f5a05d2adef4d93497f2651d3c213c45b81a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff02988392adfa1514e9c3495731b719f5228d5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff02988392adfa1514e9c3495731b719f5228d5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff02988392adfa1514e9c3495731b719f5228d5b", "patch": "@@ -1,3 +1,8 @@\n+2018-06-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (aarch64_crypto_aes<aes_op>v16qi):\n+\tMake opernads of the unspec commutative.\n+\n 2018-06-21  Richard Biener  <rguenther@suse.de>\n \n \t* tree-data-ref.c (dr_step_indicator): Handle NULL DR_STEP."}, {"sha": "7e9ae086b10c9bdd339b521c9444dc04b0d5b137", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff02988392adfa1514e9c3495731b719f5228d5b/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff02988392adfa1514e9c3495731b719f5228d5b/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=ff02988392adfa1514e9c3495731b719f5228d5b", "patch": "@@ -5878,7 +5878,7 @@\n \n (define_insn \"aarch64_crypto_aes<aes_op>v16qi\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=w\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"0\")\n+\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"%0\")\n \t\t       (match_operand:V16QI 2 \"register_operand\" \"w\")]\n          CRYPTO_AES))]\n   \"TARGET_SIMD && TARGET_AES\""}, {"sha": "e58afe59ab32e68228c03cbb5603a15a04c16602", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff02988392adfa1514e9c3495731b719f5228d5b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff02988392adfa1514e9c3495731b719f5228d5b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff02988392adfa1514e9c3495731b719f5228d5b", "patch": "@@ -1,3 +1,7 @@\n+2018-06-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* gcc/gcc.target/aarch64/aes_2.c: New test.\n+\n 2018-06-20  Than McIntosh  <thanm@google.com>\n \n \tPR libgcc/86213"}, {"sha": "70f113fb5abeb73f6d058c48e7e25497f21be329", "filename": "gcc/testsuite/gcc.target/aarch64/aes_2.c", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff02988392adfa1514e9c3495731b719f5228d5b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faes_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff02988392adfa1514e9c3495731b719f5228d5b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faes_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faes_2.c?ref=ff02988392adfa1514e9c3495731b719f5228d5b", "patch": "@@ -0,0 +1,79 @@\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=armv8-a+crypto\" } */\n+\n+#include \"arm_neon.h\"\n+\n+uint8x16_t\n+test0 (uint8x16_t a, uint8x16_t b)\n+{\n+  uint8x16_t result;\n+  result = vaeseq_u8 (a, b);\n+  result = vaeseq_u8 (result, a);\n+  return result;\n+}\n+\n+uint8x16_t\n+test1 (uint8x16_t a, uint8x16_t b)\n+{\n+  uint8x16_t result;\n+  result = vaeseq_u8 (a, b);\n+  result = vaeseq_u8 (a, result);\n+  return result;\n+}\n+\n+uint8x16_t\n+test2 (uint8x16_t a, uint8x16_t b)\n+{\n+  uint8x16_t result;\n+  result = vaeseq_u8 (b, a);\n+  result = vaeseq_u8 (result, b);\n+  return result;\n+}\n+\n+uint8x16_t\n+test3 (uint8x16_t a, uint8x16_t b)\n+{\n+  uint8x16_t result;\n+  result = vaeseq_u8 (b, a);\n+  result = vaeseq_u8 (b, result);\n+  return result;\n+}\n+\n+uint8x16_t\n+test4 (uint8x16_t a, uint8x16_t b)\n+{\n+  uint8x16_t result;\n+  result = vaesdq_u8 (a, b);\n+  result = vaesdq_u8 (result, a);\n+  return result;\n+}\n+\n+uint8x16_t\n+test5 (uint8x16_t a, uint8x16_t b)\n+{\n+  uint8x16_t result;\n+  result = vaesdq_u8 (a, b);\n+  result = vaesdq_u8 (a, result);\n+  return result;\n+}\n+\n+uint8x16_t\n+test6 (uint8x16_t a, uint8x16_t b)\n+{\n+  uint8x16_t result;\n+  result = vaesdq_u8 (b, a);\n+  result = vaesdq_u8 (result, b);\n+  return result;\n+}\n+\n+uint8x16_t\n+test7 (uint8x16_t a, uint8x16_t b)\n+{\n+  uint8x16_t result;\n+  result = vaesdq_u8 (b, a);\n+  result = vaesdq_u8 (b, result);\n+  return result;\n+}\n+/* { dg-final { scan-assembler-not \"mov\" } } */\n+"}]}