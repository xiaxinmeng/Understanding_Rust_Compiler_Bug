{"sha": "7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZiZGM5NTBkZWY1ZjJjMjkxNThkY2QxMzFmOTBmMGZmOGQyZWJjOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-03-15T17:37:03Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-03-15T17:37:03Z"}, "message": "inclhack.def (hpux_htonl): New fix.\n\n\t* inclhack.def (hpux_htonl): New fix.\n\t* tests/base/netinet/in.h: New test.\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r96522", "tree": {"sha": "050ea251e9929f1104cc81881e7449a67339c760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/050ea251e9929f1104cc81881e7449a67339c760"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dcd18b9aa78af93366156bb253d4bfaa89a3e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dcd18b9aa78af93366156bb253d4bfaa89a3e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dcd18b9aa78af93366156bb253d4bfaa89a3e8d"}], "stats": {"total": 114, "additions": 109, "deletions": 5}, "files": [{"sha": "cde72ca6e85cba4569929be3cb3a7c04494884b9", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9", "patch": "@@ -1,3 +1,9 @@\n+2005-03-15  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* inclhack.def (hpux_htonl): New fix.\n+\t* tests/base/netinet/in.h: New test.\n+\t* fixincl.x: Regenerate.\n+\n 2005-02-23  James E Wilson  <wilson@specifixinc.com>\n \n \t* Makefile.in (full-stamp, test-stamp, $(AF)): Add $(CFLAGS) to link."}, {"sha": "4c790e7059e7bb3d4b6104e479175ca111608567", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 51, "deletions": 5, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Friday November 26, 2004 at 09:59:26 PM UTC\n+ * It has been AutoGen-ed  Monday March 14, 2005 at 09:43:34 PM UTC\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Fri Nov 26 21:59:26 UTC 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Mon Mar 14 21:43:34 UTC 2005\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 177 fixup descriptions.\n+ * This file contains 178 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2646,6 +2646,46 @@ static const char* apzHpux_Ctype_MacrosPatch[] = {\n     \"%1(int)%3\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hpux_Htonl fix\n+ */\n+tSCC zHpux_HtonlName[] =\n+     \"hpux_htonl\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHpux_HtonlList[] =\n+  \"|netinet/in.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzHpux_HtonlMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHpux_HtonlSelect0[] =\n+       \"#ifndef _XOPEN_SOURCE_EXTENDED\\n\\\n+(/\\\\*\\n\\\n+ \\\\* Macros for number representation conversion\\\\.\\n\\\n+ \\\\*/\\n\\\n+#ifndef ntohl)\";\n+\n+#define    HPUX_HTONL_TEST_CT  1\n+static tTestDesc aHpux_HtonlTests[] = {\n+  { TT_EGREP,    zHpux_HtonlSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Hpux_Htonl\n+ */\n+static const char* apzHpux_HtonlPatch[] = {\n+    \"format\",\n+    \"#if 1\\n\\\n+%1\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Hpux_Long_Double fix\n@@ -7085,9 +7125,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          207\n+#define REGEX_COUNT          208\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            177\n+#define FIX_COUNT            178\n \n /*\n  *  Enumerate the fixes\n@@ -7156,6 +7196,7 @@ typedef enum {\n     HPUX11_VSNPRINTF_FIXIDX,\n     HPUX8_BOGUS_INLINES_FIXIDX,\n     HPUX_CTYPE_MACROS_FIXIDX,\n+    HPUX_HTONL_FIXIDX,\n     HPUX_LONG_DOUBLE_FIXIDX,\n     HPUX_SYSTIME_FIXIDX,\n     INT_ABORT_FREE_AND_EXIT_FIXIDX,\n@@ -7588,6 +7629,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX_CTYPE_MACROS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux_Ctype_MacrosTests,   apzHpux_Ctype_MacrosPatch, 0 },\n \n+  {  zHpux_HtonlName,    zHpux_HtonlList,\n+     apzHpux_HtonlMachs,\n+     HPUX_HTONL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux_HtonlTests,   apzHpux_HtonlPatch, 0 },\n+\n   {  zHpux_Long_DoubleName,    zHpux_Long_DoubleList,\n      apzHpux_Long_DoubleMachs,\n      HPUX_LONG_DOUBLE_TEST_CT, FD_MACH_ONLY,"}, {"sha": "7bd48dba1bab6f64fef75eb3a0dd677614563c32", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9", "patch": "@@ -1506,6 +1506,34 @@ fix = {\n };\n \n \n+/*\n+ *  Fix hpux broken #ifndef _XOPEN_SOURCE_EXTENDED conditional on htonl etc.\n+ */\n+fix = {\n+    hackname = hpux_htonl;\n+    files    = netinet/in.h;\n+    select   = \"#ifndef _XOPEN_SOURCE_EXTENDED\\n\"\n+               \"(/\\\\*\\n\"\n+               \" \\\\* Macros for number representation conversion\\\\.\\n\"\n+               \" \\\\*/\\n\"\n+               \"#ifndef ntohl)\";\n+    c_fix     = format;\n+    c_fix_arg = \"#if 1\\n%1\";\n+\n+    test_text = \"#ifndef _XOPEN_SOURCE_EXTENDED\\n\"\n+                \"/*\\n\"\n+                \" * Macros for number representation conversion.\\n\"\n+                \" */\\n\"\n+                \"#ifndef ntohl\\n\"\n+                \"#define ntohl(x)        (x)\\n\"\n+                \"#define ntohs(x)        (x)\\n\"\n+                \"#define htonl(x)        (x)\\n\"\n+                \"#define htons(x)        (x)\\n\"\n+                \"#endif\\n\"\n+                \"#endif  /* ! _XOPEN_SOURCE_EXTENDED */\";\n+};\n+\n+\n /*\n  * HP-UX long_double\n  */"}, {"sha": "2d7f7b8522feabadf901eec171332206af74b793", "filename": "fixincludes/tests/base/netinet/in.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/fixincludes%2Ftests%2Fbase%2Fnetinet%2Fin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9/fixincludes%2Ftests%2Fbase%2Fnetinet%2Fin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fnetinet%2Fin.h?ref=7fbdc950def5f2c29158dcd131f90f0ff8d2ebc9", "patch": "@@ -0,0 +1,24 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/netinet/in.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( HPUX_HTONL_CHECK )\n+#if 1\n+/*\n+ * Macros for number representation conversion.\n+ */\n+#ifndef ntohl\n+#define ntohl(x)        (x)\n+#define ntohs(x)        (x)\n+#define htonl(x)        (x)\n+#define htons(x)        (x)\n+#endif\n+#endif  /* ! _XOPEN_SOURCE_EXTENDED */\n+#endif  /* HPUX_HTONL_CHECK */"}]}