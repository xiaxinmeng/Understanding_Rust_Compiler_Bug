{"sha": "4fef83a7dd56abbc587d91d0bf738942ac510189", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZlZjgzYTdkZDU2YWJiYzU4N2Q5MWQwYmY3Mzg5NDJhYzUxMDE4OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-10-06T17:50:26Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-10-06T17:50:26Z"}, "message": "mips.md (*lowsi): Renamed from lowsi.\n\n\t* config/mips/mips.md (*lowsi): Renamed from lowsi.\n\t(*lowdi): Likewise lowdi.\n\t(*lowsi_mips16, *lowdi_mips16): New patterns.\n\t* config/mips/mips.c (mips_const_insns, mips_output_move): Remove\n\tmips16 CONSTANT_RELOC handling.\n\t(mips_delegitimize_address): Adjust for new sdata representation.\n\nFrom-SVN: r72157", "tree": {"sha": "64000138000fea36ddc0bf8ca12c94e860c2e94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64000138000fea36ddc0bf8ca12c94e860c2e94a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fef83a7dd56abbc587d91d0bf738942ac510189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fef83a7dd56abbc587d91d0bf738942ac510189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fef83a7dd56abbc587d91d0bf738942ac510189", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fef83a7dd56abbc587d91d0bf738942ac510189/comments", "author": null, "committer": null, "parents": [{"sha": "ac1605d6d3a0a049524738c35aacfc1641b2c065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1605d6d3a0a049524738c35aacfc1641b2c065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac1605d6d3a0a049524738c35aacfc1641b2c065"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "681f6776af37410c4244e62e95f4ca1e4d19d5cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fef83a7dd56abbc587d91d0bf738942ac510189/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fef83a7dd56abbc587d91d0bf738942ac510189/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fef83a7dd56abbc587d91d0bf738942ac510189", "patch": "@@ -1,3 +1,12 @@\n+2003-10-06  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (*lowsi): Renamed from lowsi.\n+\t(*lowdi): Likewise lowdi.\n+\t(*lowsi_mips16, *lowdi_mips16): New patterns.\n+\t* config/mips/mips.c (mips_const_insns, mips_output_move): Remove\n+\tmips16 CONSTANT_RELOC handling.\n+\t(mips_delegitimize_address): Adjust for new sdata representation.\n+\n 2003-10-06  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.c (mips_arg_info): If MUST_PASS_IN_STACK,"}, {"sha": "304cf1dc86f9970340eac3ad7dfeb0695c805d70", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fef83a7dd56abbc587d91d0bf738942ac510189/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fef83a7dd56abbc587d91d0bf738942ac510189/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=4fef83a7dd56abbc587d91d0bf738942ac510189", "patch": "@@ -1202,6 +1202,8 @@ mips_address_insns (rtx x, enum machine_mode mode)\n       return factor;\n \n     case ADDRESS_LO_SUM:\n+      return (TARGET_MIPS16 ? factor * 2 : factor);\n+\n     case ADDRESS_CONST_INT:\n       return factor;\n \n@@ -1250,12 +1252,8 @@ mips_const_insns (rtx x)\n \t  return 0;\n \n \tcase CONSTANT_GP:\n-\t  return 1;\n-\n \tcase CONSTANT_RELOC:\n-\t  /* When generating mips16 code, we need to set the destination to\n-\t     $0 and then add in the signed offset.  See mips_output_move.  */\n-\t  return (TARGET_MIPS16 ? 3 : 1);\n+\t  return 1;\n \n \tcase CONSTANT_SYMBOLIC:\n \t  return mips_symbol_insns (mips_classify_symbol (c.symbol));\n@@ -2013,12 +2011,11 @@ mips_delegitimize_address (rtx x)\n       && mips_classify_symbol (c.symbol) == SYMBOL_GOT_GLOBAL)\n     return c.symbol;\n \n-  if (GET_CODE (x) == PLUS\n-      && (XEXP (x, 0) == pic_offset_table_rtx\n-\t  || XEXP (x, 0) == cfun->machine->mips16_gp_pseudo_rtx)\n-      && mips_classify_constant (&c, XEXP (x, 1)) == CONSTANT_RELOC\n-      && mips_classify_symbol (c.symbol) == SYMBOL_SMALL_DATA)\n-    return plus_constant (c.symbol, c.offset);\n+  if (GET_CODE (x) == LO_SUM\n+      && XEXP (x, 0) == (TARGET_MIPS16\n+\t\t\t ? cfun->machine->mips16_gp_pseudo_rtx\n+\t\t\t : pic_offset_table_rtx))\n+    return XEXP (x, 1);\n \n   return x;\n }\n@@ -2721,7 +2718,7 @@ mips_output_move (rtx dest, rtx src)\n \t  return \"move\\t%0,%1\";\n \n \tcase CONSTANT_RELOC:\n-\t  return (TARGET_MIPS16 ? \"li\\t%0,0\\n\\taddiu\\t%0,%1\" : \"li\\t%0,%1\");\n+\t  return \"li\\t%0,%1\";\n \n \tcase CONSTANT_SYMBOLIC:\n \t  return (dbl_p ? \"dla\\t%0,%a1\" : \"la\\t%0,%a1\");"}, {"sha": "c6227ebe364531434daff8ca2183d5218b2146a1", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fef83a7dd56abbc587d91d0bf738942ac510189/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fef83a7dd56abbc587d91d0bf738942ac510189/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=4fef83a7dd56abbc587d91d0bf738942ac510189", "patch": "@@ -4182,7 +4182,7 @@ dsrl\\t%3,%3,1\\n\\\n ;; Operand 2 is the address: print_operand works out which relocation\n ;; should be applied.\n \n-(define_insn \"lowsi\"\n+(define_insn \"*lowsi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(lo_sum:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t   (match_operand:SI 2 \"immediate_operand\" \"\")))]\n@@ -4191,7 +4191,7 @@ dsrl\\t%3,%3,1\\n\\\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n \n-(define_insn \"lowdi\"\n+(define_insn \"*lowdi\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(lo_sum:DI (match_operand:DI 1 \"register_operand\" \"r\")\n \t\t   (match_operand:DI 2 \"immediate_operand\" \"\")))]\n@@ -4200,6 +4200,26 @@ dsrl\\t%3,%3,1\\n\\\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n+(define_insn \"*lowsi_mips16\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(lo_sum:SI (match_operand:SI 1 \"register_operand\" \"0\")\n+\t\t   (match_operand:SI 2 \"immediate_operand\" \"\")))]\n+  \"TARGET_MIPS16\"\n+  \"addiu\\t%0,%R2\"\n+  [(set_attr \"type\"\t\"arith\")\n+   (set_attr \"mode\"\t\"SI\")\n+   (set_attr \"length\"\t\"8\")])\n+\n+(define_insn \"*lowdi_mips16\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n+\t(lo_sum:DI (match_operand:DI 1 \"register_operand\" \"0\")\n+\t\t   (match_operand:DI 2 \"immediate_operand\" \"\")))]\n+  \"TARGET_MIPS16 && TARGET_64BIT\"\n+  \"daddiu\\t%0,%R2\"\n+  [(set_attr \"type\"\t\"arith\")\n+   (set_attr \"mode\"\t\"DI\")\n+   (set_attr \"length\"\t\"8\")])\n+\n ;; 64-bit integer moves\n \n ;; Unlike most other insns, the move insns can't be split with"}]}