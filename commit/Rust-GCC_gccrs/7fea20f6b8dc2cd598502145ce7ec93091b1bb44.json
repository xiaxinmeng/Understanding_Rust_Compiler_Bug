{"sha": "7fea20f6b8dc2cd598502145ce7ec93091b1bb44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZlYTIwZjZiOGRjMmNkNTk4NTAyMTQ1Y2U3ZWM5MzA5MWIxYmI0NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-03-08T12:56:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-03-08T12:56:40Z"}, "message": "re PR tree-optimization/84178 (ICE in release_bb_predicate)\n\n2018-03-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84178\n\t* tree-if-conv.c (combine_blocks): Move insert_gimplified_predicates\n\tto caller.\n\t(version_loop_for_if_conversion): Delay update_ssa call.\n\t(tree_if_conversion): Delay update_ssa until after predicate\n\tinsertion.\n\n\t* gcc.dg/torture/pr84178-2.c: New testcase.\n\nFrom-SVN: r258364", "tree": {"sha": "fb0e9a872b6d71ff4e1c71dab8d6110ee999d392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb0e9a872b6d71ff4e1c71dab8d6110ee999d392"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fea20f6b8dc2cd598502145ce7ec93091b1bb44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fea20f6b8dc2cd598502145ce7ec93091b1bb44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fea20f6b8dc2cd598502145ce7ec93091b1bb44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b9a03d644fb55566180aeec291b64ca23f3c77b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9a03d644fb55566180aeec291b64ca23f3c77b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9a03d644fb55566180aeec291b64ca23f3c77b"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "bfff935905f03a868e15ebe29a7f81187215d3b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fea20f6b8dc2cd598502145ce7ec93091b1bb44", "patch": "@@ -1,3 +1,12 @@\n+2018-03-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84178\n+\t* tree-if-conv.c (combine_blocks): Move insert_gimplified_predicates\n+\tto caller.\n+\t(version_loop_for_if_conversion): Delay update_ssa call.\n+\t(tree_if_conversion): Delay update_ssa until after predicate\n+\tinsertion.\n+\n 2018-03-08  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/84178"}, {"sha": "3abed3cdbeb720389b8b5053748623c879ed8467", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fea20f6b8dc2cd598502145ce7ec93091b1bb44", "patch": "@@ -1,3 +1,8 @@\n+2018-03-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84178\n+\t* gcc.dg/torture/pr84178-2.c: New testcase.\n+\n 2018-03-08  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/84178"}, {"sha": "75f5b0ac7026abe20d9c93c0094f0a516ae33285", "filename": "gcc/testsuite/gcc.dg/torture/pr84178-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr84178-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr84178-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr84178-2.c?ref=7fea20f6b8dc2cd598502145ce7ec93091b1bb44", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fno-tree-forwprop\" } */\n+\n+int zy, h4;\n+\n+void\n+r8 (long int mu, int *jr, int *fi, short int dv)\n+{\n+  do\n+    {\n+      int tx;\n+\n+      tx = !!h4 ? (zy + h4) : 1;\n+      mu = tx;\n+      *jr = (((unsigned char) mu > (254 >> dv)) ? 0 : (unsigned char) tx) + *fi;\n+    } while (*jr == 0);\n+\n+  r8 (mu, jr, fi, 1);\n+}\n+"}, {"sha": "59a0f1c887d01072d191d0a629d26e08d0c3252e", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fea20f6b8dc2cd598502145ce7ec93091b1bb44/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=7fea20f6b8dc2cd598502145ce7ec93091b1bb44", "patch": "@@ -2371,7 +2371,6 @@ combine_blocks (struct loop *loop)\n   edge_iterator ei;\n \n   remove_conditions_and_labels (loop);\n-  insert_gimplified_predicates (loop);\n   predicate_all_scalar_phis (loop);\n \n   if (any_pred_load_store)\n@@ -2593,7 +2592,6 @@ version_loop_for_if_conversion (struct loop *loop)\n   gsi = gsi_last_bb (cond_bb);\n   gimple_call_set_arg (g, 1, build_int_cst (integer_type_node, new_loop->num));\n   gsi_insert_before (&gsi, g, GSI_SAME_STMT);\n-  update_ssa (TODO_update_ssa);\n   return new_loop;\n }\n \n@@ -2811,6 +2809,7 @@ tree_if_conversion (struct loop *loop)\n   unsigned int todo = 0;\n   bool aggressive_if_conv;\n   struct loop *rloop;\n+  bool need_update_ssa = false;\n \n  again:\n   rloop = NULL;\n@@ -2856,6 +2855,7 @@ tree_if_conversion (struct loop *loop)\n       struct loop *nloop = version_loop_for_if_conversion (vloop);\n       if (nloop == NULL)\n \tgoto cleanup;\n+      need_update_ssa = true;\n       if (vloop != loop)\n \t{\n \t  /* If versionable_outer_loop_p decided to version the\n@@ -2880,6 +2880,13 @@ tree_if_conversion (struct loop *loop)\n \t}\n     }\n \n+  /* Due to hard to fix issues we end up with immediate uses recorded\n+     for not yet inserted predicates which will confuse SSA update so\n+     we delayed this from after versioning to after predicate insertion.  */\n+  insert_gimplified_predicates (loop);\n+  if (need_update_ssa)\n+    update_ssa (TODO_update_ssa);\n+\n   /* Now all statements are if-convertible.  Combine all the basic\n      blocks into one huge basic block doing the if-conversion\n      on-the-fly.  */"}]}