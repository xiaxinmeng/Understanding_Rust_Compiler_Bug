{"sha": "e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcyYjBlZjRiNzg3NTk5Yjg3Y2QxNmIwZDkyOWQ1ZDc1YzZkYTZiYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-08-30T11:13:02Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-08-30T11:13:02Z"}, "message": "[33/77] Add a NARROWEST_INT_MODE macro\n\nThis patch replaces uses of GET_CLASS_NARROWEST_MODE (MODE_INT) with a\nnew NARROWEST_INT_MODE macro, which has type scalar_int_mode.\n\n2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* machmode.h (NARROWEST_INT_MODE): New macro.\n\t* expr.c (alignment_for_piecewise_move): Use it instead of\n\tGET_CLASS_NARROWEST_MODE (MODE_INT).\n\t(push_block): Likewise.\n\t* stor-layout.c (bit_field_mode_iterator::bit_field_mode_iterator):\n\tLikewise.\n\t* tree-vrp.c (simplify_float_conversion_using_ranges): Likewise.\n\ngcc/ada/\n\t* gcc-interface/decl.c (validate_size): Use NARROWEST_INT_MODE\n\tinstead of GET_CLASS_NARROWEST_MODE (MODE_INT).\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r251485", "tree": {"sha": "a9063034435caa463ed4649ec7f0cd66b018e15f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9063034435caa463ed4649ec7f0cd66b018e15f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/comments", "author": null, "committer": null, "parents": [{"sha": "e05c94bad29dd443cc28ae314e2874992afce348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05c94bad29dd443cc28ae314e2874992afce348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e05c94bad29dd443cc28ae314e2874992afce348"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "526c57bb89276fa0f18361e99c3264e068c75b85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "patch": "@@ -1,3 +1,15 @@\n+2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* machmode.h (NARROWEST_INT_MODE): New macro.\n+\t* expr.c (alignment_for_piecewise_move): Use it instead of\n+\tGET_CLASS_NARROWEST_MODE (MODE_INT).\n+\t(push_block): Likewise.\n+\t* stor-layout.c (bit_field_mode_iterator::bit_field_mode_iterator):\n+\tLikewise.\n+\t* tree-vrp.c (simplify_float_conversion_using_ranges): Likewise.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "fe93c05961db148b0b105d216b6a39eea4adcbda", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "patch": "@@ -1,3 +1,10 @@\n+2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* gcc-interface/decl.c (validate_size): Use NARROWEST_INT_MODE\n+\tinstead of GET_CLASS_NARROWEST_MODE (MODE_INT).\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "ae4c6ec27b1774035d22aa9d9190e8e6c7f0cd6c", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "patch": "@@ -8574,7 +8574,7 @@ validate_size (Uint uint_size, tree gnu_type, Entity_Id gnat_object,\n      by the smallest integral mode that's valid for pointers.  */\n   if (TREE_CODE (gnu_type) == POINTER_TYPE || TYPE_IS_FAT_POINTER_P (gnu_type))\n     {\n-      machine_mode p_mode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n+      scalar_int_mode p_mode = NARROWEST_INT_MODE;\n       while (!targetm.valid_pointer_mode (p_mode))\n \tp_mode = GET_MODE_WIDER_MODE (p_mode).require ();\n       type_size = bitsize_int (GET_MODE_BITSIZE (p_mode));"}, {"sha": "433e05ba9f4da922745892bccd9fa4b615d725af", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "patch": "@@ -707,7 +707,7 @@ alignment_for_piecewise_move (unsigned int max_pieces, unsigned int align)\n     {\n       machine_mode tmode, xmode;\n \n-      xmode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n+      xmode = NARROWEST_INT_MODE;\n       FOR_EACH_MODE_IN_CLASS (tmode, MODE_INT)\n \t{\n \t  if (GET_MODE_SIZE (tmode) > max_pieces\n@@ -3910,7 +3910,7 @@ push_block (rtx size, int extra, int below)\n \t\t\t     negate_rtx (Pmode, size));\n     }\n \n-  return memory_address (GET_CLASS_NARROWEST_MODE (MODE_INT), temp);\n+  return memory_address (NARROWEST_INT_MODE, temp);\n }\n \n /* A utility routine that returns the base of an auto-inc memory, or NULL.  */"}, {"sha": "a9fc93a8fd2d8467176d4d7c72d3c74bf9e5dc49", "filename": "gcc/machmode.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "patch": "@@ -655,6 +655,12 @@ extern const unsigned char class_narrowest_mode[MAX_MODE_CLASS];\n #define GET_CLASS_NARROWEST_MODE(CLASS) \\\n   ((machine_mode) class_narrowest_mode[CLASS])\n \n+/* The narrowest full integer mode available on the target.  */\n+\n+#define NARROWEST_INT_MODE \\\n+  (scalar_int_mode \\\n+   (scalar_int_mode::from_int (class_narrowest_mode[MODE_INT])))\n+\n /* Return the narrowest mode in T's class.  */\n \n template<typename T>"}, {"sha": "e447f4f9346dfd5101ea5bde3b92cb2848f88804", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "patch": "@@ -2723,7 +2723,7 @@ ::bit_field_mode_iterator (HOST_WIDE_INT bitsize, HOST_WIDE_INT bitpos,\n \t\t\t   HOST_WIDE_INT bitregion_start,\n \t\t\t   HOST_WIDE_INT bitregion_end,\n \t\t\t   unsigned int align, bool volatilep)\n-: m_mode (GET_CLASS_NARROWEST_MODE (MODE_INT)), m_bitsize (bitsize),\n+: m_mode (NARROWEST_INT_MODE), m_bitsize (bitsize),\n   m_bitpos (bitpos), m_bitregion_start (bitregion_start),\n   m_bitregion_end (bitregion_end), m_align (align),\n   m_volatilep (volatilep), m_count (0)"}, {"sha": "dc5554d1ad86f5face6b13f0c575b38b626c635b", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e72b0ef4b787599b87cd16b0d929d5d75c6da6bc/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=e72b0ef4b787599b87cd16b0d929d5d75c6da6bc", "patch": "@@ -10120,7 +10120,7 @@ simplify_float_conversion_using_ranges (gimple_stmt_iterator *gsi,\n      integer mode available.  */\n   else\n     {\n-      mode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n+      mode = NARROWEST_INT_MODE;\n       for (;;)\n \t{\n \t  /* If we cannot do a signed conversion to float from mode"}]}