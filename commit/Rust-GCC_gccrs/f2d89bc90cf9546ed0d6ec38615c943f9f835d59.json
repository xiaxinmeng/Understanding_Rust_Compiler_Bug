{"sha": "f2d89bc90cf9546ed0d6ec38615c943f9f835d59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkODliYzkwY2Y5NTQ2ZWQwZDZlYzM4NjE1Yzk0M2Y5ZjgzNWQ1OQ==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2003-11-20T00:10:27Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2003-11-20T00:10:27Z"}, "message": "* combine.c (sets_function_arg_p): Delete unused function.\n\nFrom-SVN: r73744", "tree": {"sha": "e2acc6a65f5aea8a0ecb4ab31446817867351de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2acc6a65f5aea8a0ecb4ab31446817867351de0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2d89bc90cf9546ed0d6ec38615c943f9f835d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d89bc90cf9546ed0d6ec38615c943f9f835d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d89bc90cf9546ed0d6ec38615c943f9f835d59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d89bc90cf9546ed0d6ec38615c943f9f835d59/comments", "author": null, "committer": null, "parents": [{"sha": "1f663989d2ec5a2c4b372a69819826cad6ed6266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f663989d2ec5a2c4b372a69819826cad6ed6266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f663989d2ec5a2c4b372a69819826cad6ed6266"}], "stats": {"total": 44, "additions": 4, "deletions": 40}, "files": [{"sha": "bb9298c3e7b412f81be2b3a0232469578cf4bdb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d89bc90cf9546ed0d6ec38615c943f9f835d59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d89bc90cf9546ed0d6ec38615c943f9f835d59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2d89bc90cf9546ed0d6ec38615c943f9f835d59", "patch": "@@ -1,3 +1,7 @@\n+2003-11-19  James E Wilson  <wilson@specifixinc.com>\n+\n+\t* combine.c (sets_function_arg_p): Delete unused function.\n+\n 2003-11-19  Eric Christopher  <echristo@redhat.com>\n \n \t* reload1.c (reload): Revert 2 previous checkins."}, {"sha": "3ae08ed63845e71da0a32b143c0cc280a69a1483", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2d89bc90cf9546ed0d6ec38615c943f9f835d59/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2d89bc90cf9546ed0d6ec38615c943f9f835d59/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=f2d89bc90cf9546ed0d6ec38615c943f9f835d59", "patch": "@@ -345,7 +345,6 @@ static void setup_incoming_promotions (void);\n static void set_nonzero_bits_and_sign_copies (rtx, rtx, void *);\n static int cant_combine_insn_p (rtx);\n static int can_combine_p (rtx, rtx, rtx, rtx, rtx *, rtx *);\n-static int sets_function_arg_p (rtx);\n static int combinable_i3pat (rtx, rtx *, rtx, rtx, int, rtx *);\n static int contains_muldiv (rtx);\n static rtx try_combine (rtx, rtx, rtx, int *);\n@@ -1205,45 +1204,6 @@ can_combine_p (rtx insn, rtx i3, rtx pred ATTRIBUTE_UNUSED, rtx succ,\n   return 1;\n }\n \f\n-/* Check if PAT is an insn - or a part of it - used to set up an\n-   argument for a function in a hard register.  */\n-\n-static int\n-sets_function_arg_p (rtx pat)\n-{\n-  int i;\n-  rtx inner_dest;\n-\n-  switch (GET_CODE (pat))\n-    {\n-    case INSN:\n-      return sets_function_arg_p (PATTERN (pat));\n-\n-    case PARALLEL:\n-      for (i = XVECLEN (pat, 0); --i >= 0;)\n-\tif (sets_function_arg_p (XVECEXP (pat, 0, i)))\n-\t  return 1;\n-\n-      break;\n-\n-    case SET:\n-      inner_dest = SET_DEST (pat);\n-      while (GET_CODE (inner_dest) == STRICT_LOW_PART\n-\t     || GET_CODE (inner_dest) == SUBREG\n-\t     || GET_CODE (inner_dest) == ZERO_EXTRACT)\n-\tinner_dest = XEXP (inner_dest, 0);\n-\n-      return (GET_CODE (inner_dest) == REG\n-\t      && REGNO (inner_dest) < FIRST_PSEUDO_REGISTER\n-\t      && FUNCTION_ARG_REGNO_P (REGNO (inner_dest)));\n-\n-    default:\n-      break;\n-    }\n-\n-  return 0;\n-}\n-\n /* LOC is the location within I3 that contains its pattern or the component\n    of a PARALLEL of the pattern.  We validate that it is valid for combining.\n "}]}