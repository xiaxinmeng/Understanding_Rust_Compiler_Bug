{"sha": "f391b44b199e27712c15ea880f54f41cd11f34e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM5MWI0NGIxOTllMjc3MTJjMTVlYTg4MGY1NGY0MWNkMTFmMzRlMw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-11-23T16:28:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-11-23T16:28:42Z"}, "message": "re PR c++/58525 (__cxa_throw_bad_array_new_length is generated with -fno-exceptions)\n\n\tPR c++/58525\n\t* call.c (build_operator_new_call): Add flag_exceptions check.\n\t* decl.c (compute_array_index_type): Ditto.\n\t* init.c (build_new_1): Ditto.\n\t(build_vec_init): Ditto.\n\nFrom-SVN: r205310", "tree": {"sha": "dd027478c82250512192ee3a1ebe30071d6d293b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd027478c82250512192ee3a1ebe30071d6d293b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f391b44b199e27712c15ea880f54f41cd11f34e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f391b44b199e27712c15ea880f54f41cd11f34e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f391b44b199e27712c15ea880f54f41cd11f34e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f391b44b199e27712c15ea880f54f41cd11f34e3/comments", "author": null, "committer": null, "parents": [{"sha": "4417887978f491e497451598d0b596af3fe62b8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4417887978f491e497451598d0b596af3fe62b8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4417887978f491e497451598d0b596af3fe62b8c"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "05aa444d43914a457c6fa224dd9ed75dab8f2ab9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f391b44b199e27712c15ea880f54f41cd11f34e3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f391b44b199e27712c15ea880f54f41cd11f34e3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f391b44b199e27712c15ea880f54f41cd11f34e3", "patch": "@@ -1,3 +1,11 @@\n+2013-11-23  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\n+\tPR c++/58525\n+\t* call.c (build_operator_new_call): Add flag_exceptions check.\n+\t* decl.c (compute_array_index_type): Ditto.\n+\t* init.c (build_new_1): Ditto.\n+\t(build_vec_init): Ditto.\n+\n 2013-11-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-gimplify.c: Include target.h and c-family/c-ubsan.h."}, {"sha": "6a4386eb5a4a675f97f725213e8bc76205d7d368", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f391b44b199e27712c15ea880f54f41cd11f34e3/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f391b44b199e27712c15ea880f54f41cd11f34e3/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=f391b44b199e27712c15ea880f54f41cd11f34e3", "patch": "@@ -3956,7 +3956,7 @@ build_operator_new_call (tree fnname, vec<tree, va_gc> **args,\n   if (size_check != NULL_TREE)\n     {\n       tree errval = TYPE_MAX_VALUE (sizetype);\n-      if (cxx_dialect >= cxx11)\n+      if (cxx_dialect >= cxx11 && flag_exceptions)\n \terrval = throw_bad_array_new_length ();\n       *size = fold_build3 (COND_EXPR, sizetype, size_check,\n \t\t\t   original_size, errval);"}, {"sha": "889c203b1f18d97977023e41d4118f7e543da8c7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f391b44b199e27712c15ea880f54f41cd11f34e3/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f391b44b199e27712c15ea880f54f41cd11f34e3/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=f391b44b199e27712c15ea880f54f41cd11f34e3", "patch": "@@ -8393,7 +8393,7 @@ compute_array_index_type (tree name, tree size, tsubst_flags_t complain)\n \n \t  stabilize_vla_size (itype);\n \n-\t  if (cxx_dialect >= cxx1y)\n+\t  if (cxx_dialect >= cxx1y && flag_exceptions)\n \t    {\n \t      /* If the VLA bound is larger than half the address space,\n \t         or less than zero, throw std::bad_array_length.  */"}, {"sha": "dc40989cc10736706574b55fd349c01adbaf7876", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f391b44b199e27712c15ea880f54f41cd11f34e3/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f391b44b199e27712c15ea880f54f41cd11f34e3/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=f391b44b199e27712c15ea880f54f41cd11f34e3", "patch": "@@ -2528,7 +2528,7 @@ build_new_1 (vec<tree, va_gc> **placement, tree type, tree nelts,\n \t    }\n \t  /* Perform the overflow check.  */\n \t  tree errval = TYPE_MAX_VALUE (sizetype);\n-\t  if (cxx_dialect >= cxx11)\n+\t  if (cxx_dialect >= cxx11 && flag_exceptions)\n \t    errval = throw_bad_array_new_length ();\n \t  if (outer_nelts_check != NULL_TREE)\n             size = fold_build3 (COND_EXPR, sizetype, outer_nelts_check,\n@@ -3398,7 +3398,8 @@ build_vec_init (tree base, tree maxindex, tree init,\n      is big enough for all the initializers.  */\n   if (init && TREE_CODE (init) == CONSTRUCTOR\n       && CONSTRUCTOR_NELTS (init) > 0\n-      && !TREE_CONSTANT (maxindex))\n+      && !TREE_CONSTANT (maxindex)\n+      && flag_exceptions)\n     length_check = fold_build2 (LT_EXPR, boolean_type_node, maxindex,\n \t\t\t\tsize_int (CONSTRUCTOR_NELTS (init) - 1));\n "}]}