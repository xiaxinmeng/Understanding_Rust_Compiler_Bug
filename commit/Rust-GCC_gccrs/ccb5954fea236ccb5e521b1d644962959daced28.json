{"sha": "ccb5954fea236ccb5e521b1d644962959daced28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiNTk1NGZlYTIzNmNjYjVlNTIxYjFkNjQ0OTYyOTU5ZGFjZWQyOA==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1998-10-23T02:25:09Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1998-10-23T02:25:09Z"}, "message": "frame.c: Somewhat explain `FDE'.\n\n        * frame.c: Somewhat explain `FDE'.\n        Suggested by Brendan Kehoe\n\nFrom-SVN: r23243", "tree": {"sha": "8de7b0e0f6baf363461b76aac8545fa6d298aebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8de7b0e0f6baf363461b76aac8545fa6d298aebc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccb5954fea236ccb5e521b1d644962959daced28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb5954fea236ccb5e521b1d644962959daced28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb5954fea236ccb5e521b1d644962959daced28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb5954fea236ccb5e521b1d644962959daced28/comments", "author": null, "committer": null, "parents": [{"sha": "8d3f83d25c6c9a51b28469352e77e5bb969486d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3f83d25c6c9a51b28469352e77e5bb969486d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d3f83d25c6c9a51b28469352e77e5bb969486d8"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "64d18b41aa39ff45c216ae3aefdffbef7c9b729e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb5954fea236ccb5e521b1d644962959daced28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb5954fea236ccb5e521b1d644962959daced28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccb5954fea236ccb5e521b1d644962959daced28", "patch": "@@ -1,3 +1,8 @@\n+Fri Oct 23 11:19:06 1998  Martin v. L\ufffdwis <loewis@informatik.hu-berlin.de>\n+\n+\t* frame.c: Somewhat explain `FDE'.\n+\tSuggested by Brendan Kehoe\n+\n Fri Oct 23 00:56:11 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* expr.c (pending_chain): Move up."}, {"sha": "ab803c90168d5c58e89ae640baa019f3acafc834", "filename": "gcc/frame.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb5954fea236ccb5e521b1d644962959daced28/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb5954fea236ccb5e521b1d644962959daced28/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=ccb5954fea236ccb5e521b1d644962959daced28", "patch": "@@ -71,6 +71,25 @@ typedef unsigned int  uaddr __attribute__ ((mode (pointer)));\n typedef          int  saddr __attribute__ ((mode (pointer)));\n typedef unsigned char ubyte;\n \n+/* Terminology:\n+   CIE - Common Information Element\n+   FDE - Frame Descriptor Element\n+\n+   There is one per function, and it describes where the function code\n+   is located, and what the register lifetimes and stack layout are\n+   within the function.\n+\n+   The data structures are defined in the DWARF specfication, although\n+   not in a very readable way (see LITERATURE).\n+\n+   Every time an exception is thrown, the code needs to locate the FDE\n+   for the current function, and starts to look for exception regions\n+   from that FDE. This works in a two-level search:\n+   a) in a linear search, find the shared image (i.e. DLL) containing\n+      the PC\n+   b) using the FDE table for that shared object, locate the FDE using\n+      binary search (which requires the sorting).  */   \n+\n /* The first few fields of a CIE.  The CIE_id field is 0 for a CIE,\n    to distinguish it from a valid FDE.  FDEs are aligned to an addressing\n    unit boundary, but the fields within are unaligned.  */"}]}