{"sha": "20d1cba13b4723bbe408605d96a65af353766682", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBkMWNiYTEzYjQ3MjNiYmU0MDg2MDVkOTZhNjVhZjM1Mzc2NjY4Mg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2009-08-27T17:40:55Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2009-08-27T17:40:55Z"}, "message": "PR libfortran/39667 Fix testcases to not need fd_truncate.\n\nFrom-SVN: r151144", "tree": {"sha": "5f5abe3aab67a60403c5ee51616ba4035f0fa3e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f5abe3aab67a60403c5ee51616ba4035f0fa3e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20d1cba13b4723bbe408605d96a65af353766682", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d1cba13b4723bbe408605d96a65af353766682", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d1cba13b4723bbe408605d96a65af353766682", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d1cba13b4723bbe408605d96a65af353766682/comments", "author": null, "committer": null, "parents": [{"sha": "f994f296e1b3ff382b81754e60f73ca88734342b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f994f296e1b3ff382b81754e60f73ca88734342b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f994f296e1b3ff382b81754e60f73ca88734342b"}], "stats": {"total": 82, "additions": 53, "deletions": 29}, "files": [{"sha": "c9979cae52f55c87a1c0bdfdcf61880f8fc25b6b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,3 +1,20 @@\n+2009-08-27  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/39667\n+\t* gfortran.dg/f2003_io_4.f03: Don't require target fd_truncate,\n+\topen temp file with status=\"scratch\".\n+\t* gfortran.dg/fmt_cache_1.f: Likewise\n+\t* gfortran.dg/fmt_exhaust.f90: Likewise\n+\t* gfortran.dg/fmt_t_4.f90: Likewise\n+\t* gfortran.dg/fseek.f90: Likewise\n+\t* gfortran.dg/list_read_5.f90: Likewise\n+\t* gfortran.dg/namelist_39.f90: Likewise\n+\t* gfortran.dg/namelist_56.f90: Likewise\t\n+\t* gfortran.dg/read_bad_advance.f90: Likewise\n+\t* gfortran.dg/read_repeat.f90: Likewise\n+\t* gfortran.dg/read_size_noadvance.f90: Likewise\n+\t* gfortran.dg/read_x_past.f: Likewise\n+\n 2009-08-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/28039"}, {"sha": "fa09737b402d441ec8cf24da8869d113d0f74032", "filename": "gcc/testsuite/gfortran.dg/f2003_io_4.f03", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n ! Test of decimal= feature\n \n@@ -10,7 +10,7 @@\n a = 43.21\n b = 3.131\n c = 5.432\n-open(99, decimal=\"comma\")\n+open(99, decimal=\"comma\", status=\"scratch\")\n write(99,'(10f8.3)') a\n a = 0.0\n rewind(99)\n@@ -20,14 +20,14 @@\n write(msg,'(dp,f8.3,dc,f8.2,dp,f8.3)', decimal=\"comma\") a(1), b(1), c(1)\n if (trim(msg).ne.\"  43.210    3,13   5.432\") call abort\n \n-close(99, status=\"delete\")\n-open(99, decimal=\"comma\")\n+close(99)\n+open(99, decimal=\"comma\", status=\"scratch\")\n write(99,nml=mynml)\n a = 0.0\n b = 0.0\n rewind(99)\n read(99,nml=mynml)\n if (any(a.ne.43.21)) call abort\n if (any(b.ne.3.131)) call abort\n-close(99, status=\"delete\")\n+close(99)\n end"}, {"sha": "41de3f0d705c903827ebfd2a2c38d2d2ce197575", "filename": "gcc/testsuite/gfortran.dg/fmt_cache_1.f", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_cache_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_cache_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_cache_1.f?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,11 +1,11 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! pr40662 segfaults when specific format is invoked twice.\n ! pr40330  incorrect io.\n ! test case derived from pr40662, <jvdelisle@gcc.gnu.org>\n       program astap\n       character(40) teststring\n       arlxca = 0.0\n-      open(10)\n+      open(10, status=\"scratch\")\n       write(10,40) arlxca\n       write(10,40) arlxca\n 40    format(t4,\"arlxca = \",1pg13.6,t27,\"arlxcc = \",g13.6,t53,"}, {"sha": "bd9c8bcfb3f9a4c11d686c821dbb623da6463252", "filename": "gcc/testsuite/gfortran.dg/fmt_exhaust.f90", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_exhaust.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_exhaust.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_exhaust.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,11 +1,12 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! PR27304 Test running out of data descriptors with data remaining.\n ! Derived from case in PR.  Submitted by Jerry DeLisle <jvdelisle@gcc.gnu.org>.\n       program test\n       implicit none\n       integer :: n\n       n = 1\n+      open(10, status=\"scratch\")\n       write(10,\"(i7,(' abcd'))\", err=10) n, n\n       call abort()\n- 10   close(10, status=\"delete\")\n+ 10   close(10)\n       end program test"}, {"sha": "6c96f7ba8bf982bf8e799286fe16646c4c95781c", "filename": "gcc/testsuite/gfortran.dg/fmt_t_4.f90", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_t_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_t_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_t_4.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,7 +1,8 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! PR31199, test case from PR report.\n        program write_write\n        character(len=20) :: a,b,c\n+       open(10, status=\"scratch\")\n        write (10,\"(a,t1,a,a)\") \"xxxxxxxxx\", \"abc\", \"def\"\n        write (10,\"(a,t1,a)\",advance='no') \"xxxxxxxxx\", \"abc\"\n        write (10,\"(a)\") \"def\"\n@@ -10,6 +11,7 @@ program write_write\n        read(10,*) a\n        read(10,*) b\n        read(10,*) c\n+       close(10)\n        if (a.ne.b) call abort()\n        IF (b.ne.c) call abort()\n        end"}, {"sha": "9e3c7195a3a327fb6a4e0f7efd7a1890eea1e5b9", "filename": "gcc/testsuite/gfortran.dg/fseek.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ffseek.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Ffseek.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffseek.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n \n PROGRAM test_fseek\n   INTEGER, PARAMETER :: SEEK_SET = 0, SEEK_CUR = 1, SEEK_END = 2, fd=10\n@@ -12,6 +12,7 @@ PROGRAM test_fseek\n   close (911)\n   if (newline_length < 1 .or. newline_length > 2) call abort()\n \n+  open(fd, status=\"scratch\")\n   ! expected position: one leading blank + 10 + newline\n   WRITE(fd, *) \"1234567890\"\n   IF (FTELL(fd) /= 11 + newline_length) CALL abort()"}, {"sha": "14b0d1648a4da07628ae1e49c5a4ab6ff4317cea", "filename": "gcc/testsuite/gfortran.dg/list_read_5.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flist_read_5.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! PR25307 Check handling of end-of-file conditions for list directed reads.\n ! Prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n program pr25307\n@@ -18,6 +18,7 @@ program pr25307\n    if (j.ne.0) call abort()\n ! Check file unit\n    i = 0\n+   open(10, status=\"scratch\")\n    write(10,'(a)') \"123\"\n    rewind(10)\n    read(10, *, end=20) i,j"}, {"sha": "427ba6dc2bf5ae61ae3661fe02a4038d687bdfe7", "filename": "gcc/testsuite/gfortran.dg/namelist_39.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_39.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_39.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_39.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! PR33421 and PR33253 Weird quotation of namelist output of character arrays\n ! Test case from Toon Moone, adapted by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n@@ -9,15 +9,15 @@ program test\n character(len=45) :: b01234567890123456789012345678901234567890123456789012345678901(3)\n namelist /nam/ b01234567890123456789012345678901234567890123456789012345678901\n b01234567890123456789012345678901234567890123456789012345678901 = 'x'\n-open(99)\n+open(99, status=\"scratch\")\n write(99,'(4(a,/),a)') \"&NAM\", &\n       \" b01234567890123456789012345678901234567890123456789012345678901(1)=' AAP NOOT MIES WIM ZUS JET',\", &\n       \" b01234567890123456789012345678901234567890123456789012345678901(2)='SURF.PRESSURE',\", &\n       \" b01234567890123456789012345678901234567890123456789012345678901(3)='APEKOOL',\", &\n       \" /\"\n rewind(99)\n read(99,nml=nam)\n-close(99,status=\"delete\")\n+close(99)\n \n if (b01234567890123456789012345678901234567890123456789012345678901(1).ne.&\n     \" AAP NOOT MIES WIM ZUS JET                   \") call abort"}, {"sha": "658d12f6fcaac93e44c24a7a716112f186043d32", "filename": "gcc/testsuite/gfortran.dg/namelist_56.f90", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_56.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_56.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_56.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! PR37707 Namelist read of array of derived type incorrect\n ! Test case from Tobias Burnus\n   IMPLICIT NONE\n@@ -10,12 +10,13 @@\n   j = -42\n   nlstr = '&nml str = \"a\", \"b\", \"cde\", j = 5 /'\n   read(nlstr,nml)\n+  open(99, status=\"scratch\")\n   write(99,nml)\n   rewind(99)\n   j = -54\n   str = 'XXXX'\n   read(99,nml)\n   if (j.ne.5) call abort\n   if (any(str.ne.[\"a    \",\"b    \",\"cde  \",\"     \"])) call abort\n-  close(99,status=\"delete\")\n+  close(99)\n end"}, {"sha": "539ada496bebca5c57a1cdccef2ad6870705f62c", "filename": "gcc/testsuite/gfortran.dg/read_bad_advance.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_bad_advance.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_bad_advance.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_bad_advance.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! PR27138 Failure to advance line on bad list directed read.\n ! Submitted by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n       program test\n@@ -7,7 +7,7 @@ program test\n       real    :: rtype\n       complex :: ctype\n       logical :: ltype\n-      OPEN (10)\n+      OPEN (10, status=\"scratch\")\n       write(10,*) \"aaaa aaaa aaaa aaaa\"\n       write(10,*) \"bbbb bbbb bbbb bbbb\"\n       write(10,*) \"cccc cccc cccc cccc\"\n@@ -25,8 +25,8 @@ program test\n       goto 99\n    80 READ (10,*,END=99,ERR=99) ntype\n       if (ntype.ne.1234) goto 99\n-      close(10, status=\"delete\")\n+      close(10)\n       stop\n-   99 close(10, status=\"delete\")\n+   99 close(10)\n       call abort()\n       end program test"}, {"sha": "e0bf39ee01bae363b85670cab6b086aae4481a68", "filename": "gcc/testsuite/gfortran.dg/read_repeat.f90", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_repeat.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_repeat.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_repeat.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,4 +1,4 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! PR39528 repeated entries not read when using list-directed input.\n ! Test case derived from reporters example.\n program rread\n@@ -7,6 +7,7 @@ program rread\n \n   iarr = 0\n   \n+  open(10, status=\"scratch\")\n   write(10,*) \" 2*1  3*2 /\"\n   write(10,*) \" 12\"\n   write(10,*) \" 13\"\n@@ -20,5 +21,5 @@ program rread\n   if (any(iarr(6:7).ne.0)) call abort\n   if (ia .ne. 12 .or. ib .ne. 13) call abort\n   \n-  close(10, status=\"delete\")\n+  close(10)\n end program rread"}, {"sha": "e611547b63b36f38f999bb9f61c8ca903ab30e08", "filename": "gcc/testsuite/gfortran.dg/read_size_noadvance.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_size_noadvance.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_size_noadvance.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_size_noadvance.f90?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,12 +1,12 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! PR26890 Test for use of SIZE variable in IO list.\n ! Test case from Paul Thomas.\n ! Submitted by Jerry DeLisle <jvdelisle@gcc.gnu.org>\n \n   character(80) :: buffer, line\n   integer :: nchars\n   line = \"The quick brown fox jumps over the lazy dog.\"\n-  open (10)\n+  open (10, status=\"scratch\")\n   write (10, '(a)') trim(line)\n   rewind (10)\n   read (10, '(a)', advance = 'no', size = nchars, eor = 998) buffer\n@@ -18,6 +18,6 @@\n   read (10, '(a)', advance = 'no', size = nchars, eor = 999) buffer(:nchars)\n 999 if (nchars.ne.44) call abort()\n   if (buffer.ne.line) call abort()\n-  close (10, status=\"delete\")\n+  close (10)\n end\n "}, {"sha": "3d6b01239106f6724bd4f8edcfffa770bfb3a720", "filename": "gcc/testsuite/gfortran.dg/read_x_past.f", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_x_past.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1cba13b4723bbe408605d96a65af353766682/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_x_past.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_x_past.f?ref=20d1cba13b4723bbe408605d96a65af353766682", "patch": "@@ -1,17 +1,17 @@\n-! { dg-do run { target fd_truncate } }\n+! { dg-do run }\n ! { dg-options -w }\n ! PR 26661 : Test reading X's past file end with no LF or CR.\n ! PR 26880 : Tests that rewind clears the gfc_unit read_bad flag.\n ! Contributed by Jerry DeLisle <jvdelisle@gcc.gnu.org>.\n       implicit none\n       character(3) a(4)\n       integer i\n-      open (10)\n+      open (10, status=\"scratch\")\n  10   format(A,$)  ! This is not pedantic\n       write(10,10)' abc def ghi jkl'\n       rewind(10)\n       read(10,20)(a(i),i=1,4)\n       if (a(4).ne.\"jkl\") call abort()\n  20   format(1x,a3,1x,a3,1x,a3,1x,a3,10x)\n-      close(10, status=\"delete\")\n+      close(10)\n       end"}]}