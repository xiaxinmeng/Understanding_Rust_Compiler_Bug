{"sha": "bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ3OTYwYjFlNGNlOWQ2NGIyNjMxZDBiNjQ0ZWI4YmY4Mzg0NTAwNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2009-10-22T22:30:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2009-10-22T22:30:12Z"}, "message": "rtl.h (shallow_copy_rtvec): Declare.\n\ngcc/\n\t* rtl.h (shallow_copy_rtvec): Declare.\n\t* rtl.c (shallow_copy_rtvec): New function.\n\t* cselib.c (cselib_subst_to_values): Use it.  Only modify an\n\trtx field if the subrtx has changed.\n\nFrom-SVN: r153475", "tree": {"sha": "4f4554809ba030c1b41d267109a8f8706fa58231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f4554809ba030c1b41d267109a8f8706fa58231"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a31793e324e29c237dc9e46064280aa626374ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a31793e324e29c237dc9e46064280aa626374ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a31793e324e29c237dc9e46064280aa626374ad"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "18460ea5396efa7a60e8ec2f0f04e7e486707100", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "patch": "@@ -1,3 +1,10 @@\n+2009-10-22  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* rtl.h (shallow_copy_rtvec): Declare.\n+\t* rtl.c (shallow_copy_rtvec): New function.\n+\t* cselib.c (cselib_subst_to_values): Use it.  Only modify an\n+\trtx field if the subrtx has changed.\n+\n 2009-10-22  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/m32c/m32c.c (m32c_function_value_regno_p): New function."}, {"sha": "7065429be8b815bc04735e41d4ecc6f295140d58", "filename": "gcc/cselib.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "patch": "@@ -1422,30 +1422,31 @@ cselib_subst_to_values (rtx x)\n \t{\n \t  rtx t = cselib_subst_to_values (XEXP (x, i));\n \n-\t  if (t != XEXP (x, i) && x == copy)\n-\t    copy = shallow_copy_rtx (x);\n-\n-\t  XEXP (copy, i) = t;\n+\t  if (t != XEXP (x, i))\n+\t    {\n+\t      if (x == copy)\n+\t\tcopy = shallow_copy_rtx (x);\n+\t      XEXP (copy, i) = t;\n+\t    }\n \t}\n       else if (fmt[i] == 'E')\n \t{\n-\t  int j, k;\n+\t  int j;\n \n \t  for (j = 0; j < XVECLEN (x, i); j++)\n \t    {\n \t      rtx t = cselib_subst_to_values (XVECEXP (x, i, j));\n \n-\t      if (t != XVECEXP (x, i, j) && XVEC (x, i) == XVEC (copy, i))\n+\t      if (t != XVECEXP (x, i, j))\n \t\t{\n-\t\t  if (x == copy)\n-\t\t    copy = shallow_copy_rtx (x);\n-\n-\t\t  XVEC (copy, i) = rtvec_alloc (XVECLEN (x, i));\n-\t\t  for (k = 0; k < j; k++)\n-\t\t    XVECEXP (copy, i, k) = XVECEXP (x, i, k);\n+\t\t  if (XVEC (x, i) == XVEC (copy, i))\n+\t\t    {\n+\t\t      if (x == copy)\n+\t\t\tcopy = shallow_copy_rtx (x);\n+\t\t      XVEC (copy, i) = shallow_copy_rtvec (XVEC (x, i));\n+\t\t    }\n+\t\t  XVECEXP (copy, i, j) = t;\n \t\t}\n-\n-\t      XVECEXP (copy, i, j) = t;\n \t    }\n \t}\n     }"}, {"sha": "aefbbf347d935bd3f56d26ae74064e59803a7fe0", "filename": "gcc/rtl.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "patch": "@@ -164,6 +164,20 @@ rtvec_alloc (int n)\n   return rt;\n }\n \n+/* Create a bitwise copy of VEC.  */\n+\n+rtvec\n+shallow_copy_rtvec (rtvec vec)\n+{\n+  rtvec newvec;\n+  int n;\n+\n+  n = GET_NUM_ELEM (vec);\n+  newvec = rtvec_alloc (n);\n+  memcpy (&newvec->elem[0], &vec->elem[0], sizeof (rtx) * n);\n+  return newvec;\n+}\n+\n /* Return the number of bytes occupied by rtx value X.  */\n \n unsigned int"}, {"sha": "0f7044e5e1a97cf4f2bc088228eb68c7228f9c9c", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7960b1e4ce9d64b2631d0b644eb8bf83845005/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "patch": "@@ -1568,6 +1568,7 @@ extern rtx rtx_alloc_stat (RTX_CODE MEM_STAT_DECL);\n #define rtx_alloc(c) rtx_alloc_stat (c MEM_STAT_INFO)\n \n extern rtvec rtvec_alloc (int);\n+extern rtvec shallow_copy_rtvec (rtvec);\n extern bool shared_const_p (const_rtx);\n extern rtx copy_rtx (rtx);\n extern void dump_rtx_statistics (void);"}]}