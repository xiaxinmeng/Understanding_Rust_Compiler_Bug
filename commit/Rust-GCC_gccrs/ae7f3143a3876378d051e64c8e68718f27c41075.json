{"sha": "ae7f3143a3876378d051e64c8e68718f27c41075", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU3ZjMxNDNhMzg3NjM3OGQwNTFlNjRjOGU2ODcxOGYyN2M0MTA3NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-10-21T11:32:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-10-21T11:32:25Z"}, "message": "re PR tree-optimization/92161 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1687)\n\n2019-10-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92161\n\t* tree-vect-loop.c (vect_analyze_loop_2): Reset stmts def-type\n\tfor reductions.\n\n\t* gfortran.dg/pr92161.f: New testcase.\n\nFrom-SVN: r277240", "tree": {"sha": "07edf24212b9ed0a52b0eaed486a193707dee60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07edf24212b9ed0a52b0eaed486a193707dee60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae7f3143a3876378d051e64c8e68718f27c41075", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae7f3143a3876378d051e64c8e68718f27c41075", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae7f3143a3876378d051e64c8e68718f27c41075", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae7f3143a3876378d051e64c8e68718f27c41075/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5dc215df17071281c21450fa2d584e1161e4bc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5dc215df17071281c21450fa2d584e1161e4bc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5dc215df17071281c21450fa2d584e1161e4bc2"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "259550ffc410e309540aea6acb46024b66226922", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7f3143a3876378d051e64c8e68718f27c41075/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7f3143a3876378d051e64c8e68718f27c41075/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae7f3143a3876378d051e64c8e68718f27c41075", "patch": "@@ -1,3 +1,9 @@\n+2019-10-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92161\n+\t* tree-vect-loop.c (vect_analyze_loop_2): Reset stmts def-type\n+\tfor reductions.\n+\n 2019-10-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.md (UNSPEC_RNDR, UNSPEC_RNDRRS): Define."}, {"sha": "d958e642ee08c5b2f47db5d4cd49b1ab5544b1a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7f3143a3876378d051e64c8e68718f27c41075/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7f3143a3876378d051e64c8e68718f27c41075/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae7f3143a3876378d051e64c8e68718f27c41075", "patch": "@@ -1,3 +1,8 @@\n+2019-10-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92161\n+\t* gfortran.dg/pr92161.f: New testcase.\n+\n 2019-10-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/acle/rng_1.c: New test."}, {"sha": "11f1edf6ac0779f1a88296276b6b3c8a19327bad", "filename": "gcc/testsuite/gfortran.dg/pr92161.f", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7f3143a3876378d051e64c8e68718f27c41075/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92161.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7f3143a3876378d051e64c8e68718f27c41075/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92161.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92161.f?ref=ae7f3143a3876378d051e64c8e68718f27c41075", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! { dg-options \"-O1 -ftree-loop-vectorize -fno-signed-zeros -fno-trapping-math\" }\n+! { dg-additional-options \"-mvsx\" { target { powerpc*-*-* } } }\n+      COMPLEX FUNCTION R1 (ZR, CC, EA, U6)\n+\n+      INTEGER ZR, U6, FZ, J2\n+      COMPLEX EA(*), CC\n+      DOUBLE PRECISION OS, GA, YU, XT\n+\n+      OS = DBLE(REAL(CC))\n+      GA = DBLE(AIMAG(CC))\n+      J2 = 1\n+\n+      DO 5 FZ = 1, ZR\n+        YU = DBLE(REAL(EA(J2)))\n+        XT = DBLE(AIMAG(EA(J2)))\n+        OS = OS + (YU * 2) - (XT * 2)\n+        GA = GA + (YU * 3) + (XT * 3)\n+        J2 = J2 + U6\n+    5 CONTINUE\n+      R1 = CMPLX(REAL(OS), REAL(GA))\n+      RETURN\n+      END"}, {"sha": "a7f19ca4beb367f32ef6d68edbae4ec834dc7158", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7f3143a3876378d051e64c8e68718f27c41075/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7f3143a3876378d051e64c8e68718f27c41075/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=ae7f3143a3876378d051e64c8e68718f27c41075", "patch": "@@ -2260,6 +2260,17 @@ vect_analyze_loop_2 (loop_vec_info loop_vinfo, bool &fatal, unsigned *n_stmts)\n \t{\n \t  stmt_vec_info stmt_info = loop_vinfo->lookup_stmt (gsi_stmt (si));\n \t  STMT_SLP_TYPE (stmt_info) = loop_vect;\n+\t  if (STMT_VINFO_DEF_TYPE (stmt_info) == vect_reduction_def\n+\t      || STMT_VINFO_DEF_TYPE (stmt_info) == vect_double_reduction_def)\n+\t    {\n+\t      /* vectorizable_reduction adjusts reduction stmt def-types,\n+\t\t restore them to that of the PHI.  */\n+\t      STMT_VINFO_DEF_TYPE (STMT_VINFO_REDUC_DEF (stmt_info))\n+\t\t= STMT_VINFO_DEF_TYPE (stmt_info);\n+\t      STMT_VINFO_DEF_TYPE (vect_stmt_to_vectorize\n+\t\t\t\t\t(STMT_VINFO_REDUC_DEF (stmt_info)))\n+\t\t= STMT_VINFO_DEF_TYPE (stmt_info);\n+\t    }\n \t}\n       for (gimple_stmt_iterator si = gsi_start_bb (bb);\n \t   !gsi_end_p (si); gsi_next (&si))"}]}