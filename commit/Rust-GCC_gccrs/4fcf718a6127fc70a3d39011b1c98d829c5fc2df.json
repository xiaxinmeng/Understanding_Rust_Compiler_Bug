{"sha": "4fcf718a6127fc70a3d39011b1c98d829c5fc2df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZjZjcxOGE2MTI3ZmM3MGEzZDM5MDExYjFjOThkODI5YzVmYzJkZg==", "commit": {"author": {"name": "Bingfeng Mei", "email": "bmei@broadcom.com", "date": "2010-10-21T15:16:01Z"}, "committer": {"name": "Bingfeng Mei", "email": "meibf@gcc.gnu.org", "date": "2010-10-21T15:16:01Z"}, "message": "re PR rtl-optimization/45834 (Redundant inter-loop edges in DDG)\n\n2010-10-21  Bingfeng Mei  <bmei@broadcom.com>\n\n\tPR c/45834\n        * alias.c (true_dependence_1): Remove obsolete check for QImode.\n        (may_alias_p): Ditto.\n\nFrom-SVN: r165781", "tree": {"sha": "b60f8e8fc13fc82f35ef0189c4468147049ea922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b60f8e8fc13fc82f35ef0189c4468147049ea922"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fcf718a6127fc70a3d39011b1c98d829c5fc2df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fcf718a6127fc70a3d39011b1c98d829c5fc2df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fcf718a6127fc70a3d39011b1c98d829c5fc2df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fcf718a6127fc70a3d39011b1c98d829c5fc2df/comments", "author": null, "committer": null, "parents": [{"sha": "ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1f6fcec0d9a0a0551578915a7a83c39be894aa"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "51228ec0d725749518b27e7b59cbf78812049c76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fcf718a6127fc70a3d39011b1c98d829c5fc2df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fcf718a6127fc70a3d39011b1c98d829c5fc2df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fcf718a6127fc70a3d39011b1c98d829c5fc2df", "patch": "@@ -1,3 +1,9 @@\n+2010-10-21  Bingfeng Mei  <bmei@broadcom.com>\n+\n+\tPR c/45834\n+        * alias.c (true_dependence_1): Remove obsolete check for QImode.\n+        (may_alias_p): Ditto.\n+        \n 2010-10-21  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/45875"}, {"sha": "2e0ac06ce44219980785ac408455fd5d84422c24", "filename": "gcc/alias.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fcf718a6127fc70a3d39011b1c98d829c5fc2df/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fcf718a6127fc70a3d39011b1c98d829c5fc2df/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=4fcf718a6127fc70a3d39011b1c98d829c5fc2df", "patch": "@@ -2459,7 +2459,7 @@ true_dependence_1 (const_rtx mem, enum machine_mode mem_mode, rtx mem_addr,\n \n   /* We cannot use aliases_everything_p to test MEM, since we must look\n      at MEM_ADDR, rather than XEXP (mem, 0).  */\n-  if (mem_mode == QImode || GET_CODE (mem_addr) == AND)\n+  if (GET_CODE (mem_addr) == AND)\n     return 1;\n \n   /* ??? In true_dependence we also allow BLKmode to alias anything.  Why\n@@ -2655,7 +2655,7 @@ may_alias_p (const_rtx mem, const_rtx x)\n \n   /* We cannot use aliases_everything_p to test MEM, since we must look\n      at MEM_ADDR, rather than XEXP (mem, 0).  */\n-  if (GET_MODE (mem) == QImode || GET_CODE (mem_addr) == AND)\n+  if (GET_CODE (mem_addr) == AND)\n     return 1;\n \n   if (fixed_scalar_and_varying_struct_p (mem, x, mem_addr, x_addr,"}]}