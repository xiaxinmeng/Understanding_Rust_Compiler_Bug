{"sha": "efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZlMGU2Y2QyMTQ3NzAzM2QxYjYyMzQzZjYxZmVmYTBmYzRlYTZkMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-07-20T11:13:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-07-20T11:13:47Z"}, "message": "re PR debug/86585 (ICE in gen_member_die, at dwarf2out.c:24935)\n\n2018-07-20  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/86585\n\t* dwarf2out.c (dwarf2out_die_ref_for_decl): Test in_lto_p\n\tto cover -flto-partition=none.\n\t\n\tlto/\n\t* lto.c (unify_scc): Before we throw away an SCC see if we\n\tcan amend prevailing single-entry SCC with debug refs.\n\n\t* g++.dg/lto/pr86585_0.C: New testcase.\n\t* g++.dg/lto/pr86585_1.C: Likewise.\n\nFrom-SVN: r262901", "tree": {"sha": "0235db53e067d1a79e09b22cca7388dc37b3423e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0235db53e067d1a79e09b22cca7388dc37b3423e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e51aacb1c5b97b07438a62e7654507c6c7a9986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e51aacb1c5b97b07438a62e7654507c6c7a9986", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e51aacb1c5b97b07438a62e7654507c6c7a9986"}], "stats": {"total": 85, "additions": 80, "deletions": 5}, "files": [{"sha": "b21ded86fb4954a21e8d9324e817d1219fc3ffe4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "patch": "@@ -1,3 +1,9 @@\n+2018-07-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/86585\n+\t* dwarf2out.c (dwarf2out_die_ref_for_decl): Test in_lto_p\n+\tto cover -flto-partition=none.\n+\n 2018-07-20  Martin Liska  <mliska@suse.cz>\n \n \t* tree.h (DECL_LOCATION_RANGE): Remove unused macro."}, {"sha": "8377cbc5dd1a97cf6a6759d5b52d29b49011845f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "patch": "@@ -5851,8 +5851,7 @@ dwarf2out_die_ref_for_decl (tree decl, const char **sym,\n {\n   dw_die_ref die;\n \n-  if ((flag_wpa || flag_incremental_link == INCREMENTAL_LINK_LTO)\n-      && !decl_die_table)\n+  if (in_lto_p && !decl_die_table)\n     return false;\n \n   if (TREE_CODE (decl) == BLOCK)\n@@ -5865,8 +5864,7 @@ dwarf2out_die_ref_for_decl (tree decl, const char **sym,\n   /* During WPA stage and incremental linking we currently use DIEs\n      to store the decl <-> label + offset map.  That's quite inefficient\n      but it works for now.  */\n-  if (flag_wpa\n-      || flag_incremental_link == INCREMENTAL_LINK_LTO)\n+  if (in_lto_p)\n     {\n       dw_die_ref ref = get_AT_ref (die, DW_AT_abstract_origin);\n       if (!ref)"}, {"sha": "209a83897647dbba4661c1c54e2d88f542ce7841", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "patch": "@@ -1,3 +1,9 @@\n+2018-07-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/86585\n+\t* lto.c (unify_scc): Before we throw away an SCC see if we\n+\tcan amend prevailing single-entry SCC with debug refs.\n+\n 2018-07-13  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto.c (do_stream_out): Add PART parameter; open dump file."}, {"sha": "8db280ecefc7ba7e894d5f43fd3b789f6eea5f74", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "patch": "@@ -1638,6 +1638,21 @@ unify_scc (struct data_in *data_in, unsigned from,\n \t     to the tree node mapping computed by compare_tree_sccs.  */\n \t  if (len == 1)\n \t    {\n+\t      /* If we got a debug reference queued, see if the prevailing\n+\t         tree has a debug reference and if not, register the one\n+\t\t for the tree we are about to throw away.  */\n+\t      if (dref_queue.length () == 1)\n+\t\t{\n+\t\t  dref_entry e = dref_queue.pop ();\n+\t\t  gcc_assert (e.decl\n+\t\t\t      == streamer_tree_cache_get_tree (cache, from));\n+\t\t  const char *sym;\n+\t\t  unsigned HOST_WIDE_INT off;\n+\t\t  if (!debug_hooks->die_ref_for_decl (pscc->entries[0], &sym,\n+\t\t\t\t\t\t      &off))\n+\t\t    debug_hooks->register_external_die (pscc->entries[0],\n+\t\t\t\t\t\t\te.sym, e.off);\n+\t\t}\n \t      lto_maybe_register_decl (data_in, pscc->entries[0], from);\n \t      streamer_tree_cache_replace_tree (cache, pscc->entries[0], from);\n \t    }\n@@ -1669,7 +1684,9 @@ unify_scc (struct data_in *data_in, unsigned from,\n \t      free_node (scc->entries[i]);\n \t    }\n \n-\t  /* Drop DIE references.  */\n+\t  /* Drop DIE references.\n+\t     ???  Do as in the size-one SCC case which involves sorting\n+\t     the queue.  */\n \t  dref_queue.truncate (0);\n \n \t  break;"}, {"sha": "10c547c7d14cf0a7b1259396918debde4385044c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "patch": "@@ -1,3 +1,9 @@\n+2018-07-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/86585\n+\t* g++.dg/lto/pr86585_0.C: New testcase.\n+\t* g++.dg/lto/pr86585_1.C: Likewise.\n+\n 2018-07-19  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/83776"}, {"sha": "2c3ae9da414d78789616c4346dedf904edb934bb", "filename": "gcc/testsuite/g++.dg/lto/pr86585_0.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr86585_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr86585_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr86585_0.C?ref=efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "patch": "@@ -0,0 +1,18 @@\n+// { dg-lto-do link }\n+// { dg-require-effective-target fpic }\n+// { dg-require-effective-target shared }\n+// { dg-lto-options { { -flto -g -nostdlib -shared -fPIC } } }\n+namespace Inkscape {\n+    class a;\n+}\n+class b {\n+    Inkscape::a *c;\n+    virtual void d();\n+};\n+class e {\n+    b f;\n+};\n+class g : e {\n+    void h();\n+};\n+void g::h() {}"}, {"sha": "ebcbe12676816f7d939d7e661a900fe58e5e7f78", "filename": "gcc/testsuite/g++.dg/lto/pr86585_1.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr86585_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efe0e6cd21477033d1b62343f61fefa0fc4ea6d1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr86585_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr86585_1.C?ref=efe0e6cd21477033d1b62343f61fefa0fc4ea6d1", "patch": "@@ -0,0 +1,24 @@\n+struct a {\n+    struct b {\n+\tb();\n+    } c;\n+};\n+class d {\n+    a e;\n+};\n+namespace aa {\n+    class h {};\n+} // namespace aa\n+class k {\n+    typedef aa::h f;\n+    f g;\n+};\n+namespace Inkscape {\n+    class l {\n+\tk i;\n+class : d {\n+\t} j;\n+\tl();\n+    };\n+    l::l() {}\n+} // namespace Inkscape"}]}