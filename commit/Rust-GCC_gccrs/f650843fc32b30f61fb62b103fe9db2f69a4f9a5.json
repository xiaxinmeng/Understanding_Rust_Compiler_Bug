{"sha": "f650843fc32b30f61fb62b103fe9db2f69a4f9a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY1MDg0M2ZjMzJiMzBmNjFmYjYyYjEwM2ZlOWRiMmY2OWE0ZjlhNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-03-14T14:49:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-14T14:49:40Z"}, "message": "re PR rtl-optimization/8396 ([sparc] optimizer ICE)\n\n\tPR optimization/8396\n\t* tree-inline.c (initialize_inlined_parameters): Make sure the value\n\tof read-only constant arguments is passed with the right type.\n\nFrom-SVN: r64358", "tree": {"sha": "ab93e5cfe788a29c52543d1ab05815ba0f50d7bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab93e5cfe788a29c52543d1ab05815ba0f50d7bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f650843fc32b30f61fb62b103fe9db2f69a4f9a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f650843fc32b30f61fb62b103fe9db2f69a4f9a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f650843fc32b30f61fb62b103fe9db2f69a4f9a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70e2e8dc1dcf67876829f1ff69fe77258613394b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e2e8dc1dcf67876829f1ff69fe77258613394b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e2e8dc1dcf67876829f1ff69fe77258613394b"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "3069374696f0ce878a0b68de9ea80a432cdf00c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f650843fc32b30f61fb62b103fe9db2f69a4f9a5", "patch": "@@ -1,3 +1,9 @@\n+2003-03-14  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR optimization/8396\n+\t* tree-inline.c (initialize_inlined_parameters): Make sure the value\n+\tof read-only constant arguments is passed with the right type.\n+\n 2003-03-14  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* doc/extend.texi (Function Names): Make the example compilable."}, {"sha": "d27bf6e1de7352e43b620689d521b1013aac4e72", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f650843fc32b30f61fb62b103fe9db2f69a4f9a5", "patch": "@@ -1,3 +1,7 @@\n+2003-03-14  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/compile/20030314-1.c: New test.\n+\n 2003-03-13  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* gcc.dg/dll-1.c: Remove thumb target. Change exp to _exp. "}, {"sha": "02d4fed526aec6d140763be27763647759804c33", "filename": "gcc/testsuite/gcc.c-torture/compile/20030314-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030314-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030314-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030314-1.c?ref=f650843fc32b30f61fb62b103fe9db2f69a4f9a5", "patch": "@@ -0,0 +1,18 @@\n+/* PR optimization/8396 */\n+/* Originator: <papadopo@shfj.cea.fr> */\n+\n+/* Verify that the tree inliner doesn't mess up the types\n+   when passing the value of read-only constant arguments.  */\n+\n+static inline bar(const short int xs, const short int xe)\n+{\n+  if (xe && (xs < xe))\n+    ;\n+}\n+  \n+void f()\n+{\n+  short int xe;\n+\n+  bar(0, xe);\n+}"}, {"sha": "be72b59c213ab54876ed1f09be19109201133dd7", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f650843fc32b30f61fb62b103fe9db2f69a4f9a5/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=f650843fc32b30f61fb62b103fe9db2f69a4f9a5", "patch": "@@ -666,6 +666,10 @@ initialize_inlined_parameters (id, args, fn, block)\n \t      if (DECL_P (value))\n \t\tvalue = build1 (NOP_EXPR, TREE_TYPE (value), value);\n \n+\t      /* If this is a constant, make sure it has the right type.  */\n+\t      else if (TREE_TYPE (value) != TREE_TYPE (p))\n+\t\tvalue = fold (build1 (NOP_EXPR, TREE_TYPE (p), value));\n+\n \t      splay_tree_insert (id->decl_map,\n \t\t\t\t (splay_tree_key) p,\n \t\t\t\t (splay_tree_value) value);"}]}