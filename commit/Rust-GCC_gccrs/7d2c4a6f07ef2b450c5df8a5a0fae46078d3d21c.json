{"sha": "7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "node_id": "C_kwDOANBUbNoAKDdkMmM0YTZmMDdlZjJiNDUwYzVkZjhhNWEwZmFlNDYwNzhkM2QyMWM", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:17:04Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:09Z"}, "message": "RISC-V: Add vsext.vf2 C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vsext_vf2-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsext_vf2_tumu-3.c: New test.", "tree": {"sha": "d94b1fc61ce9f28e72f9c9968bf4113bac08f914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d94b1fc61ce9f28e72f9c9968bf4113bac08f914"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42666defc0d9a2aa4c152874008062bb67f48f59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42666defc0d9a2aa4c152874008062bb67f48f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42666defc0d9a2aa4c152874008062bb67f48f59"}], "stats": {"total": 1998, "additions": 1998, "deletions": 0}, "files": [{"sha": "eb8fdb8adffd1e1817a3eff6329bd75f0f921909", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-1.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4(op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2(op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1(op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2(op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4(op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8(op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2(op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1(op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2(op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4(op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8(op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1(op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2(op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4(op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8(op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "dce1aa2adf0817a47739872ea0dea6e6bb51bda9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-2.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4(op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2(op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1(op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2(op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4(op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8(op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2(op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1(op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2(op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4(op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8(op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1(op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2(op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4(op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8(op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "98f43bcea358c3fafd2138f2839d4b6c95a7b15a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2-3.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4(vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4(op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2(vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2(op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1(vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1(op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2(vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2(op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4(vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4(op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8(vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8(op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2(vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2(op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1(vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1(op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2(vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2(op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4(vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4(op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8(vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8(op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1(vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1(op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2(vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2(op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4(vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4(op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8(vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8(op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "8f7ad903e1b8a1984c57c2e12d3809f6841a092d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_m-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-1.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_m(mask,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_m(mask,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_m(mask,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_m(mask,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_m(mask,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_m(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_m(mask,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_m(mask,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_m(mask,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_m(mask,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_m(mask,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_m(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_m(mask,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_m(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_m(mask,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_m(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_m(mask,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_m(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_m(mask,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_m(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_m(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "8d0573f03a6b076265fd5ac53bbb0d9006f0895e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_m-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-2.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_m(mask,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_m(mask,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_m(mask,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_m(mask,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_m(mask,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_m(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_m(mask,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_m(mask,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_m(mask,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_m(mask,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_m(mask,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_m(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_m(mask,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_m(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_m(mask,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_m(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_m(mask,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_m(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_m(mask,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_m(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_m(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "b7151d3204ba1ad767db23b340c78e763b3dea12", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_m-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_m-3.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_m(vbool64_t mask,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_m(mask,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_m(vbool32_t mask,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_m(mask,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_m(vbool16_t mask,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_m(mask,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_m(vbool8_t mask,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_m(mask,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_m(vbool4_t mask,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_m(mask,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_m(vbool2_t mask,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_m(mask,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_m(vbool64_t mask,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_m(mask,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_m(vbool32_t mask,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_m(mask,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_m(vbool16_t mask,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_m(mask,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_m(vbool8_t mask,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_m(mask,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_m(vbool4_t mask,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_m(mask,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_m(vbool64_t mask,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_m(mask,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_m(vbool32_t mask,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_m(mask,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_m(vbool16_t mask,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_m(mask,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_m(vbool8_t mask,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_m(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "3289fe5bcd6adf5cd9464f21d3de34e1c65f5cd8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_mu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-1.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "26c26e5d2cf223e0db6ad92767f2e89182a0c878", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_mu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-2.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "d60387eac796c651dc783dcd2f945be5db06b60f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_mu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_mu-3.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4394514f7c8054387d5f4d04a0e813a922a774f1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-1.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tu(vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tu(merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tu(vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tu(vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tu(vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tu(vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tu(vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tu(merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tu(vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tu(vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tu(vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tu(vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tu(vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tu(vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tu(vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tu(vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tu(merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tu(vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "0d010e02331325670673e5ae04dc48807b3820ba", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-2.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tu(vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tu(merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tu(vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tu(merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tu(vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tu(merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tu(vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tu(merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tu(vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tu(merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tu(vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tu(merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tu(vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tu(vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tu(merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tu(vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tu(merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tu(vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tu(merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tu(vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tu(merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tu(vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tu(merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tu(vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tu(merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tu(vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tu(merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tu(vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "04443df8a336ca1b7a874320e6add8c05bba7461", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tu-3.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tu(vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tu(merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tu(vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tu(merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tu(vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tu(merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tu(vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tu(merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tu(vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tu(merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tu(vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tu(merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tu(vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tu(vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tu(merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tu(vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tu(merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tu(vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tu(merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tu(vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tu(merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tu(vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tu(merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tu(vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tu(merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tu(vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tu(merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tu(vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "4742235648275ba3dfb06f7470c1d02915a8192e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tum-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-1.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4a523e2780703f2f868c386408274750f5ebef4a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tum-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-2.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "c524b7bcffe07f57be8750f36750c96af01c4033", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tum-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tum-3.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "5bdb267a43a3e709d7f7266b2555c022397483ed", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tumu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-1.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "e1c7b1a5ede0cccc12ab17a9632910e12904f1c1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tumu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-2.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "995b2a78d87f852cbfa27f9acecec4a39a090393", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsext_vf2_tumu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsext_vf2_tumu-3.c?ref=7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vsext_vf2_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsext_vf2_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsext_vf2_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsext_vf2_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsext_vf2_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsext_vf2_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i16m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsext_vf2_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsext_vf2_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsext_vf2_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsext_vf2_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsext_vf2_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i32m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsext_vf2_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsext_vf2_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsext_vf2_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsext_vf2_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,size_t vl)\n+{\n+    return __riscv_vsext_vf2_i64m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vsext\\.vf2\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}