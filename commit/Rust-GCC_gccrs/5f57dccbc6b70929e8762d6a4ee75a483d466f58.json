{"sha": "5f57dccbc6b70929e8762d6a4ee75a483d466f58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY1N2RjY2JjNmI3MDkyOWU4NzYyZDZhNGVlNzVhNDgzZDQ2NmY1OA==", "commit": {"author": {"name": "David Li", "email": "davidxl@google.com", "date": "2011-06-01T17:45:26Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2011-06-01T17:45:26Z"}, "message": "Pass name cleanups\n\nFrom-SVN: r174537", "tree": {"sha": "49323777d9d786094d8465343ff5af689045a503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49323777d9d786094d8465343ff5af689045a503"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f57dccbc6b70929e8762d6a4ee75a483d466f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f57dccbc6b70929e8762d6a4ee75a483d466f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f57dccbc6b70929e8762d6a4ee75a483d466f58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f57dccbc6b70929e8762d6a4ee75a483d466f58/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6cf778dd408c1f4a0a929f5b7b0896843250a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6cf778dd408c1f4a0a929f5b7b0896843250a1"}], "stats": {"total": 153, "additions": 91, "deletions": 62}, "files": [{"sha": "e476e6b991bf329947a7aa743bcc0d1146b07f62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,3 +1,11 @@\n+2011-06-01  David Li  <davidxl@google.com>\n+\n+\t* predict.c : Change pass name\n+\t* ipa.c: Ditto.\n+\t* dce.c: Ditto.\n+\t* tree-profile.c: Ditto.\n+\t* except.c: Ditto.\n+\n 2011-06-01  David Li  <davidxl@google.com>\n \n \t* tree-pretty-print.c (dump_function_header): New function."}, {"sha": "ec54c6681b8a13b77f4761a936fbcea4f5919d0d", "filename": "gcc/dce.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -734,7 +734,7 @@ struct rtl_opt_pass pass_ud_rtl_dce =\n {\n  {\n   RTL_PASS,\n-  \"ud dce\",                             /* name */\n+  \"ud_dce\",                             /* name */\n   gate_ud_dce,                          /* gate */\n   rest_of_handle_ud_dce,                /* execute */\n   NULL,                                 /* sub */\n@@ -1086,7 +1086,7 @@ struct rtl_opt_pass pass_fast_rtl_dce =\n {\n  {\n   RTL_PASS,\n-  \"rtl dce\",                            /* name */\n+  \"rtl_dce\",                            /* name */\n   gate_fast_dce,                        /* gate */\n   rest_of_handle_fast_dce,              /* execute */\n   NULL,                                 /* sub */"}, {"sha": "1e5c291055fe700f62a6f2cea7906262cb1ce05c", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1457,7 +1457,7 @@ struct rtl_opt_pass pass_rtl_eh =\n {\n  {\n   RTL_PASS,\n-  \"rtl eh\",                             /* name */\n+  \"rtl_eh\",                             /* name */\n   gate_handle_eh,                       /* gate */\n   rest_of_handle_eh,\t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "f40c0aa2efb3c7f8491f0439fd7b08b521e2b10d", "filename": "gcc/ipa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1145,7 +1145,7 @@ struct ipa_opt_pass_d pass_ipa_profile =\n {\n  {\n   IPA_PASS,\n-  \"ipa-profile\",\t\t\t/* name */\n+  \"profile_estimate\",\t\t\t/* name */\n   gate_ipa_profile,\t\t\t/* gate */\n   ipa_profile,\t\t\t        /* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "870526bc6b3f8809d1b26197bc247cc511246a75", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -2306,7 +2306,7 @@ struct gimple_opt_pass pass_profile =\n {\n  {\n   GIMPLE_PASS,\n-  \"profile\",\t\t\t\t/* name */\n+  \"profile_estimate\",\t\t\t/* name */\n   gate_estimate_probability,\t\t/* gate */\n   tree_estimate_probability_driver,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "07ab924759fd09e7493a5c77a3dc56742e356708", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,3 +1,24 @@\n+2011-06-01  David Li  <davidxl@google.com>\n+\n+\t* testsuite/gcc.dg/profile-dir-1.c: Change pass name.\n+\t* testsuite/gcc.dg/profile-dir-2.c: Ditto.\n+\t* testsuite/gcc.dg/tree-ssa/dump-1.c: Ditto.\n+\t* testsuite/gcc.dg/tree-ssa/loop-25.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/stringop-1.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/update-loopch.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/stringop-2.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/ic-misattribution-1.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/ic-misattribution-1a.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/indir-call-prof.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/val-prof-1.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/val-prof-2.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/val-prof-3.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/val-prof-4.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/val-prof-5.c: Ditto.\n+\t* testsuite/gcc.dg/tree-prof/val-prof-7.c: Ditto.\n+\t* testsuite/gcc.dg/profile-dir-3.c: Ditto.\n+\t* testsuite/g++.dg/tree-prof/indir-call-prof.C: Ditto.\n+\n 2011-06-01  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/attributes/method-nonnull-1.m: New test."}, {"sha": "91874a30e045e147e1977a1d780f793d05ee5b8e", "filename": "gcc/testsuite/g++.dg/tree-prof/indir-call-prof.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n \n struct A {\n   A () {}\n@@ -33,7 +33,7 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final-use { scan-ipa-dump \"Indirect call -> direct call.* AA transformation on insn\" \"tree_profile_ipa\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Indirect call -> direct call.* AA transformation on insn\" \"profile\" } } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\" } } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "97763721abc6cc333dc3d715201d8e48e7fa7930", "filename": "gcc/testsuite/gcc.dg/profile-dir-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-1.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fprofile-generate=. -fdump-ipa-tree_profile_ipa\" } */\n-/* { dg-final { scan-ipa-dump \" ./profile-dir-1.gcda\" \"tree_profile_ipa\" } } */\n+/* { dg-options \"-O -fprofile-generate=. -fdump-ipa-profile\" } */\n+/* { dg-final { scan-ipa-dump \" ./profile-dir-1.gcda\" \"profile\" } } */\n \n int\n main(void)\n {\n   return 0;\n }\n \n-/* { dg-final { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "d49dcc376058ea60e47550a4cb0c6550f32c3598", "filename": "gcc/testsuite/gcc.dg/profile-dir-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-2.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fprofile-generate -fdump-ipa-tree_profile_ipa\" } */\n-/* { dg-final { scan-ipa-dump \"/profile-dir-2.gcda\" \"tree_profile_ipa\" } } */\n+/* { dg-options \"-O -fprofile-generate -fdump-ipa-profile\" } */\n+/* { dg-final { scan-ipa-dump \"/profile-dir-2.gcda\" \"profile\" } } */\n \n int\n main(void)\n {\n   return 0;\n }\n \n-/* { dg-final { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "0ae329d4698f42af2bfddc11b62af82575d94456", "filename": "gcc/testsuite/gcc.dg/profile-dir-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-dir-3.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fprofile-generate -fprofile-dir=. -fdump-ipa-tree_profile_ipa\" } */\n-/* { dg-final { scan-ipa-dump \" ./profile-dir-3.gcda\" \"tree_profile_ipa\" } } */\n+/* { dg-options \"-O -fprofile-generate -fprofile-dir=. -fdump-ipa-profile\" } */\n+/* { dg-final { scan-ipa-dump \" ./profile-dir-3.gcda\" \"profile\" } } */\n \n int\n main(void)\n {\n   return 0;\n }\n \n-/* { dg-final { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "e9f3a418dca9ad2c64aae7f641fb67609a824cfd", "filename": "gcc/testsuite/gcc.dg/tree-prof/ic-misattribution-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-ipa-profile\" } */\n /* { dg-additional-sources \"ic-misattribution-1a.c\" } */\n \n extern void other_caller (void);\n@@ -15,5 +15,5 @@ caller(void (*func) (void))\n   func ();\n }\n \n-/* { dg-final-use { scan-ipa-dump \"hist->count 1 hist->all 1\" \"tree_profile_ipa\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { scan-ipa-dump \"hist->count 1 hist->all 1\" \"profile\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "fa9d6e70522eced5faaa2e392c4a2c81796e60e2", "filename": "gcc/testsuite/gcc.dg/tree-prof/ic-misattribution-1a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1a.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -19,4 +19,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "df7481f4daff484c45f4259d4034d336cf80f5d0", "filename": "gcc/testsuite/gcc.dg/tree-prof/indir-call-prof.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n \n static int a1 (void)\n {\n@@ -37,7 +37,7 @@ main (void)\n   return 0;\n }\n \n-/* { dg-final-use { scan-ipa-dump \"Indirect call -> direct call.* a1 transformation on insn\" \"tree_profile_ipa\"} } */\n+/* { dg-final-use { scan-ipa-dump \"Indirect call -> direct call.* a1 transformation on insn\" \"profile\"} } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "f73061387321f255b1ed34b0fdd35663024c5d3e", "filename": "gcc/testsuite/gcc.dg/tree-prof/stringop-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-1.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n int a[1000];\n int b[1000];\n int size=1;\n@@ -13,10 +13,10 @@ main()\n     }\n    return 0;\n }\n-/* { dg-final-use { scan-ipa-dump \"Single value 4 stringop\" \"tree_profile_ipa\"} } */\n+/* { dg-final-use { scan-ipa-dump \"Single value 4 stringop\" \"profile\"} } */\n /* Really this ought to simplify into assignment, but we are not there yet.  */\n /* a[0] = b[0] is what we fold the resulting memcpy into.  */\n /* { dg-final-use { scan-tree-dump \" = MEM.*&b\" \"optimized\"} } */\n /* { dg-final-use { scan-tree-dump \"MEM.*&a\\\\\\] = \" \"optimized\"} } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "d5c58561be24a4606d755f60969072809b288f18", "filename": "gcc/testsuite/gcc.dg/tree-prof/stringop-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-2.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n int a[1000];\n int b[1000];\n int size=1;\n@@ -13,8 +13,8 @@ main()\n     }\n    return 0;\n }\n-/* { dg-final-use { scan-ipa-dump \"Single value 4 stringop\" \"tree_profile_ipa\"} } */\n+/* { dg-final-use { scan-ipa-dump \"Single value 4 stringop\" \"profile\"} } */\n /* The versioned memset of size 4 should be optimized to an assignment.  */\n /* { dg-final-use { scan-tree-dump \"a\\\\\\[0\\\\\\] = 168430090\" \"optimized\"} } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "2bce8a2e5ffaca4dd4c080a5d5c08af35febb781", "filename": "gcc/testsuite/gcc.dg/tree-prof/update-loopch.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fupdate-loopch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fupdate-loopch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fupdate-loopch.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-ipa-tree_profile_ipa-blocks -fdump-tree-optimized-blocks\" } */\n+/* { dg-options \"-O2 -fdump-ipa-profile-blocks -fdump-tree-optimized-blocks\" } */\n int max = 33333;\n int a[8];\n int\n@@ -14,8 +14,8 @@ main ()\n /* Loop header copying will peel away the initial conditional, so the loop body\n    is once reached directly from entry point of function, rest via loopback\n    edge.  */\n-/* { dg-final-use { scan-ipa-dump \"count:33333\" \"tree_profile_ipa\"} } */\n+/* { dg-final-use { scan-ipa-dump \"count:33333\" \"profile\"} } */\n /* { dg-final-use { scan-tree-dump \"count:33332\" \"optimized\"} } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "d6f603e8b3cb5aa3ca69a16462488b08aaa7806c", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-1.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n int a[1000];\n int b = 256;\n int c = 257;\n@@ -15,8 +15,8 @@ main ()\n     }\n   return 0;\n }\n-/* { dg-final-use { scan-ipa-dump \"Div.mod by constant n_\\[0-9\\]*=257 transformation on insn\" \"tree_profile_ipa\"} } */\n+/* { dg-final-use { scan-ipa-dump \"Div.mod by constant n_\\[0-9\\]*=257 transformation on insn\" \"profile\"} } */\n /* { dg-final-use { scan-tree-dump \"if \\\\(n_\\[0-9\\]* != 257\\\\)\" \"optimized\"} } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "16839612d0e2da641c43482765ab8eaf234215a5", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n unsigned int a[1000];\n unsigned int b = 256;\n unsigned int c = 1024;\n@@ -23,10 +23,10 @@ main ()\n     }\n   return 0;\n }\n-/* { dg-final-use { scan-ipa-dump \"Mod power of 2 transformation on insn\" \"tree_profile_ipa\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Mod power of 2 transformation on insn\" \"profile\" } } */\n /* This is part of code checking that n is power of 2, so we are sure that the transformation\n    didn't get optimized out.  */\n /* { dg-final-use { scan-tree-dump \"n_\\[0-9\\]* \\\\+ (4294967295|0x0*ffffffff)\" \"optimized\"} } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "d7b3914a85a1ee73558a35db5d3814dbba973068", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-3.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n unsigned int a[1000];\n unsigned int b = 257;\n unsigned int c = 1023;\n@@ -23,10 +23,10 @@ main ()\n     }\n   return 0;\n }\n-/* { dg-final-use { scan-ipa-dump \"Mod subtract transformation on insn\" \"tree_profile_ipa\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Mod subtract transformation on insn\" \"profile\" } } */\n /* This is part of code checking that n is greater than the divisor so we are sure that it\n    didn't get optimized out.  */\n /* { dg-final-use { scan-tree-dump \"if \\\\(n_\\[0-9\\]* \\\\>\" \"optimized\"} } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "239bf595d993c0cfbb95bd573a8b503a07361bb9", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-4.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n unsigned int a[1000];\n unsigned int b = 999;\n unsigned int c = 1002;\n@@ -23,10 +23,10 @@ main ()\n     }\n   return 0;\n }\n-/* { dg-final-use { scan-ipa-dump \"Mod subtract transformation on insn\" \"tree_profile_ipa\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Mod subtract transformation on insn\" \"profile\" } } */\n /* This is part of code checking that n is greater than the divisor so we are sure that it\n    didn't get optimized out.  */\n /* { dg-final-use { scan-tree-dump \"if \\\\(n_\\[0-9\\]* \\\\>\" \"optimized\"} } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "1a804a767164d2cc39b6f38a7391d3f2e5d5f5cd", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-5.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-5.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-tree_profile_ipa\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n int a[1000];\n int b=997;\n main()\n@@ -11,7 +11,7 @@ main()\n \t\t\ta[i]/=b;\n \treturn 0;\n }\n-/* { dg-final-use { scan-ipa-dump \"Div.mod by constant b.*=997 transformation on insn\" \"tree_profile_ipa\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Div.mod by constant b.*=997 transformation on insn\" \"profile\" } } */\n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "5f5326384458042b8a6f47185d0ec1dc1aa560d3", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-7.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-ipa-tree_profile_ipa -mtune=core2\" } */\n+/* { dg-options \"-O2 -fdump-ipa-profile -mtune=core2\" } */\n /* { dg-skip-if \"\" { ! { i?86-*-* x86_64-*-* } } { \"*\" } { \"\" } } */\n \n #include <strings.h>\n@@ -22,5 +22,5 @@ int main() {\n   return 0;\n }\n \n-/* { dg-final-use { scan-ipa-dump \"Single value 8 stringop transformation on bzero\" \"tree_profile_ipa\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"tree_profile_ipa\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Single value 8 stringop transformation on bzero\" \"profile\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "e55084899f64a2cbb43d4b5a6e96c6284587e58e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/dump-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fdump-1.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,9 +1,9 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-profile-details\" } */\n+/* { dg-options \"-O1 -fdump-tree-profile_estimate-details\" } */\n \n int f(void)\n {\n   return 0;\n }\n \n-/* { dg-final { cleanup-tree-dump \"profile\" } } */\n+/* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */"}, {"sha": "c2fb74e58715d964d364131652161ec584623f8d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-25.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-25.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-profile\" } */\n+/* { dg-options \"-O1 -fdump-tree-profile_estimate\" } */\n \n int foo(void);\n void bla(void);\n@@ -118,12 +118,12 @@ void test5 (void)\n     }\n }\n \n-/* { dg-final { scan-tree-dump-times \"Disambiguating loop\" 5 \"profile\" } } */\n+/* { dg-final { scan-tree-dump-times \"Disambiguating loop\" 5 \"profile_estimate\" } } */\n /* For the following xfail marks, see PR35629.  */\n-/* { dg-final { scan-tree-dump-times \"Found latch edge\" 5 \"profile\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"Merged latch edges\" 2 \"profile\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"4 loops found\" 2 \"profile\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"3 loops found\" 2 \"profile\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"2 loops found\" 1 \"profile\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Found latch edge\" 5 \"profile_estimate\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Merged latch edges\" 2 \"profile_estimate\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"4 loops found\" 2 \"profile_estimate\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"3 loops found\" 2 \"profile_estimate\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"2 loops found\" 1 \"profile_estimate\" { xfail *-*-* } } } */\n \n-/* { dg-final { cleanup-tree-dump \"profile\" } } */\n+/* { dg-final { cleanup-tree-dump \"profile_estimate\" } } */"}, {"sha": "ab51e261a56a597fbb9980dc2d272f50dd5d4bb9", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57dccbc6b70929e8762d6a4ee75a483d466f58/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=5f57dccbc6b70929e8762d6a4ee75a483d466f58", "patch": "@@ -579,7 +579,7 @@ struct simple_ipa_opt_pass pass_ipa_tree_profile =\n {\n  {\n   SIMPLE_IPA_PASS,\n-  \"tree_profile_ipa\",                  /* name */\n+  \"profile\",  \t\t               /* name */\n   gate_tree_profile_ipa,               /* gate */\n   tree_profiling,                      /* execute */\n   NULL,                                /* sub */"}]}