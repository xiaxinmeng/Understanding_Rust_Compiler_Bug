{"sha": "63697c37cf329e3b265ff4eaa16a6efd28f2a38b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2OTdjMzdjZjMyOWUzYjI2NWZmNGVhYTE2YTZlZmQyOGYyYTM4Yg==", "commit": {"author": {"name": "Yizhe", "email": "yizhe@pku.edu.cn", "date": "2021-03-17T07:24:46Z"}, "committer": {"name": "YizhePKU", "email": "yizhe@pku.edu.cn", "date": "2021-04-02T17:10:46Z"}, "message": "Add the new InferType to lookup table", "tree": {"sha": "a63c6c8cdf679d931f313a148cdab39710f03a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a63c6c8cdf679d931f313a148cdab39710f03a86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63697c37cf329e3b265ff4eaa16a6efd28f2a38b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63697c37cf329e3b265ff4eaa16a6efd28f2a38b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63697c37cf329e3b265ff4eaa16a6efd28f2a38b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63697c37cf329e3b265ff4eaa16a6efd28f2a38b/comments", "author": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f12d8b770b236142b64a4dd542d3c157e8cc4293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f12d8b770b236142b64a4dd542d3c157e8cc4293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f12d8b770b236142b64a4dd542d3c157e8cc4293"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "df5c47aaa798e2b9b1e856d44b5cc8e5866f0863", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63697c37cf329e3b265ff4eaa16a6efd28f2a38b/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63697c37cf329e3b265ff4eaa16a6efd28f2a38b/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=63697c37cf329e3b265ff4eaa16a6efd28f2a38b", "patch": "@@ -706,10 +706,16 @@ class TypeCheckExpr : public TypeCheckBase\n       return true;\n     });\n \n-    // Create an infer type and register its hir_id\n+    // Create an infer type and register it in TypeCheckContext\n+    // TODO: This is very leaky. Need a refactor of some sort.\n+    auto crateNum = Analysis::Mappings::get ()->get_current_crate ();\n+    auto nodeId = UNKNOWN_NODEID;\n+    auto hirId = mappings->get_next_hir_id ();\n+    auto localDefId = UNKNOWN_LOCAL_DEFID;\n+    auto mappings = Analysis::NodeMapping (crateNum, nodeId, hirId, localDefId);\n     infered_array_elems\n-      = new TyTy::InferType (mappings->get_next_hir_id (),\n-\t\t\t     TyTy::InferType::InferTypeKind::GENERAL);\n+      = new TyTy::InferType (hirId, TyTy::InferType::InferTypeKind::GENERAL);\n+    context->insert_type (mappings, infered_array_elems);\n \n     for (auto &type : types)\n       {"}]}