{"sha": "2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRlZjViNzZlM2JjMmI5YWQ2Yjk2YTU2ZGFlZDRjNTFkZmE2ZGQwMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-07-14T19:46:29Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-07-14T19:46:29Z"}, "message": "c_locale.h (__convert_from_v): Include <cstdio>.\n\n2003-07-14  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* config/locale/gnu/c_locale.h (__convert_from_v): Include\n\t<cstdio>. Qualify names.\n\t* config/locale/generic/c_locale.h (__convert_from_v): Ditto.\n\nFrom-SVN: r69343", "tree": {"sha": "54e0cb09348d19fc0352e804b81117e4e51aaeee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54e0cb09348d19fc0352e804b81117e4e51aaeee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03/comments", "author": null, "committer": null, "parents": [{"sha": "5e08432ed0c87fe0e2a6b144e1f87b7615a08d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e08432ed0c87fe0e2a6b144e1f87b7615a08d46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e08432ed0c87fe0e2a6b144e1f87b7615a08d46"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "33dc3df44cf5c7b5102df2af9326e09cbf7c21ad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03", "patch": "@@ -1,3 +1,9 @@\n+2003-07-14  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* config/locale/gnu/c_locale.h (__convert_from_v): Include\n+\t<cstdio>. Qualify names.\n+\t* config/locale/generic/c_locale.h (__convert_from_v): Ditto.\n+\n 2003-07-14  Paolo Carlini  <pcarlini@unitus.it>\n \t    Nathan C. Myers  <ncm-nospam@cantrip.org>\n "}, {"sha": "8e2072a75b3d25e999f6a500c62cefd6cfa0c5cd", "filename": "libstdc++-v3/config/locale/generic/c_locale.h", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h?ref=2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03", "patch": "@@ -39,8 +39,9 @@\n #pragma GCC system_header\n \n #include <clocale>\n-#include <cstdlib>\n-#include <cstring>\n+#include <cstdlib>   // get std::malloc\n+#include <cstring>   // get std::strlen\n+#include <cstdio>    // get std::snprintf or std::sprintf\n \n #define _GLIBCXX_NUM_CATEGORIES 0\n \n@@ -59,26 +60,26 @@ namespace std\n \t\t     const char* __fmt,\n \t\t     _Tv __v, const __c_locale&, int __prec = -1)\n     {\n-      char* __old = setlocale(LC_ALL, NULL);\n-      char* __sav = static_cast<char*>(malloc(strlen(__old) + 1));\n+      char* __old = std::setlocale(LC_ALL, NULL);\n+      char* __sav = static_cast<char*>(std::malloc(std::strlen(__old) + 1));\n       if (__sav)\n-        strcpy(__sav, __old);\n-      setlocale(LC_ALL, \"C\");\n+        std::strcpy(__sav, __old);\n+      std::setlocale(LC_ALL, \"C\");\n \n       int __ret;\n #ifdef _GLIBCXX_USE_C99\n       if (__prec >= 0)\n-        __ret = snprintf(__out, __size, __fmt, __prec, __v);\n+        __ret = std::snprintf(__out, __size, __fmt, __prec, __v);\n       else\n-        __ret = snprintf(__out, __size, __fmt, __v);\n+        __ret = std::snprintf(__out, __size, __fmt, __v);\n #else\n       if (__prec >= 0)\n-        __ret = sprintf(__out, __fmt, __prec, __v);\n+        __ret = std::sprintf(__out, __fmt, __prec, __v);\n       else\n-        __ret = sprintf(__out, __fmt, __v);\n+        __ret = std::sprintf(__out, __fmt, __v);\n #endif\n-      setlocale(LC_ALL, __sav);\n-      free(__sav);\n+      std::setlocale(LC_ALL, __sav);\n+      std::free(__sav);\n       return __ret;\n     }\n }"}, {"sha": "24636f4893d1d586f01f0e07d82219e6c6572bc7", "filename": "libstdc++-v3/config/locale/gnu/c_locale.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h?ref=2def5b76e3bc2b9ad6b96a56daed4c51dfa6dd03", "patch": "@@ -40,6 +40,7 @@\n \n #include <cstring>              // get std::strlen\n #include <cstdlib>              // get std::malloc\n+#include <cstdio>               // get std::snprintf or std::sprintf\n #include <clocale>\n #include <langinfo.h>\t\t// For codecvt\n #include <iconv.h>\t\t// For codecvt using iconv, iconv_t\n@@ -84,9 +85,9 @@ namespace std\n       int __ret;\n #ifdef _GLIBCXX_USE_C99\n       if (__prec >= 0)\n-        __ret = snprintf(__out, __size, __fmt, __prec, __v);\n+        __ret = std::snprintf(__out, __size, __fmt, __prec, __v);\n       else\n-        __ret = snprintf(__out, __size, __fmt, __v);\n+        __ret = std::snprintf(__out, __size, __fmt, __v);\n #else\n       if (__prec >= 0)\n         __ret = std::sprintf(__out, __fmt, __prec, __v);"}]}