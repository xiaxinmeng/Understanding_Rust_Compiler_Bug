{"sha": "16a71c501a1fb3b3f97c6870a39fce2f67f5974b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhNzFjNTAxYTFmYjNiM2Y5N2M2ODcwYTM5ZmNlMmY2N2Y1OTc0Yg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-02-02T15:21:16Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-02-02T15:21:16Z"}, "message": "PR jit/64810: support DImode on arm\n\ngcc/jit/ChangeLog:\n\tPR jit/64810\n\t* dummy-frontend.c (jit_langhook_type_for_mode): Support\n\tTYPE_MODE (long_long_integer_type_node).\n\nFrom-SVN: r220347", "tree": {"sha": "7009922b34d55ec8f2924d906efb0169b1704b16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7009922b34d55ec8f2924d906efb0169b1704b16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16a71c501a1fb3b3f97c6870a39fce2f67f5974b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a71c501a1fb3b3f97c6870a39fce2f67f5974b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a71c501a1fb3b3f97c6870a39fce2f67f5974b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a71c501a1fb3b3f97c6870a39fce2f67f5974b/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dd1f7ace308f5452d97b09e4a42db84c4eb6999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dd1f7ace308f5452d97b09e4a42db84c4eb6999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dd1f7ace308f5452d97b09e4a42db84c4eb6999"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "ccbd25098e5cba5d17ecda624cdec0fd7c4bd61e", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a71c501a1fb3b3f97c6870a39fce2f67f5974b/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a71c501a1fb3b3f97c6870a39fce2f67f5974b/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=16a71c501a1fb3b3f97c6870a39fce2f67f5974b", "patch": "@@ -1,3 +1,9 @@\n+2015-02-02  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/64810\n+\t* dummy-frontend.c (jit_langhook_type_for_mode): Support\n+\tTYPE_MODE (long_long_integer_type_node).\n+\n 2015-01-27  David Malcolm  <dmalcolm@redhat.com>\n \n \t* docs/internals/test-hello-world.exe.log.txt: Add example version"}, {"sha": "8f7d06afabf9691f05aff9eb1db9506cc985bc5b", "filename": "gcc/jit/dummy-frontend.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a71c501a1fb3b3f97c6870a39fce2f67f5974b/gcc%2Fjit%2Fdummy-frontend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a71c501a1fb3b3f97c6870a39fce2f67f5974b/gcc%2Fjit%2Fdummy-frontend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdummy-frontend.c?ref=16a71c501a1fb3b3f97c6870a39fce2f67f5974b", "patch": "@@ -167,6 +167,9 @@ jit_langhook_type_for_mode (enum machine_mode mode, int unsignedp)\n   if (mode == TYPE_MODE (long_integer_type_node))\n     return unsignedp ? long_unsigned_type_node : long_integer_type_node;\n \n+  if (mode == TYPE_MODE (long_long_integer_type_node))\n+    return unsignedp ? long_long_unsigned_type_node : long_long_integer_type_node;\n+\n   if (COMPLEX_MODE_P (mode))\n     {\n       if (mode == TYPE_MODE (complex_float_type_node))"}]}