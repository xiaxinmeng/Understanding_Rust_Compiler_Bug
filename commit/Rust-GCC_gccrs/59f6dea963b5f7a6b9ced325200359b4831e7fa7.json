{"sha": "59f6dea963b5f7a6b9ced325200359b4831e7fa7", "node_id": "C_kwDOANBUbNoAKDU5ZjZkZWE5NjNiNWY3YTZiOWNlZDMyNTIwMDM1OWI0ODMxZTdmYTc", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-09-20T21:06:19Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-09-20T21:06:19Z"}, "message": "Fortran: F2018 type(*),dimension(*) with scalars [PR104143]\n\nAssumed-size dummy arguments accept arrays and array elements as actual\narguments. There are also a few exceptions when real scalars are permitted.\nSince F2018, this includes scalar arguments to assumed-type dummies; while\ntype(*) was added in TS29113, this change is only in F2018 itself.\n\n\tPR fortran/104143\n\ngcc/fortran/ChangeLog:\n\n\t* interface.cc (compare_parameter): Permit scalar args to\n\t'type(*), dimension(*)'.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/c-interop/c407b-2.f90: Remove dg-error.\n\t* gfortran.dg/assumed_type_16.f90: New test.\n\t* gfortran.dg/assumed_type_17.f90: New test.", "tree": {"sha": "2811f5823664b0cb35eee7b046ff9f310d3acd96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2811f5823664b0cb35eee7b046ff9f310d3acd96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59f6dea963b5f7a6b9ced325200359b4831e7fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f6dea963b5f7a6b9ced325200359b4831e7fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f6dea963b5f7a6b9ced325200359b4831e7fa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f6dea963b5f7a6b9ced325200359b4831e7fa7/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5976fbf9d5dd9542fcb82eebb2185886fd52d000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5976fbf9d5dd9542fcb82eebb2185886fd52d000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5976fbf9d5dd9542fcb82eebb2185886fd52d000"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "d3e199535b3b3a8c4fb0b2b3ddca6d82f00cce43", "filename": "gcc/fortran/interface.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f6dea963b5f7a6b9ced325200359b4831e7fa7/gcc%2Ffortran%2Finterface.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f6dea963b5f7a6b9ced325200359b4831e7fa7/gcc%2Ffortran%2Finterface.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.cc?ref=59f6dea963b5f7a6b9ced325200359b4831e7fa7", "patch": "@@ -2692,7 +2692,8 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n      - if the actual argument is (a substring of) an element of a\n        non-assumed-shape/non-pointer/non-polymorphic array; or\n      - (F2003) if the actual argument is of type character of default/c_char\n-       kind.  */\n+       kind.\n+     - (F2018) if the dummy argument is type(*).  */\n \n   is_pointer = actual->expr_type == EXPR_VARIABLE\n \t       ? actual->symtree->n.sym->attr.pointer : false;\n@@ -2759,6 +2760,14 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \n   if (ref == NULL && actual->expr_type != EXPR_NULL)\n     {\n+      if (actual->rank == 0\n+\t  && formal->ts.type == BT_ASSUMED\n+\t  && formal->as\n+\t  && formal->as->type == AS_ASSUMED_SIZE)\n+\t/* This is new in F2018, type(*) is new in TS29113, but gfortran does\n+\t   not differentiate.  Thus, if type(*) exists, it is valid;\n+\t   otherwise, type(*) is already rejected.  */\n+\treturn true;\n       if (where\n \t  && (!formal->attr.artificial || (!formal->maybe_array\n \t\t\t\t\t   && !maybe_dummy_array_arg (actual))))"}, {"sha": "52d8ef5ea202058ea6ecee3d046f0b6699248352", "filename": "gcc/testsuite/gfortran.dg/assumed_type_16.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f6dea963b5f7a6b9ced325200359b4831e7fa7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f6dea963b5f7a6b9ced325200359b4831e7fa7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_16.f90?ref=59f6dea963b5f7a6b9ced325200359b4831e7fa7", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-std=f2008\" }\n+!\n+! PR fortran/104143\n+!\n+ interface\n+   subroutine foo(x)\n+     type(*) :: x(*)  ! { dg-error \"Fortran 2018: Assumed type\" }\n+   end\n+ end interface\n+ integer :: a\n+ call foo(a)  ! { dg-error \"Type mismatch in argument\" }\n+ call foo((a))  ! { dg-error \"Type mismatch in argument\" }\n+end"}, {"sha": "d6ccd3058ce83086cf4c1000a71ef0bc684f7465", "filename": "gcc/testsuite/gfortran.dg/assumed_type_17.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f6dea963b5f7a6b9ced325200359b4831e7fa7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f6dea963b5f7a6b9ced325200359b4831e7fa7/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_17.f90?ref=59f6dea963b5f7a6b9ced325200359b4831e7fa7", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-std=f2018 -fdump-tree-original\" }\n+!\n+! PR fortran/104143\n+!\n+ interface\n+   subroutine foo(x)\n+     type(*) :: x(*)\n+   end\n+ end interface\n+ integer :: a\n+ call foo(a)\n+ call foo((a))\n+end\n+\n+! { dg-final { scan-tree-dump-times \"foo \\\\(&a\\\\);\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"D.\\[0-9\\]+ = a;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"foo \\\\(&D.\\[0-9\\]+\\\\);\" 1 \"original\" } }"}, {"sha": "49352fc9d71cfc28d69fe40b6f85bd836757872f", "filename": "gcc/testsuite/gfortran.dg/c-interop/c407b-2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f6dea963b5f7a6b9ced325200359b4831e7fa7/gcc%2Ftestsuite%2Fgfortran.dg%2Fc-interop%2Fc407b-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f6dea963b5f7a6b9ced325200359b4831e7fa7/gcc%2Ftestsuite%2Fgfortran.dg%2Fc-interop%2Fc407b-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc-interop%2Fc407b-2.f90?ref=59f6dea963b5f7a6b9ced325200359b4831e7fa7", "patch": "@@ -40,7 +40,7 @@ subroutine s0 (x)\n \n   call g (x, 1)\n   call f (x, 1)  ! { dg-error \"Type mismatch\" }\n-  call h (x, 1)  ! { dg-error \"Rank mismatch\" }\n+  call h (x, 1)  ! Scalar to type(*),dimension(*): Invalid in TS29113 but valid since F2018\n end subroutine\n \n ! Check that you can't use an assumed-type array variable in an array"}]}