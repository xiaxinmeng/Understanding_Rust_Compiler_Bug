{"sha": "e33745253e33bdb3cfdaa0608bf8d1f9f6422abf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzNzQ1MjUzZTMzYmRiM2NmZGFhMDYwOGJmOGQxZjlmNjQyMmFiZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-22T22:40:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-22T22:40:46Z"}, "message": "(fold_convert): Don't fold conversion if it would produce constant\nlarger than we can support.\n\nFrom-SVN: r8551", "tree": {"sha": "aa402aeb6bedddef8501f369de7df93f2725a03a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa402aeb6bedddef8501f369de7df93f2725a03a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e33745253e33bdb3cfdaa0608bf8d1f9f6422abf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33745253e33bdb3cfdaa0608bf8d1f9f6422abf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e33745253e33bdb3cfdaa0608bf8d1f9f6422abf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33745253e33bdb3cfdaa0608bf8d1f9f6422abf/comments", "author": null, "committer": null, "parents": [{"sha": "dce39da65769c10426ca404119e346371963a190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dce39da65769c10426ca404119e346371963a190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dce39da65769c10426ca404119e346371963a190"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "9b1a7b4775d274cab2b5531d2b845f79ee4ecaff", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33745253e33bdb3cfdaa0608bf8d1f9f6422abf/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33745253e33bdb3cfdaa0608bf8d1f9f6422abf/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=e33745253e33bdb3cfdaa0608bf8d1f9f6422abf", "patch": "@@ -1404,6 +1404,11 @@ fold_convert (t, arg1)\n     {\n       if (TREE_CODE (arg1) == INTEGER_CST)\n \t{\n+\t  /* If we would build a constant wider than GCC supports,\n+\t     leave the conversion unfolded.  */\n+\t  if (TYPE_PRECISION (type) > 2 * HOST_BITS_PER_WIDE_INT)\n+\t    return t;\n+\n \t  /* Given an integer constant, make new constant with new type,\n \t     appropriately sign-extended or truncated.  */\n \t  t = build_int_2 (TREE_INT_CST_LOW (arg1),"}]}