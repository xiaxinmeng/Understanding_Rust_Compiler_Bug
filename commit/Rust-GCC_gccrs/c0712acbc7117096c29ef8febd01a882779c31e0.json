{"sha": "c0712acbc7117096c29ef8febd01a882779c31e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA3MTJhY2JjNzExNzA5NmMyOWVmOGZlYmQwMWE4ODI3NzljMzFlMA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-09-05T06:04:09Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-09-05T06:04:09Z"}, "message": "gcse.c (hash_string_1): Add prototype.\n\n* gcse.c (hash_string_1): Add prototype.\n* cse.c (canon_hash_string): Likewise.\n\nFrom-SVN: r36154", "tree": {"sha": "67538a34c378013d53fd42dc360a2373f6aa41b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67538a34c378013d53fd42dc360a2373f6aa41b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0712acbc7117096c29ef8febd01a882779c31e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0712acbc7117096c29ef8febd01a882779c31e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0712acbc7117096c29ef8febd01a882779c31e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0712acbc7117096c29ef8febd01a882779c31e0/comments", "author": null, "committer": null, "parents": [{"sha": "02bcb9c64d63460924fdf8fe1e6c4ceb98005428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02bcb9c64d63460924fdf8fe1e6c4ceb98005428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02bcb9c64d63460924fdf8fe1e6c4ceb98005428"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "702fe3e3163661fa79c785dd989425362d83d8e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0712acbc7117096c29ef8febd01a882779c31e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0712acbc7117096c29ef8febd01a882779c31e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0712acbc7117096c29ef8febd01a882779c31e0", "patch": "@@ -1,3 +1,8 @@\n+2000-09-05  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* gcse.c (hash_string_1): Add prototype.\n+\t* cse.c (canon_hash_string): Likewise.\n+\n 2000-09-04  Craig Newell  <CraigN@ieee.org>\n \n \t* gcc.c: Undefine \"__WCHAR_TYPE__\" before redefining it."}, {"sha": "93cfb97ecef26ed90bd52b0c1cf728b25d25f6a9", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0712acbc7117096c29ef8febd01a882779c31e0/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0712acbc7117096c29ef8febd01a882779c31e0/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=c0712acbc7117096c29ef8febd01a882779c31e0", "patch": "@@ -668,6 +668,7 @@ static void invalidate_memory\tPARAMS ((void));\n static void invalidate_for_call\tPARAMS ((void));\n static rtx use_related_value\tPARAMS ((rtx, struct table_elt *));\n static unsigned canon_hash\tPARAMS ((rtx, enum machine_mode));\n+static unsigned canon_hash_string PARAMS ((const char *));\n static unsigned safe_hash\tPARAMS ((rtx, enum machine_mode));\n static int exp_equiv_p\t\tPARAMS ((rtx, rtx, int, int));\n static rtx canon_reg\t\tPARAMS ((rtx, rtx));"}, {"sha": "d32ddeb063d86825f2e740b350c05b606b21d9d7", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0712acbc7117096c29ef8febd01a882779c31e0/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0712acbc7117096c29ef8febd01a882779c31e0/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=c0712acbc7117096c29ef8febd01a882779c31e0", "patch": "@@ -549,6 +549,7 @@ static void insert_expr_in_table PARAMS ((rtx, enum machine_mode, rtx,\n static void insert_set_in_table PARAMS ((rtx, rtx));\n static unsigned int hash_expr\tPARAMS ((rtx, enum machine_mode, int *, int));\n static unsigned int hash_expr_1 PARAMS ((rtx, enum machine_mode, int *));\n+static unsigned int hash_string_1 PARAMS ((const char *));\n static unsigned int hash_set\tPARAMS ((int, int));\n static int expr_equiv_p\t        PARAMS ((rtx, rtx));\n static void record_last_reg_set_info PARAMS ((rtx, int));"}]}