{"sha": "002d4675481348987b4f7191e61e12e4e7ac9b4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyZDQ2NzU0ODEzNDg5ODdiNGY3MTkxZTYxZTEyZTRlN2FjOWI0ZQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-14T23:36:36Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-14T23:36:36Z"}, "message": "Object.h: Moved all the methods, with the exception of -class and -isEqual:, into ...\n\n2010-12-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc/Object.h: Moved all the methods, with the exception of\n\t-class and -isEqual:, into ...\n\t* objc/deprecated/Object.h: here.\n\t* Object.m: Moved all the methods, with the exception of -class\n\tand -isEqual: into the 'Deprecated' category.\n\nFrom-SVN: r167825", "tree": {"sha": "51cf821b43e4c3619d5c7f664fc6aeb9b0caff64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51cf821b43e4c3619d5c7f664fc6aeb9b0caff64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/002d4675481348987b4f7191e61e12e4e7ac9b4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002d4675481348987b4f7191e61e12e4e7ac9b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/002d4675481348987b4f7191e61e12e4e7ac9b4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002d4675481348987b4f7191e61e12e4e7ac9b4e/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "173fb2ff62e71fe86e311cd7135da4383060ff64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/173fb2ff62e71fe86e311cd7135da4383060ff64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/173fb2ff62e71fe86e311cd7135da4383060ff64"}], "stats": {"total": 228, "additions": 115, "deletions": 113}, "files": [{"sha": "94caca3c479b391904bbd9e59fee0de0a352ddf9", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002d4675481348987b4f7191e61e12e4e7ac9b4e/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002d4675481348987b4f7191e61e12e4e7ac9b4e/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=002d4675481348987b4f7191e61e12e4e7ac9b4e", "patch": "@@ -1,3 +1,11 @@\n+2010-12-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc/Object.h: Moved all the methods, with the exception of\n+\t-class and -isEqual:, into ...\n+\t* objc/deprecated/Object.h: here.\n+\t* Object.m: Moved all the methods, with the exception of -class\n+\tand -isEqual: into the 'Deprecated' category.\n+\n 2010-12-14  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objects.c (object_copy): Do not #undef as we are no longer"}, {"sha": "0b7c49fdab292703714869e190b49f3c1ba09041", "filename": "libobjc/Object.m", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002d4675481348987b4f7191e61e12e4e7ac9b4e/libobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002d4675481348987b4f7191e61e12e4e7ac9b4e/libobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FObject.m?ref=002d4675481348987b4f7191e61e12e4e7ac9b4e", "patch": "@@ -31,6 +31,22 @@\n \n @implementation Object\n \n+- (Class)class\n+{\n+  return object_get_class (self);\n+}\n+\n+- (BOOL)isEqual: (id)anObject\n+{\n+  return self == anObject;\n+}\n+\n+@end\n+\n+/* The following methods were deprecated in GCC 4.6.0 and will be\n+   removed in the next GCC release.  */\n+@implementation Object (Deprecated)\n+\n + initialize\n {\n   return self;\n@@ -76,11 +92,6 @@ @implementation Object\n   return [self copy];\n }\n \n-- (Class)class\n-{\n-  return object_get_class(self);\n-}\n-\n - (Class)superClass\n {\n   return object_get_super_class(self);\n@@ -106,11 +117,6 @@ - (unsigned int)hash\n   return (size_t)self;\n }\n \n-- (BOOL)isEqual:anObject\n-{\n-  return self==anObject;\n-}\n-\n - (int)compare:(id)anotherObject;\n {\n   if ([self isEqual:anotherObject])\n@@ -344,13 +350,6 @@ + (int)version\n   class_set_version(self, aVersion);\n   return self;\n }\n-@end\n-\n-/* The following methods were deprecated in GCC 4.6.0 and will be\n-   removed in the next GCC release.\n-*/\n-\n-@implementation Object (Deprecated)\n \n + (int)streamVersion: (TypedStream*)aStream\n {"}, {"sha": "379e906455ae620bbb286b478cc7398b81f4a9a8", "filename": "libobjc/objc/Object.h", "status": "modified", "additions": 17, "deletions": 93, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002d4675481348987b4f7191e61e12e4e7ac9b4e/libobjc%2Fobjc%2FObject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002d4675481348987b4f7191e61e12e4e7ac9b4e/libobjc%2Fobjc%2FObject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2FObject.h?ref=002d4675481348987b4f7191e61e12e4e7ac9b4e", "patch": "@@ -33,103 +33,27 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n extern \"C\" {\n #endif\n \n-/* The Object class is a minimal (but fully functional) root class\n-   included with the runtime.\n-\n-   It is mostly for testing the runtime; very handy in configure\n-   tests, and when writing language/runtime testcases.\n-\n-   Because Objective-C allows multiple root classes, a Foundation\n-   library (such as GNUstep Base) is expected to provide its own root\n-   class (typically called NSObject), fully integrated with the\n-   library's own high-level features.  If you are using such a\n-   Foundation library, you should most likely use its root class for\n-   everything and ignore Object.\n-*/\n-\n-/*\n-  All classes are derived from Object.  As such,\n-  this is the overhead tacked onto those objects.\n- */\n-@interface Object\n-{\n-    Class\tisa;\t/* A pointer to the instance's class structure */\n-}\n+/* The Object class is a very minimal root class included with the\n+   runtime.  It is used as superclass for the two classes included\n+   with the runtime, Protocol and NXConstantString.\n \n-        /* Initializing classes and instances */\n-+ initialize;\n-- init;\n+   Because Objective-C allows multiple root classes, you can define\n+   your own root class, different from Object.\n \n-        /* Creating, freeing, and copying instances */\n-+ new;\n-+ alloc;\n-- free;\n-- copy;\n-- shallowCopy;\n-- deepen;\n-- deepCopy;\n+   In particular, a Foundation library (such as GNUstep Base) is\n+   expected to provide its own root class (typically called NSObject),\n+   fully integrated with the library's own high-level features.  It is\n+   expected that you should always use and interact with NSObject, and\n+   mostly ignore Object.  */\n \n-        /* Identifying classes */\n+/* All classes are derived from Object.  As such, this is the overhead\n+   tacked onto those objects.  */\n+@interface Object\n+{\n+  Class isa; /* A pointer to the instance's class structure.  */\n+}\n - (Class)class;\n-- (Class)superClass;\n-- (MetaClass)metaClass;\n-- (const char *)name;\n-\n-        /* Identifying and comparing objects */\n-- self;\n-- (unsigned int)hash;\n-- (BOOL)isEqual:anObject;\n-- (int)compare:(id)anotherObject;\n-\n-        /* Testing object type */\n-- (BOOL)isMetaClass;\n-- (BOOL)isClass;\n-- (BOOL)isInstance;\n-\n-        /* Testing inheritance relationships */\n-- (BOOL)isKindOf:(Class)aClassObject;\n-- (BOOL)isMemberOf:(Class)aClassObject;\n-- (BOOL)isKindOfClassNamed:(const char *)aClassName;\n-- (BOOL)isMemberOfClassNamed:(const char *)aClassName;\n-\n-        /* Testing class functionality */\n-+ (BOOL)instancesRespondTo:(SEL)aSel;\n-- (BOOL)respondsTo:(SEL)aSel;\n-\n-\t/* Testing protocol conformance */\n-- (BOOL)conformsTo:(Protocol*)aProtocol;\n-\n-        /* Introspection */\n-+ (IMP)instanceMethodFor:(SEL)aSel;\n-- (IMP)methodFor:(SEL)aSel;\n-+ (struct objc_method_description *)descriptionForInstanceMethod:(SEL)aSel;\n-- (struct objc_method_description *)descriptionForMethod:(SEL)aSel;\n-\n-        /* Sending messages determined at run time */\n-- perform:(SEL)aSel;\n-- perform:(SEL)aSel with:anObject;\n-- perform:(SEL)aSel with:anObject1 with:anObject2;\n-\n-        /* Forwarding */\n-- (retval_t)forward:(SEL)aSel :(arglist_t)argFrame;\n-- (retval_t)performv:(SEL)aSel :(arglist_t)argFrame;\n-\n-        /* Posing */\n-+ poseAs:(Class)aClassObject;\n-- (Class)transmuteClassTo:(Class)aClassObject;\n-\n-        /* Enforcing intentions */\n-- subclassResponsibility:(SEL)aSel;\n-- notImplemented:(SEL)aSel;\n-- shouldNotImplement:(SEL)aSel;\n-\n-        /* Error handling */\n-- doesNotRecognize:(SEL)aSel;\n-- error:(const char *)aString, ...;\n-\n-        /* Archiving */\n-+ (int)version;\n-+ setVersion:(int)aVersion;\n+- (BOOL)isEqual: (id)anObject;\n @end\n \n #include \"deprecated/Object.h\""}, {"sha": "e15cf7dd9960b341b99f64e0def1397c5eb22761", "filename": "libobjc/objc/deprecated/Object.h", "status": "modified", "additions": 74, "deletions": 3, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002d4675481348987b4f7191e61e12e4e7ac9b4e/libobjc%2Fobjc%2Fdeprecated%2FObject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002d4675481348987b4f7191e61e12e4e7ac9b4e/libobjc%2Fobjc%2Fdeprecated%2FObject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2FObject.h?ref=002d4675481348987b4f7191e61e12e4e7ac9b4e", "patch": "@@ -1,8 +1,79 @@\n+/* The following methods were deprecated in GCC 4.6.0 and will be\n+   removed in the next GCC release.  */\n @interface Object (Deprecated)\n+/* Initializing classes and instances */\n++ initialize;\n+- init;\n+\n+/* Creating, freeing, and copying instances */\n++ new;\n++ alloc;\n+- free;\n+- copy;\n+- shallowCopy;\n+- deepen;\n+- deepCopy;\n+\n+/* Identifying classes */\n+- (Class)superClass;\n+- (MetaClass)metaClass;\n+- (const char *)name;\n+\n+/* Identifying and comparing objects */\n+- self;\n+- (unsigned int)hash;\n+- (int)compare:(id)anotherObject;\n+\n+/* Testing object type */\n+- (BOOL)isMetaClass;\n+- (BOOL)isClass;\n+- (BOOL)isInstance;\n+\n+/* Testing inheritance relationships */\n+- (BOOL)isKindOf:(Class)aClassObject;\n+- (BOOL)isMemberOf:(Class)aClassObject;\n+- (BOOL)isKindOfClassNamed:(const char *)aClassName;\n+- (BOOL)isMemberOfClassNamed:(const char *)aClassName;\n+\n+/* Testing class functionality */\n++ (BOOL)instancesRespondTo:(SEL)aSel;\n+- (BOOL)respondsTo:(SEL)aSel;\n+\n+/* Testing protocol conformance */\n+- (BOOL)conformsTo:(Protocol*)aProtocol;\n+\n+/* Introspection */\n++ (IMP)instanceMethodFor:(SEL)aSel;\n+- (IMP)methodFor:(SEL)aSel;\n++ (struct objc_method_description *)descriptionForInstanceMethod:(SEL)aSel;\n+- (struct objc_method_description *)descriptionForMethod:(SEL)aSel;\n+\n+/* Sending messages determined at run time */\n+- perform:(SEL)aSel;\n+- perform:(SEL)aSel with:anObject;\n+- perform:(SEL)aSel with:anObject1 with:anObject2;\n+\n+/* Forwarding */\n+- (retval_t)forward:(SEL)aSel :(arglist_t)argFrame;\n+- (retval_t)performv:(SEL)aSel :(arglist_t)argFrame;\n+\n+/* Posing */\n++ poseAs:(Class)aClassObject;\n+- (Class)transmuteClassTo:(Class)aClassObject;\n+\n+/* Enforcing intentions */\n+- subclassResponsibility:(SEL)aSel;\n+- notImplemented:(SEL)aSel;\n+- shouldNotImplement:(SEL)aSel;\n+\n+/* Error handling */\n+- doesNotRecognize:(SEL)aSel;\n+- error:(const char *)aString, ...;\n+\n+/* Archiving */\n++ (int)version;\n++ setVersion:(int)aVersion;\n \n-/* The following methods were deprecated in GCC 4.6.0 and will be\n-   removed in the next GCC release.\n-*/\n + (int)streamVersion: (TypedStream*)aStream; /* __attribute__ ((deprecated)) */\n \n - read: (TypedStream*)aStream; /* __attribute__ ((deprecated)) */"}]}