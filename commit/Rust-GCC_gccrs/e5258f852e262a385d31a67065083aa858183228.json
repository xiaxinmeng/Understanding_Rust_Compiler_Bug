{"sha": "e5258f852e262a385d31a67065083aa858183228", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUyNThmODUyZTI2MmEzODVkMzFhNjcwNjUwODNhYTg1ODE4MzIyOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-03-01T19:37:35Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-03-01T19:37:35Z"}, "message": "* config/h8300/h8300.md (a peephole2): New.\n\nFrom-SVN: r63616", "tree": {"sha": "fe39a05d83adc0c8966ab1f03030c6bece5cf268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe39a05d83adc0c8966ab1f03030c6bece5cf268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5258f852e262a385d31a67065083aa858183228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5258f852e262a385d31a67065083aa858183228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5258f852e262a385d31a67065083aa858183228", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5258f852e262a385d31a67065083aa858183228/comments", "author": null, "committer": null, "parents": [{"sha": "85bb9c2a5c2ea773974d95ed1c4fbba54d629eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85bb9c2a5c2ea773974d95ed1c4fbba54d629eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85bb9c2a5c2ea773974d95ed1c4fbba54d629eed"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "fdd350db14226c61696c5a5c0bf54113fe2dd703", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5258f852e262a385d31a67065083aa858183228/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5258f852e262a385d31a67065083aa858183228/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5258f852e262a385d31a67065083aa858183228", "patch": "@@ -1,3 +1,7 @@\n+2003-03-01  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (a peephole2): New.\n+\n 2003-03-01  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* predict.c (estimate_bb_frequencies): Correctly set"}, {"sha": "f97e934bd6c399768fa30321df460724d7a9b6a5", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5258f852e262a385d31a67065083aa858183228/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5258f852e262a385d31a67065083aa858183228/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=e5258f852e262a385d31a67065083aa858183228", "patch": "@@ -3556,6 +3556,11 @@\n ;; dead     1                       eq/ne   dec.l\n ;; dead     2                       eq/ne   dec.l\n ;;\n+;; dead -131072                     eq/ne   inc.w and test\n+;; dead  -65536                     eq/ne   inc.w and test\n+;; dead   65536                     eq/ne   inc.w and test\n+;; dead  131072                     eq/ne   inc.w and test\n+;;\n ;; dead 0x000000?? except 1 and 2   eq/ne   xor.b and test\n ;; dead 0x0000??00                  eq/ne   xor.b and test\n ;; dead 0x0000ffff                  eq/ne   not.w and test\n@@ -3626,6 +3631,32 @@\n \t\t      (pc)))]\n   \"operands[4] = GEN_INT (- INTVAL (operands[1]));\")\n \n+(define_peephole2\n+  [(set (cc0)\n+\t(compare (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t (match_operand:SI 1 \"const_int_operand\" \"\")))\n+   (set (pc)\n+\t(if_then_else (match_operator 3 \"eqne_operator\"\n+\t\t\t[(cc0) (const_int 0)])\n+\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"(TARGET_H8300H || TARGET_H8300S)\n+   && peep2_reg_dead_p (1, operands[0])\n+   && (INTVAL (operands[1]) == -131072\n+       || INTVAL (operands[1]) == -65536\n+       || INTVAL (operands[1]) == 65536\n+       || INTVAL (operands[1]) == 131072)\"\n+  [(set (match_dup 0)\n+\t(plus:SI (match_dup 0)\n+\t\t (match_dup 4)))\n+   (set (cc0)\n+\t(match_dup 0))\n+   (set (pc)\n+\t(if_then_else (match_op_dup 3 [(cc0) (const_int 0)])\n+\t\t      (label_ref (match_dup 2))\n+\t\t      (pc)))]\n+  \"operands[4] = GEN_INT (- INTVAL (operands[1]));\")\n+\n ;; For certain (in)equaltity comparisions against a constant, we can\n ;; XOR the register with the constant, and test the register against\n ;; 0."}]}