{"sha": "e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBkZDYzOTFjZDYzNzdmYTZiOTU5YjhjYzNmYTFmZDE2Y2ZiZTk1Zg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-12-12T20:14:10Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-12-12T20:14:10Z"}, "message": "nvptx: Define valid ASM_OUTPUT_ALIGN.\n\n\tgcc/\n\t* config/nvptx/nvptx.h (ASM_OUTPUT_ALIGN): Define as a C statment.\n\n    gcc/doc/tm.texi:@defmac ASM_OUTPUT_ALIGN (@var{stream}, @var{power})\n    gcc/doc/tm.texi-A C statement to output to the stdio stream @var{stream} an assembler\n    gcc/doc/tm.texi-command to advance the location counter to a multiple of 2 to the\n    gcc/doc/tm.texi-@var{power} bytes.  @var{power} will be a C expression of type @code{int}.\n    gcc/doc/tm.texi-@end defmac\n\n    gcc/config/nvptx/nvptx.h:#define ASM_OUTPUT_ALIGN(FILE, POWER)\n\n\"Empty\" is not a C statement, and so in code such as:\n\n    gcc/dwarf2out.c-              if (lsda_encoding == DW_EH_PE_aligned)\n    gcc/dwarf2out.c:                ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (PTR_SIZE));\n    gcc/dwarf2out.c-              dw2_asm_output_data (size_of_encoded_value (lsda_encoding), 0,\n    gcc/dwarf2out.c-                                   \"Language Specific Data Area (none)\");\n\n    gcc/varasm.c-      if (align > BITS_PER_UNIT)\n    gcc/varasm.c:        ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (align / BITS_PER_UNIT));\n    gcc/varasm.c-      assemble_variable_contents (decl, name, dont_output_data);\n\n    gcc/varasm.c-  if (align > 0)\n    gcc/varasm.c:    ASM_OUTPUT_ALIGN (asm_out_file, align);\n    gcc/varasm.c-\n    gcc/varasm.c-  targetm.asm_out.internal_label (asm_out_file, \"LTRAMP\", 0);\n\n    gcc/varasm.c-      if (align > BITS_PER_UNIT)\n    gcc/varasm.c:        ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (align / BITS_PER_UNIT));\n    gcc/varasm.c-      assemble_constant_contents (exp, XSTR (symbol, 0), align);\n\n..., GCC warns:\n\n    [...]/source-gcc/gcc/dwarf2out.c: In function 'void output_fde(dw_fde_ref, bool, bool, char*, int, char*, bool, int)':\n    [...]/source-gcc/gcc/dwarf2out.c:665:3: warning: suggest braces around empty body in an 'if' statement [-Wempty-body]\n       ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (PTR_SIZE));\n       ^\n\n    [...]/source-gcc/gcc/varasm.c: In function 'void assemble_variable(tree, int, int, int)':\n    [...]/source-gcc/gcc/varasm.c:2217:2: warning: suggest braces around empty body in an 'if' statement [-Wempty-body]\n      ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (align / BITS_PER_UNIT));\n      ^\n    [...]/source-gcc/gcc/varasm.c: In function 'rtx_def* assemble_trampoline_template()':\n    [...]/source-gcc/gcc/varasm.c:2603:5: warning: suggest braces around empty body in an 'if' statement [-Wempty-body]\n         ASM_OUTPUT_ALIGN (asm_out_file, align);\n         ^\n    [...]/source-gcc/gcc/varasm.c: In function 'void output_constant_def_contents(rtx)':\n    [...]/source-gcc/gcc/varasm.c:3413:2: warning: suggest braces around empty body in an 'if' statement [-Wempty-body]\n      ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (align / BITS_PER_UNIT));\n      ^\n\nAlso, \"use\" the values, to get rid of that one:\n\n    [...]/source-gcc/gcc/final.c: In function 'rtx_insn* final_scan_insn(rtx_insn*, FILE*, int, int, int*)':\n    [...]/source-gcc/gcc/final.c:2450:12: warning: variable 'log_align' set but not used [-Wunused-but-set-variable]\n            int log_align;\n                ^\n\nFrom-SVN: r218689", "tree": {"sha": "8464d471c7c7355cd73881ae0e8c45e3d27b9dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8464d471c7c7355cd73881ae0e8c45e3d27b9dd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "e5de2c69ad629c9d261683708e2ec07942cb9853", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f", "patch": "@@ -1,3 +1,7 @@\n+2014-12-12  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.h (ASM_OUTPUT_ALIGN): Define as a C statment.\n+\n 2014-12-12  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/64110"}, {"sha": "5f08ba71e596cbd217a44ccee38af4f21bef26a0", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=e0dd6391cd6377fa6b959b8cc3fa1fd16cfbe95f", "patch": "@@ -281,9 +281,17 @@ struct GTY(()) machine_function\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n-#define ASM_OUTPUT_ALIGN(FILE, POWER)\n+#define ASM_OUTPUT_ALIGN(FILE, POWER)\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      (void) (FILE);\t\t\t\t\\\n+      (void) (POWER);\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n #define ASM_OUTPUT_SKIP(FILE, N)\t\t\\\n   nvptx_output_skip (FILE, N)\n+\n #undef  ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE, STR, LENGTH)\t\t\t\\\n   nvptx_output_ascii (FILE, STR, LENGTH);"}]}