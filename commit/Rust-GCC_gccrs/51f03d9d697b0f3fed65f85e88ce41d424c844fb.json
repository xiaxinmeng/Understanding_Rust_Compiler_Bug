{"sha": "51f03d9d697b0f3fed65f85e88ce41d424c844fb", "node_id": "C_kwDOANBUbNoAKDUxZjAzZDlkNjk3YjBmM2ZlZDY1Zjg1ZTg4Y2U0MWQ0MjRjODQ0ZmI", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-07-20T10:03:39Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-07-20T10:03:39Z"}, "message": "'gcc/testsuite/rust/link/link.exp': Fix 'runtest_file_p' usage\n\nThe recent commit 418aef1b006182e84266dcf4f31ee721ed04301a\n\"Support extern crate\" (merged in\ncommit fd2bd659e44e5b7fea92bc34a4864f057f387490 \"Merge #1362\"), added\n'gcc/testsuite/rust/link/link.exp', which I understand to be a hacked up\nvariant of the LTO multi-file testing harness (not reviewed in detail).\n\nSince that commit, there are issues in parallel testing, so that, for example\nwith:\n\n    $ make -j12 check-rust RUNTESTFLAGS='--target_board=unix\\{,-m32,-mx32\\}'\n\n..., the first variant does test as expected:\n\n    @@ -6490,9 +6490,31 @@ PASS: rust/execute/torture/trait9.rs   -Os   at line 13 (test for warnings, line\n     PASS: rust/execute/torture/trait9.rs   -Os  (test for excess errors)\n     PASS: rust/execute/torture/trait9.rs   -Os  execution test\n     PASS: rust/execute/torture/trait9.rs   -Os  output pattern test\n    +Running /home/thomas/tmp/source/gcc/rust/build/trace-slim/source-gcc/gcc/testsuite/rust/link/link.exp ...\n    +PASS: rust/link/generic_function_0.rs   -O0  (test for excess errors)\n    +[...]\n    +PASS: rust/link/trait_import_0.rs   -Os  (test for excess errors)\n                    === rust Summary for unix ===\n\n    -# of expected passes           6445\n    +# of expected passes           6466\n     # of expected failures         31\n\n..., but we then get undesired changes for the second and following variants:\n\n     Running target unix/-m32\n     Running /home/thomas/tmp/source/gcc/rust/build/trace-slim/source-gcc/gcc/testsuite/rust/compile/compile.exp ...\n     PASS: rust/compile/abi-options1.rs  at line 2 (test for errors, line 1)\n     PASS: rust/compile/abi-options1.rs  at line 7 (test for errors, line 6)\n     PASS: rust/compile/abi-options1.rs (test for excess errors)\n    -PASS: rust/compile/array3.rs  at line 2 (test for warnings, line 1)\n    -PASS: rust/compile/array3.rs (test for excess errors)\n    -PASS: rust/compile/array_empty_list.rs  at line 3 (test for errors, line 2)\n    -PASS: rust/compile/array_empty_list.rs (test for excess errors)\n    -PASS: rust/compile/arrays1.rs  (test for errors, line 3)\n    -PASS: rust/compile/arrays1.rs (test for excess errors)\n     PASS: rust/compile/arrays2.rs  at line 4 (test for errors, line 3)\n     PASS: rust/compile/arrays2.rs (test for excess errors)\n     PASS: rust/compile/attr-mismatch-crate-name.rs (test for excess errors)\n    @@ -8355,110 +8371,215 @@ PASS: rust/compile/torture/generics17.rs   -O3 -g  (test for excess errors)\n     PASS: rust/compile/torture/generics17.rs   -Os   at line 18 (test for warnings, line 17)\n     PASS: rust/compile/torture/generics17.rs   -Os  (test for excess errors)\n     PASS: rust/compile/torture/generics18.rs   -O0   at line 19 (test for warnings, line 18)\n    +PASS: rust/compile/torture/generics18.rs   -O0   at line 19 (test for warnings, line 18)\n    +PASS: rust/compile/torture/generics18.rs   -O0   at line 5 (test for warnings, line 4)\n     PASS: rust/compile/torture/generics18.rs   -O0   at line 5 (test for warnings, line 4)\n     PASS: rust/compile/torture/generics18.rs   -O0  (test for excess errors)\n    +PASS: rust/compile/torture/generics18.rs   -O0  (test for excess errors)\n\n..., and so on.\n\nThis has been determined to be due to repetitive 'runtest_file_p' calls (it's\na mess...), thusly fixed (some would call it a \"hack\", no doubt), and verified\nthat, for example:\n\n    $ make -j12 check-rust RUNTESTFLAGS='--target_board=unix\\{,-m32,-mx32\\} link.exp=simple_function_0.rs'\n\n... only runs the one test as indicated.", "tree": {"sha": "a7e9942ebaff237495432d1aab1438fe319c8861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7e9942ebaff237495432d1aab1438fe319c8861"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51f03d9d697b0f3fed65f85e88ce41d424c844fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f03d9d697b0f3fed65f85e88ce41d424c844fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51f03d9d697b0f3fed65f85e88ce41d424c844fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f03d9d697b0f3fed65f85e88ce41d424c844fb/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd2bd659e44e5b7fea92bc34a4864f057f387490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd2bd659e44e5b7fea92bc34a4864f057f387490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd2bd659e44e5b7fea92bc34a4864f057f387490"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "8b2e93ceab614bc8ad5c14e9771a5cd459191979", "filename": "gcc/testsuite/rust/link/link.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f03d9d697b0f3fed65f85e88ce41d424c844fb/gcc%2Ftestsuite%2Frust%2Flink%2Flink.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f03d9d697b0f3fed65f85e88ce41d424c844fb/gcc%2Ftestsuite%2Frust%2Flink%2Flink.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Flink%2Flink.exp?ref=51f03d9d697b0f3fed65f85e88ce41d424c844fb", "patch": "@@ -154,7 +154,16 @@ foreach src [lsort [find $srcdir/$subdir *_0.rs]] {\n \tcontinue\n     }\n \n+    # To prevent 'runtest_file_p' being tested again (for example, via\n+    # 'gcc-dg-runtest'), with undesirable consequences due to its side effects,\n+    # interpose a dummy:\n+    rename runtest_file_p saved_runtest_file_p\n+    proc runtest_file_p { runtests testcase } {\n+\treturn 1\n+    }\n     rs-link-execute $src\n+    rename runtest_file_p {}\n+    rename saved_runtest_file_p runtest_file_p\n }\n \n set dg-do-what-default ${saved-dg-do-what-default}"}]}