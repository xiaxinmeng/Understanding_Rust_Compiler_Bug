{"sha": "a51ccef3e81bcaf523a9568ca3b8a444828491f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUxY2NlZjNlODFiY2FmNTIzYTk1NjhjYTNiOGE0NDQ4Mjg0OTFmNA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-05-15T19:29:44Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-05-15T19:29:44Z"}, "message": "fix typo\n\nFrom-SVN: r42112", "tree": {"sha": "7963c644b9184128618461179b5eb49ec9dec059", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7963c644b9184128618461179b5eb49ec9dec059"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a51ccef3e81bcaf523a9568ca3b8a444828491f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a51ccef3e81bcaf523a9568ca3b8a444828491f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a51ccef3e81bcaf523a9568ca3b8a444828491f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a51ccef3e81bcaf523a9568ca3b8a444828491f4/comments", "author": null, "committer": null, "parents": [{"sha": "78e1b90d92801fb80eb85237453b108e7c724f35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e1b90d92801fb80eb85237453b108e7c724f35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e1b90d92801fb80eb85237453b108e7c724f35"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5c5796587df2f38822aa0e70893c0462ef9b07b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a51ccef3e81bcaf523a9568ca3b8a444828491f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a51ccef3e81bcaf523a9568ca3b8a444828491f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a51ccef3e81bcaf523a9568ca3b8a444828491f4", "patch": "@@ -3,7 +3,7 @@\n \t* rs6000.md (movdi splitter): Sign extend more efficiently.\n \t* rs6000.c (reg_or_arith_cint_operand): Redefine 64-bit constant\n \tto \"long long\" valid on 32-bit and 64-bit hosts.\n-\t(logical_operand): Cast trunc_int_for_mode rturn value.\n+\t(logical_operand): Cast trunc_int_for_mode return value.\n \t(rs6000_emit_move): Shift macro to encapsulate variable.\n \t(rs6000_va_start): Use HOST_WIDE_INT_PRINT_DEC.\n \t(rs6000_emit_{prologue,epilogue}): EH regno is unsigned but"}]}