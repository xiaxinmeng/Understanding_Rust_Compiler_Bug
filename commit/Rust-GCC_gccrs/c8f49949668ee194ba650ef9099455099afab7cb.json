{"sha": "c8f49949668ee194ba650ef9099455099afab7cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhmNDk5NDk2NjhlZTE5NGJhNjUwZWY5MDk5NDU1MDk5YWZhYjdjYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-05-22T09:59:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-05-22T09:59:49Z"}, "message": "tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Handle BUILT_IN_REALLOC like BUILT_IN_STRDUP.\n\n2014-05-22  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Handle\n\tBUILT_IN_REALLOC like BUILT_IN_STRDUP.\n\t(call_may_clobber_ref_p_1): Handle BUILT_IN_REALLOC as allocation\n\tand deallocation site.\n\t* tree-ssa-structalias.c (find_func_aliases_for_builtin_call):\n\tHandle BUILT_IN_REALLOC similar to BUILT_IN_STRDUP with also\n\tpassing through the incoming points-to set.\n\t(handle_lhs_call): Use flags argument instead of recomputing it.\n\t(find_func_aliases_for_call): Call handle_lhs_call with proper\n\tcall return flags.\n\n\t* gcc.dg/tree-ssa/alias-33.c: New testcase.\n\nFrom-SVN: r210802", "tree": {"sha": "2f518f3e212c133ab8e3093440e0b6b8513289a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f518f3e212c133ab8e3093440e0b6b8513289a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8f49949668ee194ba650ef9099455099afab7cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f49949668ee194ba650ef9099455099afab7cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8f49949668ee194ba650ef9099455099afab7cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f49949668ee194ba650ef9099455099afab7cb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a822564db5c2745e4ea1394cd33aa2079baaec8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a822564db5c2745e4ea1394cd33aa2079baaec8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a822564db5c2745e4ea1394cd33aa2079baaec8d"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "ad78d7819eea62584e49928ed7d75b6dd8dfa448", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8f49949668ee194ba650ef9099455099afab7cb", "patch": "@@ -1,3 +1,16 @@\n+2014-05-22  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Handle\n+\tBUILT_IN_REALLOC like BUILT_IN_STRDUP.\n+\t(call_may_clobber_ref_p_1): Handle BUILT_IN_REALLOC as allocation\n+\tand deallocation site.\n+\t* tree-ssa-structalias.c (find_func_aliases_for_builtin_call):\n+\tHandle BUILT_IN_REALLOC similar to BUILT_IN_STRDUP with also\n+\tpassing through the incoming points-to set.\n+\t(handle_lhs_call): Use flags argument instead of recomputing it.\n+\t(find_func_aliases_for_call): Call handle_lhs_call with proper\n+\tcall return flags.\n+\n 2014-05-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-streamer-in.c (unpack_ts_real_cst_value_fields): Make sure"}, {"sha": "0641f59884e3e9f0d77c43a0b3ab714de8ecb9b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8f49949668ee194ba650ef9099455099afab7cb", "patch": "@@ -1,3 +1,7 @@\n+2014-05-22  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/alias-33.c: New testcase.\n+\n 2014-05-22  Kostya Serebryany  <kcc@google.com>\n \n \t* c-c++-common/tsan/mutexset1.c: Update the test to match"}, {"sha": "cbc0812a23861177d9a0d14839e520e007e74d70", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-33.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-33.c?ref=c8f49949668ee194ba650ef9099455099afab7cb", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n+\n+int j;\n+int main ()\n+{\n+  int i = 1;\n+  int **p;\n+  j = 0;\n+  p = __builtin_malloc (sizeof (int *));\n+  *p = &i;\n+  p = __builtin_realloc (p, 2 * sizeof (int *));\n+  **p = 0;\n+  if (i != 0)\n+    __builtin_abort ();\n+  return j;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Replaced j with 0\" \"fre1\" } } */\n+/* { dg-final { cleanup-tree-dump \"fre1\" } } */"}, {"sha": "0371070a67ece8c1fbd70037b391f2ee1a3dd00a", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=c8f49949668ee194ba650ef9099455099afab7cb", "patch": "@@ -1594,6 +1594,7 @@ ref_maybe_used_by_call_p_1 (gimple call, ao_ref *ref)\n \t/* These read memory pointed to by the first argument.  */\n \tcase BUILT_IN_STRDUP:\n \tcase BUILT_IN_STRNDUP:\n+\tcase BUILT_IN_REALLOC:\n \t  {\n \t    ao_ref dref;\n \t    tree size = NULL_TREE;\n@@ -1991,6 +1992,15 @@ call_may_clobber_ref_p_1 (gimple call, ao_ref *ref)\n \t    tree ptr = gimple_call_arg (call, 0);\n \t    return ptr_deref_may_alias_ref_p_1 (ptr, ref);\n \t  }\n+\t/* Realloc serves both as allocation point and deallocation point.  */\n+\tcase BUILT_IN_REALLOC:\n+\t  {\n+\t    tree ptr = gimple_call_arg (call, 0);\n+\t    /* Unix98 specifies that errno is set on allocation failure.  */\n+\t    return ((flag_errno_math\n+\t\t     && targetm.ref_may_alias_errno (ref))\n+\t\t    || ptr_deref_may_alias_ref_p_1 (ptr, ref));\n+\t  }\n \tcase BUILT_IN_GAMMA_R:\n \tcase BUILT_IN_GAMMAF_R:\n \tcase BUILT_IN_GAMMAL_R:"}, {"sha": "99e97d67a850e15110ed341d908f6516afc1f567", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8f49949668ee194ba650ef9099455099afab7cb/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=c8f49949668ee194ba650ef9099455099afab7cb", "patch": "@@ -3974,7 +3974,6 @@ handle_lhs_call (gimple stmt, tree lhs, int flags, vec<ce_s> rhsc,\n \n   /* If the call returns an argument unmodified override the rhs\n      constraints.  */\n-  flags = gimple_call_return_flags (stmt);\n   if (flags & ERF_RETURNS_ARG\n       && (flags & ERF_RETURN_ARG_MASK) < gimple_call_num_args (stmt))\n     {\n@@ -4299,9 +4298,11 @@ find_func_aliases_for_builtin_call (struct function *fn, gimple t)\n \treturn true;\n       case BUILT_IN_STRDUP:\n       case BUILT_IN_STRNDUP:\n+      case BUILT_IN_REALLOC:\n \tif (gimple_call_lhs (t))\n \t  {\n-\t    handle_lhs_call (t, gimple_call_lhs (t), gimple_call_flags (t),\n+\t    handle_lhs_call (t, gimple_call_lhs (t),\n+\t\t\t     gimple_call_return_flags (t) | ERF_NOALIAS,\n \t\t\t     vNULL, fndecl);\n \t    get_constraint_for_ptr_offset (gimple_call_lhs (t),\n \t\t\t\t\t   NULL_TREE, &lhsc);\n@@ -4312,6 +4313,17 @@ find_func_aliases_for_builtin_call (struct function *fn, gimple t)\n \t    process_all_all_constraints (lhsc, rhsc);\n \t    lhsc.release ();\n \t    rhsc.release ();\n+\t    /* For realloc the resulting pointer can be equal to the\n+\t       argument as well.  But only doing this wouldn't be\n+\t       correct because with ptr == 0 realloc behaves like malloc.  */\n+\t    if (DECL_FUNCTION_CODE (fndecl) == BUILT_IN_REALLOC)\n+\t      {\n+\t\tget_constraint_for (gimple_call_lhs (t), &lhsc);\n+\t\tget_constraint_for (gimple_call_arg (t, 0), &rhsc);\n+\t\tprocess_all_all_constraints (lhsc, rhsc);\n+\t\tlhsc.release ();\n+\t\trhsc.release ();\n+\t      }\n \t    return true;\n \t  }\n \tbreak;\n@@ -4535,7 +4547,8 @@ find_func_aliases_for_call (struct function *fn, gimple t)\n       else\n \thandle_rhs_call (t, &rhsc);\n       if (gimple_call_lhs (t))\n-\thandle_lhs_call (t, gimple_call_lhs (t), flags, rhsc, fndecl);\n+\thandle_lhs_call (t, gimple_call_lhs (t),\n+\t\t\t gimple_call_return_flags (t), rhsc, fndecl);\n       rhsc.release ();\n     }\n   else"}]}