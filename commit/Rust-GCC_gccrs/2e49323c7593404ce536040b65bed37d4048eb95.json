{"sha": "2e49323c7593404ce536040b65bed37d4048eb95", "node_id": "C_kwDOANBUbNoAKDJlNDkzMjNjNzU5MzQwNGNlNTM2MDQwYjY1YmVkMzdkNDA0OGViOTU", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-05-17T10:17:58Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-06-01T15:32:23Z"}, "message": "derive: Add #[derive(Clone)] for regular structs\n\ngcc/rust/ChangeLog:\n\n\t* expand/rust-derive-clone.cc (DeriveClone::visit_struct): Implement proper\n\tcloning for structs with fields.\n\t* ast/rust-ast-builder.cc (AstBuilder::struct_expr): New function.\n\t(AstBuilder::struct_expr_field): Likewise.\n\t(AstBuilder::field_access): Likewise.\n\t(AstBuilder::let): Likewise.\n\t* ast/rust-ast-builder.h: Declare new functions.\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/execute/torture/derive_macro4.rs: New test.", "tree": {"sha": "7d9d247f44d9a5301c9ad31d008d60470a03962e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d9d247f44d9a5301c9ad31d008d60470a03962e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e49323c7593404ce536040b65bed37d4048eb95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e49323c7593404ce536040b65bed37d4048eb95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e49323c7593404ce536040b65bed37d4048eb95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e49323c7593404ce536040b65bed37d4048eb95/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ffe13507fc3f125766e0fa5f9d0a4a47e5cce4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffe13507fc3f125766e0fa5f9d0a4a47e5cce4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ffe13507fc3f125766e0fa5f9d0a4a47e5cce4c"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "d37f143ca34a4d4c7e2ff4485ae133c1f2f9813c", "filename": "gcc/rust/ast/rust-ast-builder.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e49323c7593404ce536040b65bed37d4048eb95/gcc%2Frust%2Fast%2Frust-ast-builder.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e49323c7593404ce536040b65bed37d4048eb95/gcc%2Frust%2Fast%2Frust-ast-builder.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-builder.cc?ref=2e49323c7593404ce536040b65bed37d4048eb95", "patch": "@@ -118,5 +118,29 @@ AstBuilder::deref (std::unique_ptr<Expr> &&of)\n   return std::unique_ptr<Expr> (new DereferenceExpr (std::move (of), {}, loc));\n }\n \n+std::unique_ptr<Expr>\n+AstBuilder::struct_expr (std::string struct_name,\n+\t\t\t std::vector<std::unique_ptr<StructExprField>> &&fields)\n+{\n+  return std::unique_ptr<Expr> (\n+    new StructExprStructFields (path_in_expression ({struct_name}),\n+\t\t\t\tstd::move (fields), loc));\n+}\n+\n+std::unique_ptr<StructExprField>\n+AstBuilder::struct_expr_field (std::string field_name,\n+\t\t\t       std::unique_ptr<Expr> &&value)\n+{\n+  return std::unique_ptr<StructExprField> (\n+    new StructExprFieldIdentifierValue (field_name, std::move (value), loc));\n+}\n+\n+std::unique_ptr<Expr>\n+AstBuilder::field_access (std::unique_ptr<Expr> &&instance, std::string field)\n+{\n+  return std::unique_ptr<Expr> (\n+    new FieldAccessExpr (std::move (instance), field, {}, loc));\n+}\n+\n } // namespace AST\n } // namespace Rust"}, {"sha": "1c524b438d833f252519b0977b2bc1e265a424d3", "filename": "gcc/rust/ast/rust-ast-builder.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e49323c7593404ce536040b65bed37d4048eb95/gcc%2Frust%2Fast%2Frust-ast-builder.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e49323c7593404ce536040b65bed37d4048eb95/gcc%2Frust%2Fast%2Frust-ast-builder.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-builder.h?ref=2e49323c7593404ce536040b65bed37d4048eb95", "patch": "@@ -85,6 +85,21 @@ class AstBuilder\n   /* Create a struct expression for unit structs (`S`) */\n   std::unique_ptr<Expr> struct_expr_struct (std::string struct_name);\n \n+  /**\n+   * Create an expression for struct instantiation with fields (`S { a, b: c }`)\n+   */\n+  std::unique_ptr<Expr>\n+  struct_expr (std::string struct_name,\n+\t       std::vector<std::unique_ptr<StructExprField>> &&fields);\n+\n+  /* Create a field expression for struct instantiation (`field_name: value`) */\n+  std::unique_ptr<StructExprField>\n+  struct_expr_field (std::string field_name, std::unique_ptr<Expr> &&value);\n+\n+  /* Create a field access expression (`instance.field`) */\n+  std::unique_ptr<Expr> field_access (std::unique_ptr<Expr> &&instance,\n+\t\t\t\t      std::string field);\n+\n private:\n   /**\n    * Location of the generated AST nodes"}, {"sha": "176cee9b7497ccdb93628c8c6719a407c28e25fb", "filename": "gcc/rust/expand/rust-derive-clone.cc", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e49323c7593404ce536040b65bed37d4048eb95/gcc%2Frust%2Fexpand%2Frust-derive-clone.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e49323c7593404ce536040b65bed37d4048eb95/gcc%2Frust%2Fexpand%2Frust-derive-clone.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-derive-clone.cc?ref=2e49323c7593404ce536040b65bed37d4048eb95", "patch": "@@ -126,12 +126,23 @@ DeriveClone::visit_struct (StructStruct &item)\n       auto unit_ctor = builder.struct_expr_struct (item.get_struct_name ());\n       expanded = clone_impl (clone_fn (std::move (unit_ctor)),\n \t\t\t     item.get_struct_name ());\n+      return;\n     }\n-  else\n+\n+  auto cloned_fields = std::vector<std::unique_ptr<StructExprField>> ();\n+  for (auto &field : item.get_fields ())\n     {\n-      rust_sorry_at (item.get_locus (), \"cannot derive %qs for these items yet\",\n-\t\t     \"Clone\");\n+      auto name = field.get_field_name ();\n+      auto expr = clone_call (\n+\tbuilder.ref (builder.field_access (builder.identifier (\"self\"), name)));\n+\n+      cloned_fields.emplace_back (\n+\tbuilder.struct_expr_field (std::move (name), std::move (expr)));\n     }\n+\n+  auto ctor\n+    = builder.struct_expr (item.get_struct_name (), std::move (cloned_fields));\n+  expanded = clone_impl (clone_fn (std::move (ctor)), item.get_struct_name ());\n }\n \n void"}, {"sha": "218bf617bd6d9d3c1e02218ace379ccd496a3842", "filename": "gcc/testsuite/rust/execute/torture/derive_macro4.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e49323c7593404ce536040b65bed37d4048eb95/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fderive_macro4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e49323c7593404ce536040b65bed37d4048eb95/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fderive_macro4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fderive_macro4.rs?ref=2e49323c7593404ce536040b65bed37d4048eb95", "patch": "@@ -0,0 +1,29 @@\n+pub trait Clone {\n+    fn clone(&self) -> Self;\n+}\n+\n+#[derive(Clone)]\n+struct Foo {\n+    a: i32,\n+}\n+\n+#[derive(Clone)]\n+struct S {\n+    a: i32,\n+    b: Foo,\n+}\n+\n+impl Clone for i32 {\n+    fn clone(&self) -> Self { *self }\n+}\n+\n+fn main() -> i32 {\n+    let s1 = S { a: 15, b: Foo { a: 14 }};\n+    let s2 = s1.clone();\n+\n+    let l = s1.a - s2.a;\n+    let r = s1.b.a - s2.b.a;\n+\n+    // should be 0 if all fields were cloned correctly\n+    l + r\n+}\n\\ No newline at end of file"}]}