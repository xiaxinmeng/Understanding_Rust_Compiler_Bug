{"sha": "ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NmNWJiZGQ0MGFhYTAyNThlYjk2NzFjZDExYzBiYWI0YTE2MjM2ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-06-30T20:56:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-06-30T20:56:14Z"}, "message": "gcc/\n\t* defaults.h (HAVE_mem_thread_fence, gen_mem_thread_fence)\n\t(HAVE_memory_barrier, gen_memory_barrier, HAVE_mem_signal_fence)\n\t(gen_mem_signal_fence): Delete.\n\t* target-insns.def (mem_signal_fence, mem_thread_fence)\n\t(memory_barrier): New targetm instruction patterns.\n\t* optabs.c (expand_mem_thread_fence): Use them instead of HAVE_*/gen_*\n\tinterface.\n\t(expand_mem_signal_fence): Likewise.\n\nFrom-SVN: r225209", "tree": {"sha": "d7fd93d338a6d1e39021a1d01ceb4e49af7e31c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7fd93d338a6d1e39021a1d01ceb4e49af7e31c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e86a994681b0cad81ea13d29d9ab5f65d40ccc63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e86a994681b0cad81ea13d29d9ab5f65d40ccc63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e86a994681b0cad81ea13d29d9ab5f65d40ccc63"}], "stats": {"total": 56, "additions": 20, "deletions": 36}, "files": [{"sha": "631a3a7e7568e41dfc06e9a0b81123a46d54f909", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e", "patch": "@@ -1,3 +1,14 @@\n+2015-06-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* defaults.h (HAVE_mem_thread_fence, gen_mem_thread_fence)\n+\t(HAVE_memory_barrier, gen_memory_barrier, HAVE_mem_signal_fence)\n+\t(gen_mem_signal_fence): Delete.\n+\t* target-insns.def (mem_signal_fence, mem_thread_fence)\n+\t(memory_barrier): New targetm instruction patterns.\n+\t* optabs.c (expand_mem_thread_fence): Use them instead of HAVE_*/gen_*\n+\tinterface.\n+\t(expand_mem_signal_fence): Likewise.\n+\n 2015-06-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* defaults.h (HAVE_epilogue, gen_epilogue): Delete."}, {"sha": "011de6343faab435b882440df67e76076467c867", "filename": "gcc/defaults.h", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e", "patch": "@@ -1426,36 +1426,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_VTABLE_USES_DESCRIPTORS 0\n #endif\n \n-#ifndef HAVE_mem_thread_fence\n-#define HAVE_mem_thread_fence 0\n-static inline rtx\n-gen_mem_thread_fence (rtx)\n-{\n-  gcc_unreachable ();\n-  return NULL;\n-}\n-#endif\n-\n-#ifndef HAVE_memory_barrier\n-#define HAVE_memory_barrier 0\n-static inline rtx\n-gen_memory_barrier ()\n-{\n-  gcc_unreachable ();\n-  return NULL;\n-}\n-#endif\n-\n-#ifndef HAVE_mem_signal_fence\n-#define HAVE_mem_signal_fence 0\n-static inline rtx\n-gen_mem_signal_fence (rtx)\n-{\n-  gcc_unreachable ();\n-  return NULL;\n-}\n-#endif\n-\n #ifndef HAVE_load_multiple\n #define HAVE_load_multiple 0\n static inline rtx"}, {"sha": "163d57dae3dba6cc398b7f5fdc139fae2a828f5d", "filename": "gcc/optabs.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e", "patch": "@@ -7575,12 +7575,12 @@ expand_asm_memory_barrier (void)\n void\n expand_mem_thread_fence (enum memmodel model)\n {\n-  if (HAVE_mem_thread_fence)\n-    emit_insn (gen_mem_thread_fence (GEN_INT (model)));\n+  if (targetm.have_mem_thread_fence ())\n+    emit_insn (targetm.gen_mem_thread_fence (GEN_INT (model)));\n   else if (!is_mm_relaxed (model))\n     {\n-      if (HAVE_memory_barrier)\n-\temit_insn (gen_memory_barrier ());\n+      if (targetm.have_memory_barrier ())\n+\temit_insn (targetm.gen_memory_barrier ());\n       else if (synchronize_libfunc != NULL_RTX)\n \temit_library_call (synchronize_libfunc, LCT_NORMAL, VOIDmode, 0);\n       else\n@@ -7594,8 +7594,8 @@ expand_mem_thread_fence (enum memmodel model)\n void\n expand_mem_signal_fence (enum memmodel model)\n {\n-  if (HAVE_mem_signal_fence)\n-    emit_insn (gen_mem_signal_fence (GEN_INT (model)));\n+  if (targetm.have_mem_signal_fence ())\n+    emit_insn (targetm.gen_mem_signal_fence (GEN_INT (model)));\n   else if (!is_mm_relaxed (model))\n     {\n       /* By default targets are coherent between a thread and the signal"}, {"sha": "99f3221b2a277bab969ed99ff2681dbe0f58b73d", "filename": "gcc/target-insns.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/gcc%2Ftarget-insns.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e/gcc%2Ftarget-insns.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-insns.def?ref=ccf5bbdd40aaa0258eb9671cd11c0bab4a16236e", "patch": "@@ -32,6 +32,9 @@\n    Instructions should be documented in md.texi rather than here.  */\n DEF_TARGET_INSN (canonicalize_funcptr_for_compare, (rtx x0, rtx x1))\n DEF_TARGET_INSN (epilogue, (void))\n+DEF_TARGET_INSN (mem_signal_fence, (rtx x0))\n+DEF_TARGET_INSN (mem_thread_fence, (rtx x0))\n+DEF_TARGET_INSN (memory_barrier, (void))\n DEF_TARGET_INSN (prologue, (void))\n DEF_TARGET_INSN (return, (void))\n DEF_TARGET_INSN (sibcall_epilogue, (void))"}]}