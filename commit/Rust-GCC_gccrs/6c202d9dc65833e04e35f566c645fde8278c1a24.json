{"sha": "6c202d9dc65833e04e35f566c645fde8278c1a24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMyMDJkOWRjNjU4MzNlMDRlMzVmNTY2YzY0NWZkZTgyNzhjMWEyNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-06-07T07:40:20Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-06-07T07:40:20Z"}, "message": "Fix fwprop call to call to paradoxical_subreg_p\n\n\"mode\" is the mode of \"x\", not the replacement value.\n\n2019-06-06  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* fwprop.c (propagate_rtx): Fix call to paradoxical_subreg_p.\n\nFrom-SVN: r272032", "tree": {"sha": "ea787b242cb22a93b2caec050d9ca4d17e88bd6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea787b242cb22a93b2caec050d9ca4d17e88bd6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c202d9dc65833e04e35f566c645fde8278c1a24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c202d9dc65833e04e35f566c645fde8278c1a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c202d9dc65833e04e35f566c645fde8278c1a24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c202d9dc65833e04e35f566c645fde8278c1a24/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e37333bad7b7df7fd9d2e5165f61c2a68b57a30d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e37333bad7b7df7fd9d2e5165f61c2a68b57a30d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e37333bad7b7df7fd9d2e5165f61c2a68b57a30d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "add02bbb9909eb40e1d06e071a500df8fa52d296", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c202d9dc65833e04e35f566c645fde8278c1a24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c202d9dc65833e04e35f566c645fde8278c1a24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c202d9dc65833e04e35f566c645fde8278c1a24", "patch": "@@ -1,3 +1,7 @@\n+2019-06-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* fwprop.c (propagate_rtx): Fix call to paradoxical_subreg_p.\n+\n 2019-06-07  Martin Liska  <mliska@suse.cz>\n \n \t* doc/invoke.texi: Remove param."}, {"sha": "45703fe5f01b6a644d2da678a44674391fc76ae4", "filename": "gcc/fwprop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c202d9dc65833e04e35f566c645fde8278c1a24/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c202d9dc65833e04e35f566c645fde8278c1a24/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=6c202d9dc65833e04e35f566c645fde8278c1a24", "patch": "@@ -680,7 +680,7 @@ propagate_rtx (rtx x, machine_mode mode, rtx old_rtx, rtx new_rtx,\n       || CONSTANT_P (new_rtx)\n       || (GET_CODE (new_rtx) == SUBREG\n \t  && REG_P (SUBREG_REG (new_rtx))\n-\t  && !paradoxical_subreg_p (mode, GET_MODE (SUBREG_REG (new_rtx)))))\n+\t  && !paradoxical_subreg_p (new_rtx)))\n     flags |= PR_CAN_APPEAR;\n   if (!varying_mem_p (new_rtx))\n     flags |= PR_HANDLE_MEM;"}]}