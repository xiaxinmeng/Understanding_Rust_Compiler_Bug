{"sha": "11fda01f766760ba4d54199cfb78c41095f8fa3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFmZGEwMWY3NjY3NjBiYTRkNTQxOTljZmI3OGM0MTA5NWY4ZmEzYg==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-06-05T01:18:45Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-06-05T01:18:45Z"}, "message": "doc stuff that used to be in README.g77\n\nFrom-SVN: r27359", "tree": {"sha": "7323748aeec0a0341a8291c90953a1355f9fa864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7323748aeec0a0341a8291c90953a1355f9fa864"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11fda01f766760ba4d54199cfb78c41095f8fa3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fda01f766760ba4d54199cfb78c41095f8fa3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11fda01f766760ba4d54199cfb78c41095f8fa3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fda01f766760ba4d54199cfb78c41095f8fa3b/comments", "author": null, "committer": null, "parents": [{"sha": "7a5b54efc6b61490b65517f7d93c972847a6b2b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5b54efc6b61490b65517f7d93c972847a6b2b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a5b54efc6b61490b65517f7d93c972847a6b2b4"}], "stats": {"total": 227, "additions": 227, "deletions": 0}, "files": [{"sha": "7a8b0e8790cd5b2d1666e45d01791165dd138cf5", "filename": "gcc/f/ffe.texi", "status": "modified", "additions": 227, "deletions": 0, "changes": 227, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11fda01f766760ba4d54199cfb78c41095f8fa3b/gcc%2Ff%2Fffe.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11fda01f766760ba4d54199cfb78c41095f8fa3b/gcc%2Ff%2Fffe.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fffe.texi?ref=11fda01f766760ba4d54199cfb78c41095f8fa3b", "patch": "@@ -25,6 +25,7 @@ see @uref{http://egcs.cygnus.com/contribute.html} for steps you might\n need to take first.\n \n @menu\n+* Overview of Sources::\n * Overview of Translation Process::\n * Philosophy of Code Generation::\n * Two-pass Design::\n@@ -34,6 +35,222 @@ need to take first.\n * Internal Naming Conventions::\n @end menu\n \n+@node Overview of Sources\n+@section Overview of Sources\n+\n+The current directory layout includes the following:\n+\n+@table @file\n+@item @value{srcdir}/gcc/\n+Non-g77 files in gcc\n+\n+@item @value{srcdir}/gcc/f/\n+GNU Fortran front end sources\n+\n+@item @value{srcdir}/libf2c/\n+@code{libg2c} configuration and @code{g2c.h} file generation\n+\n+@item @value{srcdir}/libf2c/libF77/\n+General support and math portion of @code{libg2c}\n+\n+@item @value{srcdir}/libf2c/libI77/\n+I/O portion of @code{libg2c}\n+\n+@item @value{srcdir}/libf2c/libU77/\n+Additional interfaces to Unix @code{libc} for @code{libg2c}\n+@end table\n+\n+Components of note in @code{g77} are described below.\n+\n+@file{f/} as a whole contains the source for @code{g77},\n+while @file{libf2c/} contains a portion of the separate program\n+@code{f2c}.\n+Note that the @code{libf2c} code is not part of the program @code{g77},\n+just distributed with it.\n+\n+@file{f/} contains text files that document the Fortran compiler, source\n+files for the GNU Fortran Front End (FFE), and some other stuff.\n+The @code{g77} compiler code is placed in @file{f/} because it,\n+along with its contents,\n+is designed to be a subdirectory of a @code{gcc} source directory,\n+@file{gcc/},\n+which is structured so that language-specific front ends can be ``dropped\n+in'' as subdirectories.\n+The C++ front end (@code{g++}), is an example of this---it resides in\n+the @file{cp/} subdirectory.\n+Note that the C front end (also referred to as @code{gcc})\n+is an exception to this, as its source files reside\n+in the @file{gcc/} directory itself.\n+\n+@file{libf2c/} contains the run-time libraries for the @code{f2c} program,\n+also used by @code{g77}.\n+These libraries normally referred to collectively as @code{libf2c}.\n+When built as part of @code{g77},\n+@code{libf2c} is installed under the name @code{libg2c} to avoid\n+conflict with any existing version of @code{libf2c},\n+and thus is often referred to as @code{libg2c} when the\n+@code{g77} version is specifically being referred to.\n+\n+The @code{netlib} version of @code{libf2c/}\n+contains two distinct libraries,\n+@code{libF77} and @code{libI77},\n+each in their own subdirectories.\n+In @code{g77}, this distinction is not made,\n+beyond maintaining the subdirectory structure in the source-code tree.\n+\n+@file{libf2c/} is not part of the program @code{g77},\n+just distributed with it.\n+It contains files not present\n+in the official (@code{netlib}) version of @code{libf2c},\n+and also contains some minor changes made from @code{libf2c},\n+to fix some bugs,\n+and to facilitate automatic configuration, building, and installation of\n+@code{libf2c} (as @code{libg2c}) for use by @code{g77} users.\n+See @file{libf2c/README} for more information,\n+including licensing conditions\n+governing distribution of programs containing code from @code{libg2c}.\n+\n+@code{libg2c}, @code{g77}'s version of @code{libf2c},\n+adds Dave Love's implementation of @code{libU77},\n+in the @file{libf2c/libU77/} directory.\n+This library is distributed under the\n+GNU Library General Public License (LGPL)---see the\n+file @file{libf2c/libU77/COPYING.LIB}\n+for more information,\n+as this license\n+governs distribution conditions for programs containing code\n+from this portion of the library.\n+\n+Files of note in @file{f/} and @file{libf2c/} are described below:\n+\n+@table @file\n+@item f/BUGS\n+Lists some important bugs known to be in g77.\n+Or use Info (or GNU Emacs Info mode) to read\n+the ``Actual Bugs'' node of the @code{g77} documentation:\n+\n+@smallexample\n+info -f f/g77.info -n \"Actual Bugs\"\n+@end smallexample\n+\n+@item f/ChangeLog\n+Lists recent changes to @code{g77} internals.\n+\n+@item libf2c/ChangeLog\n+Lists recent changes to @code{libg2c} internals.\n+\n+@item f/NEWS\n+Contains the per-release changes.\n+These include the user-visible\n+changes described in the node ``Changes''\n+in the @code{g77} documentation, plus internal\n+changes of import.\n+Or use:\n+\n+@smallexample\n+info -f f/g77.info -n News\n+@end smallexample\n+\n+@item f/g77.info*\n+The @code{g77} documentation, in Info format,\n+produced by building @code{g77}.\n+\n+All users of @code{g77} (not just installers) should read this,\n+using the @code{more} command if neither the @code{info} command,\n+nor GNU Emacs (with its Info mode), are available, or if users\n+aren't yet accustomed to using these tools.\n+All of these files are readable as ``plain text'' files,\n+though they're easier to navigate using Info readers\n+such as @code{info} and GNU Emacs Info mode.\n+@end table\n+\n+If you want to explore the FFE code, which lives entirely in @file{f/},\n+here are a few clues.\n+The file @file{g77spec.c} contains the @code{g77}-specific source code\n+for the @code{g77} command only---this just forms a variant of the\n+@code{gcc} command, so,\n+just as the @code{gcc} command itself does not contain the C front end,\n+the @code{g77} command does not contain the Fortran front end (FFE).\n+The FFE code ends up in an executable named @file{f771},\n+which does the actual compiling,\n+so it contains the FFE plus the @code{gcc} back end (GBE),\n+the latter to do most of the optimization, and the code generation.\n+\n+The file @file{parse.c} is the source file for @code{yyparse()},\n+which is invoked by the GBE to start the compilation process,\n+for @file{f771}.\n+\n+The file @file{top.c} contains the top-level FFE function @code{ffe_file}\n+and it (along with top.h) define all @samp{ffe_[a-z].*}, @samp{ffe[A-Z].*},\n+and @samp{FFE_[A-Za-z].*} symbols.\n+\n+The file @file{fini.c} is a @code{main()} program that is used when building\n+the FFE to generate C header and source files for recognizing keywords.\n+The files @file{malloc.c} and @file{malloc.h} comprise a memory manager\n+that defines all @samp{malloc_[a-z].*}, @samp{malloc[A-Z].*}, and\n+@samp{MALLOC_[A-Za-z].*} symbols.\n+\n+All other modules named @var{xyz}\n+are comprised of all files named @samp{@var{xyz}*.@var{ext}}\n+and define all @samp{ffe@var{xyz}_[a-z].*}, @samp{ffe@var{xyz}[A-Z].*},\n+and @samp{FFE@var{XYZ}_[A-Za-z].*} symbols.\n+If you understand all this, congratulations---it's easier for me to remember\n+how it works than to type in these regular expressions.\n+But it does make it easy to find where a symbol is defined.\n+For example, the symbol @samp{ffexyz_set_something} would be defined\n+in @file{xyz.h} and implemented there (if it's a macro) or in @file{xyz.c}.\n+\n+The ``porting'' files of note currently are:\n+\n+@table @file\n+@item proj.c\n+@itemx proj.h\n+This defines the ``language'' used by all the other source files,\n+the language being Standard C plus some useful things\n+like @code{ARRAY_SIZE} and such.\n+\n+@item target.c\n+@itemx target.h\n+These describe the target machine\n+in terms of what data types are supported,\n+how they are denoted\n+(to what C type does an @code{INTEGER*8} map, for example),\n+how to convert between them,\n+and so on.\n+Over time, versions of @code{g77} rely less on this file\n+and more on run-time configuration based on GBE info\n+in @file{com.c}.\n+\n+@item com.c\n+@itemx com.h\n+These are the primary interface to the GBE.\n+\n+@item ste.c\n+@itemx ste.h\n+This contains code for implementing recognized executable statements\n+in the GBE.\n+\n+@item src.c\n+@itemx src.h\n+These contain information on the format(s) of source files\n+(such as whether they are never to be processed as case-insensitive\n+with regard to Fortran keywords).\n+@end table\n+\n+If you want to debug the @file{f771} executable,\n+for example if it crashes,\n+note that the global variables @code{lineno} and @code{input_filename}\n+are usually set to reflect the current line being read by the lexer\n+during the first-pass analysis of a program unit and to reflect\n+the current line being processed during the second-pass compilation\n+of a program unit.\n+\n+If an invocation of the function @code{ffestd_exec_end} is on the stack,\n+the compiler is in the second pass, otherwise it is in the first.\n+\n+(This information might help you reduce a test case and/or work around\n+a bug in @code{g77} until a fix is available.)\n+\n @node Overview of Translation Process\n @section Overview of Translation Process\n \n@@ -218,6 +435,16 @@ one that looks nothing like the others, but which offers their\n host products a better infrastructure in which to fit and coexist\n peacefully.)\n \n+@code{g77stripcard} probably shouldn't do any tab expansion or other\n+fancy stuff.\n+People can use @code{expand} or other pre-filtering if they like.\n+The idea here is to keep each stage quite simple, while providing\n+excellent performance for ``normal'' code.\n+\n+(Code with junk beyond column 73 is not really ``normal'',\n+as it comes from a card-punch heritage,\n+and will be increasingly hard for tomorrow's Fortran programmers to read.)\n+\n @node lex.c\n @subsection lex.c\n "}]}