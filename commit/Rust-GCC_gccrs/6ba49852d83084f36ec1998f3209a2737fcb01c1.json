{"sha": "6ba49852d83084f36ec1998f3209a2737fcb01c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhNDk4NTJkODMwODRmMzZlYzE5OThmMzIwOWEyNzM3ZmNiMDFjMQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2009-06-17T20:06:27Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2009-06-17T20:06:27Z"}, "message": "hook.in: Do not fail when there is no current objfile.\n\n\t* python/hook.in: Do not fail when there is no current objfile.\n\tUse os.path.normpath.\n\nFrom-SVN: r148626", "tree": {"sha": "5144c7c89982455146ac9358a1eff911855b34f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5144c7c89982455146ac9358a1eff911855b34f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ba49852d83084f36ec1998f3209a2737fcb01c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba49852d83084f36ec1998f3209a2737fcb01c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba49852d83084f36ec1998f3209a2737fcb01c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba49852d83084f36ec1998f3209a2737fcb01c1/comments", "author": null, "committer": null, "parents": [{"sha": "2cb0a60da1e179e012a43c23c4c1a7e875fd9504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cb0a60da1e179e012a43c23c4c1a7e875fd9504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cb0a60da1e179e012a43c23c4c1a7e875fd9504"}], "stats": {"total": 64, "additions": 37, "deletions": 27}, "files": [{"sha": "5abe28411cfd763b3445a046564d5a2e075f46a8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba49852d83084f36ec1998f3209a2737fcb01c1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba49852d83084f36ec1998f3209a2737fcb01c1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6ba49852d83084f36ec1998f3209a2737fcb01c1", "patch": "@@ -1,3 +1,8 @@\n+2009-06-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* python/hook.in: Do not fail when there is no current objfile.\n+\tUse os.path.normpath.\n+\n 2009-06-16  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* libsupc++/exception_ptr.h (exception_ptr::swap(exception_ptr&&)):"}, {"sha": "120e187ed19523277e97582aa4c4449f98cd3500", "filename": "libstdc++-v3/python/hook.in", "status": "modified", "additions": 32, "deletions": 27, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba49852d83084f36ec1998f3209a2737fcb01c1/libstdc%2B%2B-v3%2Fpython%2Fhook.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba49852d83084f36ec1998f3209a2737fcb01c1/libstdc%2B%2B-v3%2Fpython%2Fhook.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Fhook.in?ref=6ba49852d83084f36ec1998f3209a2737fcb01c1", "patch": "@@ -22,33 +22,38 @@ import os.path\n pythondir = '@pythondir@'\n libdir = '@toolexeclibdir@'\n \n-# Update module path.  We want to find the relative path from libdir\n-# to pythondir, and then we want to apply that relative path to the\n-# directory holding the objfile with which this file is associated.\n-# This preserves relocatability of the gcc tree.\n-\n-# Do a simple normalization that removes duplicate separators.\n-pythondir = os.path.join (*['/'] + pythondir.split (os.sep))\n-libdir = os.path.join (*['/'] + libdir.split (os.sep))\n-\n-prefix = os.path.commonprefix ([libdir, pythondir])\n-# In some bizarre configuration we might have found a match in the\n-# middle of a directory name.\n-if prefix[-1] != '/':\n-    prefix = os.path.dirname (prefix)\n-\n-# Strip off the prefix.\n-pythondir = pythondir[len (prefix):]\n-libdir = libdir[len (prefix):]\n-\n-# Compute the \"..\"s needed to get from libdir to the prefix.\n-dotdots = ('..' + os.sep) * len (libdir.split (os.sep))\n-\n-objfile = gdb.current_objfile ().filename\n-dir = os.path.join (os.path.dirname (objfile), dotdots, pythondir)\n-\n-if not dir in sys.path:\n-    sys.path.insert(0, dir)\n+# This file might be loaded when there is no current objfile.  This\n+# can happen if the user loads it manually.  In this case we don't\n+# update sys.path; instead we just hope the user managed to do that\n+# beforehand.\n+if gdb.current_objfile () is not None:\n+    # Update module path.  We want to find the relative path from libdir\n+    # to pythondir, and then we want to apply that relative path to the\n+    # directory holding the objfile with which this file is associated.\n+    # This preserves relocatability of the gcc tree.\n+\n+    # Do a simple normalization that removes duplicate separators.\n+    pythondir = os.path.normpath (pythondir)\n+    libdir = os.path.normpath (libdir)\n+\n+    prefix = os.path.commonprefix ([libdir, pythondir])\n+    # In some bizarre configuration we might have found a match in the\n+    # middle of a directory name.\n+    if prefix[-1] != '/':\n+        prefix = os.path.dirname (prefix)\n+\n+    # Strip off the prefix.\n+    pythondir = pythondir[len (prefix):]\n+    libdir = libdir[len (prefix):]\n+\n+    # Compute the \"..\"s needed to get from libdir to the prefix.\n+    dotdots = ('..' + os.sep) * len (libdir.split (os.sep))\n+\n+    objfile = gdb.current_objfile ().filename\n+    dir = os.path.join (os.path.dirname (objfile), dotdots, pythondir)\n+\n+    if not dir in sys.path:\n+        sys.path.insert(0, dir)\n \n # Load the pretty-printers.\n from libstdcxx.v6.printers import register_libstdcxx_printers"}]}