{"sha": "e7de8563dad312d3d56c5fb45cbe068a7c8f4928", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdkZTg1NjNkYWQzMTJkM2Q1NmM1ZmI0NWNiZTA2OGE3YzhmNDkyOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-11-08T11:25:32Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-11-08T11:25:32Z"}, "message": "aarch64.c: Include rtl-iter.h.\n\ngcc/\n\t* config/aarch64/aarch64.c: Include rtl-iter.h.\n\t(aarch64_tls_operand_p_1): Delete.\n\t(aarch64_tls_operand_p): Use FOR_EACH_SUBRTX.\n\nFrom-SVN: r217256", "tree": {"sha": "7fde31384d3b0345454c771db2f6e4591b05656d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fde31384d3b0345454c771db2f6e4591b05656d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7de8563dad312d3d56c5fb45cbe068a7c8f4928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7de8563dad312d3d56c5fb45cbe068a7c8f4928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7de8563dad312d3d56c5fb45cbe068a7c8f4928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7de8563dad312d3d56c5fb45cbe068a7c8f4928/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f959dcbba24faef0b0c0db98e044dcd3a9174c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f959dcbba24faef0b0c0db98e044dcd3a9174c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f959dcbba24faef0b0c0db98e044dcd3a9174c4e"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "4a513935160d8d047f8740fc60d59cfdc5039abd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7de8563dad312d3d56c5fb45cbe068a7c8f4928/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7de8563dad312d3d56c5fb45cbe068a7c8f4928/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7de8563dad312d3d56c5fb45cbe068a7c8f4928", "patch": "@@ -1,3 +1,9 @@\n+2014-11-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.c: Include rtl-iter.h.\n+\t(aarch64_tls_operand_p_1): Delete.\n+\t(aarch64_tls_operand_p): Use FOR_EACH_SUBRTX.\n+\n 2014-11-08  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/arm/arm.c (arm_note_pic_base): Delete."}, {"sha": "0429d96710bf36bd79fd09f3424b13d250938c53", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7de8563dad312d3d56c5fb45cbe068a7c8f4928/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7de8563dad312d3d56c5fb45cbe068a7c8f4928/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e7de8563dad312d3d56c5fb45cbe068a7c8f4928", "patch": "@@ -2809,28 +2809,23 @@ aarch64_output_mi_thunk (FILE *file, tree thunk ATTRIBUTE_UNUSED,\n   reload_completed = 0;\n }\n \n-static int\n-aarch64_tls_operand_p_1 (rtx *x, void *data ATTRIBUTE_UNUSED)\n-{\n-  if (GET_CODE (*x) == SYMBOL_REF)\n-    return SYMBOL_REF_TLS_MODEL (*x) != 0;\n-\n-  /* Don't recurse into UNSPEC_TLS looking for TLS symbols; these are\n-     TLS offsets, not real symbol references.  */\n-  if (GET_CODE (*x) == UNSPEC\n-      && XINT (*x, 1) == UNSPEC_TLS)\n-    return -1;\n-\n-  return 0;\n-}\n-\n static bool\n aarch64_tls_referenced_p (rtx x)\n {\n   if (!TARGET_HAVE_TLS)\n     return false;\n-\n-  return for_each_rtx (&x, aarch64_tls_operand_p_1, NULL);\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, x, ALL)\n+    {\n+      const_rtx x = *iter;\n+      if (GET_CODE (x) == SYMBOL_REF && SYMBOL_REF_TLS_MODEL (x) != 0)\n+\treturn true;\n+      /* Don't recurse into UNSPEC_TLS looking for TLS symbols; these are\n+\t TLS offsets, not real symbol references.  */\n+      if (GET_CODE (x) == UNSPEC && XINT (x, 1) == UNSPEC_TLS)\n+\titer.skip_subrtxes ();\n+    }\n+  return false;\n }\n \n "}]}