{"sha": "9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY4ZjFkZWY5ZGQ1ZDMwM2E0MzczOTdjNWUxYWFhNjBhZWY0NjhkOQ==", "commit": {"author": {"name": "Dmitrijs Ledkovs", "email": "dmitrij.ledkov@ubuntu.com", "date": "2010-08-27T04:27:40Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2010-08-27T04:27:40Z"}, "message": "Fix building ecjx in cross compile mode.\n\nlibjava/:\n\tPR libgcj/40868\n\t* configure.ac: Add GCC_FOR_ECJX variable.  Ensure\n\tGCJ_FOR_ECJX is always set.\n\t* Makefile.am [!NATIVE] (ecjx.$(OBJEXT)): New rule.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* gcj/Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\nCo-Authored-By: Ralf Wildenhues <Ralf.Wildenhues@gmx.de>\n\nFrom-SVN: r163580", "tree": {"sha": "f65631ede4a921c4935389a45f2258cc29d1a33d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f65631ede4a921c4935389a45f2258cc29d1a33d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/comments", "author": null, "committer": null, "parents": [{"sha": "a703b0c023a06afd8ef823feda674b952228b842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a703b0c023a06afd8ef823feda674b952228b842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a703b0c023a06afd8ef823feda674b952228b842"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "7094149fb2c56611dc42d6570b46e6f87014b70b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "patch": "@@ -1,3 +1,16 @@\n+2010-08-27  Dmitrijs Ledkovs  <dmitrij.ledkov@ubuntu.com>\n+\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR libgcj/40868\n+\t* configure.ac: Add GCC_FOR_ECJX variable.  Ensure\n+\tGCJ_FOR_ECJX is always set.\n+\t* Makefile.am [!NATIVE] (ecjx.$(OBJEXT)): New rule.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* gcj/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2010-08-18  Jack Howarth <howarth@bromo.med.uc.edu>\n \n \t* libjava/configure.ac (THREADLIBS): Don't set on Darwin."}, {"sha": "52d099556092dafa79e46f679c2090108201f551", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "patch": "@@ -1170,6 +1170,8 @@ ecjx_LINK = $(GCJ_FOR_ECJX_LINK) $(ecjx_LDFLAGS)\n ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR)\n ecjx_LDADD = \n ecjx_DEPENDENCIES = \n+ecjx.$(OBJEXT): ecjx.cc\n+\t$(GCC_FOR_ECJX) -c $<\n \n endif !NATIVE\n "}, {"sha": "c29d5cd1c31b95e3fbdfb52f0b11f254261ba0d2", "filename": "libjava/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "patch": "@@ -550,6 +550,7 @@ EGREP = @EGREP@\n EXCEPTIONSPEC = @EXCEPTIONSPEC@\n EXEEXT = @EXEEXT@\n FGREP = @FGREP@\n+GCC_FOR_ECJX = @GCC_FOR_ECJX@\n GCC_UNWIND_INCLUDE = @GCC_UNWIND_INCLUDE@\n GCDEPS = @GCDEPS@\n GCINCS = @GCINCS@\n@@ -12632,6 +12633,8 @@ write-entries-to-file-check:\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\t| sed -n -e 's|0x\\(..\\)\\(..\\).*\\(0x....\\).*#\\(.*\\)$$|MAP(0x\\1, 0x\\2, \\3)  /*\\4 */|p' \\\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\t>> tmp-0212; \\\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\tmv tmp-0212 $(srcdir)/gnu/gcj/convert/JIS0212.h\n+@NATIVE_FALSE@ecjx.$(OBJEXT): ecjx.cc\n+@NATIVE_FALSE@\t$(GCC_FOR_ECJX) -c $<\n \n src.zip:\n \t-rm -f src.zip"}, {"sha": "8fa4baffd68be4e823297704f4b087ad42985ab5", "filename": "libjava/configure", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "patch": "@@ -773,6 +773,7 @@ LIBLTDL\n INCLTDL\n host_exeext\n GCJH\n+GCC_FOR_ECJX\n GCJ_FOR_ECJX\n X_AWT_FALSE\n X_AWT_TRUE\n@@ -6703,14 +6704,16 @@ NATIVE=yes\n # Which gcj and host gcj (for ecjx) do we use?\n which_gcj=default\n host_exeext=${ac_exeext}\n-GCJ_FOR_ECJX=\n+GCJ_FOR_ECJX='$(GCJ)'\n+GCC_FOR_ECJX='$(CXX)'\n built_gcc_dir=\"`cd ${builddotdot}/../../${host_subdir}/gcc && ${PWDCMD-pwd}`\"\n if test -n \"${with_cross_host}\"; then\n   # We are being configured with a cross compiler. We can't\n   # use ac_exeext, because that is for the target platform.\n   NATIVE=no\n   cross_host_exeext=\n   GCJ_FOR_ECJX=\"${with_cross_host}-gcj\"\n+  GCC_FOR_ECJX=\"${with_cross_host}-gcc\"\n   case \"${with_cross_host}\" in\n      *mingw* | *cygwin*)\n          cross_host_exeext=.exe\n@@ -6779,6 +6782,7 @@ export JAVAC\n \n \n \n+\n # Create it, so that compile/link tests don't fail\n test -f libgcj.spec || touch libgcj.spec\n \n@@ -13349,7 +13353,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13352 \"configure\"\n+#line 13356 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13455,7 +13459,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13458 \"configure\"\n+#line 13462 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19434,7 +19438,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then :\n   enableval=$enable_sjlj_exceptions; :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 19437 \"configure\"\n+#line 19441 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()"}, {"sha": "df6bca3f662fb4ae0b20045efaa162920e03bea8", "filename": "libjava/configure.ac", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "patch": "@@ -394,14 +394,16 @@ NATIVE=yes\n # Which gcj and host gcj (for ecjx) do we use?\n which_gcj=default\n host_exeext=${ac_exeext}\n-GCJ_FOR_ECJX=\n+GCJ_FOR_ECJX='$(GCJ)'\n+GCC_FOR_ECJX='$(CXX)'\n built_gcc_dir=\"`cd ${builddotdot}/../../${host_subdir}/gcc && ${PWDCMD-pwd}`\"\n if test -n \"${with_cross_host}\"; then\n   # We are being configured with a cross compiler. We can't\n   # use ac_exeext, because that is for the target platform.\n   NATIVE=no\n   cross_host_exeext=\n   GCJ_FOR_ECJX=\"${with_cross_host}-gcj\"\n+  GCC_FOR_ECJX=\"${with_cross_host}-gcc\"\n   case \"${with_cross_host}\" in\n      *mingw* | *cygwin*)\n          cross_host_exeext=.exe\n@@ -467,6 +469,7 @@ JAVAC=\"$GCJ -C\"\n export JAVAC\n \n AC_SUBST(GCJ_FOR_ECJX)\n+AC_SUBST(GCC_FOR_ECJX)\n AC_SUBST(GCJH)\n AC_SUBST(host_exeext)\n "}, {"sha": "b2f6f149174b02d1a14e9d65fd2db594a43dc0fd", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "patch": "@@ -133,6 +133,7 @@ EGREP = @EGREP@\n EXCEPTIONSPEC = @EXCEPTIONSPEC@\n EXEEXT = @EXEEXT@\n FGREP = @FGREP@\n+GCC_FOR_ECJX = @GCC_FOR_ECJX@\n GCC_UNWIND_INCLUDE = @GCC_UNWIND_INCLUDE@\n GCDEPS = @GCDEPS@\n GCINCS = @GCINCS@"}, {"sha": "5df713e1fc4c7f7708e796b7887aabe3354019a6", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "patch": "@@ -134,6 +134,7 @@ EGREP = @EGREP@\n EXCEPTIONSPEC = @EXCEPTIONSPEC@\n EXEEXT = @EXEEXT@\n FGREP = @FGREP@\n+GCC_FOR_ECJX = @GCC_FOR_ECJX@\n GCC_UNWIND_INCLUDE = @GCC_UNWIND_INCLUDE@\n GCDEPS = @GCDEPS@\n GCINCS = @GCINCS@"}, {"sha": "37f81c210050902a2530bbbaed1616a4068efb6d", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f8f1def9dd5d303a437397c5e1aaa60aef468d9/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=9f8f1def9dd5d303a437397c5e1aaa60aef468d9", "patch": "@@ -109,6 +109,7 @@ EGREP = @EGREP@\n EXCEPTIONSPEC = @EXCEPTIONSPEC@\n EXEEXT = @EXEEXT@\n FGREP = @FGREP@\n+GCC_FOR_ECJX = @GCC_FOR_ECJX@\n GCC_UNWIND_INCLUDE = @GCC_UNWIND_INCLUDE@\n GCDEPS = @GCDEPS@\n GCINCS = @GCINCS@"}]}