{"sha": "ba998f6407ba006a8f8055171ee8e8510f0bc46b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE5OThmNjQwN2JhMDA2YThmODA1NTE3MWVlOGU4NTEwZjBiYzQ2Yg==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2021-02-13T00:34:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-15T10:19:40Z"}, "message": "[Ada] Avoid unhelpful dead code warnings\n\ngcc/ada/\n\n\t* exp_util.adb (Kill_Dead_Code): Generalize the existing\n\thandling of if statements to handle case statements similarly.", "tree": {"sha": "383b9050af614a050ffaf527c02c77d901c7f363", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/383b9050af614a050ffaf527c02c77d901c7f363"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba998f6407ba006a8f8055171ee8e8510f0bc46b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba998f6407ba006a8f8055171ee8e8510f0bc46b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba998f6407ba006a8f8055171ee8e8510f0bc46b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba998f6407ba006a8f8055171ee8e8510f0bc46b/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "759df6fd416d0e780ab40f1a6fc6e01130baa727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759df6fd416d0e780ab40f1a6fc6e01130baa727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/759df6fd416d0e780ab40f1a6fc6e01130baa727"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "860525d12a172b8e631000645b3cf5f33be953c9", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba998f6407ba006a8f8055171ee8e8510f0bc46b/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba998f6407ba006a8f8055171ee8e8510f0bc46b/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ba998f6407ba006a8f8055171ee8e8510f0bc46b", "patch": "@@ -9238,28 +9238,33 @@ package body Exp_Util is\n          if W then\n \n             --  We suppress the warning if this code is under control of an\n-            --  if statement, whose condition is a simple identifier, and\n-            --  either we are in an instance, or warnings off is set for this\n-            --  identifier. The reason for killing it in the instance case is\n-            --  that it is common and reasonable for code to be deleted in\n-            --  instances for various reasons.\n+            --  if/case statement and either\n+            --    a) we are in an instance and the condition/selector\n+            --       has a statically known value; or\n+            --    b) the condition/selector is a simple identifier and\n+            --       warnings off is set for this identifier.\n+            --  Dead code is common and reasonable in instances, so we don't\n+            --  want a warning in that case.\n \n-            --  Could we use Is_Statically_Unevaluated here???\n+            declare\n+               C : Node_Id := Empty;\n+            begin\n+               if Nkind (Parent (N)) = N_If_Statement then\n+                  C := Condition (Parent (N));\n+               elsif Nkind (Parent (N)) = N_Case_Statement_Alternative then\n+                  C := Expression (Parent (Parent (N)));\n+               end if;\n \n-            if Nkind (Parent (N)) = N_If_Statement then\n-               declare\n-                  C : constant Node_Id := Condition (Parent (N));\n-               begin\n-                  if Nkind (C) = N_Identifier\n-                    and then\n-                      (In_Instance\n-                        or else (Present (Entity (C))\n-                                  and then Has_Warnings_Off (Entity (C))))\n+               if Present (C) then\n+                  if (In_Instance and Compile_Time_Known_Value (C))\n+                    or else (Nkind (C) = N_Identifier\n+                             and then Present (Entity (C))\n+                             and then Has_Warnings_Off (Entity (C)))\n                   then\n                      W := False;\n                   end if;\n-               end;\n-            end if;\n+               end if;\n+            end;\n \n             --  Generate warning if not suppressed\n "}]}