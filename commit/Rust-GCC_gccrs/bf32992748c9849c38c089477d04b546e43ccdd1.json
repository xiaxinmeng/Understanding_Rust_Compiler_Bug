{"sha": "bf32992748c9849c38c089477d04b546e43ccdd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYzMjk5Mjc0OGM5ODQ5YzM4YzA4OTQ3N2QwNGI1NDZlNDNjY2RkMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-10-24T06:52:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-10-24T06:52:45Z"}, "message": "re PR tree-optimization/87665 (gcc HEAD (svn: 265340) breaks elements on resize)\n\n2018-10-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87665\n\t* tree-vect-data-refs.c (vect_preserves_scalar_order_p): Adjust\n\tto reflect reality.\n\n\t* gcc.dg/torture/pr87665.c: New testcase.\n\nFrom-SVN: r265452", "tree": {"sha": "b6a79a842c11272da8db5e0f790b1cbb6bf0d410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6a79a842c11272da8db5e0f790b1cbb6bf0d410"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf32992748c9849c38c089477d04b546e43ccdd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf32992748c9849c38c089477d04b546e43ccdd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf32992748c9849c38c089477d04b546e43ccdd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf32992748c9849c38c089477d04b546e43ccdd1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b763deedb282b480fe4c2b3a8ad07192393f1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b763deedb282b480fe4c2b3a8ad07192393f1b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b763deedb282b480fe4c2b3a8ad07192393f1b1"}], "stats": {"total": 66, "additions": 57, "deletions": 9}, "files": [{"sha": "33c906afb094c06506b0c744caa3a273d2b3f67f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf32992748c9849c38c089477d04b546e43ccdd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf32992748c9849c38c089477d04b546e43ccdd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf32992748c9849c38c089477d04b546e43ccdd1", "patch": "@@ -1,3 +1,9 @@\n+2018-10-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87665\n+\t* tree-vect-data-refs.c (vect_preserves_scalar_order_p): Adjust\n+\tto reflect reality.\n+\n 2018-10-12  Jeff Law  <law@redhat.com>\n \n         * config/h8300/h8300.c (h8300_expand_prologue): Fix stm generation"}, {"sha": "fd437f58a13e11a45ece8ccea61d0b5866490ca9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf32992748c9849c38c089477d04b546e43ccdd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf32992748c9849c38c089477d04b546e43ccdd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf32992748c9849c38c089477d04b546e43ccdd1", "patch": "@@ -1,3 +1,8 @@\n+2018-10-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87665\n+\t* gcc.dg/torture/pr87665.c: New testcase.\n+\n 2018-10-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/cpp2a/lambda-this3.C: Limit dg-bogus directives to c++17_down"}, {"sha": "6f5e968b628474fd114c581bb4356bef476cf828", "filename": "gcc/testsuite/gcc.dg/torture/pr87665.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf32992748c9849c38c089477d04b546e43ccdd1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87665.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf32992748c9849c38c089477d04b546e43ccdd1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87665.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87665.c?ref=bf32992748c9849c38c089477d04b546e43ccdd1", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+\n+struct X { long x; long y; };\n+\n+struct X a[1024], b[1024];\n+\n+void foo ()\n+{\n+  for (int i = 0; i < 1024; ++i)\n+    {\n+      long tem = a[i].x;\n+      a[i].x = 0;\n+      b[i].x = tem;\n+      b[i].y = a[i].y;\n+    }\n+}\n+\n+int main()\n+{\n+  for (int i = 0; i < 1024; ++i)\n+    a[i].x = i;\n+  foo ();\n+  for (int i = 0; i < 1024; ++i)\n+    if (b[i].x != i)\n+      __builtin_abort();\n+  return 0;\n+}"}, {"sha": "a24e1853e038325e35ededa2feb5d9d40d17931f", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf32992748c9849c38c089477d04b546e43ccdd1/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf32992748c9849c38c089477d04b546e43ccdd1/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=bf32992748c9849c38c089477d04b546e43ccdd1", "patch": "@@ -210,16 +210,26 @@ vect_preserves_scalar_order_p (dr_vec_info *dr_info_a, dr_vec_info *dr_info_b)\n     return true;\n \n   /* STMT_A and STMT_B belong to overlapping groups.  All loads in a\n-     group are emitted at the position of the first scalar load and all\n+     group are emitted at the position of the last scalar load and all\n      stores in a group are emitted at the position of the last scalar store.\n-     Thus writes will happen no earlier than their current position\n-     (but could happen later) while reads will happen no later than their\n-     current position (but could happen earlier).  Reordering is therefore\n-     only possible if the first access is a write.  */\n-  stmtinfo_a = vect_orig_stmt (stmtinfo_a);\n-  stmtinfo_b = vect_orig_stmt (stmtinfo_b);\n-  stmt_vec_info earlier_stmt_info = get_earlier_stmt (stmtinfo_a, stmtinfo_b);\n-  return !DR_IS_WRITE (STMT_VINFO_DATA_REF (earlier_stmt_info));\n+     Compute that position and check whether the resulting order matches\n+     the current one.  */\n+  stmt_vec_info last_a = DR_GROUP_FIRST_ELEMENT (stmtinfo_a);\n+  if (last_a)\n+    for (stmt_vec_info s = DR_GROUP_NEXT_ELEMENT (last_a); s;\n+\t s = DR_GROUP_NEXT_ELEMENT (s))\n+      last_a = get_later_stmt (last_a, s);\n+  else\n+    last_a = stmtinfo_a;\n+  stmt_vec_info last_b = DR_GROUP_FIRST_ELEMENT (stmtinfo_b);\n+  if (last_b)\n+    for (stmt_vec_info s = DR_GROUP_NEXT_ELEMENT (last_b); s;\n+\t s = DR_GROUP_NEXT_ELEMENT (s))\n+      last_b = get_later_stmt (last_b, s);\n+  else\n+    last_b = stmtinfo_b;\n+  return ((get_later_stmt (last_a, last_b) == last_a)\n+\t  == (get_later_stmt (stmtinfo_a, stmtinfo_b) == stmtinfo_a));\n }\n \n /* A subroutine of vect_analyze_data_ref_dependence.  Handle"}]}