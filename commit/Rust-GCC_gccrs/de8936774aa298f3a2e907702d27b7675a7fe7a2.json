{"sha": "de8936774aa298f3a2e907702d27b7675a7fe7a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU4OTM2Nzc0YWEyOThmM2EyZTkwNzcwMmQyN2I3Njc1YTdmZTdhMg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-06-05T20:23:44Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-06-05T20:23:44Z"}, "message": "re PR fortran/18923 (segfault after subroutine name confusion)\n\n2007-06-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/18923\n\t* parse.c (decode_statement): Don't call gfc_undo_symbols on MATCH_ERROR\n\tfor ST_FUNCTION since it is called in reject_statement.\n\t(parse_contained): If error, loop back after reject_statement and try\n\tagain.  Free the namespace if an error occured.\n\nFrom-SVN: r125342", "tree": {"sha": "7d511f2e0a50fe6f0bcfdce1c5e0544809902df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d511f2e0a50fe6f0bcfdce1c5e0544809902df0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de8936774aa298f3a2e907702d27b7675a7fe7a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de8936774aa298f3a2e907702d27b7675a7fe7a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de8936774aa298f3a2e907702d27b7675a7fe7a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de8936774aa298f3a2e907702d27b7675a7fe7a2/comments", "author": null, "committer": null, "parents": [{"sha": "52ff33d0eb56df70238a99b7aa66140609f3abc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ff33d0eb56df70238a99b7aa66140609f3abc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ff33d0eb56df70238a99b7aa66140609f3abc3"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "cdf96cdd6543c25cb6382901684e5e10867c5afd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de8936774aa298f3a2e907702d27b7675a7fe7a2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de8936774aa298f3a2e907702d27b7675a7fe7a2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=de8936774aa298f3a2e907702d27b7675a7fe7a2", "patch": "@@ -1,3 +1,11 @@\n+2007-06-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/18923\n+\t* parse.c (decode_statement): Don't call gfc_undo_symbols on MATCH_ERROR\n+\tfor ST_FUNCTION since it is called in reject_statement.\n+\t(parse_contained): If error, loop back after reject_statement and try\n+\tagain.  Free the namespace if an error occured.\n+\n 2007-06-04 Lee Millward <lee.millward@codesourcery.com>\n \n \t* trans-intrinsic.c (gfc_conv_intrinsic_function_args): Adjust"}, {"sha": "761e6315c3c4e778d9573fb584bf977090fcb6e3", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de8936774aa298f3a2e907702d27b7675a7fe7a2/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de8936774aa298f3a2e907702d27b7675a7fe7a2/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=de8936774aa298f3a2e907702d27b7675a7fe7a2", "patch": "@@ -117,8 +117,8 @@ decode_statement (void)\n \treturn ST_FUNCTION;\n       else if (m == MATCH_ERROR)\n \treject_statement ();\n-\n-      gfc_undo_symbols ();\n+      else \n+\tgfc_undo_symbols ();\n       gfc_current_locus = old_locus;\n     }\n \n@@ -2775,12 +2775,13 @@ gfc_fixup_sibling_symbols (gfc_symbol *sym, gfc_namespace *siblings)\n static void\n parse_contained (int module)\n {\n-  gfc_namespace *ns, *parent_ns;\n+  gfc_namespace *ns, *parent_ns, *tmp;\n   gfc_state_data s1, s2;\n   gfc_statement st;\n   gfc_symbol *sym;\n   gfc_entry_list *el;\n   int contains_statements = 0;\n+  int seen_error = 0;\n \n   push_state (&s1, COMP_CONTAINS, NULL);\n   parent_ns = gfc_current_ns;\n@@ -2792,6 +2793,9 @@ parse_contained (int module)\n       gfc_current_ns->sibling = parent_ns->contained;\n       parent_ns->contained = gfc_current_ns;\n \n+ next:\n+      /* Process the next available statement.  We come here if we got an error\n+\t and rejected the last statement.  */\n       st = next_statement ();\n \n       switch (st)\n@@ -2867,6 +2871,8 @@ parse_contained (int module)\n \t  gfc_error (\"Unexpected %s statement in CONTAINS section at %C\",\n \t\t     gfc_ascii_statement (st));\n \t  reject_statement ();\n+\t  seen_error = 1;\n+\t  goto next;\n \t  break;\n \t}\n     }\n@@ -2875,8 +2881,10 @@ parse_contained (int module)\n \n   /* The first namespace in the list is guaranteed to not have\n      anything (worthwhile) in it.  */\n-\n+  tmp = gfc_current_ns;\n   gfc_current_ns = parent_ns;\n+  if (seen_error && tmp->refs > 1)\n+    gfc_free_namespace (tmp);\n \n   ns = gfc_current_ns->contained;\n   gfc_current_ns->contained = ns->sibling;"}]}