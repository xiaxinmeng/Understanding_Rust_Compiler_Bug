{"sha": "13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM1NDVmMTllMGU3ZjFkNzNhZTZjMGIzOWY2Yjg2MjQwZGU1MDlhOA==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2017-11-14T18:11:33Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2017-11-14T18:11:33Z"}, "message": "Implement LWG 2733 and LWG 2759\n\n* include/experimental/numeric (gcd): Reject cv-qualified bool.\n(lcm): Likewise.\n* include/std/numeric (gcd): Likewise.\n(lcm): Likewise.\n* testsuite/26_numerics/gcd/gcd_neg.cc: Add tests and adjust.\n* testsuite/26_numerics/lcm/lcm_neg.cc: Likewise.\n\nFrom-SVN: r254736", "tree": {"sha": "7722acdb4f0bcb6fdcb8ef9545dbbfb719e46a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7722acdb4f0bcb6fdcb8ef9545dbbfb719e46a78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2e9196e5f8849bac2d4fa7fa5599eb2338c76bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2e9196e5f8849bac2d4fa7fa5599eb2338c76bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2e9196e5f8849bac2d4fa7fa5599eb2338c76bd"}], "stats": {"total": 90, "additions": 69, "deletions": 21}, "files": [{"sha": "dc152b36b5c494db568be4507897895fe2679bae", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "patch": "@@ -1,3 +1,13 @@\n+2017-11-14  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tImplement LWG 2733 and LWG 2759\n+\t* include/experimental/numeric (gcd): Reject cv-qualified bool.\n+\t(lcm): Likewise.\n+\t* include/std/numeric (gcd): Likewise.\n+\t(lcm): Likewise.\n+\t* testsuite/26_numerics/gcd/gcd_neg.cc: Add tests and adjust.\n+\t* testsuite/26_numerics/lcm/lcm_neg.cc: Likewise.\n+\n 2017-11-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/locale_conv.h (wbuffer_convert::_M_conv_get): Fix typo."}, {"sha": "f037d8e3b3de9b353deec5c194e44b095dc0513d", "filename": "libstdc++-v3/include/experimental/numeric", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric?ref=13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "patch": "@@ -55,10 +55,12 @@ inline namespace fundamentals_v2\n     constexpr common_type_t<_Mn, _Nn>\n     gcd(_Mn __m, _Nn __n)\n     {\n-      static_assert(is_integral<_Mn>::value, \"gcd arguments are integers\");\n-      static_assert(is_integral<_Nn>::value, \"gcd arguments are integers\");\n-      static_assert(!is_same<_Mn, bool>::value, \"gcd arguments are not bools\");\n-      static_assert(!is_same<_Nn, bool>::value, \"gcd arguments are not bools\");\n+      static_assert(is_integral_v<_Mn>, \"gcd arguments are integers\");\n+      static_assert(is_integral_v<_Nn>, \"gcd arguments are integers\");\n+      static_assert(!is_same_v<remove_cv_t<_Mn>, bool>,\n+\t\t    \"gcd arguments are not bools\");\n+      static_assert(!is_same_v<remove_cv_t<_Nn>, bool>,\n+\t\t    \"gcd arguments are not bools\");\n       return std::__detail::__gcd(__m, __n);\n     }\n \n@@ -67,10 +69,12 @@ inline namespace fundamentals_v2\n     constexpr common_type_t<_Mn, _Nn>\n     lcm(_Mn __m, _Nn __n)\n     {\n-      static_assert(is_integral<_Mn>::value, \"lcm arguments are integers\");\n-      static_assert(is_integral<_Nn>::value, \"lcm arguments are integers\");\n-      static_assert(!is_same<_Mn, bool>::value, \"lcm arguments are not bools\");\n-      static_assert(!is_same<_Nn, bool>::value, \"lcm arguments are not bools\");\n+      static_assert(is_integral_v<_Mn>, \"lcm arguments are integers\");\n+      static_assert(is_integral_v<_Nn>, \"lcm arguments are integers\");\n+      static_assert(!is_same_v<remove_cv_t<_Mn>, bool>,\n+\t\t    \"lcm arguments are not bools\");\n+      static_assert(!is_same_v<remove_cv_t<_Nn>, bool>,\n+\t\t    \"lcm arguments are not bools\");\n       return std::__detail::__lcm(__m, __n);\n     }\n } // namespace fundamentals_v2"}, {"sha": "a3a447d798ec6928189bcffd3ccf6be71b28ccb1", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "patch": "@@ -131,10 +131,12 @@ namespace __detail\n     constexpr common_type_t<_Mn, _Nn>\n     gcd(_Mn __m, _Nn __n)\n     {\n-      static_assert(is_integral<_Mn>::value, \"gcd arguments are integers\");\n-      static_assert(is_integral<_Nn>::value, \"gcd arguments are integers\");\n-      static_assert(!is_same<_Mn, bool>::value, \"gcd arguments are not bools\");\n-      static_assert(!is_same<_Nn, bool>::value, \"gcd arguments are not bools\");\n+      static_assert(is_integral_v<_Mn>, \"gcd arguments are integers\");\n+      static_assert(is_integral_v<_Nn>, \"gcd arguments are integers\");\n+      static_assert(!is_same_v<remove_cv_t<_Mn>, bool>,\n+\t\t    \"gcd arguments are not bools\");\n+      static_assert(!is_same_v<remove_cv<_Nn>, bool>,\n+\t\t    \"gcd arguments are not bools\");\n       return __detail::__gcd(__m, __n);\n     }\n \n@@ -143,10 +145,12 @@ namespace __detail\n     constexpr common_type_t<_Mn, _Nn>\n     lcm(_Mn __m, _Nn __n)\n     {\n-      static_assert(is_integral<_Mn>::value, \"lcm arguments are integers\");\n-      static_assert(is_integral<_Nn>::value, \"lcm arguments are integers\");\n-      static_assert(!is_same<_Mn, bool>::value, \"lcm arguments are not bools\");\n-      static_assert(!is_same<_Nn, bool>::value, \"lcm arguments are not bools\");\n+      static_assert(is_integral_v<_Mn>, \"lcm arguments are integers\");\n+      static_assert(is_integral_v<_Nn>, \"lcm arguments are integers\");\n+      static_assert(!is_same_v<remove_cv_t<_Mn>, bool>,\n+\t\t    \"lcm arguments are not bools\");\n+      static_assert(!is_same_v<remove_cv_t<_Nn>, bool>,\n+\t\t    \"lcm arguments are not bools\");\n       return __detail::__lcm(__m, __n);\n     }\n "}, {"sha": "63a8afa526f7c412e56196936a6819e4f7379758", "filename": "libstdc++-v3/testsuite/26_numerics/gcd/gcd_neg.cc", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc?ref=13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "patch": "@@ -26,14 +26,29 @@ test01()\n   std::gcd(true, 1);    // { dg-error \"from here\" }\n   std::gcd(1, true);    // { dg-error \"from here\" }\n   std::gcd(true, true); // { dg-error \"from here\" }\n+  std::gcd<const bool, int>(true, 1);    // { dg-error \"from here\" }\n+  std::gcd<int, const bool>(1, true);    // { dg-error \"from here\" }\n+  std::gcd<const bool, const bool>(true, true); // { dg-error \"from here\" }\n+  std::gcd<const bool&, int>(true, 1);    // { dg-error \"from here\" }\n+  std::gcd<int, const bool&>(1, true);    // { dg-error \"from here\" }\n+  std::gcd<const bool&, const bool&>(true, true); // { dg-error \"from here\" }\n+  std::gcd<const volatile bool, int>(true, 1);    // { dg-error \"from here\" }\n+  std::gcd<int, const volatile bool>(1, true);    // { dg-error \"from here\" }\n+  std::gcd<const volatile bool,\n+\t   const volatile bool>(true, true); // { dg-error \"from here\" }\n+  std::gcd<volatile bool, int>(true, 1);    // { dg-error \"from here\" }\n+  std::gcd<int, volatile bool>(1, true);    // { dg-error \"from here\" }\n+  std::gcd<volatile bool,\n+\t   volatile bool>(true, true); // { dg-error \"from here\" }\n   std::gcd(0.1, 1);     // { dg-error \"from here\" }\n   std::gcd(1, 0.1);     // { dg-error \"from here\" }\n   std::gcd(0.1, 0.1);   // { dg-error \"from here\" }\n+  std::gcd<const int&, const int&>(0.1, 0.1);   // { dg-error \"from here\" }\n }\n \n // { dg-error \"integers\" \"\" { target *-*-* } 134 }\n // { dg-error \"integers\" \"\" { target *-*-* } 135 }\n // { dg-error \"not bools\" \"\" { target *-*-* } 136 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 137 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 138 }\n // { dg-prune-output \"deleted function\" }\n // { dg-prune-output \"invalid operands\" }"}, {"sha": "d25a92df74df461e989c2bc07e9dc8b9776f034d", "filename": "libstdc++-v3/testsuite/26_numerics/lcm/lcm_neg.cc", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13545f19e0e7f1d73ae6c0b39f6b86240de509a8/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc?ref=13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "patch": "@@ -26,14 +26,29 @@ test01()\n   std::lcm(true, 1);    // { dg-error \"from here\" }\n   std::lcm(1, true);    // { dg-error \"from here\" }\n   std::lcm(true, true); // { dg-error \"from here\" }\n+  std::lcm<const bool, int>(true, 1);    // { dg-error \"from here\" }\n+  std::lcm<int, const bool>(1, true);    // { dg-error \"from here\" }\n+  std::lcm<const bool, const bool>(true, true); // { dg-error \"from here\" }\n+  std::lcm<const bool&, int>(true, 1);    // { dg-error \"from here\" }\n+  std::lcm<int, const bool&>(1, true);    // { dg-error \"from here\" }\n+  std::lcm<const bool&, const bool&>(true, true); // { dg-error \"from here\" }\n+  std::lcm<const volatile bool, int>(true, 1);    // { dg-error \"from here\" }\n+  std::lcm<int, const volatile bool>(1, true);    // { dg-error \"from here\" }\n+  std::lcm<const volatile bool,\n+\t   const volatile bool>(true, true); // { dg-error \"from here\" }\n+  std::lcm<volatile bool, int>(true, 1);    // { dg-error \"from here\" }\n+  std::lcm<int, volatile bool>(1, true);    // { dg-error \"from here\" }\n+  std::lcm<volatile bool,\n+\t   volatile bool>(true, true); // { dg-error \"from here\" }\n   std::lcm(0.1, 1);     // { dg-error \"from here\" }\n   std::lcm(1, 0.1);     // { dg-error \"from here\" }\n   std::lcm(0.1, 0.1);   // { dg-error \"from here\" }\n+  std::lcm<const int&, const int&>(0.1, 0.1);   // { dg-error \"from here\" }\n }\n \n-// { dg-error \"integers\" \"\" { target *-*-* } 146 }\n-// { dg-error \"integers\" \"\" { target *-*-* } 147 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 148 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 149 }\n+// { dg-error \"integers\" \"\" { target *-*-* } 148 }\n+// { dg-error \"integers\" \"\" { target *-*-* } 149 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 150 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 152 }\n // { dg-prune-output \"deleted function\" }\n // { dg-prune-output \"invalid operands\" }"}]}