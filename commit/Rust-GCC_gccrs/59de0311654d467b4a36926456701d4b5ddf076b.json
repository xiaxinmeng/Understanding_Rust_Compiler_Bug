{"sha": "59de0311654d467b4a36926456701d4b5ddf076b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlkZTAzMTE2NTRkNDY3YjRhMzY5MjY0NTY3MDFkNGI1ZGRmMDc2Yg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-07T03:06:57Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-07T03:06:57Z"}, "message": "cppmain.c (main): Use CPP_SET_WRITTEN and cpp_fatal.\n\n* cppmain.c (main):  Use CPP_SET_WRITTEN and cpp_fatal.\nUse renamed function names, and return protocols.\n\nFrom-SVN: r12203", "tree": {"sha": "fa9e99e1929c258358b759079c8b22e0962230ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa9e99e1929c258358b759079c8b22e0962230ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59de0311654d467b4a36926456701d4b5ddf076b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59de0311654d467b4a36926456701d4b5ddf076b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59de0311654d467b4a36926456701d4b5ddf076b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59de0311654d467b4a36926456701d4b5ddf076b/comments", "author": null, "committer": null, "parents": [{"sha": "a94c94be24475b20cc1af6b3a01b9fd683486e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94c94be24475b20cc1af6b3a01b9fd683486e6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a94c94be24475b20cc1af6b3a01b9fd683486e6c"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "50e31be85d692a4b0ee62ff320bd3c715256f3bb", "filename": "gcc/cppmain.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59de0311654d467b4a36926456701d4b5ddf076b/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59de0311654d467b4a36926456701d4b5ddf076b/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=59de0311654d467b4a36926456701d4b5ddf076b", "patch": "@@ -58,19 +58,21 @@ main (argc, argv)\n   while (p != argv[0] && p[-1] != '/') --p;\n   progname = p;\n \n-  init_parse_file (&parse_in);\n+  cpp_reader_init (&parse_in);\n   parse_in.data = opts;\n \n-  init_parse_options (opts);\n+  cpp_options_init (opts);\n   \n   argi += cpp_handle_options (&parse_in, argc - argi , argv + argi);\n+  if (CPP_FATAL_ERRORS (&parse_in))\n+    exit (FATAL_EXIT_CODE);\n   if (argi < argc)\n-    fatal (\"Invalid option `%s'\", argv[argi]);\n+    cpp_fatal (&parse_in, \"Invalid option `%s'\", argv[argi]);\n+      \n   parse_in.show_column = 1;\n \n-  i = push_parse_file (&parse_in, opts->in_fname);\n-  if (i != SUCCESS_EXIT_CODE)\n-    return i;\n+  if (! cpp_start_read (&parse_in, opts->in_fname))\n+    exit (FATAL_EXIT_CODE);\n \n   /* Now that we know the input file is valid, open the output.  */\n \n@@ -86,7 +88,7 @@ main (argc, argv)\n \t{\n \t  fwrite (parse_in.token_buffer, 1, CPP_WRITTEN (&parse_in), stdout);\n \t}\n-      parse_in.limit = parse_in.token_buffer;\n+      CPP_SET_WRITTEN (&parse_in, 0);\n       kind = cpp_get_token (&parse_in);\n       if (kind == CPP_EOF)\n \tbreak;"}]}