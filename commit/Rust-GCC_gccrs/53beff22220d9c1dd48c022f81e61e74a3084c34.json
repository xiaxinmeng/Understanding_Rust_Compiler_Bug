{"sha": "53beff22220d9c1dd48c022f81e61e74a3084c34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNiZWZmMjIyMjBkOWMxZGQ0OGMwMjJmODFlNjFlNzRhMzA4NGMzNA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2011-08-01T16:02:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T16:02:10Z"}, "message": "err_vars.ads (Error_Msg_Lang, [...]): new variables for insertion character ~~\n\n2011-08-01  Yannick Moy  <moy@adacore.com>\n\n\t* err_vars.ads (Error_Msg_Lang, Error_Msg_Langlen): new variables for\n\tinsertion character ~~\n\t* errout.ads, errout.adb (Formal_Error_Msg_...): remove procedures\n\t(Set_Error_Msg_Lang): new procedure which fixes the language for use\n\twith insertion character ~~\n\t(Set_Msg_Text): treat insertion character ~~\n\t* par-ch4.adb, par-ch5.adb, par-endh.adb, sem_attr.adb, sem_ch11.adb,\n\tsem_ch3.adb, sem_ch5.adb, sem_ch9.adb, sem_util.adb: Replace calls to\n\tFormal_Error_Msg_... procedures by equivalent Error_Msg_...\n\tprocedures. Favor calls to Error_Msg_F(E) over Error_Msg_N(E). Make\n\terrors related to the formal language restriction not serious\n\t(insertion character |).\n\t* par.adb (Par): set formal language for error messages if needed\n\t* sem_ch6.adb (Check_Missing_Return): take into account possible\n\tgenerated statements at the end of the function\n\t* snames.ads-tmpl (Name_SPARK_95, Pragma_SPARK_95): new variable and\n\tenumeration value to define a new pragma SPARK_95\n\t* opt.ads, opt.adb (SPARK_Version_Type, SPARK_Version_Default,\n\tSPARK_Version): new type and variables to store the SPARK version\n\t(none by default).\n\t(SPARK_Mode): return True when SPARK_Version is set\n\t* par-prag.adb: Correct indentation\n\t(Prag): take Pragma_SPARK_95 into account\n\t* sem_prag.adb (Set_Mechanism_Value, Sig_Flags): take Pragma_SPARK_95\n\tinto account.\n\nFrom-SVN: r177056", "tree": {"sha": "9504cb26aef222dd3a0b5ec060685188ffca9ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9504cb26aef222dd3a0b5ec060685188ffca9ba9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53beff22220d9c1dd48c022f81e61e74a3084c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53beff22220d9c1dd48c022f81e61e74a3084c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53beff22220d9c1dd48c022f81e61e74a3084c34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53beff22220d9c1dd48c022f81e61e74a3084c34/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d606a78a331b91295e7ce1e27bf12e419084093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d606a78a331b91295e7ce1e27bf12e419084093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d606a78a331b91295e7ce1e27bf12e419084093"}], "stats": {"total": 374, "additions": 221, "deletions": 153}, "files": [{"sha": "d79f7c7c79356918e772f8528adcdf5b3968451c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -1,3 +1,31 @@\n+2011-08-01  Yannick Moy  <moy@adacore.com>\n+\n+\t* err_vars.ads (Error_Msg_Lang, Error_Msg_Langlen): new variables for\n+\tinsertion character ~~\n+\t* errout.ads, errout.adb (Formal_Error_Msg_...): remove procedures\n+\t(Set_Error_Msg_Lang): new procedure which fixes the language for use\n+\twith insertion character ~~\n+\t(Set_Msg_Text): treat insertion character ~~\n+\t* par-ch4.adb, par-ch5.adb, par-endh.adb, sem_attr.adb, sem_ch11.adb,\n+\tsem_ch3.adb, sem_ch5.adb, sem_ch9.adb, sem_util.adb: Replace calls to\n+\tFormal_Error_Msg_... procedures by equivalent Error_Msg_...\n+\tprocedures. Favor calls to Error_Msg_F(E) over Error_Msg_N(E). Make\n+\terrors related to the formal language restriction not serious\n+\t(insertion character |).\n+\t* par.adb (Par): set formal language for error messages if needed\n+\t* sem_ch6.adb (Check_Missing_Return): take into account possible\n+\tgenerated statements at the end of the function\n+\t* snames.ads-tmpl (Name_SPARK_95, Pragma_SPARK_95): new variable and\n+\tenumeration value to define a new pragma SPARK_95\n+\t* opt.ads, opt.adb (SPARK_Version_Type, SPARK_Version_Default,\n+\tSPARK_Version): new type and variables to store the SPARK version\n+\t(none by default).\n+\t(SPARK_Mode): return True when SPARK_Version is set\n+\t* par-prag.adb: Correct indentation\n+\t(Prag): take Pragma_SPARK_95 into account\n+\t* sem_prag.adb (Set_Mechanism_Value, Sig_Flags): take Pragma_SPARK_95\n+\tinto account.\n+\n 2011-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, sem_ch3.ads, sem_ch5.adb, prj-part.adb, par-ch4.adb,"}, {"sha": "22f70f61251dfd1bd692241f826b9f94d4d18163", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -150,4 +150,9 @@ package Err_Vars is\n    --  Used if current message contains a ~ insertion character to indicate\n    --  insertion of the string Error_Msg_String (1 .. Error_Msg_Strlen).\n \n+   Error_Msg_Lang : String (1 .. 4096);\n+   Error_Msg_Langlen : Natural;\n+   --  Used if current message contains a ~~ insertion character to indicate\n+   --  insertion of the string Error_Msg_Lang (1 .. Error_Msg_Langlen).\n+\n end Err_Vars;"}, {"sha": "be963dbf95246cfa2c46adfd3eb3947d0bc584b5", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 16, "deletions": 45, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -1402,49 +1402,6 @@ package body Errout is\n       return S;\n    end First_Sloc;\n \n-   ----------------------\n-   -- Formal_Error_Msg --\n-   ----------------------\n-\n-   procedure Formal_Error_Msg (Msg : String; Flag_Location : Source_Ptr) is\n-   begin\n-      pragma Assert (Formal_Verification_Mode);\n-      Error_Msg (\"(\" & Formal_Language & \") \" & Msg, Flag_Location);\n-   end Formal_Error_Msg;\n-\n-   ------------------------\n-   -- Formal_Error_Msg_N --\n-   ------------------------\n-\n-   procedure Formal_Error_Msg_N (Msg : String; N : Node_Id) is\n-   begin\n-      pragma Assert (Formal_Verification_Mode);\n-      Error_Msg_N (\"(\" & Formal_Language & \") \" & Msg, N);\n-   end Formal_Error_Msg_N;\n-\n-   -------------------------\n-   -- Formal_Error_Msg_NE --\n-   -------------------------\n-\n-   procedure Formal_Error_Msg_NE\n-     (Msg : String;\n-      N   : Node_Or_Entity_Id;\n-      E   : Node_Or_Entity_Id) is\n-   begin\n-      pragma Assert (Formal_Verification_Mode);\n-      Error_Msg_NE (\"(\" & Formal_Language & \") \" & Msg, N, E);\n-   end Formal_Error_Msg_NE;\n-\n-   -------------------------\n-   -- Formal_Error_Msg_SP --\n-   -------------------------\n-\n-   procedure Formal_Error_Msg_SP (Msg : String) is\n-   begin\n-      pragma Assert (Formal_Verification_Mode);\n-      Error_Msg_SP (\"(\" & Formal_Language & \") \" & Msg);\n-   end Formal_Error_Msg_SP;\n-\n    ----------------\n    -- Initialize --\n    ----------------\n@@ -2214,6 +2171,16 @@ package body Errout is\n       Set_Casing (Desired_Case);\n    end Set_Identifier_Casing;\n \n+   ------------------------\n+   -- Set_Error_Msg_Lang --\n+   ------------------------\n+\n+   procedure Set_Error_Msg_Lang (To : String) is\n+   begin\n+      Error_Msg_Langlen := To'Length;\n+      Error_Msg_Lang (1 .. Error_Msg_Langlen) := To;\n+   end Set_Error_Msg_Lang;\n+\n    -----------------------\n    -- Set_Ignore_Errors --\n    -----------------------\n@@ -2675,7 +2642,6 @@ package body Errout is\n                if P <= Text'Last and then Text (P) = '$' then\n                   P := P + 1;\n                   Set_Msg_Insertion_Unit_Name (Suffix => False);\n-\n                else\n                   Set_Msg_Insertion_Unit_Name;\n                end if;\n@@ -2733,7 +2699,12 @@ package body Errout is\n                P := P + 1;\n \n             when '~' =>\n-               Set_Msg_Str (Error_Msg_String (1 .. Error_Msg_Strlen));\n+               if P <= Text'Last and then Text (P) = '~' then\n+                  P := P + 1;\n+                  Set_Msg_Str (Error_Msg_Lang (1 .. Error_Msg_Langlen));\n+               else\n+                  Set_Msg_Str (Error_Msg_String (1 .. Error_Msg_Strlen));\n+               end if;\n \n             --  Upper case letter\n "}, {"sha": "611ca02e0d0dd994884f2ee0e8c61f6f27379766", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -346,6 +346,16 @@ package Errout is\n    --      inserted to replace the ~ character. The string is inserted in the\n    --      literal form it appears, without any action on special characters.\n \n+   --    Insertion character ~~ (Two tildes: insert language string)\n+   --      Indicates that Error_Msg_Lang (1 .. Error_Msg_Langlen) is to be\n+   --      inserted to replace the ~~ character. Typically the language string\n+   --      will be inserted in parentheses as a prefix of the error message, as\n+   --      in \"(spark) error msg\". The string is inserted in the literal form\n+   --      it appears, without any action on special characters. Error_Msg_Lang\n+   --      and Error_Msg_Langlen are expected to be set only once before\n+   --      parsing starts, so that the caller to an error procedure does not\n+   --      need to set them repeatedly.\n+\n    ----------------------------------------\n    -- Specialization of Messages for VMS --\n    ----------------------------------------\n@@ -459,6 +469,11 @@ package Errout is\n    --  Used if current message contains a ~ insertion character to indicate\n    --  insertion of the string Error_Msg_String (1 .. Error_Msg_Strlen).\n \n+   Error_Msg_Lang : String  renames Err_Vars.Error_Msg_Lang;\n+   Error_Msg_Langlen : Natural renames Err_Vars.Error_Msg_Langlen;\n+   --  Used if current message contains a ~~ insertion character to indicate\n+   --  insertion of the string Error_Msg_Lang (1 .. Error_Msg_Langlen).\n+\n    -----------------------------------------------------\n    -- Format of Messages and Manual Quotation Control --\n    -----------------------------------------------------\n@@ -735,25 +750,6 @@ package Errout is\n    --  where the expression is parenthesized, an attempt is made to include\n    --  the parentheses (i.e. to return the location of the initial paren).\n \n-   procedure Formal_Error_Msg (Msg : String; Flag_Location : Source_Ptr);\n-   --  Wrapper on Error_Msg which adds a prefix to Msg giving the name of\n-   --  the formal language analyzed (spark or alfa)\n-\n-   procedure Formal_Error_Msg_N (Msg : String; N : Node_Id);\n-   --  Wrapper on Error_Msg_N which adds a prefix to Msg giving the name of\n-   --  the formal language analyzed (spark or alfa)\n-\n-   procedure Formal_Error_Msg_NE\n-     (Msg : String;\n-      N   : Node_Or_Entity_Id;\n-      E   : Node_Or_Entity_Id);\n-   --  Wrapper on Error_Msg_NE which adds a prefix to Msg giving the name of\n-   --  the formal language analyzed (spark or alfa)\n-\n-   procedure Formal_Error_Msg_SP (Msg : String);\n-   --  Wrapper on Error_Msg_SP which adds a prefix to Msg giving the name of\n-   --  the formal language analyzed (spark or alfa)\n-\n    procedure Purge_Messages (From : Source_Ptr; To : Source_Ptr)\n      renames Erroutc.Purge_Messages;\n    --  All error messages whose location is in the range From .. To (not\n@@ -770,6 +766,10 @@ package Errout is\n    --  Remove warnings on all elements of a list (Calls Remove_Warning_Messages\n    --  on each element of the list, see above).\n \n+   procedure Set_Error_Msg_Lang (To : String);\n+   --  Set Error_Msg_Lang and Error_Msg_Langlen used for insertion character ~~\n+   --  so that Error_Msg_Lang (1 .. Error_Msg_Langlen) = To.\n+\n    procedure Set_Ignore_Errors (To : Boolean);\n    --  Following a call to this procedure with To=True, all error calls are\n    --  ignored. A call with To=False restores the default treatment in which"}, {"sha": "1e7bf0f709e32d0655f05ce2254bc5c18fd83843", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -263,7 +263,11 @@ package body Opt is\n \n    function SPARK_Mode return Boolean is\n    begin\n-      return Debug.Debug_Flag_Dot_DD;\n+      --  When dropping the debug flag in favor of a compiler option,\n+      --  the option should implicitly set the SPARK_Version, so that this test\n+      --  becomes simply SPARK_Version > SPARK_None.\n+\n+      return Debug.Debug_Flag_Dot_DD or else SPARK_Version > SPARK_None;\n    end SPARK_Mode;\n \n    ---------------"}, {"sha": "ed6c53c43b44115294d4a31841730a38a74e77be", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -1167,6 +1167,22 @@ package Opt is\n    --  GNAT\n    --  Set True if a pragma Short_Descriptors applies to the current unit.\n \n+   type SPARK_Version_Type is (SPARK_None, SPARK_95);\n+   pragma Ordered (SPARK_Version_Type);\n+   --  Versions of SPARK for SPARK_Version below. Note that these are ordered,\n+   --  so that tests like SPARK_Version >= SPARK_95 are legitimate and useful.\n+   --  Think twice before using \"=\"; SPARK_Version >= SPARK_95 is more likely\n+   --  what you want, because it will apply to future versions of the language.\n+\n+   SPARK_Version_Default : constant SPARK_Version_Type := SPARK_None;\n+   --  GNAT\n+   --  Default SPARK version if no switch given\n+\n+   SPARK_Version : SPARK_Version_Type := SPARK_Version_Default;\n+   --  GNAT\n+   --  Current SPARK version for compiler, as set by configuration pragmas or\n+   --  compiler switches.\n+\n    Sprint_Line_Limit : Nat := 72;\n    --  GNAT\n    --  Limit values for chopping long lines in Sprint output, can be reset"}, {"sha": "74ab7604a8aa711ab202b7f02782eb8ad0f4f001", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -670,8 +670,8 @@ package body Ch4 is\n \n             if Token = Tok_Arrow or else Token = Tok_Colon_Equal then\n                if SPARK_Mode then\n-                  Formal_Error_Msg_SP (\"no mixing of positional and named \"\n-                                       & \"parameter association\");\n+                  Error_Msg_SP (\"|~~no mixing of positional and named \"\n+                                & \"parameter association\");\n                end if;\n \n                Restore_Scan_State (Scan_State); -- to Id"}, {"sha": "3c8f2d5f5627d723658c8b7c436ce501a14e6a33", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -2150,8 +2150,8 @@ package body Ch5 is\n                      else\n                         pragma Assert (SPARK_Mode);\n                         Error_Msg_Sloc := Body_Sloc;\n-                        Formal_Error_Msg_N\n-                          (\"decl cannot appear after body#\", Decl);\n+                        Error_Msg_F\n+                          (\"|~~decl cannot appear after body#\", Decl);\n                      end if;\n                   end if;\n "}, {"sha": "12c5509e431fefced3fae1466e447bd7c70b897a", "filename": "gcc/ada/par-endh.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar-endh.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar-endh.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-endh.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -378,8 +378,8 @@ package body Endh is\n                     and then Explicit_Start_Label (Scope.Last)\n                   then\n                      Error_Msg_Node_1 := Scope.Table (Scope.Last).Labl;\n-                     Formal_Error_Msg_SP -- CODEFIX\n-                       (\"`END &` required\");\n+                     Error_Msg_SP -- CODEFIX\n+                       (\"|~~`END &` required\");\n                   end if;\n \n                   --  Do style check for missing label"}, {"sha": "502cb70b253c065acce706f376755bf03eefdb7e", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 34, "deletions": 22, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -439,37 +439,37 @@ begin\n          List_Pragmas.Increment_Last;\n          List_Pragmas.Table (List_Pragmas.Last) := (Page, Semi);\n \n-         ------------------\n-         -- Restrictions --\n-         ------------------\n+      ------------------\n+      -- Restrictions --\n+      ------------------\n \n-         --  pragma Restrictions (RESTRICTION {, RESTRICTION});\n+      --  pragma Restrictions (RESTRICTION {, RESTRICTION});\n \n-         --  RESTRICTION ::=\n-         --    restriction_IDENTIFIER\n-         --  | restriction_parameter_IDENTIFIER => EXPRESSION\n+      --  RESTRICTION ::=\n+      --    restriction_IDENTIFIER\n+      --  | restriction_parameter_IDENTIFIER => EXPRESSION\n \n-         --  We process the case of No_Obsolescent_Features, since this has\n-         --  a syntactic effect that we need to detect at parse time (the use\n-         --  of replacement characters such as colon for pound sign).\n+      --  We process the case of No_Obsolescent_Features, since this has\n+      --  a syntactic effect that we need to detect at parse time (the use\n+      --  of replacement characters such as colon for pound sign).\n \n-         when Pragma_Restrictions =>\n-            Process_Restrictions_Or_Restriction_Warnings;\n+      when Pragma_Restrictions =>\n+         Process_Restrictions_Or_Restriction_Warnings;\n \n-         --------------------------\n-         -- Restriction_Warnings --\n-         --------------------------\n+      --------------------------\n+      -- Restriction_Warnings --\n+      --------------------------\n \n-         --  pragma Restriction_Warnings (RESTRICTION {, RESTRICTION});\n+      --  pragma Restriction_Warnings (RESTRICTION {, RESTRICTION});\n \n-         --  RESTRICTION ::=\n-         --    restriction_IDENTIFIER\n-         --  | restriction_parameter_IDENTIFIER => EXPRESSION\n+      --  RESTRICTION ::=\n+      --    restriction_IDENTIFIER\n+      --  | restriction_parameter_IDENTIFIER => EXPRESSION\n \n-         --  See above comment for pragma Restrictions\n+      --  See above comment for pragma Restrictions\n \n-         when Pragma_Restriction_Warnings =>\n-            Process_Restrictions_Or_Restriction_Warnings;\n+      when Pragma_Restriction_Warnings =>\n+         Process_Restrictions_Or_Restriction_Warnings;\n \n       ----------------------------------------------------------\n       -- Source_File_Name and Source_File_Name_Project (GNAT) --\n@@ -889,6 +889,18 @@ begin\n          end if;\n       end Source_Reference;\n \n+      --------------\n+      -- SPARK_95 --\n+      --------------\n+\n+      --  This pragma must be processed at parse time, since we want to set\n+      --  the SPARK version properly at parse time to recognize the appropriate\n+      --  SPARK version syntax.\n+\n+      when Pragma_SPARK_95 =>\n+         SPARK_Version := SPARK_95;\n+         Set_Error_Msg_Lang (\"(\" & Formal_Language & \") \");\n+\n       -------------------------\n       -- Style_Checks (GNAT) --\n       -------------------------"}, {"sha": "b4c8d83e4ddb09ff96ecee126eecd52ad608d858", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -1318,6 +1318,10 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n begin\n    Compiler_State := Parsing;\n \n+   if Formal_Verification_Mode then\n+      Set_Error_Msg_Lang (\"(\" & Formal_Language & \") \");\n+   end if;\n+\n    --  Deal with configuration pragmas case first\n \n    if Configuration_Pragmas then"}, {"sha": "1b6d3ef30b62d9709501152058fa588d4a81556b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -2065,8 +2065,8 @@ package body Sem_Attr is\n         and then not In_Open_Scopes (Scope (P_Type))\n         and then not In_Spec_Expression\n       then\n-         Formal_Error_Msg_NE\n-           (\"invisible attribute of}\", N, First_Subtype (P_Type));\n+         Error_Msg_FE\n+           (\"|~~invisible attribute of}\", N, First_Subtype (P_Type));\n       end if;\n \n       --  Remaining processing depends on attribute"}, {"sha": "1b0c182713a906218e6c5834f086590adf332c36", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -444,7 +444,7 @@ package body Sem_Ch11 is\n       --  Raise statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"raise statement is not allowed\", N);\n+         Error_Msg_F (\"|~~raise statement is not allowed\", N);\n       end if;\n \n       --  Proceed with analysis\n@@ -620,7 +620,7 @@ package body Sem_Ch11 is\n       if Formal_Verification_Mode\n         and then Comes_From_Source (N)\n       then\n-         Formal_Error_Msg_N (\"raise statement is not allowed\", N);\n+         Error_Msg_F (\"|~~raise statement is not allowed\", N);\n       end if;\n \n       --  Proceed with analysis"}, {"sha": "52ff61344399cb69d785f4a5492827e6f377de23", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -2034,8 +2034,8 @@ package body Sem_Ch3 is\n            and then Nkind (D) = N_Package_Declaration\n            and then Nkind (Parent (L)) = N_Package_Specification\n          then\n-            Formal_Error_Msg_N (\"package specification cannot contain \"\n-                                & \"a package declaration\", D);\n+            Error_Msg_F (\"|~~package specification cannot contain \"\n+                         & \"a package declaration\", D);\n          end if;\n \n          --  Complete analysis of declaration\n@@ -2363,13 +2363,13 @@ package body Sem_Ch3 is\n          --  Controlled type is not allowed in SPARK and ALFA\n \n          if Is_Visibly_Controlled (T) then\n-            Formal_Error_Msg_N (\"controlled type is not allowed\", N);\n+            Error_Msg_F (\"|~~controlled type is not allowed\", N);\n          end if;\n \n          --  Discriminant type is not allowed in SPARK and ALFA\n \n          if Present (Discriminant_Specifications (N)) then\n-            Formal_Error_Msg_N (\"discriminant type is not allowed\", N);\n+            Error_Msg_F (\"|~~discriminant type is not allowed\", N);\n          end if;\n       end if;\n "}, {"sha": "e572aa207912c6e78b1fc83fb1d5ac95d3ea850e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -809,7 +809,7 @@ package body Sem_Ch5 is\n       --  Block statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"block statement is not allowed\", N);\n+         Error_Msg_F (\"|~~block statement is not allowed\", N);\n       end if;\n \n       --  If no handled statement sequence is present, things are really\n@@ -1106,8 +1106,8 @@ package body Sem_Ch5 is\n         and then Others_Present\n         and then List_Length (Alternatives (N)) = 1\n       then\n-         Formal_Error_Msg_N\n-           (\"OTHERS as unique case alternative is not allowed\", N);\n+         Error_Msg_F\n+           (\"|~~OTHERS as unique case alternative is not allowed\", N);\n       end if;\n \n       if Exp_Type = Universal_Integer and then not Others_Present then\n@@ -1184,8 +1184,8 @@ package body Sem_Ch5 is\n          elsif Formal_Verification_Mode\n            and then Has_Loop_In_Inner_Open_Scopes (U_Name)\n          then\n-            Formal_Error_Msg_N\n-              (\"exit label must name the closest enclosing loop\", N);\n+            Error_Msg_F\n+              (\"|~~exit label must name the closest enclosing loop\", N);\n             return;\n          else\n             Set_Has_Exit (U_Name);\n@@ -1230,32 +1230,32 @@ package body Sem_Ch5 is\n       if Formal_Verification_Mode then\n          if Present (Cond) then\n             if Nkind (Parent (N)) /= N_Loop_Statement then\n-               Formal_Error_Msg_N\n-                 (\"exit with when clause must be directly in loop\", N);\n+               Error_Msg_F\n+                 (\"|~~exit with when clause must be directly in loop\", N);\n             end if;\n \n          else\n             if Nkind (Parent (N)) /= N_If_Statement then\n                if Nkind (Parent (N)) = N_Elsif_Part then\n-                  Formal_Error_Msg_N (\"exit must be in IF without ELSIF\", N);\n+                  Error_Msg_F (\"|~~exit must be in IF without ELSIF\", N);\n                else\n-                  Formal_Error_Msg_N (\"exit must be directly in IF\", N);\n+                  Error_Msg_F (\"|~~exit must be directly in IF\", N);\n                end if;\n \n             elsif Nkind (Parent (Parent (N))) /= N_Loop_Statement then\n-               Formal_Error_Msg_N (\"exit must be in IF directly in loop\", N);\n+               Error_Msg_F (\"|~~exit must be in IF directly in loop\", N);\n \n             --  First test the presence of ELSE, so that an exit in an ELSE\n             --  leads to an error mentioning the ELSE.\n \n             elsif Present (Else_Statements (Parent (N))) then\n-               Formal_Error_Msg_N (\"exit must be in IF without ELSE\", N);\n+               Error_Msg_F (\"|~~exit must be in IF without ELSE\", N);\n \n             --  An exit in an ELSIF does not reach here, as it would have been\n             --  detected in the case (Nkind (Parent (N)) /= N_If_Statement).\n \n             elsif Present (Elsif_Parts (Parent (N))) then\n-               Formal_Error_Msg_N (\"exit must be in IF without ELSIF\", N);\n+               Error_Msg_F (\"|~~exit must be in IF without ELSIF\", N);\n             end if;\n          end if;\n       end if;\n@@ -1287,7 +1287,7 @@ package body Sem_Ch5 is\n       --  Goto statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"goto statement is not allowed\", N);\n+         Error_Msg_F (\"|~~goto statement is not allowed\", N);\n       end if;\n \n       --  Actual semantic checks\n@@ -1873,8 +1873,8 @@ package body Sem_Ch5 is\n                if Formal_Verification_Mode\n                  and then Nkind (DS) = N_Range\n                then\n-                  Formal_Error_Msg_N (\"loop parameter specification must \"\n-                                      & \"include subtype mark\", N);\n+                  Error_Msg_F (\"|~~loop parameter specification must \"\n+                               & \"include subtype mark\", N);\n                end if;\n \n                --  Now analyze the subtype definition. If it is a range, create\n@@ -2437,8 +2437,8 @@ package body Sem_Ch5 is\n                   --  Now issue the warning (or error in formal mode)\n \n                   if Formal_Verification_Mode then\n-                     Formal_Error_Msg\n-                       (\"unreachable code is not allowed\", Error_Loc);\n+                     Error_Msg\n+                       (\"|~~unreachable code is not allowed\", Error_Loc);\n                   else\n                      Error_Msg (\"?unreachable code!\", Error_Loc);\n                   end if;"}, {"sha": "213f55addb94d3851ad18275bccec228147b188d", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 32, "deletions": 23, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -363,7 +363,7 @@ package body Sem_Ch6 is\n       --  Abstract subprogram is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"abstract subprogram is not allowed\", N);\n+         Error_Msg_F (\"|~~abstract subprogram is not allowed\", N);\n       end if;\n \n       --  Proceed with analysis\n@@ -694,15 +694,15 @@ package body Sem_Ch6 is\n              (Nkind (Parent (Parent (N))) /= N_Subprogram_Body\n                or else Present (Next (N)))\n          then\n-            Formal_Error_Msg_N\n-              (\"RETURN should be the last statement in function\", N);\n+            Error_Msg_F\n+              (\"|~~RETURN should be the last statement in function\", N);\n          end if;\n \n       else\n          --  Extended return is not allowed in SPARK or ALFA\n \n          if Formal_Verification_Mode then\n-            Formal_Error_Msg_N (\"extended RETURN is not allowed\", N);\n+            Error_Msg_F (\"|~~extended RETURN is not allowed\", N);\n          end if;\n \n          --  Analyze parts specific to extended_return_statement:\n@@ -1402,8 +1402,8 @@ package body Sem_Ch6 is\n             --  Access result is not allowed in SPARK or ALFA\n \n             if Formal_Verification_Mode then\n-               Formal_Error_Msg_N\n-                 (\"access result is not allowed\", Result_Definition (N));\n+               Error_Msg_F\n+                 (\"|~~access result is not allowed\", Result_Definition (N));\n             end if;\n \n             --  Ada 2005 (AI-254): Handle anonymous access to subprograms\n@@ -1440,8 +1440,8 @@ package body Sem_Ch6 is\n               and then Is_Array_Type (Typ)\n               and then not Is_Constrained (Typ)\n             then\n-               Formal_Error_Msg_N\n-                 (\"returning an unconstrained array is not allowed\",\n+               Error_Msg_F\n+                 (\"|~~returning an unconstrained array is not allowed\",\n                  Result_Definition (N));\n             end if;\n \n@@ -1851,15 +1851,25 @@ package body Sem_Ch6 is\n \n             if Formal_Verification_Mode then\n                declare\n-                  Last_Kind : constant Node_Kind :=\n-                                Nkind (Last (Statements (HSS)));\n+                  Stat : Node_Id := Last (Statements (HSS));\n                begin\n-                  if not Nkind_In (Last_Kind, N_Simple_Return_Statement,\n-                                              N_Extended_Return_Statement)\n-                  then\n-                     Formal_Error_Msg_N\n-                       (\"last statement in function should be RETURN\", N);\n-                  end if;\n+                  while Present (Stat) loop\n+                     if Comes_From_Source (Stat) then\n+                        if not Nkind_In (Nkind (Stat),\n+                                         N_Simple_Return_Statement,\n+                                         N_Extended_Return_Statement)\n+                        then\n+                           Error_Msg_F (\"|~~last statement in function \"\n+                                        & \"should be RETURN\", N);\n+                        end if;\n+                        exit;\n+                     end if;\n+\n+                     --  Reach before the generated statements at the end of\n+                     --  the function.\n+\n+                     Stat := Prev (Stat);\n+                  end loop;\n                end;\n \n             elsif Return_Present (Id) then\n@@ -1891,7 +1901,7 @@ package body Sem_Ch6 is\n             --  borrow the Check_Returns procedure here ???\n \n             if Return_Present (Id) then\n-               Formal_Error_Msg_N (\"procedure should not have RETURN\", N);\n+               Error_Msg_F (\"|~~procedure should not have RETURN\", N);\n             end if;\n \n          --  If procedure with No_Return, check returns\n@@ -2834,7 +2844,7 @@ package body Sem_Ch6 is\n         and then Nkind (Specification (N)) = N_Procedure_Specification\n         and then Null_Present (Specification (N))\n       then\n-         Formal_Error_Msg_N (\"null procedure not allowed\", N);\n+         Error_Msg_F (\"|~~null procedure not allowed\", N);\n       end if;\n \n       --  For a null procedure, capture the profile before analysis, for\n@@ -3079,7 +3089,7 @@ package body Sem_Ch6 is\n         and then Comes_From_Source (N)\n         and then Nkind (Defining_Unit_Name (N)) = N_Defining_Operator_Symbol\n       then\n-         Formal_Error_Msg_N (\"user-defined operator is not allowed\", N);\n+         Error_Msg_F (\"|~~user-defined operator is not allowed\", N);\n       end if;\n \n       --  Proceed with analysis\n@@ -8504,7 +8514,7 @@ package body Sem_Ch6 is\n            and then Comes_From_Source (S)\n          then\n             Error_Msg_Sloc := Sloc (Homonym (S));\n-            Formal_Error_Msg_N (\"overloading not allowed with entity#\", S);\n+            Error_Msg_F (\"|~~overloading not allowed with entity#\", S);\n          end if;\n \n          --  If S is a derived operation for an untagged type then by\n@@ -8770,15 +8780,14 @@ package body Sem_Ch6 is\n          if Formal_Verification_Mode\n            and then Ekind (Formal_Type) = E_Anonymous_Access_Type\n          then\n-            Formal_Error_Msg_N (\"access parameter is not allowed\", Param_Spec);\n+            Error_Msg_F (\"|~~access parameter is not allowed\", Param_Spec);\n          end if;\n \n          if Present (Default) then\n             --  Default expression is not allowed in SPARK or ALFA\n \n             if Formal_Verification_Mode then\n-               Formal_Error_Msg_N\n-                 (\"default expression is not allowed\", Default);\n+               Error_Msg_F (\"|~~default expression is not allowed\", Default);\n             end if;\n \n             --  Proceed with analysis"}, {"sha": "523f62167a64637856f6f7a00305d5d54d28a868", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -103,7 +103,7 @@ package body Sem_Ch9 is\n       --  Abort statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"abort statement is not allowed\", N);\n+         Error_Msg_F (\"|~~abort statement is not allowed\", N);\n          return;\n       end if;\n \n@@ -181,7 +181,7 @@ package body Sem_Ch9 is\n       --  Accept statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"accept statement is not allowed\", N);\n+         Error_Msg_F (\"|~~accept statement is not allowed\", N);\n          return;\n       end if;\n \n@@ -420,7 +420,7 @@ package body Sem_Ch9 is\n       --  Select statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"select statement is not allowed\", N);\n+         Error_Msg_F (\"|~~select statement is not allowed\", N);\n          return;\n       end if;\n \n@@ -474,7 +474,7 @@ package body Sem_Ch9 is\n       --  Select statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"select statement is not allowed\", N);\n+         Error_Msg_F (\"|~~select statement is not allowed\", N);\n          return;\n       end if;\n \n@@ -579,7 +579,7 @@ package body Sem_Ch9 is\n       --  Delay statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"delay statement is not allowed\", N);\n+         Error_Msg_F (\"|~~delay statement is not allowed\", N);\n          return;\n       end if;\n \n@@ -605,7 +605,7 @@ package body Sem_Ch9 is\n       --  Delay statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"delay statement is not allowed\", N);\n+         Error_Msg_F (\"|~~delay statement is not allowed\", N);\n          return;\n       end if;\n \n@@ -900,7 +900,7 @@ package body Sem_Ch9 is\n       --  Entry call is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"entry call is not allowed\", N);\n+         Error_Msg_F (\"|~~entry call is not allowed\", N);\n          return;\n       end if;\n \n@@ -1359,7 +1359,7 @@ package body Sem_Ch9 is\n       --  Requeue statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"requeue statement is not allowed\", N);\n+         Error_Msg_F (\"|~~requeue statement is not allowed\", N);\n          return;\n       end if;\n \n@@ -1641,7 +1641,7 @@ package body Sem_Ch9 is\n       --  Select statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"select statement is not allowed\", N);\n+         Error_Msg_F (\"|~~select statement is not allowed\", N);\n          return;\n       end if;\n \n@@ -2178,7 +2178,7 @@ package body Sem_Ch9 is\n       --  Select statement is not allowed in SPARK or ALFA\n \n       if Formal_Verification_Mode then\n-         Formal_Error_Msg_N (\"select statement is not allowed\", N);\n+         Error_Msg_F (\"|~~select statement is not allowed\", N);\n          return;\n       end if;\n "}, {"sha": "f09f744ba8f7c79bc9f50741e93f4492e9afbfe6", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -12320,6 +12320,22 @@ package body Sem_Prag is\n          when Pragma_Source_Reference =>\n             GNAT_Pragma;\n \n+         --------------\n+         -- SPARK_95 --\n+         --------------\n+\n+         --  pragma SPARK_95;\n+\n+         --  Note: this pragma also has some specific processing in Par.Prag\n+         --  because we want to set the SPARK 95 version mode during parsing.\n+\n+         when Pragma_SPARK_95 =>\n+            GNAT_Pragma;\n+            Check_Arg_Count (0);\n+            Check_Valid_Configuration_Pragma;\n+            SPARK_Version := SPARK_95;\n+            Set_Error_Msg_Lang (\"(\" & Formal_Language & \") \");\n+\n          --------------------------------\n          -- Static_Elaboration_Desired --\n          --------------------------------\n@@ -14071,6 +14087,7 @@ package body Sem_Prag is\n       Pragma_Source_File_Name              => -1,\n       Pragma_Source_File_Name_Project      => -1,\n       Pragma_Source_Reference              => -1,\n+      Pragma_SPARK_95                      => -1,\n       Pragma_Storage_Size                  => -1,\n       Pragma_Storage_Unit                  => -1,\n       Pragma_Static_Elaboration_Desired    => -1,"}, {"sha": "45e4a4f202c7556548d2d1eee9f1cd47086a3142", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -3234,7 +3234,7 @@ package body Sem_Util is\n         and then Comes_From_Source (C)\n       then\n          Error_Msg_Sloc := Sloc (C);\n-         Formal_Error_Msg_N (\"redeclaration of identifier &#\", Def_Id);\n+         Error_Msg_F (\"|~~redeclaration of identifier &#\", Def_Id);\n       end if;\n \n       --  Warn if new entity hides an old one"}, {"sha": "dbe0814ce4142124897805070ee8b224dece56e3", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53beff22220d9c1dd48c022f81e61e74a3084c34/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=53beff22220d9c1dd48c022f81e61e74a3084c34", "patch": "@@ -404,6 +404,7 @@ package Snames is\n    Name_Short_Descriptors              : constant Name_Id := N + $; -- GNAT\n    Name_Source_File_Name               : constant Name_Id := N + $; -- GNAT\n    Name_Source_File_Name_Project       : constant Name_Id := N + $; -- GNAT\n+   Name_SPARK_95                       : constant Name_Id := N + $; -- GNAT\n    Name_Style_Checks                   : constant Name_Id := N + $; -- GNAT\n    Name_Suppress                       : constant Name_Id := N + $;\n    Name_Suppress_Exception_Locations   : constant Name_Id := N + $; -- GNAT\n@@ -1517,6 +1518,7 @@ package Snames is\n       Pragma_Short_Descriptors,\n       Pragma_Source_File_Name,\n       Pragma_Source_File_Name_Project,\n+      Pragma_SPARK_95,\n       Pragma_Style_Checks,\n       Pragma_Suppress,\n       Pragma_Suppress_Exception_Locations,"}]}