{"sha": "ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ0Zjc4ZmFlOGI5NDA2ZjMyY2ZlOGNjNDdiZDEzOGFlYjlkNTU0MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-01-13T20:05:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-01-13T20:05:41Z"}, "message": "Add check_effective_target_pie\n\n\t* gcc.target/i386/pie.c: New test.\n\n\t* lib/target-supports.exp (check_effective_target_pie): New.\n\nFrom-SVN: r219553", "tree": {"sha": "4c3c8f1fd5272dd1935c656759d0b3d0233d7810", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c3c8f1fd5272dd1935c656759d0b3d0233d7810"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "860dadcbeac42219978ccc320ef13a5afa56138b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860dadcbeac42219978ccc320ef13a5afa56138b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/860dadcbeac42219978ccc320ef13a5afa56138b"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "24e8b25de59dcedd2a79df1ebde91fce5aefa05a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540", "patch": "@@ -1,3 +1,9 @@\n+2015-01-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.target/i386/pie.c: New test.\n+\n+\t* lib/target-supports.exp (check_effective_target_pie): New.\n+\n 2015-01-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/64286"}, {"sha": "0a9f5eea0afd0b3e8384d3573cf9e2a1ae9fc968", "filename": "gcc/testsuite/gcc.target/i386/pie.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpie.c?ref=ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile { target pie } } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo (void);\n+\n+int\n+main (void)\n+{\n+  return foo ();\n+}\n+\n+/* { dg-final { scan-assembler \"foo@PLT\" } } */"}, {"sha": "0ac96466d4ba362cdbfa379ad049aa666493db02", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ed4f78fae8b9406f32cfe8cc47bd138aeb9d5540", "patch": "@@ -1080,6 +1080,16 @@ proc check_effective_target_nonpic { } {\n     }]\n }\n \n+# Return 1 if the current multilib generates PIE by default.\n+\n+proc check_effective_target_pie { } {\n+    return [check_no_compiler_messages pie assembly {\n+\t#ifndef __PIE__\n+\t#error unsupported\n+\t#endif\n+    }]\n+}\n+\n # Return 1 if the target does not use a status wrapper.\n \n proc check_effective_target_unwrapped { } {"}]}