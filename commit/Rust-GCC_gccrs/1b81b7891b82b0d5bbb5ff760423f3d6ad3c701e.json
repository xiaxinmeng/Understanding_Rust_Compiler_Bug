{"sha": "1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI4MWI3ODkxYjgyYjBkNWJiYjVmZjc2MDQyM2YzZDZhZDNjNzAxZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-08-07T11:13:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-08-07T11:13:54Z"}, "message": "alias.c (get_alias_set): Return a previously calculated alias set for a VAR_DECL.\n\n        * alias.c (get_alias_set): Return a previously calculated\n        alias set for a VAR_DECL.\n\nFrom-SVN: r44683", "tree": {"sha": "ef73e08c581a7b17aa02f7f5b1d52c00bd9101c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef73e08c581a7b17aa02f7f5b1d52c00bd9101c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e13ef1e287aa2116c30d849b4de3d12313322ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13ef1e287aa2116c30d849b4de3d12313322ccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13ef1e287aa2116c30d849b4de3d12313322ccc"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "760dd9574d06bd301e69cf0667ec3be01ba1d65d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e", "patch": "@@ -1,3 +1,8 @@\n+2001-08-07  Jason Merrill  <jason_merrill@redhat.com>\n+\n+\t* alias.c (get_alias_set): Return a previously calculated\n+\talias set for a VAR_DECL.\n+\n 2001-08-06  Richard Henderson  <rth@redhat.com>\n \n \t* varasm.c (assemble_gc_entry): Remove."}, {"sha": "a529a01cfa6b15f0ee2128d61d2098d2fa1f5b85", "filename": "gcc/alias.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e", "patch": "@@ -527,6 +527,13 @@ get_alias_set (t)\n \t    return 0;\n \t}\n \n+      /* If we've already determined the alias set for this decl, just\n+\t return it.  This is necessary for C++ anonymous unions, whose\n+\t component variables don't look like union members (boo!).  */\n+      if (TREE_CODE (t) == VAR_DECL\n+\t  && DECL_RTL_SET_P (t) && GET_CODE (DECL_RTL (t)) == MEM)\n+\treturn MEM_ALIAS_SET (DECL_RTL (t));\n+\n       /* Give the language another chance to do something special.  */\n       if (orig_t != t\n \t  && (set = lang_get_alias_set (t)) != -1)"}, {"sha": "34aed5935328ea7913e929921f5aa73998ef56f7", "filename": "gcc/testsuite/g++.dg/opt/alias1.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Falias1.C?ref=1b81b7891b82b0d5bbb5ff760423f3d6ad3c701e", "patch": "@@ -0,0 +1,25 @@\n+// Test that type punning using an anonymous union works with strict aliasing.\n+// { dg-do run }\n+// { dg-options -O2 -fstrict-aliasing }\n+\n+extern \"C\" void abort ();\n+\n+void f (int i)\n+{\n+  union\n+  {\n+    int ui;\n+    float uf[2];\n+  };\n+\n+  ui = i;\n+  if (uf[0] != 42.0)\n+    abort ();\n+}\n+\n+int main ()\n+{\n+  union U { int i; float f[2]; } u;\n+  u.f[0] = 42.0;\n+  f (u.i);\n+}"}]}