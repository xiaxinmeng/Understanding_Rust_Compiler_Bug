{"sha": "df7fbc8cd830ea212f052c089989afb014e3ffe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY3ZmJjOGNkODMwZWEyMTJmMDUyYzA4OTk4OWFmYjAxNGUzZmZlMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-22T14:41:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-22T14:41:58Z"}, "message": "Replace use of __objc_xcalloc, __objc_xrealloc, and __objc_xmalloc\nwith objc_calloc, objc_realloc, and objc_malloc.\n\nFrom-SVN: r12767", "tree": {"sha": "d2fe8bef2a5fc1bd66f41af51efef03f77c037ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2fe8bef2a5fc1bd66f41af51efef03f77c037ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df7fbc8cd830ea212f052c089989afb014e3ffe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7fbc8cd830ea212f052c089989afb014e3ffe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df7fbc8cd830ea212f052c089989afb014e3ffe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7fbc8cd830ea212f052c089989afb014e3ffe3/comments", "author": null, "committer": null, "parents": [{"sha": "2dac9ca60bcd3a92da0650c31fddb9caf530a9c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dac9ca60bcd3a92da0650c31fddb9caf530a9c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dac9ca60bcd3a92da0650c31fddb9caf530a9c9"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "8a65293cb2906574cef09e4ea48b3582e491768c", "filename": "gcc/objc/selector.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df7fbc8cd830ea212f052c089989afb014e3ffe3/gcc%2Fobjc%2Fselector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df7fbc8cd830ea212f052c089989afb014e3ffe3/gcc%2Fobjc%2Fselector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fselector.c?ref=df7fbc8cd830ea212f052c089989afb014e3ffe3", "patch": "@@ -304,14 +304,14 @@ __sel_register_typed_name (const char *name, const char *types,\n       if (orig)\n \tj = orig;\n       else\n-\tj = __objc_xmalloc (sizeof (struct objc_selector));\n+\tj = objc_malloc (sizeof (struct objc_selector));\n \n       j->sel_id = (void*)i;\n       /* Can we use the pointer or must copy types?  Don't copy if NULL */\n       if ((is_const) || (types == 0))\n \tj->sel_types = (const char*)types;\n       else {\n-\tj->sel_types = (char *)__objc_xmalloc(strlen(types)+1);\n+\tj->sel_types = (char *) objc_malloc(strlen(types)+1);\n \tstrcpy(j->sel_types, types);\n       }\n       l = (struct objc_list*)sarray_get (__objc_selector_array, i);\n@@ -323,14 +323,14 @@ __sel_register_typed_name (const char *name, const char *types,\n       if (orig)\n \tj = orig;\n       else\n-\tj = __objc_xmalloc (sizeof (struct objc_selector));\n+\tj = objc_malloc (sizeof (struct objc_selector));\n \t\n       j->sel_id = (void*)i;\n       /* Can we use the pointer or must copy types?  Don't copy if NULL */\n       if ((is_const) || (types == 0))\n \tj->sel_types = (const char*)types;\n       else {\n-\tj->sel_types = (char *)__objc_xmalloc(strlen(types)+1);\n+\tj->sel_types = (char *) objc_malloc(strlen(types)+1);\n \tstrcpy(j->sel_types, types);\n       }\n       l = 0;\n@@ -347,7 +347,7 @@ __sel_register_typed_name (const char *name, const char *types,\n     if ((is_const) || (name == 0))\n       new_name = name;\n     else {\n-      new_name = (char *)__objc_xmalloc(strlen(name)+1);\n+      new_name = (char *) objc_malloc(strlen(name)+1);\n       strcpy(new_name, name);\n     }\n "}]}