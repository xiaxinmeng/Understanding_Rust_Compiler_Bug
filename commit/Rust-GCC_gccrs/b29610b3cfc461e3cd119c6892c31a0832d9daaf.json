{"sha": "b29610b3cfc461e3cd119c6892c31a0832d9daaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI5NjEwYjNjZmM0NjFlM2NkMTE5YzY4OTJjMzFhMDgzMmQ5ZGFhZg==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2004-02-25T19:52:58Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2004-02-25T19:52:58Z"}, "message": "de-pessimization\n\nFrom-SVN: r78447", "tree": {"sha": "03f26a2528069bc59ece0611b1e7167fc4700f47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03f26a2528069bc59ece0611b1e7167fc4700f47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b29610b3cfc461e3cd119c6892c31a0832d9daaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29610b3cfc461e3cd119c6892c31a0832d9daaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29610b3cfc461e3cd119c6892c31a0832d9daaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29610b3cfc461e3cd119c6892c31a0832d9daaf/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b79fe713d8a89ca30fbabbae2366abfbf0a29eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b79fe713d8a89ca30fbabbae2366abfbf0a29eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b79fe713d8a89ca30fbabbae2366abfbf0a29eb"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "d5f171d147b463d593572ac62a3999a38a6dbc1f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b29610b3cfc461e3cd119c6892c31a0832d9daaf/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b29610b3cfc461e3cd119c6892c31a0832d9daaf/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b29610b3cfc461e3cd119c6892c31a0832d9daaf", "patch": "@@ -1,3 +1,9 @@\n+2004-02-24  Anthony Green  <green@redhat.com>\n+\n+\t* java/lang/StringBuffer.java: No need to NULL out remainder of\n+\tbuffer since ensureCapacity_unsynchronized will have done this for\n+\tus.\n+\n 2004-02-20  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/net/protocol/jar/Handler.java"}, {"sha": "293b97d076ee560f8b244512355011c1d4c62a2a", "filename": "libjava/java/lang/StringBuffer.java", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b29610b3cfc461e3cd119c6892c31a0832d9daaf/libjava%2Fjava%2Flang%2FStringBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b29610b3cfc461e3cd119c6892c31a0832d9daaf/libjava%2Fjava%2Flang%2FStringBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FStringBuffer.java?ref=b29610b3cfc461e3cd119c6892c31a0832d9daaf", "patch": "@@ -1,5 +1,6 @@\n /* StringBuffer.java -- Growable strings\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -205,10 +206,26 @@ public synchronized void setLength(int newLength)\n     if (newLength < 0)\n       throw new StringIndexOutOfBoundsException(newLength);\n \n+    int valueLength = value.length;\n+\n+    /* Always call ensureCapacity_unsynchronized in order to preserve\n+       copy-on-write semantics.  */\n     ensureCapacity_unsynchronized(newLength);\n-    while (count < newLength)\n-      value[count++] = '\\0';\n-    count = newLength;\n+\n+    if (newLength < valueLength)\n+      {\n+        /* If the StringBuffer's value just grew, then we know that\n+           value is newly allocated and the region between count and\n+           newLength is filled with '\\0'.  */\n+\tcount = newLength;\n+      }\n+    else\n+      {\n+\t/* The StringBuffer's value doesn't need to grow.  However,\n+\t   we should clear out any cruft that may exist.  */\n+\twhile (count < newLength)\n+          value[count++] = '\\0';\n+      }\n   }\n \n   /**"}]}