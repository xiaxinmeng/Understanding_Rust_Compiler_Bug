{"sha": "2ae7895416a7aa4fc9e7f9fa646dca1f51bdea56", "node_id": "C_kwDOANBUbNoAKDJhZTc4OTU0MTZhN2FhNGZjOWU3ZjlmYTY0NmRjYTFmNTFiZGVhNTY", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2022-06-27T06:25:45Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2022-06-27T06:25:45Z"}, "message": "Emit asmname if set for decl with -fdump-statistics-asmname.\n\ngcc/ChangeLog:\n\n\t* statistics.cc: Include tree.h.\n\t(get_function_name): New function.\n\t(statistics_fini_pass_2): Call get_function_name instead of\n\tcurrent_function_name.\n\t(statistics_counter_event): Call get_function_name instead of\n\tfunction_name.\n\t(statistics_histogram_event): Likewise.", "tree": {"sha": "77cd22f0988d453220513ffc2243cfb5d815e450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77cd22f0988d453220513ffc2243cfb5d815e450"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ae7895416a7aa4fc9e7f9fa646dca1f51bdea56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae7895416a7aa4fc9e7f9fa646dca1f51bdea56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae7895416a7aa4fc9e7f9fa646dca1f51bdea56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae7895416a7aa4fc9e7f9fa646dca1f51bdea56/comments", "author": null, "committer": null, "parents": [{"sha": "773dffc50fbc768e3282455bd4238a67b1481176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/773dffc50fbc768e3282455bd4238a67b1481176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/773dffc50fbc768e3282455bd4238a67b1481176"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "6c21415bf65c19986cdead3173819bbf7b0ad26b", "filename": "gcc/statistics.cc", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae7895416a7aa4fc9e7f9fa646dca1f51bdea56/gcc%2Fstatistics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae7895416a7aa4fc9e7f9fa646dca1f51bdea56/gcc%2Fstatistics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstatistics.cc?ref=2ae7895416a7aa4fc9e7f9fa646dca1f51bdea56", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"context.h\"\n #include \"pass_manager.h\"\n+#include \"tree.h\"\n \n static int statistics_dump_nr;\n static dump_flags_t statistics_dump_flags;\n@@ -113,6 +114,22 @@ curr_statistics_hash (void)\n   return statistics_hashes[idx];\n }\n \n+/* Helper function to return asmname or name of FN\n+   depending on whether asmname option is set.  */\n+\n+static const char *\n+get_function_name (struct function *fn)\n+{\n+  if ((statistics_dump_flags & TDF_ASMNAME)\n+      && DECL_ASSEMBLER_NAME_SET_P (fn->decl))\n+    {\n+      tree asmname = decl_assembler_name (fn->decl);\n+      if (asmname)\n+\treturn IDENTIFIER_POINTER (asmname);\n+    }\n+  return function_name (fn);\n+}\n+\n /* Helper for statistics_fini_pass.  Print the counter difference\n    since the last dump for the pass dump files.  */\n \n@@ -152,15 +169,15 @@ statistics_fini_pass_2 (statistics_counter **slot,\n \t     current_pass->static_pass_number,\n \t     current_pass->name,\n \t     counter->id, counter->val,\n-\t     current_function_name (),\n+\t     get_function_name (cfun),\n \t     count);\n   else\n     fprintf (statistics_dump_file,\n \t     \"%d %s \\\"%s\\\" \\\"%s\\\" \" HOST_WIDE_INT_PRINT_DEC \"\\n\",\n \t     current_pass->static_pass_number,\n \t     current_pass->name,\n \t     counter->id,\n-\t     current_function_name (),\n+\t     get_function_name (cfun),\n \t     count);\n   counter->prev_dumped_count = counter->count;\n   return 1;\n@@ -329,7 +346,7 @@ statistics_counter_event (struct function *fn, const char *id, int incr)\n \t   current_pass ? current_pass->static_pass_number : -1,\n \t   current_pass ? current_pass->name : \"none\",\n \t   id,\n-\t   function_name (fn),\n+\t   get_function_name (fn),\n \t   incr);\n }\n \n@@ -359,5 +376,5 @@ statistics_histogram_event (struct function *fn, const char *id, int val)\n \t   current_pass->static_pass_number,\n \t   current_pass->name,\n \t   id, val,\n-\t   function_name (fn));\n+\t   get_function_name (fn));\n }"}]}