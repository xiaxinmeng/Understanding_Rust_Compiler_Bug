{"sha": "cb153222404e2e149aa65a4b3139b09477551203", "node_id": "C_kwDOANBUbNoAKGNiMTUzMjIyNDA0ZTJlMTQ5YWE2NWE0YjMxMzliMDk0Nzc1NTEyMDM", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-10-20T17:37:29Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-10-25T23:39:49Z"}, "message": "Fold all statements in Ranger VRP.\n\nUntil now, ranger VRP has only simplified statements with ranges.  This patch\nenables us to fold all statements.\n\n\tgcc/\n\t* tree-vrp.c (rvrp_folder::fold_stmt): If simplification fails, try\n\tto fold anyway.\n\n\tgcc/testsuite/\n\t* gcc.dg/tree-ssa/vrp98.c: Disable evrp for vrp1 test.\n\t* gcc.dg/tree-ssa/vrp98-1.c: New. Test for folding in evrp.", "tree": {"sha": "d40eda7eabd8e07cf11d793e3db18afbf0d454b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d40eda7eabd8e07cf11d793e3db18afbf0d454b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb153222404e2e149aa65a4b3139b09477551203", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb153222404e2e149aa65a4b3139b09477551203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb153222404e2e149aa65a4b3139b09477551203", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb153222404e2e149aa65a4b3139b09477551203/comments", "author": null, "committer": null, "parents": [{"sha": "90205f67e465ae7dfcf733c2b2b177ca7ff68da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90205f67e465ae7dfcf733c2b2b177ca7ff68da0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90205f67e465ae7dfcf733c2b2b177ca7ff68da0"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "daa3f073b9239405ac15469b9c180c2fafd9bd12", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp98-1.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb153222404e2e149aa65a4b3139b09477551203/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp98-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb153222404e2e149aa65a4b3139b09477551203/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp98-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp98-1.c?ref=cb153222404e2e149aa65a4b3139b09477551203", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-options \"-Os -fdump-tree-evrp-details\" } */\n+\n+#include <stdint.h>\n+#include <limits.h>\n+\n+typedef unsigned int word __attribute__((mode(word)));\n+typedef unsigned __int128 bigger_than_word;\n+\n+int\n+foo (bigger_than_word a, word b, uint8_t c)\n+{\n+  /* Must fold use of t1 into use of b, as b is no wider than word_mode. */\n+  const uint8_t t1 = b % UCHAR_MAX;\n+\n+  /* Must NOT fold use of t2 into use of a, as a is wider than word_mode. */\n+  const uint8_t t2 = a % UCHAR_MAX;\n+\n+  /* Must fold use of t3 into use of c, as c is narrower than t3. */\n+  const uint32_t t3 = (const uint32_t)(c >> 1);\n+\n+  uint16_t ret = 0;\n+\n+  if (t1 == 1)\n+    ret = 20;\n+  else if (t2 == 2)\n+    ret = 30;\n+  else if (t3 == 3)\n+    ret = 40;\n+  /* Th extra condition below is necessary to prevent a prior pass from\n+     folding away the cast. Ignored in scan-tree-dump. */\n+  else if (t3 == 4)\n+    ret = 50;\n+\n+  return ret;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Folded into: if \\\\(_\\[0-9\\]+ == 1\\\\)\" \"evrp\" } } */\n+/* { dg-final { scan-tree-dump-not \"Folded into: if \\\\(_\\[0-9\\]+ == 2\\\\)\" \"evrp\" } } */\n+/* { dg-final { scan-tree-dump \"Folded into: if \\\\(_\\[0-9\\]+ == 3\\\\)\" \"evrp\" } } */"}, {"sha": "78d3bbaf4999a02279b4983b3e24d6a3bf692314", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp98.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb153222404e2e149aa65a4b3139b09477551203/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp98.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb153222404e2e149aa65a4b3139b09477551203/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp98.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp98.c?ref=cb153222404e2e149aa65a4b3139b09477551203", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target int128 } */\n-/* { dg-options \"-Os -fdump-tree-vrp1-details\" } */\n+/* { dg-options \"-Os -fdisable-tree-evrp -fdump-tree-vrp1-details\" } */\n \n #include <stdint.h>\n #include <limits.h>"}, {"sha": "a948c5240987ab7f0b71926aed1695fbdababe45", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb153222404e2e149aa65a4b3139b09477551203/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb153222404e2e149aa65a4b3139b09477551203/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=cb153222404e2e149aa65a4b3139b09477551203", "patch": "@@ -50,6 +50,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-range.h\"\n #include \"gimple-range-path.h\"\n #include \"value-pointer-equiv.h\"\n+#include \"gimple-fold.h\"\n \n /* Set of SSA names found live during the RPO traversal of the function\n    for still active basic-blocks.  */\n@@ -4381,7 +4382,9 @@ class rvrp_folder : public substitute_and_fold_engine\n \n   bool fold_stmt (gimple_stmt_iterator *gsi) OVERRIDE\n   {\n-    return m_simplifier.simplify (gsi);\n+    if (m_simplifier.simplify (gsi))\n+      return true;\n+    return ::fold_stmt (gsi, follow_single_use_edges);\n   }\n \n private:"}]}