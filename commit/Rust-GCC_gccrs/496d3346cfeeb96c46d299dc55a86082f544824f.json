{"sha": "496d3346cfeeb96c46d299dc55a86082f544824f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk2ZDMzNDZjZmVlYjk2YzQ2ZDI5OWRjNTVhODYwODJmNTQ0ODI0Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-10-29T09:22:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-10-29T09:22:55Z"}, "message": "re PR tree-optimization/63666 (FAIL: gcc.dg/vect/pr45752.c (internal compiler error))\n\n2014-10-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/63666\n\t* tree-vect-slp.c (vect_get_mask_element): Properly handle\n\taccessing out-of-bound elements.\n\nFrom-SVN: r216825", "tree": {"sha": "d9b8c780862fa83dcd909ac72649d10ed3a78f6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9b8c780862fa83dcd909ac72649d10ed3a78f6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/496d3346cfeeb96c46d299dc55a86082f544824f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496d3346cfeeb96c46d299dc55a86082f544824f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/496d3346cfeeb96c46d299dc55a86082f544824f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496d3346cfeeb96c46d299dc55a86082f544824f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65c0707be63d76723902a704f76a578f1cbde76b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65c0707be63d76723902a704f76a578f1cbde76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65c0707be63d76723902a704f76a578f1cbde76b"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "89665cfacd507be0acc5609ba813c33744b58f19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496d3346cfeeb96c46d299dc55a86082f544824f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496d3346cfeeb96c46d299dc55a86082f544824f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=496d3346cfeeb96c46d299dc55a86082f544824f", "patch": "@@ -1,3 +1,9 @@\n+2014-10-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/63666\n+\t* tree-vect-slp.c (vect_get_mask_element): Properly handle\n+\taccessing out-of-bound elements.\n+\n 2014-10-29  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "84bec9544fec2f1a9835891de337ce26e8030652", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496d3346cfeeb96c46d299dc55a86082f544824f/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496d3346cfeeb96c46d299dc55a86082f544824f/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=496d3346cfeeb96c46d299dc55a86082f544824f", "patch": "@@ -2890,7 +2890,7 @@ vect_get_mask_element (gimple stmt, int first_mask_element, int m,\n     }\n \n   /* The mask requires the next vector.  */\n-  if (*current_mask_element >= mask_nunits * 2)\n+  while (*current_mask_element >= mask_nunits * 2)\n     {\n       if (*needs_first_vector || *mask_fixed)\n         {\n@@ -3041,6 +3041,7 @@ vect_transform_slp_perm_load (slp_tree node, vec<tree> dr_chain,\n \t\t\t\t\t  &number_of_mask_fixes, &mask_fixed,\n \t\t\t\t\t  &needs_first_vector))\n \t\treturn false;\n+\t      gcc_assert (current_mask_element < 2 * nunits);\n \t      mask[index++] = current_mask_element;\n \n               if (index == nunits)"}]}