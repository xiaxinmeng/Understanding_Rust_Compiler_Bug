{"sha": "4e2cdb1ddb5f6ace909358775e94bfe23046ad5a", "node_id": "C_kwDOANBUbNoAKDRlMmNkYjFkZGI1ZjZhY2U5MDkzNTg3NzVlOTRiZmUyMzA0NmFkNWE", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-03-23T22:20:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-03-24T16:32:00Z"}, "message": "c++: default template arg, partial ordering [PR105481]\n\nThe default argument code in type_unification_real was assuming that all\ntargs we've deduced by that point are non-dependent, but that's not the case\nfor partial ordering.\n\n\tPR c++/105481\n\ngcc/cp/ChangeLog:\n\n\t* pt.cc (type_unification_real): Adjust for partial ordering.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/fntmpdefarg-partial1.C: New test.", "tree": {"sha": "27689bd855824918fe1a688d68ac4e348107896b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27689bd855824918fe1a688d68ac4e348107896b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8fec6998b656dac02d4bc6c69b35a0fb5611e87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8fec6998b656dac02d4bc6c69b35a0fb5611e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8fec6998b656dac02d4bc6c69b35a0fb5611e87"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "3bb98ebeac130e9c33a507639bce1c251b6df528", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=4e2cdb1ddb5f6ace909358775e94bfe23046ad5a", "patch": "@@ -23304,14 +23304,24 @@ type_unification_real (tree tparms,\n \t  return unify_parameter_deduction_failure (explain_p, tparm);\n \t}\n \n+      /* During partial ordering, we deduce dependent template args.  */\n+      bool any_dependent_targs = false;\n+\n       /* Now substitute into the default template arguments.  */\n       for (i = 0; i < ntparms; i++)\n \t{\n \t  tree targ = TREE_VEC_ELT (targs, i);\n \t  tree tparm = TREE_VEC_ELT (tparms, i);\n \n-\t  if (targ || tparm == error_mark_node)\n+\t  if (targ)\n+\t    {\n+\t      if (!any_dependent_targs && dependent_template_arg_p (targ))\n+\t\tany_dependent_targs = true;\n+\t      continue;\n+\t    }\n+\t  if (tparm == error_mark_node)\n \t    continue;\n+\n \t  tree parm = TREE_VALUE (tparm);\n \t  tree arg = TREE_PURPOSE (tparm);\n \t  reopen_deferring_access_checks (*checks);\n@@ -23347,9 +23357,9 @@ type_unification_real (tree tparms,\n \t\t do this substitution without processing_template_decl.  This\n \t\t is important if the default argument contains something that\n \t\t might be instantiation-dependent like access (87480).  */\n-\t      processing_template_decl_sentinel s;\n+\t      processing_template_decl_sentinel s (!any_dependent_targs);\n \t      tree substed = NULL_TREE;\n-\t      if (saw_undeduced == 1)\n+\t      if (saw_undeduced == 1 && !any_dependent_targs)\n \t\t{\n \t\t  /* First instatiate in template context, in case we still\n \t\t     depend on undeduced template parameters.  */\n@@ -23372,7 +23382,7 @@ type_unification_real (tree tparms,\n \t\t\t\t\t\t complain, i, NULL_TREE);\n \t      else if (saw_undeduced == 1)\n \t\targ = NULL_TREE;\n-\t      else\n+\t      else if (!any_dependent_targs)\n \t\targ = error_mark_node;\n \t    }\n "}, {"sha": "2a6783e566b0822f156de2c30c0a3dd29690e7b1", "filename": "gcc/testsuite/g++.dg/cpp0x/fntmpdefarg-partial1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg-partial1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2cdb1ddb5f6ace909358775e94bfe23046ad5a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg-partial1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg-partial1.C?ref=4e2cdb1ddb5f6ace909358775e94bfe23046ad5a", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/105481\n+// { dg-do compile { target c++11 } }\n+\n+template<unsigned> struct uint;\n+template<unsigned N> uint<N> f(const uint<N> &);\n+template<unsigned N, typename T, typename = uint<N>> uint<N> f(T);\n+using X = uint<1>;\n+X (*fp)(X const &) = f;"}]}