{"sha": "5f7055585a583123884ed6b9c2eec1c8f340dbdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY3MDU1NTg1YTU4MzEyMzg4NGVkNmI5YzJlZWMxYzhmMzQwZGJkYg==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2007-06-17T17:51:25Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2007-06-17T17:51:25Z"}, "message": "re PR middle-end/32349 (ICE in df_refs_verify with -O2 -fmodulo-sched for spec tests)\n\n2007-06-17  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\tPR middle-end/32349\n\t* modulo-sched (generate_reg_moves): Added rescan parameter and if\n\tthis is true, rescan insn being modified.\n\t(sms_schedule): Added rescan parameter.\n\t(rest_of_handle_sms): Moved freeing of dominance info to before\n\tgetting out of cfg_layout.\n\t\n2007-06-17  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\t* gcc.c-torture/compile/pr32349.c: New testcase.\n\nFrom-SVN: r125776", "tree": {"sha": "8c2e701b7a7e1d10cc013268235a947410544073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c2e701b7a7e1d10cc013268235a947410544073"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f7055585a583123884ed6b9c2eec1c8f340dbdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7055585a583123884ed6b9c2eec1c8f340dbdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f7055585a583123884ed6b9c2eec1c8f340dbdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f7055585a583123884ed6b9c2eec1c8f340dbdb/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19caedae314ce20ca4eb9cc7a64432d6fdf850b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19caedae314ce20ca4eb9cc7a64432d6fdf850b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19caedae314ce20ca4eb9cc7a64432d6fdf850b7"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "f284af0cbd13ecc233ba8f8cd8fd30069c6c211f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7055585a583123884ed6b9c2eec1c8f340dbdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7055585a583123884ed6b9c2eec1c8f340dbdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f7055585a583123884ed6b9c2eec1c8f340dbdb", "patch": "@@ -1,3 +1,12 @@\n+2007-06-17  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\tPR middle-end/32349\n+\t* modulo-sched (generate_reg_moves): Added rescan parameter and if\n+\tthis is true, rescan insn being modified.\n+\t(sms_schedule): Added rescan parameter.\n+\t(rest_of_handle_sms): Moved freeing of dominance info to before\n+\tgetting out of cfg_layout.\n+\t\n 2007-06-17  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/m68k/m68k.h (ISA_HAS_FF1, ISA_HAS_MVS_MVZ): New."}, {"sha": "6664e32183854c2478aad19b9285bd4cc0361937", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7055585a583123884ed6b9c2eec1c8f340dbdb/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7055585a583123884ed6b9c2eec1c8f340dbdb/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=5f7055585a583123884ed6b9c2eec1c8f340dbdb", "patch": "@@ -426,7 +426,7 @@ calculate_maxii (ddg_ptr g)\n                             ii                          { 1 if not.\n */\n static struct undo_replace_buff_elem *\n-generate_reg_moves (partial_schedule_ptr ps)\n+generate_reg_moves (partial_schedule_ptr ps, bool rescan)\n {\n   ddg_ptr g = ps->g;\n   int ii = ps->ii;\n@@ -523,6 +523,8 @@ generate_reg_moves (partial_schedule_ptr ps)\n \t\t}\n \n \t      replace_rtx (g->nodes[i_use].insn, old_reg, new_reg);\n+\t      if (rescan)\n+\t\tdf_insn_rescan (g->nodes[i_use].insn);\n \t    }\n \n \t  prev_reg = new_reg;\n@@ -1151,7 +1153,7 @@ sms_schedule (void)\n \n \t  /* Generate the kernel just to be able to measure its cycles.  */\n \t  permute_partial_schedule (ps, g->closing_branch->first_note);\n-\t  reg_move_replaces = generate_reg_moves (ps);\n+\t  reg_move_replaces = generate_reg_moves (ps, false);\n \n \t  /* Get the number of cycles the new kernel expect to execute in.  */\n \t  new_cycles = kernel_number_of_cycles (BB_HEAD (g->bb), BB_END (g->bb));\n@@ -1201,7 +1203,7 @@ sms_schedule (void)\n \t      /* The life-info is not valid any more.  */\n \t      df_set_bb_dirty (g->bb);\n \n-\t      reg_move_replaces = generate_reg_moves (ps);\n+\t      reg_move_replaces = generate_reg_moves (ps, true);\n \t      if (dump_file)\n \t\tprint_node_sched_params (dump_file, g->num_nodes);\n \t      /* Generate prolog and epilog.  */\n@@ -2481,8 +2483,8 @@ rest_of_handle_sms (void)\n   FOR_EACH_BB (bb)\n     if (bb->next_bb != EXIT_BLOCK_PTR)\n       bb->aux = bb->next_bb;\n-  cfg_layout_finalize ();\n   free_dominance_info (CDI_DOMINATORS);\n+  cfg_layout_finalize ();\n #endif /* INSN_SCHEDULING */\n   return 0;\n }"}, {"sha": "5b08f687091acb0730f874594ccdaf0e740e13c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7055585a583123884ed6b9c2eec1c8f340dbdb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7055585a583123884ed6b9c2eec1c8f340dbdb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f7055585a583123884ed6b9c2eec1c8f340dbdb", "patch": "@@ -1,3 +1,7 @@\n+2007-06-17  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\t* gcc.c-torture/compile/pr32349.c: New testcase.\n+\t\n 2007-06-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.target/sparc/align.c: Use 'unsigned char' as element type."}, {"sha": "570969dfdfb74a1a5a0ba9412ef983d41486d086", "filename": "gcc/testsuite/gcc.c-torture/compile/pr32349.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f7055585a583123884ed6b9c2eec1c8f340dbdb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32349.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f7055585a583123884ed6b9c2eec1c8f340dbdb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32349.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32349.c?ref=5f7055585a583123884ed6b9c2eec1c8f340dbdb", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-options \"-O2 -fmodulo-sched\" } */\n+\n+\n+extern long *x1, *x2, *x3;\n+\n+int\n+foo ()\n+{\n+  /* Switching the following two lines prevents the ICE.  */\n+  long *p1, *p2;\n+  long m, n, i;\n+\n+  p1 = x1;\n+  p2 = x2;\n+  n = 0;\n+  for (i = *x3; 0 < i; i--)\n+    {\n+      m = (*p1++) ^ (*p2++);\n+      m = (m & 0x55555555) + ((m >> 1) & 0x55555555);\n+      m = (m & 0x33333333) + ((m >> 2) & 0x33333333);\n+      m = (m + (m >> 4)) & 0x0f0f0f0f;\n+      m = (m + (m >> 8));\n+      n += m;\n+    }\n+  return n;\n+}"}]}