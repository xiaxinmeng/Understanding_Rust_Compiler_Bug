{"sha": "cdf4112f226d44941419ebb9d279674b6fcd7745", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RmNDExMmYyMjZkNDQ5NDE0MTllYmI5ZDI3OTY3NGI2ZmNkNzc0NQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-10-02T00:27:43Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-10-02T00:27:43Z"}, "message": "(insert_regs): Always return something.\n\n(simplify_unary_operation): Remove unused variable.\n(cse_process_notes): Likewise.\n(invalidate_skipped_block): Likewise.\n(cse_set_around_loop): Likewise.\n\nFrom-SVN: r5555", "tree": {"sha": "a268f1934c07b6de2697df5394be6958634f7657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a268f1934c07b6de2697df5394be6958634f7657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdf4112f226d44941419ebb9d279674b6fcd7745", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdf4112f226d44941419ebb9d279674b6fcd7745", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdf4112f226d44941419ebb9d279674b6fcd7745", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdf4112f226d44941419ebb9d279674b6fcd7745/comments", "author": null, "committer": null, "parents": [{"sha": "7ab742b1a72ec85d749cab33faed4ae739ae71e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab742b1a72ec85d749cab33faed4ae739ae71e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab742b1a72ec85d749cab33faed4ae739ae71e8"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "beb5a769166c2ac242d168c8c5562c710dc0cc1e", "filename": "gcc/cse.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdf4112f226d44941419ebb9d279674b6fcd7745/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdf4112f226d44941419ebb9d279674b6fcd7745/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=cdf4112f226d44941419ebb9d279674b6fcd7745", "patch": "@@ -1015,6 +1015,8 @@ insert_regs (x, classp, modified)\n \t  qty_mode[reg_qty[regno]] = GET_MODE (x);\n \t  return 1;\n \t}\n+\n+      return 0;\n     }\n \n   /* If X is a SUBREG, we will likely be inserting the inner register in the\n@@ -3164,7 +3166,6 @@ simplify_unary_operation (code, mode, op, op_mode)\n     {\n       REAL_VALUE_TYPE d;\n       jmp_buf handler;\n-      rtx x;\n       HOST_WIDE_INT val;\n \n       if (setjmp (handler))\n@@ -7184,7 +7185,6 @@ cse_process_notes (x, object)\n {\n   enum rtx_code code = GET_CODE (x);\n   char *fmt = GET_RTX_FORMAT (code);\n-  int qty;\n   int i;\n \n   switch (code)\n@@ -7362,7 +7362,6 @@ invalidate_skipped_block (start)\n      rtx start;\n {\n   rtx insn;\n-  int i;\n   static struct write_data init = {0, 0, 0, 0};\n   static struct write_data everything = {0, 1, 1, 1};\n \n@@ -7430,7 +7429,6 @@ cse_set_around_loop (x, insn, loop_start)\n      rtx insn;\n      rtx loop_start;\n {\n-  rtx p;\n   struct table_elt *src_elt;\n   static struct write_data init = {0, 0, 0, 0};\n   struct write_data writes_memory;"}]}