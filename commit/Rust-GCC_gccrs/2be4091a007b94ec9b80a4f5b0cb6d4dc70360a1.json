{"sha": "2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJlNDA5MWEwMDdiOTRlYzliODBhNGY1YjBjYjZkNGRjNzAzNjBhMQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-10-15T11:02:02Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-15T11:02:02Z"}, "message": "AVX-512. 52.1/n. Add vec2mask and mask2vec insn.\n\ngcc/\n\t* config/i386/predicates.md (define_predicate \"constm1_operand\"): New.\n\t* config/i386/sse.md\n\t(define_c_enum \"unspec\"): Add UNSPEC_CVTINT2MASK.\n\t(define_insn \"<avx512>_cvt<ssemodesuffix>2mask<VI12_AVX512VL:mode>\"): New.\n\t(define_insn \"<avx512>_cvt<ssemodesuffix>2mask<VI48_AVX512VL:mode>\"): Ditto.\n\t(define_expand \"<avx512>_cvtmask2<ssemodesuffix><VI12_AVX512VL:mode>\"): Ditto.\n\t(define_insn \"*<avx512>_cvtmask2<ssemodesuffix><VI12_AVX512VL:mode>\"): Ditto.\n\t(define_expand \"<avx512>_cvtmask2<ssemodesuffix><VI48_AVX512VL:mode>\"): Ditto.\n\t(define_insn \"*<avx512>_cvtmask2<ssemodesuffix><VI48_AVX512VL:mode>\"): Ditto.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r216254", "tree": {"sha": "857a596bce90c66e4371eb375754bb2b435e25eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/857a596bce90c66e4371eb375754bb2b435e25eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1/comments", "author": null, "committer": null, "parents": [{"sha": "ce4b0489a0da9995d9d82db4990b8ef2dc1f4466", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4b0489a0da9995d9d82db4990b8ef2dc1f4466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4b0489a0da9995d9d82db4990b8ef2dc1f4466"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "283c0d302cda13bde121c98f04bb7a5bca3e0665", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1", "patch": "@@ -1,3 +1,22 @@\n+2014-10-15  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/predicates.md (define_predicate \"constm1_operand\"): New.\n+\t* config/i386/sse.md\n+\t(define_c_enum \"unspec\"): Add UNSPEC_CVTINT2MASK.\n+\t(define_insn \"<avx512>_cvt<ssemodesuffix>2mask<VI12_AVX512VL:mode>\"): New.\n+\t(define_insn \"<avx512>_cvt<ssemodesuffix>2mask<VI48_AVX512VL:mode>\"): Ditto.\n+\t(define_expand \"<avx512>_cvtmask2<ssemodesuffix><VI12_AVX512VL:mode>\"): Ditto.\n+\t(define_insn \"*<avx512>_cvtmask2<ssemodesuffix><VI12_AVX512VL:mode>\"): Ditto.\n+\t(define_expand \"<avx512>_cvtmask2<ssemodesuffix><VI48_AVX512VL:mode>\"): Ditto.\n+\t(define_insn \"*<avx512>_cvtmask2<ssemodesuffix><VI48_AVX512VL:mode>\"): Ditto.\n+\n 2014-10-15  Renlin Li <renlin.li@arm.com>\n \n \t* config/aarch64/aarch64.h (ARM_DEFAULT_PCS, arm_pcs_variant): Delete."}, {"sha": "9566884ee4ff360379e3cbb5246d791281e94053", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1", "patch": "@@ -618,6 +618,15 @@\n   return op == CONST0_RTX (mode);\n })\n \n+;; Match -1.\n+(define_predicate \"constm1_operand\"\n+  (match_code \"const_int,const_double,const_vector\")\n+{\n+  if (mode == VOIDmode)\n+    mode = GET_MODE (op);\n+  return op == CONSTM1_RTX (mode);\n+})\n+\n ;; Match one or vector filled with ones.\n (define_predicate \"const1_operand\"\n   (match_code \"const_int,const_double,const_vector\")"}, {"sha": "018702afca8a166aadf157c27d53f9630201c674", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2be4091a007b94ec9b80a4f5b0cb6d4dc70360a1", "patch": "@@ -135,6 +135,7 @@\n   UNSPEC_PMADDWD512\n   UNSPEC_PSHUFHW\n   UNSPEC_PSHUFLW\n+  UNSPEC_CVTINT2MASK\n \n   ;; For AVX512DQ support\n   UNSPEC_REDUCE\n@@ -4960,6 +4961,72 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V8DF\")])\n \n+(define_insn \"<avx512>_cvt<ssemodesuffix>2mask<mode>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+\t(unspec:<avx512fmaskmode>\n+\t [(match_operand:VI12_AVX512VL 1 \"register_operand\" \"v\")]\n+\t UNSPEC_CVTINT2MASK))]\n+  \"TARGET_AVX512BW\"\n+  \"vpmov<ssemodesuffix>2m\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<avx512>_cvt<ssemodesuffix>2mask<mode>\"\n+  [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=Yk\")\n+\t(unspec:<avx512fmaskmode>\n+\t [(match_operand:VI48_AVX512VL 1 \"register_operand\" \"v\")]\n+\t UNSPEC_CVTINT2MASK))]\n+  \"TARGET_AVX512DQ\"\n+  \"vpmov<ssemodesuffix>2m\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_expand \"<avx512>_cvtmask2<ssemodesuffix><mode>\"\n+  [(set (match_operand:VI12_AVX512VL 0 \"register_operand\")\n+\t(vec_merge:VI12_AVX512VL\n+\t  (match_dup 2)\n+\t  (match_dup 3)\n+\t  (match_operand:<avx512fmaskmode> 1 \"register_operand\")))]\n+  \"TARGET_AVX512BW\"\n+  {\n+    operands[2] = CONSTM1_RTX (<MODE>mode);\n+    operands[3] = CONST0_RTX (<MODE>mode);\n+  })\n+\n+(define_insn \"*<avx512>_cvtmask2<ssemodesuffix><mode>\"\n+  [(set (match_operand:VI12_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI12_AVX512VL\n+\t  (match_operand:VI12_AVX512VL 2 \"constm1_operand\")\n+\t  (match_operand:VI12_AVX512VL 3 \"const0_operand\")\n+\t  (match_operand:<avx512fmaskmode> 1 \"register_operand\" \"Yk\")))]\n+  \"TARGET_AVX512BW\"\n+  \"vpmovm2<ssemodesuffix>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_expand \"<avx512>_cvtmask2<ssemodesuffix><mode>\"\n+  [(set (match_operand:VI48_AVX512VL 0 \"register_operand\")\n+\t(vec_merge:VI48_AVX512VL\n+\t  (match_dup 2)\n+\t  (match_dup 3)\n+\t  (match_operand:<avx512fmaskmode> 1 \"register_operand\")))]\n+  \"TARGET_AVX512DQ\"\n+  \"{\n+    operands[2] = CONSTM1_RTX (<MODE>mode);\n+    operands[3] = CONST0_RTX (<MODE>mode);\n+  }\")\n+\n+(define_insn \"*<avx512>_cvtmask2<ssemodesuffix><mode>\"\n+  [(set (match_operand:VI48_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI48_AVX512VL\n+\t  (match_operand:VI48_AVX512VL 2 \"constm1_operand\")\n+\t  (match_operand:VI48_AVX512VL 3 \"const0_operand\")\n+\t  (match_operand:<avx512fmaskmode> 1 \"register_operand\" \"Yk\")))]\n+  \"TARGET_AVX512DQ\"\n+  \"vpmovm2<ssemodesuffix>\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"sse2_cvtps2pd<mask_name>\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=v\")\n \t(float_extend:V2DF"}]}