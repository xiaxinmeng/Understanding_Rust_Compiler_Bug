{"sha": "deca6d60723728562b179f501d3bb3b840e51ebc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVjYTZkNjA3MjM3Mjg1NjJiMTc5ZjUwMWQzYmIzYjg0MGU1MWViYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-06-16T19:01:01Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-06-16T19:01:01Z"}, "message": "* tree-ssa-tail-merge.c (replace_block_by): Fix profile updating.\n\nFrom-SVN: r249274", "tree": {"sha": "73d02c8e1ac8379a1e6fca8ec66cf178059fde6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73d02c8e1ac8379a1e6fca8ec66cf178059fde6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/deca6d60723728562b179f501d3bb3b840e51ebc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deca6d60723728562b179f501d3bb3b840e51ebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deca6d60723728562b179f501d3bb3b840e51ebc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deca6d60723728562b179f501d3bb3b840e51ebc/comments", "author": null, "committer": null, "parents": [{"sha": "4086ef7d8979cf55a8908a3a100f2c2b9377f295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4086ef7d8979cf55a8908a3a100f2c2b9377f295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4086ef7d8979cf55a8908a3a100f2c2b9377f295"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "eb688d2f37beb6897db40f1b0a8193b9c793d16e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deca6d60723728562b179f501d3bb3b840e51ebc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deca6d60723728562b179f501d3bb3b840e51ebc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=deca6d60723728562b179f501d3bb3b840e51ebc", "patch": "@@ -1,3 +1,7 @@\n+2017-06-16  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-ssa-tail-merge.c (replace_block_by): Fix profile updating.\n+\n 2017-06-16  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \tPR target/71778"}, {"sha": "f6c9878a0a3510d349eb4ebe4ddbb7db7f7fbd8c", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deca6d60723728562b179f501d3bb3b840e51ebc/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deca6d60723728562b179f501d3bb3b840e51ebc/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=deca6d60723728562b179f501d3bb3b840e51ebc", "patch": "@@ -1555,29 +1555,51 @@ replace_block_by (basic_block bb1, basic_block bb2)\n \t\t   pred_edge, UNKNOWN_LOCATION);\n     }\n \n-  bb2->frequency += bb1->frequency;\n-  if (bb2->frequency > BB_FREQ_MAX)\n-    bb2->frequency = BB_FREQ_MAX;\n-\n   bb2->count += bb1->count;\n \n   /* Merge the outgoing edge counts from bb1 onto bb2.  */\n   profile_count out_sum = profile_count::zero ();\n+  int out_freq_sum = 0;\n+\n+  /* Recompute the edge probabilities from the new merged edge count.\n+     Use the sum of the new merged edge counts computed above instead\n+     of bb2's merged count, in case there are profile count insanities\n+     making the bb count inconsistent with the edge weights.  */\n+  FOR_EACH_EDGE (e1, ei, bb1->succs)\n+    {\n+      if (e1->count.initialized_p ())\n+\tout_sum += e1->count;\n+      out_freq_sum += EDGE_FREQUENCY (e1);\n+    }\n+  FOR_EACH_EDGE (e1, ei, bb2->succs)\n+    {\n+      if (e1->count.initialized_p ())\n+\tout_sum += e1->count;\n+      out_freq_sum += EDGE_FREQUENCY (e1);\n+    }\n+\n   FOR_EACH_EDGE (e1, ei, bb1->succs)\n     {\n       e2 = find_edge (bb2, e1->dest);\n       gcc_assert (e2);\n       e2->count += e1->count;\n+      if (out_sum > 0 && e2->count.initialized_p ())\n+\t{\n+\t  e2->probability = e2->count.probability_in (bb2->count);\n+\t}\n+      else if (bb1->frequency && bb2->frequency)\n+\te2->probability = e1->probability;\n+      else if (bb2->frequency && !bb1->frequency)\n+\t;\n+      else if (out_freq_sum)\n+\te2->probability = GCOV_COMPUTE_SCALE (EDGE_FREQUENCY (e1)\n+\t\t\t\t\t      + EDGE_FREQUENCY (e2),\n+\t\t\t\t\t      out_freq_sum);\n       out_sum += e2->count;\n     }\n-  /* Recompute the edge probabilities from the new merged edge count.\n-     Use the sum of the new merged edge counts computed above instead\n-     of bb2's merged count, in case there are profile count insanities\n-     making the bb count inconsistent with the edge weights.  */\n-  FOR_EACH_EDGE (e2, ei, bb2->succs)\n-    {\n-      e2->probability = e2->count.probability_in (out_sum);\n-    }\n+  bb2->frequency += bb1->frequency;\n+  if (bb2->frequency > BB_FREQ_MAX)\n+    bb2->frequency = BB_FREQ_MAX;\n \n   /* Move over any user labels from bb1 after the bb2 labels.  */\n   gimple_stmt_iterator gsi1 = gsi_start_bb (bb1);"}]}