{"sha": "6e718159ce712910c6e712ad68390b4edcf606f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3MTgxNTljZTcxMjkxMGM2ZTcxMmFkNjgzOTBiNGVkY2Y2MDZmNw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-11-10T22:48:43Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-11-10T22:48:43Z"}, "message": "re PR c/81117 (Improve buffer overflow checking in strncpy)\n\n\ngcc/ChangeLog:\n\n\tPR c/81117\n\t* config/darwin-c.c (framework_construct_pathname): Replace strncpy\n\twith memcpy.\n\t(find_subframework_file): Same.\n\nFrom-SVN: r254641", "tree": {"sha": "621cb871ed24947b9fd1a6e4e41f12b37cac612b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/621cb871ed24947b9fd1a6e4e41f12b37cac612b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e718159ce712910c6e712ad68390b4edcf606f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e718159ce712910c6e712ad68390b4edcf606f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e718159ce712910c6e712ad68390b4edcf606f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e718159ce712910c6e712ad68390b4edcf606f7/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f382ac6d527478171d880d7c77ecb816fe114661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f382ac6d527478171d880d7c77ecb816fe114661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f382ac6d527478171d880d7c77ecb816fe114661"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "4e50a888103b0823c47fd70156f9c33816dcae56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e718159ce712910c6e712ad68390b4edcf606f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e718159ce712910c6e712ad68390b4edcf606f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e718159ce712910c6e712ad68390b4edcf606f7", "patch": "@@ -1,3 +1,10 @@\n+2017-11-10  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/81117\n+\t* config/darwin-c.c (framework_construct_pathname): Replace strncpy\n+\twith memcpy.\n+\t(find_subframework_file): Same.\n+\n 2017-11-10  Jeff Law  <law@redhat.com>\n \n \t* vr-values.h (VR_INITIALIZER): Move #define here."}, {"sha": "bfb35b9ae6d54b2e0e8272bc14578ccf0fe602e4", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e718159ce712910c6e712ad68390b4edcf606f7/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e718159ce712910c6e712ad68390b4edcf606f7/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=6e718159ce712910c6e712ad68390b4edcf606f7", "patch": "@@ -284,13 +284,13 @@ framework_construct_pathname (const char *fname, cpp_dir *dir)\n \n   frname = XNEWVEC (char, strlen (fname) + dir->len + 2\n \t\t    + strlen(\".framework/\") + strlen(\"PrivateHeaders\"));\n-  strncpy (&frname[0], dir->name, dir->len);\n+  memcpy (&frname[0], dir->name, dir->len);\n   frname_len = dir->len;\n   if (frname_len && frname[frname_len-1] != '/')\n     frname[frname_len++] = '/';\n-  strncpy (&frname[frname_len], fname, fname_len);\n+  memcpy (&frname[frname_len], fname, fname_len);\n   frname_len += fname_len;\n-  strncpy (&frname[frname_len], \".framework/\", strlen (\".framework/\"));\n+  memcpy (&frname[frname_len], \".framework/\", strlen (\".framework/\"));\n   frname_len += strlen (\".framework/\");\n \n   if (fast_dir == 0)\n@@ -316,7 +316,7 @@ framework_construct_pathname (const char *fname, cpp_dir *dir)\n   /* Append framework_header_dirs and header file name */\n   for (i = 0; framework_header_dirs[i].dirName; i++)\n     {\n-      strncpy (&frname[frname_len],\n+      memcpy (&frname[frname_len],\n \t       framework_header_dirs[i].dirName,\n \t       framework_header_dirs[i].dirNameLen);\n       strcpy (&frname[frname_len + framework_header_dirs[i].dirNameLen],\n@@ -378,23 +378,23 @@ find_subframework_file (const char *fname, const char *pname)\n \n   sfrname_len = bufptr - pname;\n \n-  strncpy (&sfrname[0], pname, sfrname_len);\n+  memcpy (&sfrname[0], pname, sfrname_len);\n \n-  strncpy (&sfrname[sfrname_len], \"Frameworks/\", strlen (\"Frameworks/\"));\n+  memcpy (&sfrname[sfrname_len], \"Frameworks/\", strlen (\"Frameworks/\"));\n   sfrname_len += strlen(\"Frameworks/\");\n \n-  strncpy (&sfrname[sfrname_len], fname, fname_len);\n+  memcpy (&sfrname[sfrname_len], fname, fname_len);\n   sfrname_len += fname_len;\n \n-  strncpy (&sfrname[sfrname_len], \".framework/\", strlen (\".framework/\"));\n+  memcpy (&sfrname[sfrname_len], \".framework/\", strlen (\".framework/\"));\n   sfrname_len += strlen (\".framework/\");\n \n   /* Append framework_header_dirs and header file name */\n   for (i = 0; framework_header_dirs[i].dirName; i++)\n     {\n-      strncpy (&sfrname[sfrname_len],\n-\t       framework_header_dirs[i].dirName,\n-\t       framework_header_dirs[i].dirNameLen);\n+      memcpy (&sfrname[sfrname_len],\n+\t      framework_header_dirs[i].dirName,\n+\t      framework_header_dirs[i].dirNameLen);\n       strcpy (&sfrname[sfrname_len + framework_header_dirs[i].dirNameLen],\n \t      &fname[fname_len]);\n "}]}