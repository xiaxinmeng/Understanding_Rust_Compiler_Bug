{"sha": "f6dda6511ae7d435163663a2ce96ac1c251dfe1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkZGE2NTExYWU3ZDQzNTE2MzY2M2EyY2U5NmFjMWMyNTFkZmUxZQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-08-11T05:56:33Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-08-11T05:56:33Z"}, "message": "acinclude.m4 (GLIBCXX_CONFIGURE): Unprecious CC and CFLAGS when calling AC_PROG_CC.\n\n2003-08-11  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* acinclude.m4 (GLIBCXX_CONFIGURE):  Unprecious CC and CFLAGS\n\twhen calling AC_PROG_CC.\n\t* aclocal.m4, configure:  Regenerate.\n\nFrom-SVN: r70319", "tree": {"sha": "9a827e1da8a375851f6f8f8b1d0f24414dd79d5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a827e1da8a375851f6f8f8b1d0f24414dd79d5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6dda6511ae7d435163663a2ce96ac1c251dfe1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6dda6511ae7d435163663a2ce96ac1c251dfe1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6dda6511ae7d435163663a2ce96ac1c251dfe1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/comments", "author": null, "committer": null, "parents": [{"sha": "fbe057bb8ba6f980bfe40cf86c5b9931d49f5e29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe057bb8ba6f980bfe40cf86c5b9931d49f5e29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe057bb8ba6f980bfe40cf86c5b9931d49f5e29"}], "stats": {"total": 95, "additions": 44, "deletions": 51}, "files": [{"sha": "c0a5bad9526199b00d271711e135a00c64315a88", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f6dda6511ae7d435163663a2ce96ac1c251dfe1e", "patch": "@@ -1,3 +1,9 @@\n+2003-08-11  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* acinclude.m4 (GLIBCXX_CONFIGURE):  Unprecious CC and CFLAGS\n+\twhen calling AC_PROG_CC.\n+\t* aclocal.m4, configure:  Regenerate.\n+\n 2003-08-11  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* acinclude.m4:  Properly quote variable which will be expanded"}, {"sha": "c5f0377ff533a2b8a83ab61774918b086bdcb3eb", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=f6dda6511ae7d435163663a2ce96ac1c251dfe1e", "patch": "@@ -88,8 +88,6 @@ AC_DEFUN(GLIBCXX_CONFIGURE, [\n     AC_HELP_STRING([--with-newlib],\n                    [assume newlib as a system C library]))\n \n-  AC_PROG_CC\n-\n   # We're almost certainly being configured before anything else which uses\n   # C++, so all of our AC_PROG_* discoveries will be cached.  It's vital that\n   # we not cache the value of CXX that we \"discover\" here, because it's set\n@@ -102,7 +100,7 @@ AC_DEFUN(GLIBCXX_CONFIGURE, [\n   # wrong (non-multilib-adjusted) value will be used in multilibs.  This\n   # little trick also affects CPPFLAGS, CXXFLAGS, and LDFLAGS.  And as a side\n   # effect, CXXFLAGS is no longer automagically subst'd, so we have to do\n-  # that ourselves.\n+  # that ourselves.  Un-preciousing AC_PROG_CC also affects CC and CFLAGS.\n   #\n   # -fno-builtin must be present here so that a non-conflicting form of\n   # std::exit can be guessed by AC_PROG_CXX, and used in later tests.\n@@ -112,9 +110,11 @@ AC_DEFUN(GLIBCXX_CONFIGURE, [\n   m4_define([_AC_ARG_VAR_PRECIOUS],[])\n   save_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$CXXFLAGS -fno-builtin\"\n+  AC_PROG_CC\n   AC_PROG_CXX\n   CXXFLAGS=\"$save_CXXFLAGS\"\n   m4_rename([glibcxx_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n+  AC_SUBST(CFLAGS)\n   AC_SUBST(CXXFLAGS)\n \n   # For directory versioning (e.g., headers) and other variables."}, {"sha": "df6fb7b18683bcb4f08481c957777e0c52725c35", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=f6dda6511ae7d435163663a2ce96ac1c251dfe1e", "patch": "@@ -101,8 +101,6 @@ AC_DEFUN(GLIBCXX_CONFIGURE, [\n     AC_HELP_STRING([--with-newlib],\n                    [assume newlib as a system C library]))\n \n-  AC_PROG_CC\n-\n   # We're almost certainly being configured before anything else which uses\n   # C++, so all of our AC_PROG_* discoveries will be cached.  It's vital that\n   # we not cache the value of CXX that we \"discover\" here, because it's set\n@@ -115,7 +113,7 @@ AC_DEFUN(GLIBCXX_CONFIGURE, [\n   # wrong (non-multilib-adjusted) value will be used in multilibs.  This\n   # little trick also affects CPPFLAGS, CXXFLAGS, and LDFLAGS.  And as a side\n   # effect, CXXFLAGS is no longer automagically subst'd, so we have to do\n-  # that ourselves.\n+  # that ourselves.  Un-preciousing AC_PROG_CC also affects CC and CFLAGS.\n   #\n   # -fno-builtin must be present here so that a non-conflicting form of\n   # std::exit can be guessed by AC_PROG_CXX, and used in later tests.\n@@ -125,9 +123,11 @@ AC_DEFUN(GLIBCXX_CONFIGURE, [\n   m4_define([_AC_ARG_VAR_PRECIOUS],[])\n   save_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$CXXFLAGS -fno-builtin\"\n+  AC_PROG_CC\n   AC_PROG_CXX\n   CXXFLAGS=\"$save_CXXFLAGS\"\n   m4_rename([glibcxx_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n+  AC_SUBST(CFLAGS)\n   AC_SUBST(CXXFLAGS)\n \n   # For directory versioning (e.g., headers) and other variables."}, {"sha": "350f7f7f07c6f99086edb523bb0ce5a6fceb4f7e", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 32, "deletions": 45, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6dda6511ae7d435163663a2ce96ac1c251dfe1e/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=f6dda6511ae7d435163663a2ce96ac1c251dfe1e", "patch": "@@ -308,7 +308,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE am__leading_dot glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBTOOL CXXCPP enable_shared enable_static LIBUNWIND_FLAG GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H FPOS_H BASIC_FILE_H BASIC_FILE_CC CPP EGREP check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CCODECVT_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE glibcxx_thread_h DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS WERROR SYMVER_MAP port_specific_symbol_files GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE baseline_dir GLIBCXX_TEST_WCHAR_T_TRUE GLIBCXX_TEST_WCHAR_T_FALSE GLIBCXX_TEST_ABI_TRUE GLIBCXX_TEST_ABI_FALSE ATOMICITY_INC_SRCDIR FPOS_INC_SRCDIR OS_INC_SRCDIR CANADIAN_TRUE CANADIAN_FALSE GLIBCXX_BUILD_LIBMATH_TRUE GLIBCXX_BUILD_LIBMATH_FALSE glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES LIBMATH_INCLUDES LIBSUPCXX_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE am__leading_dot glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBTOOL CXXCPP CPPFLAGS enable_shared enable_static LIBUNWIND_FLAG GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H FPOS_H BASIC_FILE_H BASIC_FILE_CC CPP EGREP check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CCODECVT_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE glibcxx_thread_h DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS WERROR SYMVER_MAP port_specific_symbol_files GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE baseline_dir GLIBCXX_TEST_WCHAR_T_TRUE GLIBCXX_TEST_WCHAR_T_FALSE GLIBCXX_TEST_ABI_TRUE GLIBCXX_TEST_ABI_FALSE ATOMICITY_INC_SRCDIR FPOS_INC_SRCDIR OS_INC_SRCDIR CANADIAN_TRUE CANADIAN_FALSE GLIBCXX_BUILD_LIBMATH_TRUE GLIBCXX_BUILD_LIBMATH_FALSE glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES LIBMATH_INCLUDES LIBSUPCXX_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -749,26 +749,14 @@ ac_env_target_alias_set=${target_alias+set}\n ac_env_target_alias_value=$target_alias\n ac_cv_env_target_alias_set=${target_alias+set}\n ac_cv_env_target_alias_value=$target_alias\n-ac_env_CC_set=${CC+set}\n-ac_env_CC_value=$CC\n-ac_cv_env_CC_set=${CC+set}\n-ac_cv_env_CC_value=$CC\n-ac_env_CFLAGS_set=${CFLAGS+set}\n-ac_env_CFLAGS_value=$CFLAGS\n-ac_cv_env_CFLAGS_set=${CFLAGS+set}\n-ac_cv_env_CFLAGS_value=$CFLAGS\n-ac_env_LDFLAGS_set=${LDFLAGS+set}\n-ac_env_LDFLAGS_value=$LDFLAGS\n-ac_cv_env_LDFLAGS_set=${LDFLAGS+set}\n-ac_cv_env_LDFLAGS_value=$LDFLAGS\n-ac_env_CPPFLAGS_set=${CPPFLAGS+set}\n-ac_env_CPPFLAGS_value=$CPPFLAGS\n-ac_cv_env_CPPFLAGS_set=${CPPFLAGS+set}\n-ac_cv_env_CPPFLAGS_value=$CPPFLAGS\n ac_env_CXXCPP_set=${CXXCPP+set}\n ac_env_CXXCPP_value=$CXXCPP\n ac_cv_env_CXXCPP_set=${CXXCPP+set}\n ac_cv_env_CXXCPP_value=$CXXCPP\n+ac_env_CPPFLAGS_set=${CPPFLAGS+set}\n+ac_env_CPPFLAGS_value=$CPPFLAGS\n+ac_cv_env_CPPFLAGS_set=${CPPFLAGS+set}\n+ac_cv_env_CPPFLAGS_value=$CPPFLAGS\n ac_env_CPP_set=${CPP+set}\n ac_env_CPP_value=$CPP\n ac_cv_env_CPP_set=${CPP+set}\n@@ -1972,6 +1960,28 @@ if test \"${with_newlib+set}\" = set; then\n \n fi;\n \n+  # We're almost certainly being configured before anything else which uses\n+  # C++, so all of our AC_PROG_* discoveries will be cached.  It's vital that\n+  # we not cache the value of CXX that we \"discover\" here, because it's set\n+  # to something unique for us and libjava.  Other target libraries need to\n+  # find CXX for themselves.  We yank the rug out from under the normal AC_*\n+  # process by sneakily renaming the cache variable.  This also lets us debug\n+  # the value of \"our\" CXX in postmortems.\n+  #\n+  # We must also force CXX to /not/ be a precious variable, otherwise the\n+  # wrong (non-multilib-adjusted) value will be used in multilibs.  This\n+  # little trick also affects CPPFLAGS, CXXFLAGS, and LDFLAGS.  And as a side\n+  # effect, CXXFLAGS is no longer automagically subst'd, so we have to do\n+  # that ourselves.  Un-preciousing AC_PROG_CC also affects CC and CFLAGS.\n+  #\n+  # -fno-builtin must be present here so that a non-conflicting form of\n+  # std::exit can be guessed by AC_PROG_CXX, and used in later tests.\n+\n+\n+\n+\n+  save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -fno-builtin\"\n   ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'\n ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -2839,29 +2849,6 @@ ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n-\n-  # We're almost certainly being configured before anything else which uses\n-  # C++, so all of our AC_PROG_* discoveries will be cached.  It's vital that\n-  # we not cache the value of CXX that we \"discover\" here, because it's set\n-  # to something unique for us and libjava.  Other target libraries need to\n-  # find CXX for themselves.  We yank the rug out from under the normal AC_*\n-  # process by sneakily renaming the cache variable.  This also lets us debug\n-  # the value of \"our\" CXX in postmortems.\n-  #\n-  # We must also force CXX to /not/ be a precious variable, otherwise the\n-  # wrong (non-multilib-adjusted) value will be used in multilibs.  This\n-  # little trick also affects CPPFLAGS, CXXFLAGS, and LDFLAGS.  And as a side\n-  # effect, CXXFLAGS is no longer automagically subst'd, so we have to do\n-  # that ourselves.\n-  #\n-  # -fno-builtin must be present here so that a non-conflicting form of\n-  # std::exit can be guessed by AC_PROG_CXX, and used in later tests.\n-\n-\n-\n-\n-  save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$CXXFLAGS -fno-builtin\"\n   ac_ext=cc\n ac_cpp='$CXXCPP $CPPFLAGS'\n ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -3185,6 +3172,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+\n   # For directory versioning (e.g., headers) and other variables.\n   echo \"$as_me:$LINENO: checking for GCC version number\" >&5\n echo $ECHO_N \"checking for GCC version number... $ECHO_C\" >&6\n@@ -4285,7 +4273,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4288 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4276 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -4854,7 +4842,7 @@ fi;\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 4857 \"configure\"\n+#line 4845 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -40064,14 +40052,12 @@ s,@glibcxx_builddir@,$glibcxx_builddir,;t t\n s,@glibcxx_srcdir@,$glibcxx_srcdir,;t t\n s,@toplevel_srcdir@,$toplevel_srcdir,;t t\n s,@CC@,$CC,;t t\n-s,@CFLAGS@,$CFLAGS,;t t\n-s,@LDFLAGS@,$LDFLAGS,;t t\n-s,@CPPFLAGS@,$CPPFLAGS,;t t\n s,@ac_ct_CC@,$ac_ct_CC,;t t\n s,@EXEEXT@,$EXEEXT,;t t\n s,@OBJEXT@,$OBJEXT,;t t\n s,@CXX@,$CXX,;t t\n s,@ac_ct_CXX@,$ac_ct_CXX,;t t\n+s,@CFLAGS@,$CFLAGS,;t t\n s,@CXXFLAGS@,$CXXFLAGS,;t t\n s,@LN_S@,$LN_S,;t t\n s,@AS@,$AS,;t t\n@@ -40085,6 +40071,7 @@ s,@MAINTAINER_MODE_FALSE@,$MAINTAINER_MODE_FALSE,;t t\n s,@MAINT@,$MAINT,;t t\n s,@LIBTOOL@,$LIBTOOL,;t t\n s,@CXXCPP@,$CXXCPP,;t t\n+s,@CPPFLAGS@,$CPPFLAGS,;t t\n s,@enable_shared@,$enable_shared,;t t\n s,@enable_static@,$enable_static,;t t\n s,@LIBUNWIND_FLAG@,$LIBUNWIND_FLAG,;t t"}]}