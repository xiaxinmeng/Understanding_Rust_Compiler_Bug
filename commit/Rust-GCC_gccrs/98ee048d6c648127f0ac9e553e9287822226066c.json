{"sha": "98ee048d6c648127f0ac9e553e9287822226066c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThlZTA0OGQ2YzY0ODEyN2YwYWM5ZTU1M2U5Mjg3ODIyMjI2MDY2Yw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-27T22:11:44Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-27T22:11:44Z"}, "message": "Initial revision\n\nFrom-SVN: r19451", "tree": {"sha": "911085bd6c52f9a3e33d7985478a214990209da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/911085bd6c52f9a3e33d7985478a214990209da2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98ee048d6c648127f0ac9e553e9287822226066c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ee048d6c648127f0ac9e553e9287822226066c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98ee048d6c648127f0ac9e553e9287822226066c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ee048d6c648127f0ac9e553e9287822226066c/comments", "author": null, "committer": null, "parents": [{"sha": "26c6bea56a62f0025b9faed9510e2229365f4ede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c6bea56a62f0025b9faed9510e2229365f4ede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26c6bea56a62f0025b9faed9510e2229365f4ede"}], "stats": {"total": 182, "additions": 182, "deletions": 0}, "files": [{"sha": "3a92960ae3ee9ff2a1376816de31c179061d390e", "filename": "gcc/intl/libgettext.h", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ee048d6c648127f0ac9e553e9287822226066c/gcc%2Fintl%2Flibgettext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ee048d6c648127f0ac9e553e9287822226066c/gcc%2Fintl%2Flibgettext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Flibgettext.h?ref=98ee048d6c648127f0ac9e553e9287822226066c", "patch": "@@ -0,0 +1,182 @@\n+/* Message catalogs for internationalization.\n+   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+/* Because on some systems (e.g. Solaris) we sometimes have to include\n+   the systems libintl.h as well as this file we have more complex\n+   include protection above.  But the systems header might perhaps also\n+   define _LIBINTL_H and therefore we have to protect the definition here.  */\n+\n+#if !defined _LIBINTL_H || !defined _LIBGETTEXT_H\n+#ifndef _LIBINTL_H\n+# define _LIBINTL_H\t1\n+#endif\n+#define _LIBGETTEXT_H\t1\n+\n+/* We define an additional symbol to signal that we use the GNU\n+   implementation of gettext.  */\n+#define __USE_GNU_GETTEXT 1\n+\n+#include <sys/types.h>\n+\n+#if HAVE_LOCALE_H\n+# include <locale.h>\n+#endif\n+\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+#ifndef PARAMS\n+# if __STDC__ || defined __cplusplus\n+#  define PARAMS(args) args\n+# else\n+#  define PARAMS(args) ()\n+# endif\n+#endif\n+\n+#ifndef NULL\n+# if !defined __cplusplus || defined __GNUC__\n+#  define NULL ((void *) 0)\n+# else\n+#  define NULL (0)\n+# endif\n+#endif\n+\n+#if !HAVE_LC_MESSAGES\n+/* This value determines the behaviour of the gettext() and dgettext()\n+   function.  But some system does not have this defined.  Define it\n+   to a default value.  */\n+# define LC_MESSAGES (-1)\n+#endif\n+\n+\n+/* Declarations for gettext-using-catgets interface.  Derived from\n+   Jim Meyering's libintl.h.  */\n+struct _msg_ent\n+{\n+  const char *_msg;\n+  int _msg_number;\n+};\n+\n+\n+#if HAVE_CATGETS\n+/* These two variables are defined in the automatically by po-to-tbl.sed\n+   generated file `cat-id-tbl.c'.  */\n+extern const struct _msg_ent _msg_tbl[];\n+extern int _msg_tbl_length;\n+#endif\n+\n+\n+/* For automatical extraction of messages sometimes no real\n+   translation is needed.  Instead the string itself is the result.  */\n+#define gettext_noop(Str) (Str)\n+\n+/* Look up MSGID in the current default message catalog for the current\n+   LC_MESSAGES locale.  If not found, returns MSGID itself (the default\n+   text).  */\n+extern char *gettext PARAMS ((const char *__msgid));\n+extern char *gettext__ PARAMS ((const char *__msgid));\n+\n+/* Look up MSGID in the DOMAINNAME message catalog for the current\n+   LC_MESSAGES locale.  */\n+extern char *dgettext PARAMS ((const char *__domainname, const char *__msgid));\n+extern char *dgettext__ PARAMS ((const char *__domainname,\n+\t\t\t\t const char *__msgid));\n+\n+/* Look up MSGID in the DOMAINNAME message catalog for the current CATEGORY\n+   locale.  */\n+extern char *dcgettext PARAMS ((const char *__domainname, const char *__msgid,\n+\t\t\t\tint __category));\n+extern char *dcgettext__ PARAMS ((const char *__domainname,\n+\t\t\t\t  const char *__msgid, int __category));\n+\n+\n+/* Set the current default message catalog to DOMAINNAME.\n+   If DOMAINNAME is null, return the current default.\n+   If DOMAINNAME is \"\", reset to the default of \"messages\".  */\n+extern char *textdomain PARAMS ((const char *__domainname));\n+extern char *textdomain__ PARAMS ((const char *__domainname));\n+\n+/* Specify that the DOMAINNAME message catalog will be found\n+   in DIRNAME rather than in the system locale data base.  */\n+extern char *bindtextdomain PARAMS ((const char *__domainname,\n+\t\t\t\t  const char *__dirname));\n+extern char *bindtextdomain__ PARAMS ((const char *__domainname,\n+\t\t\t\t    const char *__dirname));\n+\n+#if ENABLE_NLS\n+\n+/* Solaris 2.3 has the gettext function but dcgettext is missing.\n+   So we omit this optimization for Solaris 2.3.  BTW, Solaris 2.4\n+   has dcgettext.  */\n+# if !HAVE_CATGETS && (!HAVE_GETTEXT || HAVE_DCGETTEXT)\n+\n+#  define gettext(Msgid)\t\t\t\t\t\t      \\\n+     dgettext (NULL, Msgid)\n+\n+#  define dgettext(Domainname, Msgid)\t\t\t\t\t      \\\n+     dcgettext (Domainname, Msgid, LC_MESSAGES)\n+\n+#  if defined __GNUC__ && __GNUC__ == 2 && __GNUC_MINOR__ >= 7\n+/* This global variable is defined in loadmsgcat.c.  We need a sign,\n+   whether a new catalog was loaded, which can be associated with all\n+   translations.  */\n+extern int _nl_msg_cat_cntr;\n+\n+#   define dcgettext(Domainname, Msgid, Category)\t\t\t      \\\n+  (__extension__\t\t\t\t\t\t\t      \\\n+   ({\t\t\t\t\t\t\t\t\t      \\\n+     char *__result;\t\t\t\t\t\t\t      \\\n+     if (__builtin_constant_p (Msgid))\t\t\t\t\t      \\\n+       {\t\t\t\t\t\t\t\t      \\\n+\t static char *__translation__;\t\t\t\t\t      \\\n+\t static int __catalog_counter__;\t\t\t\t      \\\n+\t if (! __translation__ || __catalog_counter__ != _nl_msg_cat_cntr)    \\\n+\t   {\t\t\t\t\t\t\t\t      \\\n+\t     __translation__ =\t\t\t\t\t\t      \\\n+\t       dcgettext__ (Domainname, Msgid, Category);\t\t      \\\n+\t     __catalog_counter__ = _nl_msg_cat_cntr;\t\t\t      \\\n+\t   }\t\t\t\t\t\t\t\t      \\\n+\t __result = __translation__;\t\t\t\t\t      \\\n+       }\t\t\t\t\t\t\t\t      \\\n+     else\t\t\t\t\t\t\t\t      \\\n+       __result = dcgettext__ (Domainname, Msgid, Category);\t\t      \\\n+     __result;\t\t\t\t\t\t\t\t      \\\n+    }))\n+#  endif\n+# endif\n+\n+#else\n+\n+# define gettext(Msgid) (Msgid)\n+# define dgettext(Domainname, Msgid) (Msgid)\n+# define dcgettext(Domainname, Msgid, Category) (Msgid)\n+# define textdomain(Domainname) ((char *) Domainname)\n+# define bindtextdomain(Domainname, Dirname) ((char *) Dirname)\n+\n+#endif\n+\n+/* @@ begin of epilog @@ */\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif"}]}