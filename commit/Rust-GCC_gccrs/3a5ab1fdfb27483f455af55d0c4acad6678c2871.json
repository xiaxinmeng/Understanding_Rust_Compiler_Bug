{"sha": "3a5ab1fdfb27483f455af55d0c4acad6678c2871", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E1YWIxZmRmYjI3NDgzZjQ1NWFmNTVkMGM0YWNhZDY2NzhjMjg3MQ==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2008-05-26T15:51:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-26T15:51:58Z"}, "message": "s-vaflop-vms-alpha.adb: Remove System.IO use clause...\n\n2008-05-26  Doug Rupp  <rupp@adacore.com>\n\n\t* s-vaflop-vms-alpha.adb:\n\tRemove System.IO use clause, to prevent spurious ambiguities when\n\tpackage is access through rtsfind.\n\nFrom-SVN: r135947", "tree": {"sha": "00d63df4a1c364a5a75713dc851c68912d9c2bd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00d63df4a1c364a5a75713dc851c68912d9c2bd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a5ab1fdfb27483f455af55d0c4acad6678c2871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5ab1fdfb27483f455af55d0c4acad6678c2871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5ab1fdfb27483f455af55d0c4acad6678c2871", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5ab1fdfb27483f455af55d0c4acad6678c2871/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e96b5434da5483d528aea128c735626609fe2b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e96b5434da5483d528aea128c735626609fe2b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e96b5434da5483d528aea128c735626609fe2b6"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "d00ca1dba8591da78ab2aaa22eedd1644f0798aa", "filename": "gcc/ada/s-vaflop-vms-alpha.adb", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5ab1fdfb27483f455af55d0c4acad6678c2871/gcc%2Fada%2Fs-vaflop-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5ab1fdfb27483f455af55d0c4acad6678c2871/gcc%2Fada%2Fs-vaflop-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vaflop-vms-alpha.adb?ref=3a5ab1fdfb27483f455af55d0c4acad6678c2871", "patch": "@@ -32,7 +32,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with System.IO;           use System.IO;\n+with System.IO;\n with System.Machine_Code; use System.Machine_Code;\n \n package body System.Vax_Float_Operations is\n@@ -328,7 +328,7 @@ package body System.Vax_Float_Operations is\n \n    procedure Debug_Output_D (Arg : D) is\n    begin\n-      Put (D'Image (Arg));\n+      System.IO.Put (D'Image (Arg));\n    end Debug_Output_D;\n \n    --------------------\n@@ -337,7 +337,7 @@ package body System.Vax_Float_Operations is\n \n    procedure Debug_Output_F (Arg : F) is\n    begin\n-      Put (F'Image (Arg));\n+      System.IO.Put (F'Image (Arg));\n    end Debug_Output_F;\n \n    --------------------\n@@ -346,7 +346,7 @@ package body System.Vax_Float_Operations is\n \n    procedure Debug_Output_G (Arg : G) is\n    begin\n-      Put (G'Image (Arg));\n+      System.IO.Put (G'Image (Arg));\n    end Debug_Output_G;\n \n    --------------------\n@@ -627,7 +627,7 @@ package body System.Vax_Float_Operations is\n \n    procedure pd (Arg : D) is\n    begin\n-      Put_Line (D'Image (Arg));\n+      System.IO.Put_Line (D'Image (Arg));\n    end pd;\n \n    --------\n@@ -636,7 +636,7 @@ package body System.Vax_Float_Operations is\n \n    procedure pf (Arg : F) is\n    begin\n-      Put_Line (F'Image (Arg));\n+      System.IO.Put_Line (F'Image (Arg));\n    end pf;\n \n    --------\n@@ -645,7 +645,7 @@ package body System.Vax_Float_Operations is\n \n    procedure pg (Arg : G) is\n    begin\n-      Put_Line (G'Image (Arg));\n+      System.IO.Put_Line (G'Image (Arg));\n    end pg;\n \n    --------------\n@@ -654,11 +654,13 @@ package body System.Vax_Float_Operations is\n \n    function Return_D (X : D) return D is\n       R : D;\n+\n    begin\n       --  The return value is already in $f0 so we need to trick the compiler\n       --  into thinking that we're moving X to $f0.\n+\n       Asm (\"cvtdg $f0,$f0\", Inputs => D'Asm_Input (\"g\", X), Clobber => \"$f0\",\n-        Volatile => True);\n+           Volatile => True);\n       Asm (\"stg $f0,%0\", D'Asm_Output (\"=m\", R), Volatile => True);\n       return R;\n    end Return_D;\n@@ -669,11 +671,13 @@ package body System.Vax_Float_Operations is\n \n    function Return_F (X : F) return F is\n       R : F;\n+\n    begin\n       --  The return value is already in $f0 so we need to trick the compiler\n       --  into thinking that we're moving X to $f0.\n+\n       Asm (\"stf $f0,%0\", F'Asm_Output (\"=m\", R), F'Asm_Input (\"g\", X),\n-        Clobber => \"$f0\", Volatile => True);\n+           Clobber => \"$f0\", Volatile => True);\n       return R;\n    end Return_F;\n \n@@ -683,11 +687,13 @@ package body System.Vax_Float_Operations is\n \n    function Return_G (X : G) return G is\n       R : G;\n+\n    begin\n       --  The return value is already in $f0 so we need to trick the compiler\n       --  into thinking that we're moving X to $f0.\n+\n       Asm (\"stg $f0,%0\", G'Asm_Output (\"=m\", R), G'Asm_Input (\"g\", X),\n-        Clobber => \"$f0\", Volatile => True);\n+           Clobber => \"$f0\", Volatile => True);\n       return R;\n    end Return_G;\n "}]}