{"sha": "558241c0f71b4171c471100631af79aa93c0a9e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU4MjQxYzBmNzFiNDE3MWM0NzExMDA2MzFhZjc5YWE5M2MwYTllNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-03T08:14:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-03T08:14:47Z"}, "message": "[Ada] Spurious error with static predicate in generic unit\n\nThis patch fixes a spurious error in a generic unit that invludes a\nsubtype with a static predicate, when the type is used in a case\nexpression.\n\n2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch13.adb (Build_Predicate_Functions): In a generic context\n\twe do not build the bodies of predicate fuctions, but the\n\texpression in a static predicate must be elaborated to allow\n\tcase coverage checking within the generic unit.\n\t(Build_Discrete_Static_Predicate): In a generic context, return\n\twithout building function body once the\n\tStatic_Discrete_Predicate expression for the type has been\n\tconstructed.\n\ngcc/testsuite/\n\n\t* gnat.dg/predicate6.adb, gnat.dg/predicate6.ads: New testcase.\n\t* gnat.dg/static_pred1.adb: Remove expected error.\n\nFrom-SVN: r272974", "tree": {"sha": "febc39487c3b4c48efa51fd799c36db4c0f6b5fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/febc39487c3b4c48efa51fd799c36db4c0f6b5fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/558241c0f71b4171c471100631af79aa93c0a9e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558241c0f71b4171c471100631af79aa93c0a9e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/558241c0f71b4171c471100631af79aa93c0a9e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558241c0f71b4171c471100631af79aa93c0a9e7/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5c8da6bac845e685236eeedc02f0814c05ed42f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c8da6bac845e685236eeedc02f0814c05ed42f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c8da6bac845e685236eeedc02f0814c05ed42f"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "6326e7cfa2df9712dbc5699286495a854d610eae", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=558241c0f71b4171c471100631af79aa93c0a9e7", "patch": "@@ -1,3 +1,14 @@\n+2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Build_Predicate_Functions): In a generic context\n+\twe do not build the bodies of predicate fuctions, but the\n+\texpression in a static predicate must be elaborated to allow\n+\tcase coverage checking within the generic unit.\n+\t(Build_Discrete_Static_Predicate): In a generic context, return\n+\twithout building function body once the\n+\tStatic_Discrete_Predicate expression for the type has been\n+\tconstructed.\n+\n 2019-07-03  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* bindgen.adb, inline.adb, layout.adb, sem_ch12.adb,"}, {"sha": "6d9b09db08e188f96931c1a8e1a5b04b58c866b7", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=558241c0f71b4171c471100631af79aa93c0a9e7", "patch": "@@ -8201,6 +8201,13 @@ package body Sem_Ch13 is\n \n          Set_Static_Discrete_Predicate (Typ, Plist);\n \n+         --  Within a generic the predicate functions themselves need not\n+         --  be constructed.\n+\n+         if Inside_A_Generic then\n+            return;\n+         end if;\n+\n          --  The processing for static predicates put the expression into\n          --  canonical form as a series of ranges. It also eliminated\n          --  duplicates and collapsed and combined ranges. We might as well\n@@ -8733,9 +8740,13 @@ package body Sem_Ch13 is\n \n         --  Do not generate predicate bodies within a generic unit. The\n         --  expressions have been analyzed already, and the bodies play\n-        --  no role if not within an executable unit.\n+        --  no role if not within an executable unit. However, if a statc\n+        --  predicate is present it must be processed for legality checks\n+        --  such as case coverage in an expression.\n \n-      elsif Inside_A_Generic then\n+      elsif Inside_A_Generic\n+        and then not Has_Static_Predicate_Aspect (Typ)\n+      then\n          return;\n       end if;\n "}, {"sha": "de7b7ad89e8ce0753c955e5f31ed314f61bccdfc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=558241c0f71b4171c471100631af79aa93c0a9e7", "patch": "@@ -1,3 +1,8 @@\n+2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/predicate6.adb, gnat.dg/predicate6.ads: New testcase.\n+\t* gnat.dg/static_pred1.adb: Remove expected error.\n+\n 2019-07-03  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/predicate5.adb, gnat.dg/predicate5.ads: New testcase."}, {"sha": "f098569df04daecfb46b6f96a4edbdde6b1e9611", "filename": "gcc/testsuite/gnat.dg/predicate6.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate6.adb?ref=558241c0f71b4171c471100631af79aa93c0a9e7", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do compile }\n+\n+package body Predicate6 is\n+   procedure Foo is null;\n+end Predicate6;"}, {"sha": "91e0adc87efe99fe7c2852f4d675189ced2d337e", "filename": "gcc/testsuite/gnat.dg/predicate6.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpredicate6.ads?ref=558241c0f71b4171c471100631af79aa93c0a9e7", "patch": "@@ -0,0 +1,10 @@\n+generic\n+package Predicate6 is\n+   type Price_Kind is (Infinitely_Small, Normal, Infinitely_Large);\n+   subtype Infinite_Kind is Price_Kind with Static_Predicate =>\n+     Infinite_Kind in Infinitely_Small | Infinitely_Large;\n+   function \"not\" (Kind : Infinite_Kind) return Infinite_Kind is\n+     (case Kind is when Infinitely_Small => Infinitely_Large,\n+        when Infinitely_Large => Infinitely_Small);\n+   procedure Foo;\n+end;"}, {"sha": "16bbde2c65be3ba937b51083f6821b658b35ffab", "filename": "gcc/testsuite/gnat.dg/static_pred1.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558241c0f71b4171c471100631af79aa93c0a9e7/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstatic_pred1.adb?ref=558241c0f71b4171c471100631af79aa93c0a9e7", "patch": "@@ -8,7 +8,7 @@ package body Static_Pred1 is\n      Enum_Subrange in A | C;\n \n    function \"not\" (Kind : Enum_Subrange) return Enum_Subrange is\n-     (case Kind is -- { dg-error \"missing case value: \\\"B\\\"\" }\n+     (case Kind is\n       when A => C,\n       when C => A);\n "}]}