{"sha": "c2cfccb1cf1ea317efe9f061394fd1586a0866df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJjZmNjYjFjZjFlYTMxN2VmZTlmMDYxMzk0ZmQxNTg2YTA4NjZkZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:20:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:20:00Z"}, "message": "[multiple changes]\n\n2015-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch8.adb (Analyze_Object_Renaming): Copy\n\tHas_Volatile_Full_Access from renamed to renaming entities.\n\t* sem_prag.adb (Process_Atomic_Independent_Shared_Volatile):\n\tTidy up and remove redundant setting of Has_Volatile_Full_Access.\n\n2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* ghost.adb (Check_Ghost_Completion): Update references to SPARK\n\tRM 6.9 rules.\n\t(Check_Ghost_Policy): Update references to SPARK RM 6.9 rules.\n\t* sem_ch3.adb (Analyze_Object_Declaration): Update references\n\tto SPARK RM 6.9 rules.\n\t(Check_Completion): Ghost entities do not require a special form of\n\tcompletion.\n\t* sem_ch6.adb (Analyze_Generic_Subprogram_Body): Update references\n\tto SPARK RM 6.9 rules.\n\t(Analyze_Subprogram_Body_Helper): Update references to SPARK RM 6.9\n\trules.\n\t* sem_ch7.adb (Analyze_Package_Body_Helper): Update references\n\tto SPARK RM 6.9 rules.\n\t(Requires_Completion_In_Body): Ghost entities do not require a special\n\tform of completion.\n\n2015-05-22  Robert Dewar  <dewar@adacore.com>\n\n\t* a-csquin.ads: Use Ada 2012 notation.\n\t* sem_ch8.adb: Minor reformatting.\n\n2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Aspect Import\n\tacts as a completion.\n\nFrom-SVN: r223534", "tree": {"sha": "56e9beb87e75d39c77bfde50fff7feb56e5710de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56e9beb87e75d39c77bfde50fff7feb56e5710de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2cfccb1cf1ea317efe9f061394fd1586a0866df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2cfccb1cf1ea317efe9f061394fd1586a0866df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2cfccb1cf1ea317efe9f061394fd1586a0866df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2cfccb1cf1ea317efe9f061394fd1586a0866df/comments", "author": null, "committer": null, "parents": [{"sha": "30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e"}], "stats": {"total": 128, "additions": 70, "deletions": 58}, "files": [{"sha": "cc91e17dbbfd2bc9be3b807cc606293539cc1606", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -1,3 +1,38 @@\n+2015-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Copy\n+\tHas_Volatile_Full_Access from renamed to renaming entities.\n+\t* sem_prag.adb (Process_Atomic_Independent_Shared_Volatile):\n+\tTidy up and remove redundant setting of Has_Volatile_Full_Access.\n+\n+2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* ghost.adb (Check_Ghost_Completion): Update references to SPARK\n+\tRM 6.9 rules.\n+\t(Check_Ghost_Policy): Update references to SPARK RM 6.9 rules.\n+\t* sem_ch3.adb (Analyze_Object_Declaration): Update references\n+\tto SPARK RM 6.9 rules.\n+\t(Check_Completion): Ghost entities do not require a special form of\n+\tcompletion.\n+\t* sem_ch6.adb (Analyze_Generic_Subprogram_Body): Update references\n+\tto SPARK RM 6.9 rules.\n+\t(Analyze_Subprogram_Body_Helper): Update references to SPARK RM 6.9\n+\trules.\n+\t* sem_ch7.adb (Analyze_Package_Body_Helper): Update references\n+\tto SPARK RM 6.9 rules.\n+\t(Requires_Completion_In_Body): Ghost entities do not require a special\n+\tform of completion.\n+\n+2015-05-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-csquin.ads: Use Ada 2012 notation.\n+\t* sem_ch8.adb: Minor reformatting.\n+\n+2015-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Aspect Import\n+\tacts as a completion.\n+\n 2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb: Minor reformatting."}, {"sha": "c9957a35d28c2586403f576a53a08d7227e398dc", "filename": "gcc/ada/a-csquin.ads", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fa-csquin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fa-csquin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-csquin.ads?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2011, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -41,25 +41,13 @@ package Ada.Containers.Synchronized_Queue_Interfaces is\n \n    procedure Enqueue\n      (Container : in out Queue;\n-      New_Item  : Element_Type) is abstract;\n-\n-   --  ???\n-   --  This is the official Ada 2012 syntax:\n-   --  with Synchronization => By_Entry;\n-\n-   --  This is the temporary work-around:\n-   pragma Implemented (Enqueue, By_Entry);\n+      New_Item  : Element_Type) is abstract\n+   with Synchronization => By_Entry;\n \n    procedure Dequeue\n      (Container : in out Queue;\n-      Element   : out Element_Type) is abstract;\n-\n-   --  ???\n-   --  This is the official Ada 2012 syntax:\n-   --  with Synchronization => By_Entry;\n-\n-   --  This is the temporary work-around:\n-   pragma Implemented (Dequeue, By_Entry);\n+      Element   : out Element_Type) is abstract\n+   with Synchronization => By_Entry;\n \n    function Current_Use (Container : Queue) return Count_Type is abstract;\n "}, {"sha": "b608a450e648799318e19a22ed6a04d4aacf7b3d", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2014-2015, Free Software Foundation, Inc.       --\n+--          Copyright (C) 2014-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -106,7 +106,7 @@ package body Ghost is\n \n    begin\n       --  The Ghost policy in effect at the point of declaration and at the\n-      --  point of completion must match (SPARK RM 6.9(15)).\n+      --  point of completion must match (SPARK RM 6.9(14)).\n \n       if Is_Checked_Ghost_Entity (Partial_View)\n         and then Policy = Name_Ignore\n@@ -411,7 +411,7 @@ package body Ghost is\n \n       else\n          Error_Msg_N\n-           (\"ghost entity cannot appear in this context (SPARK RM 6.9(12))\",\n+           (\"ghost entity cannot appear in this context (SPARK RM 6.9(11))\",\n             Ghost_Ref);\n       end if;\n    end Check_Ghost_Context;"}, {"sha": "474aa5e7c6f955e5c1d56d584aebf1830e908d53", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -3115,6 +3115,7 @@ package body Sem_Ch13 is\n                      then\n                         if A_Id = Aspect_Import then\n                            Set_Is_Imported (E);\n+                           Set_Has_Completion (E);\n \n                            --  An imported entity cannot have an explicit\n                            --  initialization."}, {"sha": "65c85762ef7177be74dc5bee2adb6858845e1baf", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -4055,7 +4055,7 @@ package body Sem_Ch3 is\n \n                   --  The Ghost policy in effect at the point of declaration\n                   --  and at the point of completion must match\n-                  --  (SPARK RM 6.9(15)).\n+                  --  (SPARK RM 6.9(14)).\n \n                   if Present (Prev_Entity)\n                     and then Is_Ghost_Entity (Prev_Entity)\n@@ -4237,7 +4237,7 @@ package body Sem_Ch3 is\n          Set_Is_Ghost_Entity (Id);\n \n          --  The Ghost policy in effect at the point of declaration and at the\n-         --  point of completion must match (SPARK RM 6.9(16)).\n+         --  point of completion must match (SPARK RM 6.9(14)).\n \n          if Present (Prev_Entity) and then Is_Ghost_Entity (Prev_Entity) then\n             Check_Ghost_Completion (Prev_Entity, Id);\n@@ -10937,12 +10937,6 @@ package body Sem_Ch3 is\n          if Is_Intrinsic_Subprogram (E) then\n             null;\n \n-         --  A Ghost entity declared in a non-Ghost package does not force the\n-         --  need for a body (SPARK RM 6.9(11)).\n-\n-         elsif not Is_Ghost_Entity (Pack_Id) and then Is_Ghost_Entity (E) then\n-            null;\n-\n          --  The following situation requires special handling: a child unit\n          --  that appears in the context clause of the body of its parent:\n \n@@ -19964,7 +19958,7 @@ package body Sem_Ch3 is\n          Set_Is_Ghost_Entity (Full_T);\n \n          --  The Ghost policy in effect at the point of declaration and at the\n-         --  point of completion must match (SPARK RM 6.9(15)).\n+         --  point of completion must match (SPARK RM 6.9(14)).\n \n          Check_Ghost_Completion (Priv_T, Full_T);\n "}, {"sha": "e366af2ac025a05a4c83ddf4be2dc103ef03e4ce", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -1267,7 +1267,7 @@ package body Sem_Ch6 is\n             Set_Is_Ghost_Entity (Body_Id);\n \n             --  The Ghost policy in effect at the point of declaration and at\n-            --  the point of completion must match (SPARK RM 6.9(15)).\n+            --  the point of completion must match (SPARK RM 6.9(14)).\n \n             Check_Ghost_Completion (Gen_Id, Body_Id);\n          end if;\n@@ -3265,7 +3265,7 @@ package body Sem_Ch6 is\n                Set_Is_Ghost_Entity (Body_Id);\n \n                --  The Ghost policy in effect at the point of declaration and\n-               --  at the point of completion must match (SPARK RM 6.9(15)).\n+               --  at the point of completion must match (SPARK RM 6.9(14)).\n \n                Check_Ghost_Completion (Spec_Id, Body_Id);\n             end if;"}, {"sha": "644a0de8ad27c9c495e111a98cd2cd725b6e5d7d", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -750,7 +750,7 @@ package body Sem_Ch7 is\n          Set_Is_Ghost_Entity (Body_Id);\n \n          --  The Ghost policy in effect at the point of declaration and at the\n-         --  point of completion must match (SPARK RM 6.9(15)).\n+         --  point of completion must match (SPARK RM 6.9(14)).\n \n          Check_Ghost_Completion (Spec_Id, Body_Id);\n       end if;\n@@ -2527,12 +2527,6 @@ package body Sem_Ch7 is\n       then\n          return False;\n \n-      --  A Ghost entity declared in a non-Ghost package does not force the\n-      --  need for a body (SPARK RM 6.9(11)).\n-\n-      elsif not Is_Ghost_Entity (Pack_Id) and then Is_Ghost_Entity (Id) then\n-         return False;\n-\n       --  Otherwise test to see if entity requires a completion. Note that\n       --  subprogram entities whose declaration does not come from source are\n       --  ignored here on the basis that we assume the expander will provide an"}, {"sha": "c1c40bc59aa1a55345fffd0479063c0022771f17", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -1344,11 +1344,13 @@ package body Sem_Ch8 is\n \n       Set_Is_Volatile (Id, Is_Volatile_Object (Nam));\n \n-      --  Also copy settings of Is_Atomic and Is_Independent\n+      --  Also copy settings of Atomic/Independent/Volatile_Full_Access\n \n       if Is_Entity_Name (Nam) then\n-         Set_Is_Atomic      (Id, Is_Atomic      (Entity (Nam)));\n-         Set_Is_Independent (Id, Is_Independent (Entity (Nam)));\n+         Set_Is_Atomic                (Id, Is_Atomic      (Entity (Nam)));\n+         Set_Is_Independent           (Id, Is_Independent (Entity (Nam)));\n+         Set_Has_Volatile_Full_Access (Id,\n+           Has_Volatile_Full_Access (Entity (Nam)));\n       end if;\n \n       --  Treat as volatile if we just set the Volatile flag"}, {"sha": "391d546ae7840a5d66200772b270f9b4104c10fc", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cfccb1cf1ea317efe9f061394fd1586a0866df/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c2cfccb1cf1ea317efe9f061394fd1586a0866df", "patch": "@@ -5910,38 +5910,36 @@ package body Sem_Prag is\n                Check_First_Subtype (Arg1);\n             end if;\n \n+            --  Attribute belongs on the base type. If the view of the type is\n+            --  currently private, it also belongs on the underlying type.\n+\n             if Prag_Id = Pragma_Atomic\n                  or else\n                Prag_Id = Pragma_Shared\n                  or else\n                Prag_Id = Pragma_Volatile_Full_Access\n             then\n                Set_Atomic_Full (E);\n-               Set_Atomic_Full (Underlying_Type (E));\n                Set_Atomic_Full (Base_Type (E));\n+               Set_Atomic_Full (Underlying_Type (E));\n             end if;\n \n             --  Atomic/Shared/Volatile_Full_Access imply Independent\n \n             if Prag_Id /= Pragma_Volatile then\n                Set_Is_Independent (E);\n-               Set_Is_Independent (Underlying_Type (E));\n                Set_Is_Independent (Base_Type (E));\n+               Set_Is_Independent (Underlying_Type (E));\n \n                if Prag_Id = Pragma_Independent then\n                   Record_Independence_Check (N, Base_Type (E));\n                end if;\n             end if;\n \n-            --  Attribute belongs on the base type. If the view of the type is\n-            --  currently private, it also belongs on the underlying type.\n+            --  Atomic/Shared/Volatile_Full_Access imply Volatile\n \n             if Prag_Id /= Pragma_Independent then\n-               if Prag_Id = Pragma_Volatile_Full_Access then\n-                  Set_Has_Volatile_Full_Access (Base_Type (E));\n-                  Set_Has_Volatile_Full_Access (Underlying_Type (E));\n-               end if;\n-\n+               Set_Is_Volatile (E);\n                Set_Is_Volatile (Base_Type (E));\n                Set_Is_Volatile (Underlying_Type (E));\n \n@@ -5994,8 +5992,8 @@ package body Sem_Prag is\n                --  treated as atomic, thus incurring a potentially costly\n                --  synchronization operation for every access.\n \n-               --  For Volatile_Full_Access we can do this for elementary\n-               --  types too, since there is no issue of atomic sync.\n+               --  For Volatile_Full_Access we can do this for elementary types\n+               --  too, since there is no issue of atomic synchronization.\n \n                --  Of course it would be best if the back end could just adjust\n                --  the alignment etc for the specific object, but that's not\n@@ -6010,19 +6008,17 @@ package body Sem_Prag is\n                  and then Sloc (Utyp) > No_Location\n                  and then\n                    Get_Source_File_Index (Sloc (E)) =\n-                   Get_Source_File_Index (Sloc (Underlying_Type (Etype (E))))\n+                                            Get_Source_File_Index (Sloc (Utyp))\n                then\n                   if Prag_Id = Pragma_Volatile_Full_Access then\n-                     Set_Has_Volatile_Full_Access\n-                       (Underlying_Type (Etype (E)));\n+                     Set_Has_Volatile_Full_Access (Utyp);\n                   else\n-                     Set_Is_Atomic\n-                       (Underlying_Type (Etype (E)));\n+                     Set_Is_Atomic (Utyp);\n                   end if;\n                end if;\n             end if;\n \n-            --  Atomic/Shared imply both Independent and Volatile\n+            --  Atomic/Shared/Volatile_Full_Access imply Independent\n \n             if Prag_Id /= Pragma_Volatile then\n                Set_Is_Independent (E);\n@@ -6032,6 +6028,8 @@ package body Sem_Prag is\n                end if;\n             end if;\n \n+            --  Atomic/Shared/Volatile_Full_Access imply Volatile\n+\n             if Prag_Id /= Pragma_Independent then\n                Set_Is_Volatile (E);\n                Set_Treat_As_Volatile (E);"}]}