{"sha": "b8697d0cd06da3375063295fe7161671e0904459", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg2OTdkMGNkMDZkYTMzNzUwNjMyOTVmZTcxNjE2NzFlMDkwNDQ1OQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2020-07-13T08:49:34Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2020-07-13T08:49:34Z"}, "message": "middle-end: Remove truly_noop_truncation check from convert.c\n\nThis patch eliminates a check of targetm.truly_noop_truncation from\nthe early middle-end, where the gimple/generic being generated by\nGCC's front-ends is being inappropriately influenced by the target's\nTRULY_NOOP_TRUNCATION.  The (recent) intention of TRULY_NOOP_TRUNCATION\nis to indicate that a backend requires explicit truncation instructions\nrather than using SUBREGs to perform truncations.  A long standing\n(and probably unintentional) side-effect has been that this setting\nalso controls whether the middle-end narrows integer operations at\nthe tree-level.  Understandably, GCC and its testsuite assume that\nGIMPLE and GENERIC behave consistently across platforms, and alas\ndefining TRULY_NOOP_TRUNCATION away from the default triggers several\nregressions (including gcc.dg/fold-rotate-1.c).\n\n2020-07-13  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* convert.c (convert_to_integer_1): Narrow integer operations\n\teven on targets that require explicit truncation instructions.", "tree": {"sha": "2f0cef4cf9cb0bcd555a34db38e759d880e75825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f0cef4cf9cb0bcd555a34db38e759d880e75825"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8697d0cd06da3375063295fe7161671e0904459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8697d0cd06da3375063295fe7161671e0904459", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8697d0cd06da3375063295fe7161671e0904459", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8697d0cd06da3375063295fe7161671e0904459/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a2ae08b02d185a11e3e525e100ba637ce81c7ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2ae08b02d185a11e3e525e100ba637ce81c7ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2ae08b02d185a11e3e525e100ba637ce81c7ff"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "292c5133974ac9242d76a083b8dfd7ba85f78edd", "filename": "gcc/convert.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8697d0cd06da3375063295fe7161671e0904459/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8697d0cd06da3375063295fe7161671e0904459/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=b8697d0cd06da3375063295fe7161671e0904459", "patch": "@@ -836,16 +836,10 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n \t\t  && POINTER_TYPE_P (TREE_TYPE (TREE_OPERAND (arg1, 0))))\n \t\tbreak;\n \n-\t      if (outprec >= BITS_PER_WORD\n-\t\t  || targetm.truly_noop_truncation (outprec, inprec)\n-\t\t  || inprec > TYPE_PRECISION (TREE_TYPE (arg0))\n-\t\t  || inprec > TYPE_PRECISION (TREE_TYPE (arg1)))\n-\t\t{\n-\t\t  tree tem = do_narrow (loc, ex_form, type, arg0, arg1,\n-\t\t\t\t\texpr, inprec, outprec, dofold);\n-\t\t  if (tem)\n-\t\t    return tem;\n-\t\t}\n+\t      tree tem = do_narrow (loc, ex_form, type, arg0, arg1,\n+\t\t\t\t    expr, inprec, outprec, dofold);\n+\t      if (tem)\n+\t\treturn tem;\n \t    }\n \t    break;\n "}]}