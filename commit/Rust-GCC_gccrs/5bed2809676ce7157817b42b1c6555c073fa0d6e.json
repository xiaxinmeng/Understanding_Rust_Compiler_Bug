{"sha": "5bed2809676ce7157817b42b1c6555c073fa0d6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJlZDI4MDk2NzZjZTcxNTc4MTdiNDJiMWM2NTU1YzA3M2ZhMGQ2ZQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2004-06-17T11:40:27Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2004-06-17T11:40:27Z"}, "message": "* tree-ssa.doxy: Update for doxygen 1.3.5.\n\nFrom-SVN: r83289", "tree": {"sha": "26dec52c8ebf951eb6c5d44fe4819241829195f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26dec52c8ebf951eb6c5d44fe4819241829195f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bed2809676ce7157817b42b1c6555c073fa0d6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bed2809676ce7157817b42b1c6555c073fa0d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bed2809676ce7157817b42b1c6555c073fa0d6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bed2809676ce7157817b42b1c6555c073fa0d6e/comments", "author": null, "committer": null, "parents": [{"sha": "5d880bd24bc667dc41a1f31d5713c8dbd90d86c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d880bd24bc667dc41a1f31d5713c8dbd90d86c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d880bd24bc667dc41a1f31d5713c8dbd90d86c2"}], "stats": {"total": 527, "additions": 356, "deletions": 171}, "files": [{"sha": "f0637652fc500907af62eddbf1a3a30909c08ea3", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bed2809676ce7157817b42b1c6555c073fa0d6e/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bed2809676ce7157817b42b1c6555c073fa0d6e/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=5bed2809676ce7157817b42b1c6555c073fa0d6e", "patch": "@@ -1,3 +1,7 @@\n+2004-06-17  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* tree-ssa.doxy: Update for doxygen 1.3.5.\n+\n 2004-06-14  Andreas Jaeger  <aj@suse.de>\n \n \t* gcc_update: boehm-gc/configure.in -> configure.ac."}, {"sha": "957e2a6a7967a73d115a8b27312c529fdbd13083", "filename": "contrib/tree-ssa.doxy", "status": "modified", "additions": 352, "deletions": 171, "changes": 523, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bed2809676ce7157817b42b1c6555c073fa0d6e/contrib%2Ftree-ssa.doxy", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bed2809676ce7157817b42b1c6555c073fa0d6e/contrib%2Ftree-ssa.doxy", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftree-ssa.doxy?ref=5bed2809676ce7157817b42b1c6555c073fa0d6e", "patch": "@@ -1,4 +1,4 @@\n-# Doxyfile 1.2.18\n+# Doxyfile 1.3.5\n \n # This file describes the settings to be used by the documentation system\n # doxygen (www.doxygen.org) for a project\n@@ -37,7 +37,7 @@ INPUT_FILTER           = @INPUT_FILTER@\n \n \n #---------------------------------------------------------------------------\n-# General configuration options\n+# Project related configuration options\n #---------------------------------------------------------------------------\n \n # The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n@@ -56,49 +56,22 @@ PROJECT_NUMBER         =\n # documentation generated by doxygen is written. Doxygen will use this \n # information to generate all constant output in the proper language. \n # The default language is English, other supported languages are: \n-# Brazilian, Chinese, Croatian, Czech, Danish, Dutch, Finnish, French, \n-# German, Greek, Hungarian, Italian, Japanese, Korean, Norwegian, Polish, \n-# Portuguese, Romanian, Russian, Slovak, Slovene, Spanish and Swedish.\n+# Brazilian, Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch, \n+# Finnish, French, German, Greek, Hungarian, Italian, Japanese, Japanese-en \n+# (Japanese with English messages), Korean, Norwegian, Polish, Portuguese, \n+# Romanian, Russian, Serbian, Slovak, Slovene, Spanish, Swedish, and Ukrainian.\n \n OUTPUT_LANGUAGE        = English\n \n-# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in \n-# documentation are documented, even if no documentation was available. \n-# Private class members and static file members will be hidden unless \n-# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n-\n-EXTRACT_ALL            = YES\n-\n-# If the EXTRACT_PRIVATE tag is set to YES all private members of a class \n-# will be included in the documentation.\n-\n-EXTRACT_PRIVATE        = YES\n-\n-# If the EXTRACT_STATIC tag is set to YES all static members of a file \n-# will be included in the documentation.\n-\n-EXTRACT_STATIC         = YES\n-\n-# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) \n-# defined locally in source files will be included in the documentation. \n-# If set to NO only classes defined in header files are included.\n+# This tag can be used to specify the encoding used in the generated output. \n+# The encoding is not always determined by the language that is chosen, \n+# but also whether or not the output is meant for Windows or non-Windows users. \n+# In case there is a difference, setting the USE_WINDOWS_ENCODING tag to YES \n+# forces the Windows encoding (this is the default for the Windows binary), \n+# whereas setting the tag to NO uses a Unix-style encoding (the default for \n+# all platforms other than Windows).\n \n-EXTRACT_LOCAL_CLASSES  = YES\n-\n-# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all \n-# undocumented members of documented classes, files or namespaces. \n-# If set to NO (the default) these members will be included in the \n-# various overviews, but no documentation section is generated. \n-# This option has no effect if EXTRACT_ALL is enabled.\n-\n-HIDE_UNDOC_MEMBERS     = NO\n-\n-# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all \n-# undocumented classes that are normally visible in the class hierarchy. \n-# If set to NO (the default) these class will be included in the various \n-# overviews. This option has no effect if EXTRACT_ALL is enabled.\n-\n-HIDE_UNDOC_CLASSES     = NO\n+USE_WINDOWS_ENCODING   = NO\n \n # If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n # include brief member descriptions after the members that are listed in \n@@ -114,6 +87,17 @@ BRIEF_MEMBER_DESC      = YES\n \n REPEAT_BRIEF           = YES\n \n+# This tag implements a quasi-intelligent brief description abbreviator \n+# that is used to form the text in various listings. Each string \n+# in this list, if found as the leading text of the brief description, will be \n+# stripped from the text and the result after processing the whole list, is used \n+# as the annotated text. Otherwise, the brief description is used as-is. If left \n+# blank, the following values are used (\"$name\" is automatically replaced with the \n+# name of the entity): \"The $name class\" \"The $name widget\" \"The $name file\" \n+# \"is\" \"provides\" \"specifies\" \"contains\" \"represents\" \"a\" \"an\" \"the\"\n+\n+ABBREVIATE_BRIEF       = \n+\n # If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then \n # Doxygen will generate a detailed section even if there is only a brief \n # description.\n@@ -134,71 +118,173 @@ INLINE_INHERITED_MEMB  = YES\n FULL_PATH_NAMES        = NO\n \n # If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag \n-# can be used to strip a user defined part of the path. Stripping is \n+# can be used to strip a user-defined part of the path. Stripping is \n # only done if one of the specified strings matches the left-hand part of \n # the path. It is allowed to use relative paths in the argument list.\n \n STRIP_FROM_PATH        = \n \n+# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter \n+# (but less readable) file names. This can be useful is your file systems \n+# doesn't support long names like on DOS, Mac, or CD-ROM.\n+\n+SHORT_NAMES            = NO\n+\n+# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen \n+# will interpret the first line (until the first dot) of a JavaDoc-style \n+# comment as the brief description. If set to NO, the JavaDoc \n+# comments will behave just like the Qt-style comments (thus requiring an \n+# explicit @brief command for a brief description.\n+\n+JAVADOC_AUTOBRIEF      = NO\n+\n+# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen \n+# treat a multi-line C++ special comment block (i.e. a block of //! or /// \n+# comments) as a brief description. This used to be the default behaviour. \n+# The new default is to treat a multi-line C++ comment block as a detailed \n+# description. Set this tag to YES if you prefer the old behaviour instead.\n+\n+MULTILINE_CPP_IS_BRIEF = NO\n+\n+# If the DETAILS_AT_TOP tag is set to YES then Doxygen \n+# will output the detailed description near the top, like JavaDoc.\n+# If set to NO, the detailed description appears after the member \n+# documentation.\n+\n+DETAILS_AT_TOP         = NO\n+\n+# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented \n+# member inherits the documentation from any documented member that it \n+# re-implements.\n+\n+INHERIT_DOCS           = YES\n+\n+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n+# tag is set to YES, then doxygen will reuse the documentation of the first \n+# member in the group (if any) for the other members of the group. By default \n+# all members of a group must be documented explicitly.\n+\n+DISTRIBUTE_GROUP_DOC   = NO\n+\n+# The TAB_SIZE tag can be used to set the number of spaces in a tab. \n+# Doxygen uses this value to replace tabs by spaces in code fragments.\n+\n+TAB_SIZE               = 8\n+\n+# This tag can be used to specify a number of aliases that acts \n+# as commands in the documentation. An alias has the form \"name=value\". \n+# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to \n+# put the command \\sideeffect (or @sideeffect) in the documentation, which \n+# will result in a user-defined paragraph with heading \"Side Effects:\". \n+# You can put \\n's in the value part of an alias to insert newlines.\n+\n+ALIASES                = \n+\n+# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources \n+# only. Doxygen will then generate output that is more tailored for C. \n+# For instance, some of the names that are used will be different. The list \n+# of all members will be omitted, etc.\n+\n+OPTIMIZE_OUTPUT_FOR_C  = YES\n+\n+# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java sources \n+# only. Doxygen will then generate output that is more tailored for Java. \n+# For instance, namespaces will be presented as packages, qualified scopes \n+# will look different, etc.\n+\n+OPTIMIZE_OUTPUT_JAVA   = NO\n+\n+# Set the SUBGROUPING tag to YES (the default) to allow class member groups of \n+# the same type (for instance a group of public functions) to be put as a \n+# subgroup of that type (e.g. under the Public Functions section). Set it to \n+# NO to prevent subgrouping. Alternatively, this can be done per class using \n+# the \\nosubgrouping command.\n+\n+SUBGROUPING            = YES\n+\n+#---------------------------------------------------------------------------\n+# Build related configuration options\n+#---------------------------------------------------------------------------\n+\n+# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in \n+# documentation are documented, even if no documentation was available. \n+# Private class members and static file members will be hidden unless \n+# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n+\n+EXTRACT_ALL            = YES\n+\n+# If the EXTRACT_PRIVATE tag is set to YES all private members of a class \n+# will be included in the documentation.\n+\n+EXTRACT_PRIVATE        = YES\n+\n+# If the EXTRACT_STATIC tag is set to YES all static members of a file \n+# will be included in the documentation.\n+\n+EXTRACT_STATIC         = YES\n+\n+# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) \n+# defined locally in source files will be included in the documentation. \n+# If set to NO only classes defined in header files are included.\n+\n+EXTRACT_LOCAL_CLASSES  = YES\n+\n+# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all \n+# undocumented members of documented classes, files or namespaces. \n+# If set to NO (the default) these members will be included in the \n+# various overviews, but no documentation section is generated. \n+# This option has no effect if EXTRACT_ALL is enabled.\n+\n+HIDE_UNDOC_MEMBERS     = NO\n+\n+# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all \n+# undocumented classes that are normally visible in the class hierarchy. \n+# If set to NO (the default) these classes will be included in the various \n+# overviews. This option has no effect if EXTRACT_ALL is enabled.\n+\n+HIDE_UNDOC_CLASSES     = NO\n+\n+# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all \n+# friend (class|struct|union) declarations. \n+# If set to NO (the default) these declarations will be included in the \n+# documentation.\n+\n+HIDE_FRIEND_COMPOUNDS  = NO\n+\n+# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any \n+# documentation blocks found inside the body of a function. \n+# If set to NO (the default) these blocks will be appended to the \n+# function's detailed documentation block.\n+\n+HIDE_IN_BODY_DOCS      = NO\n+\n # The INTERNAL_DOCS tag determines if documentation \n # that is typed after a \\internal command is included. If the tag is set \n # to NO (the default) then the documentation will be excluded. \n # Set it to YES to include the internal documentation.\n \n INTERNAL_DOCS          = NO\n \n-# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n-# doxygen to hide any special comment blocks from generated source code \n-# fragments. Normal C and C++ comments will always remain visible.\n-\n-STRIP_CODE_COMMENTS    = YES\n-\n # If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate \n-# file names in lower case letters. If set to YES upper case letters are also \n+# file names in lower-case letters. If set to YES upper-case letters are also \n # allowed. This is useful if you have classes or files whose names only differ \n # in case and if your file system supports case sensitive file names. Windows \n-# users are adviced to set this option to NO.\n+# users are advised to set this option to NO.\n \n CASE_SENSE_NAMES       = YES\n \n-# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter \n-# (but less readable) file names. This can be useful is your file systems \n-# doesn't support long names like on DOS, Mac, or CD-ROM.\n-\n-SHORT_NAMES            = NO\n-\n # If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen \n # will show members with their full class and namespace scopes in the \n # documentation. If set to YES the scope will be hidden.\n \n HIDE_SCOPE_NAMES       = NO\n \n-# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen \n-# will generate a verbatim copy of the header file for each class for \n-# which an include is specified. Set to NO to disable this.\n-\n-VERBATIM_HEADERS       = YES\n-\n # If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen \n-# will put list of the files that are included by a file in the documentation \n+# will put a list of the files that are included by a file in the documentation \n # of that file.\n \n SHOW_INCLUDE_FILES     = YES\n \n-# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen \n-# will interpret the first line (until the first dot) of a JavaDoc-style \n-# comment as the brief description. If set to NO, the JavaDoc \n-# comments  will behave just like the Qt-style comments (thus requiring an \n-# explict @brief command for a brief description.\n-\n-JAVADOC_AUTOBRIEF      = NO\n-\n-# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented \n-# member inherits the documentation from any documented member that it \n-# reimplements.\n-\n-INHERIT_DOCS           = YES\n-\n # If the INLINE_INFO tag is set to YES (the default) then a tag [inline] \n # is inserted in the documentation for inline members.\n \n@@ -211,18 +297,6 @@ INLINE_INFO            = YES\n \n SORT_MEMBER_DOCS       = YES\n \n-# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n-# tag is set to YES, then doxygen will reuse the documentation of the first \n-# member in the group (if any) for the other members of the group. By default \n-# all members of a group must be documented explicitly.\n-\n-DISTRIBUTE_GROUP_DOC   = NO\n-\n-# The TAB_SIZE tag can be used to set the number of spaces in a tab. \n-# Doxygen uses this value to replace tabs by spaces in code fragments.\n-\n-TAB_SIZE               = 8\n-\n # The GENERATE_TODOLIST tag can be used to enable (YES) or \n # disable (NO) the todo list. This list is created by putting \\todo \n # commands in the documentation.\n@@ -241,22 +315,19 @@ GENERATE_TESTLIST      = YES\n \n GENERATE_BUGLIST       = YES\n \n-# This tag can be used to specify a number of aliases that acts \n-# as commands in the documentation. An alias has the form \"name=value\". \n-# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to \n-# put the command \\sideeffect (or @sideeffect) in the documentation, which \n-# will result in a user defined paragraph with heading \"Side Effects:\". \n-# You can put \\n's in the value part of an alias to insert newlines.\n+# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or \n+# disable (NO) the deprecated list. This list is created by putting \n+# \\deprecated commands in the documentation.\n \n-ALIASES                = \n+GENERATE_DEPRECATEDLIST= YES\n \n # The ENABLED_SECTIONS tag can be used to enable conditional \n # documentation sections, marked by \\if sectionname ... \\endif.\n \n ENABLED_SECTIONS       = \n \n # The MAX_INITIALIZER_LINES tag determines the maximum number of lines \n-# the initial value of a variable or define consist of for it to appear in \n+# the initial value of a variable or define consists of for it to appear in \n # the documentation. If the initializer consists of more lines than specified \n # here it will be hidden. Use a value of 0 to hide initializers completely. \n # The appearance of the initializer of individual variables and defines in the \n@@ -265,13 +336,6 @@ ENABLED_SECTIONS       =\n \n MAX_INITIALIZER_LINES  = 30\n \n-# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources \n-# only. Doxygen will then generate output that is more tailored for C. \n-# For instance some of the names that are used will be different. The list \n-# of all members will be omitted, etc.\n-\n-OPTIMIZE_OUTPUT_FOR_C  = YES\n-\n # Set the SHOW_USED_FILES tag to NO to disable the list of files generated \n # at the bottom of the documentation of classes and structs. If set to YES the \n # list will mention the files that were used to generate the documentation.\n@@ -299,6 +363,13 @@ WARNINGS               = YES\n \n WARN_IF_UNDOCUMENTED   = YES\n \n+# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for \n+# potential errors in the documentation, such as not documenting some \n+# parameters in a documented function, or documenting parameters that \n+# don't exist or using markup commands wrongly.\n+\n+WARN_IF_DOC_ERROR      = YES\n+\n # The WARN_FORMAT tag determines the format of the warning messages that \n # doxygen can produce. The string should contain the $file, $line, and $text \n # tags, which will be replaced by the file and line number from which the \n@@ -328,9 +399,13 @@ INPUT                  = .\n # and *.h) to filter out the source-files in the directories. If left \n # blank the following patterns are tested: \n # *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx *.hpp \n-# *.h++ *.idl *.odl\n+# *.h++ *.idl *.odl *.cs *.php *.php3 *.inc\n \n-FILE_PATTERNS          = tree* *mudflap* c-simplify.c gimpl* domwalk*\n+FILE_PATTERNS          = tree* \\\n+                         *mudflap* \\\n+                         c-simplify.c \\\n+                         gimpl* \\\n+                         domwalk*\n \n # The RECURSIVE tag can be used to turn specify whether or not subdirectories \n # should be searched for input files as well. Possible values are YES and NO. \n@@ -383,7 +458,7 @@ IMAGE_PATH             =\n \n # If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using \n # INPUT_FILTER) will be used to filter the input files when producing source \n-# files to browse.\n+# files to browse (i.e. when SOURCE_BROWSER is set to YES).\n \n FILTER_SOURCE_FILES    = NO\n \n@@ -392,7 +467,9 @@ FILTER_SOURCE_FILES    = NO\n #---------------------------------------------------------------------------\n \n # If the SOURCE_BROWSER tag is set to YES then a list of source files will \n-# be generated. Documented entities will be cross-referenced with these sources.\n+# be generated. Documented entities will be cross-referenced with these sources. \n+# Note: To get rid of all source code in the generated output, make sure also \n+# VERBATIM_HEADERS is set to NO.\n \n SOURCE_BROWSER         = YES\n \n@@ -401,6 +478,12 @@ SOURCE_BROWSER         = YES\n \n INLINE_SOURCES         = YES\n \n+# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n+# doxygen to hide any special comment blocks from generated source code \n+# fragments. Normal C and C++ comments will always remain visible.\n+\n+STRIP_CODE_COMMENTS    = YES\n+\n # If the REFERENCED_BY_RELATION tag is set to YES (the default) \n # then for each documented function all documented \n # functions referencing it will be listed.\n@@ -413,6 +496,12 @@ REFERENCED_BY_RELATION = YES\n \n REFERENCES_RELATION    = YES\n \n+# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen \n+# will generate a verbatim copy of the header file for each class for \n+# which an include is specified. Set to NO to disable this.\n+\n+VERBATIM_HEADERS       = YES\n+\n #---------------------------------------------------------------------------\n # configuration options related to the alphabetical class index\n #---------------------------------------------------------------------------\n@@ -469,10 +558,12 @@ HTML_HEADER            =\n \n HTML_FOOTER            = \n \n-# The HTML_STYLESHEET tag can be used to specify a user defined cascading \n+# The HTML_STYLESHEET tag can be used to specify a user-defined cascading \n # style sheet that is used by each HTML page. It can be used to \n # fine-tune the look of the HTML output. If the tag is left blank doxygen \n-# will generate a default style sheet\n+# will generate a default style sheet. Note that doxygen will try to copy \n+# the style sheet file to the HTML output directory, so don't put your own \n+# stylesheet in the HTML output directory as well, or it will be erased!\n \n HTML_STYLESHEET        = \n \n@@ -489,6 +580,20 @@ HTML_ALIGN_MEMBERS     = YES\n \n GENERATE_HTMLHELP      = NO\n \n+# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can \n+# be used to specify the file name of the resulting .chm file. You \n+# can add a path in front of the file if the result should not be \n+# written to the html output directory.\n+\n+CHM_FILE               = \n+\n+# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can \n+# be used to specify the location (absolute path including file name) of \n+# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run \n+# the HTML help compiler on the generated index.hhp.\n+\n+HHC_LOCATION           = \n+\n # If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag \n # controls if a separate .chi index file is generated (YES) or that \n # it should be included in the master .chm file (NO).\n@@ -502,7 +607,7 @@ GENERATE_CHI           = NO\n BINARY_TOC             = NO\n \n # The TOC_EXPAND flag can be set to YES to add extra items for group members \n-# to the contents of the Html help documentation and to the tree view.\n+# to the contents of the HTML help documentation and to the tree view.\n \n TOC_EXPAND             = NO\n \n@@ -520,10 +625,9 @@ ENUM_VALUES_PER_LINE   = 4\n # If the GENERATE_TREEVIEW tag is set to YES, a side panel will be\n # generated containing a tree-like index structure (just like the one that \n # is generated for HTML Help). For this to work a browser that supports \n-# JavaScript and frames is required (for instance Mozilla, Netscape 4.0+, \n-# or Internet explorer 4.0+). Note that for large projects the tree generation \n-# can take a very long time. In such cases it is better to disable this feature. \n-# Windows users are probably better off using the HTML help feature.\n+# JavaScript, DHTML, CSS and frames is required (for instance Mozilla 1.0+, \n+# Netscape 6.0+, Internet explorer 5.0+, or Konqueror). Windows users are \n+# probably better off using the HTML help feature.\n \n GENERATE_TREEVIEW      = NO\n \n@@ -548,6 +652,17 @@ GENERATE_LATEX         = NO\n \n LATEX_OUTPUT           = latex\n \n+# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be \n+# invoked. If left blank `latex' will be used as the default command name.\n+\n+LATEX_CMD_NAME         = latex\n+\n+# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to \n+# generate index for LaTeX. If left blank `makeindex' will be used as the \n+# default command name.\n+\n+MAKEINDEX_CMD_NAME     = makeindex\n+\n # If the COMPACT_LATEX tag is set to YES Doxygen generates more compact \n # LaTeX documents. This may be useful for small projects and may help to \n # save some trees in general.\n@@ -592,12 +707,18 @@ USE_PDFLATEX           = YES\n \n LATEX_BATCHMODE        = YES\n \n+# If LATEX_HIDE_INDICES is set to YES then doxygen will not \n+# include the index chapters (such as File Index, Compound Index, etc.) \n+# in the output.\n+\n+LATEX_HIDE_INDICES     = NO\n+\n #---------------------------------------------------------------------------\n # configuration options related to the RTF output\n #---------------------------------------------------------------------------\n \n # If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output \n-# The RTF output is optimised for Word 97 and may not look very pretty with \n+# The RTF output is optimized for Word 97 and may not look very pretty with \n # other RTF readers or editors.\n \n GENERATE_RTF           = NO\n@@ -624,7 +745,7 @@ COMPACT_RTF            = NO\n RTF_HYPERLINKS         = NO\n \n # Load stylesheet definitions from file. Syntax is similar to doxygen's \n-# config file, i.e. a series of assigments. You only have to provide \n+# config file, i.e. a series of assignments. You only have to provide \n # replacements, missing definitions are set to their default value.\n \n RTF_STYLESHEET_FILE    = \n@@ -668,12 +789,35 @@ MAN_LINKS              = NO\n \n # If the GENERATE_XML tag is set to YES Doxygen will \n # generate an XML file that captures the structure of \n-# the code including all documentation. Note that this \n-# feature is still experimental and incomplete at the \n-# moment.\n+# the code including all documentation.\n \n GENERATE_XML           = NO\n \n+# The XML_OUTPUT tag is used to specify where the XML pages will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `xml' will be used as the default path.\n+\n+XML_OUTPUT             = xml\n+\n+# The XML_SCHEMA tag can be used to specify an XML schema, \n+# which can be used by a validating XML parser to check the \n+# syntax of the XML files.\n+\n+XML_SCHEMA             = \n+\n+# The XML_DTD tag can be used to specify an XML DTD, \n+# which can be used by a validating XML parser to check the \n+# syntax of the XML files.\n+\n+XML_DTD                = \n+\n+# If the XML_PROGRAMLISTING tag is set to YES Doxygen will \n+# dump the program listings (including syntax highlighting \n+# and cross-referencing information) to the XML output. Note that \n+# enabling this will significantly increase the size of the XML output.\n+\n+XML_PROGRAMLISTING     = YES\n+\n #---------------------------------------------------------------------------\n # configuration options for the AutoGen Definitions output\n #---------------------------------------------------------------------------\n@@ -686,6 +830,39 @@ GENERATE_XML           = NO\n \n GENERATE_AUTOGEN_DEF   = NO\n \n+#---------------------------------------------------------------------------\n+# configuration options related to the Perl module output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n+# generate a Perl module file that captures the structure of \n+# the code including all documentation. Note that this \n+# feature is still experimental and incomplete at the \n+# moment.\n+\n+GENERATE_PERLMOD       = NO\n+\n+# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n+# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n+# to generate PDF and DVI output from the Perl module output.\n+\n+PERLMOD_LATEX          = NO\n+\n+# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n+# nicely formatted so it can be parsed by a human reader.  This is useful \n+# if you want to understand what is going on.  On the other hand, if this \n+# tag is set to NO the size of the Perl module output will be much smaller \n+# and Perl will parse it just the same.\n+\n+PERLMOD_PRETTY         = YES\n+\n+# The names of the make variables in the generated doxyrules.make file \n+# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. \n+# This is useful so different doxyrules.make files included by the same \n+# Makefile don't overwrite each other's variables.\n+\n+PERLMOD_MAKEVAR_PREFIX = \n+\n #---------------------------------------------------------------------------\n # Configuration options related to the preprocessor   \n #---------------------------------------------------------------------------\n@@ -735,7 +912,7 @@ INCLUDE_FILE_PATTERNS  =\n \n PREDEFINED             = \n \n-# If the MACRO_EXPANSION and EXPAND_PREDEF_ONLY tags are set to YES then \n+# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then \n # this tag can be used to specify a list of macro names that should be expanded. \n # The macro definition that is found in the sources will be used. \n # Use the PREDEFINED tag if you want to use a different macro definition.\n@@ -744,16 +921,30 @@ EXPAND_AS_DEFINED      =\n \n # If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then \n # doxygen's preprocessor will remove all function-like macros that are alone \n-# on a line and do not end with a semicolon. Such function macros are typically \n-# used for boiler-plate code, and will confuse the parser if not removed.\n+# on a line, have an all uppercase name, and do not end with a semicolon. Such \n+# function macros are typically used for boiler-plate code, and will confuse the \n+# parser if not removed.\n \n SKIP_FUNCTION_MACROS   = YES\n \n #---------------------------------------------------------------------------\n # Configuration::addtions related to external references   \n #---------------------------------------------------------------------------\n \n-# The TAGFILES tag can be used to specify one or more tagfiles.\n+# The TAGFILES option can be used to specify one or more tagfiles. \n+# Optionally an initial location of the external documentation \n+# can be added for each tagfile. The format of a tag file without \n+# this location is as follows: \n+#   TAGFILES = file1 file2 ... \n+# Adding location for the tag files is done as follows: \n+#   TAGFILES = file1=loc1 \"file2 = loc2\" ... \n+# where \"loc1\" and \"loc2\" can be relative or absolute paths or \n+# URLs. If a location is present for each tag, the installdox tool \n+# does not have to be run to correct the links.\n+# Note that each tag file must have a unique name\n+# (where the name does NOT include the path)\n+# If a tag file is not located in the directory in which doxygen \n+# is run, you must also specify the path to the tagfile here.\n \n TAGFILES               = \n \n@@ -784,13 +975,19 @@ PERL_PATH              = /usr/bin/perl\n #---------------------------------------------------------------------------\n \n # If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will \n-# generate a inheritance diagram (in Html, RTF and LaTeX) for classes with base or \n+# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base or \n # super classes. Setting the tag to NO turns the diagrams off. Note that this \n-# option is superceded by the HAVE_DOT option below. This is only a fallback. It is \n-# recommended to install and use dot, since it yield more powerful graphs.\n+# option is superseded by the HAVE_DOT option below. This is only a fallback. It is \n+# recommended to install and use dot, since it yields more powerful graphs.\n \n CLASS_DIAGRAMS         = YES\n \n+# If set to YES, the inheritance and collaboration graphs will hide \n+# inheritance and usage relations if the target is undocumented \n+# or is not a class.\n+\n+HIDE_UNDOC_RELATIONS   = YES\n+\n # If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is \n # available from the path. This tool is part of Graphviz, a graph visualization \n # toolkit from AT&T and Lucent Bell Labs. The other options in this section \n@@ -812,17 +1009,17 @@ CLASS_GRAPH            = YES\n \n COLLABORATION_GRAPH    = YES\n \n+# If the UML_LOOK tag is set to YES doxygen will generate inheritance and \n+# collaboration diagrams in a style similar to the OMG's Unified Modeling \n+# Language.\n+\n+UML_LOOK               = NO\n+\n # If set to YES, the inheritance and collaboration graphs will show the \n # relations between templates and their instances.\n \n TEMPLATE_RELATIONS     = YES\n \n-# If set to YES, the inheritance and collaboration graphs will hide \n-# inheritance and usage relations if the target is undocumented \n-# or is not a class.\n-\n-HIDE_UNDOC_RELATIONS   = YES\n-\n # If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT \n # tags are set to YES then doxygen will generate a graph for each documented \n # file showing the direct and indirect include dependencies of the file with \n@@ -837,14 +1034,22 @@ INCLUDE_GRAPH          = YES\n \n INCLUDED_BY_GRAPH      = YES\n \n+# If the CALL_GRAPH and HAVE_DOT tags are set to YES then doxygen will \n+# generate a call dependency graph for every global function or class method. \n+# Note that enabling this option will significantly increase the time of a run. \n+# So in most cases it will be better to enable call graphs for selected \n+# functions only using the \\callgraph command.\n+\n+CALL_GRAPH             = NO\n+\n # If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen \n # will graphical hierarchy of all classes instead of a textual one.\n \n GRAPHICAL_HIERARCHY    = YES\n \n # The DOT_IMAGE_FORMAT tag can be used to set the image format of the images \n-# generated by dot. Possible values are gif, jpg, and png\n-# If left blank gif will be used.\n+# generated by dot. Possible values are png, jpg, or gif\n+# If left blank png will be used.\n \n DOT_IMAGE_FORMAT       = png\n \n@@ -875,14 +1080,25 @@ MAX_DOT_GRAPH_WIDTH    = 1024\n \n MAX_DOT_GRAPH_HEIGHT   = 1024\n \n+# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the \n+# graphs generated by dot. A depth value of 3 means that only nodes reachable \n+# from the root by following a path via at most 3 edges will be shown. Nodes that \n+# lay further from the root node will be omitted. Note that setting this option to \n+# 1 or 2 may greatly reduce the computation time needed for large code bases. Also \n+# note that a graph may be further truncated if the graph's image dimensions are \n+# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). \n+# If 0 is used for the depth value (the default), the graph is not depth-constrained.\n+\n+MAX_DOT_GRAPH_DEPTH    = 0\n+\n # If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will \n # generate a legend page explaining the meaning of the various boxes and \n # arrows in the dot generated graphs.\n \n GENERATE_LEGEND        = YES\n \n # If the DOT_CLEANUP tag is set to YES (the default) Doxygen will \n-# remove the intermedate dot files that are used to generate \n+# remove the intermediate dot files that are used to generate \n # the various graphs.\n \n DOT_CLEANUP            = YES\n@@ -895,38 +1111,3 @@ DOT_CLEANUP            = YES\n # used. If set to NO the values of all tags below this one will be ignored.\n \n SEARCHENGINE           = NO\n-\n-# The CGI_NAME tag should be the name of the CGI script that \n-# starts the search engine (doxysearch) with the correct parameters. \n-# A script with this name will be generated by doxygen.\n-\n-CGI_NAME               = search.cgi\n-\n-# The CGI_URL tag should be the absolute URL to the directory where the \n-# cgi binaries are located. See the documentation of your http daemon for \n-# details.\n-\n-CGI_URL                = \n-\n-# The DOC_URL tag should be the absolute URL to the directory where the \n-# documentation is located. If left blank the absolute path to the \n-# documentation, with file:// prepended to it, will be used.\n-\n-DOC_URL                = \n-\n-# The DOC_ABSPATH tag should be the absolute path to the directory where the \n-# documentation is located. If left blank the directory on the local machine \n-# will be used.\n-\n-DOC_ABSPATH            = \n-\n-# The BIN_ABSPATH tag must point to the directory where the doxysearch binary \n-# is installed.\n-\n-BIN_ABSPATH            = /usr/local/bin/\n-\n-# The EXT_DOC_PATHS tag can be used to specify one or more paths to \n-# documentation generated for other projects. This allows doxysearch to search \n-# the documentation for these projects as well.\n-\n-EXT_DOC_PATHS          = "}]}