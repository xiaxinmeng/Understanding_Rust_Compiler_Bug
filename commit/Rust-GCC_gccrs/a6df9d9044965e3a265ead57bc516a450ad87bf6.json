{"sha": "a6df9d9044965e3a265ead57bc516a450ad87bf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZkZjlkOTA0NDk2NWUzYTI2NWVhZDU3YmM1MTZhNDUwYWQ4N2JmNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-05-22T10:50:43Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-05-22T10:50:43Z"}, "message": "Do not ICE for incomplete types in ICF (PR ipa/85607).\n\n2018-05-22  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/85607\n\t* ipa-icf.c (sem_item::add_type): Do not ICE for incomplete types.\n2018-05-22  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/85607\n\t* g++.dg/ipa/pr85607.C: New test.\n\nFrom-SVN: r260502", "tree": {"sha": "99721d9fc15d919307a2430eef9cd7dbb11042a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99721d9fc15d919307a2430eef9cd7dbb11042a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6df9d9044965e3a265ead57bc516a450ad87bf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6df9d9044965e3a265ead57bc516a450ad87bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6df9d9044965e3a265ead57bc516a450ad87bf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6df9d9044965e3a265ead57bc516a450ad87bf6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4515e413cb72d3a71b41d3e85da1be03fa88677d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4515e413cb72d3a71b41d3e85da1be03fa88677d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4515e413cb72d3a71b41d3e85da1be03fa88677d"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "5ef5cbae541222d40fc7ca292e2a2c17169541f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6df9d9044965e3a265ead57bc516a450ad87bf6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6df9d9044965e3a265ead57bc516a450ad87bf6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6df9d9044965e3a265ead57bc516a450ad87bf6", "patch": "@@ -1,3 +1,8 @@\n+2018-05-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/85607\n+\t* ipa-icf.c (sem_item::add_type): Do not ICE for incomplete types.\n+\n 2018-05-22  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/85863"}, {"sha": "37e63fc2ba8a72ab138671d5e239aac9cfdfef37", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6df9d9044965e3a265ead57bc516a450ad87bf6/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6df9d9044965e3a265ead57bc516a450ad87bf6/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=a6df9d9044965e3a265ead57bc516a450ad87bf6", "patch": "@@ -1580,7 +1580,13 @@ sem_item::add_type (const_tree type, inchash::hash &hstate)\n     }\n   else if (RECORD_OR_UNION_TYPE_P (type))\n     {\n-      gcc_checking_assert (COMPLETE_TYPE_P (type));\n+      /* Incomplete types must be skipped here.  */\n+      if (!COMPLETE_TYPE_P (type))\n+\t{\n+\t  hstate.add_int (RECORD_TYPE);\n+\t  return;\n+\t}\n+\n       hashval_t *val = optimizer->m_type_hash_cache.get (type);\n \n       if (!val)\n@@ -1591,8 +1597,6 @@ sem_item::add_type (const_tree type, inchash::hash &hstate)\n \t  hashval_t hash;\n \n \t  hstate2.add_int (RECORD_TYPE);\n-\t  gcc_assert (COMPLETE_TYPE_P (type));\n-\n \t  for (f = TYPE_FIELDS (type), nf = 0; f; f = TREE_CHAIN (f))\n \t    if (TREE_CODE (f) == FIELD_DECL)\n \t      {"}, {"sha": "0f109eb4a53b5e067dc76a3a2ec235f40f043e15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6df9d9044965e3a265ead57bc516a450ad87bf6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6df9d9044965e3a265ead57bc516a450ad87bf6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6df9d9044965e3a265ead57bc516a450ad87bf6", "patch": "@@ -1,3 +1,8 @@\n+2018-05-22  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/85607\n+\t* g++.dg/ipa/pr85607.C: New test.\n+\n 2018-05-22  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/85863"}, {"sha": "b47aba2167d39a6dfe412326718136b31a111daf", "filename": "gcc/testsuite/g++.dg/ipa/pr85607.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6df9d9044965e3a265ead57bc516a450ad87bf6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr85607.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6df9d9044965e3a265ead57bc516a450ad87bf6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr85607.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr85607.C?ref=a6df9d9044965e3a265ead57bc516a450ad87bf6", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile }\n+/* { dg-options \"-O2\" } */\n+\n+class A;\t// { dg-message \"forward declaration of 'class A'\" }\n+\n+A *a;\t\t// { dg-warning \"'a' has incomplete type\" }\n+\n+int\n+main (int argc, char **argv)\n+{\n+  delete a;\t// { dg-warning \"delete\" \"warn\" }\n+  // { dg-message \"note\" \"note\" { target *-*-* } .-1 }\n+  return 0;\n+}"}]}