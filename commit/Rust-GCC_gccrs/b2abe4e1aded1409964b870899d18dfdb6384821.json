{"sha": "b2abe4e1aded1409964b870899d18dfdb6384821", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhYmU0ZTFhZGVkMTQwOTk2NGI4NzA4OTlkMThkZmRiNjM4NDgyMQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-07-26T15:06:08Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-07-30T10:51:35Z"}, "message": "d: Insert null terminator in obstack buffers\n\nCovers cases where functions that handle the extracted strings ignore\nthe explicit length.  This isn't something that's known to happen in the\ncurrent front-end, but the self-hosted front-end has been observed to do\nthis in its conversions between D and C-style strings.\n\ngcc/d/ChangeLog:\n\n\t* d-lang.cc (deps_add_target): Insert null terminator in buffer.\n\t(deps_write): Likewise.\n\t(d_parse_file): Likewise.", "tree": {"sha": "0fa9e7eff298131f8450c45cf0b229af6b9a2536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fa9e7eff298131f8450c45cf0b229af6b9a2536"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2abe4e1aded1409964b870899d18dfdb6384821", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2abe4e1aded1409964b870899d18dfdb6384821", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2abe4e1aded1409964b870899d18dfdb6384821", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2abe4e1aded1409964b870899d18dfdb6384821/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bafda275371c43a67a9f84813886b9aa6cf4cd98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bafda275371c43a67a9f84813886b9aa6cf4cd98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bafda275371c43a67a9f84813886b9aa6cf4cd98"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "4386a489ff2d2512c4d3673b8ae4cfb380d12427", "filename": "gcc/d/d-lang.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2abe4e1aded1409964b870899d18dfdb6384821/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2abe4e1aded1409964b870899d18dfdb6384821/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=b2abe4e1aded1409964b870899d18dfdb6384821", "patch": "@@ -108,7 +108,7 @@ deps_add_target (const char *target, bool quoted)\n \n   if (!quoted)\n     {\n-      obstack_grow (&buffer, target, strlen (target));\n+      obstack_grow0 (&buffer, target, strlen (target));\n       d_option.deps_target.safe_push ((const char *) obstack_finish (&buffer));\n       return;\n     }\n@@ -149,6 +149,7 @@ deps_add_target (const char *target, bool quoted)\n       obstack_1grow (&buffer, *p);\n     }\n \n+  obstack_1grow (&buffer, '\\0');\n   d_option.deps_target.safe_push ((const char *) obstack_finish (&buffer));\n }\n \n@@ -278,6 +279,8 @@ deps_write (Module *module, obstack *buffer)\n       obstack_grow (buffer, str, strlen (str));\n       obstack_grow (buffer, \":\\n\", 2);\n     }\n+\n+  obstack_1grow (buffer, '\\0');\n }\n \n /* Implements the lang_hooks.init_options routine for language D.\n@@ -884,6 +887,7 @@ d_parse_file (void)\n \t      obstack_grow (&buffer, str, strlen (str));\n \t    }\n \n+\t  obstack_1grow (&buffer, '\\0');\n \t  message (\"%s\", (char *) obstack_finish (&buffer));\n \t}\n     }"}]}