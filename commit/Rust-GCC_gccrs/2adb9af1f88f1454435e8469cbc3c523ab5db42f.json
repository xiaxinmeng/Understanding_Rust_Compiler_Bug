{"sha": "2adb9af1f88f1454435e8469cbc3c523ab5db42f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFkYjlhZjFmODhmMTQ1NDQzNWU4NDY5Y2JjM2M1MjNhYjVkYjQyZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-05-14T17:44:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-05-14T17:44:01Z"}, "message": "rtl.h (TREE_CONSTANT_POOL_ADDRESS_P): Rename from DEFERRED_CONSTANT_P.\n\n        * rtl.h (TREE_CONSTANT_POOL_ADDRESS_P): Rename from\n        DEFERRED_CONSTANT_P.\n        * integrate.c (copy_rtx_and_substitute): Update use.\n        * varasm.c (build_constant_desc): Set SYMBOL_REF_DECL\n        to the copy generated.\n        (maybe_output_constant_def_contents): Examine TREE_ASM_WRITTEN\n        of the constant to see if we should emit.\n        (mark_constant): Similarly.\n        (output_constant_def_contents): Set TREE_ASM_WRITTEN.\n\nFrom-SVN: r66807", "tree": {"sha": "cfb46ce49ae7e84da0f5bc6e3bd2c4d3571b6089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfb46ce49ae7e84da0f5bc6e3bd2c4d3571b6089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2adb9af1f88f1454435e8469cbc3c523ab5db42f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2adb9af1f88f1454435e8469cbc3c523ab5db42f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2adb9af1f88f1454435e8469cbc3c523ab5db42f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2adb9af1f88f1454435e8469cbc3c523ab5db42f/comments", "author": null, "committer": null, "parents": [{"sha": "bb84cb12fb14b902e94788f37fa967eef29584df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb84cb12fb14b902e94788f37fa967eef29584df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb84cb12fb14b902e94788f37fa967eef29584df"}], "stats": {"total": 59, "additions": 38, "deletions": 21}, "files": [{"sha": "0d42be6c71d9992cb47181f2bb45aae96977278d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2adb9af1f88f1454435e8469cbc3c523ab5db42f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2adb9af1f88f1454435e8469cbc3c523ab5db42f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2adb9af1f88f1454435e8469cbc3c523ab5db42f", "patch": "@@ -1,3 +1,15 @@\n+2003-05-14  Richard Henderson  <rth@redhat.com>\n+\n+\t* rtl.h (TREE_CONSTANT_POOL_ADDRESS_P): Rename from\n+\tDEFERRED_CONSTANT_P.\n+\t* integrate.c (copy_rtx_and_substitute): Update use.\n+\t* varasm.c (build_constant_desc): Set SYMBOL_REF_DECL\n+\tto the copy generated.\n+\t(maybe_output_constant_def_contents): Examine TREE_ASM_WRITTEN\n+\tof the constant to see if we should emit.\n+\t(mark_constant): Similarly.\n+\t(output_constant_def_contents): Set TREE_ASM_WRITTEN.\n+\n 2003-05-14  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.md (movsi_internal2): Use compare for self"}, {"sha": "4f31c79fa2d938b6bff71e3b4ad2f366819ee711", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2adb9af1f88f1454435e8469cbc3c523ab5db42f/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2adb9af1f88f1454435e8469cbc3c523ab5db42f/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=2adb9af1f88f1454435e8469cbc3c523ab5db42f", "patch": "@@ -2215,7 +2215,7 @@ copy_rtx_and_substitute (orig, map, for_lhs)\n \t\t\t  copy_rtx_and_substitute (constant, map, for_lhs)),\n \t\t\t 0);\n \t}\n-      else if (DEFERRED_CONSTANT_P (orig) && inlining)\n+      else if (TREE_CONSTANT_POOL_ADDRESS_P (orig) && inlining)\n \tnotice_rtl_inlining_of_deferred_constant ();\n \n       return orig;"}, {"sha": "77b1f38fc28ca8186b87ba243302880de392bf99", "filename": "gcc/rtl.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2adb9af1f88f1454435e8469cbc3c523ab5db42f/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2adb9af1f88f1454435e8469cbc3c523ab5db42f/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=2adb9af1f88f1454435e8469cbc3c523ab5db42f", "patch": "@@ -1230,15 +1230,16 @@ do {\t\t\t\t\t\t\\\n #define COND_EXEC_TEST(RTX) XCEXP (RTX, 0, COND_EXEC)\n #define COND_EXEC_CODE(RTX) XCEXP (RTX, 1, COND_EXEC)\n \n-/* 1 if RTX is a symbol_ref that addresses this function's constants pool.  */\n+/* 1 if RTX is a symbol_ref that addresses this function's rtl\n+   constants pool.  */\n #define CONSTANT_POOL_ADDRESS_P(RTX)\t\t\t\t\t\\\n   (RTL_FLAG_CHECK1(\"CONSTANT_POOL_ADDRESS_P\", (RTX), SYMBOL_REF)->unchanging)\n \n-/* 1 if RTX is a symbol_ref that addresses a value in the file's constant\n-   pool which has not yet been output.  This information is private to\n-   varasm.c.  */\n-#define DEFERRED_CONSTANT_P(RTX)\t\t\t\t\t\\\n-  (RTL_FLAG_CHECK1(\"DEFERRED_CONSTANT_P\", (RTX), SYMBOL_REF)->frame_related)\n+/* 1 if RTX is a symbol_ref that addresses a value in the file's\n+   tree constant pool.  This information is private to varasm.c.  */\n+#define TREE_CONSTANT_POOL_ADDRESS_P(RTX)\t\t\t\t\\\n+  (RTL_FLAG_CHECK1(\"TREE_CONSTANT_POOL_ADDRESS_P\",\t\t\t\\\n+\t\t   (RTX), SYMBOL_REF)->frame_related)\n \n /* Used if RTX is a symbol_ref, for machine-specific purposes.  */\n #define SYMBOL_REF_FLAG(RTX)\t\t\t\t\t\t\\"}, {"sha": "6bd8d73ec9871d81b95c7477caaa4947a01232a8", "filename": "gcc/varasm.c", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2adb9af1f88f1454435e8469cbc3c523ab5db42f/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2adb9af1f88f1454435e8469cbc3c523ab5db42f/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=2adb9af1f88f1454435e8469cbc3c523ab5db42f", "patch": "@@ -2535,7 +2535,8 @@ build_constant_desc (exp)\n   /* We have a symbol name; construct the SYMBOL_REF and the MEM.  */\n   symbol = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (label));\n   SYMBOL_REF_FLAGS (symbol) = SYMBOL_FLAG_LOCAL;\n-  SYMBOL_REF_DECL (symbol) = exp;\n+  SYMBOL_REF_DECL (symbol) = desc->value;\n+  TREE_CONSTANT_POOL_ADDRESS_P (symbol) = 1;\n \n   rtl = gen_rtx_MEM (TYPE_MODE (TREE_TYPE (exp)), symbol);\n   set_mem_attributes (rtl, exp, 1);\n@@ -2550,12 +2551,6 @@ build_constant_desc (exp)\n \n   (*targetm.encode_section_info) (exp, rtl, true);\n \n-  /* Descriptors start out deferred; this simplifies the logic in\n-     maybe_output_constant_def_contents.  However, we do not bump\n-     n_deferred_constants here, because we don't know if we're inside\n-     a function and have an n_deferred_constants to bump.  */\n-  DEFERRED_CONSTANT_P (XEXP (rtl, 0)) = 1;\n-\n   desc->rtl = rtl;\n \n   return desc;\n@@ -2607,19 +2602,24 @@ maybe_output_constant_def_contents (desc, defer)\n      int defer;\n {\n   rtx symbol = XEXP (desc->rtl, 0);\n+  tree exp = desc->value;\n \n   if (flag_syntax_only)\n     return;\n \n-  if (!DEFERRED_CONSTANT_P (symbol))\n+  if (TREE_ASM_WRITTEN (exp))\n     /* Already output; don't do it again.  */\n     return;\n \n   /* The only constants that cannot safely be deferred, assuming the\n      context allows it, are strings under flag_writable_strings.  */\n-  if (defer && (TREE_CODE (desc->value) != STRING_CST\n-\t\t|| !flag_writable_strings))\n+  if (defer && (TREE_CODE (exp) != STRING_CST || !flag_writable_strings))\n     {\n+      /* Increment n_deferred_constants if it exists.  It needs to be at\n+\t least as large as the number of constants actually referred to\n+\t by the function.  If it's too small we'll stop looking too early\n+\t and fail to emit constants; if it's too large we'll only look\n+\t through the entire function when we could have stopped earlier.  */\n       if (cfun)\n \tn_deferred_constants++;\n       return;\n@@ -2648,7 +2648,7 @@ output_constant_def_contents (symbol)\n #endif\n \n   /* We are no longer deferring this constant.  */\n-  DEFERRED_CONSTANT_P (symbol) = 0;\n+  TREE_ASM_WRITTEN (exp) = 1;\n \n   if (IN_NAMED_SECTION (exp))\n     named_section (exp, NULL, reloc);\n@@ -3481,10 +3481,14 @@ mark_constant (current_rtx, data)\n \t  else\n \t    return -1;\n \t}\n-      else if (DEFERRED_CONSTANT_P (x))\n+      else if (TREE_CONSTANT_POOL_ADDRESS_P (x))\n \t{\n-\t  n_deferred_constants--;\n-\t  output_constant_def_contents (x);\n+\t  tree exp = SYMBOL_REF_DECL (x);\n+\t  if (!TREE_ASM_WRITTEN (exp))\n+\t    {\n+\t      n_deferred_constants--;\n+\t      output_constant_def_contents (x);\n+\t    }\n \t}\n     }\n   return 0;"}]}