{"sha": "7f685e177ee99a15953f2ffa4292823c8a9b88da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y2ODVlMTc3ZWU5OWExNTk1M2YyZmZhNDI5MjgyM2M4YTliODhkYQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-04-14T03:13:07Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-04-14T03:13:07Z"}, "message": "tree.h (DECL_BUILT_IN_NONANSI): Remove.\n\n\n\t* tree.h (DECL_BUILT_IN_NONANSI): Remove.\n\t* c-common.c (builtin_function_2): Don't set DECL_BUILT_IN_NONANSI.\n\t* c-decl.c (duplicate_decls): Use invariant DECL_BUILT_IN_NONANSI\n\timplies DECL_BUILT_IN to simplify logic.\n\t* print-tree.c (print_node): Don't dump DECL_BUILT_IN_NONANSI.\n\nFrom-SVN: r65561", "tree": {"sha": "3b5aae81043167976f8a6e9e31f1cc5aa74edcc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b5aae81043167976f8a6e9e31f1cc5aa74edcc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f685e177ee99a15953f2ffa4292823c8a9b88da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f685e177ee99a15953f2ffa4292823c8a9b88da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f685e177ee99a15953f2ffa4292823c8a9b88da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f685e177ee99a15953f2ffa4292823c8a9b88da/comments", "author": null, "committer": null, "parents": [{"sha": "1331d16fd4b57c5927cec03b5a320bc59366a628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1331d16fd4b57c5927cec03b5a320bc59366a628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1331d16fd4b57c5927cec03b5a320bc59366a628"}], "stats": {"total": 58, "additions": 18, "deletions": 40}, "files": [{"sha": "98d6c34ceb63484259c087436cefcdb5cbe9cab5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f685e177ee99a15953f2ffa4292823c8a9b88da", "patch": "@@ -1,3 +1,11 @@\n+2003-04-13  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* tree.h (DECL_BUILT_IN_NONANSI): Remove.\n+\t* c-common.c (builtin_function_2): Don't set DECL_BUILT_IN_NONANSI.\n+\t* c-decl.c (duplicate_decls): Use invariant DECL_BUILT_IN_NONANSI\n+\timplies DECL_BUILT_IN to simplify logic.\n+\t* print-tree.c (print_node): Don't dump DECL_BUILT_IN_NONANSI.\n+\n 2003-04-13  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtin-types.def (BT_FN_STRING_CONST_STRING): New builtin type."}, {"sha": "5d51579ff5d0861b3bc0f59c1b1200964000b08b", "filename": "gcc/c-common.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=7f685e177ee99a15953f2ffa4292823c8a9b88da", "patch": "@@ -3691,20 +3691,15 @@ builtin_function_2 (builtin_name, name, builtin_type, type, function_code,\n {\n   tree bdecl = NULL_TREE;\n   tree decl = NULL_TREE;\n+\n   if (builtin_name != 0)\n-    {\n-      bdecl = builtin_function (builtin_name, builtin_type, function_code,\n-\t\t\t\tclass, library_name_p ? name : NULL,\n-\t\t\t\tattrs);\n-    }\n+    bdecl = builtin_function (builtin_name, builtin_type, function_code,\n+\t\t\t      class, library_name_p ? name : NULL, attrs);\n+\n   if (name != 0 && !flag_no_builtin && !builtin_function_disabled_p (name)\n       && !(nonansi_p && flag_no_nonansi_builtin))\n-    {\n-      decl = builtin_function (name, type, function_code, class, NULL,\n-\t\t\t       attrs);\n-      if (nonansi_p)\n-\tDECL_BUILT_IN_NONANSI (decl) = 1;\n-    }\n+    decl = builtin_function (name, type, function_code, class, NULL, attrs);\n+\n   return (bdecl != 0 ? bdecl : decl);\n }\n \f"}, {"sha": "be6ff79059d539fb799877205c5cfc82d389dcc7", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=7f685e177ee99a15953f2ffa4292823c8a9b88da", "patch": "@@ -860,30 +860,16 @@ duplicate_decls (newdecl, olddecl, different_binding_level)\n   if (TREE_CODE (olddecl) != TREE_CODE (newdecl))\n     {\n       if (TREE_CODE (olddecl) == FUNCTION_DECL\n-\t  && (DECL_BUILT_IN (olddecl)\n-\t      || DECL_BUILT_IN_NONANSI (olddecl)))\n+\t  && DECL_BUILT_IN (olddecl))\n \t{\n \t  /* If you declare a built-in or predefined function name as static,\n \t     the old definition is overridden,\n \t     but optionally warn this was a bad choice of name.  */\n \t  if (!TREE_PUBLIC (newdecl))\n \t    {\n-\t      if (!warn_shadow)\n-\t\t;\n-\t      else if (DECL_BUILT_IN (olddecl))\n+\t      if (warn_shadow)\n \t\twarning_with_decl (newdecl, \"shadowing built-in function `%s'\");\n-\t      else\n-\t\twarning_with_decl (newdecl, \"shadowing library function `%s'\");\n \t    }\n-\t  /* Likewise, if the built-in is not ansi, then programs can\n-\t     override it even globally without an error.  */\n-\t  else if (! DECL_BUILT_IN (olddecl))\n-\t    warning_with_decl (newdecl,\n-\t\t\t       \"library function `%s' declared as non-function\");\n-\n-\t  else if (DECL_BUILT_IN_NONANSI (olddecl))\n-\t    warning_with_decl (newdecl,\n-\t\t\t       \"built-in function `%s' declared as non-function\");\n \t  else\n \t    warning_with_decl (newdecl,\n \t\t\t       \"built-in function `%s' declared as non-function\");"}, {"sha": "bb1230d24b43e34b96417dbc310ff5ace2daf638", "filename": "gcc/print-tree.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=7f685e177ee99a15953f2ffa4292823c8a9b88da", "patch": "@@ -1,6 +1,6 @@\n /* Prints out tree in human readable form - GNU C-compiler\n    Copyright (C) 1990, 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002 Free Software Foundation, Inc.\n+   2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -336,8 +336,6 @@ print_node (file, prefix, node, indent)\n \tfputs (\" inline\", file);\n       if (TREE_CODE (node) == FUNCTION_DECL && DECL_BUILT_IN (node))\n \tfputs (\" built-in\", file);\n-      if (TREE_CODE (node) == FUNCTION_DECL && DECL_BUILT_IN_NONANSI (node))\n-\tfputs (\" built-in-nonansi\", file);\n       if (TREE_CODE (node) == FUNCTION_DECL && DECL_NO_STATIC_CHAIN (node))\n \tfputs (\" no-static-chain\", file);\n "}, {"sha": "c72e3d022c611f72b3e8dec4c014ef38a264e4c2", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f685e177ee99a15953f2ffa4292823c8a9b88da/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=7f685e177ee99a15953f2ffa4292823c8a9b88da", "patch": "@@ -236,8 +236,6 @@ struct tree_common GTY(())\n \n        TREE_UNSIGNED in\n            INTEGER_TYPE, ENUMERAL_TYPE, FIELD_DECL\n-       DECL_BUILT_IN_NONANSI in\n-           FUNCTION_DECL\n        SAVE_EXPR_NOPLACEHOLDER in\n \t   SAVE_EXPR\n \n@@ -635,8 +633,7 @@ extern void tree_operand_check_failed PARAMS ((int, enum tree_code,\n #define TREE_CONSTANT(NODE) ((NODE)->common.constant_flag)\n \n /* In INTEGER_TYPE or ENUMERAL_TYPE nodes, means an unsigned type.\n-   In FIELD_DECL nodes, means an unsigned bit field.\n-   The same bit is used in functions as DECL_BUILT_IN_NONANSI.  */\n+   In FIELD_DECL nodes, means an unsigned bit field.  */\n #define TREE_UNSIGNED(NODE) ((NODE)->common.unsigned_flag)\n \n #define TYPE_TRAP_SIGNED(NODE) \\\n@@ -1687,12 +1684,6 @@ struct tree_type GTY(())\n /* List of FUNCTION_DECLs inlined into this function's body.  */\n #define DECL_INLINED_FNS(NODE) (FUNCTION_DECL_CHECK (NODE)->decl.inlined_fns)\n \n-/* Nonzero in a FUNCTION_DECL means this is a built-in function\n-   that is not specified by ansi C and that users are supposed to be allowed\n-   to redefine for any purpose whatever.  */\n-#define DECL_BUILT_IN_NONANSI(NODE) \\\n-  (FUNCTION_DECL_CHECK (NODE)->common.unsigned_flag)\n-\n /* Nonzero in a FUNCTION_DECL means this function should be treated\n    as if it were a malloc, meaning it returns a pointer that is\n    not an alias.  */"}]}