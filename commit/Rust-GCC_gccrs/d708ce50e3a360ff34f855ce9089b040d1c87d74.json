{"sha": "d708ce50e3a360ff34f855ce9089b040d1c87d74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcwOGNlNTBlM2EzNjBmZjM0Zjg1NWNlOTA4OWIwNDBkMWM4N2Q3NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-04-19T16:47:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-04-19T16:47:06Z"}, "message": "re PR target/48678 (unable to find a register to spill in class \u2018GENERAL_REGS\u2019)\n\n\tPR target/48678\n\t* config/i386/i386.md (movstrict<mode>): FAIL if operands[0]\n\tis a SUBREG with non-MODE_INT mode inside of it.\n\n\t* gcc.target/i386/pr48678.c: New test.\n\nFrom-SVN: r172721", "tree": {"sha": "ae49eaf183bfd32240b0075032f1c0521764b890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae49eaf183bfd32240b0075032f1c0521764b890"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d708ce50e3a360ff34f855ce9089b040d1c87d74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d708ce50e3a360ff34f855ce9089b040d1c87d74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d708ce50e3a360ff34f855ce9089b040d1c87d74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d708ce50e3a360ff34f855ce9089b040d1c87d74/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49c471e3d8e5a505b20672f7029d07bb828cbe1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c471e3d8e5a505b20672f7029d07bb828cbe1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c471e3d8e5a505b20672f7029d07bb828cbe1b"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "959d07b80084e2ae9a5ce9e69370fa5eca27ca57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d708ce50e3a360ff34f855ce9089b040d1c87d74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d708ce50e3a360ff34f855ce9089b040d1c87d74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d708ce50e3a360ff34f855ce9089b040d1c87d74", "patch": "@@ -1,3 +1,9 @@\n+2011-04-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/48678\n+\t* config/i386/i386.md (movstrict<mode>): FAIL if operands[0]\n+\tis a SUBREG with non-MODE_INT mode inside of it.\n+\n 2011-04-19  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (ipcp_process_devirtualization_opportunities): Devirtualize"}, {"sha": "38bdcd30c100d270dff2f1e5fc3c5148cd305f22", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d708ce50e3a360ff34f855ce9089b040d1c87d74/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d708ce50e3a360ff34f855ce9089b040d1c87d74/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d708ce50e3a360ff34f855ce9089b040d1c87d74", "patch": "@@ -2425,6 +2425,9 @@\n {\n   if (TARGET_PARTIAL_REG_STALL && optimize_function_for_speed_p (cfun))\n     FAIL;\n+  if (GET_CODE (operands[0]) == SUBREG\n+      && GET_MODE_CLASS (GET_MODE (SUBREG_REG (operands[0]))) != MODE_INT)\n+    FAIL;\n   /* Don't generate memory->memory moves, go through a register */\n   if (MEM_P (operands[0]) && MEM_P (operands[1]))\n     operands[1] = force_reg (<MODE>mode, operands[1]);"}, {"sha": "0d47ecfb65d8875314698b2920fc822c9b720591", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d708ce50e3a360ff34f855ce9089b040d1c87d74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d708ce50e3a360ff34f855ce9089b040d1c87d74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d708ce50e3a360ff34f855ce9089b040d1c87d74", "patch": "@@ -1,3 +1,8 @@\n+2011-04-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/48678\n+\t* gcc.target/i386/pr48678.c: New test.\n+\n 2011-04-19  Martin Jambor  <mjambor@suse.cz>\n \n \t* g++.dg/opt/devirt1.C: Bump to -O2, remove XFAIL."}, {"sha": "6f6727fffa2a6beb437ce3302e028a3aee3d0b02", "filename": "gcc/testsuite/gcc.target/i386/pr48678.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d708ce50e3a360ff34f855ce9089b040d1c87d74/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48678.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d708ce50e3a360ff34f855ce9089b040d1c87d74/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48678.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr48678.c?ref=d708ce50e3a360ff34f855ce9089b040d1c87d74", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/48678 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+#include <emmintrin.h>\n+\n+typedef short T __attribute__((may_alias));\n+struct S { __m128i d; };\n+\n+__m128i\n+foo (short *x, struct S *y, __m128i *z)\n+{\n+  struct S s = *y;\n+  ((T *) &s.d)[0] = *x;\n+  return _mm_cmpeq_epi16 (s.d, *z);\n+}"}]}