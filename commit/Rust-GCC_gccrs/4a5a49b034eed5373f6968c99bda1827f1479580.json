{"sha": "4a5a49b034eed5373f6968c99bda1827f1479580", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1YTQ5YjAzNGVlZDUzNzNmNjk2OGM5OWJkYTE4MjdmMTQ3OTU4MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-15T17:45:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-15T17:45:01Z"}, "message": "re PR c++/84222 ([[deprecated]] class complains about internal class usage)\n\n\tPR c++/84222\n\t* cp-tree.h (cp_warn_deprecated_use): Declare.\n\t* tree.c (cp_warn_deprecated_use): New function.\n\t* typeck2.c (build_functional_cast): Use it.\n\t* decl.c (grokparms): Likewise.\n\t(grokdeclarator): Likewise.  Temporarily push nested class scope\n\taround grokparms call for out of class member definitions.\n\n\t* g++.dg/warn/deprecated.C (T::member3): Change dg-warning to dg-bogus.\n\t* g++.dg/warn/deprecated-6.C (T::member3): Likewise.\n\t* g++.dg/warn/deprecated-13.C: New test.\n\nFrom-SVN: r258568", "tree": {"sha": "64ed6c965d42cd863935b6a8afd5a6cb716764fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64ed6c965d42cd863935b6a8afd5a6cb716764fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a5a49b034eed5373f6968c99bda1827f1479580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5a49b034eed5373f6968c99bda1827f1479580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5a49b034eed5373f6968c99bda1827f1479580", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5a49b034eed5373f6968c99bda1827f1479580/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8bb2726d08ae3dd89c7085a7972b5a144ccea270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb2726d08ae3dd89c7085a7972b5a144ccea270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bb2726d08ae3dd89c7085a7972b5a144ccea270"}], "stats": {"total": 103, "additions": 93, "deletions": 10}, "files": [{"sha": "a4f845a061b008070d038706b7d32d9e15a57581", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -1,3 +1,13 @@\n+2018-03-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/84222\n+\t* cp-tree.h (cp_warn_deprecated_use): Declare.\n+\t* tree.c (cp_warn_deprecated_use): New function.\n+\t* typeck2.c (build_functional_cast): Use it.\n+\t* decl.c (grokparms): Likewise.\n+\t(grokdeclarator): Likewise.  Temporarily push nested class scope\n+\taround grokparms call for out of class member definitions.\n+\n 2018-03-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/84820 - no error for invalid qualified-id."}, {"sha": "99c51a89092242412d92a8d5566ea1164c71cffa", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -7064,6 +7064,7 @@ extern tree cxx_copy_lang_qualifiers\t\t(const_tree, const_tree);\n \n extern void cxx_print_statistics\t\t(void);\n extern bool maybe_warn_zero_as_null_pointer_constant (tree, location_t);\n+extern void cp_warn_deprecated_use\t\t(tree);\n \n /* in ptree.c */\n extern void cxx_print_xnode\t\t\t(FILE *, tree, int);"}, {"sha": "98f762e5253b6f8549fd004906294a8fb6c89e12", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -10448,15 +10448,15 @@ grokdeclarator (const cp_declarator *declarator,\n      suppress reports of deprecated items.  */\n   if (type && TREE_DEPRECATED (type)\n       && deprecated_state != DEPRECATED_SUPPRESS)\n-    warn_deprecated_use (type, NULL_TREE);\n+    cp_warn_deprecated_use (type);\n   if (type && TREE_CODE (type) == TYPE_DECL)\n     {\n       typedef_decl = type;\n       type = TREE_TYPE (typedef_decl);\n       if (TREE_DEPRECATED (type)\n \t  && DECL_ARTIFICIAL (typedef_decl)\n \t  && deprecated_state != DEPRECATED_SUPPRESS)\n-\twarn_deprecated_use (type, NULL_TREE);\n+\tcp_warn_deprecated_use (type);\n     }\n   /* No type at all: default to `int', and set DEFAULTED_INT\n      because it was not a user-defined typedef.  */\n@@ -11271,8 +11271,18 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t  explicitp = 2;\n \t      }\n \n-\t    arg_types = grokparms (declarator->u.function.parameters,\n-\t\t\t\t   &parms);\n+\t    tree pushed_scope = NULL_TREE;\n+\t    if (funcdecl_p\n+\t\t&& decl_context != FIELD\n+\t\t&& inner_declarator->u.id.qualifying_scope\n+\t\t&& CLASS_TYPE_P (inner_declarator->u.id.qualifying_scope))\n+\t      pushed_scope\n+\t\t= push_scope (inner_declarator->u.id.qualifying_scope);\n+\n+\t    arg_types = grokparms (declarator->u.function.parameters, &parms);\n+\n+\t    if (pushed_scope)\n+\t      pop_scope (pushed_scope);\n \n \t    if (inner_declarator\n \t\t&& inner_declarator->kind == cdk_id\n@@ -12799,7 +12809,7 @@ grokparms (tree parmlist, tree *parms)\n \t    {\n \t      tree deptype = type_is_deprecated (type);\n \t      if (deptype)\n-\t\twarn_deprecated_use (deptype, NULL_TREE);\n+\t\tcp_warn_deprecated_use (deptype);\n \t    }\n \n \t  /* Top-level qualifiers on the parameters are"}, {"sha": "c2299baf52735e5683500f11e388fc3f35628d63", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -5347,6 +5347,19 @@ cp_tree_code_length (enum tree_code code)\n     }\n }\n \n+/* Wrapper around warn_deprecated_use that doesn't warn for\n+   current_class_type.  */\n+\n+void\n+cp_warn_deprecated_use (tree node)\n+{\n+  if (TYPE_P (node)\n+      && current_class_type\n+      && TYPE_MAIN_VARIANT (node) == current_class_type)\n+    return;\n+  warn_deprecated_use (node, NULL_TREE);\n+}\n+\n /* Implement -Wzero_as_null_pointer_constant.  Return true if the\n    conditions for the warning hold, false otherwise.  */\n bool"}, {"sha": "2df51a543cffe61e924f48b63df297ffffe55bb0", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -2057,7 +2057,7 @@ build_functional_cast (tree exp, tree parms, tsubst_flags_t complain)\n       if (complain & tf_warning\n \t  && TREE_DEPRECATED (type)\n \t  && DECL_ARTIFICIAL (exp))\n-\twarn_deprecated_use (type, NULL_TREE);\n+\tcp_warn_deprecated_use (type);\n     }\n   else\n     type = exp;"}, {"sha": "56d931727b582640202c4bd197dd8a0fe27fdc9c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -1,3 +1,10 @@\n+2018-03-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/84222\n+\t* g++.dg/warn/deprecated.C (T::member3): Change dg-warning to dg-bogus.\n+\t* g++.dg/warn/deprecated-6.C (T::member3): Likewise.\n+\t* g++.dg/warn/deprecated-13.C: New test.\n+\n 2018-03-15  Olga Makhotina  <olga.makhotina@intel.com>\n \n \t* gcc.target/i386/sgx.c (_enclv_u32): Test new intrinsic."}, {"sha": "ef05b95f026558599e7c1582ee1ca1fc95bdcc50", "filename": "gcc/testsuite/g++.dg/warn/deprecated-13.C", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-13.C?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -0,0 +1,44 @@\n+// PR c++/84222\n+// { dg-do compile }\n+\n+struct __attribute__((deprecated)) C {\t\t// { dg-message \"declared here\" }\n+  C () {}\n+  C (const C &);\t\t\t\t// { dg-bogus \"'C' is deprecated\" }\n+  C (const C &x, const C &y) { C z = x; }\t// { dg-bogus \"'C' is deprecated\" }\n+  void foo (const C &x, const C &y);\t\t// { dg-bogus \"'C' is deprecated\" }\n+};\n+\n+void\n+C::foo (const C &x, const C &y)\t\t\t// { dg-bogus \"'C' is deprecated\" }\n+{\n+  C z = x;\t\t\t\t\t// { dg-bogus \"'C' is deprecated\" }\n+}\n+\n+void\n+bar (const C &x, const C &y)\t\t\t// { dg-warning \"'C' is deprecated\" }\n+{\n+  C z = x;\t\t\t\t\t// { dg-warning \"'C' is deprecated\" }\n+}\n+\n+template <int N>\n+struct __attribute__((deprecated)) D {\t\t// { dg-message \"declared here\" }\n+  D () {}\n+  D (const D &);\t\t\t\t// { dg-bogus \"is deprecated\" }\n+  D (const D &x, const D &y) { D z = x; }\t// { dg-bogus \"is deprecated\" }\n+  void foo (const D &x, const D &y);\t\t// { dg-bogus \"is deprecated\" }\n+};\n+\n+template <int N>\n+void\n+D<N>::foo\t\t\t\t\t// { dg-bogus \"is deprecated\" \"\" { xfail *-*-* } }\n+(const D &x, const D &y)\t\t\t// { dg-bogus \"is deprecated\" }\n+{\n+  D z = x;\t\t\t\t\t// { dg-bogus \"is deprecated\" }\n+}\n+\n+template <int N>\n+void\n+bar (const D<N> &x, const D<N> &y)\t\t// { dg-warning \"is deprecated\" }\n+{\n+  D<N> z = x;\t\t\t\t\t// { dg-warning \"is deprecated\" }\n+}"}, {"sha": "b3c390be3858e78367eb0246b5f285cda48a6e14", "filename": "gcc/testsuite/g++.dg/warn/deprecated-6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated-6.C?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -98,7 +98,7 @@ T *p3;\t\t\t\t// { dg-warning \"'T' is deprecated: Please avoid T\" }\n \n inline void T::member1(int) {}\n \n-int T::member3(T *p)\t\t// { dg-warning \"'T' is deprecated: Please avoid T\" }\n+int T::member3(T *p)\t\t// { dg-bogus \"'T' is deprecated: Please avoid T\" }\n {\n   p->member1(1);\t\t\t/* { dg-warning \"'void T::member1\\\\(int\\\\)' is deprecated: Please avoid member1\" } */\n   (*p).member1(2);\t\t\t/* { dg-warning \"'void T::member1\\\\(int\\\\)' is deprecated: Please avoid member1\" } */"}, {"sha": "c5ccbf3271fdde882f9a530e37743a667b750b5c", "filename": "gcc/testsuite/g++.dg/warn/deprecated.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a49b034eed5373f6968c99bda1827f1479580/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C?ref=4a5a49b034eed5373f6968c99bda1827f1479580", "patch": "@@ -102,7 +102,7 @@ T *p3;\t\t\t\t// { dg-warning \"'T' is deprecated\" }\n \n inline void T::member1(int) {}\n \n-int T::member3(T *p)\t\t// { dg-warning \"'T' is deprecated\" }\n+int T::member3(T *p)\t\t// { dg-bogus \"'T' is deprecated\" }\n {\n   p->member1(1);\t\t\t/* { dg-warning \"'void T::member1\\\\(int\\\\)' is deprecated\" } */\n   (*p).member1(2);\t\t\t/* { dg-warning \"'void T::member1\\\\(int\\\\)' is deprecated\" } */\n@@ -113,5 +113,3 @@ int T::member3(T *p)\t\t// { dg-warning \"'T' is deprecated\" }\n   return f1(); \t\t\t\t/* { dg-warning \"'INT1 f1\\\\(\\\\)' is deprecated\" } */\n }\n #endif\n-\n-"}]}