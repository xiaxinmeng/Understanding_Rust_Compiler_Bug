{"sha": "8169f835031895d1e30d2457df02360131eb8572", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE2OWY4MzUwMzE4OTVkMWUzMGQyNDU3ZGYwMjM2MDEzMWViODU3Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-08T00:32:52Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-08T00:32:52Z"}, "message": "Initial revision\n\nFrom-SVN: r1507", "tree": {"sha": "41672e0892fb85c6b9f257c001da02b6a857dd81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41672e0892fb85c6b9f257c001da02b6a857dd81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8169f835031895d1e30d2457df02360131eb8572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8169f835031895d1e30d2457df02360131eb8572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8169f835031895d1e30d2457df02360131eb8572", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8169f835031895d1e30d2457df02360131eb8572/comments", "author": null, "committer": null, "parents": [{"sha": "258d13563c91c8060842d88224ca1fca9fe58ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258d13563c91c8060842d88224ca1fca9fe58ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/258d13563c91c8060842d88224ca1fca9fe58ef1"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "f1092577936c997ffba690867d0966d06947904f", "filename": "gcc/config/m68k/x-dpx2", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8169f835031895d1e30d2457df02360131eb8572/gcc%2Fconfig%2Fm68k%2Fx-dpx2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8169f835031895d1e30d2457df02360131eb8572/gcc%2Fconfig%2Fm68k%2Fx-dpx2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-dpx2?ref=8169f835031895d1e30d2457df02360131eb8572", "patch": "@@ -0,0 +1,15 @@\n+# need this when using cc\n+ALLOCA = alloca.o\n+# avoid lossage assembling alloca.\n+ALLOCA_FLAGS=-S\n+ALLOCA_FINISH = $(AS) -o alloca.o alloca.s\n+# be sure not to confuse ./as with /bin/as\n+AS=`if [ x$(OLDCC) = x$(CC) ] ; then echo /bin/as; else echo gas; fi`\n+#\n+# as of gcc-2.2.1 gcc -g produces too many .stabd's for /bin/ld\n+# to link cc1plus, so use -g with /bin/cc, but -O with gcc\n+CFLAGS=`if [ x$(OLDCC) = x$(CC) ] ; then echo -g; else echo -O; fi`\n+#\n+CLIB=-lc_s -lld -lm\n+# tell CC whether we are a 200 or 300\n+X_CFLAGS=-D_SYSV -D__DPX2__ `if [ -d /makesys/kernel/cf/ncl_mr ]; then echo -Dncl_mr=1; else echo -Dncl_el; fi`"}]}