{"sha": "b5c8da6bac845e685236eeedc02f0814c05ed42f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVjOGRhNmJhYzg0NWU2ODUyMzZlZWVkYzAyZjA4MTRjMDVlZDQyZg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-03T08:14:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-03T08:14:43Z"}, "message": "[Ada] Minor reformatting\n\n2019-07-03  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* bindgen.adb, inline.adb, layout.adb, sem_ch12.adb,\n\tsem_ch13.adb, sem_ch7.adb, styleg.adb: Minor reformatting.\n\nFrom-SVN: r272973", "tree": {"sha": "a092ccbb99ba45e9d08af7fdc8a5c720eb75f418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a092ccbb99ba45e9d08af7fdc8a5c720eb75f418"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5c8da6bac845e685236eeedc02f0814c05ed42f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c8da6bac845e685236eeedc02f0814c05ed42f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c8da6bac845e685236eeedc02f0814c05ed42f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c8da6bac845e685236eeedc02f0814c05ed42f/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4487c3be84e0b892aeb61f30435638c6d94a8ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4487c3be84e0b892aeb61f30435638c6d94a8ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4487c3be84e0b892aeb61f30435638c6d94a8ab"}], "stats": {"total": 80, "additions": 45, "deletions": 35}, "files": [{"sha": "7879ba2215c4ec2c7b0ac023b6a68a8200bb3507", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b5c8da6bac845e685236eeedc02f0814c05ed42f", "patch": "@@ -1,3 +1,8 @@\n+2019-07-03  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* bindgen.adb, inline.adb, layout.adb, sem_ch12.adb,\n+\tsem_ch13.adb, sem_ch7.adb, styleg.adb: Minor reformatting.\n+\n 2019-07-03  Bob Duff  <duff@adacore.com>\n \n \t* par-ch3.adb (P_Defining_Identifier): Call"}, {"sha": "5cc3ea2d9af00332a5d75b24e9b75e946193522b", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=b5c8da6bac845e685236eeedc02f0814c05ed42f", "patch": "@@ -1811,7 +1811,7 @@ package body Bindgen is\n       --  with a pragma Volatile in order to tell the compiler to preserve\n       --  this variable at any level of optimization.\n \n-      --  CodePeer and CCG do not need this extra code on the other hand.\n+      --  CodePeer and CCG do not need this extra code on the other hand\n \n       if Bind_Main_Program\n         and then not CodePeer_Mode"}, {"sha": "8672105f1e9643db73f0caba24459df56ea73c62", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=b5c8da6bac845e685236eeedc02f0814c05ed42f", "patch": "@@ -2381,16 +2381,16 @@ package body Inline is\n       --  When generating C code, declare _Result, which may be used in the\n       --  inlined _Postconditions procedure to verify the return value.\n \n-      procedure Make_Loop_Labels_Unique (Stats : Node_Id);\n-      --  When compiling for CCG and performing front-end inlining, replace\n-      --  loop names and references to them so that they do not conflict\n-      --  with homographs in the current subprogram.\n-\n       procedure Make_Exit_Label;\n       --  Build declaration for exit label to be used in Return statements,\n       --  sets Exit_Lab (the label node) and Lab_Decl (corresponding implicit\n       --  declaration). Does nothing if Exit_Lab already set.\n \n+      procedure Make_Loop_Labels_Unique (HSS : Node_Id);\n+      --  When compiling for CCG and performing front-end inlining, replace\n+      --  loop names and references to them so that they do not conflict with\n+      --  homographs in the current subprogram.\n+\n       function Process_Formals (N : Node_Id) return Traverse_Result;\n       --  Replace occurrence of a formal with the corresponding actual, or the\n       --  thunk generated for it. Replace a return statement with an assignment\n@@ -2483,9 +2483,7 @@ package body Inline is\n       -- Make_Loop_Labels_Unique --\n       -----------------------------\n \n-      procedure Make_Loop_Labels_Unique (Stats : Node_Id) is\n-         S : Node_Id;\n-\n+      procedure Make_Loop_Labels_Unique (HSS : Node_Id) is\n          function Process_Loop (N : Node_Id) return Traverse_Result;\n \n          ------------------\n@@ -2499,8 +2497,7 @@ package body Inline is\n             if Nkind (N) = N_Loop_Statement\n               and then Present (Identifier (N))\n             then\n-\n-               --  Create new external name for loop. and update the\n+               --  Create new external name for loop and update the\n                --  corresponding entity.\n \n                Id := Entity (Identifier (N));\n@@ -2510,9 +2507,8 @@ package body Inline is\n             elsif Nkind (N) = N_Exit_Statement\n               and then Present (Name (N))\n             then\n-\n-               --  The exit statement must name an enclosing loop, whose\n-               --  name has already been updated.\n+               --  The exit statement must name an enclosing loop, whose name\n+               --  has already been updated.\n \n                Set_Chars (Name (N), Chars (Entity (Name (N))));\n             end if;\n@@ -2522,12 +2518,18 @@ package body Inline is\n \n          procedure Update_Loop_Names is new Traverse_Proc (Process_Loop);\n \n+         --  Local variables\n+\n+         Stmt : Node_Id;\n+\n+      --  Start of processing for Make_Loop_Labels_Unique\n+\n       begin\n          if Modify_Tree_For_C then\n-            S := First (Statements (Stats));\n-            while Present (S) loop\n-               Update_Loop_Names (S);\n-               Next (S);\n+            Stmt := First (Statements (HSS));\n+            while Present (Stmt) loop\n+               Update_Loop_Names (Stmt);\n+               Next (Stmt);\n             end loop;\n          end if;\n       end Make_Loop_Labels_Unique;"}, {"sha": "f8e909935cf40e43f4f179e559ee803b381e2596", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=b5c8da6bac845e685236eeedc02f0814c05ed42f", "patch": "@@ -463,7 +463,7 @@ package body Layout is\n                  and then Known_Static_Esize (CT)\n                  and then not (Known_Alignment (CT)\n                                 and then Alignment_In_Bits (CT) >\n-                                              Standard_Long_Long_Integer_Size)\n+                                           Standard_Long_Long_Integer_Size)\n                then\n                   declare\n                      S : constant Uint := Esize (CT);"}, {"sha": "24273645fa239f41d952b5b01f81dc1726621127", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b5c8da6bac845e685236eeedc02f0814c05ed42f", "patch": "@@ -6198,8 +6198,8 @@ package body Sem_Ch12 is\n       function Is_Defaulted (Param : Entity_Id) return Boolean;\n       --  If the formql package has partly box-initialized formals, skip\n       --  conformace check for these formals. Previously the code assumed\n-      --  that boc initialization for a formal package applied to all\n-      --  its formal parameters.\n+      --  that boc initialization for a formal package applied to all its\n+      --  formal parameters.\n \n       function Same_Instantiated_Constant (E1, E2 : Entity_Id) return Boolean;\n       --  The formal may come from a nested formal package, and the actual may\n@@ -6257,9 +6257,11 @@ package body Sem_Ch12 is\n \n       function Is_Defaulted (Param : Entity_Id) return Boolean is\n          Assoc : Node_Id;\n+\n       begin\n-         Assoc := First (Generic_Associations\n-                     (Parent (Associated_Formal_Package (Actual_Pack))));\n+         Assoc :=\n+            First (Generic_Associations (Parent\n+              (Associated_Formal_Package (Actual_Pack))));\n \n          while Present (Assoc) loop\n             if Nkind (Assoc) = N_Others_Choice then"}, {"sha": "234177f556f1c7a2d7d6513ea7e7e68b6b3c2743", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=b5c8da6bac845e685236eeedc02f0814c05ed42f", "patch": "@@ -9328,8 +9328,8 @@ package body Sem_Ch13 is\n          Analyze (End_Decl_Expr);\n          Set_Is_Frozen (Ent, True);\n \n-         --  If the end of declarations comes before any other freeze\n-         --  point, the Freeze_Expr is not analyzed: no check needed.\n+         --  If the end of declarations comes before any other freeze point,\n+         --  the Freeze_Expr is not analyzed: no check needed.\n \n          if Analyzed (Freeze_Expr) and then not In_Instance then\n             Check_Overloaded_Name;\n@@ -9340,13 +9340,10 @@ package body Sem_Ch13 is\n       --  All other cases\n \n       else\n+         --  In a generic context freeze nodes are not always generated, so\n+         --  analyze the expression now.\n \n-         --  In a generic context freeze nodes are not always generated,\n-         --  so analyze the expression now.\n-\n-         if not Analyzed (Freeze_Expr)\n-           and then Inside_A_Generic\n-         then\n+         if not Analyzed (Freeze_Expr) and then Inside_A_Generic then\n             Preanalyze (Freeze_Expr);\n          end if;\n "}, {"sha": "6f5126ea2241d77e8ca2866730086fe31e835024", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=b5c8da6bac845e685236eeedc02f0814c05ed42f", "patch": "@@ -401,7 +401,7 @@ package body Sem_Ch7 is\n \n                      if not Generate_C_Code\n                        and then (Is_Inlined (Decl_Id)\n-                                 or else Has_Pragma_Inline (Decl_Id))\n+                                  or else Has_Pragma_Inline (Decl_Id))\n                      then\n                         Has_Referencer_Of_Non_Subprograms := True;\n \n@@ -423,7 +423,7 @@ package body Sem_Ch7 is\n \n                      if not Generate_C_Code\n                        and then (Is_Inlined (Decl_Id)\n-                                 or else Has_Pragma_Inline (Decl_Id))\n+                                  or else Has_Pragma_Inline (Decl_Id))\n                      then\n                         Has_Referencer_Of_Non_Subprograms := True;\n "}, {"sha": "375664b2898421d7ca03428ac40f23145fbbaf7b", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c8da6bac845e685236eeedc02f0814c05ed42f/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=b5c8da6bac845e685236eeedc02f0814c05ed42f", "patch": "@@ -618,14 +618,18 @@ package body Styleg is\n    begin\n       if Style_Check_Mixed_Case_Decls then\n          case Determine_Token_Casing is\n-            when All_Upper_Case | All_Lower_Case =>\n+            when All_Lower_Case\n+               | All_Upper_Case\n+            =>\n                Error_Msg_SC -- CODEFIX\n                  (\"(style) bad capitalization, mixed case required\");\n \n             --  The Unknown case is something like A_B_C, which is both all\n             --  caps and mixed case.\n \n-            when Mixed_Case | Unknown =>\n+            when Mixed_Case\n+               | Unknown\n+            =>\n                null; -- OK\n          end case;\n       end if;"}]}