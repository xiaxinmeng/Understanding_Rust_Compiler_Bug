{"sha": "58633be8f39bef7d2ee7f85f62e72b24c5885e4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2MzNiZThmMzliZWY3ZDJlZTdmODVmNjJlNzJiMjRjNTg4NWU0Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-02T20:14:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-02T20:14:18Z"}, "message": "(const_binop, COMPLEX_TYPE, case RDIV_EXPR): If complex integer, use\nTRUNC_DIV_EXPR for inner division.\n\nFrom-SVN: r6468", "tree": {"sha": "6e31914c2598d6e778b5250c0683cb3e32aa97d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e31914c2598d6e778b5250c0683cb3e32aa97d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58633be8f39bef7d2ee7f85f62e72b24c5885e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58633be8f39bef7d2ee7f85f62e72b24c5885e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58633be8f39bef7d2ee7f85f62e72b24c5885e4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58633be8f39bef7d2ee7f85f62e72b24c5885e4c/comments", "author": null, "committer": null, "parents": [{"sha": "75ddf8b0d235e6ee35ab1759f519e1bbc052e142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ddf8b0d235e6ee35ab1759f519e1bbc052e142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ddf8b0d235e6ee35ab1759f519e1bbc052e142"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "600bbfa728ee85e6845b740ae491ddaee1a98ee3", "filename": "gcc/fold-const.c", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58633be8f39bef7d2ee7f85f62e72b24c5885e4c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58633be8f39bef7d2ee7f85f62e72b24c5885e4c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=58633be8f39bef7d2ee7f85f62e72b24c5885e4c", "patch": "@@ -1433,18 +1433,26 @@ const_binop (code, arg1, arg2, notrunc)\n \t\t\t     const_binop (MULT_EXPR, r2, r2, notrunc),\n \t\t\t     const_binop (MULT_EXPR, i2, i2, notrunc),\n \t\t\t     notrunc);\n-\t    t = build_complex (const_binop (RDIV_EXPR,\n-\t\t\t\t\t    const_binop (PLUS_EXPR,\n-\t\t\t\t\t\t\t const_binop (MULT_EXPR, r1, r2, notrunc),\n-\t\t\t\t\t\t\t const_binop (MULT_EXPR, i1, i2, notrunc),\n-\t\t\t\t\t\t\t notrunc),\n-\t\t\t\t\t    magsquared, notrunc),\n-\t\t\t       const_binop (RDIV_EXPR,\n-\t\t\t\t\t    const_binop (MINUS_EXPR,\n-\t\t\t\t\t\t\t const_binop (MULT_EXPR, i1, r2, notrunc),\n-\t\t\t\t\t\t\t const_binop (MULT_EXPR, r1, i2, notrunc),\n-\t\t\t\t\t\t\t notrunc),\n-\t\t\t\t\t    magsquared, notrunc));\n+\n+\t    t = build_complex\n+\t      (const_binop (INTEGRAL_TYPE_P (TREE_TYPE (r1))\n+\t\t\t    ? TRUNC_DIV_EXPR : RDIV_EXPR,\n+\t\t\t    const_binop (PLUS_EXPR,\n+\t\t\t\t\t const_binop (MULT_EXPR, r1, r2,\n+\t\t\t\t\t\t      notrunc),\n+\t\t\t\t\t const_binop (MULT_EXPR, i1, i2,\n+\t\t\t\t\t\t      notrunc),\n+\t\t\t\t\t notrunc),\n+\t\t\t    magsquared, notrunc),\n+\t       const_binop (INTEGRAL_TYPE_P (TREE_TYPE (r1))\n+\t\t\t    ? TRUNC_DIV_EXPR : RDIV_EXPR,\n+\t\t\t    const_binop (MINUS_EXPR,\n+\t\t\t\t\t const_binop (MULT_EXPR, i1, r2,\n+\t\t\t\t\t\t      notrunc),\n+\t\t\t\t\t const_binop (MULT_EXPR, r1, i2,\n+\t\t\t\t\t\t      notrunc),\n+\t\t\t\t\t notrunc),\n+\t\t\t    magsquared, notrunc));\n \t  }\n \t  break;\n "}]}