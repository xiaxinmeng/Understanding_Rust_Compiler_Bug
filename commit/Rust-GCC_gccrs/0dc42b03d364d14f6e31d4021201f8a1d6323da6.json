{"sha": "0dc42b03d364d14f6e31d4021201f8a1d6323da6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRjNDJiMDNkMzY0ZDE0ZjZlMzFkNDAyMTIwMWY4YTFkNjMyM2RhNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-07-25T07:54:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-07-25T07:54:07Z"}, "message": "calls.c (store_one_arg): Check for sibling call MEM arguments from already clobbered incoming argument area.\n\n\t* calls.c (store_one_arg): Check for sibling call MEM arguments\n\tfrom already clobbered incoming argument area.\n\n\t* gcc.c-torture/execute/20050713-1.c: New test.\n\nFrom-SVN: r102350", "tree": {"sha": "a7f628578c0ccef5e4f29a6a9c7f07ba9b4a9bc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7f628578c0ccef5e4f29a6a9c7f07ba9b4a9bc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dc42b03d364d14f6e31d4021201f8a1d6323da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dc42b03d364d14f6e31d4021201f8a1d6323da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dc42b03d364d14f6e31d4021201f8a1d6323da6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dc42b03d364d14f6e31d4021201f8a1d6323da6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31f74accb27dfe58e1926dbbcb0b9d57e55bde42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31f74accb27dfe58e1926dbbcb0b9d57e55bde42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31f74accb27dfe58e1926dbbcb0b9d57e55bde42"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "396314105e979b2735bb6163a7c0ae38d3eacbc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dc42b03d364d14f6e31d4021201f8a1d6323da6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dc42b03d364d14f6e31d4021201f8a1d6323da6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0dc42b03d364d14f6e31d4021201f8a1d6323da6", "patch": "@@ -1,3 +1,8 @@\n+2005-07-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* calls.c (store_one_arg): Check for sibling call MEM arguments\n+\tfrom already clobbered incoming argument area.\n+\n 2005-07-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* c-common.c (check_missing_format_attribute): New."}, {"sha": "ea6eaeb82f77c45934b22b378e05f00717fcd365", "filename": "gcc/calls.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dc42b03d364d14f6e31d4021201f8a1d6323da6/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dc42b03d364d14f6e31d4021201f8a1d6323da6/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=0dc42b03d364d14f6e31d4021201f8a1d6323da6", "patch": "@@ -4076,6 +4076,38 @@ store_one_arg (struct arg_data *arg, rtx argblock, int flags,\n \tstack_arg_under_construction--;\n     }\n \n+  /* Check for overlap with already clobbered argument area.  */\n+  if ((flags & ECF_SIBCALL) && MEM_P (arg->value))\n+    {\n+      int i = -1;\n+      unsigned int k;\n+      rtx x = arg->value;\n+\n+      if (XEXP (x, 0) == current_function_internal_arg_pointer)\n+\ti = 0;\n+      else if (GET_CODE (XEXP (x, 0)) == PLUS\n+\t       && XEXP (XEXP (x, 0), 0) ==\n+\t\t  current_function_internal_arg_pointer\n+\t       && GET_CODE (XEXP (XEXP (x, 0), 1)) == CONST_INT)\n+\ti = INTVAL (XEXP (XEXP (x, 0), 1));\n+      else\n+\ti = -1;\n+\n+      if (i >= 0)\n+\t{\n+#ifdef ARGS_GROW_DOWNWARD\n+\t  i = -i - arg->locate.size.constant;\n+#endif\n+\t  for (k = 0; k < arg->locate.size.constant; k++)\n+\t    if (i + k < stored_args_map->n_bits\n+\t\t&& TEST_BIT (stored_args_map, i + k))\n+\t      {\n+\t\tsibcall_failure = 1;\n+\t\tbreak;\n+\t      }\n+\t}\n+    }\n+\n   /* Don't allow anything left on stack from computation\n      of argument to alloca.  */\n   if (flags & ECF_MAY_BE_ALLOCA)"}, {"sha": "a5d540ca5cb35ccfb0af89d666c35a4ba34453ba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dc42b03d364d14f6e31d4021201f8a1d6323da6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dc42b03d364d14f6e31d4021201f8a1d6323da6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0dc42b03d364d14f6e31d4021201f8a1d6323da6", "patch": "@@ -1,5 +1,7 @@\n 2005-07-25  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.c-torture/execute/20050713-1.c: New test.\n+\n \tPR fortran/20063\n \t* gfortran.fortran-torture/execute/data_4.f90: New test.\n "}, {"sha": "4d669cb8e452c502f7585a0ccb6c20bdd71b4a7a", "filename": "gcc/testsuite/gcc.c-torture/execute/20050713-1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dc42b03d364d14f6e31d4021201f8a1d6323da6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050713-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dc42b03d364d14f6e31d4021201f8a1d6323da6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050713-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050713-1.c?ref=0dc42b03d364d14f6e31d4021201f8a1d6323da6", "patch": "@@ -0,0 +1,56 @@\n+/* Test that sibling call is not used if there is an argument overlap.  */\n+\n+extern void abort (void);\n+\n+struct S\n+{\n+  int a, b, c;\n+};\n+\n+int\n+foo2 (struct S x, struct S y)\n+{\n+  if (x.a != 3 || x.b != 4 || x.c != 5)\n+    abort ();\n+  if (y.a != 6 || y.b != 7 || y.c != 8)\n+    abort ();\n+  return 0;\n+}\n+\n+int\n+foo3 (struct S x, struct S y, struct S z)\n+{\n+  foo2 (x, y);\n+  if (z.a != 9 || z.b != 10 || z.c != 11)\n+    abort ();\n+  return 0;\n+}\n+\n+int\n+bar2 (struct S x, struct S y)\n+{\n+  return foo2 (y, x);\n+}\n+\n+int\n+bar3 (struct S x, struct S y, struct S z)\n+{\n+  return foo3 (y, x, z);\n+}\n+\n+int\n+baz3 (struct S x, struct S y, struct S z)\n+{\n+  return foo3 (y, z, x);\n+}\n+\n+int\n+main (void)\n+{\n+  struct S a = { 3, 4, 5 }, b = { 6, 7, 8 }, c = { 9, 10, 11 };\n+\n+  bar2 (b, a);\n+  bar3 (b, a, c);\n+  baz3 (c, a, b);\n+  return 0;\n+}"}]}