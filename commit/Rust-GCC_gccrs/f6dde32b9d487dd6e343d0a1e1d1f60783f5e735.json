{"sha": "f6dde32b9d487dd6e343d0a1e1d1f60783f5e735", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkZGUzMmI5ZDQ4N2RkNmUzNDNkMGExZTFkMWY2MDc4M2Y1ZTczNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-07-15T08:17:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-07-15T08:17:06Z"}, "message": "gimplify: Fix endless recursion on volatile empty type reads/writes [PR101437]\n\nAndrew's recent change to optimize away during gimplification not just\nassignments of zero sized types, but also assignments of empty types,\ncaused infinite recursion in the gimplifier.\nIf such assignment is optimized away, we gimplify separately the to_p\nand from_p operands and throw away the result.  When gimplifying the\noperand that is volatile, we run into the gimplifier code below, which has\ndifferent handling for types with non-BLKmode mode, tries to gimplify\nthose as vol.N = expr, and for BLKmode just throws those away.\nZero sized types will always have BLKmode and so are fine, but for the\nnon-BLKmode ones like struct S in the testcase, the vol.N = expr\ngimplification will reach again the gimplify_modify_expr code, see it is\nassignment of empty type and will gimplify again vol.N separately\n(non-volatile, so ok) and expr, on which it will recurse again.\n\nThe following patch breaks that infinite recursion by ignoring bare\nvolatile loads from empty types.\nIf a volatile load or store for aggregates are supposed to be member-wise\nloads or stores, then there are no non-padding members in the empty types that\nshould be copied and so it is probably ok.\n\n2021-07-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/101437\n\t* gimplify.c (gimplify_expr): Throw away volatile reads from empty\n\ttypes even if they have non-BLKmode TYPE_MODE.\n\n\t* gcc.c-torture/compile/pr101437.c: New test.", "tree": {"sha": "6f4e696efc1753282f9320ef0b19b8efe3ea15c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f4e696efc1753282f9320ef0b19b8efe3ea15c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6dde32b9d487dd6e343d0a1e1d1f60783f5e735", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6dde32b9d487dd6e343d0a1e1d1f60783f5e735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6dde32b9d487dd6e343d0a1e1d1f60783f5e735", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6dde32b9d487dd6e343d0a1e1d1f60783f5e735/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd6ca96f5d530e4ee07b65ac8b075119ba5bb035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6ca96f5d530e4ee07b65ac8b075119ba5bb035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6ca96f5d530e4ee07b65ac8b075119ba5bb035"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "93a2121fea18716deb131dd9b48389afc4bdaa78", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6dde32b9d487dd6e343d0a1e1d1f60783f5e735/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6dde32b9d487dd6e343d0a1e1d1f60783f5e735/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=f6dde32b9d487dd6e343d0a1e1d1f60783f5e735", "patch": "@@ -15060,7 +15060,8 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t  *expr_p = NULL;\n \t}\n       else if (COMPLETE_TYPE_P (TREE_TYPE (*expr_p))\n-\t       && TYPE_MODE (TREE_TYPE (*expr_p)) != BLKmode)\n+\t       && TYPE_MODE (TREE_TYPE (*expr_p)) != BLKmode\n+\t       && !is_empty_type (TREE_TYPE (*expr_p)))\n \t{\n \t  /* Historically, the compiler has treated a bare reference\n \t     to a non-BLKmode volatile lvalue as forcing a load.  */"}, {"sha": "96e7df89046b96a03a5eaf8c729ca170fd1ca55a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr101437.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6dde32b9d487dd6e343d0a1e1d1f60783f5e735/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101437.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6dde32b9d487dd6e343d0a1e1d1f60783f5e735/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101437.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr101437.c?ref=f6dde32b9d487dd6e343d0a1e1d1f60783f5e735", "patch": "@@ -0,0 +1,29 @@\n+/* PR middle-end/101437 */\n+\n+struct S { int : 1; };\n+\n+void\n+foo (volatile struct S *p)\n+{\n+  struct S s = {};\n+  *p = s;\n+}\n+\n+void\n+bar (volatile struct S *p)\n+{\n+  *p;\n+}\n+\n+void\n+baz (volatile struct S *p)\n+{\n+  struct S s;\n+  s = *p;\n+}\n+\n+void\n+qux (volatile struct S *p, volatile struct S *q)\n+{\n+  *p = *q;\n+}"}]}