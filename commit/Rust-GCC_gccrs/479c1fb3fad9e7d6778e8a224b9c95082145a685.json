{"sha": "479c1fb3fad9e7d6778e8a224b9c95082145a685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc5YzFmYjNmYWQ5ZTdkNjc3OGU4YTIyNGI5Yzk1MDgyMTQ1YTY4NQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-02-08T16:53:57Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-02-08T16:53:57Z"}, "message": "Fix PRs 46834, 46994, and 46995: only rewrite reductions not containing other computations.\n\n2011-02-08  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR tree-optimization/46834\n\tPR tree-optimization/46994\n\tPR tree-optimization/46995\n\t* graphite-sese-to-poly.c (used_outside_reduction): New.\n\t(detect_commutative_reduction): Call used_outside_reduction.\n\t(rewrite_commutative_reductions_out_of_ssa_close_phi): Call\n\ttranslate_scalar_reduction_to_array only when at least one\n\tloop-phi/close-phi tuple has been detected.\n\n\t* gcc.dg/graphite/id-pr46834.c: New.\n\t* gfortran.dg/graphite/id-pr46994.f90: New.\n\t* gfortran.dg/graphite/id-pr46995.f90: New.\n\nFrom-SVN: r169928", "tree": {"sha": "9d8e10243d26f0ff63a20c95b951b717d1c95917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d8e10243d26f0ff63a20c95b951b717d1c95917"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/479c1fb3fad9e7d6778e8a224b9c95082145a685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479c1fb3fad9e7d6778e8a224b9c95082145a685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479c1fb3fad9e7d6778e8a224b9c95082145a685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479c1fb3fad9e7d6778e8a224b9c95082145a685/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1431a37d18b824f33030779e975f13839e37b61a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1431a37d18b824f33030779e975f13839e37b61a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1431a37d18b824f33030779e975f13839e37b61a"}], "stats": {"total": 118, "additions": 101, "deletions": 17}, "files": [{"sha": "c4f256b54f15c7a64f9b43798905abf2cf6b08bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=479c1fb3fad9e7d6778e8a224b9c95082145a685", "patch": "@@ -1,3 +1,14 @@\n+2011-02-08  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/46834\n+\tPR tree-optimization/46994\n+\tPR tree-optimization/46995\n+\t* graphite-sese-to-poly.c (used_outside_reduction): New.\n+\t(detect_commutative_reduction): Call used_outside_reduction.\n+\t(rewrite_commutative_reductions_out_of_ssa_close_phi): Call\n+\ttranslate_scalar_reduction_to_array only when at least one\n+\tloop-phi/close-phi tuple has been detected.\n+\n 2011-02-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/47639"}, {"sha": "064ded3e2f03f57ab39bf46417aca5b4661b0bcf", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 39, "deletions": 17, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=479c1fb3fad9e7d6778e8a224b9c95082145a685", "patch": "@@ -2898,6 +2898,30 @@ initial_value_for_loop_phi (gimple phi)\n   return NULL_TREE;\n }\n \n+/* Returns true when DEF is used outside the reduction cycle of\n+   LOOP_PHI.  */\n+\n+static bool\n+used_outside_reduction (tree def, gimple loop_phi)\n+{\n+  use_operand_p use_p;\n+  imm_use_iterator imm_iter;\n+  loop_p loop = loop_containing_stmt (loop_phi);\n+\n+  /* In LOOP, DEF should be used only in LOOP_PHI.  */\n+  FOR_EACH_IMM_USE_FAST (use_p, imm_iter, def)\n+    {\n+      gimple stmt = USE_STMT (use_p);\n+\n+      if (stmt != loop_phi\n+\t  && !is_gimple_debug (stmt)\n+\t  && flow_bb_inside_loop_p (loop, gimple_bb (stmt)))\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n /* Detect commutative and associative scalar reductions belonging to\n    the SCOP starting at the loop closed phi node STMT.  Return the phi\n    node of the reduction cycle, or NULL.  */\n@@ -2908,35 +2932,33 @@ detect_commutative_reduction (scop_p scop, gimple stmt, VEC (gimple, heap) **in,\n {\n   if (scalar_close_phi_node_p (stmt))\n     {\n-      tree arg = gimple_phi_arg_def (stmt, 0);\n-      gimple def, loop_phi;\n+      gimple def, loop_phi, phi, close_phi = stmt;\n+      tree init, lhs, arg = gimple_phi_arg_def (close_phi, 0);\n \n       if (TREE_CODE (arg) != SSA_NAME)\n \treturn NULL;\n \n       /* Note that loop close phi nodes should have a single argument\n \t because we translated the representation into a canonical form\n \t before Graphite: see canonicalize_loop_closed_ssa_form.  */\n-      gcc_assert (gimple_phi_num_args (stmt) == 1);\n+      gcc_assert (gimple_phi_num_args (close_phi) == 1);\n \n       def = SSA_NAME_DEF_STMT (arg);\n-      if (!stmt_in_sese_p (def, SCOP_REGION (scop)))\n+      if (!stmt_in_sese_p (def, SCOP_REGION (scop))\n+\t  || !(loop_phi = detect_commutative_reduction (scop, def, in, out)))\n \treturn NULL;\n \n-      loop_phi = detect_commutative_reduction (scop, def, in, out);\n+      lhs = gimple_phi_result (close_phi);\n+      init = initial_value_for_loop_phi (loop_phi);\n+      phi = follow_inital_value_to_phi (init, lhs);\n \n-      if (loop_phi)\n-\t{\n-\t  tree lhs = gimple_phi_result (stmt);\n-\t  tree init = initial_value_for_loop_phi (loop_phi);\n-\t  gimple phi = follow_inital_value_to_phi (init, lhs);\n-\n-\t  VEC_safe_push (gimple, heap, *in, loop_phi);\n-\t  VEC_safe_push (gimple, heap, *out, stmt);\n-\t  return phi;\n-\t}\n-      else\n+      if (phi && (used_outside_reduction (lhs, phi)\n+\t\t  || !has_single_use (gimple_phi_result (phi))))\n \treturn NULL;\n+\n+      VEC_safe_push (gimple, heap, *in, loop_phi);\n+      VEC_safe_push (gimple, heap, *out, close_phi);\n+      return phi;\n     }\n \n   if (gimple_code (stmt) == GIMPLE_ASSIGN)\n@@ -3139,7 +3161,7 @@ rewrite_commutative_reductions_out_of_ssa_close_phi (scop_p scop,\n   VEC (gimple, heap) *out = VEC_alloc (gimple, heap, 10);\n \n   detect_commutative_reduction (scop, close_phi, &in, &out);\n-  res = VEC_length (gimple, in) > 0;\n+  res = VEC_length (gimple, in) > 1;\n   if (res)\n     translate_scalar_reduction_to_array (scop, in, out);\n "}, {"sha": "8ceef886376cdc3dadcaecc74749485d9c3224bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=479c1fb3fad9e7d6778e8a224b9c95082145a685", "patch": "@@ -1,3 +1,12 @@\n+2011-02-08  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/46834\n+\tPR tree-optimization/46994\n+\tPR tree-optimization/46995\n+\t* gcc.dg/graphite/id-pr46834.c: New.\n+\t* gfortran.dg/graphite/id-pr46994.f90: New.\n+\t* gfortran.dg/graphite/id-pr46995.f90: New.\n+\n 2011-02-08  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \tPR middle-end/47646"}, {"sha": "8d89b8e3ca8bce3c0e43ac7c5d384bebf9e352d0", "filename": "gcc/testsuite/gcc.dg/graphite/id-pr46834.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr46834.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr46834.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-pr46834.c?ref=479c1fb3fad9e7d6778e8a224b9c95082145a685", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-O -fgraphite-identity -ffast-math -fno-tree-dce\" } */\n+\n+void foo ()\n+{\n+  int M0[4][4], M3[4] = {};\n+  int i=-1;\n+  int ii, jj;\n+  for (; i; i++)\n+      for (jj = 0; jj < 4; jj++)\n+\tfor (ii = 0; ii < 4; ii++)\n+\t    M3[1] += __builtin_abs (M0[ii][0]);\n+}"}, {"sha": "93eff45fb77d0c710037c88493743ffcee001d38", "filename": "gcc/testsuite/gfortran.dg/graphite/id-pr46994.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr46994.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr46994.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr46994.f90?ref=479c1fb3fad9e7d6778e8a224b9c95082145a685", "patch": "@@ -0,0 +1,14 @@\n+! { dg-options \"-O -ffast-math -fgraphite-identity -fno-tree-dce\" }\n+\n+subroutine foo (m)\n+  integer :: m, i, j, k\n+  real :: s\n+  s = 0\n+  do i = 1, 9\n+    do j = 1, 2*m\n+      do k = 1, 2*m\n+        s = s + 1\n+      end do\n+    end do\n+  end do\n+end subroutine foo"}, {"sha": "06cbfd364e89e18ba9cd0c9338b4c197f249b794", "filename": "gcc/testsuite/gfortran.dg/graphite/id-pr46995.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr46995.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479c1fb3fad9e7d6778e8a224b9c95082145a685/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr46995.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-pr46995.f90?ref=479c1fb3fad9e7d6778e8a224b9c95082145a685", "patch": "@@ -0,0 +1,16 @@\n+! { dg-options \"-O -ffast-math -fgraphite-identity -fno-tree-dce\" }\n+\n+subroutine foo (m, l, zw)\n+  integer :: m, i, j, k\n+  real, dimension(1:9) :: zw\n+  real :: l, s\n+  s = 0\n+  do i = 1, 9\n+    do j = 1, 2*m\n+      do k = 1, 2*m\n+        s = s + 1\n+      end do\n+    end do\n+    l = l + zw(i)*s\n+  end do\n+end subroutine foo"}]}