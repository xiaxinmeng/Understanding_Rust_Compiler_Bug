{"sha": "f7856bbc82a9a321fba2ec0f475776ef03fcbbff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4NTZiYmM4MmE5YTMyMWZiYTJlYzBmNDc1Nzc2ZWYwM2ZjYmJmZg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-06-04T14:02:51Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-06-04T14:02:51Z"}, "message": "Touch up solaris port\n\nFrom-SVN: r12152", "tree": {"sha": "e75050de6e944951e715943831c6c526f686136e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e75050de6e944951e715943831c6c526f686136e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7856bbc82a9a321fba2ec0f475776ef03fcbbff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7856bbc82a9a321fba2ec0f475776ef03fcbbff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7856bbc82a9a321fba2ec0f475776ef03fcbbff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7856bbc82a9a321fba2ec0f475776ef03fcbbff/comments", "author": null, "committer": null, "parents": [{"sha": "27779754381e69885acc39427dad9e354064fc55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27779754381e69885acc39427dad9e354064fc55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27779754381e69885acc39427dad9e354064fc55"}], "stats": {"total": 96, "additions": 77, "deletions": 19}, "files": [{"sha": "8f88c0b2ce4436da2b8fbe834c972ab88921f431", "filename": "gcc/config/rs6000/sol2.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7856bbc82a9a321fba2ec0f475776ef03fcbbff/gcc%2Fconfig%2Frs6000%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7856bbc82a9a321fba2ec0f475776ef03fcbbff/gcc%2Fconfig%2Frs6000%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol2.h?ref=f7856bbc82a9a321fba2ec0f475776ef03fcbbff", "patch": "@@ -169,3 +169,16 @@ while (0)\n #define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n ( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n   sprintf ((OUTPUT), \"%s_.%d\", (NAME), (LABELNO))) \n+\n+\n+/* Define this macro as a C expression for the initializer of an\n+   array of string to tell the driver program which options are\n+   defaults for this target and thus do not need to be handled\n+   specially when using `MULTILIB_OPTIONS'.\n+\n+   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n+   the target makefile fragment or if none of the options listed in\n+   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n+\n+#undef\tMULTILIB_DEFAULTS\n+#define\tMULTILIB_DEFAULTS { \"mlittle\", \"mlittle-endian\", \"mcall-solaris\", \"mno-sdata\" }"}, {"sha": "e77e5223fe8bfbb9fb81eab9bf4cd92b6c4d5d54", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 61, "deletions": 2, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7856bbc82a9a321fba2ec0f475776ef03fcbbff/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7856bbc82a9a321fba2ec0f475776ef03fcbbff/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=f7856bbc82a9a321fba2ec0f475776ef03fcbbff", "patch": "@@ -797,6 +797,64 @@ do {\t\t\t\t\t\t\t\t\t\\\n   fputs (_name, FILE);\t\t\t\t\t\t\t\\\n } while (0)\n \n+/*\n+ * Switch into a generic section.\n+ *\n+ * We make the section read-only and executable for a function decl,\n+ * read-only for a const data decl, and writable for a non-const data decl.\n+ *\n+ * If the section has already been defined, we must not\n+ * emit the attributes here. The SVR4 assembler does not\n+ * recognize section redefinitions.\n+ * If DECL is NULL, no attributes are emitted.\n+ *\n+ * Note, Solaris as doesn't like @nobits, and gas can handle .sbss without\n+ * needing @nobits.\n+ */\n+\n+#undef\tASM_OUTPUT_SECTION_NAME\n+#define ASM_OUTPUT_SECTION_NAME(FILE, DECL, NAME)\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  static struct section_info\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      struct section_info *next;\t\t\t\t        \\\n+      char *name;\t\t\t\t\t\t        \\\n+      enum sect_enum {SECT_RW, SECT_RO, SECT_EXEC} type;\t\t\\\n+    } *sections;\t\t\t\t\t\t\t\\\n+  struct section_info *s;\t\t\t\t\t\t\\\n+  char *mode;\t\t\t\t\t\t\t\t\\\n+  enum sect_enum type;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  for (s = sections; s; s = s->next)\t\t\t\t\t\\\n+    if (!strcmp (NAME, s->name))\t\t\t\t\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (DECL && TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\\\n+    type = SECT_EXEC, mode = \"ax\";\t\t\t\t\t\\\n+  else if (DECL && TREE_READONLY (DECL))\t\t\t\t\\\n+    type = SECT_RO, mode = \"a\";\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    type = SECT_RW, mode = \"aw\";\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (s == 0)\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      s = (struct section_info *) xmalloc (sizeof (struct section_info));  \\\n+      s->name = xmalloc ((strlen (NAME) + 1) * sizeof (*NAME));\t\t\\\n+      strcpy (s->name, NAME);\t\t\t\t\t\t\\\n+      s->type = type;\t\t\t\t\t\t\t\\\n+      s->next = sections;\t\t\t\t\t\t\\\n+      sections = s;\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \".section\\t%s,\\\"%s\\\"\\n\", NAME, mode);\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (DECL && s->type != type)\t\t\t\t\t\\\n+\terror_with_decl (DECL, \"%s causes a section type conflict\");\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \".section\\t%s\\n\", NAME);\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n #undef ASM_OUTPUT_CONSTRUCTOR\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n@@ -1088,19 +1146,20 @@ scrti.o%s\"\n \t%{traditional:values-Xt.o%s} \\\n \t%{!traditional:values-Xa.o%s}} \\\n \t%{compat-bsd:-lucb -lsocket -lnsl -lelf -laio} \\\n+    %{solaris-cclib: /opt/SUNWspro/SC4.0/lib/libabi.a} \\\n     %{!shared: %{!symbolic: -lc }}}\"\n #endif\n \n #ifndef\tSTARTFILE_SOLARIS_SPEC\n #define\tSTARTFILE_SOLARIS_SPEC \"\\\n %{!msolaris-cclib: scrti.o%s scrt0.o%s} \\\n-%{msolaris-cclib: crti.o%s crt1.o%s}\"\n+%{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crti.o%s /opt/SUNWspro/SC4.0/lib/crt1.o%s}\"\n #endif\n \n #ifndef\tENDFILE_SOLARIS_SPEC\n #define\tENDFILE_SOLARIS_SPEC \"\\\n %{!msolaris-cclib: scrtn.o%s} \\\n-%{msolaris-cclib: crtn.o%s}\"\n+%{msolaris-cclib: /opt/SUNWspro/SC4.0/lib/crtn.o%s}\"\n #endif\n \n #ifndef LINK_START_SOLARIS_SPEC"}, {"sha": "e8cf6674b2106d76eee4bb2dbe00ac1effa629dd", "filename": "gcc/config/rs6000/t-ppc", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7856bbc82a9a321fba2ec0f475776ef03fcbbff/gcc%2Fconfig%2Frs6000%2Ft-ppc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7856bbc82a9a321fba2ec0f475776ef03fcbbff/gcc%2Fconfig%2Frs6000%2Ft-ppc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppc?ref=f7856bbc82a9a321fba2ec0f475776ef03fcbbff", "patch": "@@ -25,23 +25,9 @@ eabi-ctors.c: $(srcdir)/config/rs6000/eabi-ctors.c\n # explicit little endian or big endian libraries, since it depends on the\n # -mbig/-mlittle switches passed to gas.  The -mrelocatable support also needs\n # -mrelocatable passed to gas, so don't use it either.\n-MULTILIB_OPTIONS\t= msoft-float \\\n-\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix/mcall-solaris\n-\n-MULTILIB_DIRNAMES\t= nof \\\n-\t\t\t  le be \\\n-\t\t\t  cs ce ca sol\n-\n-MULTILIB_MATCHES\t= mlittle=mlittle-endian \\\n-\t\t\t  mbig=mbig-endian \\\n-\t\t\t  mbig=mcall-linux \\\n-\t\t\t  msoft-float=mcpu?403 \\\n-\t\t\t  msoft-float=mcpu?821 \\\n-\t\t\t  msoft-float=mcpu?860 \\\n-\t\t\t  mcall-sysv-noeabi=mcall-linux \\\n-\t\t\t  mcall-sysv-eabi=meabi \\\n-\t\t\t  mcall-sysv-noeabi=mno-eabi\n-\n+MULTILIB_OPTIONS\t= msoft-float\n+MULTILIB_DIRNAMES\t= nof\n+MULTILIB_MATCHES\t=\n MULTILIB_EXCEPTIONS\t=\n \n LIBGCC = stmp-multilib stmp-crt"}]}