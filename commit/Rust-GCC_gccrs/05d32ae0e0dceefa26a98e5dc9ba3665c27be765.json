{"sha": "05d32ae0e0dceefa26a98e5dc9ba3665c27be765", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVkMzJhZTBlMGRjZWVmYTI2YTk4ZTVkYzliYTM2NjVjMjdiZTc2NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-28T21:20:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-28T21:20:57Z"}, "message": "(process_command): Check that we have enough arguments.\n\nFrom-SVN: r2636", "tree": {"sha": "b046227902985f0d31e32b388f45774cd913a4c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b046227902985f0d31e32b388f45774cd913a4c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05d32ae0e0dceefa26a98e5dc9ba3665c27be765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05d32ae0e0dceefa26a98e5dc9ba3665c27be765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05d32ae0e0dceefa26a98e5dc9ba3665c27be765", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05d32ae0e0dceefa26a98e5dc9ba3665c27be765/comments", "author": null, "committer": null, "parents": [{"sha": "d4b048eff88a330271411e652dc65b2fbf8a6951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b048eff88a330271411e652dc65b2fbf8a6951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b048eff88a330271411e652dc65b2fbf8a6951"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "74e53b4faadf36378cd4481534f14262c34f378d", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05d32ae0e0dceefa26a98e5dc9ba3665c27be765/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05d32ae0e0dceefa26a98e5dc9ba3665c27be765/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=05d32ae0e0dceefa26a98e5dc9ba3665c27be765", "patch": "@@ -2197,6 +2197,8 @@ process_command (argc, argv)\n \t      /* Count only the option arguments in separate argv elements.  */\n \t      n_args = SWITCH_TAKES_ARG (c) - (p[1] != 0);\n \t    }\n+\t    if (i + n_args >= argc)\n+\t      fatal (\"argument to `-%s' is missing\", p);\n \t    switches[n_switches].args\n \t      = (char **) xmalloc ((n_args + 1) * sizeof (char *));\n \t    while (j < n_args)"}]}