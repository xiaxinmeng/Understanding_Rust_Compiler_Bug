{"sha": "8e59ff5541889817a160afda130bcbcdb70c4b90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU1OWZmNTU0MTg4OTgxN2ExNjBhZmRhMTMwYmNiY2RiNzBjNGI5MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-11-28T15:37:12Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-11-28T15:39:20Z"}, "message": "Improve support of simple bit-fields in -fdump-ada-spec\n\nThis fixes an issue with nested structures and adds an Alignment clause\nto counter the effect of the Pack aspect.\n\ngcc/c-family/ChangeLog:\n\t* c-ada-spec.c (dump_nested_type) <RECORD_TYPE>: Remove obsolete code.\n\t(dump_ada_structure): Also deal with convention, unchecked union and\n\tbit-field for nested types.  In the latter case, print an Alignment\n\taspect along with the Pack aspect.", "tree": {"sha": "406d9d6a006b432b49dfd48a68f5668f83976001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/406d9d6a006b432b49dfd48a68f5668f83976001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e59ff5541889817a160afda130bcbcdb70c4b90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e59ff5541889817a160afda130bcbcdb70c4b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e59ff5541889817a160afda130bcbcdb70c4b90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e59ff5541889817a160afda130bcbcdb70c4b90/comments", "author": null, "committer": null, "parents": [{"sha": "b1adbc27c4a85ded4db81ed65b1cefce4cee8d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1adbc27c4a85ded4db81ed65b1cefce4cee8d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1adbc27c4a85ded4db81ed65b1cefce4cee8d15"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "883036f4e5c900f9f761caf2485d2d4ff1eb6aaa", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e59ff5541889817a160afda130bcbcdb70c4b90/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e59ff5541889817a160afda130bcbcdb70c4b90/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=8e59ff5541889817a160afda130bcbcdb70c4b90", "patch": "@@ -2598,16 +2598,6 @@ dump_nested_type (pretty_printer *buffer, tree field, tree t, tree parent,\n \n       pp_string (buffer, \" is \");\n       dump_ada_structure (buffer, field_type, t, true, spc);\n-\n-      pp_string (buffer, \"with Convention => C_Pass_By_Copy\");\n-\n-      if (TREE_CODE (field_type) == UNION_TYPE)\n-\t{\n-\t  pp_comma (buffer);\n-\t  newline_and_indent (buffer, spc + 5);\n-\t  pp_string (buffer, \"Unchecked_Union => True\");\n-\t}\n-\n       pp_semicolon (buffer);\n       newline_and_indent (buffer, spc);\n       break;\n@@ -3318,10 +3308,7 @@ dump_ada_structure (pretty_printer *buffer, tree node, tree type, bool nested,\n   newline_and_indent (buffer, spc);\n \n   /* We disregard the methods for anonymous nested types.  */\n-  if (nested)\n-    return;\n-\n-  if (has_nontrivial_methods (node))\n+  if (has_nontrivial_methods (node) && !nested)\n     {\n       pp_string (buffer, \"with Import => True,\");\n       newline_and_indent (buffer, spc + 5);\n@@ -3339,12 +3326,20 @@ dump_ada_structure (pretty_printer *buffer, tree node, tree type, bool nested,\n \n   if (bitfield_used)\n     {\n+      char buf[32];\n       pp_comma (buffer);\n       newline_and_indent (buffer, spc + 5);\n       pp_string (buffer, \"Pack => True\");\n+      pp_comma (buffer);\n+      newline_and_indent (buffer, spc + 5);\n+      sprintf (buf, \"Alignment => %d\", TYPE_ALIGN (node) / BITS_PER_UNIT);\n+      pp_string (buffer, buf);\n       bitfield_used = false;\n     }\n \n+  if (nested)\n+    return;\n+\n   need_semicolon = !dump_ada_methods (buffer, node, spc);\n \n   /* Print the static fields of the structure, if any.  */"}]}