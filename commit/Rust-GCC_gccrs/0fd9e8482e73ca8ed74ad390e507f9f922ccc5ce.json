{"sha": "0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZkOWU4NDgyZTczY2E4ZWQ3NGFkMzkwZTUwN2Y5ZjkyMmNjYzVjZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-06-19T22:57:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-19T22:57:02Z"}, "message": "PR libstdc++/90920 restore previous checks for empty ranges\n\nThe change in r263433 broke the contract of the __rotate functions, by no\nlonger accepting empty ranges. That means that callers which inlined the\nold version of std::rotate (without checks) that end up linking to a new\ndefinition of std::__rotate (also without checks) could perform a divide\nby zero and crash.\n\nThis restores the old contract of the __rotate overloads.\n\n\tPR libstdc++/90920 partially revert r263433\n\t* include/bits/stl_algo.h (__rotate): Restore checks for empty ranges.\n\t(rotate): Remove checks.\n\t* testsuite/25_algorithms/rotate/90920.cc: New test.\n\nFrom-SVN: r272489", "tree": {"sha": "507000ccbcd823d9cdebf76fd49b92b465ad3e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/507000ccbcd823d9cdebf76fd49b92b465ad3e42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6f0626b11b25b4159489e4935086ea49d47c541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f0626b11b25b4159489e4935086ea49d47c541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6f0626b11b25b4159489e4935086ea49d47c541"}], "stats": {"total": 73, "additions": 68, "deletions": 5}, "files": [{"sha": "cff842cfc9efa409f1e11ebcd32777e3ded274fa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "patch": "@@ -1,5 +1,10 @@\n 2019-06-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/90920 partially revert r263433\n+\t* include/bits/stl_algo.h (__rotate): Restore checks for empty ranges.\n+\t(rotate): Remove checks.\n+\t* testsuite/25_algorithms/rotate/90920.cc: New test.\n+\n \t* include/std/numeric (reduce(Iter, Iter, T, BinOp)): Fix value\n \tcategory used in invocable check.\n \t(reduce(Iter, Iter, T)): Pass initial value as rvalue."}, {"sha": "ac21c55ca1bd795e2836cb452951dd6ef431bbfe", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "patch": "@@ -1251,6 +1251,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t     _ForwardIterator __last,\n \t     forward_iterator_tag)\n     {\n+      if (__first == __middle)\n+\treturn __last;\n+      else if (__last == __middle)\n+\treturn __first;\n+\n       _ForwardIterator __first2 = __middle;\n       do\n \t{\n@@ -1291,6 +1296,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<\n \t\t\t\t  _BidirectionalIterator>)\n \n+      if (__first == __middle)\n+\treturn __last;\n+      else if (__last == __middle)\n+\treturn __first;\n+\n       std::__reverse(__first,  __middle, bidirectional_iterator_tag());\n       std::__reverse(__middle, __last,   bidirectional_iterator_tag());\n \n@@ -1324,6 +1334,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<\n \t\t\t\t  _RandomAccessIterator>)\n \n+      if (__first == __middle)\n+\treturn __last;\n+      else if (__last == __middle)\n+\treturn __first;\n+\n       typedef typename iterator_traits<_RandomAccessIterator>::difference_type\n \t_Distance;\n       typedef typename iterator_traits<_RandomAccessIterator>::value_type\n@@ -1425,11 +1440,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __glibcxx_requires_valid_range(__first, __middle);\n       __glibcxx_requires_valid_range(__middle, __last);\n \n-      if (__first == __middle)\n-\treturn __last;\n-      else if (__last  == __middle)\n-\treturn __first;\n-\n       return std::__rotate(__first, __middle, __last,\n \t\t\t   std::__iterator_category(__first));\n     }"}, {"sha": "cae3ae748d86c2b2298b08a3b1e42e77230f05b5", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate/90920.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2F90920.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2F90920.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2F90920.cc?ref=0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run }\n+\n+#include <algorithm>\n+#include <testsuite_hooks.h>\n+\n+namespace gnu_test\n+{\n+  // This is the definition from GCC 8.x, with no checks for first==middle\n+  // or middle==last.\n+  template<typename _ForwardIterator>\n+    inline _ForwardIterator\n+    rotate(_ForwardIterator __first, _ForwardIterator __middle,\n+\t   _ForwardIterator __last)\n+    {\n+      return std::__rotate(__first, __middle, __last,\n+\t\t\t   std::__iterator_category(__first));\n+    }\n+}\n+\n+void\n+test01()\n+{\n+  int i = 0;\n+  gnu_test::rotate(&i, &i, &i+1);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}