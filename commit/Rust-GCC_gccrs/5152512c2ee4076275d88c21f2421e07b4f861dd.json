{"sha": "5152512c2ee4076275d88c21f2421e07b4f861dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE1MjUxMmMyZWU0MDc2Mjc1ZDg4YzIxZjI0MjFlMDdiNGY4NjFkZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-04-02T19:52:39Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-04-02T19:52:39Z"}, "message": "jni.cc (add_char): Correctly encode non-ascii characters.\n\n\t* jni.cc (add_char): Correctly encode non-ascii characters.\n\t(add_char): Define even when INTERPRETER not defined.\n\t(mangled_name): Likewise.\n\t(_Jv_GetJNIEnvNewFrame): Likewise.\n\t(_Jv_LookupJNIMethod): Likewise.\n\nFrom-SVN: r41010", "tree": {"sha": "e9438bde044933e11051bebcd9f11532f9836e2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9438bde044933e11051bebcd9f11532f9836e2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5152512c2ee4076275d88c21f2421e07b4f861dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5152512c2ee4076275d88c21f2421e07b4f861dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5152512c2ee4076275d88c21f2421e07b4f861dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5152512c2ee4076275d88c21f2421e07b4f861dd/comments", "author": null, "committer": null, "parents": [{"sha": "23ab86e452d4f29e4f3a6eddec2b146dd8a3e0b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ab86e452d4f29e4f3a6eddec2b146dd8a3e0b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ab86e452d4f29e4f3a6eddec2b146dd8a3e0b0"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "29885aa1b34dea2947d963d7b0b6146cbc8bc9f1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5152512c2ee4076275d88c21f2421e07b4f861dd/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5152512c2ee4076275d88c21f2421e07b4f861dd/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5152512c2ee4076275d88c21f2421e07b4f861dd", "patch": "@@ -1,3 +1,11 @@\n+2001-03-30  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jni.cc (add_char): Correctly encode non-ascii characters.\n+\t(add_char): Define even when INTERPRETER not defined.\n+\t(mangled_name): Likewise.\n+\t(_Jv_GetJNIEnvNewFrame): Likewise.\n+\t(_Jv_LookupJNIMethod): Likewise.\n+\n 2001-03-23  Kevin B Hendricks  <khendricks@ivey.uwo.ca>\n \n \t* configure.host: Enable interpreter for PPC."}, {"sha": "b60823ee893098e9b772b6cd740f8bec5574a5f3", "filename": "libjava/jni.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5152512c2ee4076275d88c21f2421e07b4f861dd/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5152512c2ee4076275d88c21f2421e07b4f861dd/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=5152512c2ee4076275d88c21f2421e07b4f861dd", "patch": "@@ -1595,8 +1595,6 @@ _Jv_JNI_UnregisterNatives (JNIEnv *, jclass)\n \n \f\n \n-#ifdef INTERPRETER\n-\n // Add a character to the buffer, encoding properly.\n static void\n add_char (char *buf, jchar c, int *here)\n@@ -1622,8 +1620,8 @@ add_char (char *buf, jchar c, int *here)\n   else if (c == '/' || c == '.')\n     buf[(*here)++] = '_';\n   else if ((c >= '0' && c <= '9')\n-      || (c >= 'a' && c <= 'z')\n-      || (c >= 'A' && c <= 'Z'))\n+\t   || (c >= 'a' && c <= 'z')\n+\t   || (c >= 'A' && c <= 'Z'))\n     buf[(*here)++] = (char) c;\n   else\n     {\n@@ -1633,7 +1631,7 @@ add_char (char *buf, jchar c, int *here)\n       for (int i = 0; i < 4; ++i)\n \t{\n \t  int val = c & 0x0f;\n-\t  buf[(*here) + 4 - i] = (val > 10) ? ('a' + val - 10) : ('0' + val);\n+\t  buf[(*here) + 3 - i] = (val > 10) ? ('a' + val - 10) : ('0' + val);\n \t  c >>= 4;\n \t}\n       *here += 4;\n@@ -1753,6 +1751,8 @@ _Jv_LookupJNIMethod (jclass klass, _Jv_Utf8Const *name,\n   return function;\n }\n \n+#ifdef INTERPRETER\n+\n // This function is the stub which is used to turn an ordinary (CNI)\n // method call into a JNI call.\n void"}]}