{"sha": "c2e9f586fde57e64dc20e5528870d06cde894785", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJlOWY1ODZmZGU1N2U2NGRjMjBlNTUyODg3MGQwNmNkZTg5NDc4NQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-06T11:30:20Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-06T11:30:20Z"}, "message": "OpenACC/Fortran: Reject '!$acc atomic update capture'\n\ngcc/fortran/ChangeLog:\n\n\t* openmp.c (gfc_match_oacc_atomic): No longer accept 'update capture'.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/goacc-gomp/goacc-gomp.exp: New.\n\t* gfortran.dg/goacc-gomp/atomic.f90: New test.\n\t* gfortran.dg/goacc/atomic.f90: New test.", "tree": {"sha": "5b840a820e2939408baa00988b8ce63000cb9b9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b840a820e2939408baa00988b8ce63000cb9b9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2e9f586fde57e64dc20e5528870d06cde894785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e9f586fde57e64dc20e5528870d06cde894785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2e9f586fde57e64dc20e5528870d06cde894785", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2e9f586fde57e64dc20e5528870d06cde894785/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2c11935b010ee55f7ccd14d27f62c6fbed3745e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c11935b010ee55f7ccd14d27f62c6fbed3745e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c11935b010ee55f7ccd14d27f62c6fbed3745e"}], "stats": {"total": 127, "additions": 122, "deletions": 5}, "files": [{"sha": "1891ac5591b2db51e50ebdf03eed61659563371f", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e9f586fde57e64dc20e5528870d06cde894785/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e9f586fde57e64dc20e5528870d06cde894785/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=c2e9f586fde57e64dc20e5528870d06cde894785", "patch": "@@ -4181,8 +4181,7 @@ gfc_match_omp_atomic (void)\n }\n \n \n-/* acc atomic [ read | write | update | capture]\n-   acc atomic update capture.  */\n+/* acc atomic [ read | write | update | capture]  */\n \n match\n gfc_match_oacc_atomic (void)\n@@ -4191,9 +4190,7 @@ gfc_match_oacc_atomic (void)\n   c->atomic_op = GFC_OMP_ATOMIC_UPDATE;\n   c->memorder = OMP_MEMORDER_RELAXED;\n   gfc_gobble_whitespace ();\n-  if (gfc_match (\"update capture\") == MATCH_YES)\n-    c->capture = true;\n-  else if (gfc_match (\"update\") == MATCH_YES)\n+  if (gfc_match (\"update\") == MATCH_YES)\n     ;\n   else if (gfc_match (\"read\") == MATCH_YES)\n     c->atomic_op = GFC_OMP_ATOMIC_READ;"}, {"sha": "59186a209827fb49d6a017686442cf082956a648", "filename": "gcc/testsuite/gfortran.dg/goacc-gomp/atomic.f90", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e9f586fde57e64dc20e5528870d06cde894785/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fatomic.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e9f586fde57e64dc20e5528870d06cde894785/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fatomic.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fatomic.f90?ref=c2e9f586fde57e64dc20e5528870d06cde894785", "patch": "@@ -0,0 +1,48 @@\n+! { dg-do compile } */\n+! { dg-additional-options \"-fdump-tree-original\" } */\n+\n+subroutine foo\n+  !$omp requires atomic_default_mem_order(acq_rel)\n+  integer :: i, v\n+\n+  !$omp atomic read\n+  i = v\n+\n+  !$acc atomic read\n+  i = v\n+\n+  !$omp atomic write\n+  i = v\n+\n+  !$acc atomic write\n+  i = v\n+\n+  !$omp atomic update\n+  i = i + 1\n+\n+  !$acc atomic update\n+  i = i + 1\n+\n+  !$omp atomic capture\n+    i = i + 1\n+    v = i\n+  !$omp end atomic\n+\n+  !$acc atomic capture\n+    i = i + 1\n+    v = i\n+  !$acc end atomic\n+\n+  ! Valid in C/C++ since OpenACC 2.5 but not in Fortran:\n+  ! !$acc atomic update capture\n+  !   i = i + 1\n+  !   v = i\n+  ! !$acc end atomic\n+end\n+\n+! { dg-final { scan-tree-dump-times \"i = #pragma omp atomic read acquire\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"i = #pragma omp atomic read relaxed\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp atomic release\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp atomic relaxed\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic capture acq_rel\" 1  \"original\" } }\n+! { dg-final { scan-tree-dump-times \"v = #pragma omp atomic capture relaxed\" 1 \"original\" } }"}, {"sha": "6073fb3978abd6ed499aee91879cd0c31d6286fd", "filename": "gcc/testsuite/gfortran.dg/goacc-gomp/goacc-gomp.exp", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e9f586fde57e64dc20e5528870d06cde894785/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fgoacc-gomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e9f586fde57e64dc20e5528870d06cde894785/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fgoacc-gomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Fgoacc-gomp.exp?ref=c2e9f586fde57e64dc20e5528870d06cde894785", "patch": "@@ -0,0 +1,37 @@\n+# Copyright (C) 2005-2020 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Load support procs.\n+load_lib gfortran-dg.exp\n+\n+if { ![check_effective_target_fopenacc] \\\n+     || ![check_effective_target_fopenmp] } {\n+  return\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+gfortran-dg-runtest [lsort \\\n+       [find $srcdir/$subdir *.\\[fF\\]{,90,95,03,08} ] ] \"\" \"-fopenacc -fopenmp\"\n+\n+# All done.\n+dg-finish"}, {"sha": "072d024b13203f646d639437b75e720771eaa3e7", "filename": "gcc/testsuite/gfortran.dg/goacc/atomic.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2e9f586fde57e64dc20e5528870d06cde894785/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fatomic.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2e9f586fde57e64dc20e5528870d06cde894785/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fatomic.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fatomic.f90?ref=c2e9f586fde57e64dc20e5528870d06cde894785", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+\n+subroutine foo\n+  integer :: i, v\n+  !$acc atomic read bar  ! { dg-error \"21: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = v\n+\n+  !$acc atomic read write  ! { dg-error \"21: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = v\n+\n+  !$acc atomic read seq_cst  ! { dg-error \"21: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = v\n+\n+  !$acc atomic read relaxed  ! { dg-error \"21: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = v\n+\n+  !$acc atomic update hint(1)  ! { dg-error \"23: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = i + 1\n+\n+  !$acc atomic update update capture  ! { dg-error \"23: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = i + 1\n+  v = i\n+\n+  !$acc atomic update capture capture  ! { dg-error \"23: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = i + 1\n+  v = i\n+\n+  !$acc atomic write capture  ! { dg-error \"22: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = 1\n+\n+  ! Valid in C/C++ since OpenACC 2.5 but not in Fortran:\n+  !$acc atomic update capture  ! { dg-error \"23: Unexpected junk after !.ACC ATOMIC statement\" }\n+  i = i + 1\n+  v = i\n+end"}]}