{"sha": "2a4d06261820a8fa78728d40ea51ba4658b6d914", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE0ZDA2MjYxODIwYThmYTc4NzI4ZDQwZWE1MWJhNDY1OGI2ZDkxNA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-01-24T19:07:06Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-01-24T19:07:06Z"}, "message": "java-tree.h (gcj_abi_version): Declare.\n\n\t* java-tree.h (gcj_abi_version): Declare.\n\t* class.c (make_class_data): Push gcj_abi_version into \"next\"\n\tfield.  Renamed field.\n\t* decl.c (gcj_abi_version): New global.\n\t(parse_version): New function.\n\t(java_init_decl_processing): Call it.  Renamed 'next' field.\n\tInclude version.h.\n\t(GCJ_BINARYCOMPAT_ADDITION): New define.\n\nFrom-SVN: r94174", "tree": {"sha": "7fe874caa8ab9944665e185cc33972a12d49f386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fe874caa8ab9944665e185cc33972a12d49f386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a4d06261820a8fa78728d40ea51ba4658b6d914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4d06261820a8fa78728d40ea51ba4658b6d914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a4d06261820a8fa78728d40ea51ba4658b6d914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4d06261820a8fa78728d40ea51ba4658b6d914/comments", "author": null, "committer": null, "parents": [{"sha": "8bf04387959a7eea3d3e58f9e25a70fa67da641a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bf04387959a7eea3d3e58f9e25a70fa67da641a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bf04387959a7eea3d3e58f9e25a70fa67da641a"}], "stats": {"total": 75, "additions": 70, "deletions": 5}, "files": [{"sha": "116df16036da79011363caea57c0e00296f58eda", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4d06261820a8fa78728d40ea51ba4658b6d914/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4d06261820a8fa78728d40ea51ba4658b6d914/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2a4d06261820a8fa78728d40ea51ba4658b6d914", "patch": "@@ -1,3 +1,14 @@\n+2005-01-24  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java-tree.h (gcj_abi_version): Declare.\n+\t* class.c (make_class_data): Push gcj_abi_version into \"next\"\n+\tfield.  Renamed field.\n+\t* decl.c (gcj_abi_version): New global.\n+\t(parse_version): New function.\n+\t(java_init_decl_processing): Call it.  Renamed 'next' field.\n+\tInclude version.h.\n+\t(GCJ_BINARYCOMPAT_ADDITION): New define.\n+\n 2005-01-24  Roger Sayle  <roger@eyesopen.com>\n \n \tPR java/19295"}, {"sha": "53a31e940319bbdf1d746724f658556e2e9ed9cb", "filename": "gcc/java/class.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4d06261820a8fa78728d40ea51ba4658b6d914/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4d06261820a8fa78728d40ea51ba4658b6d914/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=2a4d06261820a8fa78728d40ea51ba4658b6d914", "patch": "@@ -1,5 +1,5 @@\n /* Functions related to building classes and their related objects.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -1741,7 +1741,7 @@ make_class_data (tree type)\n   FINISH_RECORD_CONSTRUCTOR (temp);\n   START_RECORD_CONSTRUCTOR (cons, class_type_node);\n   PUSH_SUPER_VALUE (cons, temp);\n-  PUSH_FIELD_VALUE (cons, \"next\", null_pointer_node);\n+  PUSH_FIELD_VALUE (cons, \"next_or_version\", gcj_abi_version);\n   PUSH_FIELD_VALUE (cons, \"name\", build_utf8_ref (DECL_NAME (type_decl)));\n   PUSH_FIELD_VALUE (cons, \"accflags\",\n \t\t    build_int_cst (NULL_TREE,"}, {"sha": "1343ebfe3f056455d44b6c3edf209d171142b702", "filename": "gcc/java/decl.c", "status": "modified", "additions": 55, "deletions": 2, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4d06261820a8fa78728d40ea51ba4658b6d914/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4d06261820a8fa78728d40ea51ba4658b6d914/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=2a4d06261820a8fa78728d40ea51ba4658b6d914", "patch": "@@ -1,6 +1,6 @@\n /* Process declarations and variables for the GNU compiler for the\n    Java(TM) language.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -47,6 +47,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"cgraph.h\"\n #include \"tree-inline.h\"\n #include \"target.h\"\n+#include \"version.h\"\n \n #if defined (DEBUG_JAVA_BINDING_LEVELS)\n extern void indent (void);\n@@ -58,6 +59,13 @@ static tree push_promoted_type (const char *, tree);\n static struct binding_level *make_binding_level (void);\n static tree create_primitive_vtable (const char *);\n static tree check_local_unnamed_variable (tree, tree, tree);\n+static void parse_version (void);\n+\n+/* Used when computing the ABI version.  */\n+#define GCJ_BINARYCOMPAT_ADDITION 5\n+\n+/* The ABI version number.  */\n+tree gcj_abi_version;\n \n /* Name of the Cloneable class.  */\n tree java_lang_cloneable_identifier_node;\n@@ -559,6 +567,49 @@ do_nothing (tree t)\n   return t;\n }\n \n+/* Parse the version string and compute the ABI version number.  */\n+static void\n+parse_version (void)\n+{\n+  const char *p = version_string;\n+  unsigned int major = 0, minor = 0;\n+  unsigned int abi_version;\n+\n+  /* Skip leading junk.  */\n+  while (*p && !ISDIGIT (*p))\n+    ++p;\n+  gcc_assert (*p);\n+\n+  /* Extract major version.  */\n+  while (ISDIGIT (*p))\n+    {\n+      major = major * 10 + *p - '0';\n+      ++p;\n+    }\n+\n+  gcc_assert (*p == '.' && ISDIGIT (p[1]));\n+  ++p;\n+\n+  /* Extract minor version.  */\n+  while (ISDIGIT (*p))\n+    {\n+      minor = minor * 10 + *p - '0';\n+      ++p;\n+    }\n+\n+  /* Implicit in this computation is the idea that we won't break the\n+     old-style binary ABI in a sub-minor release (e.g., from 4.0.0 to\n+     4.0.1).  */\n+  abi_version = 10000 * major + 10 * minor;\n+  /* It is helpful to distinguish BC ABI from ordinary ABI at this\n+     level, since at some point we will recognize a variety of BC ABIs\n+     (objects generated by different version of gcj), but will\n+     probably always require strict matching for ordinary ABI.  */\n+  if (flag_indirect_dispatch)\n+    abi_version += GCJ_BINARYCOMPAT_ADDITION;\n+\n+  gcj_abi_version = build_int_cstu (ptr_type_node, abi_version);\n+}\n \n void\n java_init_decl_processing (void)\n@@ -835,7 +886,7 @@ java_init_decl_processing (void)\n   set_super_info (0, string_type_node, object_type_node, 0);\n   class_ptr_type = build_pointer_type (class_type_node);\n \n-  PUSH_FIELD (class_type_node, field, \"next\", class_ptr_type);\n+  PUSH_FIELD (class_type_node, field, \"next_or_version\", class_ptr_type);\n   PUSH_FIELD (class_type_node, field, \"name\", utf8const_ptr_type);\n   PUSH_FIELD (class_type_node, field, \"accflags\", access_flags_type_node);\n   PUSH_FIELD (class_type_node, field, \"superclass\", class_ptr_type);\n@@ -1100,6 +1151,8 @@ java_init_decl_processing (void)\n #if 0\n   soft_fmodf_node = built_in_decls[BUILT_IN_FMODF];\n #endif\n+\n+  parse_version ();\n }\n \n "}, {"sha": "bd7644604dd5ab894af1e7d43efa650584ae9d9b", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4d06261820a8fa78728d40ea51ba4658b6d914/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4d06261820a8fa78728d40ea51ba4658b6d914/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=2a4d06261820a8fa78728d40ea51ba4658b6d914", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for parsing and type checking for the GNU compiler for\n    the Java(TM) language.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -274,6 +274,7 @@ typedef struct CPool constant_pool;\n \n extern GTY(()) tree java_lang_cloneable_identifier_node;\n extern GTY(()) tree java_io_serializable_identifier_node;\n+extern GTY(()) tree gcj_abi_version;\n \n enum java_tree_index\n {"}]}