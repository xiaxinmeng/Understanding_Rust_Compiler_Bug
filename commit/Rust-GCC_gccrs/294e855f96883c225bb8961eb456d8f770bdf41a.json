{"sha": "294e855f96883c225bb8961eb456d8f770bdf41a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk0ZTg1NWY5Njg4M2MyMjViYjg5NjFlYjQ1NmQ4Zjc3MGJkZjQxYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-04-27T21:35:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-04-27T21:35:17Z"}, "message": "tree.c (get_fns): Split out from get_first_fn.\n\n\t* tree.c (get_fns): Split out from get_first_fn.\n\t* cp-tree.h: Declare it.\n\t* search.c (shared_member_p): Use it.\n\t* semantics.c (finish_qualified_id_expr): Simplify.\n\t(finish_id_expression): Simplify.\n\nFrom-SVN: r158810", "tree": {"sha": "db906e8fcd48502db7eacdfb8c20e1ca0ab41374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db906e8fcd48502db7eacdfb8c20e1ca0ab41374"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/294e855f96883c225bb8961eb456d8f770bdf41a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294e855f96883c225bb8961eb456d8f770bdf41a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/294e855f96883c225bb8961eb456d8f770bdf41a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294e855f96883c225bb8961eb456d8f770bdf41a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2defb926479247a61fe0fffbcf95597722a94c40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2defb926479247a61fe0fffbcf95597722a94c40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2defb926479247a61fe0fffbcf95597722a94c40"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "08746bae335963f4c612975b8aad473384d168d7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=294e855f96883c225bb8961eb456d8f770bdf41a", "patch": "@@ -1,4 +1,10 @@\n-2010-04-27  Jason Merrill  <jason@redhat.com>\n+2010-04-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.c (get_fns): Split out from get_first_fn.\n+\t* cp-tree.h: Declare it.\n+\t* search.c (shared_member_p): Use it.\n+\t* semantics.c (finish_qualified_id_expr): Simplify.\n+\t(finish_id_expression): Simplify.\n \n \t* semantics.c (finish_non_static_data_member): Call maybe_dummy_object\n \twhenever object is NULL_TREE.  Don't do 'this' capture here."}, {"sha": "cbb1ac65315cec6aad33cf846664805059e9a11f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=294e855f96883c225bb8961eb456d8f770bdf41a", "patch": "@@ -5259,6 +5259,7 @@ extern tree hash_tree_cons\t\t\t(tree, tree, tree);\n extern tree hash_tree_chain\t\t\t(tree, tree);\n extern tree build_qualified_name\t\t(tree, tree, tree, bool);\n extern int is_overloaded_fn\t\t\t(tree);\n+extern tree get_fns\t\t\t\t(tree);\n extern tree get_first_fn\t\t\t(tree);\n extern tree ovl_cons\t\t\t\t(tree, tree);\n extern tree build_overload\t\t\t(tree, tree);"}, {"sha": "11011e7f3347e229bcca283a946aac3f226697c3", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=294e855f96883c225bb8961eb456d8f770bdf41a", "patch": "@@ -973,6 +973,7 @@ shared_member_p (tree t)\n     return 1;\n   if (is_overloaded_fn (t))\n     {\n+      t = get_fns (t);\n       for (; t; t = OVL_NEXT (t))\n \t{\n \t  tree fn = OVL_CURRENT (t);"}, {"sha": "d4ce01496ee0e7783d3d739b3b67ec091276aa5b", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=294e855f96883c225bb8961eb456d8f770bdf41a", "patch": "@@ -1662,15 +1662,11 @@ finish_qualified_id_expr (tree qualifying_class,\n     }\n   else if (BASELINK_P (expr) && !processing_template_decl)\n     {\n-      tree fns;\n       tree ob;\n \n       /* See if any of the functions are non-static members.  */\n-      fns = BASELINK_FUNCTIONS (expr);\n-      if (TREE_CODE (fns) == TEMPLATE_ID_EXPR)\n-\tfns = TREE_OPERAND (fns, 0);\n       /* If so, the expression may be relative to 'this'.  */\n-      if (!shared_member_p (fns)\n+      if (!shared_member_p (expr)\n \t  && (ob = maybe_dummy_object (qualifying_class, NULL),\n \t      !is_dummy_object (ob)))\n \texpr = (build_class_member_access_expr\n@@ -3124,10 +3120,7 @@ finish_id_expression (tree id_expression,\n \t{\n \t  tree first_fn;\n \n-\t  first_fn = decl;\n-\t  if (TREE_CODE (first_fn) == TEMPLATE_ID_EXPR)\n-\t    first_fn = TREE_OPERAND (first_fn, 0);\n-\t  first_fn = get_first_fn (first_fn);\n+\t  first_fn = get_first_fn (decl);\n \t  if (TREE_CODE (first_fn) == TEMPLATE_DECL)\n \t    first_fn = DECL_TEMPLATE_RESULT (first_fn);\n "}, {"sha": "4d25cac186c565aa01be7553dc3e0dbadd8fa0b5", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294e855f96883c225bb8961eb456d8f770bdf41a/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=294e855f96883c225bb8961eb456d8f770bdf41a", "patch": "@@ -1352,7 +1352,7 @@ really_overloaded_fn (tree x)\n }\n \n tree\n-get_first_fn (tree from)\n+get_fns (tree from)\n {\n   gcc_assert (is_overloaded_fn (from));\n   /* A baselink is also considered an overloaded function.  */\n@@ -1363,7 +1363,13 @@ get_first_fn (tree from)\n     from = BASELINK_FUNCTIONS (from);\n   if (TREE_CODE (from) == TEMPLATE_ID_EXPR)\n     from = TREE_OPERAND (from, 0);\n-  return OVL_CURRENT (from);\n+  return from;\n+}\n+\n+tree\n+get_first_fn (tree from)\n+{\n+  return OVL_CURRENT (get_fns (from));\n }\n \n /* Return a new OVL node, concatenating it with the old one.  */"}]}