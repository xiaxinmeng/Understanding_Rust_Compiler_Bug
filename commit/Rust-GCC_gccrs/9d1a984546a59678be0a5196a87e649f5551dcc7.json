{"sha": "9d1a984546a59678be0a5196a87e649f5551dcc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQxYTk4NDU0NmE1OTY3OGJlMGE1MTk2YTg3ZTY0OWY1NTUxZGNjNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-11-03T08:26:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-11-03T08:26:02Z"}, "message": "i386.md (*call_value_1_rex64_ms_sysv): Use register names instead of numerical constants.\n\n\t* config/i386/i386.md (*call_value_1_rex64_ms_sysv): Use register\n\tnames instead of numerical constants.\n\t(sse_prologue_save): Ditto.\n\t(*sse_prologue_save_insn): Ditto.\n\nFrom-SVN: r153840", "tree": {"sha": "a0ede608e6ee06d4dc7dd22ee001ff6436c54342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0ede608e6ee06d4dc7dd22ee001ff6436c54342"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d1a984546a59678be0a5196a87e649f5551dcc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d1a984546a59678be0a5196a87e649f5551dcc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d1a984546a59678be0a5196a87e649f5551dcc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d1a984546a59678be0a5196a87e649f5551dcc7/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55a19d494b903ffdf754217d3ff5bc66d1ad1954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55a19d494b903ffdf754217d3ff5bc66d1ad1954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55a19d494b903ffdf754217d3ff5bc66d1ad1954"}], "stats": {"total": 69, "additions": 38, "deletions": 31}, "files": [{"sha": "f9f37d82ad1819090c32d230a2ad0d4e32cf101b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1a984546a59678be0a5196a87e649f5551dcc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1a984546a59678be0a5196a87e649f5551dcc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d1a984546a59678be0a5196a87e649f5551dcc7", "patch": "@@ -1,14 +1,21 @@\n+2009-11-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*call_value_1_rex64_ms_sysv): Use register\n+\tnames instead of numerical constants.\n+\t(sse_prologue_save): Ditto.\n+\t(*sse_prologue_save_insn): Ditto.\n+\n 2009-11-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/41900\n \t* config/i386/i386.h (ix86_arch_indices) <X86_ARCH_CALL_ESP>: New.\n \t(TARGET_CALL_ESP): New define.\n \t* config/i386/i386.c (initial_ix86_tune_features): Initialize\n \tX86_ARCH_CALL_ESP.\n-\t* config/i386/i386.md \n-\t(*call_pop_1_esp, *call_1_esp, *call_value_pop_1_esp,\n-\t*call_value_1_esp): Rename from *call_pop_1, *call_1,\n-\t*call_value_pop_1 and *call_value_1.  Depend on TARGET_CALL_ESP.\n+\t* config/i386/i386.md (*call_pop_1_esp, *call_1_esp,\n+\t*call_value_pop_1_esp, *call_value_1_esp): Rename from *call_pop_1,\n+\t*call_1, *call_value_pop_1 and *call_value_1.  Depend on\n+\tTARGET_CALL_ESP.\n \t(*call_pop_1, *call_1, *call_value_pop_1, *call_value_1):\n \tNew patterns, use \"lsm\" as operand 1 constraint.\n \t* config/i386/predicates.md (call_insn_operand): Depend on "}, {"sha": "a17a00c9386d8215b27e99d070294a06a26e069b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d1a984546a59678be0a5196a87e649f5551dcc7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d1a984546a59678be0a5196a87e649f5551dcc7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9d1a984546a59678be0a5196a87e649f5551dcc7", "patch": "@@ -21252,19 +21252,19 @@\n \t(call (mem:QI (match_operand:DI 1 \"call_insn_operand\" \"rsm\"))\n \t      (match_operand:DI 2 \"\" \"\")))\n    (unspec [(const_int 0)] UNSPEC_MS_TO_SYSV_CALL)\n-   (clobber (reg:TI 27))\n-   (clobber (reg:TI 28))\n-   (clobber (reg:TI 45))\n-   (clobber (reg:TI 46))\n-   (clobber (reg:TI 47))\n-   (clobber (reg:TI 48))\n-   (clobber (reg:TI 49))\n-   (clobber (reg:TI 50))\n-   (clobber (reg:TI 51))\n-   (clobber (reg:TI 52))\n+   (clobber (reg:TI XMM6_REG))\n+   (clobber (reg:TI XMM7_REG))\n+   (clobber (reg:TI XMM8_REG))\n+   (clobber (reg:TI XMM9_REG))\n+   (clobber (reg:TI XMM10_REG))\n+   (clobber (reg:TI XMM11_REG))\n+   (clobber (reg:TI XMM12_REG))\n+   (clobber (reg:TI XMM13_REG))\n+   (clobber (reg:TI XMM14_REG))\n+   (clobber (reg:TI XMM15_REG))\n    (clobber (reg:DI SI_REG))\n    (clobber (reg:DI DI_REG))]\n-  \"!SIBLING_CALL_P (insn) && TARGET_64BIT\"\n+  \"TARGET_64BIT && !SIBLING_CALL_P (insn)\"\n {\n   if (constant_call_address_operand (operands[1], Pmode))\n     return \"call\\t%P1\";\n@@ -21303,14 +21303,14 @@\n \n (define_expand \"sse_prologue_save\"\n   [(parallel [(set (match_operand:BLK 0 \"\" \"\")\n-\t\t   (unspec:BLK [(reg:DI 21)\n-\t\t\t\t(reg:DI 22)\n-\t\t\t\t(reg:DI 23)\n-\t\t\t\t(reg:DI 24)\n-\t\t\t\t(reg:DI 25)\n-\t\t\t\t(reg:DI 26)\n-\t\t\t\t(reg:DI 27)\n-\t\t\t\t(reg:DI 28)] UNSPEC_SSE_PROLOGUE_SAVE))\n+\t\t   (unspec:BLK [(reg:DI XMM0_REG)\n+\t\t\t\t(reg:DI XMM1_REG)\n+\t\t\t\t(reg:DI XMM2_REG)\n+\t\t\t\t(reg:DI XMM3_REG)\n+\t\t\t\t(reg:DI XMM4_REG)\n+\t\t\t\t(reg:DI XMM5_REG)\n+\t\t\t\t(reg:DI XMM6_REG)\n+\t\t\t\t(reg:DI XMM7_REG)] UNSPEC_SSE_PROLOGUE_SAVE))\n \t      (use (match_operand:DI 1 \"register_operand\" \"\"))\n \t      (use (match_operand:DI 2 \"immediate_operand\" \"\"))\n \t      (use (label_ref:DI (match_operand 3 \"\" \"\")))])]\n@@ -21320,14 +21320,14 @@\n (define_insn \"*sse_prologue_save_insn\"\n   [(set (mem:BLK (plus:DI (match_operand:DI 0 \"register_operand\" \"R\")\n \t\t\t  (match_operand:DI 4 \"const_int_operand\" \"n\")))\n-\t(unspec:BLK [(reg:DI 21)\n-\t\t     (reg:DI 22)\n-\t\t     (reg:DI 23)\n-\t\t     (reg:DI 24)\n-\t\t     (reg:DI 25)\n-\t\t     (reg:DI 26)\n-\t\t     (reg:DI 27)\n-\t\t     (reg:DI 28)] UNSPEC_SSE_PROLOGUE_SAVE))\n+\t(unspec:BLK [(reg:DI XMM0_REG)\n+\t\t     (reg:DI XMM1_REG)\n+\t\t     (reg:DI XMM2_REG)\n+\t\t     (reg:DI XMM3_REG)\n+\t\t     (reg:DI XMM4_REG)\n+\t\t     (reg:DI XMM5_REG)\n+\t\t     (reg:DI XMM6_REG)\n+\t\t     (reg:DI XMM7_REG)] UNSPEC_SSE_PROLOGUE_SAVE))\n    (use (match_operand:DI 1 \"register_operand\" \"r\"))\n    (use (match_operand:DI 2 \"const_int_operand\" \"i\"))\n    (use (label_ref:DI (match_operand 3 \"\" \"X\")))]"}]}