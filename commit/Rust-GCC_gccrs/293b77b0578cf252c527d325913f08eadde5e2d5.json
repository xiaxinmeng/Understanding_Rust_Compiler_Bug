{"sha": "293b77b0578cf252c527d325913f08eadde5e2d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkzYjc3YjA1NzhjZjI1MmM1MjdkMzI1OTEzZjA4ZWFkZGU1ZTJkNQ==", "commit": {"author": {"name": "Chao-ying Fu", "email": "fu@mips.com", "date": "2010-11-05T00:26:14Z"}, "committer": {"name": "Chao-ying Fu", "email": "chaoyingfu@gcc.gnu.org", "date": "2010-11-05T00:26:14Z"}, "message": "configure.ac: Test assembler support for DSP Rev1 mult.\n\n2010-11-04  Chao-ying Fu  <fu@mips.com>\n\n\t* configure.ac: Test assembler support for DSP Rev1 mult.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* config/mips/mips.h (ISA_HAS_DSP_MULT): New define.\n\t* config/mips/mips.c (CODE_FOR_mips_mult): New define.\n\t(CODE_FOR_mips_multu): New define.\n\t(mips_builtins): Move madd, maddu, msub, msubu, mult, multu from\n\tdspr2_32 to dsp_32.\n\t(mips_mulsidi3_gen_fn): Test (TARGET_FIX_R4000 && !ISA_HAS_DSP).\n\tDelete returns when ISA_HAS_DSPR2, because the old patterns are deleted.\n\t* config/mips/mips-dsp.md (mips_madd<u>, mips_msub<u>):\n\tNew define_expand patterns.\n\t* config/mips/constraints.md (ka): Update the constraint to test\n\tISA_HAS_DSP_MULT instead of ISA_HAS_DSPR2.\n\t* config/mips/mips-dspr2.md (mips_madd<u>, mips_msub<u>, mips_mult,\n\tmips_multu): Delete.\n\t* config/mips/mips.md (<u>mulsidi3_32bit): Add comments.\n\tChange target constraint to \"ka\".\n\tUse (!TARGET_FIX_R4000 || ISA_HAS_DSP), instead of\n\t(!TARGET_FIX_R4000 && !ISA_HAS_DSPR2).\n\tEmit the accumulator destination when ISA_HAS_DSP_MULT.\n\t(<u>msubsidi4): Add comments.\n\tTest ISA_HAS_DSP.\n\tEmit the accumulator destination when ISA_HAS_DSP_MULT.\n\t(<u>maddsidi4): Likewise.\n\t* doc/extend.texi (MIPS DSP Built-in Functions): Move madd, maddu,\n\tmsub, msubu, mult, multu built-in functions from DSP r2 to DSP r1.\n\nFrom-SVN: r166344", "tree": {"sha": "6b8bba7d8f858fae48851ba021aa3c36731bd2e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b8bba7d8f858fae48851ba021aa3c36731bd2e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/293b77b0578cf252c527d325913f08eadde5e2d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/293b77b0578cf252c527d325913f08eadde5e2d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/293b77b0578cf252c527d325913f08eadde5e2d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/293b77b0578cf252c527d325913f08eadde5e2d5/comments", "author": null, "committer": null, "parents": [{"sha": "1ea3db46777d599b519d267897435760c4932f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea3db46777d599b519d267897435760c4932f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea3db46777d599b519d267897435760c4932f1d"}], "stats": {"total": 212, "additions": 152, "deletions": 60}, "files": [{"sha": "d9227714f837e49236ea5005ef2c796bef14df62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -1,3 +1,33 @@\n+2010-11-04  Chao-ying Fu  <fu@mips.com>\n+\n+\t* configure.ac: Test assembler support for DSP Rev1 mult.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* config/mips/mips.h (ISA_HAS_DSP_MULT): New define.\n+\t* config/mips/mips.c (CODE_FOR_mips_mult): New define.\n+\t(CODE_FOR_mips_multu): New define.\n+\t(mips_builtins): Move madd, maddu, msub, msubu, mult, multu from\n+\tdspr2_32 to dsp_32.\n+\t(mips_mulsidi3_gen_fn): Test (TARGET_FIX_R4000 && !ISA_HAS_DSP).\n+\tDelete returns when ISA_HAS_DSPR2, because the old patterns are deleted.\n+\t* config/mips/mips-dsp.md (mips_madd<u>, mips_msub<u>):\n+\tNew define_expand patterns.\n+\t* config/mips/constraints.md (ka): Update the constraint to test\n+\tISA_HAS_DSP_MULT instead of ISA_HAS_DSPR2.\n+\t* config/mips/mips-dspr2.md (mips_madd<u>, mips_msub<u>, mips_mult,\n+\tmips_multu): Delete.\n+\t* config/mips/mips.md (<u>mulsidi3_32bit): Add comments.\n+\tChange target constraint to \"ka\".\n+\tUse (!TARGET_FIX_R4000 || ISA_HAS_DSP), instead of\n+\t(!TARGET_FIX_R4000 && !ISA_HAS_DSPR2).\n+\tEmit the accumulator destination when ISA_HAS_DSP_MULT.\n+\t(<u>msubsidi4): Add comments.\n+\tTest ISA_HAS_DSP.\n+\tEmit the accumulator destination when ISA_HAS_DSP_MULT.\n+\t(<u>maddsidi4): Likewise.\n+\t* doc/extend.texi (MIPS DSP Built-in Functions): Move madd, maddu,\n+\tmsub, msubu, mult, multu built-in functions from DSP r2 to DSP r1.\n+\n 2010-11-04  Paul Koning  <ni1d@arrl.net>\n \n \t* doc/md.texi (Machine Constraints): Add PDP-11 constraints."}, {"sha": "b6a95b53e19afaea7bcf29d644f3e9529c5b3b1c", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -229,6 +229,12 @@\n #endif\n \n \n+/* Define if your assembler supports DSPR1 mult. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_DSPR1_MULT\n+#endif\n+\n+\n /* Define if your assembler supports .dtprelword. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_DTPRELWORD"}, {"sha": "dcffdb5aed9a0fd64e30f90b9d60483a1b8053d9", "filename": "gcc/config/mips/constraints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fconstraints.md?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -86,8 +86,8 @@\n \n ;; Registers that can be used as the target of multiply-accumulate\n ;; instructions.  The core MIPS32 ISA provides a hi/lo madd,\n-;; but the DSPr2 version allows any accumulator target.\n-(define_register_constraint \"ka\" \"ISA_HAS_DSPR2 ? ACC_REGS : MD_REGS\")\n+;; but the DSP version allows any accumulator target.\n+(define_register_constraint \"ka\" \"ISA_HAS_DSP_MULT ? ACC_REGS : MD_REGS\")\n \n (define_constraint \"kf\"\n   \"@internal\""}, {"sha": "4f518cbc6dda163deaf5b2f1cf195b2eadd184d4", "filename": "gcc/config/mips/mips-dsp.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips-dsp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips-dsp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-dsp.md?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -1181,3 +1181,18 @@\n   \"%*bposge%1\\t%0%/\"\n   [(set_attr \"type\"\t\"branch\")])\n \n+(define_expand \"mips_madd<u>\"\n+  [(set (match_operand:DI 0 \"register_operand\")\n+\t(plus:DI\n+\t (mult:DI (any_extend:DI (match_operand:SI 2 \"register_operand\"))\n+\t\t  (any_extend:DI (match_operand:SI 3 \"register_operand\")))\n+\t (match_operand:DI 1 \"register_operand\")))]\n+  \"ISA_HAS_DSP && !TARGET_64BIT\")\n+\n+(define_expand \"mips_msub<u>\"\n+  [(set (match_operand:DI 0 \"register_operand\")\n+\t(minus:DI\n+\t (match_operand:DI 1 \"register_operand\")\n+\t (mult:DI (any_extend:DI (match_operand:SI 2 \"register_operand\"))\n+\t\t  (any_extend:DI (match_operand:SI 3 \"register_operand\")))))]\n+  \"ISA_HAS_DSP && !TARGET_64BIT\")"}, {"sha": "3a5c7d2ce347e11f2fdfd18409647303d37a562d", "filename": "gcc/config/mips/mips-dspr2.md", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -224,22 +224,6 @@\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n \n-(define_expand \"mips_madd<u>\"\n-  [(set (match_operand:DI 0 \"register_operand\")\n-\t(plus:DI\n-\t (mult:DI (any_extend:DI (match_operand:SI 2 \"register_operand\"))\n-\t\t  (any_extend:DI (match_operand:SI 3 \"register_operand\")))\n-\t (match_operand:DI 1 \"register_operand\")))]\n-  \"ISA_HAS_DSPR2 && !TARGET_64BIT\")\n-\n-(define_expand \"mips_msub<u>\"\n-  [(set (match_operand:DI 0 \"register_operand\")\n-\t(minus:DI\n-\t (match_operand:DI 1 \"register_operand\")\n-\t (mult:DI (any_extend:DI (match_operand:SI 2 \"register_operand\"))\n-\t\t  (any_extend:DI (match_operand:SI 3 \"register_operand\")))))]\n-  \"ISA_HAS_DSPR2 && !TARGET_64BIT\")\n-\n (define_insn \"mulv2hi3\"\n   [(parallel\n     [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n@@ -320,26 +304,6 @@\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n \n-(define_insn \"mips_mult\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=a\")\n-\t(mult:DI\n-\t (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n-\t (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n-  \"mult\\t%q0,%1,%2\"\n-  [(set_attr \"type\"\t\"imul\")\n-   (set_attr \"mode\"\t\"SI\")])\n-\n-(define_insn \"mips_multu\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=a\")\n-\t(mult:DI\n-\t (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n-\t (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n-  \"multu\\t%q0,%1,%2\"\n-  [(set_attr \"type\"\t\"imul\")\n-   (set_attr \"mode\"\t\"SI\")])\n-\n (define_insn \"mips_precr_qb_ph\"\n   [(set (match_operand:V4QI 0 \"register_operand\" \"=d\")\n \t(unspec:V4QI [(match_operand:V2HI 1 \"reg_or_0_operand\" \"dYG\")"}, {"sha": "76c0786713ecd82ad6ddb8cf04a587ce76649ec3", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -12730,6 +12730,8 @@ AVAIL_NON_MIPS16 (cache, TARGET_CACHE_BUILTIN)\n #define CODE_FOR_mips_subq_ph CODE_FOR_subv2hi3\n #define CODE_FOR_mips_subu_qb CODE_FOR_subv4qi3\n #define CODE_FOR_mips_mul_ph CODE_FOR_mulv2hi3\n+#define CODE_FOR_mips_mult CODE_FOR_mulsidi3_32bit\n+#define CODE_FOR_mips_multu CODE_FOR_umulsidi3_32bit\n \n #define CODE_FOR_loongson_packsswh CODE_FOR_vec_pack_ssat_v2si\n #define CODE_FOR_loongson_packsshb CODE_FOR_vec_pack_ssat_v4hi\n@@ -12928,17 +12930,17 @@ static const struct mips_builtin_description mips_builtins[] = {\n   DIRECT_BUILTIN (extpdp, MIPS_SI_FTYPE_DI_SI, dsp_32),\n   DIRECT_BUILTIN (shilo, MIPS_DI_FTYPE_DI_SI, dsp_32),\n   DIRECT_BUILTIN (mthlip, MIPS_DI_FTYPE_DI_SI, dsp_32),\n+  DIRECT_BUILTIN (madd, MIPS_DI_FTYPE_DI_SI_SI, dsp_32),\n+  DIRECT_BUILTIN (maddu, MIPS_DI_FTYPE_DI_USI_USI, dsp_32),\n+  DIRECT_BUILTIN (msub, MIPS_DI_FTYPE_DI_SI_SI, dsp_32),\n+  DIRECT_BUILTIN (msubu, MIPS_DI_FTYPE_DI_USI_USI, dsp_32),\n+  DIRECT_BUILTIN (mult, MIPS_DI_FTYPE_SI_SI, dsp_32),\n+  DIRECT_BUILTIN (multu, MIPS_DI_FTYPE_USI_USI, dsp_32),\n \n   /* The following are for the MIPS DSP ASE REV 2 (32-bit only).  */\n   DIRECT_BUILTIN (dpa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n   DIRECT_BUILTIN (dps_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n-  DIRECT_BUILTIN (madd, MIPS_DI_FTYPE_DI_SI_SI, dspr2_32),\n-  DIRECT_BUILTIN (maddu, MIPS_DI_FTYPE_DI_USI_USI, dspr2_32),\n-  DIRECT_BUILTIN (msub, MIPS_DI_FTYPE_DI_SI_SI, dspr2_32),\n-  DIRECT_BUILTIN (msubu, MIPS_DI_FTYPE_DI_USI_USI, dspr2_32),\n   DIRECT_BUILTIN (mulsa_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n-  DIRECT_BUILTIN (mult, MIPS_DI_FTYPE_SI_SI, dspr2_32),\n-  DIRECT_BUILTIN (multu, MIPS_DI_FTYPE_USI_USI, dspr2_32),\n   DIRECT_BUILTIN (dpax_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n   DIRECT_BUILTIN (dpsx_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n   DIRECT_BUILTIN (dpaqx_s_w_ph, MIPS_DI_FTYPE_DI_V2HI_V2HI, dspr2_32),\n@@ -16173,10 +16175,8 @@ mips_mulsidi3_gen_fn (enum rtx_code ext_code)\n     }\n   else\n     {\n-      if (TARGET_FIX_R4000)\n+      if (TARGET_FIX_R4000 && !ISA_HAS_DSP)\n \treturn signed_p ? gen_mulsidi3_32bit_r4000 : gen_umulsidi3_32bit_r4000;\n-      if (ISA_HAS_DSPR2)\n-\treturn signed_p ? gen_mips_mult : gen_mips_multu;\n       return signed_p ? gen_mulsidi3_32bit : gen_umulsidi3_32bit;\n     }\n }"}, {"sha": "7b5e140f9a821bea15377219615ae9b128a025d4", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -180,6 +180,13 @@ enum mips_code_readable_setting {\n #define TARGET_WRITABLE_EH_FRAME (flag_pic && TARGET_SHARED)\n #endif\n \n+/* Test the assembler to set ISA_HAS_DSP_MULT to DSP Rev 1 or 2.  */\n+#ifdef HAVE_AS_DSPR1_MULT\n+#define ISA_HAS_DSP_MULT ISA_HAS_DSP\n+#else\n+#define ISA_HAS_DSP_MULT ISA_HAS_DSPR2\n+#endif\n+\n /* Generate mips16 code */\n #define TARGET_MIPS16\t\t((target_flags & MASK_MIPS16) != 0)\n /* Generate mips16e code. Default 16bit ASE for mips32* and mips64* */"}, {"sha": "b7893941408b66106e404a9eda98c758b5084e38", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -1731,12 +1731,20 @@\n   DONE;\n })\n \n+;; As well as being named patterns, these instructions are used by the\n+;; __builtin_mips_mult<u>() functions.  We must always make those functions\n+;; available if !TARGET_64BIT && ISA_HAS_DSP.\n (define_insn \"<u>mulsidi3_32bit\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:DI 0 \"register_operand\" \"=ka\")\n \t(mult:DI (any_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t\t (any_extend:DI (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"!TARGET_64BIT && !TARGET_FIX_R4000 && !ISA_HAS_DSPR2\"\n-  \"mult<u>\\t%1,%2\"\n+  \"!TARGET_64BIT && (!TARGET_FIX_R4000 || ISA_HAS_DSP)\"\n+{\n+  if (ISA_HAS_DSP_MULT)\n+    return \"mult<u>\\t%q0,%1,%2\";\n+  else\n+    return \"mult<u>\\t%1,%2\";\n+}\n   [(set_attr \"type\" \"imul\")\n    (set_attr \"mode\" \"SI\")])\n \n@@ -1856,16 +1864,23 @@\n   [(set_attr \"type\" \"imul\")\n    (set_attr \"mode\" \"SI\")])\n \n+;; As well as being named patterns, these instructions are used by the\n+;; __builtin_mips_msub<u>() functions.  We must always make those functions\n+;; available if !TARGET_64BIT && ISA_HAS_DSP.\n+;;\n+;; This leads to a slight inconsistency.  We honor any tuning overrides\n+;; in GENERATE_MADD_MSUB for -mno-dsp, but always ignore them for -mdsp,\n+;; even if !ISA_HAS_DSP_MULT.\n (define_insn \"<u>msubsidi4\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=ka\")\n         (minus:DI\n \t   (match_operand:DI 3 \"register_operand\" \"0\")\n \t   (mult:DI\n \t      (any_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t      (any_extend:DI (match_operand:SI 2 \"register_operand\" \"d\")))))]\n-  \"!TARGET_64BIT && (ISA_HAS_MSAC || GENERATE_MADD_MSUB || ISA_HAS_DSPR2)\"\n+  \"!TARGET_64BIT && (ISA_HAS_MSAC || GENERATE_MADD_MSUB || ISA_HAS_DSP)\"\n {\n-  if (ISA_HAS_DSPR2)\n+  if (ISA_HAS_DSP_MULT)\n     return \"msub<u>\\t%q0,%1,%2\";\n   else if (TARGET_MIPS5500 || GENERATE_MADD_MSUB)\n     return \"msub<u>\\t%1,%2\";\n@@ -2036,18 +2051,20 @@\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n \n+;; See the comment above <u>msubsidi4 for the relationship between\n+;; ISA_HAS_DSP and ISA_HAS_DSP_MULT.\n (define_insn \"<u>maddsidi4\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=ka\")\n \t(plus:DI\n \t (mult:DI (any_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t\t  (any_extend:DI (match_operand:SI 2 \"register_operand\" \"d\")))\n \t (match_operand:DI 3 \"register_operand\" \"0\")))]\n-  \"(TARGET_MAD || ISA_HAS_MACC || GENERATE_MADD_MSUB || ISA_HAS_DSPR2)\n+  \"(TARGET_MAD || ISA_HAS_MACC || GENERATE_MADD_MSUB || ISA_HAS_DSP)\n    && !TARGET_64BIT\"\n {\n   if (TARGET_MAD)\n     return \"mad<u>\\t%1,%2\";\n-  else if (ISA_HAS_DSPR2)\n+  else if (ISA_HAS_DSP_MULT)\n     return \"madd<u>\\t%q0,%1,%2\";\n   else if (GENERATE_MADD_MSUB || TARGET_MIPS5500)\n     return \"madd<u>\\t%1,%2\";"}, {"sha": "c8d81d4ba500f5149f88681b800c8bb94deaf332", "filename": "gcc/configure", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -24539,6 +24539,45 @@ if test $gcc_cv_as_mips_dtprelword = yes; then\n \n $as_echo \"#define HAVE_AS_DTPRELWORD 1\" >>confdefs.h\n \n+fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for DSPR1 mult with four accumulators support\" >&5\n+$as_echo_n \"checking assembler for DSPR1 mult with four accumulators support... \" >&6; }\n+if test \"${gcc_cv_as_mips_dspr1_mult+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_mips_dspr1_mult=no\n+  if test x$gcc_cv_as != x; then\n+    echo '\t.set\tmips32r2\n+\t.set\tnodspr2\n+\t.set\tdsp\n+\tmadd\t$ac3,$4,$5\n+\tmaddu\t$ac3,$4,$5\n+\tmsub\t$ac3,$4,$5\n+\tmsubu\t$ac3,$4,$5\n+\tmult\t$ac3,$4,$5\n+\tmultu\t$ac3,$4,$5' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_mips_dspr1_mult=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_mips_dspr1_mult\" >&5\n+$as_echo \"$gcc_cv_as_mips_dspr1_mult\" >&6; }\n+if test $gcc_cv_as_mips_dspr1_mult = yes; then\n+\n+$as_echo \"#define HAVE_AS_DSPR1_MULT 1\" >>confdefs.h\n+\n fi\n \n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler and linker for explicit JALR relocation\" >&5"}, {"sha": "a61e5f1fca1288bcb9b6f30dc4034b52a353b72a", "filename": "gcc/configure.ac", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -3654,6 +3654,20 @@ x:\n       [AC_DEFINE(HAVE_AS_DTPRELWORD, 1,\n \t  [Define if your assembler supports .dtprelword.])])\n \n+    gcc_GAS_CHECK_FEATURE([DSPR1 mult with four accumulators support],\n+      gcc_cv_as_mips_dspr1_mult,,,\n+[\t.set\tmips32r2\n+\t.set\tnodspr2\n+\t.set\tdsp\n+\tmadd\t$ac3,$4,$5\n+\tmaddu\t$ac3,$4,$5\n+\tmsub\t$ac3,$4,$5\n+\tmsubu\t$ac3,$4,$5\n+\tmult\t$ac3,$4,$5\n+\tmultu\t$ac3,$4,$5],,\n+      [AC_DEFINE(HAVE_AS_DSPR1_MULT, 1,\n+\t  [Define if your assembler supports DSPR1 mult.])])\n+\n     AC_MSG_CHECKING(assembler and linker for explicit JALR relocation)\n     gcc_cv_as_ld_jalr_reloc=no\n     if test $gcc_cv_as_mips_explicit_relocs = yes; then"}, {"sha": "95e9d8808f8e05a8b96b1824bc9918c768ffdb1b", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293b77b0578cf252c527d325913f08eadde5e2d5/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=293b77b0578cf252c527d325913f08eadde5e2d5", "patch": "@@ -9646,6 +9646,12 @@ i32 __builtin_mips_lbux (void *, i32)\n i32 __builtin_mips_lhx (void *, i32)\n i32 __builtin_mips_lwx (void *, i32)\n i32 __builtin_mips_bposge32 (void)\n+a64 __builtin_mips_madd (a64, i32, i32);\n+a64 __builtin_mips_maddu (a64, ui32, ui32);\n+a64 __builtin_mips_msub (a64, i32, i32);\n+a64 __builtin_mips_msubu (a64, ui32, ui32);\n+a64 __builtin_mips_mult (i32, i32);\n+a64 __builtin_mips_multu (ui32, ui32);\n @end smallexample\n \n The following built-in functions map directly to a particular MIPS DSP REV 2\n@@ -9665,18 +9671,12 @@ i32 __builtin_mips_cmpgdu_lt_qb (v4i8, v4i8);\n i32 __builtin_mips_cmpgdu_le_qb (v4i8, v4i8);\n a64 __builtin_mips_dpa_w_ph (a64, v2i16, v2i16);\n a64 __builtin_mips_dps_w_ph (a64, v2i16, v2i16);\n-a64 __builtin_mips_madd (a64, i32, i32);\n-a64 __builtin_mips_maddu (a64, ui32, ui32);\n-a64 __builtin_mips_msub (a64, i32, i32);\n-a64 __builtin_mips_msubu (a64, ui32, ui32);\n v2i16 __builtin_mips_mul_ph (v2i16, v2i16);\n v2i16 __builtin_mips_mul_s_ph (v2i16, v2i16);\n q31 __builtin_mips_mulq_rs_w (q31, q31);\n v2q15 __builtin_mips_mulq_s_ph (v2q15, v2q15);\n q31 __builtin_mips_mulq_s_w (q31, q31);\n a64 __builtin_mips_mulsa_w_ph (a64, v2i16, v2i16);\n-a64 __builtin_mips_mult (i32, i32);\n-a64 __builtin_mips_multu (ui32, ui32);\n v4i8 __builtin_mips_precr_qb_ph (v2i16, v2i16);\n v2i16 __builtin_mips_precr_sra_ph_w (i32, i32, imm0_31);\n v2i16 __builtin_mips_precr_sra_r_ph_w (i32, i32, imm0_31);"}]}