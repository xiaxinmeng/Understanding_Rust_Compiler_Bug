{"sha": "9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM3YzlmMTBjM2JhYzVhN2IzYzVhNDZmNTI0NDljZDA5NWE3NjdkYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-06-22T18:02:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-06-22T18:02:06Z"}, "message": "re PR tree-optimization/49493 (ICE: in insert_vi_for_tree, at tree-ssa-structalias.c:2637 with -O -fipa-pta)\n\n2011-06-22  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49493\n\t* tree-ssa-structalias.c (get_constraint_for_ssa_var):\n\tRefer to the alias target of variables.\n\t(associate_varinfo_to_alias_1): Remove.\n\t(ipa_pta_execute): Do not associate aliases with anything.\n\t* cgraph.h (varpool_alias_aliased_node): Fix cut&paste errors.\n\t(cgraph_function_node): Likewise.\n\t(cgraph_function_or_thunk_node): Likewise.\n\t(varpool_variable_node): Likewise.\n\n\t* gcc.dg/ipa/ipa-pta-17.c: New testcase.\n\nFrom-SVN: r175300", "tree": {"sha": "09cf8e6a4c12901e2c4ac308c41636ffb5c92b2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09cf8e6a4c12901e2c4ac308c41636ffb5c92b2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b902b811ba4b83f0bbd3c684d1bf01b4660c650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b902b811ba4b83f0bbd3c684d1bf01b4660c650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b902b811ba4b83f0bbd3c684d1bf01b4660c650"}], "stats": {"total": 57, "additions": 40, "deletions": 17}, "files": [{"sha": "bfb27d6ee22a6f2d2b20c451d019dfeaaa72c011", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "patch": "@@ -1,3 +1,15 @@\n+2011-06-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49493\n+\t* tree-ssa-structalias.c (get_constraint_for_ssa_var):\n+\tRefer to the alias target of variables.\n+\t(associate_varinfo_to_alias_1): Remove.\n+\t(ipa_pta_execute): Do not associate aliases with anything.\n+\t* cgraph.h (varpool_alias_aliased_node): Fix cut&paste errors.\n+\t(cgraph_function_node): Likewise.\n+\t(cgraph_function_or_thunk_node): Likewise.\n+\t(varpool_variable_node): Likewise.\n+\n 2011-06-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/arm/arm.h (OPTION_DEFAULT_SPECS): Fix -mtls-dialect"}, {"sha": "f912af2a39363094c65fc2a9998e754350df9732", "filename": "gcc/cgraph.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "patch": "@@ -981,7 +981,7 @@ varpool_alias_aliased_node (struct varpool_node *n)\n \n   ipa_ref_list_reference_iterate (&n->ref_list, 0, ref);\n   gcc_checking_assert (ref->use == IPA_REF_ALIAS);\n-  if (ref->refered_type == IPA_REF_CGRAPH)\n+  if (ref->refered_type == IPA_REF_VARPOOL)\n     return ipa_ref_varpool_node (ref);\n   return NULL;\n }\n@@ -1011,7 +1011,7 @@ cgraph_function_node (struct cgraph_node *node, enum availability *availability)\n \t    *availability = a;\n \t}\n     }\n-  if (*availability)\n+  if (availability)\n     *availability = AVAIL_NOT_AVAILABLE;\n   return NULL;\n }\n@@ -1039,7 +1039,7 @@ cgraph_function_or_thunk_node (struct cgraph_node *node, enum availability *avai\n \t    *availability = a;\n \t}\n     }\n-  if (*availability)\n+  if (availability)\n     *availability = AVAIL_NOT_AVAILABLE;\n   return NULL;\n }\n@@ -1067,7 +1067,7 @@ varpool_variable_node (struct varpool_node *node, enum availability *availabilit\n \t    *availability = a;\n \t}\n     }\n-  if (*availability)\n+  if (availability)\n     *availability = AVAIL_NOT_AVAILABLE;\n   return NULL;\n }"}, {"sha": "189cd3967309ff2fa05af2616147fbb289063dba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "patch": "@@ -1,3 +1,8 @@\n+2011-06-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49493\n+\t* gcc.dg/ipa/ipa-pta-17.c: New testcase.\n+\n 2011-06-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/49260"}, {"sha": "e409e4cfb624a7ba4a858411a2b69dbeaa783a95", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-pta-17.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-pta-17.c?ref=9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fipa-pta\" } */\n+\n+static int i;\n+extern int j __attribute__ ((alias (\"i\")));\n+int *p = &j;"}, {"sha": "4127e0376323504a82ca7f1612b0dadb3828d1cf", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c7c9f10c3bac5a7b3c5a46f52449cd095a767da/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=9c7c9f10c3bac5a7b3c5a46f52449cd095a767da", "patch": "@@ -2746,6 +2746,18 @@ get_constraint_for_ssa_var (tree t, VEC(ce_s, heap) **results, bool address_p)\n       return;\n     }\n \n+  /* For global variables resort to the alias target.  */\n+  if (TREE_CODE (t) == VAR_DECL\n+      && (TREE_STATIC (t) || DECL_EXTERNAL (t)))\n+    {\n+      struct varpool_node *node = varpool_get_node (t);\n+      if (node && node->alias)\n+\t{\n+\t  node = varpool_variable_node (node, NULL);\n+\t  t = node->decl;\n+\t}\n+    }\n+\n   vi = get_vi_for_tree (t);\n   cexpr.var = vi->id;\n   cexpr.type = SCALAR;\n@@ -6703,16 +6715,6 @@ associate_varinfo_to_alias (struct cgraph_node *node, void *data)\n   return false;\n }\n \n-/* Associate node with varinfo DATA. Worker for\n-   varpool_for_node_and_aliases.  */\n-static bool\n-associate_varinfo_to_alias_1 (struct varpool_node *node, void *data)\n-{\n-  if (node->alias)\n-    insert_vi_for_tree (node->decl, (varinfo_t)data);\n-  return false;\n-}\n-\n /* Execute the driver for IPA PTA.  */\n static unsigned int\n ipa_pta_execute (void)\n@@ -6744,12 +6746,10 @@ ipa_pta_execute (void)\n   /* Create constraints for global variables and their initializers.  */\n   for (var = varpool_nodes; var; var = var->next)\n     {\n-      varinfo_t vi;\n       if (var->alias)\n \tcontinue;\n \n-      vi = get_vi_for_tree (var->decl);\n-      varpool_for_node_and_aliases (var, associate_varinfo_to_alias_1, vi, true);\n+      get_vi_for_tree (var->decl);\n     }\n \n   if (dump_file)"}]}