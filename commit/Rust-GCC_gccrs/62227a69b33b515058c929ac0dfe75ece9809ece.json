{"sha": "62227a69b33b515058c929ac0dfe75ece9809ece", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIyMjdhNjliMzNiNTE1MDU4YzkyOWFjMGRmZTc1ZWNlOTgwOWVjZQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-12-26T23:29:20Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-12-26T23:29:20Z"}, "message": "re PR fortran/83540 (Invalid code with MATMUL, -fno-realloc-lhs -ffrontend-optimize)\n\n2017-12-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83540\n\t* frontend-passes.c (create_var): If an array to be created\n\thas unknown size and -fno-realloc-lhs is in effect,\n\treturn NULL.\n\n2017-12-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83540\n\t* gfortran.dg/inline_matmul_20.f90: New test.\n\nFrom-SVN: r256003", "tree": {"sha": "a6d14470e38ef1c80e447256045a58ba5c0a368b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6d14470e38ef1c80e447256045a58ba5c0a368b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62227a69b33b515058c929ac0dfe75ece9809ece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62227a69b33b515058c929ac0dfe75ece9809ece", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62227a69b33b515058c929ac0dfe75ece9809ece", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62227a69b33b515058c929ac0dfe75ece9809ece/comments", "author": null, "committer": null, "parents": [{"sha": "fa9d9dc25d68f8dfa11377f4f7caa8aa38643efd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9d9dc25d68f8dfa11377f4f7caa8aa38643efd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9d9dc25d68f8dfa11377f4f7caa8aa38643efd"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "c28f4fee6f304adb1ed5278f5ac085d1e6615dd2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62227a69b33b515058c929ac0dfe75ece9809ece/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62227a69b33b515058c929ac0dfe75ece9809ece/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=62227a69b33b515058c929ac0dfe75ece9809ece", "patch": "@@ -1,3 +1,10 @@\n+2017-12-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83540\n+\t* frontend-passes.c (create_var): If an array to be created\n+\thas unknown size and -fno-realloc-lhs is in effect,\n+\treturn NULL.\n+\n 2017-12-22  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n             Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "7c515f63b19c68dd2f428fb0092b88b2d61e941e", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62227a69b33b515058c929ac0dfe75ece9809ece/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62227a69b33b515058c929ac0dfe75ece9809ece/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=62227a69b33b515058c929ac0dfe75ece9809ece", "patch": "@@ -720,6 +720,11 @@ create_var (gfc_expr * e, const char *vname)\n   if (e->expr_type == EXPR_CONSTANT || is_fe_temp (e))\n     return gfc_copy_expr (e);\n \n+  /* Creation of an array of unknown size requires realloc on assignment.\n+     If that is not possible, just return NULL.  */\n+  if (flag_realloc_lhs == 0 && e->rank > 0 && e->shape == NULL)\n+    return NULL;\n+\n   ns = insert_block ();\n \n   if (vname)"}, {"sha": "14e8e3f03701608a117788c8b2a837db6b3eb9d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62227a69b33b515058c929ac0dfe75ece9809ece/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62227a69b33b515058c929ac0dfe75ece9809ece/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62227a69b33b515058c929ac0dfe75ece9809ece", "patch": "@@ -1,3 +1,8 @@\n+2017-12-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83540\n+\t* gfortran.dg/inline_matmul_20.f90: New test.\n+\n 2017-12-26  Tom de Vries  <tom@codesourcery.com>\n \n \t* c-c++-common/unroll-5.c: Use relative line number."}, {"sha": "0f8728ab1dce0f84db4a228f2cc8b796b10af4a3", "filename": "gcc/testsuite/gfortran.dg/inline_matmul_20.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62227a69b33b515058c929ac0dfe75ece9809ece/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62227a69b33b515058c929ac0dfe75ece9809ece/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_matmul_20.f90?ref=62227a69b33b515058c929ac0dfe75ece9809ece", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do  run }\n+! { dg-additional-options \"-fno-realloc-lhs -ffrontend-optimize\" }\n+! This used to segfault at runtime.\n+! Original test case by Harald Anlauf.\n+program gfcbug142\n+  implicit none\n+  real, allocatable :: b(:,:)\n+  integer :: n = 5\n+  character(len=20) :: line\n+  allocate (b(n,n))\n+  call random_number (b)\n+  write (unit=line,fmt='(2I5)') shape (matmul (b, transpose (b)))\n+  if (line /= '    5    5') call abort\n+end program gfcbug142"}]}