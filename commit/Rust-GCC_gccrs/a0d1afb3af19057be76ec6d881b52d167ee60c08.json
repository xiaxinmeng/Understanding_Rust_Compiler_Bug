{"sha": "a0d1afb3af19057be76ec6d881b52d167ee60c08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkMWFmYjNhZjE5MDU3YmU3NmVjNmQ4ODFiNTJkMTY3ZWU2MGMwOA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-08-11T20:27:43Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:27:43Z"}, "message": "Remove uses of loop->single_iv.\n\n2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* cfgloop.c (alloc_loop): Remove initialization of loop->single_iv.\n\t* cfgloop.h (struct loop): Remove single_iv field.\n\t* graphite-sese-to-poly.c (graphite_loop_normal_form): Removed.\n\t(scop_canonicalize_loops): Removed.\n\t(scop_ivs_can_be_represented): Do not use loop->single_iv.  Iterate\n\tover all the loop phi nodes in loop->header.\n\t(build_poly_scop): Remove use of scop_canonicalize_loops.\n\nFrom-SVN: r163142", "tree": {"sha": "61c9086252ee9a5fa7d40fead8a77829b22caa24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c9086252ee9a5fa7d40fead8a77829b22caa24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0d1afb3af19057be76ec6d881b52d167ee60c08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d1afb3af19057be76ec6d881b52d167ee60c08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d1afb3af19057be76ec6d881b52d167ee60c08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d1afb3af19057be76ec6d881b52d167ee60c08/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dba9acfad326feb19a28fcae3b7207c90a70511a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba9acfad326feb19a28fcae3b7207c90a70511a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba9acfad326feb19a28fcae3b7207c90a70511a"}], "stats": {"total": 87, "additions": 31, "deletions": 56}, "files": [{"sha": "08bb970544169259627d0f15cf015dc4d9c3e9be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0d1afb3af19057be76ec6d881b52d167ee60c08", "patch": "@@ -1,3 +1,13 @@\n+2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* cfgloop.c (alloc_loop): Remove initialization of loop->single_iv.\n+\t* cfgloop.h (struct loop): Remove single_iv field.\n+\t* graphite-sese-to-poly.c (graphite_loop_normal_form): Removed.\n+\t(scop_canonicalize_loops): Removed.\n+\t(scop_ivs_can_be_represented): Do not use loop->single_iv.  Iterate\n+\tover all the loop phi nodes in loop->header.\n+\t(build_poly_scop): Remove use of scop_canonicalize_loops.\n+\n 2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (rewrite_cross_bb_scalar_deps): Also"}, {"sha": "07b48a37fb32999c0cc38520def23db51606fddf", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=a0d1afb3af19057be76ec6d881b52d167ee60c08", "patch": "@@ -1,3 +1,13 @@\n+2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* cfgloop.c (alloc_loop): Remove initialization of loop->single_iv.\n+\t* cfgloop.h (struct loop): Remove single_iv field.\n+\t* graphite-sese-to-poly.c (graphite_loop_normal_form): Removed.\n+\t(scop_canonicalize_loops): Removed.\n+\t(scop_ivs_can_be_represented): Do not use loop->single_iv.  Iterate\n+\tover all the loop phi nodes in loop->header.\n+\t(build_poly_scop): Remove use of scop_canonicalize_loops.\n+\n 2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (rewrite_cross_bb_scalar_deps): Also"}, {"sha": "24f0ebc792e32d775fde0eb27785b5a3b0b7e157", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=a0d1afb3af19057be76ec6d881b52d167ee60c08", "patch": "@@ -339,7 +339,6 @@ alloc_loop (void)\n   loop->exits = ggc_alloc_cleared_loop_exit ();\n   loop->exits->next = loop->exits->prev = loop->exits;\n   loop->can_be_parallel = false;\n-  loop->single_iv = NULL_TREE;\n \n   return loop;\n }"}, {"sha": "1f0e3ca34266ac737929de48fb9f97534c6d1f52", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=a0d1afb3af19057be76ec6d881b52d167ee60c08", "patch": "@@ -165,10 +165,6 @@ struct GTY ((chain_next (\"%h.next\"))) loop {\n \n   /* Head of the cyclic list of the exits of the loop.  */\n   struct loop_exit *exits;\n-\n-  /* The single induction variable of the loop when the loop is in\n-     normal form.  */\n-  tree single_iv;\n };\n \n /* Flags for state of loop structure.  */"}, {"sha": "5a8db3dbf80dfcc980d168e25b91ede6b28a5bd9", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 11, "deletions": 51, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d1afb3af19057be76ec6d881b52d167ee60c08/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=a0d1afb3af19057be76ec6d881b52d167ee60c08", "patch": "@@ -2906,45 +2906,6 @@ rewrite_commutative_reductions_out_of_ssa (sese region, sbitmap reductions)\n #endif\n }\n \n-/* A LOOP is in normal form for Graphite when it contains only one\n-   scalar phi node that defines the main induction variable of the\n-   loop, only one increment of the IV, and only one exit condition.  */\n-\n-static void\n-graphite_loop_normal_form (loop_p loop)\n-{\n-  struct tree_niter_desc niter;\n-  tree nit;\n-  gimple_seq stmts;\n-  edge exit = single_dom_exit (loop);\n-\n-  bool known_niter = number_of_iterations_exit (loop, exit, &niter, false);\n-\n-  /* At this point we should know the number of iterations.  */\n-  gcc_assert (known_niter);\n-\n-  nit = force_gimple_operand (unshare_expr (niter.niter), &stmts, true,\n-\t\t\t      NULL_TREE);\n-  if (stmts)\n-    gsi_insert_seq_on_edge_immediate (loop_preheader_edge (loop), stmts);\n-\n-  loop->single_iv = canonicalize_loop_ivs (loop, &nit, false);\n-}\n-\n-/* Rewrite all the loops of SCOP in normal form: one induction\n-   variable per loop.  */\n-\n-static void\n-scop_canonicalize_loops (scop_p scop)\n-{\n-  loop_iterator li;\n-  loop_p loop;\n-\n-  FOR_EACH_LOOP (li, loop, 0)\n-    if (loop_in_sese_p (loop, SCOP_REGION (scop)))\n-      graphite_loop_normal_form (loop);\n-}\n-\n /* Java does not initialize long_long_integer_type_node.  */\n #define my_long_long (long_long_integer_type_node ? long_long_integer_type_node : ssizetype)\n \n@@ -2957,24 +2918,24 @@ scop_ivs_can_be_represented (scop_p scop)\n {\n   loop_iterator li;\n   loop_p loop;\n+  gimple_stmt_iterator psi;\n \n   FOR_EACH_LOOP (li, loop, 0)\n     {\n-      tree type;\n-      int precision;\n-\n       if (!loop_in_sese_p (loop, SCOP_REGION (scop)))\n \tcontinue;\n \n-      if (!loop->single_iv)\n-\tcontinue;\n-\n-      type = TREE_TYPE (loop->single_iv);\n-      precision = TYPE_PRECISION (type);\n+      for (psi = gsi_start_phis (loop->header);\n+\t   !gsi_end_p (psi); gsi_next (&psi))\n+\t{\n+\t  gimple phi = gsi_stmt (psi);\n+\t  tree res = PHI_RESULT (phi);\n+\t  tree type = TREE_TYPE (res);\n \n-      if (TYPE_UNSIGNED (type)\n-\t  && precision >= TYPE_PRECISION (my_long_long))\n-\treturn false;\n+\t  if (TYPE_UNSIGNED (type)\n+\t      && TYPE_PRECISION (type) >= TYPE_PRECISION (my_long_long))\n+\t    return false;\n+\t}\n     }\n \n   return true;\n@@ -2998,7 +2959,6 @@ build_poly_scop (scop_p scop)\n   if (nb_pbbs_in_loops (scop) == 0)\n     return;\n \n-  scop_canonicalize_loops (scop);\n   if (!scop_ivs_can_be_represented (scop))\n     return;\n "}]}