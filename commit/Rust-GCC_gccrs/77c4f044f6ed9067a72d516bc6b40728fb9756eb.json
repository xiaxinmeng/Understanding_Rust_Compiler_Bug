{"sha": "77c4f044f6ed9067a72d516bc6b40728fb9756eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdjNGYwNDRmNmVkOTA2N2E3MmQ1MTZiYzZiNDA3MjhmYjk3NTZlYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-10-24T19:01:46Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-10-24T19:01:46Z"}, "message": "pa.c (store_reg_modify): Set RTX_FRAME_RELATED_P on each set in parallel.\n\n\t* pa.c (store_reg_modify): Set RTX_FRAME_RELATED_P on each set in\n\tparallel.\n\t(hppa_expand_prologue): Likewise.\n\nFrom-SVN: r105856", "tree": {"sha": "f9335828a5d02f72fa609e514c166fd78ca5495d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9335828a5d02f72fa609e514c166fd78ca5495d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77c4f044f6ed9067a72d516bc6b40728fb9756eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c4f044f6ed9067a72d516bc6b40728fb9756eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77c4f044f6ed9067a72d516bc6b40728fb9756eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c4f044f6ed9067a72d516bc6b40728fb9756eb/comments", "author": null, "committer": null, "parents": [{"sha": "3674b34daf6b281648cc01d31fe85e5d7a5dfe3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3674b34daf6b281648cc01d31fe85e5d7a5dfe3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3674b34daf6b281648cc01d31fe85e5d7a5dfe3f"}], "stats": {"total": 40, "additions": 10, "deletions": 30}, "files": [{"sha": "14e264cef8fb5f08ccf5993c44fc1986b698a6ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77c4f044f6ed9067a72d516bc6b40728fb9756eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77c4f044f6ed9067a72d516bc6b40728fb9756eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77c4f044f6ed9067a72d516bc6b40728fb9756eb", "patch": "@@ -1,3 +1,9 @@\n+2005-10-24  Richard Henderson  <rth@redhat.com>\n+\n+\t* pa.c (store_reg_modify): Set RTX_FRAME_RELATED_P on each set in\n+\tparallel.\n+\t(hppa_expand_prologue): Likewise.\n+\n 2005-10-24  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa-linux.h (NO_PROFILE_COUNTERS): Delete define."}, {"sha": "6f77f4ffdb347e48451b679f775f07ea34314fcb", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 4, "deletions": 30, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77c4f044f6ed9067a72d516bc6b40728fb9756eb/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77c4f044f6ed9067a72d516bc6b40728fb9756eb/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=77c4f044f6ed9067a72d516bc6b40728fb9756eb", "patch": "@@ -3326,25 +3326,9 @@ store_reg_modify (int base, int reg, HOST_WIDE_INT mod)\n       RTX_FRAME_RELATED_P (insn) = 1;\n \n       /* RTX_FRAME_RELATED_P must be set on each frame related set\n-\t in a parallel with more than one element.  Don't set\n-\t RTX_FRAME_RELATED_P in the first set if reg is temporary\n-\t register 1. The effect of this operation is recorded in\n-\t the initial copy.  */\n-      if (reg != 1)\n-\t{\n-\t  RTX_FRAME_RELATED_P (XVECEXP (PATTERN (insn), 0, 0)) = 1;\n-\t  RTX_FRAME_RELATED_P (XVECEXP (PATTERN (insn), 0, 1)) = 1;\n-\t}\n-      else\n-\t{\n-\t  /* The first element of a PARALLEL is always processed if it is\n-\t     a SET.  Thus, we need an expression list for this case.  */\n-\t  REG_NOTES (insn)\n-\t    = gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR,\n-\t\tgen_rtx_SET (VOIDmode, basereg,\n-\t\t\t     gen_rtx_PLUS (word_mode, basereg, delta)),\n-                REG_NOTES (insn));\n-\t}\n+\t in a parallel with more than one element.  */\n+      RTX_FRAME_RELATED_P (XVECEXP (PATTERN (insn), 0, 0)) = 1;\n+      RTX_FRAME_RELATED_P (XVECEXP (PATTERN (insn), 0, 1)) = 1;\n     }\n }\n \n@@ -3578,17 +3562,7 @@ hppa_expand_prologue (void)\n \t     frames.  */\n \t  insn = emit_move_insn (tmpreg, frame_pointer_rtx);\n \t  if (DO_FRAME_NOTES)\n-\t    {\n-\t      /* We need to record the frame pointer save here since the\n-\t         new frame pointer is set in the following insn.  */\n-\t      RTX_FRAME_RELATED_P (insn) = 1;\n-\t      REG_NOTES (insn)\n-\t\t= gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR,\n-\t\t    gen_rtx_SET (VOIDmode,\n-\t\t\t\t gen_rtx_MEM (word_mode, stack_pointer_rtx),\n-\t\t\t         frame_pointer_rtx),\n-\t\t    REG_NOTES (insn));\n-\t    }\n+\t    RTX_FRAME_RELATED_P (insn) = 1;\n \n \t  insn = emit_move_insn (frame_pointer_rtx, stack_pointer_rtx);\n \t  if (DO_FRAME_NOTES)"}]}