{"sha": "c913b6f18e999e16f5f127c2f9a839e610ff9e18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxM2I2ZjE4ZTk5OWUxNmY1ZjEyN2MyZjlhODM5ZTYxMGZmOWUxOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-01-28T01:50:22Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-01-28T01:50:22Z"}, "message": "configure.in: Arrange to include defaults.h in [ht]config.h/tm.h.\n\n\t* configure.in: Arrange to include defaults.h in [ht]config.h/tm.h.\n\n\t* Makefile.in: Remove all dependencies on defaults.h.\n\t* builtins.c: Don't include defaults.h.\n\t* c-common.c: Likewise.\n\t* c-decl.c: Likewise.\n\t* c-pragma.c: Likewise.\n\t* c-typeck.c: Likewise.\n\t* combine.c: Likewise.\n\t* i386.c: Likewise.\n\t* frame-ia64.c: Likewise.\n\t* cppexp.c: Likewise.\n\t* crtstuff.c: Likewise.\n\t* dbxout.c: Likewise.\n\t* dwarf2out.c: Likewise.\n\t* dwarfout.c: Likewise.\n\t* emit-rtl.c: Likewise.\n\t* except.c: Likewise.\n\t* expr.c: Likewise.\n\t* final.c: Likewise.\n\t* frame-dwarf2.c: Likewise.\n\t* libgcc2.c: Likewise.\n\t* optabs.c: Likewise.\n\t* profile.c: Likewise.\n\t* sdbout.c: Likewise.\n\t* toplev.c: Likewise.\n\t* tradcif.y: Likewise.\n\t* tree.c: Likewise.\n\t* varasm.c: Likewise.\n\nch:\n\t* Makefile.in: Remove all dependencies on defaults.h.\n\t* decl.c: Don't include defaults.h.\n\t* timing.c: Likewise.\n\ncp:\n\t* Make-lang.in: Remove all dependencies on defaults.h.\n\t* call.c: Don't include defaults.h.\n\t* decl.c: Likewise.\n\t* decl2.c: Likewise.\n\t* except.c: Likewise.\n\t* pt.c: Likewise.\n\t* rtti.c: Likewise.\n\t* tree.c: Likewise.\n\t* typeck.c: Likewise.\n\nf:\n\t* Make-lang.in: Remove all dependencies on defaults.h.\n\t* com.c: Don't include defaults.h.\n\njava:\n\t* Make-lang.in: Remove all dependencies on defaults.h.\n\t* decl.c: Don't include defaults.h.\n\t* expr.c: Likewise.\n\t* parse.y: Likewise.\n\nFrom-SVN: r39308", "tree": {"sha": "866b79fe6150d355b001295b087bc926490827b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/866b79fe6150d355b001295b087bc926490827b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c913b6f18e999e16f5f127c2f9a839e610ff9e18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c913b6f18e999e16f5f127c2f9a839e610ff9e18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c913b6f18e999e16f5f127c2f9a839e610ff9e18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c913b6f18e999e16f5f127c2f9a839e610ff9e18/comments", "author": null, "committer": null, "parents": [{"sha": "75c1416b920eeac948d4462ddc0ace03773c9ab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c1416b920eeac948d4462ddc0ace03773c9ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c1416b920eeac948d4462ddc0ace03773c9ab9"}], "stats": {"total": 233, "additions": 127, "deletions": 106}, "files": [{"sha": "af2427f945b2b922fc95f1623b0c57f529473109", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,3 +1,35 @@\n+2001-01-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* configure.in: Arrange to include defaults.h in [ht]config.h/tm.h.\n+\n+\t* Makefile.in: Remove all dependencies on defaults.h.\n+\t* builtins.c: Don't include defaults.h.\n+\t* c-common.c: Likewise.\n+\t* c-decl.c: Likewise.\n+\t* c-pragma.c: Likewise.\n+\t* c-typeck.c: Likewise.\n+\t* combine.c: Likewise.\n+\t* i386.c: Likewise.\n+\t* frame-ia64.c: Likewise.\n+\t* cppexp.c: Likewise.\n+\t* crtstuff.c: Likewise.\n+\t* dbxout.c: Likewise.\n+\t* dwarf2out.c: Likewise.\n+\t* dwarfout.c: Likewise.\n+\t* emit-rtl.c: Likewise.\n+\t* except.c: Likewise.\n+\t* expr.c: Likewise.\n+\t* final.c: Likewise.\n+\t* frame-dwarf2.c: Likewise.\n+\t* libgcc2.c: Likewise.\n+\t* optabs.c: Likewise.\n+\t* profile.c: Likewise.\n+\t* sdbout.c: Likewise.\n+\t* toplev.c: Likewise.\n+\t* tradcif.y: Likewise.\n+\t* tree.c: Likewise.\n+\t* varasm.c: Likewise.\n+\n 2001-01-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (expand_builtin_fputs): Use size_one_node when"}, {"sha": "4dc4455f09d30b9f885e1086feb4bf6c7db849e3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1102,30 +1102,30 @@ stmp-multilib: $(LIBGCC_DEPS)\n # linked using GCC on systems using COFF or ELF, for the sake of C++\n # constructors.\n $(T)crtbegin.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n-  defaults.h frame.h gbl-ctors.h stmp-int-hdrs tsystem.h\n+  frame.h gbl-ctors.h stmp-int-hdrs tsystem.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n \t  -finhibit-size-directive -fno-inline-functions \\\n \t  -fno-exceptions $(CRTSTUFF_T_CFLAGS) @inhibit_libc@ \\\n \t  -c $(srcdir)/crtstuff.c -DCRT_BEGIN -o $(T)crtbegin$(objext)\n \n $(T)crtend.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n-  defaults.h frame.h gbl-ctors.h stmp-int-hdrs tsystem.h\n+  frame.h gbl-ctors.h stmp-int-hdrs tsystem.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n \t  -finhibit-size-directive -fno-inline-functions \\\n \t  -fno-exceptions $(CRTSTUFF_T_CFLAGS) @inhibit_libc@ \\\n \t  -c $(srcdir)/crtstuff.c -DCRT_END -o $(T)crtend$(objext)\n \n # These are versions of crtbegin and crtend for shared libraries.\n $(T)crtbeginS.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n-  defaults.h frame.h gbl-ctors.h stmp-int-hdrs tsystem.h\n+  frame.h gbl-ctors.h stmp-int-hdrs tsystem.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n \t  -finhibit-size-directive -fno-inline-functions \\\n \t  -fno-exceptions $(CRTSTUFF_T_CFLAGS_S) @inhibit_libc@ \\\n \t  -c $(srcdir)/crtstuff.c -DCRT_BEGIN -DCRTSTUFFS_O \\\n \t  -o $(T)crtbeginS$(objext)\n \n $(T)crtendS.o: crtstuff.c $(GCC_PASSES) $(CONFIG_H) \\\n-  defaults.h frame.h gbl-ctors.h stmp-int-hdrs tsystem.h\n+  frame.h gbl-ctors.h stmp-int-hdrs tsystem.h\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n \t  -finhibit-size-directive -fno-inline-functions \\\n \t  -fno-exceptions $(CRTSTUFF_T_CFLAGS_S) @inhibit_libc@ \\\n@@ -1169,7 +1169,7 @@ $(srcdir)/c-parse.y: c-parse.in\n \n c-decl.o : c-decl.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) $(C_TREE_H) \\\n     $(GGC_H) c-lex.h flags.h function.h output.h $(EXPR_H) \\\n-    toplev.h defaults.h intl.h\n+    toplev.h intl.h\n c-typeck.o : c-typeck.c $(CONFIG_H) system.h $(TREE_H) $(C_TREE_H) \\\n     flags.h intl.h output.h $(EXPR_H) $(RTL_H) toplev.h\n c-lang.o : c-lang.c $(CONFIG_H) system.h $(TREE_H) $(C_TREE_H) \\\n@@ -1182,7 +1182,7 @@ c-aux-info.o : c-aux-info.c  $(CONFIG_H) system.h $(TREE_H) $(C_TREE_H) \\\n     flags.h toplev.h\n c-convert.o : c-convert.c $(CONFIG_H) system.h $(TREE_H) flags.h toplev.h\n c-pragma.o: c-pragma.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) function.h \\\n-    defaults.h c-pragma.h toplev.h $(GGC_H)\n+    c-pragma.h toplev.h $(GGC_H)\n mbchar.o: mbchar.c $(CONFIG_H) system.h mbchar.h\n graph.o: graph.c $(CONFIG_H) system.h toplev.h flags.h output.h $(RTL_H) \\\n     function.h hard-reg-set.h $(BASIC_BLOCK_H) graph.h\n@@ -1329,7 +1329,7 @@ prefix.o: prefix.c $(CONFIG_H) system.h Makefile prefix.h\n convert.o: convert.c $(CONFIG_H) system.h $(TREE_H) flags.h convert.h toplev.h\n \n tree.o : tree.c $(CONFIG_H) system.h $(TREE_H) flags.h function.h toplev.h \\\n-   $(GGC_H) $(HASHTAB_H) output.h defaults.h\n+   $(GGC_H) $(HASHTAB_H) output.h\n print-tree.o : print-tree.c $(CONFIG_H) system.h $(TREE_H) $(GGC_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) system.h $(TREE_H) flags.h \\\n    function.h $(EXPR_H) $(RTL_H) toplev.h $(GGC_H)\n@@ -1339,7 +1339,7 @@ diagnostic.o : diagnostic.c diagnostic.h \\\n    $(CONFIG_H) system.h $(TREE_H) $(RTL_H) tm_p.h flags.h \\\n    $(GGC_H) input.h $(INSN_ATTR_H) insn-codes.h insn-config.h toplev.h intl.h \n toplev.o : toplev.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) function.h \\\n-   flags.h input.h $(INSN_ATTR_H) xcoffout.h defaults.h output.h diagnostic.h \\\n+   flags.h input.h $(INSN_ATTR_H) xcoffout.h output.h diagnostic.h \\\n    insn-codes.h insn-config.h intl.h $(RECOG_H) Makefile toplev.h dwarfout.h \\\n    dwarf2out.h sdbout.h dbxout.h $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n    graph.h $(LOOP_H) except.h $(REGS_H) $(TIMEVAR_H) $(lang_options_files) ssa.h\n@@ -1358,7 +1358,7 @@ errors.o : errors.c $(GCONFIG_H) system.h errors.h\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n varasm.o : varasm.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) flags.h \\\n-   function.h defaults.h $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n+   function.h $(EXPR_H) hard-reg-set.h $(REGS_H) \\\n    xcoffout.h output.h c-pragma.h toplev.h dbxout.h sdbout.h $(GGC_H)\n function.o : function.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n    function.h insn-flags.h insn-codes.h $(EXPR_H) $(REGS_H) hard-reg-set.h \\\n@@ -1386,26 +1386,25 @@ explow.o : explow.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n    insn-codes.h toplev.h function.h\n optabs.o : optabs.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h  \\\n    insn-flags.h insn-config.h insn-codes.h $(EXPR_H) $(RECOG_H) reload.h \\\n-   toplev.h $(GGC_H) real.h defaults.h\n+   toplev.h $(GGC_H) real.h\n dbxout.o : dbxout.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) flags.h $(REGS_H) \\\n-   insn-config.h reload.h gstab.h xcoffout.h defaults.h output.h dbxout.h \\\n-   toplev.h\n+   insn-config.h reload.h gstab.h xcoffout.h output.h dbxout.h toplev.h\n sdbout.o : sdbout.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) flags.h except.h \\\n-   function.h $(EXPR_H) output.h hard-reg-set.h $(REGS_H) defaults.h real.h \\\n+   function.h $(EXPR_H) output.h hard-reg-set.h $(REGS_H) real.h \\\n    insn-config.h $(OBSTACK_H) xcoffout.h c-pragma.h \\\n    sdbout.h toplev.h\n dwarfout.o : dwarfout.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) dwarf.h \\\n-   flags.h insn-config.h reload.h output.h defaults.h toplev.h dwarfout.h\n+   flags.h insn-config.h reload.h output.h toplev.h dwarfout.h\n dwarf2out.o : dwarf2out.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) dwarf2.h \\\n-   flags.h insn-config.h reload.h output.h defaults.h \\\n+   flags.h insn-config.h reload.h output.h \\\n    hard-reg-set.h $(REGS_H) $(EXPR_H) toplev.h dwarf2out.h varray.h \\\n    $(GGC_H) except.h\n xcoffout.o : xcoffout.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) xcoffout.h \\\n    flags.h toplev.h output.h dbxout.h $(GGC_H)\n emit-rtl.o : emit-rtl.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n    function.h $(REGS_H) insn-config.h $(RECOG_H) real.h $(GGC_H) \\\n    $(EXPR_H) $(srcdir)/../include/obstack.h hard-reg-set.h bitmap.h toplev.h \\\n-   $(HASHTAB_H) defaults.h\n+   $(HASHTAB_H)\n real.o : real.c $(CONFIG_H) system.h $(TREE_H) toplev.h\n integrate.o : integrate.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n    $(INTEGRATE_H) insn-flags.h insn-config.h $(EXPR_H) real.h $(REGS_H) \\\n@@ -1439,7 +1438,7 @@ conflict.o : conflict.c $(CONFIG_H) system.h $(OBSTACK_H) $(HASHTAB_H) \\\n    $(RTL_H) hard-reg-set.h $(BASIC_BLOCK_H)\n profile.o : profile.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h \\\n    insn-flags.h insn-config.h output.h $(REGS_H) $(EXPR_H) function.h \\\n-   gcov-io.h toplev.h $(GGC_H) hard-reg-set.h $(BASIC_BLOCK_H) defaults.h\n+   gcov-io.h toplev.h $(GGC_H) hard-reg-set.h $(BASIC_BLOCK_H)\n loop.o : loop.c $(CONFIG_H) system.h $(RTL_H) flags.h $(LOOP_H) insn-config.h \\\n    insn-flags.h $(REGS_H) hard-reg-set.h $(RECOG_H) $(EXPR_H) real.h \\\n    $(BASIC_BLOCK_H) function.h toplev.h varray.h except.h cselib.h\n@@ -1503,7 +1502,7 @@ sched-vis.o : sched-vis.c $(CONFIG_H) system.h $(RTL_H) sched-int.h \\\n final.o : final.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h intl.h \\\n    $(REGS_H) $(RECOG_H) conditions.h insn-config.h $(INSN_ATTR_H) function.h \\\n    real.h output.h hard-reg-set.h insn-flags.h insn-codes.h gstab.h except.h \\\n-   xcoffout.h defaults.h toplev.h reload.h dwarfout.h dwarf2out.h sdbout.h \\\n+   xcoffout.h toplev.h reload.h dwarfout.h dwarf2out.h sdbout.h \\\n    dbxout.h $(BASIC_BLOCK_H)\n recog.o : recog.c $(CONFIG_H) system.h $(RTL_H) function.h $(BASIC_BLOCK_H) \\\n    $(REGS_H) $(RECOG_H) hard-reg-set.h flags.h insn-config.h $(INSN_ATTR_H) \\\n@@ -1933,7 +1932,7 @@ cpp0$(exeext): cppmain.o intl.o libcpp.a $(LIBDEPS)\n cppmain.o:  cppmain.c  $(CONFIG_H) cpplib.h intl.h system.h\n \n cpperror.o: cpperror.c $(CONFIG_H) $(LIBCPP_DEPS)\n-cppexp.o:   cppexp.c   $(CONFIG_H) $(LIBCPP_DEPS) defaults.h\n+cppexp.o:   cppexp.c   $(CONFIG_H) $(LIBCPP_DEPS)\n cpplex.o:   cpplex.c   $(CONFIG_H) $(LIBCPP_DEPS)\n cppmacro.o: cppmacro.c $(CONFIG_H) $(LIBCPP_DEPS)\n cpplib.o:   cpplib.c   $(CONFIG_H) $(LIBCPP_DEPS) $(OBSTACK_H)\n@@ -1957,7 +1956,7 @@ tradcpp0$(exeext): tradcpp.o tradcif.o cppdefault.o version.o intl.o \\\n \ttradcpp.o tradcif.o mkdeps.o cppdefault.o version.o intl.o $(LIBS)\n \n tradcpp.o: tradcpp.c $(CONFIG_H) system.h version.h cppdefault.h tradcpp.h\n-tradcif.o: $(srcdir)/tradcif.c $(CONFIG_H) system.h defaults.h tradcpp.h\n+tradcif.o: $(srcdir)/tradcif.c $(CONFIG_H) system.h tradcpp.h\n \n $(srcdir)/tradcif.c: $(srcdir)/tradcif.y\n \t(cd $(srcdir) && $(BISON) $(BISONFLAGS) -o tr$$$$.c tradcif.y && \\"}, {"sha": "a49fc17325e5179ffe7ab38de8053731451ff023", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -37,7 +37,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"recog.h\"\n #include \"output.h\"\n #include \"typeclass.h\"\n-#include \"defaults.h\"\n #include \"toplev.h\"\n #include \"tm_p.h\"\n "}, {"sha": "437f64a94c990a81d9c4a14f0ab5cc1af825060a", "filename": "gcc/c-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -30,7 +30,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"expr.h\"\n #include \"c-common.h\"\n-#include \"defaults.h\"\n #include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"cpplib.h\""}, {"sha": "d5558db5908cee4c59fc60c6b94f31044b44cde9", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -38,7 +38,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"c-tree.h\"\n #include \"c-lex.h\"\n #include \"toplev.h\"\n-#include \"defaults.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\"\n #include \"cpplib.h\""}, {"sha": "8be3a6b065435ccaf228d0068b39185fac702835", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,5 +1,6 @@\n /* Handle #pragma, system V.4 style.  Supports #pragma weak and #pragma pack.\n-   Copyright (C) 1992, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1997, 1998, 1999, 2000, 2001\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -23,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"function.h\"\n-#include \"defaults.h\"\n #include \"cpplib.h\"\n #include \"c-pragma.h\"\n #include \"flags.h\""}, {"sha": "3dc52e480315678afbf8c1fdf7f3e7b919465e06", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -40,7 +40,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"toplev.h\"\n #include \"intl.h\"\n-#include \"defaults.h\"\n #include \"ggc.h\"\n \n /* Nonzero if we've already printed a \"missing braces around initializer\""}, {"sha": "9aeb1028664aa294982701b377544074b94aed0a", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,3 +1,9 @@\n+2001-01-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in: Remove all dependencies on defaults.h.\n+\t* decl.c: Don't include defaults.h.\n+\t* timing.c: Likewise.\n+\n 2000-12-08  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* Make-lang.in (CHILL.info): Depend on info files in source"}, {"sha": "a15c1ce7506f10361ae153109b3f043196828036", "filename": "gcc/ch/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fch%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fch%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMakefile.in?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n # Makefile for GNU CHILL compiler.\n #   Copyright (C) 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1998,\n-#   1999 Free Software Foundation, Inc.\n+#   1999, 2000, 2001 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n \n@@ -274,7 +274,7 @@ convert.o : convert.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n \t$(srcdir)/../tree.h $(srcdir)/../system.h $(srcdir)/../toplev.h \\\n \t$(srcdir)/../convert.h\n decl.o : decl.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h lex.h \\\n-\t$(srcdir)/../system.h $(srcdir)/../toplev.h $(srcdir)/../defaults.h\n+\t$(srcdir)/../system.h $(srcdir)/../toplev.h\n except.o : except.c $(CONFIG_H) $(srcdir)/../tree.h $(RTL_H) $(CHILL_TREE_H) \\\n \t$(srcdir)/../system.h $(srcdir)/../toplev.h\n expr.o : expr.c $(CONFIG_H) $(RTL_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n@@ -298,8 +298,8 @@ parse.o : parse.c $(CONFIG_H) $(CHILL_TREE_H) parse.h \\\n satisfy.o : satisfy.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../tree.h \\\n \t$(srcdir)/../flags.h lex.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n timing.o : timing.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n-\t$(srcdir)/../input.h lex.h $(srcdir)/../system.h $(srcdir)/../toplev.h \\\n-\t$(srcdir)/../defaults.h\n+\t$(srcdir)/../input.h lex.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n+\n tasking.o : tasking.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) \\\n \t$(srcdir)/../flags.h $(srcdir)/../input.h \\\n \tlex.h $(srcdir)/../system.h $(srcdir)/../toplev.h"}, {"sha": "18a4cc66f67719c7e44d385e102cc96973883717", "filename": "gcc/ch/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fch%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fch%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fdecl.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,5 +1,5 @@\n /* Process declarations and variables for GNU CHILL compiler.\n-   Copyright (C) 1992, 1993, 1994, 1998, 1999, 2000\n+   Copyright (C) 1992, 1993, 1994, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc. \n    \n This file is part of GNU CC.\n@@ -191,7 +191,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"input.h\"\n #include \"rtl.h\"\n #include \"toplev.h\"\n-#include \"defaults.h\"\n \n #define IS_UNKNOWN_TYPE(type) (TYPE_SIZE(type)==0)\n #define BUILTIN_NESTING_LEVEL (-1)"}, {"sha": "b7479071120edd0686294af1aa775316ab98761b", "filename": "gcc/ch/timing.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fch%2Ftiming.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fch%2Ftiming.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Ftiming.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,5 +1,6 @@\n /* Implement timing-related actions for CHILL.\n-   Copyright (C) 1992, 1993, 1994, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994, 1998, 2000, 2001\n+   Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -28,7 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"obstack.h\"\n #include \"lex.h\"\n #include \"toplev.h\"\n-#include \"defaults.h\"\n \n /* set non-zero if input text is forced to lowercase */\n extern int ignore_case;"}, {"sha": "7311370aef8ab60ea98053f7dd27f85b8961a8a2", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -92,7 +92,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"recog.h\"\n #include \"real.h\"\n #include \"toplev.h\"\n-#include \"defaults.h\"\n \n #ifndef ACCUMULATE_OUTGOING_ARGS\n #define ACCUMULATE_OUTGOING_ARGS 0"}, {"sha": "a6a0f6d8fcdd2f45e32134720a2cffafab3a6a1f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -40,7 +40,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n-#include \"defaults.h\"\n #include \"ggc.h\"\n \n #ifndef CHECK_STACK_LIMIT"}, {"sha": "4834a8b3cdfb9525edf857f05130e6ebd6678ffe", "filename": "gcc/config/ia64/frame-ia64.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fconfig%2Fia64%2Fframe-ia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fconfig%2Fia64%2Fframe-ia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fframe-ia64.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,7 +1,7 @@\n /* Subroutines needed for unwinding IA-64 standard format stack frame\n    info for exception handling.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+/* Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Andrew MacLeod  <amacleod@cygnus.com>\n                   Andrew Haley  <aph@cygnus.com>\n \n@@ -46,7 +46,6 @@ Boston, MA 02111-1307, USA.  */\n #include <stddef.h>\n #endif\n \n-#include \"defaults.h\"\n #include \"frame-ia64.h\"\n #include \"eh-common.h\"\n "}, {"sha": "38960b77685ce9a3f1ffbddeb3f4acdf05d91fa9", "filename": "gcc/configure", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -4065,14 +4065,14 @@ fi\n # auto-host.h is the file containing items generated by autoconf and is\n # the first file included by config.h.\n null_defines=\n-host_xm_file=\"auto-host.h gansidecl.h ${host_xm_file} hwint.h\"\n+host_xm_file=\"auto-host.h gansidecl.h ${host_xm_file} defaults.h hwint.h\"\n \n # If host=build, it is correct to have hconfig include auto-host.h\n # as well.  If host!=build, we are in error and need to do more \n # work to find out the build config parameters.\n if test x$host = x$build\n then\n-\tbuild_xm_file=\"auto-host.h gansidecl.h ${build_xm_file} hwint.h\"\n+\tbuild_xm_file=\"auto-host.h gansidecl.h ${build_xm_file} defaults.h hwint.h\"\n else\n \t# We create a subdir, then run autoconf in the subdir.\n \t# To prevent recursion we set host and build for the new\n@@ -4094,11 +4094,11 @@ else\n \tmv auto-host.h ../auto-build.h\n \tcd ..\n \trm -rf $tempdir\n-\tbuild_xm_file=\"auto-build.h gansidecl.h ${build_xm_file} hwint.h\"\n+\tbuild_xm_file=\"auto-build.h gansidecl.h ${build_xm_file} defaults.h hwint.h\"\n fi\n \n-xm_file=\"gansidecl.h ${xm_file}\"\n-tm_file=\"gansidecl.h ${tm_file}\"\n+xm_file=\"gansidecl.h ${xm_file} defaults.h\"\n+tm_file=\"gansidecl.h ${tm_file} defaults.h\"\n \n vars=\"host_xm_file tm_file tm_p_file xm_file build_xm_file\"\n links=\"config.h tm.h tm_p.h tconfig.h hconfig.h\"\n@@ -5892,7 +5892,7 @@ out_object_file=`basename $out_file .c`.o\n tm_file_list=\n for f in $tm_file; do\n   case $f in\n-    gansidecl.h )\n+    gansidecl.h | defaults.h)\n        tm_file_list=\"${tm_file_list} $f\" ;;\n     *) tm_file_list=\"${tm_file_list} \\$(srcdir)/config/$f\" ;;\n   esac\n@@ -5901,7 +5901,7 @@ done\n host_xm_file_list=\n for f in $host_xm_file; do\n   case $f in\n-    auto-host.h | gansidecl.h | hwint.h )\n+    auto-host.h | gansidecl.h | defaults.h | hwint.h )\n        host_xm_file_list=\"${host_xm_file_list} $f\" ;;\n     *) host_xm_file_list=\"${host_xm_file_list} \\$(srcdir)/config/$f\" ;;\n   esac\n@@ -5910,7 +5910,7 @@ done\n build_xm_file_list=\n for f in $build_xm_file; do\n   case $f in\n-    auto-build.h | auto-host.h | gansidecl.h | hwint.h )\n+    auto-build.h | auto-host.h | gansidecl.h | defaults.h | hwint.h )\n        build_xm_file_list=\"${build_xm_file_list} $f\" ;;\n     *) build_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\" ;;\n   esac"}, {"sha": "ac39b4ff2c26297f69ec08952c74bb0c0b0acd4e", "filename": "gcc/configure.in", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -728,14 +728,14 @@ fi\n # auto-host.h is the file containing items generated by autoconf and is\n # the first file included by config.h.\n null_defines=\n-host_xm_file=\"auto-host.h gansidecl.h ${host_xm_file} hwint.h\"\n+host_xm_file=\"auto-host.h gansidecl.h ${host_xm_file} defaults.h hwint.h\"\n \n # If host=build, it is correct to have hconfig include auto-host.h\n # as well.  If host!=build, we are in error and need to do more \n # work to find out the build config parameters.\n if test x$host = x$build\n then\n-\tbuild_xm_file=\"auto-host.h gansidecl.h ${build_xm_file} hwint.h\"\n+\tbuild_xm_file=\"auto-host.h gansidecl.h ${build_xm_file} defaults.h hwint.h\"\n else\n \t# We create a subdir, then run autoconf in the subdir.\n \t# To prevent recursion we set host and build for the new\n@@ -757,11 +757,11 @@ else\n \tmv auto-host.h ../auto-build.h\n \tcd ..\n \trm -rf $tempdir\n-\tbuild_xm_file=\"auto-build.h gansidecl.h ${build_xm_file} hwint.h\"\n+\tbuild_xm_file=\"auto-build.h gansidecl.h ${build_xm_file} defaults.h hwint.h\"\n fi\n \n-xm_file=\"gansidecl.h ${xm_file}\"\n-tm_file=\"gansidecl.h ${tm_file}\"\n+xm_file=\"gansidecl.h ${xm_file} defaults.h\"\n+tm_file=\"gansidecl.h ${tm_file} defaults.h\"\n \n vars=\"host_xm_file tm_file tm_p_file xm_file build_xm_file\"\n links=\"config.h tm.h tm_p.h tconfig.h hconfig.h\"\n@@ -991,7 +991,7 @@ out_object_file=`basename $out_file .c`.o\n tm_file_list=\n for f in $tm_file; do\n   case $f in\n-    gansidecl.h )\n+    gansidecl.h | defaults.h )\n        tm_file_list=\"${tm_file_list} $f\" ;;\n     *) tm_file_list=\"${tm_file_list} \\$(srcdir)/config/$f\" ;;\n   esac\n@@ -1000,7 +1000,7 @@ done\n host_xm_file_list=\n for f in $host_xm_file; do\n   case $f in\n-    auto-host.h | gansidecl.h | hwint.h )\n+    auto-host.h | gansidecl.h | defaults.h | hwint.h )\n        host_xm_file_list=\"${host_xm_file_list} $f\" ;;\n     *) host_xm_file_list=\"${host_xm_file_list} \\$(srcdir)/config/$f\" ;;\n   esac\n@@ -1009,7 +1009,7 @@ done\n build_xm_file_list=\n for f in $build_xm_file; do\n   case $f in\n-    auto-build.h | auto-host.h | gansidecl.h | hwint.h )\n+    auto-build.h | auto-host.h | gansidecl.h | defaults.h | hwint.h )\n        build_xm_file_list=\"${build_xm_file_list} $f\" ;;\n     *) build_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\" ;;\n   esac"}, {"sha": "6c2093c67d5026c5f6ed1eefaea27a03adab13ec", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,3 +1,15 @@\n+2001-01-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Make-lang.in: Remove all dependencies on defaults.h.\n+\t* call.c: Don't include defaults.h.\n+\t* decl.c: Likewise.\n+\t* decl2.c: Likewise.\n+\t* except.c: Likewise.\n+\t* pt.c: Likewise.\n+\t* rtti.c: Likewise.\n+\t* tree.c: Likewise.\n+\t* typeck.c: Likewise.\n+\n 2001-01-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* mangle.c (write_mangled_name, write_encoding): Mangle overloaded"}, {"sha": "c3836267d03fbaa8f690a2a179537391a7daf8f0", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -274,9 +274,9 @@ cp/method.o: cp/method.c $(CXX_TREE_H) toplev.h $(GGC_H) $(RTL_H) $(EXPR_H)\n cp/cvt.o: cp/cvt.c $(CXX_TREE_H) cp/decl.h flags.h toplev.h convert.h\n cp/search.o: cp/search.c $(CXX_TREE_H) stack.h flags.h toplev.h $(RTL_H)\n cp/tree.o: cp/tree.c $(CXX_TREE_H) flags.h toplev.h $(GGC_H) $(RTL_H) \\\n-  insn-config.h integrate.h defaults.h\n+  insn-config.h integrate.h\n cp/ptree.o: cp/ptree.c $(CXX_TREE_H) system.h\n-cp/rtti.o: cp/rtti.c $(CXX_TREE_H) flags.h toplev.h defaults.h\n+cp/rtti.o: cp/rtti.c $(CXX_TREE_H) flags.h toplev.h\n cp/except.o: cp/except.c $(CXX_TREE_H) flags.h $(RTL_H) except.h toplev.h \\\n   cp/cfns.h $(EXPR_H) insn-flags.h cp/decl.h $(OBSTACK_H)\n cp/expr.o: cp/expr.c $(CXX_TREE_H) $(RTL_H) flags.h $(EXPR_H) toplev.h except.h"}, {"sha": "98beeec753aa89c59ed5620a2e3f50f5a8ec3abc", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -32,7 +32,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"rtl.h\"\n #include \"toplev.h\"\n-#include \"defaults.h\"\n #include \"expr.h\"\n #include \"ggc.h\"\n "}, {"sha": "080853e37c13f20001a7616e2eeed359cb681ba7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -37,7 +37,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"cp-tree.h\"\n #include \"decl.h\"\n #include \"lex.h\"\n-#include \"defaults.h\"\n #include \"output.h\"\n #include \"except.h\"\n #include \"toplev.h\""}, {"sha": "2cb9e44e70c749ab6efd7cd38ed4e8d07e392ff9", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -39,7 +39,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"lex.h\"\n #include \"output.h\"\n #include \"except.h\"\n-#include \"defaults.h\"\n #include \"toplev.h\"\n #include \"dwarf2out.h\"\n #include \"dwarfout.h\""}, {"sha": "19d5eea26c562f6524c3201e4f57a7c89dc14a15", "filename": "gcc/cp/except.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n /* Handle exceptional things in C++.\n-   Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n+   2000, 2001  Free Software Foundation, Inc.\n    Contributed by Michael Tiemann <tiemann@cygnus.com>\n    Rewritten by Mike Stump <mrs@cygnus.com>, based upon an\n    initial re-implementation courtesy Tad Hunt.\n@@ -33,7 +33,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"obstack.h\"\n #include \"output.h\"\n #include \"except.h\"\n-#include \"defaults.h\"\n #include \"toplev.h\"\n #include \"eh-common.h\"\n "}, {"sha": "c66eaccc6be28fa671232c93994ef660178ce3d7", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -37,11 +37,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"parse.h\"\n #include \"lex.h\"\n #include \"output.h\"\n-#include \"defaults.h\"\n #include \"except.h\"\n #include \"toplev.h\"\n #include \"rtl.h\"\n-#include \"defaults.h\"\n #include \"ggc.h\"\n #include \"timevar.h\"\n "}, {"sha": "ff3945240fc3dafec56d6217b623a08bf03c4ab0", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,5 +1,5 @@\n /* RunTime Type Identification\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc.\n    Mostly written by Jason Merrill (jason@cygnus.com).\n \n@@ -29,7 +29,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"output.h\"\n #include \"assert.h\"\n #include \"toplev.h\"\n-#include \"defaults.h\"\n \n /* Accessors for the type_info objects. We need to remember several things\n    about each of the type_info types. The global tree nodes such as"}, {"sha": "5e3e695cdd2a2ca07b8749303732ac240801d1fe", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -31,7 +31,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"insn-config.h\"\n #include \"integrate.h\"\n-#include \"defaults.h\"\n \n static tree bot_manip PARAMS ((tree *, int *, void *));\n static tree bot_replace PARAMS ((tree *, int *, void *));"}, {"sha": "ef2a9217a81d5dda95c1c0c939e66dfa12d448ab", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -40,7 +40,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n-#include \"defaults.h\"\n \n static tree convert_for_assignment PARAMS ((tree, tree, const char *, tree,\n \t\t\t\t\t  int));"}, {"sha": "3031997b0aa1665e566f3eedb0f668432d6575b9", "filename": "gcc/cppexp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"cpplib.h\"\n #include \"cpphash.h\"\n-#include \"defaults.h\"\n \n #ifndef MAX_CHAR_TYPE_SIZE\n #define MAX_CHAR_TYPE_SIZE CHAR_TYPE_SIZE"}, {"sha": "f51cf16da03b0b3e038ababa29cde1216e41d51e", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,7 +1,7 @@\n /* Specialized bits of code needed to support construction and\n    destruction of file-scope objects in C++ code.\n    Copyright (C) 1991, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com).\n \n This file is part of GNU CC.\n@@ -59,7 +59,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"tm.h\"\n #include \"tsystem.h\"\n \n-#include \"defaults.h\"\n #include \"frame.h\"\n \n #ifndef CRT_CALL_STATIC_FUNCTION"}, {"sha": "4c4a61a6b6bc5f09f2e9844e156357898ce35ed5", "filename": "gcc/dbxout.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n /* Output dbx-format symbol table information from GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -77,7 +77,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"regs.h\"\n #include \"insn-config.h\"\n #include \"reload.h\"\n-#include \"defaults.h\"\n #include \"output.h\" /* ASM_OUTPUT_SOURCE_LINE may refer to sdb functions.  */\n #include \"dbxout.h\"\n #include \"toplev.h\""}, {"sha": "0bd968c80774bfb49befb01f888bd1f492b9b8be", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -37,7 +37,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"defaults.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"rtl.h\""}, {"sha": "ff73b8474ab932c7009beb16a86f24e39b76ca79", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n /* Output Dwarf format symbol table information from the GNU C compiler.\n    Copyright (C) 1992, 1993, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com) of Network Computing Devices.\n \n This file is part of GNU CC.\n@@ -32,7 +32,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-config.h\"\n #include \"reload.h\"\n #include \"output.h\"\n-#include \"defaults.h\"\n #include \"dwarfout.h\"\n #include \"toplev.h\"\n #include \"tm_p.h\""}, {"sha": "8291a7ae229ad437706bec9eab98abf548d9045a", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -54,7 +54,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"bitmap.h\"\n #include \"basic-block.h\"\n #include \"ggc.h\"\n-#include \"defaults.h\"\n \n /* Commonly used modes.  */\n "}, {"sha": "d923b70a35b77f56450ece5990cb9e1d2a54f2ab", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n /* Implements exception handling.\n    Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998, \n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Mike Stump <mrs@cygnus.com>.\n \n This file is part of GNU CC.\n@@ -390,7 +390,6 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n-#include \"defaults.h\"\n #include \"eh-common.h\"\n #include \"system.h\"\n #include \"rtl.h\""}, {"sha": "1c28626ec1f486139990dffe7620019143d08422", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -39,7 +39,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"reload.h\"\n #include \"output.h\"\n #include \"typeclass.h\"\n-#include \"defaults.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n #include \"intl.h\""}, {"sha": "315640f02bed39962040dd0c4695175f75ea37fa", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,3 +1,8 @@\n+Sat Jan 27 20:52:18 2001  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Make-lang.in: Remove all dependencies on defaults.h.\n+\t* com.c: Don't include defaults.h.\n+\n 2001-01-23  Michael Sokolov  <msokolov@ivan.Harhan.ORG>\n \n \t* com.c: Don't explicitly include any time headers, the right ones are"}, {"sha": "15488af9d644e9f15d107c37e42a10166f659615", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,5 +1,5 @@\n # Top level makefile fragment for GNU Fortran.           -*-makefile-*-\n-#   Copyright (C) 1995, 1996, 1997, 1998, 2000 Free Software Foundation, Inc.\n+#   Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001 Free Software Foundation, Inc.\n \n #This file is part of GNU Fortran.\n \n@@ -417,7 +417,7 @@ f/com.o: f/com.c f/proj.h $(CONFIG_H) system.h flags.h $(RTL_H) $(TREE_H) \\\n  f/malloc.h f/info.h f/info-b.def f/info-k.def f/info-w.def f/target.h f/bad.h \\\n  f/bad.def f/where.h glimits.h f/top.h f/lex.h f/type.h f/intrin.h \\\n  f/intrin.def f/lab.h f/symbol.h f/symbol.def f/equiv.h f/storag.h f/global.h \\\n- f/name.h f/expr.h f/implic.h f/src.h f/st.h $(GGC_H) toplev.h defaults.h\n+ f/name.h f/expr.h f/implic.h f/src.h f/st.h $(GGC_H) toplev.h\n f/data.o: f/data.c f/proj.h $(CONFIG_H) system.h f/data.h f/bld.h f/bld-op.def \\\n  f/bit.h f/malloc.h f/com.h f/com-rt.def $(TREE_H) f/info.h f/info-b.def \\\n  f/info-k.def f/info-w.def f/target.h f/bad.h f/bad.def f/where.h glimits.h \\"}, {"sha": "2fd237ae4517d978505bb60d4e1db5b533f1dd2a", "filename": "gcc/f/com.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -89,7 +89,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"output.h\"  /* Must follow tree.h so TREE_CODE is defined! */\n #include \"convert.h\"\n #include \"ggc.h\"\n-#include \"defaults.h\"\n #endif\t/* FFECOM_targetCURRENT == FFECOM_targetGCC */\n \n #define FFECOM_GCC_INCLUDE 1\t/* Enable -I. */"}, {"sha": "3a2fc1537c5e22356364a15767c356ef9b2f8ada", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -60,7 +60,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"real.h\"\n #include \"hard-reg-set.h\"\n-#include \"defaults.h\"\n #include \"output.h\"\n #include \"except.h\"\n #include \"function.h\""}, {"sha": "7fbcf87c6c8ad59155337dabd028b1bd9664ca88", "filename": "gcc/frame-dwarf2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fframe-dwarf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fframe-dwarf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe-dwarf2.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,7 +1,7 @@\n /* Subroutines needed for unwinding DWARF 2 format stack frame info\n    for exception handling.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+/* Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Jason Merrill <jason@cygnus.com>.\n \n This file is part of GNU CC.\n@@ -37,8 +37,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n \n-#include \"defaults.h\"\n-\n #ifdef DWARF2_UNWIND_INFO\n #include \"dwarf2.h\"\n #include \"frame.h\""}, {"sha": "5a60bf92f1b9b0e5ac44f4018647735edee685ea", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,3 +1,10 @@\n+2001-01-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Make-lang.in: Remove all dependencies on defaults.h.\n+\t* decl.c: Don't include defaults.h.\n+\t* expr.c: Likewise.\n+\t* parse.y: Likewise.\n+\n 2001-01-25  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* ChangeLog (2001-01-21): Fixed typo."}, {"sha": "4c57d9fe02dfc9f736e182fe331a2cdad6d6f7a7", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -248,7 +248,7 @@ java/class.o: java/class.c $(CONFIG_H) $(JAVA_TREE_H) $(RTL_H) java/jcf.h \\\n java/constants.o: java/constants.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n   toplev.h system.h $(GGC_H)\n java/decl.o: java/decl.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  toplev.h system.h function.h defaults.h gcc.h\n+  toplev.h system.h function.h gcc.h\n java/except.o: java/except.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h real.h \\\n   $(RTL_H) java/javaop.h java/java-opcodes.h except.h java/java-except.h \\\n   eh-common.h toplev.h system.h function.h"}, {"sha": "b11ea6caaec986b1e24ca004f505b361218531c4", "filename": "gcc/java/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -35,7 +35,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"toplev.h\"\n #include \"function.h\"\n #include \"except.h\"\n-#include \"defaults.h\"\n #include \"java-except.h\"\n #include \"ggc.h\"\n "}, {"sha": "beb3137e24dbd68df2827cedeee117b59e6aaf88", "filename": "gcc/java/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -39,7 +39,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"parse.h\"\n #include \"toplev.h\"\n #include \"except.h\"\n-#include \"defaults.h\"\n #include \"ggc.h\"\n \n static void flush_quick_stack PARAMS ((void));"}, {"sha": "cf438e92840113a65b6556b14d39942b86b53343", "filename": "gcc/java/parse.y", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -64,7 +64,6 @@ definitions and other extensions.  */\n #include \"xref.h\"\n #include \"function.h\"\n #include \"except.h\"\n-#include \"defaults.h\"\n #include \"ggc.h\"\n \n #ifndef DIR_SEPARATOR"}, {"sha": "03636ebc16adde8d55312bc39f65f4bee87e2a6b", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -37,7 +37,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"tsystem.h\"\n \n #include \"machmode.h\"\n-#include \"defaults.h\" \n \n /* Don't use `fancy_abort' here even if config.h says to use it.  */\n #ifdef abort"}, {"sha": "38ff9910540f68510b5bc1aff56115cf3429a7eb", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n /* Expand the basic unary and binary arithmetic operations, for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -39,7 +39,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"reload.h\"\n #include \"ggc.h\"\n #include \"real.h\"\n-#include \"defaults.h\"\n \n /* Each optab contains info on how this target machine\n    can perform a particular operation"}, {"sha": "5849e7b22d054328edb84a8a24c34a4807c9ae6a", "filename": "gcc/profile.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n /* Calculate branch probabilities, and basic block execution counts. \n-   Copyright (C) 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 1999, 2000\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 1999,\n+   2000, 2001  Free Software Foundation, Inc.\n    Contributed by James E. Wilson, UC Berkeley/Cygnus Support;\n    based on some ideas from Dain Samples of UC Berkeley.\n    Further mangling by Bob Manson, Cygnus Support.\n@@ -49,7 +49,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n-#include \"defaults.h\"\n \n /* Additional information about the edges we need.  */\n struct edge_info"}, {"sha": "63472afcce475cb44e833f6343303fcab1a5cc2b", "filename": "gcc/sdbout.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n /* Output sdb-format symbol table information from GNU compiler.\n-   Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n+   2000, 2001  Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -49,7 +49,6 @@ AT&T C compiler.  From the example below I would conclude the following:\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n-#include \"defaults.h\"\n #include \"flags.h\"\n #include \"insn-config.h\"\n #include \"reload.h\""}, {"sha": "d29d6c0ae36d7f70585d6a69776021334915882b", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -49,7 +49,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-config.h\"\n #include \"hard-reg-set.h\"\n #include \"recog.h\"\n-#include \"defaults.h\"\n #include \"output.h\"\n #include \"except.h\"\n #include \"function.h\""}, {"sha": "877489d0a9e98031fe23dddc93f7c991dc0b9def", "filename": "gcc/tradcif.y", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ftradcif.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ftradcif.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcif.y?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,5 +1,5 @@\n /* Parse C expressions for CCCP.\n-   Copyright (C) 1987, 2000 Free Software Foundation.\n+   Copyright (C) 1987, 2000, 2001 Free Software Foundation.\n    Adapted from expread.y of GDB by Paul Rubin, July 1986.\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n    Dusted off, polished, and adapted for use as traditional\n@@ -24,7 +24,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n %{\n #include \"config.h\"\n #include \"system.h\"\n-#include \"defaults.h\"\n #include \"tradcpp.h\"\n #include <setjmp.h>\n "}, {"sha": "d1831227e361415ab8d3481d2981bdfe8ace32f9", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -1,6 +1,6 @@\n /* Language-independent node constructors for parse phase of GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -44,7 +44,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"ggc.h\"\n #include \"hashtab.h\"\n #include \"output.h\"\n-#include \"defaults.h\"\n \n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free"}, {"sha": "cae65cc413e0ccdb4bdbd536192732518e6aa1c6", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c913b6f18e999e16f5f127c2f9a839e610ff9e18/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=c913b6f18e999e16f5f127c2f9a839e610ff9e18", "patch": "@@ -37,7 +37,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n-#include \"defaults.h\"\n #include \"output.h\"\n #include \"real.h\"\n #include \"toplev.h\""}]}