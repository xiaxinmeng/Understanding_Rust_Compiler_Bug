{"sha": "686875c17265153c5ef239ec5e53e62850b8399e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2ODc1YzE3MjY1MTUzYzVlZjIzOWVjNWU1M2U2Mjg1MGI4Mzk5ZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T21:14:15Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T21:14:15Z"}, "message": "Correct handling of methods which call recover.\n\nFrom-SVN: r168132", "tree": {"sha": "7fc42a4b9339beabe321cdb78b5e1278119fb2f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fc42a4b9339beabe321cdb78b5e1278119fb2f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/686875c17265153c5ef239ec5e53e62850b8399e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686875c17265153c5ef239ec5e53e62850b8399e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/686875c17265153c5ef239ec5e53e62850b8399e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686875c17265153c5ef239ec5e53e62850b8399e/comments", "author": null, "committer": null, "parents": [{"sha": "059e2a26f5819715bba3ccfe620ccf8677b8dd44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/059e2a26f5819715bba3ccfe620ccf8677b8dd44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/059e2a26f5819715bba3ccfe620ccf8677b8dd44"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "0745704741ad22da3b7132a2c45f9f724e20b4d4", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686875c17265153c5ef239ec5e53e62850b8399e/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686875c17265153c5ef239ec5e53e62850b8399e/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=686875c17265153c5ef239ec5e53e62850b8399e", "patch": "@@ -8630,6 +8630,7 @@ Call_expression::do_get_tree(Translate_context* context)\n \t   pe != this->args_->end();\n \t   ++pe, ++pp, ++i)\n \t{\n+\t  gcc_assert(pp != params->end());\n \t  tree arg_val = (*pe)->get_tree(context);\n \t  args[i] = Expression::convert_for_assignment(context,\n \t\t\t\t\t\t       pp->type(),"}, {"sha": "2e453844500b586aa1cb7f1204aa971174634c7b", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686875c17265153c5ef239ec5e53e62850b8399e/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686875c17265153c5ef239ec5e53e62850b8399e/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=686875c17265153c5ef239ec5e53e62850b8399e", "patch": "@@ -2093,14 +2093,6 @@ Build_recover_thunks::function(Named_object* orig_no)\n   Expression* fn = Expression::make_func_reference(new_no, closure, location);\n \n   Expression_list* args = new Expression_list();\n-  if (orig_fntype->is_method())\n-    {\n-      Named_object* rec_no = gogo->lookup(receiver_name, NULL);\n-      gcc_assert(rec_no != NULL\n-\t\t && rec_no->is_variable()\n-\t\t && rec_no->var_value()->is_parameter());\n-      args->push_back(Expression::make_var_reference(rec_no, location));\n-    }\n   if (new_params != NULL)\n     {\n       // Note that we skip the last parameter, which is the boolean\n@@ -2153,10 +2145,11 @@ Build_recover_thunks::function(Named_object* orig_no)\n \t\t && !orig_rec_no->var_value()->is_receiver());\n       orig_rec_no->var_value()->set_is_receiver();\n \n-      Named_object* new_rec_no = new_bindings->lookup_local(receiver_name);\n+      const std::string& new_receiver_name(orig_fntype->receiver()->name());\n+      Named_object* new_rec_no = new_bindings->lookup_local(new_receiver_name);\n       gcc_assert(new_rec_no != NULL\n \t\t && new_rec_no->is_variable()\n-\t\t && !new_rec_no->var_value()->is_receiver());\n+\t\t && new_rec_no->var_value()->is_receiver());\n       new_rec_no->var_value()->set_is_not_receiver();\n     }\n "}]}