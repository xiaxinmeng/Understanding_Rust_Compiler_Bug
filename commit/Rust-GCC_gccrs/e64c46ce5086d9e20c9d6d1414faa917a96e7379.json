{"sha": "e64c46ce5086d9e20c9d6d1414faa917a96e7379", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY0YzQ2Y2U1MDg2ZDllMjBjOWQ2ZDE0MTRmYWE5MTdhOTZlNzM3OQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-09-18T05:22:40Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-09-18T05:22:40Z"}, "message": "parse.y: Use VA_OPEN/VA_CLOSE/VA_FIXEDARG throughout.\n\n\t* parse.y: Use VA_OPEN/VA_CLOSE/VA_FIXEDARG throughout.\n\t* jv-scan.c: Likewise.\n\nFrom-SVN: r45671", "tree": {"sha": "baedae46d8f50213d3f94493a6482741fff68121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baedae46d8f50213d3f94493a6482741fff68121"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e64c46ce5086d9e20c9d6d1414faa917a96e7379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64c46ce5086d9e20c9d6d1414faa917a96e7379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64c46ce5086d9e20c9d6d1414faa917a96e7379", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64c46ce5086d9e20c9d6d1414faa917a96e7379/comments", "author": null, "committer": null, "parents": [{"sha": "5dead3e5cdc72ff0ece51a1b55edf1fd52fe6a1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dead3e5cdc72ff0ece51a1b55edf1fd52fe6a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dead3e5cdc72ff0ece51a1b55edf1fd52fe6a1a"}], "stats": {"total": 2887, "additions": 1430, "deletions": 1457}, "files": [{"sha": "9b4f61ec14b569d22f4eb62c75cfdd19e624b765", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 1416, "deletions": 1411, "changes": 2827, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64c46ce5086d9e20c9d6d1414faa917a96e7379/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64c46ce5086d9e20c9d6d1414faa917a96e7379/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e64c46ce5086d9e20c9d6d1414faa917a96e7379"}, {"sha": "8d4ad78b4879278ca115cdd207fd3c32f8aa4a1b", "filename": "gcc/java/jv-scan.c", "status": "modified", "additions": 6, "deletions": 22, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64c46ce5086d9e20c9d6d1414faa917a96e7379/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64c46ce5086d9e20c9d6d1414faa917a96e7379/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=e64c46ce5086d9e20c9d6d1414faa917a96e7379", "patch": "@@ -239,42 +239,26 @@ DEFUN (main, (argc, argv),\n void\n fatal_error VPARAMS ((const char *s, ...))\n {\n-#ifndef ANSI_PROTOTYPES\n-  const char *s;\n-#endif\n-  va_list ap;\n-\n-  VA_START (ap, s);\n-\n-#ifndef ANSI_PROTOTYPES\n-  s = va_arg (ap, const char *);\n-#endif\n+  VA_OPEN (ap, s);\n+  VA_FIXEDARG (ap, const char *, s);\n \n   fprintf (stderr, \"%s: error: \", exec_name);\n   vfprintf (stderr, s, ap);\n   fputc ('\\n', stderr);\n-  va_end (ap);\n+  VA_CLOSE (ap);\n   exit (1);\n }\n \n void\n warning VPARAMS ((const char *s, ...))\n {\n-#ifndef ANSI_PROTOTYPES\n-  const char *s;\n-#endif\n-  va_list ap;\n-\n-  VA_START (ap, s);\n-\n-#ifndef ANSI_PROTOTYPES\n-  s = va_arg (ap, const char *);\n-#endif\n+  VA_OPEN (ap, s);\n+  VA_FIXEDARG (ap, const char *, s);\n \n   fprintf (stderr, \"%s: warning: \", exec_name);\n   vfprintf (stderr, s, ap);\n   fputc ('\\n', stderr);\n-  va_end (ap);\n+  VA_CLOSE (ap);\n }\n \n void"}, {"sha": "90a2dd12891437d1c1a5b66bf252501e41f8d89e", "filename": "gcc/java/parse.y", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e64c46ce5086d9e20c9d6d1414faa917a96e7379/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e64c46ce5086d9e20c9d6d1414faa917a96e7379/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=e64c46ce5086d9e20c9d6d1414faa917a96e7379", "patch": "@@ -3085,42 +3085,26 @@ issue_warning_error_from_context (cl, msg, ap)\n void\n parse_error_context VPARAMS ((tree cl, const char *msg, ...))\n {\n-#ifndef ANSI_PROTOTYPES\n-  tree cl;\n-  const char *msg;\n-#endif\n-  va_list ap;\n-\n-  VA_START (ap, msg);\n-#ifndef ANSI_PROTOTYPES\n-  cl = va_arg (ap, tree);\n-  msg = va_arg (ap, const char *);\n-#endif\n+  VA_OPEN (ap, msg);\n+  VA_FIXEDARG (ap, tree, cl);\n+  VA_FIXEDARG (ap, const char *, msg);\n   issue_warning_error_from_context (cl, msg, ap);\n-  va_end (ap);\n+  VA_CLOSE (ap);\n }\n \n /* Issue a warning at a current source line CL */\n \n static void\n parse_warning_context VPARAMS ((tree cl, const char *msg, ...))\n {\n-#ifndef ANSI_PROTOTYPES\n-  tree cl;\n-  const char *msg;\n-#endif\n-  va_list ap;\n-\n-  VA_START (ap, msg);\n-#ifndef ANSI_PROTOTYPES\n-  cl = va_arg (ap, tree);\n-  msg = va_arg (ap, const char *);\n-#endif\n+  VA_OPEN (ap, msg);\n+  VA_FIXEDARG (ap, tree, cl);\n+  VA_FIXEDARG (ap, const char *, msg);\n \n   force_error = do_warning = 1;\n   issue_warning_error_from_context (cl, msg, ap);\n   do_warning = force_error = 0;\n-  va_end (ap);\n+  VA_CLOSE (ap);\n }\n \n static tree"}]}