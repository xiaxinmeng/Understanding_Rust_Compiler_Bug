{"sha": "ebd3c067f0bddc09f93ccabe97642e3e80615b4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJkM2MwNjdmMGJkZGMwOWY5M2NjYWJlOTc2NDJlM2U4MDYxNWI0YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-05-15T15:29:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:29:28Z"}, "message": "Prevent allocation of MMX registers with TARGET_MMX_WITH_SSE\n\n2019-05-15  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\n\tPR target/89021\n\t* config/i386/i386.md (*zero_extendsidi2): Add mmx_isa attribute.\n\t* config/i386/sse.md (sse2_cvtpi2pd): Ditto.\n\t(sse2_cvtpd2pi): Ditto.\n\t(sse2_cvttpd2pi): Ditto.\n\t(*vec_concatv2sf_sse4_1): Ditto.\n\t(*vec_concatv2sf_sse): Ditto.\n\t(*vec_concatv2si_sse4_1): Ditto.\n\t(*vec_concatv2si): Ditto.\n\t(*vec_concatv4si_0): Ditto.\n\t(*vec_concatv2di_0): Ditto.\n\nFrom-SVN: r271249", "tree": {"sha": "82a78b7da87cd4a97c41f55f339afa4fb20dff6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82a78b7da87cd4a97c41f55f339afa4fb20dff6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebd3c067f0bddc09f93ccabe97642e3e80615b4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd3c067f0bddc09f93ccabe97642e3e80615b4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebd3c067f0bddc09f93ccabe97642e3e80615b4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd3c067f0bddc09f93ccabe97642e3e80615b4a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c1d1db27d421ab7c5ac1ca9b23cae002f13380e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c1d1db27d421ab7c5ac1ca9b23cae002f13380e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c1d1db27d421ab7c5ac1ca9b23cae002f13380e"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "206281dcd0a6a1d5415dc90119ba7dd32f75f3a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd3c067f0bddc09f93ccabe97642e3e80615b4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd3c067f0bddc09f93ccabe97642e3e80615b4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebd3c067f0bddc09f93ccabe97642e3e80615b4a", "patch": "@@ -1,3 +1,17 @@\n+2019-05-15  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/89021\n+\t* config/i386/i386.md (*zero_extendsidi2): Add mmx_isa attribute.\n+\t* config/i386/sse.md (sse2_cvtpi2pd): Ditto.\n+\t(sse2_cvtpd2pi): Ditto.\n+\t(sse2_cvttpd2pi): Ditto.\n+\t(*vec_concatv2sf_sse4_1): Ditto.\n+\t(*vec_concatv2sf_sse): Ditto.\n+\t(*vec_concatv2si_sse4_1): Ditto.\n+\t(*vec_concatv2si): Ditto.\n+\t(*vec_concatv4si_0): Ditto.\n+\t(*vec_concatv2di_0): Ditto.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}, {"sha": "1bc14b94cb953f1c1d48dfeab7272be33ef6d9f9", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd3c067f0bddc09f93ccabe97642e3e80615b4a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd3c067f0bddc09f93ccabe97642e3e80615b4a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ebd3c067f0bddc09f93ccabe97642e3e80615b4a", "patch": "@@ -3874,6 +3874,10 @@\n \t      (const_string \"avx512bw\")\n \t   ]\n \t   (const_string \"*\")))\n+   (set (attr \"mmx_isa\")\n+     (if_then_else (eq_attr \"alternative\" \"5,6\")\n+\t\t   (const_string \"native\")\n+\t\t   (const_string \"*\")))\n    (set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"0,1,2,4\")\n \t      (const_string \"multi\")"}, {"sha": "677e7023eb27736193815ef5a304ce277bbfc3c3", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd3c067f0bddc09f93ccabe97642e3e80615b4a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd3c067f0bddc09f93ccabe97642e3e80615b4a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ebd3c067f0bddc09f93ccabe97642e3e80615b4a", "patch": "@@ -5394,7 +5394,8 @@\n   \"@\n    %vcvtdq2pd\\t{%1, %0|%0, %1}\n    cvtpi2pd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssecvt\")\n+  [(set_attr \"mmx_isa\" \"*,native\")\n+   (set_attr \"type\" \"ssecvt\")\n    (set_attr \"unit\" \"*,mmx\")\n    (set_attr \"prefix_data16\" \"*,1\")\n    (set_attr \"prefix\" \"maybe_vex,*\")\n@@ -5408,7 +5409,8 @@\n   \"@\n    * return TARGET_AVX ? \\\"vcvtpd2dq{x}\\t{%1, %0|%0, %1}\\\" : \\\"cvtpd2dq\\t{%1, %0|%0, %1}\\\";\n    cvtpd2pi\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssecvt\")\n+  [(set_attr \"mmx_isa\" \"*,native\")\n+   (set_attr \"type\" \"ssecvt\")\n    (set_attr \"unit\" \"*,mmx\")\n    (set_attr \"amdfam10_decode\" \"double\")\n    (set_attr \"athlon_decode\" \"vector\")\n@@ -5424,7 +5426,8 @@\n   \"@\n    * return TARGET_AVX ? \\\"vcvttpd2dq{x}\\t{%1, %0|%0, %1}\\\" : \\\"cvttpd2dq\\t{%1, %0|%0, %1}\\\";\n    cvttpd2pi\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssecvt\")\n+  [(set_attr \"mmx_isa\" \"*,native\")\n+   (set_attr \"type\" \"ssecvt\")\n    (set_attr \"unit\" \"*,mmx\")\n    (set_attr \"amdfam10_decode\" \"double\")\n    (set_attr \"athlon_decode\" \"vector\")\n@@ -7632,6 +7635,10 @@\n \t      (const_string \"mmxmov\")\n \t   ]\n \t   (const_string \"sselog\")))\n+   (set (attr \"mmx_isa\")\n+     (if_then_else (eq_attr \"alternative\" \"7,8\")\n+\t\t   (const_string \"native\")\n+\t\t   (const_string \"*\")))\n    (set (attr \"prefix_data16\")\n      (if_then_else (eq_attr \"alternative\" \"3,4\")\n \t\t   (const_string \"1\")\n@@ -7667,7 +7674,8 @@\n    movss\\t{%1, %0|%0, %1}\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog,ssemov,mmxcvt,mmxmov\")\n+  [(set_attr \"mmx_isa\" \"*,*,native,native\")\n+   (set_attr \"type\" \"sselog,ssemov,mmxcvt,mmxmov\")\n    (set_attr \"mode\" \"V4SF,SF,DI,DI\")])\n \n (define_insn \"*vec_concatv4sf\"\n@@ -14967,6 +14975,10 @@\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"isa\" \"noavx,noavx,avx,avx512dq,noavx,noavx,avx,*,*,*\")\n+   (set (attr \"mmx_isa\")\n+     (if_then_else (eq_attr \"alternative\" \"8,9\")\n+\t\t   (const_string \"native\")\n+\t\t   (const_string \"*\")))\n    (set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"7\")\n \t      (const_string \"ssemov\")\n@@ -15004,6 +15016,7 @@\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"isa\" \"sse2,sse2,*,*,*,*\")\n+   (set_attr \"mmx_isa\" \"*,*,*,*,native,native\")\n    (set_attr \"type\" \"sselog,ssemov,sselog,ssemov,mmxcvt,mmxmov\")\n    (set_attr \"mode\" \"TI,TI,V4SF,SF,DI,DI\")])\n \n@@ -15033,7 +15046,8 @@\n   \"@\n    %vmovq\\t{%1, %0|%0, %1}\n    movq2dq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n+  [(set_attr \"mmx_isa\" \"*,native\")\n+   (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"maybe_vex,orig\")\n    (set_attr \"mode\" \"TI\")])\n \n@@ -15108,6 +15122,7 @@\n    %vmovq\\t{%1, %0|%0, %1}\n    movq2dq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"isa\" \"x64,*,*\")\n+   (set_attr \"mmx_isa\" \"*,*,native\")\n    (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_rex\" \"1,*,*\")\n    (set_attr \"prefix\" \"maybe_vex,maybe_vex,orig\")"}]}