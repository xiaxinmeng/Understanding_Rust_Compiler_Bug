{"sha": "b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhNmEyZmI2NDJmZjNkZWFmNGFjMTAyZWJjYTc1ZTk2ZWQ5ZDFlOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-03-22T13:29:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-03-22T13:29:29Z"}, "message": "re PR target/20561 (Error compiling jdtcore.jar on powerpc)\n\n\tPR target/20561\n\t* cfglayout.c (reemit_insn_block_notes): Don't put block notes in\n\tbetween jump table and its label.\n\t* final.c (shorten_branches): Handle notes in between ADDR_VEC\n\tresp. ADDR_DIFF_VEC and the label preceeding it.\n\t(final_scan_insn): Likewise.  Ensure ADDR_VEC resp. ADDR_DIFF_VEC\n\tis emitted in the right section.\n\n\t* gcc.dg/20050321-2.c: New test.\n\nFrom-SVN: r96867", "tree": {"sha": "27cfa1f3413445ef3163b5d474ce0e9ab308b803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27cfa1f3413445ef3163b5d474ce0e9ab308b803"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37048601f7fed81a6cef3dd46dac2280b855b53c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37048601f7fed81a6cef3dd46dac2280b855b53c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37048601f7fed81a6cef3dd46dac2280b855b53c"}], "stats": {"total": 95, "additions": 88, "deletions": 7}, "files": [{"sha": "f5e1820e65d5a497e202647ad20e76692cacf762", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "patch": "@@ -1,3 +1,13 @@\n+2005-03-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/20561\n+\t* cfglayout.c (reemit_insn_block_notes): Don't put block notes in\n+\tbetween jump table and its label.\n+\t* final.c (shorten_branches): Handle notes in between ADDR_VEC\n+\tresp. ADDR_DIFF_VEC and the label preceeding it.\n+\t(final_scan_insn): Likewise.  Ensure ADDR_VEC resp. ADDR_DIFF_VEC\n+\tis emitted in the right section.\n+\n 2005-03-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* fold-const.c (fold_unary, fold_binary): Update comments"}, {"sha": "655c9a1b397dd9b4d8121e1b93bfb2b7b6cb7240", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "patch": "@@ -523,6 +523,12 @@ reemit_insn_block_notes (void)\n     {\n       tree this_block;\n \n+      /* Avoid putting scope notes between jump table and its label.  */\n+      if (JUMP_P (insn)\n+\t  && (GET_CODE (PATTERN (insn)) == ADDR_VEC\n+\t      || GET_CODE (PATTERN (insn)) == ADDR_DIFF_VEC))\n+\tcontinue;\n+\n       this_block = insn_scope (insn);\n       /* For sequences compute scope resulting from merging all scopes\n          of instructions nested inside.  */"}, {"sha": "9347efe6b4781712a7e52c2a341edbf30c0f5234", "filename": "gcc/final.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "patch": "@@ -835,7 +835,7 @@ shorten_branches (rtx first ATTRIBUTE_UNUSED)\n \t      max_log = log;\n \t      max_skip = LABEL_ALIGN_MAX_SKIP;\n \t    }\n-\t  next = NEXT_INSN (insn);\n+\t  next = next_nonnote_insn (insn);\n \t  /* ADDR_VECs only take room if read-only data goes into the text\n \t     section.  */\n \t  if (JUMP_TABLES_IN_TEXT_SECTION || !HAVE_READONLY_DATA_SECTION)\n@@ -1677,6 +1677,7 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n #ifdef HAVE_cc0\n   rtx set;\n #endif\n+  rtx next;\n \n   insn_counter++;\n \n@@ -1932,10 +1933,11 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t  fputs (ASM_APP_OFF, file);\n \t  app_on = 0;\n \t}\n-      if (NEXT_INSN (insn) != 0\n-\t  && JUMP_P (NEXT_INSN (insn)))\n+\n+      next = next_nonnote_insn (insn);\n+      if (next != 0 && JUMP_P (next))\n \t{\n-\t  rtx nextbody = PATTERN (NEXT_INSN (insn));\n+\t  rtx nextbody = PATTERN (next);\n \n \t  /* If this label is followed by a jump-table,\n \t     make sure we put the label in the read-only section.  Also\n@@ -1956,7 +1958,7 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t\t  targetm.asm_out.function_rodata_section (current_function_decl);\n \n #ifdef ADDR_VEC_ALIGN\n-\t\t  log_align = ADDR_VEC_ALIGN (NEXT_INSN (insn));\n+\t\t  log_align = ADDR_VEC_ALIGN (next);\n #else\n \t\t  log_align = exact_log2 (BIGGEST_ALIGNMENT / BITS_PER_UNIT);\n #endif\n@@ -1967,7 +1969,7 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \n #ifdef ASM_OUTPUT_CASE_LABEL\n \t      ASM_OUTPUT_CASE_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn),\n-\t\t\t\t     NEXT_INSN (insn));\n+\t\t\t\t     next);\n #else\n \t      targetm.asm_out.internal_label (file, \"L\", CODE_LABEL_NUMBER (insn));\n #endif\n@@ -2022,6 +2024,11 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t    if (prescan > 0)\n \t      break;\n \n+\t    if (! JUMP_TABLES_IN_TEXT_SECTION)\n+\t      targetm.asm_out.function_rodata_section (current_function_decl);\n+\t    else\n+\t      function_section (current_function_decl);\n+\n \t    if (app_on)\n \t      {\n \t\tfputs (ASM_APP_OFF, file);\n@@ -2157,7 +2164,6 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t  {\n \t    /* A delayed-branch sequence */\n \t    int i;\n-\t    rtx next;\n \n \t    if (prescan > 0)\n \t      break;"}, {"sha": "896052860afe74b50baa83a76c68575f324b1355", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "patch": "@@ -1,3 +1,8 @@\n+2005-03-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/20561\n+\t* gcc.dg/20050321-2.c: New test.\n+\n 2005-03-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/20465"}, {"sha": "ac3191423b1dbe1617e22637f0d6c6e02a6b77d9", "filename": "gcc/testsuite/gcc.dg/20050321-2.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2Ftestsuite%2Fgcc.dg%2F20050321-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9/gcc%2Ftestsuite%2Fgcc.dg%2F20050321-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050321-2.c?ref=b2a6a2fb642ff3deaf4ac102ebca75e96ed9d1e9", "patch": "@@ -0,0 +1,54 @@\n+/* This testcase could not assemble on ppc32, because the compiler assumed\n+   the huge ADDR_DIFF_VEC will be emitted into rodata section, yet because\n+   of some notes inserted between jump table's CODE_LABEL and the jump table\n+   it ended up in the .text section and thus shorten_branches couldn't\n+   figure out branch to lab is too far.  */\n+/* { dg-do link } */\n+/* { dg-options \"-g1 -fpic\" } */\n+\n+#define A(n) \\\n+  case n##1: return n##1 * 131 + 63;\t\\\n+  case n##3: return n##3 * 1231 + 182;\t\\\n+  case n##5: return n##5 * 351 + 1;\t\\\n+  case n##7: return n##7 * 312 + 61;\t\\\n+  case n##9: return n##9 * 17 - 1;\n+#define B(n) \\\n+A(n##0) A(n##1) A(n##2) A(n##3) A(n##4) \\\n+A(n##5) A(n##6) A(n##7) A(n##8) A(n##9)\n+#define C(n) \\\n+B(n##0) B(n##1) B(n##2) B(n##3) B(n##4) \\\n+B(n##5) B(n##6) B(n##7) B(n##8) B(n##9)\n+#define D(n) \\\n+C(n##0) C(n##1) B(n##20) B(n##21) B(n##22)\n+      \n+int\n+foo (int x)\n+{\n+  {\n+lab:;\n+    int a = x;\n+    while (a < 60000)\n+      {\n+        int b = a;\n+        {\n+          int c = b;\n+          switch (c)\n+            {\n+              D(1)\n+              default: break;\n+            }\n+        }\n+        a += 10000;\n+        if (a == 4168)\n+          goto lab;\n+      }\n+  }\n+  return x;\n+}\n+\n+int\n+main (void)\n+{\n+  foo (71);\n+  return 0;\n+}"}]}