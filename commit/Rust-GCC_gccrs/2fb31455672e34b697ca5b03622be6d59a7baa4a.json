{"sha": "2fb31455672e34b697ca5b03622be6d59a7baa4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiMzE0NTU2NzJlMzRiNjk3Y2E1YjAzNjIyYmU2ZDU5YTdiYWE0YQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-09-19T01:48:06Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-09-19T01:48:06Z"}, "message": "tls.m4 (GCC_CHECK_TLS): Pass empty argument as \"help arg\" to GCC_ENABLE.\n\nconfig\n\t* tls.m4 (GCC_CHECK_TLS): Pass empty argument as \"help arg\" to\n\tGCC_ENABLE.\nlibgomp\n\t* configure: Rebuilt.\nlibstdc++-v3\n\t* configure: Rebuilt.\nlibmudflap\n\t* configure: Rebuilt.\nlibjava\n\t* configure: Rebuilt.\n\nFrom-SVN: r117049", "tree": {"sha": "2433a9d6bbe783d2a242b770389157472217d88d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2433a9d6bbe783d2a242b770389157472217d88d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fb31455672e34b697ca5b03622be6d59a7baa4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb31455672e34b697ca5b03622be6d59a7baa4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb31455672e34b697ca5b03622be6d59a7baa4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb31455672e34b697ca5b03622be6d59a7baa4a/comments", "author": null, "committer": null, "parents": [{"sha": "5e29ad9e74a644a206d49b745fb4622593ef3f4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e29ad9e74a644a206d49b745fb4622593ef3f4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e29ad9e74a644a206d49b745fb4622593ef3f4a"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "fa855c0afa27f0095b7eea347c177c0dfbb1bc73", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -1,3 +1,8 @@\n+2006-09-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* tls.m4 (GCC_CHECK_TLS): Pass empty argument as \"help arg\" to\n+\tGCC_ENABLE.\n+\n 2006-07-25  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR build/26188"}, {"sha": "b7a07309abe447ec458dc7e014c44b3c4c5b9331", "filename": "config/tls.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/config%2Ftls.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/config%2Ftls.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Ftls.m4?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -1,6 +1,6 @@\n dnl Check whether the target supports TLS.\n AC_DEFUN([GCC_CHECK_TLS], [\n-  GCC_ENABLE(tls, yes, [Use thread-local storage])\n+  GCC_ENABLE(tls, yes, [], [Use thread-local storage])\n   AC_CACHE_CHECK([whether the target supports thread-local storage],\n \t\t have_tls, [\n     AC_RUN_IFELSE([__thread int a; int b; int main() { return a = b; }],"}, {"sha": "9dc9e31078fe7eac7def7370368f936112abbee4", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -1,3 +1,7 @@\n+2006-09-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\n 2006-09-13  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/28768"}, {"sha": "f01acbfd96b3365660136f877edfa75e845180a3", "filename": "libgomp/configure", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -865,8 +865,7 @@ Optional Features:\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n-  _g_switchUse thread-local storage\n-                          [default=yes]\n+  --enable-tls            Use thread-local storage [default=yes]\n   --enable-symvers=STYLE  enables symbol versioning of the shared library\n                           [default=yes]\n \n@@ -4228,7 +4227,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4231 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4230 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -4638,7 +4637,7 @@ fi\n \n \n # Provide some information about the compiler.\n-echo \"$as_me:4641:\" \\\n+echo \"$as_me:4640:\" \\\n      \"checking for Fortran compiler version\" >&5\n ac_compiler=`set X $ac_compile; echo $2`\n { (eval echo \"$as_me:$LINENO: \\\"$ac_compiler --version </dev/null >&5\\\"\") >&5"}, {"sha": "92cbfb7cbad31f9b8bc723a3011d312c327bd0b7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -1,3 +1,7 @@\n+2006-09-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\n 2006-09-18  Petr Salinger  <Petr.Salinger@seznam.cz>\n \n \t* configure.host: Handle kfreebsd."}, {"sha": "17dda7c065d18e80e2e5fad8ffba8b3665a9f510", "filename": "libjava/configure", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -877,8 +877,7 @@ Optional Features:\n   --disable-jvmpi         disable JVMPI support\n   --enable-java-gc=TYPE   choose garbage collector (default is boehm)\n   --disable-rpath         do not hardcode runtime library paths\n-  _g_switchUse thread-local storage\n-                          [default=yes]\n+  --enable-tls            Use thread-local storage [default=yes]\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -5876,7 +5875,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5879 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5878 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -6879,7 +6878,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then\n   :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 6882 \"configure\"\n+#line 6881 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()"}, {"sha": "4890660a7934f8f56162f139865cd39ece6fa255", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -1,3 +1,7 @@\n+2006-09-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\n 2006-06-21  Frank Ch. Eigler  <fche@redhat.com>\n \n \tPR 21274"}, {"sha": "ed7cb8f02012adb2d60cb0fd8be56edb3e5a2583", "filename": "libmudflap/configure", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -850,8 +850,7 @@ Optional Features:\n   --enable-static=PKGS  build static libraries default=yes\n   --enable-fast-install=PKGS  optimize for fast installation default=yes\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n-  _g_switchUse thread-local storage\n-                          [default=yes]\n+  --enable-tls            Use thread-local storage [default=yes]\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -5850,7 +5849,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5853 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5852 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?"}, {"sha": "505266b3be692491b75bed3ad13ac3d06d96d80c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -1,3 +1,7 @@\n+2006-09-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\n 2006-09-18  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (_M_group_int): Remove"}, {"sha": "c4185e73e7b75830e6c5efcb8b810b4ee40ae12d", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb31455672e34b697ca5b03622be6d59a7baa4a/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb31455672e34b697ca5b03622be6d59a7baa4a/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=2fb31455672e34b697ca5b03622be6d59a7baa4a", "patch": "@@ -887,8 +887,7 @@ Optional Features:\n   --enable-fully-dynamic-string\n                           do not put empty strings in per-process static\n                           memory [default=no]\n-  _g_switchUse thread-local storage\n-                          [default=yes]\n+  --enable-tls            Use thread-local storage [default=yes]\n   --enable-symvers=STYLE  enables symbol versioning of the shared library\n                           [default=yes]\n   --enable-visibility     enables visibility safe usage [default=yes]\n@@ -4733,7 +4732,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4736 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4735 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -5353,7 +5352,7 @@ fi;\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 5356 \"configure\"\n+#line 5355 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -8009,7 +8008,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n   # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 8012 \"configure\"\n+#line 8011 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int."}]}