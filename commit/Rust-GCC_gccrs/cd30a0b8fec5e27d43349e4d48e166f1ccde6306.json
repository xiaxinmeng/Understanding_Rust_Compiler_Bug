{"sha": "cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzMGEwYjhmZWM1ZTI3ZDQzMzQ5ZTRkNDhlMTY2ZjFjY2RlNjMwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-19T07:38:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-19T07:38:59Z"}, "message": "re PR fortran/82568 ([6/7/8] ICE with do-loop inside BLOCK inside omp)\n\n\tPR fortran/82568\n\t* gfortran.h (gfc_resolve_do_iterator): Add a bool arg.\n\t(gfc_resolve_omp_local_vars): New declaration.\n\t* openmp.c (omp_current_ctx): Make static.\n\t(gfc_resolve_omp_parallel_blocks): Handle EXEC_OMP_TASKLOOP\n\tand EXEC_OMP_TASKLOOP_SIMD.\n\t(gfc_resolve_do_iterator): Add ADD_CLAUSE argument, if false,\n\tdon't actually add any clause.  Move omp_current_ctx test\n\tearlier.\n\t(handle_local_var, gfc_resolve_omp_local_vars): New functions.\n\t* resolve.c (gfc_resolve_code): Call gfc_resolve_omp_parallel_blocks\n\tinstead of just gfc_resolve_omp_do_blocks for EXEC_OMP_TASKLOOP\n\tand EXEC_OMP_TASKLOOP_SIMD.\n\t(gfc_resolve_code): Adjust gfc_resolve_do_iterator caller.\n\t(resolve_codes): Call gfc_resolve_omp_local_vars.\n\n\t* gfortran.dg/gomp/pr82568.f90: New test.\n\nFrom-SVN: r253878", "tree": {"sha": "a348b948e294ac9c727be78f3655ee80dfdf152d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a348b948e294ac9c727be78f3655ee80dfdf152d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcc478b9647e2af4b715fda6676d98f1e129d16b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc478b9647e2af4b715fda6676d98f1e129d16b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcc478b9647e2af4b715fda6676d98f1e129d16b"}], "stats": {"total": 139, "additions": 129, "deletions": 10}, "files": [{"sha": "11c8ef0f59eaefe31e057610653ce5080fe01e48", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "patch": "@@ -1,3 +1,21 @@\n+2017-10-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/82568\n+\t* gfortran.h (gfc_resolve_do_iterator): Add a bool arg.\n+\t(gfc_resolve_omp_local_vars): New declaration.\n+\t* openmp.c (omp_current_ctx): Make static.\n+\t(gfc_resolve_omp_parallel_blocks): Handle EXEC_OMP_TASKLOOP\n+\tand EXEC_OMP_TASKLOOP_SIMD.\n+\t(gfc_resolve_do_iterator): Add ADD_CLAUSE argument, if false,\n+\tdon't actually add any clause.  Move omp_current_ctx test\n+\tearlier.\n+\t(handle_local_var, gfc_resolve_omp_local_vars): New functions.\n+\t* resolve.c (gfc_resolve_code): Call gfc_resolve_omp_parallel_blocks\n+\tinstead of just gfc_resolve_omp_do_blocks for EXEC_OMP_TASKLOOP\n+\tand EXEC_OMP_TASKLOOP_SIMD.\n+\t(gfc_resolve_code): Adjust gfc_resolve_do_iterator caller.\n+\t(resolve_codes): Call gfc_resolve_omp_local_vars.\n+\n 2017-10-19  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n \n \t* gfortran.h (gfc_lookup_function_fuzzy): New declaration."}, {"sha": "2c2fc6367081d47d8316170542b77c517b27655e", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "patch": "@@ -3114,7 +3114,8 @@ void gfc_free_omp_declare_simd_list (gfc_omp_declare_simd *);\n void gfc_free_omp_udr (gfc_omp_udr *);\n gfc_omp_udr *gfc_omp_udr_find (gfc_symtree *, gfc_typespec *);\n void gfc_resolve_omp_directive (gfc_code *, gfc_namespace *);\n-void gfc_resolve_do_iterator (gfc_code *, gfc_symbol *);\n+void gfc_resolve_do_iterator (gfc_code *, gfc_symbol *, bool);\n+void gfc_resolve_omp_local_vars (gfc_namespace *);\n void gfc_resolve_omp_parallel_blocks (gfc_code *, gfc_namespace *);\n void gfc_resolve_omp_do_blocks (gfc_code *, gfc_namespace *);\n void gfc_resolve_omp_declare_simd (gfc_namespace *);"}, {"sha": "2606323d42a71584ec45e4302c4351495ec94015", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "patch": "@@ -5262,7 +5262,7 @@ resolve_omp_atomic (gfc_code *code)\n }\n \n \n-struct fortran_omp_context\n+static struct fortran_omp_context\n {\n   gfc_code *code;\n   hash_set<gfc_symbol *> *sharing_clauses;\n@@ -5345,6 +5345,8 @@ gfc_resolve_omp_parallel_blocks (gfc_code *code, gfc_namespace *ns)\n     case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO:\n     case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n     case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_SIMD:\n+    case EXEC_OMP_TASKLOOP:\n+    case EXEC_OMP_TASKLOOP_SIMD:\n     case EXEC_OMP_TEAMS_DISTRIBUTE:\n     case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO:\n     case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n@@ -5390,8 +5392,11 @@ gfc_omp_restore_state (struct gfc_omp_saved_state *state)\n    construct, where they are predetermined private.  */\n \n void\n-gfc_resolve_do_iterator (gfc_code *code, gfc_symbol *sym)\n+gfc_resolve_do_iterator (gfc_code *code, gfc_symbol *sym, bool add_clause)\n {\n+  if (omp_current_ctx == NULL)\n+    return;\n+\n   int i = omp_current_do_collapse;\n   gfc_code *c = omp_current_do_code;\n \n@@ -5410,9 +5415,6 @@ gfc_resolve_do_iterator (gfc_code *code, gfc_symbol *sym)\n       c = c->block->next;\n     }\n \n-  if (omp_current_ctx == NULL)\n-    return;\n-\n   /* An openacc context may represent a data clause.  Abort if so.  */\n   if (!omp_current_ctx->is_openmp && !oacc_is_loop (omp_current_ctx->code))\n     return;\n@@ -5421,7 +5423,7 @@ gfc_resolve_do_iterator (gfc_code *code, gfc_symbol *sym)\n       && omp_current_ctx->sharing_clauses->contains (sym))\n     return;\n \n-  if (! omp_current_ctx->private_iterators->add (sym))\n+  if (! omp_current_ctx->private_iterators->add (sym) && add_clause)\n     {\n       gfc_omp_clauses *omp_clauses = omp_current_ctx->code->ext.omp_clauses;\n       gfc_omp_namelist *p;\n@@ -5433,6 +5435,22 @@ gfc_resolve_do_iterator (gfc_code *code, gfc_symbol *sym)\n     }\n }\n \n+static void\n+handle_local_var (gfc_symbol *sym)\n+{\n+  if (sym->attr.flavor != FL_VARIABLE\n+      || sym->as != NULL\n+      || (sym->ts.type != BT_INTEGER && sym->ts.type != BT_REAL))\n+    return;\n+  gfc_resolve_do_iterator (sym->ns->code, sym, false);\n+}\n+\n+void\n+gfc_resolve_omp_local_vars (gfc_namespace *ns)\n+{\n+  if (omp_current_ctx)\n+    gfc_traverse_ns (ns, handle_local_var);\n+}\n \n static void\n resolve_omp_do (gfc_code *code)"}, {"sha": "04d4e8ab6cb5eb2aea637b15d91324f515300624", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "patch": "@@ -11008,6 +11008,8 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_SIMD:\n \t    case EXEC_OMP_TASK:\n+\t    case EXEC_OMP_TASKLOOP:\n+\t    case EXEC_OMP_TASKLOOP_SIMD:\n \t    case EXEC_OMP_TEAMS:\n \t    case EXEC_OMP_TEAMS_DISTRIBUTE:\n \t    case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO:\n@@ -11023,8 +11025,6 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t    case EXEC_OMP_DO_SIMD:\n \t    case EXEC_OMP_SIMD:\n \t    case EXEC_OMP_TARGET_SIMD:\n-\t    case EXEC_OMP_TASKLOOP:\n-\t    case EXEC_OMP_TASKLOOP_SIMD:\n \t      gfc_resolve_omp_do_blocks (code, ns);\n \t      break;\n \t    case EXEC_SELECT_TYPE:\n@@ -11285,7 +11285,8 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t    {\n \t      gfc_iterator *iter = code->ext.iterator;\n \t      if (gfc_resolve_iterator (iter, true, false))\n-\t\tgfc_resolve_do_iterator (code, iter->var->symtree->n.sym);\n+\t\tgfc_resolve_do_iterator (code, iter->var->symtree->n.sym,\n+\t\t\t\t\t true);\n \t    }\n \t  break;\n \n@@ -16352,6 +16353,7 @@ resolve_codes (gfc_namespace *ns)\n   bitmap_obstack_initialize (&labels_obstack);\n \n   gfc_resolve_oacc_declare (ns);\n+  gfc_resolve_omp_local_vars (ns);\n   gfc_resolve_code (ns->code, ns);\n \n   bitmap_obstack_release (&labels_obstack);"}, {"sha": "39f2edd544efcc20892ace476368706d46232c6b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "patch": "@@ -1,3 +1,8 @@\n+2017-10-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/82568\n+\t* gfortran.dg/gomp/pr82568.f90: New test.\n+\n 2017-10-19  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n \n \t* gfortran.dg/spellcheck-operator.f90: New testcase."}, {"sha": "303278ca58f3b31d9450d4cf8cd62c976edd0724", "filename": "gcc/testsuite/gfortran.dg/gomp/pr82568.f90", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr82568.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd30a0b8fec5e27d43349e4d48e166f1ccde6306/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr82568.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr82568.f90?ref=cd30a0b8fec5e27d43349e4d48e166f1ccde6306", "patch": "@@ -0,0 +1,75 @@\n+! PR fortran/82568\n+\n+MODULE PR82568_MOD\n+  INTEGER :: N\n+END MODULE\n+PROGRAM PR82568\n+  INTEGER :: I, L\n+  !$OMP PARALLEL DO\n+  DO I=1,2\n+    BLOCK\n+      USE PR82568_MOD\n+      INTEGER :: J\n+      DO J=1,2\n+        PRINT*,I,J\n+      END DO\n+      DO K=1,2\n+        PRINT*,I,K\n+      END DO\n+      DO L=1,2\n+        PRINT*,I,L\n+      END DO\n+      DO N=1,2\n+        PRINT*,I,N\n+      END DO\n+    END BLOCK\n+    DO M=1,2\n+      PRINT*,I,M\n+    END DO\n+  END DO\n+  !$OMP TASK\n+  DO I=1,2\n+    BLOCK\n+      USE PR82568_MOD\n+      INTEGER :: J\n+      DO J=1,2\n+        PRINT*,I,J\n+      END DO\n+      DO K=1,2\n+        PRINT*,I,K\n+      END DO\n+      DO L=1,2\n+        PRINT*,I,L\n+      END DO\n+      DO N=1,2\n+        PRINT*,I,N\n+      END DO\n+    END BLOCK\n+    DO M=1,2\n+      PRINT*,I,M\n+    END DO\n+  END DO\n+  !$OMP END TASK\n+  !$OMP TASKLOOP\n+  DO I=1,2\n+    BLOCK\n+      USE PR82568_MOD\n+      INTEGER :: J\n+      DO J=1,2\n+        PRINT*,I,J\n+      END DO\n+      DO K=1,2\n+        PRINT*,I,K\n+      END DO\n+      DO L=1,2\n+        PRINT*,I,L\n+      END DO\n+      DO N=1,2\n+        PRINT*,I,N\n+      END DO\n+    END BLOCK\n+    DO M=1,2\n+      PRINT*,I,M\n+    END DO\n+  END DO\n+END PROGRAM PR82568"}]}