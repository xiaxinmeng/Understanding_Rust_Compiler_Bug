{"sha": "1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZmMjQ3NDk2NjQxYzc4ZmJmYmViNmEwNGRiMmM4ZGJkZWRiY2YxZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-07-17T15:06:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-07-17T15:06:36Z"}, "message": "re PR middle-end/49732 (crash on terminal_interface-curses-menus.adb from ncurses with -gnato)\n\n\tPR middle-end/49732\n\t* tree.c (walk_tree_1) <DECL_EXPR>: Do not walk a pointed-to type.\n\nFrom-SVN: r176371", "tree": {"sha": "7c6e299f25c884686c710a82475f43eda7b6e38e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c6e299f25c884686c710a82475f43eda7b6e38e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/comments", "author": null, "committer": null, "parents": [{"sha": "73cd74f8e7a9f2c7b6fe38c0b76179f89c363f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73cd74f8e7a9f2c7b6fe38c0b76179f89c363f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73cd74f8e7a9f2c7b6fe38c0b76179f89c363f37"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "84e9ad508f0878f6fffbdd7982cd66478104c92e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f", "patch": "@@ -1,3 +1,8 @@\n+2011-07-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/49732\n+\t* tree.c (walk_tree_1) <DECL_EXPR>: Do not walk a pointed-to type.\n+\n 2011-07-16  Matthias Klose  <doko@ubuntu.com>\n \n \t* doc/install.texi: Document --enable-static-libjava."}, {"sha": "2e5683c623ae57a6c11371b43bf23d2bf5a7cb38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f", "patch": "@@ -1,3 +1,7 @@\n+2011-07-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/pointer_controlled.adb: New test.\n+\n 2011-07-17  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/49624"}, {"sha": "1d85b53fec341cd57aabd086fdc5ee45adf97b4b", "filename": "gcc/testsuite/gnat.dg/pointer_controlled.adb", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_controlled.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_controlled.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpointer_controlled.adb?ref=1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f", "patch": "@@ -0,0 +1,31 @@\n+-- PR ada/49732\n+-- Testcase by Vorfeed Canal\n+\n+-- { dg-do compile }\n+-- { dg-options \"-gnato\" }\n+\n+with Interfaces.C; use Interfaces.C;\n+with Interfaces.C.Strings; use Interfaces.C.Strings;\n+with Interfaces.C.Pointers;\n+\n+procedure Pointer_Controlled is\n+\n+   function Create (Name : String) return size_t is\n+\n+      type Name_String is new char_array (0 .. Name'Length);\n+      type Name_String_Ptr is access Name_String;\n+      pragma Controlled (Name_String_Ptr);\n+\n+      Name_Str : constant Name_String_Ptr := new Name_String;\n+      Name_Len : size_t;\n+\n+   begin\n+      To_C (Name, Name_Str.all, Name_Len);\n+      return 1;\n+   end;\n+\n+   Test : size_t;\n+\n+begin\n+   Test := Create(\"ABC\");\n+end;"}, {"sha": "10f50de8a5251a5c2ce0bdc1f849d767f1467219", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1ff247496641c78fbfbeb6a04db2c8dbdedbcf1f", "patch": "@@ -10596,9 +10596,14 @@ walk_tree_1 (tree *tp, walk_tree_fn func, void *data,\n \t  if (result || !walk_subtrees)\n \t    return result;\n \n-\t  result = walk_type_fields (*type_p, func, data, pset, lh);\n-\t  if (result)\n-\t    return result;\n+\t  /* But do not walk a pointed-to type since it may itself need to\n+\t     be walked in the declaration case if it isn't anonymous.  */\n+\t  if (!POINTER_TYPE_P (*type_p))\n+\t    {\n+\t      result = walk_type_fields (*type_p, func, data, pset, lh);\n+\t      if (result)\n+\t\treturn result;\n+\t    }\n \n \t  /* If this is a record type, also walk the fields.  */\n \t  if (RECORD_OR_UNION_TYPE_P (*type_p))"}]}