{"sha": "3d27140a15ebf66af41c289758ccd3d2b1159edc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QyNzE0MGExNWViZjY2YWY0MWMyODk3NThjY2QzZDJiMTE1OWVkYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-15T15:02:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-15T15:02:59Z"}, "message": "(expand_expr, case COMPONENT_REF): Don't make recursive call on object\nwith EXPAND_SUM.\n\nFrom-SVN: r10989", "tree": {"sha": "057e5c5496357d3663f9f288e34f26832ae70a0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/057e5c5496357d3663f9f288e34f26832ae70a0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d27140a15ebf66af41c289758ccd3d2b1159edc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d27140a15ebf66af41c289758ccd3d2b1159edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d27140a15ebf66af41c289758ccd3d2b1159edc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d27140a15ebf66af41c289758ccd3d2b1159edc/comments", "author": null, "committer": null, "parents": [{"sha": "acc3b6d90a6f069f15d57ae28d82262809d9d8bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc3b6d90a6f069f15d57ae28d82262809d9d8bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc3b6d90a6f069f15d57ae28d82262809d9d8bc"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "60336c96ecad81758f7cb43f8120313d02e8cba1", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d27140a15ebf66af41c289758ccd3d2b1159edc/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d27140a15ebf66af41c289758ccd3d2b1159edc/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3d27140a15ebf66af41c289758ccd3d2b1159edc", "patch": "@@ -1,5 +1,5 @@\n /* Convert tree expression to rtl instructions, for GNU compiler.\n-   Copyright (C) 1988, 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -5129,11 +5129,7 @@ expand_expr (exp, target, tmode, modifier)\n \tif (tem == exp)\n \t  abort ();\n \n-\t/* In some cases, we will be offsetting OP0's address by a constant.\n-\t   So get it as a sum, if possible.  If we will be using it\n-\t   directly in an insn, we validate it. \n-\n-\t   If TEM's type is a union of variable size, pass TARGET to the inner\n+\t/* If TEM's type is a union of variable size, pass TARGET to the inner\n \t   computation, since it will need a temporary and TARGET is known\n \t   to have to do.  This occurs in unchecked conversion in Ada.  */\n   \n@@ -5142,7 +5138,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t\t    && (TREE_CODE (TYPE_SIZE (TREE_TYPE (tem)))\n \t\t\t\t!= INTEGER_CST)\n \t\t\t    ? target : NULL_RTX),\n-\t\t\t   VOIDmode, EXPAND_SUM);\n+\t\t\t   VOIDmode, 0);\n \n \t/* If this is a constant, put it into a register if it is a\n \t   legitimate constant and memory if it isn't.  */"}]}