{"sha": "6d29fc410279b31a70380d9bebd0b8cca0e3d8da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQyOWZjNDEwMjc5YjMxYTcwMzgwZDliZWJkMGI4Y2NhMGUzZDhkYQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-04-23T23:59:58Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-04-23T23:59:58Z"}, "message": "sparc.md (isa attribute): Add sparclet.\n\n\t* sparc/sparc.md (isa attribute): Add sparclet.\n\t(*smacsi3,*smacdi3,*umacdi3): Use match_operand, not match_dup\n\tfor third arg.\n\t(*mulsidi3_sp32,const_mulsidi3,*umulsidi3_sp32,\tconst_umulsidi3): Use\n\tsmuld,umuld for sparclet.\n\nFrom-SVN: r11871", "tree": {"sha": "e9abf628ecf9ec84f758d3b41128452513088dec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9abf628ecf9ec84f758d3b41128452513088dec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d29fc410279b31a70380d9bebd0b8cca0e3d8da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d29fc410279b31a70380d9bebd0b8cca0e3d8da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d29fc410279b31a70380d9bebd0b8cca0e3d8da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d29fc410279b31a70380d9bebd0b8cca0e3d8da/comments", "author": null, "committer": null, "parents": [{"sha": "77c871e678d6ebeae70cc206af203ffc69b9a4f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c871e678d6ebeae70cc206af203ffc69b9a4f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77c871e678d6ebeae70cc206af203ffc69b9a4f0"}], "stats": {"total": 47, "additions": 34, "deletions": 13}, "files": [{"sha": "eb9e3c705de6f14e4a063765e576e9b1caeda665", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 34, "deletions": 13, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d29fc410279b31a70380d9bebd0b8cca0e3d8da/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d29fc410279b31a70380d9bebd0b8cca0e3d8da/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=6d29fc410279b31a70380d9bebd0b8cca0e3d8da", "patch": "@@ -40,10 +40,11 @@\n ;; Attribute for the instruction set.\n ;; At present we only need to distinguish v9/!v9, but for clarity we\n ;; test TARGET_V8 too.\n-(define_attr \"isa\" \"v6,v8,v9\"\n+(define_attr \"isa\" \"v6,v8,v9,sparclet\"\n  (const\n   (cond [(symbol_ref \"TARGET_V9\") (const_string \"v9\")\n-\t (symbol_ref \"TARGET_V8\") (const_string \"v8\")]\n+\t (symbol_ref \"TARGET_V8\") (const_string \"v8\")\n+\t (symbol_ref \"TARGET_SPARCLET\") (const_string \"sparclet\")]\n \t(const_string \"v6\"))))\n \n ;; Architecture size.\n@@ -3773,8 +3774,13 @@\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"TARGET_V8 || TARGET_SPARCLITE || TARGET_SPARCLET || TARGET_DEPRECATED_V8_INSNS\"\n-  \"smul %1,%2,%R0\\;rd %%y,%0\"\n-  [(set_attr \"length\" \"2\")])\n+  \"*\n+{\n+  return TARGET_SPARCLET ? \\\"smuld %1,%2,%R0\\\" : \\\"smul %1,%2,%R0\\;rd %%y,%0\\\";\n+}\"\n+  [(set (attr \"length\")\n+\t(if_then_else (eq_attr \"isa\" \"sparclet\")\n+\t\t      (const_int 1) (const_int 2)))])\n \n ;; Extra pattern, because sign_extend of a constant isn't valid.\n \n@@ -3783,8 +3789,13 @@\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t (match_operand:SI 2 \"small_int\" \"I\")))]\n   \"TARGET_V8 || TARGET_SPARCLITE || TARGET_SPARCLET || TARGET_DEPRECATED_V8_INSNS\"\n-  \"smul %1,%2,%R0\\;rd %%y,%0\"\n-  [(set_attr \"length\" \"2\")])\n+  \"*\n+{\n+  return TARGET_SPARCLET ? \\\"smuld %1,%2,%R0\\\" : \\\"smul %1,%2,%R0\\;rd %%y,%0\\\";\n+}\"\n+  [(set (attr \"length\")\n+\t(if_then_else (eq_attr \"isa\" \"sparclet\")\n+\t\t      (const_int 1) (const_int 2)))])\n \n (define_expand \"smulsi3_highpart\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -3841,8 +3852,13 @@\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"r\"))))]\n   \"TARGET_V8 || TARGET_SPARCLITE || TARGET_SPARCLET || TARGET_DEPRECATED_V8_INSNS\"\n-  \"umul %1,%2,%R0\\;rd %%y,%0\"\n-  [(set_attr \"length\" \"2\")])\n+  \"*\n+{\n+  return TARGET_SPARCLET ? \\\"umuld %1,%2,%R0\\\" : \\\"umul %1,%2,%R0\\;rd %%y,%0\\\";\n+}\"\n+  [(set (attr \"length\")\n+\t(if_then_else (eq_attr \"isa\" \"sparclet\")\n+\t\t      (const_int 1) (const_int 2)))])\n \n ;; Extra pattern, because sign_extend of a constant isn't valid.\n \n@@ -3851,8 +3867,13 @@\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t (match_operand:SI 2 \"uns_small_int\" \"\")))]\n   \"TARGET_V8 || TARGET_SPARCLITE || TARGET_SPARCLET || TARGET_DEPRECATED_V8_INSNS\"\n-  \"umul %1,%2,%R0\\;rd %%y,%0\"\n-  [(set_attr \"length\" \"2\")])\n+  \"*\n+{\n+  return TARGET_SPARCLET ? \\\"umuld %1,%2,%R0\\\" : \\\"umul %1,%2,%R0\\;rd %%y,%0\\\";\n+}\"\n+  [(set (attr \"length\")\n+\t(if_then_else (eq_attr \"isa\" \"sparclet\")\n+\t\t      (const_int 1) (const_int 2)))])\n \n (define_expand \"umulsi3_highpart\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -3989,7 +4010,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"+r\")\n \t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"%r\")\n \t\t\t  (match_operand:SI 2 \"arith_operand\" \"rI\"))\n-\t\t (match_dup 0)))]\n+\t\t (match_operand:SI 3 \"register_operand\" \"0\")))]\n   \"TARGET_SPARCLET\"\n   \"smac %1,%2,%0\"\n   [(set_attr \"type\" \"imul\")])\n@@ -4000,7 +4021,7 @@\n \t\t\t   (match_operand:SI 1 \"register_operand\" \"%r\"))\n \t\t\t  (sign_extend:DI\n \t\t\t   (match_operand:SI 2 \"register_operand\" \"r\")))\n-\t\t (match_dup 0)))]\n+\t\t (match_operand:DI 3 \"register_operand\" \"0\")))]\n   \"TARGET_SPARCLET\"\n   \"smacd %1,%2,%R0\"\n   [(set_attr \"type\" \"imul\")])\n@@ -4011,7 +4032,7 @@\n \t\t\t   (match_operand:SI 1 \"register_operand\" \"%r\"))\n \t\t\t  (zero_extend:DI\n \t\t\t   (match_operand:SI 2 \"register_operand\" \"r\")))\n-\t\t (match_dup 0)))]\n+\t\t (match_operand:DI 3 \"register_operand\" \"0\")))]\n   \"TARGET_SPARCLET\"\n   \"umacd %1,%2,%R0\"\n   [(set_attr \"type\" \"imul\")])"}]}