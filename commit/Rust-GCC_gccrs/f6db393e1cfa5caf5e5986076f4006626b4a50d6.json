{"sha": "f6db393e1cfa5caf5e5986076f4006626b4a50d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkYjM5M2UxY2ZhNWNhZjVlNTk4NjA3NmY0MDA2NjI2YjRhNTBkNg==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-10-14T21:21:07Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-10-14T21:21:07Z"}, "message": "* aclocal.m4: Properly quote names of macros being defined.\n\nFrom-SVN: r72499", "tree": {"sha": "4618c7600823eb0f4797c2124f73853cc4d374c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4618c7600823eb0f4797c2124f73853cc4d374c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6db393e1cfa5caf5e5986076f4006626b4a50d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6db393e1cfa5caf5e5986076f4006626b4a50d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6db393e1cfa5caf5e5986076f4006626b4a50d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6db393e1cfa5caf5e5986076f4006626b4a50d6/comments", "author": null, "committer": null, "parents": [{"sha": "296da0016d67e7c1cd46d47e6543c8060cbd2236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/296da0016d67e7c1cd46d47e6543c8060cbd2236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/296da0016d67e7c1cd46d47e6543c8060cbd2236"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "72eafabdb7def46fe22926e9505d69532b961ec9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6db393e1cfa5caf5e5986076f4006626b4a50d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6db393e1cfa5caf5e5986076f4006626b4a50d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6db393e1cfa5caf5e5986076f4006626b4a50d6", "patch": "@@ -1,5 +1,7 @@\n 2003-10-14  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* aclocal.m4: Properly quote names of macros being defined.\n+\n \t* config.gcc (am33_2.0-*-linux*): Use t-slibgcc-elf-ver.\n \n 2003-10-14  Steve Ellcey  <sje@cup.hp.com>"}, {"sha": "ca7fa5c608d1557705896d5c1e35c5bc4ae0668c", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6db393e1cfa5caf5e5986076f4006626b4a50d6/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6db393e1cfa5caf5e5986076f4006626b4a50d6/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=f6db393e1cfa5caf5e5986076f4006626b4a50d6", "patch": "@@ -4,7 +4,7 @@ sinclude(../config/gettext.m4)\n sinclude(../config/progtest.m4)\n \n dnl See if stdbool.h properly defines bool and true/false.\n-AC_DEFUN(gcc_AC_HEADER_STDBOOL,\n+AC_DEFUN([gcc_AC_HEADER_STDBOOL],\n [AC_CACHE_CHECK([for working stdbool.h],\n   ac_cv_header_stdbool_h,\n [AC_TRY_COMPILE([#include <stdbool.h>],\n@@ -18,7 +18,7 @@ fi\n \n dnl Fixed AC_CHECK_TYPE that doesn't need anything in acconfig.h.\n dnl Remove after migrating to 2.5x.\n-AC_DEFUN(gcc_AC_CHECK_TYPE,\n+AC_DEFUN([gcc_AC_CHECK_TYPE],\n [AC_REQUIRE([AC_HEADER_STDC])dnl\n AC_MSG_CHECKING(for $1)\n AC_CACHE_VAL(ac_cv_type_$1,\n@@ -38,7 +38,7 @@ fi\n \n \n dnl See whether we can include both string.h and strings.h.\n-AC_DEFUN(gcc_AC_HEADER_STRING,\n+AC_DEFUN([gcc_AC_HEADER_STRING],\n [AC_CACHE_CHECK([whether string.h and strings.h may both be included],\n   gcc_cv_header_string,\n [AC_TRY_COMPILE([#include <string.h>\n@@ -54,7 +54,7 @@ dnl to use a different cache variable name in this macro if it is invoked\n dnl in a different context somewhere else.\n dnl gcc_AC_CHECK_DECL(SYMBOL,\n dnl \t[ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, INCLUDES]]])\n-AC_DEFUN(gcc_AC_CHECK_DECL,\n+AC_DEFUN([gcc_AC_CHECK_DECL],\n [AC_MSG_CHECKING([whether $1 is declared])\n AC_CACHE_VAL(gcc_cv_have_decl_$1,\n [AC_TRY_COMPILE([$4],\n@@ -72,7 +72,7 @@ dnl Check multiple functions to see whether each needs a declaration.\n dnl Arrange to define HAVE_DECL_<FUNCTION> to 0 or 1 as appropriate.\n dnl gcc_AC_CHECK_DECLS(SYMBOLS,\n dnl \t[ACTION-IF-NEEDED [, ACTION-IF-NOT-NEEDED [, INCLUDES]]])\n-AC_DEFUN(gcc_AC_CHECK_DECLS,\n+AC_DEFUN([gcc_AC_CHECK_DECLS],\n [for ac_func in $1\n do\n changequote(, )dnl\n@@ -107,7 +107,7 @@ dnl \"if cmp --ignore-initial=2 t1 t2 && ! cmp --ignore-initial=1 t1 t2\"\n dnl but we need to sink errors and handle broken shells.  We also test\n dnl for the parameter format \"cmp file1 file2 skip1 skip2\" which is\n dnl accepted by cmp on some systems.\n-AC_DEFUN(gcc_AC_PROG_CMP_IGNORE_INITIAL,\n+AC_DEFUN([gcc_AC_PROG_CMP_IGNORE_INITIAL],\n [AC_CACHE_CHECK([for cmp's capabilities], gcc_cv_prog_cmp_skip,\n [ echo abfoo >t1\n   echo cdfoo >t2\n@@ -135,7 +135,7 @@ AC_SUBST(make_compare_target)\n ])\n \n dnl See if the printf functions in libc support %p in format strings.\n-AC_DEFUN(gcc_AC_FUNC_PRINTF_PTR,\n+AC_DEFUN([gcc_AC_FUNC_PRINTF_PTR],\n [AC_CACHE_CHECK(whether the printf functions support %p,\n   gcc_cv_func_printf_ptr,\n [AC_TRY_RUN([#include <stdio.h>\n@@ -156,7 +156,7 @@ fi\n ])\n \n dnl See if symbolic links work and if not, try to substitute either hard links or simple copy.\n-AC_DEFUN(gcc_AC_PROG_LN_S,\n+AC_DEFUN([gcc_AC_PROG_LN_S],\n [AC_MSG_CHECKING(whether ln -s works)\n AC_CACHE_VAL(gcc_cv_prog_LN_S,\n [rm -f conftestdata_t\n@@ -188,7 +188,7 @@ AC_SUBST(LN_S)dnl\n ])\n \n dnl See if hard links work and if not, try to substitute either symbolic links or simple copy.\n-AC_DEFUN(gcc_AC_PROG_LN,\n+AC_DEFUN([gcc_AC_PROG_LN],\n [AC_MSG_CHECKING(whether ln works)\n AC_CACHE_VAL(gcc_cv_prog_LN,\n [rm -f conftestdata_t\n@@ -220,7 +220,7 @@ AC_SUBST(LN)dnl\n ])\n \n dnl Check whether _Bool is built-in.\n-AC_DEFUN(gcc_AC_C__BOOL,\n+AC_DEFUN([gcc_AC_C__BOOL],\n [AC_CACHE_CHECK(for built-in _Bool, gcc_cv_c__bool,\n [AC_TRY_COMPILE(,\n [_Bool foo;],\n@@ -233,7 +233,7 @@ fi\n \n dnl Define MKDIR_TAKES_ONE_ARG if mkdir accepts only one argument instead\n dnl of the usual 2.\n-AC_DEFUN(gcc_AC_FUNC_MKDIR_TAKES_ONE_ARG,\n+AC_DEFUN([gcc_AC_FUNC_MKDIR_TAKES_ONE_ARG],\n [AC_CACHE_CHECK([if mkdir takes one argument], gcc_cv_mkdir_takes_one_arg,\n [AC_TRY_COMPILE([\n #include <sys/types.h>\n@@ -252,7 +252,7 @@ if test $gcc_cv_mkdir_takes_one_arg = yes ; then\n fi\n ])\n \n-AC_DEFUN(gcc_AC_PROG_INSTALL,\n+AC_DEFUN([gcc_AC_PROG_INSTALL],\n [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\n # Find a good install program.  We prefer a C program (faster),\n # so one script is as good as another.  But avoid the broken or\n@@ -366,7 +366,7 @@ fi\n \n dnl GCC_PATH_PROG(VARIABLE, PROG-TO-CHECK-FOR [, VALUE-IF-NOT-FOUND [, PATH]])\n dnl like AC_PATH_PROG but use other cache variables\n-AC_DEFUN(GCC_PATH_PROG,\n+AC_DEFUN([GCC_PATH_PROG],\n [# Extract the first word of \"$2\", so it can be a program name with args.\n set dummy $2; ac_word=[$]2\n AC_MSG_CHECKING([for $ac_word])\n@@ -499,7 +499,7 @@ fi\n dnl Locate a program and check that its version is acceptable.\n dnl AC_PROG_CHECK_VER(var, name, version-switch,\n dnl                  version-extract-regexp, version-glob)\n-AC_DEFUN(gcc_AC_CHECK_PROG_VER,\n+AC_DEFUN([gcc_AC_CHECK_PROG_VER],\n [AC_CHECK_PROG([$1], [$2], [$2])\n if test -n \"[$]$1\"; then\n   # Found it, now check the version.\n@@ -526,7 +526,7 @@ fi\n dnl Determine if enumerated bitfields are unsigned.   ISO C says they can \n dnl be either signed or unsigned.\n dnl\n-AC_DEFUN(gcc_AC_C_ENUM_BF_UNSIGNED,\n+AC_DEFUN([gcc_AC_C_ENUM_BF_UNSIGNED],\n [AC_CACHE_CHECK(for unsigned enumerated bitfields, gcc_cv_enum_bf_unsigned,\n [AC_TRY_RUN(#include <stdlib.h>\n enum t { BLAH = 128 } ;\n@@ -546,7 +546,7 @@ fi])\n dnl Probe number of bits in a byte.\n dnl Note C89 requires CHAR_BIT >= 8.\n dnl\n-AC_DEFUN(gcc_AC_C_CHAR_BIT,\n+AC_DEFUN([gcc_AC_C_CHAR_BIT],\n [AC_CACHE_CHECK(for CHAR_BIT, gcc_cv_decl_char_bit,\n [AC_EGREP_CPP(found,\n [#ifdef HAVE_LIMITS_H\n@@ -673,7 +673,7 @@ size_t iconv();\n   AC_SUBST(LIBICONV)\n ])\n \n-AC_DEFUN(gcc_AC_INITFINI_ARRAY,\n+AC_DEFUN([gcc_AC_INITFINI_ARRAY],\n [AC_ARG_ENABLE(initfini-array,\n \t[  --enable-initfini-array\tuse .init_array/.fini_array sections],\n \t[], ["}]}