{"sha": "d5ad88c0d2b067a5199a41b0aed18477dbee68db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhZDg4YzBkMmIwNjdhNTE5OWE0MWIwYWVkMTg0NzdkYmVlNjhkYg==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2010-09-28T07:50:02Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2010-09-28T07:50:02Z"}, "message": "alpha.md: Change the initial condition of the probing loop.\n\n2010-09-28  Tristan Gingold  <gingold@adacore.com>\n\n\t* config/alpha/alpha.md: Change the initial condition of the\n\tprobing loop.\n\nFrom-SVN: r164677", "tree": {"sha": "85dad2f833481a678714fa782958918a048ed391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85dad2f833481a678714fa782958918a048ed391"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5ad88c0d2b067a5199a41b0aed18477dbee68db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ad88c0d2b067a5199a41b0aed18477dbee68db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ad88c0d2b067a5199a41b0aed18477dbee68db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ad88c0d2b067a5199a41b0aed18477dbee68db/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4150f926c6c50455f5552a02e6fdc8e2e28a7441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4150f926c6c50455f5552a02e6fdc8e2e28a7441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4150f926c6c50455f5552a02e6fdc8e2e28a7441"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "83e04de0939a1464ae34b84f4c0e82ca7132e65c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ad88c0d2b067a5199a41b0aed18477dbee68db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ad88c0d2b067a5199a41b0aed18477dbee68db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5ad88c0d2b067a5199a41b0aed18477dbee68db", "patch": "@@ -1,3 +1,8 @@\n+2010-09-28  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* config/alpha/alpha.md: Change the initial condition of the\n+\tprobing loop.\n+\n 2010-09-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (*avx_<umaxmin:code><mode>3):"}, {"sha": "579fa0154f231ab2bb28d5b71b2ac7aba274c2bc", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ad88c0d2b067a5199a41b0aed18477dbee68db/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ad88c0d2b067a5199a41b0aed18477dbee68db/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=d5ad88c0d2b067a5199a41b0aed18477dbee68db", "patch": "@@ -6588,15 +6588,17 @@\n \n       emit_insn (gen_subdi3 (want, stack_pointer_rtx,\n \t\t\t     force_reg (Pmode, operands[1])));\n-      emit_insn (gen_adddi3 (tmp, stack_pointer_rtx, GEN_INT (-4096)));\n \n       if (!CONST_INT_P (operands[1]))\n \t{\n+\t  rtx limit = GEN_INT (4096);\n \t  out_label = gen_label_rtx ();\n-\t  test = gen_rtx_GEU (VOIDmode, want, tmp);\n-\t  emit_jump_insn (gen_cbranchdi4 (test, want, tmp, out_label));\n+\t  test = gen_rtx_LTU (VOIDmode, operands[1], limit);\n+\t  emit_jump_insn\n+\t    (gen_cbranchdi4 (test, operands[1], limit, out_label));\n \t}\n \n+      emit_insn (gen_adddi3 (tmp, stack_pointer_rtx, GEN_INT (-4096)));\n       emit_label (loop_label);\n       memref = gen_rtx_MEM (DImode, tmp);\n       MEM_VOLATILE_P (memref) = 1;"}]}