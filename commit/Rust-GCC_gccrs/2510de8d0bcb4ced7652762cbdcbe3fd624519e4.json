{"sha": "2510de8d0bcb4ced7652762cbdcbe3fd624519e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxMGRlOGQwYmNiNGNlZDc2NTI3NjJjYmRjYmUzZmQ2MjQ1MTllNA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2003-08-20T14:32:16Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2003-08-20T14:32:16Z"}, "message": "prims.cc (unblock_signal): New function.\n\n2003-08-19  Andrew Haley  <aph@redhat.com>\n\n\t* prims.cc (unblock_signal): New function.\n\t(SIGNAL_HANDLER): Use it.\n\t(SIGNAL_HANDLER): Likewise.\n\nFrom-SVN: r70598", "tree": {"sha": "0f0961327cbca972ac26d251678fc862ba6d927a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f0961327cbca972ac26d251678fc862ba6d927a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2510de8d0bcb4ced7652762cbdcbe3fd624519e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2510de8d0bcb4ced7652762cbdcbe3fd624519e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2510de8d0bcb4ced7652762cbdcbe3fd624519e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2510de8d0bcb4ced7652762cbdcbe3fd624519e4/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3acef2ae63e40303a73a7559939689c397c0450d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3acef2ae63e40303a73a7559939689c397c0450d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3acef2ae63e40303a73a7559939689c397c0450d"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "57f68fe44b1c373f0aba6aa11dca3a218f950ee9", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2510de8d0bcb4ced7652762cbdcbe3fd624519e4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2510de8d0bcb4ced7652762cbdcbe3fd624519e4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2510de8d0bcb4ced7652762cbdcbe3fd624519e4", "patch": "@@ -1,3 +1,9 @@\n+2003-08-19  Andrew Haley  <aph@redhat.com>\n+\n+\t* prims.cc (unblock_signal): New function.\n+\t(SIGNAL_HANDLER): Use it.\n+\t(SIGNAL_HANDLER): Likewise.\n+\n 2003-08-19  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR libgcj/11575"}, {"sha": "8208995460e125f70ecbf11645fbd2b9fdf182c4", "filename": "libjava/prims.cc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2510de8d0bcb4ced7652762cbdcbe3fd624519e4/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2510de8d0bcb4ced7652762cbdcbe3fd624519e4/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=2510de8d0bcb4ced7652762cbdcbe3fd624519e4", "patch": "@@ -122,11 +122,26 @@ void (*_Jv_JVMPI_Notify_THREAD_END) (JVMPI_Event *event);\n #endif\n \f\n \n+/* Unblock a signal.  Unless we do this, the signal may only be sent\n+   once.  */\n+static void \n+unblock_signal (int signum)\n+{\n+#ifdef _POSIX_VERSION\n+  sigset_t sigs;\n+\n+  sigemptyset (&sigs);\n+  sigaddset (&sigs, signum);\n+  sigprocmask (SIG_UNBLOCK, &sigs, NULL);\n+#endif\n+}\n+\n #ifdef HANDLE_SEGV\n SIGNAL_HANDLER (catch_segv)\n {\n   java::lang::NullPointerException *nullp \n     = new java::lang::NullPointerException;\n+  unblock_signal (SIGSEGV);\n   MAKE_THROW_FRAME (nullp);\n   throw nullp;\n }\n@@ -137,6 +152,7 @@ SIGNAL_HANDLER (catch_fpe)\n {\n   java::lang::ArithmeticException *arithexception \n     = new java::lang::ArithmeticException (JvNewStringLatin1 (\"/ by zero\"));\n+  unblock_signal (SIGFPE);\n #ifdef HANDLE_DIVIDE_OVERFLOW\n   HANDLE_DIVIDE_OVERFLOW;\n #else"}]}