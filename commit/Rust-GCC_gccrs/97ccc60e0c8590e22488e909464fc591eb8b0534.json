{"sha": "97ccc60e0c8590e22488e909464fc591eb8b0534", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdjY2M2MGUwYzg1OTBlMjI0ODhlOTA5NDY0ZmM1OTFlYjhiMDUzNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-10-30T21:53:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-10-30T21:53:37Z"}, "message": "typeck.c (decl_in_std_namespace_p): Return true also for decls in inline namespaces inside of std namespace.\n\n\t* typeck.c (decl_in_std_namespace_p): Return true also for decls\n\tin inline namespaces inside of std namespace.\n\n\t* g++.dg/cpp0x/Wpessimizing-move6.C: New test.\n\nFrom-SVN: r277648", "tree": {"sha": "6d7895cc261bb7068a1a75e285b8cd06adf2cfdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d7895cc261bb7068a1a75e285b8cd06adf2cfdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97ccc60e0c8590e22488e909464fc591eb8b0534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ccc60e0c8590e22488e909464fc591eb8b0534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ccc60e0c8590e22488e909464fc591eb8b0534", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ccc60e0c8590e22488e909464fc591eb8b0534/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0d91792eec490d1bddb4a095a3da2c5b4c270e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d91792eec490d1bddb4a095a3da2c5b4c270e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d91792eec490d1bddb4a095a3da2c5b4c270e2"}], "stats": {"total": 159, "additions": 157, "deletions": 2}, "files": [{"sha": "46b8fe02907dffab3b96cefc50343037966b00aa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ccc60e0c8590e22488e909464fc591eb8b0534/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ccc60e0c8590e22488e909464fc591eb8b0534/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=97ccc60e0c8590e22488e909464fc591eb8b0534", "patch": "@@ -1,3 +1,8 @@\n+2019-10-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* typeck.c (decl_in_std_namespace_p): Return true also for decls\n+\tin inline namespaces inside of std namespace.\n+\n 2019-10-30  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c++/92024"}, {"sha": "03c39b3e3b92d434074d935c1aa8c017f0748d72", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ccc60e0c8590e22488e909464fc591eb8b0534/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ccc60e0c8590e22488e909464fc591eb8b0534/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=97ccc60e0c8590e22488e909464fc591eb8b0534", "patch": "@@ -9395,8 +9395,19 @@ maybe_warn_about_returning_address_of_local (tree retval)\n bool\n decl_in_std_namespace_p (tree decl)\n {\n-  return (decl != NULL_TREE\n-\t  && DECL_NAMESPACE_STD_P (decl_namespace_context (decl)));\n+  while (decl)\n+    {\n+      decl = decl_namespace_context (decl);\n+      if (DECL_NAMESPACE_STD_P (decl))\n+\treturn true;\n+      /* Allow inline namespaces inside of std namespace, e.g. with\n+\t --enable-symvers=gnu-versioned-namespace std::forward would be\n+\t actually std::_8::forward.  */\n+      if (!DECL_NAMESPACE_INLINE_P (decl))\n+\treturn false;\n+      decl = CP_DECL_CONTEXT (decl);\n+    }\n+  return false;\n }\n \n /* Returns true if FN, a CALL_EXPR, is a call to std::forward.  */"}, {"sha": "d64275b8ea56dbc7f2ac98902669362b25e9735d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ccc60e0c8590e22488e909464fc591eb8b0534/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ccc60e0c8590e22488e909464fc591eb8b0534/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97ccc60e0c8590e22488e909464fc591eb8b0534", "patch": "@@ -1,3 +1,7 @@\n+2019-10-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/cpp0x/Wpessimizing-move6.C: New test.\n+\n 2019-10-30  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c++/92024"}, {"sha": "646755661155c183220eb8b3541e926ceef94c00", "filename": "gcc/testsuite/g++.dg/cpp0x/Wpessimizing-move6.C", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ccc60e0c8590e22488e909464fc591eb8b0534/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWpessimizing-move6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ccc60e0c8590e22488e909464fc591eb8b0534/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWpessimizing-move6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWpessimizing-move6.C?ref=97ccc60e0c8590e22488e909464fc591eb8b0534", "patch": "@@ -0,0 +1,135 @@\n+// PR c++/86981\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wpessimizing-move\" }\n+\n+// Define std::move.\n+namespace std {\n+  inline namespace _8 { }\n+  namespace _8 {\n+    template<typename _Tp>\n+      struct remove_reference\n+      { typedef _Tp   type; };\n+\n+    template<typename _Tp>\n+      struct remove_reference<_Tp&>\n+      { typedef _Tp   type; };\n+\n+    template<typename _Tp>\n+      struct remove_reference<_Tp&&>\n+      { typedef _Tp   type; };\n+\n+    template<typename _Tp>\n+      constexpr typename std::remove_reference<_Tp>::type&&\n+      move(_Tp&& __t) noexcept\n+      { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }\n+  }\n+}\n+\n+struct T {\n+  T() { }\n+  T(const T&) { }\n+  T(T&&) { }\n+};\n+struct U {\n+  U() { }\n+  U(const U&) { }\n+  U(U&&) { }\n+  U(T) { }\n+};\n+\n+T g;\n+\n+T\n+fn1 ()\n+{\n+  T t;\n+  return std::move (t); // { dg-warning \"moving a local object in a return statement prevents copy elision\" }\n+}\n+\n+T\n+fn2 ()\n+{\n+  // Not a local variable.\n+  return std::move (g);\n+}\n+\n+int\n+fn3 ()\n+{\n+  int i = 42;\n+  // Not a class type.\n+  return std::move (i);\n+}\n+\n+T\n+fn4 (bool b)\n+{\n+  T t;\n+  if (b)\n+    throw std::move (t);\n+  return std::move (t); // { dg-warning \"moving a local object in a return statement prevents copy elision\" }\n+}\n+\n+T\n+fn5 (T t)\n+{\n+  // Function parameter; std::move is redundant but not pessimizing.\n+  return std::move (t);\n+}\n+\n+U\n+fn6 (T t, U u, bool b)\n+{\n+  if (b)\n+    return std::move (t);\n+  else\n+    // Function parameter; std::move is redundant but not pessimizing.\n+    return std::move (u);\n+}\n+\n+U\n+fn6 (bool b)\n+{\n+  T t;\n+  U u;\n+  if (b)\n+    return std::move (t);\n+  else\n+    return std::move (u); // { dg-warning \"moving a local object in a return statement prevents copy elision\" }\n+}\n+\n+T\n+fn7 ()\n+{\n+  static T t;\n+  // Non-local; don't warn.\n+  return std::move (t);\n+}\n+\n+T\n+fn8 ()\n+{\n+  return T();\n+}\n+\n+T\n+fn9 (int i)\n+{\n+  T t;\n+\n+  switch (i)\n+    {\n+    case 1:\n+      return std::move ((t)); // { dg-warning \"moving a local object in a return statement prevents copy elision\" }\n+    case 2:\n+      return (std::move (t)); // { dg-warning \"moving a local object in a return statement prevents copy elision\" }\n+    default:\n+      return (std::move ((t))); // { dg-warning \"moving a local object in a return statement prevents copy elision\" }\n+    }\n+}\n+\n+int\n+fn10 ()\n+{\n+  return std::move (42);\n+}"}]}