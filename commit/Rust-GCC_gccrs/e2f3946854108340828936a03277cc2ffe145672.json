{"sha": "e2f3946854108340828936a03277cc2ffe145672", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmMzk0Njg1NDEwODM0MDgyODkzNmEwMzI3N2NjMmZmZTE0NTY3Mg==", "commit": {"author": {"name": "Jeff Sturm", "email": "jsturm@one-point.com", "date": "2001-06-01T04:04:10Z"}, "committer": {"name": "Jeff Sturm", "email": "jsturm@gcc.gnu.org", "date": "2001-06-01T04:04:10Z"}, "message": "natFile.cc (get_entry): Removed functions.\n\n* natFile.cc (get_entry): Removed functions.\n(performList): Call readdir or readdir_r if HAVE_READDIR_R defined.\nAllocate enough storage for d_name if using readdir_r.\n\nFrom-SVN: r42767", "tree": {"sha": "bed640996f4d1759584fa993c486608738f06a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bed640996f4d1759584fa993c486608738f06a4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2f3946854108340828936a03277cc2ffe145672", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2f3946854108340828936a03277cc2ffe145672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2f3946854108340828936a03277cc2ffe145672", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2f3946854108340828936a03277cc2ffe145672/comments", "author": null, "committer": null, "parents": [{"sha": "195590126aec10f823cb1562f45fa03a0931e004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/195590126aec10f823cb1562f45fa03a0931e004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/195590126aec10f823cb1562f45fa03a0931e004"}], "stats": {"total": 40, "additions": 15, "deletions": 25}, "files": [{"sha": "a86df0242d98c3664b565a332c740b8209269c78", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2f3946854108340828936a03277cc2ffe145672/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2f3946854108340828936a03277cc2ffe145672/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e2f3946854108340828936a03277cc2ffe145672", "patch": "@@ -1,3 +1,9 @@\n+2001-05-31  Jeff Sturm  <jsturm@one-point.com>\n+\n+\t* natFile.cc (get_entry): Removed functions.\n+\t(performList): Call readdir or readdir_r if HAVE_READDIR_R defined.\n+\tAllocate enough storage for d_name if using readdir_r.\n+\n 2001-05-31  Tom Tromey  <tromey@redhat.com>\n \n \t* java/io/natFileDescriptorPosix.cc (open): Allocate buffer to"}, {"sha": "82674fcfae665522fb2bc8b7f88b674b40d915ad", "filename": "libjava/java/io/natFile.cc", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2f3946854108340828936a03277cc2ffe145672/libjava%2Fjava%2Fio%2FnatFile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2f3946854108340828936a03277cc2ffe145672/libjava%2Fjava%2Fio%2FnatFile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFile.cc?ref=e2f3946854108340828936a03277cc2ffe145672", "patch": "@@ -130,29 +130,6 @@ java::io::File::isAbsolute (void)\n   return path->charAt(0) == '/';\n }\n \n-#ifdef HAVE_DIRENT_H\n-#if defined(__JV_POSIX_THREADS__) && defined(HAVE_READDIR_R)\n-\n-static struct dirent *\n-get_entry (DIR *dir, struct dirent *e)\n-{\n-  struct dirent *r;\n-  if (readdir_r (dir, e, &r) || r == NULL)\n-    return NULL;\n-  return e;\n-}\n-\n-#else /* defined(__JV_POSIX_THREADS__) && defined(HAVE_READDIR_R) */\n-\n-static struct dirent *\n-get_entry (DIR *dir, struct dirent *)\n-{\n-  return readdir (dir);\n-}\n-\n-#endif /* defined(__JV_POSIX_THREADS__) && defined(HAVE_READDIR_R) */\n-#endif /* HAVE_DIRENT_H */\n-\n jobjectArray\n java::io::File::performList (java::io::FilenameFilter *filter, \n \t\t\t     java::io::FileFilter *fileFilter, \n@@ -168,9 +145,16 @@ java::io::File::performList (java::io::FilenameFilter *filter,\n   if (! dir)\n     return NULL;\n \n+\n   java::util::ArrayList *list = new java::util::ArrayList ();\n-  struct dirent *d, d2;\n-  while ((d = get_entry (dir, &d2)) != NULL)\n+  struct dirent *d;\n+#ifdef HAVE_READDIR_R\n+  int name_max = pathconf (buf, _PC_NAME_MAX);\n+  char dbuf[sizeof (struct dirent) + name_max + 1];\n+  while (readdir_r (dir, (struct dirent *) dbuf, &d) == 0 && d != NULL)\n+#else /* HAVE_READDIR_R */\n+  while ((d = readdir (dir)) != NULL)\n+#endif /* HAVE_READDIR_R */\n     {\n       // Omit \".\" and \"..\".\n       if (d->d_name[0] == '.'"}]}