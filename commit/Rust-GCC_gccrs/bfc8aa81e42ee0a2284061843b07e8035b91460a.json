{"sha": "bfc8aa81e42ee0a2284061843b07e8035b91460a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZjOGFhODFlNDJlZTBhMjI4NDA2MTg0M2IwN2U4MDM1YjkxNDYwYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-10-31T18:16:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T18:16:03Z"}, "message": "fmap.adb: Put routines in alpha order\n\n2006-10-31  Robert Dewar  <dewar@adacore.com>\n\t    Thomas Quinot  <quinot@adacore.com>\n\t    Arnaud Charlet  <charlet@adacore.com>\n\n\t* fmap.adb: Put routines in alpha order\n\n\t* g-boumai.ads: Remove redundant 'in' keywords\n\n\t* g-cgi.adb: Minor reformatting\n\n\t* g-cgi.ads: Remove redundant 'in' keywords\n\n\t* get_targ.adb: Put routines in alpha order\n\n\t* prj-attr.ads: Minor reformatting\n\n\t* s-atacco.ads: Minor reformatting\n\n\t* scn.adb: Put routines in alpha order\n\n\t* sinput-l.adb: Minor comment fix\n\n\t* sinput-p.adb: Minor comment fix\n\n\t* s-maccod.ads: Minor reformatting\n\n\t* s-memory.adb: Minor reformatting\n\n\t* s-htable.adb: Fix typo in comment.\n\n\t* s-secsta.adb: Minor comment update.\n\n\t* s-soflin.adb: Minor reformatting\n\n\t* s-stoele.ads: \n\tAdd comment about odd qualification in Storage_Offset declaration\n\n\t* s-strxdr.adb: \n\tRemove unnecessary 'in' keywords for formal parameters.\n\n\t* treeprs.adt: Minor reformatting\n\n\t* urealp.adb: Put routines in alpha order\n\n\t* s-wchcon.ads, s-wchcon.adb (Get_WC_Encoding_Method): New version\n\ttaking string.\n\n\t* s-asthan-vms-alpha.adb: Remove redundant 'in' keywords\n\n\t* g-trasym-vms-ia64.adb: Remove redundant 'in' keywords\n\n\t* env.c (__gnat_unsetenv): Unsetenv is unavailable on LynxOS, so\n\tworkaround as on other platforms.\n\n\t* g-eacodu-vms.adb: Remove redundant 'in' keywords\n\t* g-expect-vms.adb: Remove redundant 'in' keywords\n\n\t* gnatdll.adb (Add_Files_From_List): Handle Name_Error and report a\n\tclear error message if the list-of-files file cannot be opened.\n\n\t* g-thread.adb (Unregister_Thread_Id): Add use type Thread_Id so the\n\tequality operator is always visible.\n\n\t* lang.opt: Woverlength-strings: New option.\n\n\t* nmake.adt: \n\tUpdate copyright, since nmake.ads and nmake.adb have changed.\n\n\t* osint-b.ads, osint-b.adb (Time_From_Last_Bind): removed function .\n\t(Binder_Output_Time_Stamps_Set): removed.\n\t(Old_Binder_Output_Time_Stamp): idem.\n\t(New_Binder_Output_Time_Stamp): idem.\n\t(Recording_Time_From_Last_Bind): idem.\n\t(Recording_Time_From_Last_Bind): Make constant.\n\n\t* output.ads, output.adb (Write_Str): Allow LF characters\n\t(Write_Spaces): New procedure\n\n\t* prepcomp.adb (Preproc_Data_Table): Change Increment from 5% to 100%\n\n\t* inline.adb: Minor reformatting\n\n\t* s-asthan-vms-alpha.adb: Remove redundant 'in' keywords\n\n\t* s-mastop-vms.adb: Remove redundant 'in' keywords\n\n\t* s-osprim-vms.adb: Remove redundant 'in' keywords\n\n\t* s-trafor-default.adb: Remove redundant 'in' keywords\n\n\t* 9drpc.adb: Remove redundant 'in' keywords\n\n\t* s-osinte-mingw.ads: Minor reformatting\n\n\t* s-inmaop-posix.adb: Minor reformatting\n\n\t* a-direio.ads: Remove quotes from Compile_Time_Warning message\n\n\t* a-exexda.adb: Minor code reorganization\n\n\t* a-filico.adb: Minor reformatting\n\n\t* a-finali.adb: Minor reformatting\n\n\t* a-nudira.ads: Remove quote from Compile_Time_Warning message\n\n\t* a-numeri.ads: Minor reformatting\n\n\t* a-sequio.ads: Remove quotes from Compile_Time_Warning message\n\n\t* exp_pakd.ads: Fix obsolete comment\n\n\t* a-ztenau.adb, a-ztenio.adb, a-wtenau.adb, a-tienau.adb,\n\ta-wtenio.adb (Put): Avoid assuming low bound of string is 1.\n\tProbably not a bug, but certainly neater and more efficient.\n\n\t* a-tienio.adb: Minor reformatting\n\n\t* comperr.adb (Compiler_Abort): Call Cancel_Special_Output at start\n\tAvoid assuming low bound of string is 1.\n\n\t* gnatbind.adb: Change Bindusg to package and rename procedure as\n\tDisplay, which now ensures that it only outputs usage information once.\n\t(Scan_Bind_Arg): Avoid assuming low bound of string is 1.\n\n\t* g-pehage.adb (Build_Identical_Keysets): Replace use of 1 by\n\tTable'First.\n\n\t* g-regpat.adb (Insert_Operator): Add pragma Warnings (Off) to kill\n\twarning.\n\t(Match): Add pragma Assert to ensure that Matches'First is zero\n\n\t* g-regpat.ads (Match): Document that Matches lower bound must be zero\n\n\t* makeutl.adb (Is_External_Assignment): Add pragma Assert's to check\n\tdocumented preconditions (also kills warnings about bad indexes).\n\n\t* mdll.adb (Build_Dynamic_Library): Avoid assumption that Afiles'First\n\tis 1.\n\t(Build_Import_Library): Ditto;\n\n\t* mdll-utl.adb: (Gnatbind): Avoid assumption that Alis'First = 1\n\n\t* rtsfind.adb (RTE_Error_Msg): Avoid assuming low bound of string is 1.\n\n\t* sem_case.adb (Analyze_Choices): Add pragma Assert to check that\n\tlower bound of choice table is 1.\n\n\t* sem_case.ads (Analyze_Choices): Document that lower bound of\n\tChoice_Table is 1.\n\n\t* s-imgdec.adb (Set_Decimal_Digits): Avoid assuming low bound of\n\tstring is 1.\n\n\t* uintp.adb (Init_Operand): Document that low bound of Vec is always 1,\n\tand add appropriate Assert pragma to suppress warnings.\n\n\t* atree.h, atree.ads, atree.adb\n\tChange Elist24 to Elist25\n\tAdd definitions of Field28 and Node28\n\t(Traverse_Field): Use new syntactic parent table in sinfo.\n\n\t* cstand.adb: Change name Is_Ada_2005 to Is_Ada_2005_Only\n\n\t* itypes.adb: Change name Is_Ada_2005 to Is_Ada_2005_Only\n\n\t* exp_tss.adb: Put routines in alpha order\n\n\t* fe.h: Remove redundant declarations.\n\nFrom-SVN: r118330", "tree": {"sha": "3f325a73eb43505d6e56c239974922ae3bc57bb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f325a73eb43505d6e56c239974922ae3bc57bb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfc8aa81e42ee0a2284061843b07e8035b91460a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc8aa81e42ee0a2284061843b07e8035b91460a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfc8aa81e42ee0a2284061843b07e8035b91460a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc8aa81e42ee0a2284061843b07e8035b91460a/comments", "author": null, "committer": null, "parents": [{"sha": "e0ae4e94e9d2794ea89724bd7a7986728d019f15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0ae4e94e9d2794ea89724bd7a7986728d019f15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0ae4e94e9d2794ea89724bd7a7986728d019f15"}], "stats": {"total": 1034, "additions": 523, "deletions": 511}, "files": [{"sha": "75acad70dedaee0698cc16b5fc4de21a00d9f179", "filename": "gcc/ada/9drpc.adb", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2F9drpc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2F9drpc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F9drpc.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,11 +93,11 @@ package body System.RPC is\n    task type Anonymous_Task_Type (Self : Anonymous_Task_Node_Access) is\n \n       entry Start\n-         (Message_Id   : in Message_Id_Type;\n-          Partition    : in Partition_ID;\n-          Params_Size  : in Ada.Streams.Stream_Element_Count;\n-          Result_Size  : in Ada.Streams.Stream_Element_Count;\n-          Protocol     : in Garlic.Protocol_Access);\n+         (Message_Id   : Message_Id_Type;\n+          Partition    : Partition_ID;\n+          Params_Size  : Ada.Streams.Stream_Element_Count;\n+          Result_Size  : Ada.Streams.Stream_Element_Count;\n+          Protocol     : Garlic.Protocol_Access);\n       --  This entry provides an anonymous task a remote call to perform.\n       --  This task calls for a Request id is provided to construct the\n       --  reply id by using -Request. Partition is used to send the reply\n@@ -153,8 +153,8 @@ package body System.RPC is\n       --  When it is resumed, we provide the size of the reply\n \n       entry Wake_Up\n-        (Request : in Request_Id_Type;\n-         Length  : in Ada.Streams.Stream_Element_Count);\n+        (Request : Request_Id_Type;\n+         Length  : Ada.Streams.Stream_Element_Count);\n       --  To wake up the calling stub when the environnement task has\n       --  received a reply for this request\n \n@@ -198,7 +198,7 @@ package body System.RPC is\n    --  Debugging package\n \n    procedure D\n-     (Flag : in Debug_Level; Info : in String) renames Debugging.Debug;\n+     (Flag : Debug_Level; Info : String) renames Debugging.Debug;\n    --  Shortcut\n \n    ------------------------\n@@ -265,7 +265,7 @@ package body System.RPC is\n    -- Null_Node --\n    ---------------\n \n-   function Null_Node (Index : in Packet_Node_Access) return Boolean is\n+   function Null_Node (Index : Packet_Node_Access) return Boolean is\n    begin\n       return Index = null;\n \n@@ -375,7 +375,7 @@ package body System.RPC is\n \n    procedure Write\n      (Stream : in out Params_Stream_Type;\n-      Item   : in Ada.Streams.Stream_Element_Array)\n+      Item   : Ada.Streams.Stream_Element_Array)\n      renames System.RPC.Streams.Write;\n \n    -----------------------\n@@ -687,8 +687,8 @@ package body System.RPC is\n    ----------------------------\n \n    procedure Establish_RPC_Receiver\n-     (Partition : in Partition_ID;\n-      Receiver  : in RPC_Receiver)\n+     (Partition : Partition_ID;\n+      Receiver  : RPC_Receiver)\n    is\n    begin\n       --  Set Partition_RPC_Receiver and allow RPC mechanism\n@@ -799,11 +799,11 @@ package body System.RPC is\n \n          select\n             accept Start\n-              (Message_Id   : in Message_Id_Type;\n-               Partition    : in Partition_ID;\n-               Params_Size  : in Ada.Streams.Stream_Element_Count;\n-               Result_Size  : in Ada.Streams.Stream_Element_Count;\n-               Protocol     : in Protocol_Access)\n+              (Message_Id   : Message_Id_Type;\n+               Partition    : Partition_ID;\n+               Params_Size  : Ada.Streams.Stream_Element_Count;\n+               Result_Size  : Ada.Streams.Stream_Element_Count;\n+               Protocol     : Protocol_Access)\n             do\n                C_Message_Id := Message_Id;\n                C_Partition  := Partition;"}, {"sha": "24b2a0ba533b5046e4d9d827bc4136765b728c46", "filename": "gcc/ada/a-direio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -46,7 +46,7 @@ package Ada.Direct_IO is\n \n    pragma Compile_Time_Warning\n      (Element_Type'Has_Access_Values,\n-      \"?Element_Type for Direct_'I'O instance has access values\");\n+      \"Element_Type for Direct_IO instance has access values\");\n \n    type File_Type is limited private;\n "}, {"sha": "98d823dee6d61df2872e20a325ffc109ab8e73fc", "filename": "gcc/ada/a-exexda.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-exexda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-exexda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexda.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -407,10 +407,13 @@ package body Exception_Data is\n    -----------------------------------------\n \n    function Basic_Exception_Tback_Maxlength\n-     (X : Exception_Occurrence) return Natural is\n+     (X : Exception_Occurrence) return Natural\n+   is\n+      Space_Per_Traceback : constant := 2 + 16 + 1;\n+      --  Space for \"0x\" + HHHHHHHHHHHHHHHH + \" \"\n    begin\n-      return BETB_Header'Length + 1 + X.Num_Tracebacks * 19 + 1;\n-      --  19 =  2 + 16 + 1 for each address (\"0x\" + HHHH + \" \")\n+      return BETB_Header'Length + 1 +\n+               X.Num_Tracebacks * Space_Per_Traceback + 1;\n    end Basic_Exception_Tback_Maxlength;\n \n    ---------------------------------------"}, {"sha": "92ba21d6422ac25171e261985af7dbcd0bee4732", "filename": "gcc/ada/a-finali.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-finali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-finali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-finali.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,7 +50,6 @@ package body Ada.Finalization is\n \n    procedure Adjust (Object : in out Controlled) is\n       pragma Warnings (Off, Object);\n-\n    begin\n       null;\n    end Adjust;\n@@ -61,14 +60,12 @@ package body Ada.Finalization is\n \n    procedure Finalize (Object : in out Controlled) is\n       pragma Warnings (Off, Object);\n-\n    begin\n       null;\n    end Finalize;\n \n    procedure Finalize (Object : in out Limited_Controlled) is\n       pragma Warnings (Off, Object);\n-\n    begin\n       null;\n    end Finalize;\n@@ -79,14 +76,12 @@ package body Ada.Finalization is\n \n    procedure Initialize (Object : in out Controlled) is\n       pragma Warnings (Off, Object);\n-\n    begin\n       null;\n    end Initialize;\n \n    procedure Initialize (Object : in out Limited_Controlled) is\n       pragma Warnings (Off, Object);\n-\n    begin\n       null;\n    end Initialize;"}, {"sha": "eb3baaab0e31cb855898cfeb24bd7bc09439b53e", "filename": "gcc/ada/a-nudira.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-nudira.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-nudira.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nudira.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -58,7 +58,7 @@ package Ada.Numerics.Discrete_Random is\n \n    pragma Compile_Time_Warning\n      (Result_Subtype'Size > 48,\n-      \"statistical properties not guaranteed for size '> 48\");\n+      \"statistical properties not guaranteed for size > 48\");\n \n    --  Basic facilities\n "}, {"sha": "4d25bce476bedc0315fc2bfa66b80d61bda2d042", "filename": "gcc/ada/a-numeri.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-numeri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-numeri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numeri.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -23,8 +23,8 @@ package Ada.Numerics is\n \n    [\"03C0\"] : constant := Pi;\n    --  This is the greek letter Pi (for Ada 2005 AI-388). Note that it is\n-   --  conforming to have this present even in Ada 95 mode, because there is\n-   --  no way for a normal mode Ada 95 program to reference this identifier.\n+   --  conforming to have this constant present even in Ada 95 mode, as there\n+   --  is no way for a normal mode Ada 95 program to reference this identifier.\n \n    e : constant :=\n          2.71828_18284_59045_23536_02874_71352_66249_77572_47093_69996;"}, {"sha": "3953f117132d9b12d9b0db113e1f614ccd2526ce", "filename": "gcc/ada/a-sequio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-sequio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-sequio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sequio.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -46,7 +46,7 @@ package Ada.Sequential_IO is\n \n    pragma Compile_Time_Warning\n      (Element_Type'Has_Access_Values,\n-      \"?Element_Type for Sequential_'I'O instance has access values\");\n+      \"Element_Type for Sequential_IO instance has access values\");\n \n    type File_Type is limited private;\n "}, {"sha": "a43c4cbd1d282b737395bb1f753cf47192fbf1a5", "filename": "gcc/ada/a-tienau.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-tienau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-tienau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienau.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -128,7 +128,7 @@ package body Ada.Text_IO.Enumeration_Aux is\n       Actual_Width : constant Count := Count'Max (Count (Width), Item'Length);\n \n    begin\n-      if Set = Lower_Case and then Item (1) /= ''' then\n+      if Set = Lower_Case and then Item (Item'First) /= ''' then\n          declare\n             Iteml : String (Item'First .. Item'Last);\n \n@@ -167,7 +167,7 @@ package body Ada.Text_IO.Enumeration_Aux is\n       else\n          Ptr := To'First;\n          for J in Item'Range loop\n-            if Set = Lower_Case and then Item (1) /= ''' then\n+            if Set = Lower_Case and then Item (Item'First) /= ''' then\n                To (Ptr) := To_Lower (Item (J));\n             else\n                To (Ptr) := Item (J);"}, {"sha": "0c07103d5dcc75ec027d455a10c9347289ab1c34", "filename": "gcc/ada/a-tienio.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-tienio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-tienio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienio.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -61,7 +61,6 @@ package body Ada.Text_IO.Enumeration_IO is\n \n    procedure Get (Item : out Enum) is\n       pragma Unsuppress (Range_Check);\n-\n    begin\n       Get (Current_In, Item);\n    end Get;\n@@ -98,7 +97,6 @@ package body Ada.Text_IO.Enumeration_IO is\n       Set   : Type_Set := Default_Setting)\n    is\n       Image : constant String := Enum'Image (Item);\n-\n    begin\n       Aux.Put (File, Image, Width, Set);\n    end Put;\n@@ -118,7 +116,6 @@ package body Ada.Text_IO.Enumeration_IO is\n       Set  : Type_Set := Default_Setting)\n    is\n       Image : constant String := Enum'Image (Item);\n-\n    begin\n       Aux.Puts (To, Image, Set);\n    end Put;"}, {"sha": "fcb4e1e67f5ead54f2bf813e03aa75d74d86fece", "filename": "gcc/ada/a-wtenau.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-wtenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-wtenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtenau.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -159,7 +159,7 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n    begin\n       Check_On_One_Line (TFT (File), Actual_Width);\n \n-      if Set = Lower_Case and then Item (1) /= ''' then\n+      if Set = Lower_Case and then Item (Item'First) /= ''' then\n          declare\n             Iteml : Wide_String (Item'First .. Item'Last);\n \n@@ -204,7 +204,7 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n          Ptr := To'First;\n          for J in Item'Range loop\n             if Set = Lower_Case\n-              and then Item (1) /= '''\n+              and then Item (Item'First) /= '''\n               and then Is_Character (Item (J))\n             then\n                To (Ptr) :="}, {"sha": "b7d23759d7a2d34d2650f3891896a22f11f71948", "filename": "gcc/ada/a-ztenau.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-ztenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-ztenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztenau.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -160,7 +160,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n    begin\n       Check_On_One_Line (TFT (File), Actual_Width);\n \n-      if Set = Lower_Case and then Item (1) /= ''' then\n+      if Set = Lower_Case and then Item (Item'First) /= ''' then\n          declare\n             Iteml : Wide_Wide_String (Item'First .. Item'Last);\n \n@@ -206,7 +206,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n          Ptr := To'First;\n          for J in Item'Range loop\n             if Set = Lower_Case\n-              and then Item (1) /= '''\n+              and then Item (Item'First) /= '''\n               and then Is_Character (Item (J))\n             then\n                To (Ptr) :="}, {"sha": "95914472581265588c10baadaa275d059f3a36c9", "filename": "gcc/ada/a-ztenio.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-ztenio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fa-ztenio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztenio.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,11 +44,9 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_IO is\n    procedure Get (File : File_Type; Item : out Enum) is\n       Buf    : Wide_Wide_String (1 .. Enum'Width);\n       Buflen : Natural;\n-\n    begin\n       Aux.Get_Enum_Lit (File, Buf, Buflen);\n       Item := Enum'Wide_Wide_Value (Buf (1 .. Buflen));\n-\n    exception\n       when Constraint_Error => raise Data_Error;\n    end Get;\n@@ -64,11 +62,9 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_IO is\n       Last : out Positive)\n    is\n       Start : Natural;\n-\n    begin\n       Aux.Scan_Enum_Lit (From, Start, Last);\n       Item := Enum'Wide_Wide_Value (From (Start .. Last));\n-\n    exception\n       when Constraint_Error => raise Data_Error;\n    end Get;\n@@ -84,7 +80,6 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_IO is\n       Set   : Type_Set := Default_Setting)\n    is\n       Image : constant Wide_Wide_String := Enum'Wide_Wide_Image (Item);\n-\n    begin\n       Aux.Put (File, Image, Width, Set);\n    end Put;\n@@ -104,7 +99,6 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_IO is\n       Set  : Type_Set := Default_Setting)\n    is\n       Image : constant Wide_Wide_String := Enum'Wide_Wide_Image (Item);\n-\n    begin\n       Aux.Puts (To, Image, Set);\n    end Put;"}, {"sha": "1cdf5aeec5523d87d6800e797e097ca85210d8bb", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 57, "deletions": 33, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2360,17 +2360,24 @@ package body Atree is\n \n    function Traverse_Func (Node : Node_Id) return Traverse_Result is\n \n-      function Traverse_Field (Fld : Union_Id) return Traverse_Result;\n-      --  Fld is one of the fields of Node. If the field points to a\n-      --  syntactic node or list, then this node or list is traversed,\n-      --  and the result is the result of this traversal. Otherwise\n-      --  a value of True is returned with no processing.\n+      function Traverse_Field\n+        (Nod : Node_Id;\n+         Fld : Union_Id;\n+         FN  : Field_Num) return Traverse_Result;\n+      --  Fld is one of the fields of Nod. If the field points to syntactic\n+      --  node or list, then this node or list is traversed, and the result is\n+      --  the result of this traversal. Otherwise a value of True is returned\n+      --  with no processing. FN is the number of the field (1 .. 5).\n \n       --------------------\n       -- Traverse_Field --\n       --------------------\n \n-      function Traverse_Field (Fld : Union_Id) return Traverse_Result is\n+      function Traverse_Field\n+        (Nod : Node_Id;\n+         Fld : Union_Id;\n+         FN  : Field_Num) return Traverse_Result\n+      is\n       begin\n          if Fld = Union_Id (Empty) then\n             return OK;\n@@ -2381,9 +2388,7 @@ package body Atree is\n \n             --  Traverse descendent that is syntactic subtree node\n \n-            if Parent (Node_Id (Fld)) = Node\n-              or else Original_Node (Parent (Node_Id (Fld))) = Node\n-            then\n+            if Is_Syntactic_Field (Nkind (Nod), FN) then\n                return Traverse_Func (Node_Id (Fld));\n \n             --  Node that is not a syntactic subtree\n@@ -2398,9 +2403,7 @@ package body Atree is\n \n             --  Traverse descendent that is a syntactic subtree list\n \n-            if Parent (List_Id (Fld)) = Node\n-              or else Original_Node (Parent (List_Id (Fld))) = Node\n-            then\n+            if Is_Syntactic_Field (Nkind (Nod), FN) then\n                declare\n                   Elmt : Node_Id := First (List_Id (Fld));\n                begin\n@@ -2439,39 +2442,36 @@ package body Atree is\n             return OK;\n \n          when OK =>\n-            if Traverse_Field (Union_Id (Field1 (Node))) = Abandon\n+            if Traverse_Field (Node, Union_Id (Field1 (Node)), 1) = Abandon\n                  or else\n-               Traverse_Field (Union_Id (Field2 (Node))) = Abandon\n+               Traverse_Field (Node, Union_Id (Field2 (Node)), 2) = Abandon\n                  or else\n-               Traverse_Field (Union_Id (Field3 (Node))) = Abandon\n+               Traverse_Field (Node, Union_Id (Field3 (Node)), 3) = Abandon\n                  or else\n-               Traverse_Field (Union_Id (Field4 (Node))) = Abandon\n+               Traverse_Field (Node, Union_Id (Field4 (Node)), 4) = Abandon\n                  or else\n-               Traverse_Field (Union_Id (Field5 (Node))) = Abandon\n+               Traverse_Field (Node, Union_Id (Field5 (Node)), 5) = Abandon\n             then\n                return Abandon;\n-\n             else\n                return OK;\n             end if;\n \n          when OK_Orig =>\n             declare\n-               Onode : constant Node_Id := Original_Node (Node);\n-\n+               Onod : constant Node_Id := Original_Node (Node);\n             begin\n-               if Traverse_Field (Union_Id (Field1 (Onode))) = Abandon\n+               if Traverse_Field (Onod, Union_Id (Field1 (Onod)), 1) = Abandon\n                     or else\n-                  Traverse_Field (Union_Id (Field2 (Onode))) = Abandon\n+                  Traverse_Field (Onod, Union_Id (Field2 (Onod)), 2) = Abandon\n                     or else\n-                  Traverse_Field (Union_Id (Field3 (Onode))) = Abandon\n+                  Traverse_Field (Onod, Union_Id (Field3 (Onod)), 3) = Abandon\n                     or else\n-                  Traverse_Field (Union_Id (Field4 (Onode))) = Abandon\n+                  Traverse_Field (Onod, Union_Id (Field4 (Onod)), 4) = Abandon\n                     or else\n-                  Traverse_Field (Union_Id (Field5 (Onode))) = Abandon\n+                  Traverse_Field (Onod, Union_Id (Field5 (Onod)), 5) = Abandon\n                then\n                   return Abandon;\n-\n                else\n                   return OK_Orig;\n                end if;\n@@ -2681,6 +2681,12 @@ package body Atree is\n          return Nodes.Table (N + 4).Field9;\n       end Field27;\n \n+      function Field28 (N : Node_Id) return Union_Id is\n+      begin\n+         pragma Assert (Nkind (N) in N_Entity);\n+         return Nodes.Table (N + 4).Field10;\n+      end Field28;\n+\n       function Node1 (N : Node_Id) return Node_Id is\n       begin\n          pragma Assert (N in Nodes.First .. Nodes.Last);\n@@ -2843,6 +2849,12 @@ package body Atree is\n          return Node_Id (Nodes.Table (N + 4).Field9);\n       end Node27;\n \n+      function Node28 (N : Node_Id) return Node_Id is\n+      begin\n+         pragma Assert (Nkind (N) in N_Entity);\n+         return Node_Id (Nodes.Table (N + 4).Field10);\n+      end Node28;\n+\n       function List1 (N : Node_Id) return List_Id is\n       begin\n          pragma Assert (N in Nodes.First .. Nodes.Last);\n@@ -2995,16 +3007,16 @@ package body Atree is\n          end if;\n       end Elist23;\n \n-      function Elist24 (N : Node_Id) return Elist_Id is\n+      function Elist25 (N : Node_Id) return Elist_Id is\n          pragma Assert (Nkind (N) in N_Entity);\n-         Value : constant Union_Id := Nodes.Table (N + 4).Field6;\n+         Value : constant Union_Id := Nodes.Table (N + 4).Field7;\n       begin\n          if Value = 0 then\n             return No_Elist;\n          else\n             return Elist_Id (Value);\n          end if;\n-      end Elist24;\n+      end Elist25;\n \n       function Name1 (N : Node_Id) return Name_Id is\n       begin\n@@ -4647,6 +4659,12 @@ package body Atree is\n          Nodes.Table (N + 4).Field9 := Val;\n       end Set_Field27;\n \n+      procedure Set_Field28 (N : Node_Id; Val : Union_Id) is\n+      begin\n+         pragma Assert (Nkind (N) in N_Entity);\n+         Nodes.Table (N + 4).Field10 := Val;\n+      end Set_Field28;\n+\n       procedure Set_Node1 (N : Node_Id; Val : Node_Id) is\n       begin\n          pragma Assert (N in Nodes.First .. Nodes.Last);\n@@ -4809,6 +4827,12 @@ package body Atree is\n          Nodes.Table (N + 4).Field9 := Union_Id (Val);\n       end Set_Node27;\n \n+      procedure Set_Node28 (N : Node_Id; Val : Node_Id) is\n+      begin\n+         pragma Assert (Nkind (N) in N_Entity);\n+         Nodes.Table (N + 4).Field10 := Union_Id (Val);\n+      end Set_Node28;\n+\n       procedure Set_List1 (N : Node_Id; Val : List_Id) is\n       begin\n          pragma Assert (N in Nodes.First .. Nodes.Last);\n@@ -4908,11 +4932,11 @@ package body Atree is\n          Nodes.Table (N + 3).Field10 := Union_Id (Val);\n       end Set_Elist23;\n \n-      procedure Set_Elist24 (N : Node_Id; Val : Elist_Id) is\n+      procedure Set_Elist25 (N : Node_Id; Val : Elist_Id) is\n       begin\n          pragma Assert (Nkind (N) in N_Entity);\n-         Nodes.Table (N + 4).Field6 := Union_Id (Val);\n-      end Set_Elist24;\n+         Nodes.Table (N + 4).Field7 := Union_Id (Val);\n+      end Set_Elist25;\n \n       procedure Set_Name1 (N : Node_Id; Val : Name_Id) is\n       begin"}, {"sha": "80d531d6e92c372336d88a31ce4ce305e311eb88", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,7 +49,7 @@ package Atree is\n --  this tree. There is no separate symbol table structure.\n \n --  WARNING: There is a C version of this package. Any changes to this\n---  source file must be properly reflected in the C header file tree.h\n+--  source file must be properly reflected in the C header file atree.h\n \n --  Package Atree defines the basic structure of the tree and its nodes and\n --  provides the basic abstract interface for manipulating the tree. Two\n@@ -198,8 +198,8 @@ package Atree is\n    --   Elist6        Synonym for Field6 typed as Elist_Id (Empty = No_Elist)\n    --   Uint6         Synonym for Field6 typed as Uint (Empty = Uint_0)\n \n-   --   Similar definitions for Field7 to Field27 (and Node7-Node27,\n-   --   Elist7-Elist27, Uint7-Uint27, Ureal7-Ureal27). Note that not all\n+   --   Similar definitions for Field7 to Field28 (and Node7-Node28,\n+   --   Elist7-Elist28, Uint7-Uint28, Ureal7-Ureal28). Note that not all\n    --   these functions are defined, only the ones that are actually used.\n \n    type Paren_Count_Type is mod 4;\n@@ -434,9 +434,9 @@ package Atree is\n \n    function New_Copy_Tree\n      (Source    : Node_Id;\n-      Map       : Elist_Id := No_Elist;\n+      Map       : Elist_Id   := No_Elist;\n       New_Sloc  : Source_Ptr := No_Location;\n-      New_Scope : Entity_Id := Empty) return Node_Id;\n+      New_Scope : Entity_Id  := Empty) return Node_Id;\n    --  Given a node that is the root of a subtree, Copy_Tree copies the entire\n    --  syntactic subtree, including recursively any descendents whose parent\n    --  field references a copied node (descendents not linked to a copied node\n@@ -860,6 +860,9 @@ package Atree is\n       function Field27 (N : Node_Id) return Union_Id;\n       pragma Inline (Field27);\n \n+      function Field28 (N : Node_Id) return Union_Id;\n+      pragma Inline (Field28);\n+\n       function Node1 (N : Node_Id) return Node_Id;\n       pragma Inline (Node1);\n \n@@ -941,6 +944,9 @@ package Atree is\n       function Node27 (N : Node_Id) return Node_Id;\n       pragma Inline (Node27);\n \n+      function Node28 (N : Node_Id) return Node_Id;\n+      pragma Inline (Node28);\n+\n       function List1 (N : Node_Id) return List_Id;\n       pragma Inline (List1);\n \n@@ -992,8 +998,8 @@ package Atree is\n       function Elist23 (N : Node_Id) return Elist_Id;\n       pragma Inline (Elist23);\n \n-      function Elist24 (N : Node_Id) return Elist_Id;\n-      pragma Inline (Elist24);\n+      function Elist25 (N : Node_Id) return Elist_Id;\n+      pragma Inline (Elist25);\n \n       function Name1 (N : Node_Id) return Name_Id;\n       pragma Inline (Name1);\n@@ -1785,6 +1791,9 @@ package Atree is\n       procedure Set_Field27 (N : Node_Id; Val : Union_Id);\n       pragma Inline (Set_Field27);\n \n+      procedure Set_Field28 (N : Node_Id; Val : Union_Id);\n+      pragma Inline (Set_Field28);\n+\n       procedure Set_Node1 (N : Node_Id; Val : Node_Id);\n       pragma Inline (Set_Node1);\n \n@@ -1866,6 +1875,9 @@ package Atree is\n       procedure Set_Node27 (N : Node_Id; Val : Node_Id);\n       pragma Inline (Set_Node27);\n \n+      procedure Set_Node28 (N : Node_Id; Val : Node_Id);\n+      pragma Inline (Set_Node28);\n+\n       procedure Set_List1 (N : Node_Id; Val : List_Id);\n       pragma Inline (Set_List1);\n \n@@ -1917,8 +1929,8 @@ package Atree is\n       procedure Set_Elist23 (N : Node_Id; Val : Elist_Id);\n       pragma Inline (Set_Elist23);\n \n-      procedure Set_Elist24 (N : Node_Id; Val : Elist_Id);\n-      pragma Inline (Set_Elist24);\n+      procedure Set_Elist25 (N : Node_Id; Val : Elist_Id);\n+      pragma Inline (Set_Elist25);\n \n       procedure Set_Name1 (N : Node_Id; Val : Name_Id);\n       pragma Inline (Set_Name1);\n@@ -2832,8 +2844,7 @@ package Atree is\n             --  above is used to hold additional general fields and flags\n             --  as follows:\n \n-            --    Field6-9       Holds Field24-Field27\n-            --    Field10        currently unused, reserved for expansion\n+            --    Field6-10      Holds Field24-Field28\n             --    Field11        Holds Flag184-Flag215\n             --    Field12        currently unused, reserved for expansion\n "}, {"sha": "bc96b20306d1d3a6589a4034f2331584c369cd3c", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2005, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2006, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -382,6 +382,7 @@ extern Node_Id Current_Error_Node;\n #define Field25(N)    (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.field7)\n #define Field26(N)    (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.field8)\n #define Field27(N)    (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.field9)\n+#define Field28(N)    (Nodes_Ptr[(N) - First_Node_Id + 4].V.EX.field10)\n \n #define Node1(N)      Field1  (N)\n #define Node2(N)      Field2  (N)\n@@ -410,6 +411,7 @@ extern Node_Id Current_Error_Node;\n #define Node25(N)     Field25 (N)\n #define Node26(N)     Field26 (N)\n #define Node27(N)     Field27 (N)\n+#define Node28(N)     Field28 (N)\n \n #define List1(N)      Field1  (N)\n #define List2(N)      Field2  (N)\n@@ -429,7 +431,7 @@ extern Node_Id Current_Error_Node;\n #define Elist18(N)    Field18 (N)\n #define Elist21(N)    Field21 (N)\n #define Elist23(N)    Field23 (N)\n-#define Elist24(N)    Field24 (N)\n+#define Elist25(N)    Field25 (N)\n \n #define Name1(N)      Field1  (N)\n #define Name2(N)      Field2  (N)"}, {"sha": "648c4b1e059b7ac6d10b63f68006ea16d2de0259", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 30, "deletions": 17, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,6 +80,9 @@ package body Comperr is\n       --  the FSF version of GNAT, but there are specializations for\n       --  the GNATPRO and Public releases by AdaCore.\n \n+      XF : constant Positive := X'First;\n+      --  Start index, usually 1, but we won't assume this\n+\n       procedure End_Line;\n       --  Add blanks up to column 76, and then a final vertical bar\n \n@@ -93,12 +96,14 @@ package body Comperr is\n          Write_Eol;\n       end End_Line;\n \n-      Is_Public_Version : constant Boolean := Get_Gnat_Build_Type = Public;\n-      Is_FSF_Version    : constant Boolean := Get_Gnat_Build_Type = FSF;\n+      Is_GPL_Version : constant Boolean := Get_Gnat_Build_Type = GPL;\n+      Is_FSF_Version : constant Boolean := Get_Gnat_Build_Type = FSF;\n \n    --  Start of processing for Compiler_Abort\n \n    begin\n+      Cancel_Special_Output;\n+\n       --  Prevent recursion through Compiler_Abort, e.g. via SIGSEGV\n \n       if Abort_In_Progress then\n@@ -173,16 +178,16 @@ package body Comperr is\n                Last_Blank : Integer := 70;\n \n             begin\n-               for P in 40 .. 69 loop\n-                  if X (P) = ' ' then\n+               for P in 39 .. 68 loop\n+                  if X (XF + P) = ' ' then\n                      Last_Blank := P;\n                   end if;\n                end loop;\n \n-               Write_Str (X (1 .. Last_Blank));\n+               Write_Str (X (XF .. XF - 1 + Last_Blank));\n                End_Line;\n                Write_Str (\"|    \");\n-               Write_Str (X (Last_Blank + 1 .. X'Length));\n+               Write_Str (X (XF + Last_Blank .. X'Last));\n             end;\n          else\n             Write_Str (X);\n@@ -267,12 +272,22 @@ package body Comperr is\n                      \" http://gcc.gnu.org/bugs.html.\");\n                   End_Line;\n \n-               elsif Is_Public_Version then\n+               elsif Is_GPL_Version then\n+\n                   Write_Str\n-                    (\"| submit bug report by email \" &\n+                    (\"| Please submit a bug report by email \" &\n                      \"to report@adacore.com.\");\n                   End_Line;\n \n+                  Write_Str\n+                    (\"| GAP members can alternatively use GNAT Tracker:\");\n+                  End_Line;\n+\n+                  Write_Str\n+                    (\"| http://www.adacore.com/ \" &\n+                     \"section 'send a report'.\");\n+                  End_Line;\n+\n                   Write_Str\n                     (\"| See gnatinfo.txt for full info on procedure \" &\n                      \"for submitting bugs.\");\n@@ -290,7 +305,12 @@ package body Comperr is\n \n                   Write_Str\n                     (\"| alternatively submit a bug report by email \" &\n-                     \"to report@adacore.com.\");\n+                     \"to report@adacore.com,\");\n+                  End_Line;\n+\n+                  Write_Str\n+                    (\"| including your customer number #nnn \" &\n+                     \"in the subject line.\");\n                   End_Line;\n                end if;\n \n@@ -299,13 +319,6 @@ package body Comperr is\n                   \" and us to track the bug.\");\n                End_Line;\n \n-               if not (Is_Public_Version or Is_FSF_Version) then\n-                  Write_Str\n-                    (\"| Include your customer number #nnn \" &\n-                     \"in the subject line.\");\n-                  End_Line;\n-               end if;\n-\n                Write_Str\n                  (\"| Include the entire contents of this bug \" &\n                   \"box in the report.\");"}, {"sha": "5f4b2038c9830533956f1878f8654deceab6be5b", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -628,7 +628,7 @@ package body CStand is\n       Set_Is_Character_Type          (Standard_Wide_Wide_Character);\n       Set_Is_Known_Valid             (Standard_Wide_Wide_Character);\n       Set_Size_Known_At_Compile_Time (Standard_Wide_Wide_Character);\n-      Set_Is_Ada_2005                (Standard_Wide_Wide_Character);\n+      Set_Is_Ada_2005_Only           (Standard_Wide_Wide_Character);\n \n       --  Create the bounds for type Wide_Wide_Character\n \n@@ -743,14 +743,14 @@ package body CStand is\n       Append (Identifier_For (S_Positive), Subtype_Marks (Tdef_Node));\n       Set_Type_Definition (Parent (Standard_Wide_Wide_String), Tdef_Node);\n \n-      Set_Ekind          (Standard_Wide_Wide_String, E_String_Type);\n-      Set_Etype          (Standard_Wide_Wide_String,\n-                          Standard_Wide_Wide_String);\n-      Set_Component_Type (Standard_Wide_Wide_String,\n-                          Standard_Wide_Wide_Character);\n-      Set_Component_Size (Standard_Wide_Wide_String, Uint_32);\n-      Init_Size_Align    (Standard_Wide_Wide_String);\n-      Set_Is_Ada_2005    (Standard_Wide_Wide_String);\n+      Set_Ekind            (Standard_Wide_Wide_String, E_String_Type);\n+      Set_Etype            (Standard_Wide_Wide_String,\n+                            Standard_Wide_Wide_String);\n+      Set_Component_Type   (Standard_Wide_Wide_String,\n+                            Standard_Wide_Wide_Character);\n+      Set_Component_Size   (Standard_Wide_Wide_String, Uint_32);\n+      Init_Size_Align      (Standard_Wide_Wide_String);\n+      Set_Is_Ada_2005_Only (Standard_Wide_Wide_String);\n \n       --  Set index type of Wide_Wide_String\n "}, {"sha": "cbcd1321836a233679bead8b7e8ae08524792e98", "filename": "gcc/ada/env.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -218,7 +218,7 @@ void __gnat_unsetenv (char *name) {\n #elif defined (__hpux__) || defined (sun) \\\n      || (defined (__mips) && defined (__sgi)) \\\n      || (defined (__vxworks) && ! defined (__RTP__)) \\\n-     || defined (_AIX)\n+     || defined (_AIX) || defined (__Lynx__)\n \n   /* On Solaris, HP-UX and IRIX there is no function to clear an environment\n      variable. So we look for the variable in the environ table and delete it"}, {"sha": "a124ca6c9b16194bbbc8db6be2fa57f728fd7370", "filename": "gcc/ada/exp_pakd.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fexp_pakd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fexp_pakd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -201,10 +201,8 @@ package Exp_Pakd is\n \n    --       1-2-...-7-8  9-10-...15-16  17-18-19-20-x-x-x-x  x-x-x-x-x-x-x-x\n \n-   --   and now, we do indeed have the same representation. The special flag\n-   --   Is_Left_Justified_Modular is set in the modular type used as the\n-   --   packed array type in the big-endian case to ensure that this required\n-   --   left justification occurs.\n+   --   and now, we do indeed have the same representation for the memory\n+   --   version in the constrained and unconstrained cases.\n \n    -----------------\n    -- Subprograms --"}, {"sha": "ad60e7a9bbde4230095477ed7d69dea200067c4e", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -238,37 +238,37 @@ package body Exp_Tss is\n       return Make_TSS_Name (Typ, TSS_Init_Proc);\n    end Make_Init_Proc_Name;\n \n-   -------------------------\n-   -- Make_TSS_Name_Local --\n-   -------------------------\n+   -------------------\n+   -- Make_TSS_Name --\n+   -------------------\n \n-   function Make_TSS_Name_Local\n+   function Make_TSS_Name\n      (Typ : Entity_Id;\n       Nam : TSS_Name_Type) return Name_Id\n    is\n    begin\n       Get_Name_String (Chars (Typ));\n-      Add_Char_To_Name_Buffer ('_');\n-      Add_Nat_To_Name_Buffer (Increment_Serial_Number);\n       Add_Char_To_Name_Buffer (Nam (1));\n       Add_Char_To_Name_Buffer (Nam (2));\n       return Name_Find;\n-   end Make_TSS_Name_Local;\n+   end Make_TSS_Name;\n \n-   -------------------\n-   -- Make_TSS_Name --\n-   -------------------\n+   -------------------------\n+   -- Make_TSS_Name_Local --\n+   -------------------------\n \n-   function Make_TSS_Name\n+   function Make_TSS_Name_Local\n      (Typ : Entity_Id;\n       Nam : TSS_Name_Type) return Name_Id\n    is\n    begin\n       Get_Name_String (Chars (Typ));\n+      Add_Char_To_Name_Buffer ('_');\n+      Add_Nat_To_Name_Buffer (Increment_Serial_Number);\n       Add_Char_To_Name_Buffer (Nam (1));\n       Add_Char_To_Name_Buffer (Nam (2));\n       return Name_Find;\n-   end Make_TSS_Name;\n+   end Make_TSS_Name_Local;\n \n    --------------\n    -- Same_TSS --"}, {"sha": "6e2dde3c1d6c388853b3164a71446bbf92b6704f", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2005, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2006, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -167,12 +167,10 @@ extern Boolean Back_Annotate_Rep_Info;\n #define No_Exception_Handlers_Set      restrict__no_exception_handlers_set\n #define Check_No_Implicit_Heap_Alloc   restrict__check_no_implicit_heap_alloc\n #define Check_Elaboration_Code_Allowed restrict__check_elaboration_code_allowed\n-#define Check_No_Implicit_Heap_Alloc   restrict__check_no_implicit_heap_alloc\n \n extern Boolean No_Exception_Handlers_Set   (void);\n extern void Check_No_Implicit_Heap_Alloc   (Node_Id);\n extern void Check_Elaboration_Code_Allowed (Node_Id);\n-extern void Check_No_Implicit_Heap_Alloc   (Node_Id);\n \n /* sem_elim: */\n "}, {"sha": "37e1002d3e6c1ab1a4c05b2a265aebdce8d04e85", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2001-2005, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2001-2006, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -200,6 +200,20 @@ package body Fmap is\n          Last_In_Table := 0;\n       end Empty_Tables;\n \n+      ---------------\n+      -- Find_Name --\n+      ---------------\n+\n+      function Find_Name return Name_Id is\n+      begin\n+         if Name_Buffer (1 .. Name_Len) = \"/\" then\n+            return Error_Name;\n+\n+         else\n+            return Name_Find;\n+         end if;\n+      end Find_Name;\n+\n       --------------\n       -- Get_Line --\n       --------------\n@@ -236,20 +250,6 @@ package body Fmap is\n          end if;\n       end Get_Line;\n \n-      ---------------\n-      -- Find_Name --\n-      ---------------\n-\n-      function Find_Name return Name_Id is\n-      begin\n-         if Name_Buffer (1 .. Name_Len) = \"/\" then\n-            return Error_Name;\n-\n-         else\n-            return Name_Find;\n-         end if;\n-      end Find_Name;\n-\n       ----------------------\n       -- Report_Truncated --\n       ----------------------"}, {"sha": "bcadf34b99daf1c7b266eb0edd58fb38b45d3b9a", "filename": "gcc/ada/g-boumai.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-boumai.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-boumai.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-boumai.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2003-2005, AdaCore                     --\n+--                     Copyright (C) 2003-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -71,7 +71,7 @@ package GNAT.Bounded_Mailboxes is\n \n    --  Protected type Mailbox has the following inherited interface:\n \n-   --  entry Insert (Item : in Message_Reference);\n+   --  entry Insert (Item : Message_Reference);\n    --     Insert Item into the Mailbox. Blocks caller\n    --     until space is available.\n "}, {"sha": "34f3e4f326662991492a7fd269de438f6f3d5eaf", "filename": "gcc/ada/g-cgi.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-cgi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-cgi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgi.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                      Copyright (C) 2001-2005, AdaCore                    --\n+--                      Copyright (C) 2001-2006, AdaCore                    --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -188,6 +188,7 @@ package body GNAT.CGI is\n          Data : constant String := Metavariable (Query_String);\n       begin\n          Current_Method := Get;\n+\n          if Data /= \"\" then\n             Set_Parameter_Table (Data);\n          end if;\n@@ -335,9 +336,8 @@ package body GNAT.CGI is\n       ---------------------\n \n       function Get_Environment (Variable_Name : String) return String is\n-         Value : OS_Lib.String_Access := OS_Lib.Getenv (Variable_Name);\n+         Value  : OS_Lib.String_Access := OS_Lib.Getenv (Variable_Name);\n          Result : constant String := Value.all;\n-\n       begin\n          OS_Lib.Free (Value);\n          return Result;"}, {"sha": "eb7d70cbb2933d8fd8261d0f2952b6378139e468", "filename": "gcc/ada/g-cgi.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-cgi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-cgi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgi.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2005, AdaCore                     --\n+--                     Copyright (C) 2000-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,7 +68,7 @@\n --        procedure New_Client is\n --           use GNAT;\n \n---           procedure Add_Client_To_Database (Name : in String) is\n+--           procedure Add_Client_To_Database (Name : String) is\n --           begin\n --              ...\n --           end Add_Client_To_Database;"}, {"sha": "9c0bcebe404f6d74c799d76001126048c684b917", "filename": "gcc/ada/g-eacodu-vms.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-eacodu-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-eacodu-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-eacodu-vms.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,17 +54,17 @@ procedure Core_Dump (Occurrence : Exception_Occurrence) is\n \n    procedure Setexv (\n      Status : out Cond_Value_Type;\n-     Vector : in  Unsigned_Longword := 0;\n-     Addres : in  Address           := Address_Zero;\n-     Acmode : in  Access_Mode_Type  := Access_Mode_Zero;\n-     Prvhnd : in  Unsigned_Longword := 0);\n+     Vector : Unsigned_Longword := 0;\n+     Addres : Address           := Address_Zero;\n+     Acmode : Access_Mode_Type  := Access_Mode_Zero;\n+     Prvhnd : Unsigned_Longword := 0);\n    pragma Interface (External, Setexv);\n    pragma Import_Valued_Procedure (Setexv, \"SYS$SETEXV\",\n      (Cond_Value_Type, Unsigned_Longword, Address, Access_Mode_Type,\n       Unsigned_Longword),\n      (Value, Value, Value, Value, Value));\n \n-   procedure Lib_Signal (I : in Integer);\n+   procedure Lib_Signal (I : Integer);\n    pragma Interface (C, Lib_Signal);\n    pragma Import_Procedure (Lib_Signal, \"LIB$SIGNAL\", Mechanism => (Value));\n begin"}, {"sha": "2381c66c45a78753c26dec4bc6f42f2ca82421d8", "filename": "gcc/ada/g-expect-vms.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-expect-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-expect-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect-vms.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2005, AdaCore                     --\n+--                     Copyright (C) 2002-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1058,8 +1058,8 @@ package body GNAT.Expect is\n       Pipe1 : in out Pipe_Type;\n       Pipe2 : in out Pipe_Type;\n       Pipe3 : in out Pipe_Type;\n-      Cmd   : in String;\n-      Args  : in System.Address)\n+      Cmd   : String;\n+      Args  : System.Address)\n    is\n       pragma Warnings (Off, Pid);\n "}, {"sha": "ef0ac85eab9881f5cc93174f89b361e8ea7afdf9", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -1970,6 +1970,7 @@ package body GNAT.Perfect_Hash_Generators is\n       --  position selection plus Pos. Once this routine is called, reduced\n       --  words are sorted by subsets and each item (First, Last) in Sets\n       --  defines the range of identical keys.\n+      --  Need comment saying exactly what Last is ???\n \n       function Count_Different_Keys\n         (Table : Vertex_Table_Type;\n@@ -1991,9 +1992,9 @@ package body GNAT.Perfect_Hash_Generators is\n          Last  : in out Natural;\n          Pos   : Natural)\n       is\n-         S : constant Vertex_Table_Type := Table (1 .. Last);\n+         S : constant Vertex_Table_Type := Table (Table'First .. Last);\n          C : constant Natural           := Pos;\n-         --  Shortcuts\n+         --  Shortcuts (why are these not renames ???)\n \n          F : Integer;\n          L : Integer;"}, {"sha": "de76a7b26b1f17f9500cb82243a06c4630a163d0", "filename": "gcc/ada/g-regpat.adb", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -684,9 +684,12 @@ package body GNAT.Regpat is\n          Operand : Pointer;\n          Greedy  : Boolean := True)\n       is\n-         Dest   : constant Pointer := Emit_Ptr;\n-         Old    : Pointer;\n-         Size   : Pointer := 3;\n+         Dest : constant Pointer := Emit_Ptr;\n+         Old  : Pointer;\n+         Size : Pointer := 3;\n+\n+         Discard : Pointer;\n+         pragma Warnings (Off, Discard);\n \n       begin\n          --  If not greedy, we have to emit another opcode first\n@@ -713,7 +716,7 @@ package body GNAT.Regpat is\n             Link_Tail (Old, Old + 3);\n          end if;\n \n-         Old := Emit_Node (Op);\n+         Discard := Emit_Node (Op);\n          Emit_Ptr := Dest + Size;\n       end Insert_Operator;\n \n@@ -2364,21 +2367,23 @@ package body GNAT.Regpat is\n    -----------\n \n    procedure Match\n-     (Self    : Pattern_Matcher;\n-      Data    : String;\n-      Matches : out Match_Array;\n+     (Self       : Pattern_Matcher;\n+      Data       : String;\n+      Matches    : out Match_Array;\n       Data_First : Integer := -1;\n       Data_Last  : Positive := Positive'Last)\n    is\n-      Program   : Program_Data renames Self.Program; -- Shorter notation\n+      pragma Assert (Matches'First = 0);\n+\n+      Program : Program_Data renames Self.Program; -- Shorter notation\n \n       First_In_Data : constant Integer := Integer'Max (Data_First, Data'First);\n       Last_In_Data  : constant Integer := Integer'Min (Data_Last, Data'Last);\n \n       --  Global work variables\n \n-      Input_Pos : Natural;          -- String-input pointer\n-      BOL_Pos   : Natural;          -- Beginning of input, for ^ check\n+      Input_Pos : Natural;           -- String-input pointer\n+      BOL_Pos   : Natural;           -- Beginning of input, for ^ check\n       Matched   : Boolean := False;  -- Until proven True\n \n       Matches_Full : Match_Array (0 .. Natural'Max (Self.Paren_Count,"}, {"sha": "dbe65b4d80ac8d399c76d77d995d55d546c15e88", "filename": "gcc/ada/g-regpat.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                                                                          --\n --               Copyright (C) 1986 by University of Toronto.               --\n---                     Copyright (C) 1996-2005, AdaCore                     --\n+--                     Copyright (C) 1996-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -583,7 +583,8 @@ package GNAT.Regpat is\n       Data_First : Integer  := -1;\n       Data_Last  : Positive := Positive'Last);\n    --  Match Data using the given pattern matcher and store result in Matches.\n-   --  The expression matches if Matches (0) /= No_Match.\n+   --  The expression matches if Matches (0) /= No_Match. The lower bound of\n+   --  Matches is required to be zero.\n    --\n    --  At most Matches'Length parenthesis are returned\n "}, {"sha": "6f9dfe7e721b9b243772797f49703048edea71d9", "filename": "gcc/ada/g-thread.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-thread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-thread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-thread.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005 AdaCore                      --\n+--                     Copyright (C) 1998-2006 AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -128,6 +128,7 @@ package body GNAT.Threads is\n       T   : Tasking.Task_Id;\n \n       use type Tasking.Task_Id;\n+      use type System.OS_Interface.Thread_Id;\n \n    begin\n       STPO.Lock_RTS;"}, {"sha": "7636a646616c7a82a2021ac9a877d6dc12438a28", "filename": "gcc/ada/g-trasym-vms-ia64.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-trasym-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fg-trasym-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym-vms-ia64.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2005, Free Software Foundation, Inc.            --\n+--         Copyright (C) 2005-2006, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -69,7 +69,7 @@ package body GNAT.Traceback.Symbolic is\n \n    procedure Symbolize\n      (Status         : out Cond_Value_Type;\n-      Current_PC     : in Address;\n+      Current_PC     : Address;\n       Filename_Name  : out Address;\n       Library_Name   : out Address;\n       Record_Number  : out Integer;"}, {"sha": "fb2b226bcb06d9a31bf899bcf8824ec62c59fe9d", "filename": "gcc/ada/get_targ.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fget_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fget_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,6 +42,15 @@ package body Get_Targ is\n       end if;\n    end Digits_From_Size;\n \n+   -----------------------------\n+   -- Get_Max_Unaligned_Field --\n+   -----------------------------\n+\n+   function Get_Max_Unaligned_Field return Pos is\n+   begin\n+      return 64;  -- Can be different on some targets (e.g., AAMP)\n+   end Get_Max_Unaligned_Field;\n+\n    ---------------------\n    -- Width_From_Size --\n    ---------------------\n@@ -57,13 +66,4 @@ package body Get_Targ is\n       end if;\n    end Width_From_Size;\n \n-   -----------------------------\n-   -- Get_Max_Unaligned_Field --\n-   -----------------------------\n-\n-   function Get_Max_Unaligned_Field return Pos is\n-   begin\n-      return 64;  -- Can be different on some targets (e.g., AAMP)\n-   end Get_Max_Unaligned_Field;\n-\n end Get_Targ;"}, {"sha": "9895362a16798e7977ef0ef1e727ec0299f43e98", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -85,7 +85,7 @@ procedure Gnatbind is\n    procedure Scan_Bind_Arg (Argv : String);\n    --  Scan and process binder specific arguments. Argv is a single argument.\n    --  All the one character arguments are still handled by Switch. This\n-   --  routine handles -aO -aI and -I-.\n+   --  routine handles -aO -aI and -I-. The lower bound of Argv must be 1.\n \n    function Is_Cross_Compiler return Boolean;\n    --  Returns True iff this is a cross-compiler\n@@ -206,6 +206,8 @@ procedure Gnatbind is\n    -------------------\n \n    procedure Scan_Bind_Arg (Argv : String) is\n+      pragma Assert (Argv'First = 1);\n+\n    begin\n       --  Now scan arguments that are specific to the binder and are not\n       --  handled by the common circuitry in Switch.\n@@ -420,11 +422,11 @@ begin\n    Scan_Args : while Next_Arg < Arg_Count loop\n       declare\n          Next_Argv : String (1 .. Len_Arg (Next_Arg));\n-\n       begin\n          Fill_Arg (Next_Argv'Address, Next_Arg);\n          Scan_Bind_Arg (Next_Argv);\n       end;\n+\n       Next_Arg := Next_Arg + 1;\n    end loop Scan_Args;\n \n@@ -449,7 +451,7 @@ begin\n    --  Output usage if requested\n \n    if Usage_Requested then\n-      Bindusg;\n+      Bindusg.Display;\n    end if;\n \n    --  Check that the Ada binder file specified has extension .adb and that\n@@ -535,7 +537,7 @@ begin\n    --  Output usage information if no files\n \n    if not More_Lib_Files then\n-      Bindusg;\n+      Bindusg.Display;\n       Exit_Program (E_Fatal);\n    end if;\n \n@@ -600,8 +602,8 @@ begin\n \n          --  Set standard configuration parameters\n \n-         Suppress_Standard_Library_On_Target            := True;\n-         Configurable_Run_Time_Mode                     := True;\n+         Suppress_Standard_Library_On_Target := True;\n+         Configurable_Run_Time_Mode          := True;\n       end if;\n \n       --  For main ALI files, even if they are interfaces, we get their"}, {"sha": "ada455e1a14ed886000295ef812bfc5fc2f125d0", "filename": "gcc/ada/gnatdll.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fgnatdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fgnatdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatdll.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -253,6 +253,12 @@ procedure Gnatdll is\n          end loop;\n \n          Close (File);\n+\n+      exception\n+         when Name_Error =>\n+            Raise_Exception\n+              (Syntax_Error'Identity,\n+               \"list-of-files file \" & List_Filename & \" not found.\");\n       end Add_Files_From_List;\n \n    --  Start of processing for Parse_Command_Line"}, {"sha": "3575d8f80a7eab65f3238716f45d18a1618245ce", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -579,7 +579,6 @@ package body Inline is\n             end loop;\n \n             Comp_Unit := Parent (Pack);\n-\n             while Present (Comp_Unit)\n               and then Nkind (Comp_Unit) /= N_Compilation_Unit\n             loop"}, {"sha": "14216f6128880b5be1aea2f9b119d53f2c410d54", "filename": "gcc/ada/itypes.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fitypes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fitypes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fitypes.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,14 +93,14 @@ package body Itypes is\n       Set_Etype                    (I_Typ, T);\n       Init_Size_Align              (I_Typ);\n       Set_Depends_On_Private       (I_Typ, Depends_On_Private (T));\n-      Set_Is_Public                (I_Typ, Is_Public (T));\n-      Set_From_With_Type           (I_Typ, From_With_Type (T));\n+      Set_Is_Public                (I_Typ, Is_Public          (T));\n+      Set_From_With_Type           (I_Typ, From_With_Type     (T));\n       Set_Is_Access_Constant       (I_Typ, Is_Access_Constant (T));\n-      Set_Is_Generic_Type          (I_Typ, Is_Generic_Type (T));\n-      Set_Is_Volatile              (I_Typ, Is_Volatile (T));\n-      Set_Treat_As_Volatile        (I_Typ, Treat_As_Volatile (T));\n-      Set_Is_Atomic                (I_Typ, Is_Atomic (T));\n-      Set_Is_Ada_2005              (I_Typ, Is_Ada_2005 (T));\n+      Set_Is_Generic_Type          (I_Typ, Is_Generic_Type    (T));\n+      Set_Is_Volatile              (I_Typ, Is_Volatile        (T));\n+      Set_Treat_As_Volatile        (I_Typ, Treat_As_Volatile  (T));\n+      Set_Is_Atomic                (I_Typ, Is_Atomic          (T));\n+      Set_Is_Ada_2005_Only         (I_Typ, Is_Ada_2005_Only   (T));\n       Set_Can_Never_Be_Null        (I_Typ);\n \n       return I_Typ;"}, {"sha": "82636b4fb010a2dbb62cc3573ed8806deb420798", "filename": "gcc/ada/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flang.opt?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -61,6 +61,10 @@ Wmissing-format-attribute\n Ada\n ; Documented for C\n \n+Woverlength-strings\n+Ada\n+; Documented for C\n+\n nostdinc\n Ada RejectNegative\n ; Don't look for source files"}, {"sha": "4a7a0b9e9ce02862ced455046500530e3b0e5218", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -135,6 +135,9 @@ package body Makeutl is\n       Finish    : Natural := Argv'Last;\n       Equal_Pos : Natural;\n \n+      pragma Assert (Argv'First = 1);\n+      pragma Assert (Argv (1 .. 2) = \"-X\");\n+\n    begin\n       if Argv'Last < 5 then\n          return False;"}, {"sha": "7939199d206cafac6aa7fc336bf617321d63611b", "filename": "gcc/ada/mdll-utl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fmdll-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fmdll-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll-utl.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -250,7 +250,7 @@ package body MDLL.Utl is\n       if not Success then\n          declare\n             Base_Name : constant String :=\n-              Directory_Operations.Base_Name (Alis (1).all, \".ali\");\n+              Directory_Operations.Base_Name (Alis (Alis'First).all, \".ali\");\n          begin\n             OS_Lib.Delete_File (\"b~\" & Base_Name & \".ads\", Success);\n             OS_Lib.Delete_File (\"b~\" & Base_Name & \".adb\", Success);"}, {"sha": "a3188b3768b2baa038eaa146e50a8271a7774eb0", "filename": "gcc/ada/mdll.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fmdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fmdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -394,6 +394,8 @@ package body MDLL is\n             raise;\n       end Ada_Build_Non_Reloc_DLL;\n \n+   --  Start of processing for Build_Dynamic_Library\n+\n    begin\n       --  On Windows the binder file must not be in the first position in the\n       --  list. This is due to the way DLL's are built on Windows. We swap the\n@@ -402,13 +404,14 @@ package body MDLL is\n       if L_Afiles'Length > 1 then\n          declare\n             Filename : constant String :=\n-                         Directory_Operations.Base_Name (L_Afiles (1).all);\n+                         Directory_Operations.Base_Name\n+                           (L_Afiles (L_Afiles'First).all);\n             First    : constant Positive := Filename'First;\n \n          begin\n             if Filename (First .. First + 1) = \"b~\" then\n-               L_Afiles (L_Afiles'Last) := Afiles (1);\n-               L_Afiles (1) := Afiles (Afiles'Last);\n+               L_Afiles (L_Afiles'Last) := Afiles (Afiles'First);\n+               L_Afiles (L_Afiles'First) := Afiles (Afiles'Last);\n             end if;\n          end;\n       end if;\n@@ -438,7 +441,6 @@ package body MDLL is\n      (Lib_Filename : String;\n       Def_Filename : String)\n    is\n-\n       procedure Build_Import_Library (Lib_Filename : String);\n       --  Build an import library. This is to build only a .a library to link\n       --  against a DLL.\n@@ -472,8 +474,12 @@ package body MDLL is\n       --  convention and we try as much as possible to follow the platform\n       --  convention.\n \n-      if Lib_Filename'Length > 3 and then Lib_Filename (1 .. 3) = \"lib\" then\n-         Build_Import_Library (Lib_Filename (4 .. Lib_Filename'Last));\n+      if Lib_Filename'Length > 3\n+        and then\n+          Lib_Filename (Lib_Filename'First .. Lib_Filename'First + 2) = \"lib\"\n+      then\n+         Build_Import_Library\n+           (Lib_Filename (Lib_Filename'First + 3 .. Lib_Filename'Last));\n       else\n          Build_Import_Library (Lib_Filename);\n       end if;"}, {"sha": "240d522644628f0be53f25f4dbb9f6d05d514163", "filename": "gcc/ada/nmake.adt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fnmake.adt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fnmake.adt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnmake.adt?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                             T e m p l a t e                              --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d7c8e350e69bee8621f6cb030b602eb3de0e4433", "filename": "gcc/ada/osint-b.adb", "status": "modified", "additions": 1, "deletions": 89, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fosint-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fosint-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-b.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,12 +30,6 @@ with Targparm; use Targparm;\n \n package body Osint.B is\n \n-   Binder_Output_Time_Stamps_Set : Boolean := False;\n-\n-   Old_Binder_Output_Time_Stamp  : Time_Stamp_Type;\n-   New_Binder_Output_Time_Stamp  : Time_Stamp_Type;\n-   Recording_Time_From_Last_Bind : Boolean := False;\n-\n    -------------------------\n    -- Close_Binder_Output --\n    -------------------------\n@@ -51,10 +45,6 @@ package body Osint.B is\n             Get_Name_String (Output_File_Name));\n       end if;\n \n-      if Recording_Time_From_Last_Bind then\n-         New_Binder_Output_Time_Stamp  := File_Stamp (Output_File_Name);\n-         Binder_Output_Time_Stamps_Set := True;\n-      end if;\n    end Close_Binder_Output;\n \n    --------------------------\n@@ -164,10 +154,6 @@ package body Osint.B is\n \n       Bfile := Name_Find;\n \n-      if Recording_Time_From_Last_Bind then\n-         Old_Binder_Output_Time_Stamp := File_Stamp (Bfile);\n-      end if;\n-\n       Create_File_And_Check (Output_FD, Text);\n    end Create_Binder_Output;\n \n@@ -183,80 +169,6 @@ package body Osint.B is\n \n    function Next_Main_Lib_File return File_Name_Type renames Next_Main_File;\n \n-   --------------------------------\n-   -- Record_Time_From_Last_Bind --\n-   --------------------------------\n-\n-   procedure Record_Time_From_Last_Bind is\n-   begin\n-      Recording_Time_From_Last_Bind := True;\n-   end Record_Time_From_Last_Bind;\n-\n-   -------------------------\n-   -- Time_From_Last_Bind --\n-   -------------------------\n-\n-   function Time_From_Last_Bind return Nat is\n-      Old_Y  : Nat;\n-      Old_M  : Nat;\n-      Old_D  : Nat;\n-      Old_H  : Nat;\n-      Old_Mi : Nat;\n-      Old_S  : Nat;\n-      New_Y  : Nat;\n-      New_M  : Nat;\n-      New_D  : Nat;\n-      New_H  : Nat;\n-      New_Mi : Nat;\n-      New_S  : Nat;\n-\n-      type Month_Data is array (Int range 1 .. 12) of Int;\n-      Cumul : constant Month_Data := (0, 0, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7);\n-      --  Represents the difference in days from a period compared to the\n-      --  same period if all months had 31 days, i.e:\n-      --\n-      --    Cumul (m) = 31x(m-1) - (number of days from 01/01 to m/01)\n-\n-      Res : Int;\n-\n-   begin\n-      if not Recording_Time_From_Last_Bind\n-        or else not Binder_Output_Time_Stamps_Set\n-        or else Old_Binder_Output_Time_Stamp = Empty_Time_Stamp\n-      then\n-         return Nat'Last;\n-      end if;\n-\n-      Split_Time_Stamp\n-       (Old_Binder_Output_Time_Stamp,\n-        Old_Y, Old_M, Old_D, Old_H, Old_Mi, Old_S);\n-\n-      Split_Time_Stamp\n-       (New_Binder_Output_Time_Stamp,\n-        New_Y, New_M, New_D, New_H, New_Mi, New_S);\n-\n-      Res := New_Mi - Old_Mi;\n-\n-      --  60 minutes in an hour\n-\n-      Res := Res + 60 * (New_H  - Old_H);\n-\n-      --  24 hours in a day\n-\n-      Res := Res + 60 * 24 * (New_D  - Old_D);\n-\n-      --  Almost 31 days in a month\n-\n-      Res := Res + 60 * 24 *\n-        (31 * (New_M - Old_M) - Cumul (New_M) + Cumul (Old_M));\n-\n-      --  365 days in a year\n-\n-      Res := Res + 60 * 24 * 365 * (New_Y - Old_Y);\n-\n-      return Res;\n-   end Time_From_Last_Bind;\n-\n    -----------------------\n    -- Write_Binder_Info --\n    -----------------------"}, {"sha": "6ba2bb9ae88d8b3f98b21c154cc45ca694648d45", "filename": "gcc/ada/osint-b.ads", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fosint-b.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fosint-b.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-b.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001 Free Software Foundation, Inc.               --\n+--           Copyright (C) 2001-2006  Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,10 +29,6 @@\n \n package Osint.B is\n \n-   procedure Record_Time_From_Last_Bind;\n-   --  Trigger the computing of the time from the last bind of the same\n-   --  program.\n-\n    function More_Lib_Files return Boolean;\n    --  Indicates whether more library information files remain to be processed.\n    --  Returns False right away if no source files, or if all source files\n@@ -45,20 +41,6 @@ package Osint.B is\n    --  called only if a previous call to More_Lib_Files returned True). This\n    --  name is the simple name, excluding any directory information.\n \n-   function Time_From_Last_Bind return Nat;\n-   --  This function give an approximate number of minute from the last bind.\n-   --  It bases its computation on file stamp and therefore does gibe not\n-   --  any meaningful result before the new output binder file is written.\n-   --  So it returns Nat'last if:\n-   --\n-   --   - it is the first bind of this  specific program\n-   --   - Record_Time_From_Last_Bind was not Called first\n-   --   - Close_Binder_Output was not called first\n-   --\n-   --  otherwise it returns the number of minutes from the last bind. The\n-   --  computation does not try to be completely accurate and in particular\n-   --  does not take leap years into account.\n-\n    -------------------\n    -- Binder Output --\n    -------------------"}, {"sha": "c9695fa06215cef5b44a44e4f2df99d79f64eef5", "filename": "gcc/ada/output.adb", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Foutput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Foutput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -58,6 +58,15 @@ package body Output is\n       Special_Output_Proc := null;\n    end Cancel_Special_Output;\n \n+   ------------\n+   -- Column --\n+   ------------\n+\n+   function Column return Pos is\n+   begin\n+      return Pos (Next_Col);\n+   end Column;\n+\n    ------------------\n    -- Flush_Buffer --\n    ------------------\n@@ -100,15 +109,6 @@ package body Output is\n       end if;\n    end Flush_Buffer;\n \n-   ------------\n-   -- Column --\n-   ------------\n-\n-   function Column return Pos is\n-   begin\n-      return Pos (Next_Col);\n-   end Column;\n-\n    ---------------------------\n    -- Restore_Output_Buffer --\n    ---------------------------\n@@ -240,8 +240,12 @@ package body Output is\n          Write_Eol;\n       end if;\n \n-      Buffer (Next_Col) := C;\n-      Next_Col := Next_Col + 1;\n+      if C = ASCII.LF then\n+         Write_Eol;\n+      else\n+         Buffer (Next_Col) := C;\n+         Next_Col := Next_Col + 1;\n+      end if;\n    end Write_Char;\n \n    ---------------\n@@ -295,6 +299,17 @@ package body Output is\n       Write_Eol;\n    end Write_Line;\n \n+   ------------------\n+   -- Write_Spaces --\n+   ------------------\n+\n+   procedure Write_Spaces (N : Nat) is\n+   begin\n+      for J in 1 .. N loop\n+         Write_Char (' ');\n+      end loop;\n+   end Write_Spaces;\n+\n    ---------------\n    -- Write_Str --\n    ---------------"}, {"sha": "7273ce573a08d30add46835cc3d6b8b857267208", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -101,11 +101,15 @@ package Output is\n    --  Write an integer value with no leading blanks or zeroes. Negative\n    --  values are preceded by a minus sign).\n \n+   procedure Write_Spaces (N : Nat);\n+   --  Write N spaces\n+\n    procedure Write_Str (S : String);\n    --  Write a string of characters to the standard output file. Note that\n-   --  end of line is handled separately using WRITE_EOL, so the string\n-   --  should not contain either of the characters LF or CR, but it may\n-   --  contain horizontal tab characters.\n+   --  end of line is normally handled separately using WRITE_EOL, but it\n+   --  is allowed for the string to contain LF (but not CR) characters,\n+   --  which are properly interpreted as end of line characters. The string\n+   --  may also contain horizontal tab characters.\n \n    procedure Write_Line (S : String);\n    --  Equivalent to Write_Str (S) followed by Write_Eol;\n@@ -144,7 +148,7 @@ package Output is\n    --  names, precisely to make sure that they are only used for debugging!\n \n    procedure w (C : Character);\n-   --  Dump quote, character quote, followed by line return\n+   --  Dump quote, character, quote, followed by line return\n \n    procedure w (S : String);\n    --  Dump string followed by line return"}, {"sha": "732feb3363af65ce852f63786e9a4acb095dd306", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -110,7 +110,7 @@ package Prj.Attr is\n    --  The type to refers to an attribute, self-initialized\n \n    Empty_Attribute : constant Attribute_Node_Id;\n-   --  Indicates no attribute. Default value of Attribute_Node_Id objects.\n+   --  Indicates no attribute. Default value of Attribute_Node_Id objects\n \n    Attribute_First : constant Attribute_Node_Id;\n    --  First attribute node id of project level attributes\n@@ -205,7 +205,7 @@ private\n    ----------------\n \n    Attributes_Initial   : constant := 50;\n-   Attributes_Increment : constant := 50;\n+   Attributes_Increment : constant := 100;\n \n    Attribute_Node_Low_Bound  : constant := 0;\n    Attribute_Node_High_Bound : constant := 099_999_999;\n@@ -235,7 +235,7 @@ private\n    --------------\n \n    Packages_Initial   : constant := 10;\n-   Packages_Increment : constant := 50;\n+   Packages_Increment : constant := 100;\n \n    Package_Node_Low_Bound  : constant := 0;\n    Package_Node_High_Bound : constant := 099_999_999;"}, {"sha": "867aafd183aae241fb0bd7546c443ac39cc06a8b", "filename": "gcc/ada/s-asthan-vms-alpha.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-asthan-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-asthan-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-asthan-vms-alpha.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -517,7 +517,7 @@ package body System.AST_Handling is\n    ----------------------------\n \n    procedure Expand_AST_Packet_Pool\n-     (Requested_Packets : in Natural;\n+     (Requested_Packets : Natural;\n       Actual_Number     : out Natural;\n       Total_Number      : out Natural)\n    is"}, {"sha": "9fd2839bc57b441d2bf5e3b81b5e6233af0a9b66", "filename": "gcc/ada/s-atacco.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-atacco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-atacco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atacco.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --"}, {"sha": "cc890d626a74f5d617bacb050e6693e37bfca39c", "filename": "gcc/ada/s-htable.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2005 AdaCore                      --\n+--                    Copyright (C) 1995-2006, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,9 +48,9 @@ package body System.HTable is\n       Iterator_Started : Boolean := False;\n \n       function Get_Non_Null return Elmt_Ptr;\n-      --  Returns Null_Ptr if Iterator_Started is false of the Table is\n-      --  empty. Returns Iterator_Ptr if non null, or the next non null\n-      --  element in table if any.\n+      --  Returns Null_Ptr if Iterator_Started is false or the Table is empty.\n+      --  Returns Iterator_Ptr if non null, or the next non null element in\n+      --  table if any.\n \n       ---------\n       -- Get --"}, {"sha": "d57d07d8d753d8a287e9f2fe94e435e2b372493f", "filename": "gcc/ada/s-imgdec.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-imgdec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-imgdec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgdec.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,8 +41,7 @@ package body System.Img_Dec is\n \n    function Image_Decimal\n      (V     : Integer;\n-      Scale : Integer)\n-      return  String\n+      Scale : Integer) return String\n    is\n       P : Natural := 0;\n       S : String (1 .. 64);\n@@ -76,10 +75,10 @@ package body System.Img_Dec is\n       Aft   : Natural;\n       Exp   : Natural)\n    is\n-      Minus : constant Boolean := (Digs (1) = '-');\n+      Minus : constant Boolean := (Digs (Digs'First) = '-');\n       --  Set True if input is negative\n \n-      Zero : Boolean := (Digs (2) = '0');\n+      Zero : Boolean := (Digs (Digs'First + 1) = '0');\n       --  Set True if input is exactly zero (only case when a leading zero\n       --  is permitted in the input string given to this procedure). This\n       --  flag can get set later if rounding causes the value to become zero.\n@@ -147,10 +146,10 @@ package body System.Img_Dec is\n             --  The result is zero, unless we are rounding just before\n             --  the first digit, and the first digit is five or more.\n \n-            if N = 1 and then Digs (2) >= '5' then\n-               Digs (1) := '1';\n+            if N = 1 and then Digs (Digs'First + 1) >= '5' then\n+               Digs (Digs'First) := '1';\n             else\n-               Digs (1) := '0';\n+               Digs (Digs'First) := '0';\n                Zero := True;\n             end if;\n \n@@ -181,7 +180,7 @@ package body System.Img_Dec is\n                --  OK, because we already captured the value of the sign and\n                --  we are in any case destroying the value in the Digs buffer\n \n-               Digs (1) := '1';\n+               Digs (Digs'First) := '1';\n                FD := 1;\n                ND := ND + 1;\n                Digits_Before_Point := Digits_Before_Point + 1;"}, {"sha": "e9da380f8517d1c31ddd57f5bafcf2309bccb2ad", "filename": "gcc/ada/s-inmaop-posix.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-inmaop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-inmaop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-inmaop-posix.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -295,7 +295,7 @@ begin\n \n       end loop;\n \n-      --  Setup the masks to be exported.\n+      --  Setup the masks to be exported\n \n       Result := sigemptyset (mask'Access);\n       pragma Assert (Result = 0);"}, {"sha": "d0082ae6d3a6a7a61b551ddd9e30acd51dba4f97", "filename": "gcc/ada/s-maccod.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-maccod.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-maccod.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-maccod.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,8 +89,7 @@ package System.Machine_Code is\n      Outputs  : Asm_Output_Operand_List;\n      Inputs   : Asm_Input_Operand_List;\n      Clobber  : String  := \"\";\n-     Volatile : Boolean := False)\n-     return     Asm_Insn;\n+     Volatile : Boolean := False) return Asm_Insn;\n \n    function Asm (\n      Template : String;\n@@ -121,7 +120,7 @@ private\n    type Asm_Output_Operand is new Integer;\n    type Asm_Insn           is new Integer;\n    --  All three of these types are dummy types, to meet the requirements of\n-   --  type consistenty. No values of these types are ever referenced.\n+   --  type consistency. No values of these types are ever referenced.\n \n    No_Input_Operands  : constant Asm_Input_Operand  := 0;\n    No_Output_Operands : constant Asm_Output_Operand := 0;"}, {"sha": "4b239f255ca1e43989eb0f148673b4a309efd781", "filename": "gcc/ada/s-mastop-vms.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-mastop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-mastop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mastop-vms.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                         (Version for Alpha/VMS)                          --\n --                                                                          --\n---                     Copyright (C) 2001-2005, AdaCore                     --\n+--                     Copyright (C) 2001-2006, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -175,7 +175,7 @@ package body System.Machine_State_Operations is\n    function Get_Code_Loc (M : Machine_State) return Code_Loc is\n       procedure Get_Invo_Context (\n          Result       : out Unsigned_Longword; -- return value\n-         Invo_Handle  : in  Invo_Handle_Type;\n+         Invo_Handle  : Invo_Handle_Type;\n          Invo_Context : out Invo_Context_Blk_Type);\n \n       pragma Interface (External, Get_Invo_Context);\n@@ -221,7 +221,7 @@ package body System.Machine_State_Operations is\n    procedure Pop_Frame (M : Machine_State) is\n       procedure Get_Prev_Invo_Handle (\n          Result : out Invo_Handle_Type; -- return value\n-         ICB    : in  Invo_Handle_Type);\n+         ICB    : Invo_Handle_Type);\n \n       pragma Interface (External, Get_Prev_Invo_Handle);\n \n@@ -255,7 +255,7 @@ package body System.Machine_State_Operations is\n \n       procedure Get_Invo_Handle (\n          Result       : out Invo_Handle_Type; -- return value\n-         Invo_Context : in Invo_Context_Blk_Type);\n+         Invo_Context : Invo_Context_Blk_Type);\n \n       pragma Interface (External, Get_Invo_Handle);\n "}, {"sha": "d149bd513cef36ea20ed7bd09c3a95feede39415", "filename": "gcc/ada/s-memory.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-memory.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-memory.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-memory.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the default implementation of this package.\n+--  This is the default implementation of this package\n \n --  This implementation assumes that the underlying malloc/free/realloc\n --  implementation is thread safe, and thus, no additional lock is required."}, {"sha": "1989c1447d164544d5ba601a14aa07a7679837e0", "filename": "gcc/ada/s-osinte-mingw.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-osinte-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-osinte-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-mingw.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2005, Free Software Foundation, Inc.      --\n+--          Copyright (C) 1995-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,6 +68,7 @@ package System.OS_Interface is\n \n    subtype PSZ   is Interfaces.C.Strings.chars_ptr;\n    subtype PCHAR is Interfaces.C.Strings.chars_ptr;\n+\n    subtype PVOID is System.Address;\n \n    Null_Void : constant PVOID := System.Null_Address;"}, {"sha": "54b4b9048d7b32a55ee5dda46ee7426ec36cf408", "filename": "gcc/ada/s-osprim-vms.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-osprim-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-osprim-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-vms.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,10 +77,10 @@ package body System.OS_Primitives is\n    procedure Sys_Schdwk\n      (\n       Status : out Cond_Value_Type;\n-      Pidadr : in Address := Null_Address;\n-      Prcnam : in String := String'Null_Parameter;\n-      Daytim : in Long_Integer;\n-      Reptim : in Long_Integer := Long_Integer'Null_Parameter\n+      Pidadr : Address := Null_Address;\n+      Prcnam : String := String'Null_Parameter;\n+      Daytim : Long_Integer;\n+      Reptim : Long_Integer := Long_Integer'Null_Parameter\n      );\n \n    pragma Interface (External, Sys_Schdwk);"}, {"sha": "bc43eed93c05462637cc7758b4d61dbb6b8ba4bf", "filename": "gcc/ada/s-secsta.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -487,7 +487,7 @@ package body System.Secondary_Stack is\n    --  Allocate a secondary stack for the main program to use\n \n    --  We make sure that the stack has maximum alignment. Some systems require\n-   --  this (e.g. Sun), and in any case it is a good idea for efficiency.\n+   --  this (e.g. Sparc), and in any case it is a good idea for efficiency.\n \n    Stack : aliased Stack_Id;\n    for Stack'Alignment use Standard'Maximum_Alignment;"}, {"sha": "0e5c58209f89b6f4d025f674e0bc19b9b86f3983", "filename": "gcc/ada/s-soflin.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-soflin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-soflin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,7 +54,7 @@ package body System.Soft_Links is\n    --  This is currently only used under VMS.\n \n    NT_TSD : TSD;\n-   --  Note: we rely on the default initialization of NT_TSD.\n+   --  Note: we rely on the default initialization of NT_TSD\n \n    --------------------\n    -- Abort_Defer_NT --\n@@ -295,14 +295,14 @@ package body System.Soft_Links is\n       null;\n    end Task_Lock_NT;\n \n-   --------------------\n-   -- Task_Unlock_NT --\n-   --------------------\n+   ------------------\n+   -- Task_Name_NT --\n+   -------------------\n \n-   procedure Task_Unlock_NT is\n+   function Task_Name_NT return String is\n    begin\n-      null;\n-   end Task_Unlock_NT;\n+      return \"main_task\";\n+   end Task_Name_NT;\n \n    -------------------------\n    -- Task_Termination_NT --\n@@ -314,6 +314,15 @@ package body System.Soft_Links is\n       null;\n    end Task_Termination_NT;\n \n+   --------------------\n+   -- Task_Unlock_NT --\n+   --------------------\n+\n+   procedure Task_Unlock_NT is\n+   begin\n+      null;\n+   end Task_Unlock_NT;\n+\n    -------------------------\n    -- Update_Exception_NT --\n    -------------------------\n@@ -323,13 +332,4 @@ package body System.Soft_Links is\n       Ada.Exceptions.Save_Occurrence (NT_TSD.Current_Excep, X);\n    end Update_Exception_NT;\n \n-   ------------------\n-   -- Task_Name_NT --\n-   -------------------\n-\n-   function Task_Name_NT return String is\n-   begin\n-      return \"main_task\";\n-   end Task_Name_NT;\n-\n end System.Soft_Links;"}, {"sha": "3b1527bfbdc5920860265f27aa3bcfad07ddf98a", "filename": "gcc/ada/s-stoele.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-stoele.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-stoele.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -54,6 +54,10 @@ package System.Storage_Elements is\n    type Storage_Offset is range\n      -(2 ** (Integer'(Standard'Address_Size) - 1)) ..\n      +(2 ** (Integer'(Standard'Address_Size) - 1)) - Long_Long_Integer'(1);\n+   --  Note: the reason for the Long_Long_Integer qualification here is to\n+   --  avoid a bogus ambiguity when this unit is analyzed in an rtsfind\n+   --  context. It may be possible to remove this in the future, but it is\n+   --  certainly harmless in any case ???\n \n    subtype Storage_Count is Storage_Offset range 0 .. Storage_Offset'Last;\n "}, {"sha": "053582ceee1ffa8a83126e5cbed563151528bab0", "filename": "gcc/ada/s-strxdr.adb", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-strxdr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-strxdr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strxdr.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1996-2005 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1996-2006, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GARLIC is free software;  you can redistribute it and/or modify it under --\n -- terms of the  GNU General Public License  as published by the Free Soft- --\n@@ -1041,7 +1041,7 @@ package body System.Stream_Attributes is\n    -- W_AD --\n    ----------\n \n-   procedure W_AD (Stream : not null access RST; Item : in Fat_Pointer) is\n+   procedure W_AD (Stream : not null access RST; Item : Fat_Pointer) is\n       S : XDR_S_TM;\n       U : XDR_TM;\n \n@@ -1071,7 +1071,7 @@ package body System.Stream_Attributes is\n    -- W_AS --\n    ----------\n \n-   procedure W_AS (Stream : not null access RST; Item : in Thin_Pointer) is\n+   procedure W_AS (Stream : not null access RST; Item : Thin_Pointer) is\n       S : XDR_S_TM;\n       U : XDR_TM := XDR_TM (To_XDR_SA (Item.P1));\n \n@@ -1092,7 +1092,7 @@ package body System.Stream_Attributes is\n    -- W_B --\n    ---------\n \n-   procedure W_B (Stream : not null access RST; Item : in Boolean) is\n+   procedure W_B (Stream : not null access RST; Item : Boolean) is\n    begin\n       if Item then\n          W_SSU (Stream, 1);\n@@ -1105,7 +1105,7 @@ package body System.Stream_Attributes is\n    -- W_C --\n    ---------\n \n-   procedure W_C (Stream : not null access RST; Item : in Character) is\n+   procedure W_C (Stream : not null access RST; Item : Character) is\n       S : XDR_S_C;\n \n       pragma Assert (C_L = 1);\n@@ -1123,7 +1123,7 @@ package body System.Stream_Attributes is\n    -- W_F --\n    ---------\n \n-   procedure W_F (Stream : not null access RST; Item : in Float) is\n+   procedure W_F (Stream : not null access RST; Item : Float) is\n       I       : constant Precision := Single;\n       E_Size  : Integer  renames Fields (I).E_Size;\n       E_Bias  : Integer  renames Fields (I).E_Bias;\n@@ -1205,7 +1205,7 @@ package body System.Stream_Attributes is\n    -- W_I --\n    ---------\n \n-   procedure W_I (Stream : not null access RST; Item : in Integer) is\n+   procedure W_I (Stream : not null access RST; Item : Integer) is\n       S : XDR_S_I;\n       U : XDR_U;\n \n@@ -1239,7 +1239,7 @@ package body System.Stream_Attributes is\n    -- W_LF --\n    ----------\n \n-   procedure W_LF (Stream : not null access RST; Item : in Long_Float) is\n+   procedure W_LF (Stream : not null access RST; Item : Long_Float) is\n       I       : constant Precision := Double;\n       E_Size  : Integer  renames Fields (I).E_Size;\n       E_Bias  : Integer  renames Fields (I).E_Bias;\n@@ -1321,7 +1321,7 @@ package body System.Stream_Attributes is\n    -- W_LI --\n    ----------\n \n-   procedure W_LI (Stream : not null access RST; Item : in Long_Integer) is\n+   procedure W_LI (Stream : not null access RST; Item : Long_Integer) is\n       S : XDR_S_LI;\n       U : Unsigned;\n       X : Long_Unsigned;\n@@ -1367,7 +1367,7 @@ package body System.Stream_Attributes is\n    -- W_LLF --\n    -----------\n \n-   procedure W_LLF (Stream : not null access RST; Item : in Long_Long_Float) is\n+   procedure W_LLF (Stream : not null access RST; Item : Long_Long_Float) is\n       I       : constant Precision := Quadruple;\n       E_Size  : Integer  renames Fields (I).E_Size;\n       E_Bias  : Integer  renames Fields (I).E_Bias;\n@@ -1463,7 +1463,7 @@ package body System.Stream_Attributes is\n    -----------\n \n    procedure W_LLI (Stream : not null access RST;\n-                    Item   : in Long_Long_Integer)\n+                    Item   : Long_Long_Integer)\n    is\n       S : XDR_S_LLI;\n       U : Unsigned;\n@@ -1511,7 +1511,7 @@ package body System.Stream_Attributes is\n    -----------\n \n    procedure W_LLU (Stream : not null access RST;\n-                    Item   : in Long_Long_Unsigned) is\n+                    Item   : Long_Long_Unsigned) is\n       S : XDR_S_LLU;\n       U : Unsigned;\n       X : Long_Long_Unsigned := Item;\n@@ -1548,7 +1548,7 @@ package body System.Stream_Attributes is\n    -- W_LU --\n    ----------\n \n-   procedure W_LU (Stream : not null access RST; Item : in Long_Unsigned) is\n+   procedure W_LU (Stream : not null access RST; Item : Long_Unsigned) is\n       S : XDR_S_LU;\n       U : Unsigned;\n       X : Long_Unsigned := Item;\n@@ -1584,7 +1584,7 @@ package body System.Stream_Attributes is\n    -- W_SF --\n    ----------\n \n-   procedure W_SF (Stream : not null access RST; Item : in Short_Float) is\n+   procedure W_SF (Stream : not null access RST; Item : Short_Float) is\n       I       : constant Precision := Single;\n       E_Size  : Integer  renames Fields (I).E_Size;\n       E_Bias  : Integer  renames Fields (I).E_Bias;\n@@ -1666,7 +1666,7 @@ package body System.Stream_Attributes is\n    -- W_SI --\n    ----------\n \n-   procedure W_SI (Stream : not null access RST; Item : in Short_Integer) is\n+   procedure W_SI (Stream : not null access RST; Item : Short_Integer) is\n       S : XDR_S_SI;\n       U : XDR_SU;\n \n@@ -1702,7 +1702,7 @@ package body System.Stream_Attributes is\n \n    procedure W_SSI\n      (Stream : not null access RST;\n-      Item   : in Short_Short_Integer)\n+      Item   : Short_Short_Integer)\n    is\n       S : XDR_S_SSI;\n       U : XDR_SSU;\n@@ -1732,7 +1732,7 @@ package body System.Stream_Attributes is\n \n    procedure W_SSU\n      (Stream : not null access RST;\n-      Item   : in Short_Short_Unsigned)\n+      Item   : Short_Short_Unsigned)\n    is\n       U : constant XDR_SSU := XDR_SSU (Item);\n       S : XDR_S_SSU;\n@@ -1747,7 +1747,7 @@ package body System.Stream_Attributes is\n    -- W_SU --\n    ----------\n \n-   procedure W_SU (Stream : not null access RST; Item : in Short_Unsigned) is\n+   procedure W_SU (Stream : not null access RST; Item : Short_Unsigned) is\n       S : XDR_S_SU;\n       U : XDR_SU := XDR_SU (Item);\n \n@@ -1772,7 +1772,7 @@ package body System.Stream_Attributes is\n    -- W_U --\n    ---------\n \n-   procedure W_U (Stream : not null access RST; Item : in Unsigned) is\n+   procedure W_U (Stream : not null access RST; Item : Unsigned) is\n       S : XDR_S_U;\n       U : XDR_U := XDR_U (Item);\n \n@@ -1797,7 +1797,7 @@ package body System.Stream_Attributes is\n    -- W_WC --\n    ----------\n \n-   procedure W_WC (Stream : not null access RST; Item : in Wide_Character) is\n+   procedure W_WC (Stream : not null access RST; Item : Wide_Character) is\n       S : XDR_S_WC;\n       U : XDR_WC;\n "}, {"sha": "4451f432eba936fa7d1717bb7847cd95eaabddda", "filename": "gcc/ada/s-trafor-default.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-trafor-default.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-trafor-default.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trafor-default.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---           Copyright (C) 2001-2005 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2001-2006 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,7 +41,7 @@ package body System.Traces.Format is\n    -- Format_Trace --\n    ------------------\n \n-   function Format_Trace (Source : in String) return String_Trace is\n+   function Format_Trace (Source : String) return String_Trace is\n       Length : Integer      := Source'Length;\n       Result : String_Trace := (others => ' ');\n "}, {"sha": "9cbea7f25c76be82d52f1b77f99100198c5dac9e", "filename": "gcc/ada/s-wchcon.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-wchcon.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-wchcon.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcon.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2005, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2005-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,4 +48,17 @@ package body System.WCh_Con is\n       raise Constraint_Error;\n    end Get_WC_Encoding_Method;\n \n+   function Get_WC_Encoding_Method (S : String) return WC_Encoding_Method is\n+   begin\n+      if    S = \"hex\"       then return WCEM_Hex;\n+      elsif S = \"upper\"     then return WCEM_Upper;\n+      elsif S = \"shift_jis\" then return WCEM_Shift_JIS;\n+      elsif S = \"euc\"       then return WCEM_EUC;\n+      elsif S = \"utf8\"      then return WCEM_UTF8;\n+      elsif S = \"brackets\"  then return WCEM_Brackets;\n+      else\n+         raise Constraint_Error;\n+      end if;\n+   end Get_WC_Encoding_Method;\n+\n end System.WCh_Con;"}, {"sha": "6ae05afd4d0a9b8e20a1899b096f6afada96dfbf", "filename": "gcc/ada/s-wchcon.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-wchcon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fs-wchcon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcon.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -186,4 +186,9 @@ package System.WCh_Con is\n    --  Given a character C, returns corresponding encoding method (see array\n    --  WC_Encoding_Letters above). Raises Constraint_Error if not in list.\n \n+   function Get_WC_Encoding_Method (S : String) return WC_Encoding_Method;\n+   --  Given a lower case string that is one of hex, upper, shift_jis, euc,\n+   --  utf8, brackets, return the corresponding encoding method. Raises\n+   --  Constraint_Error if not in list.\n+\n end System.WCh_Con;"}, {"sha": "6f8ea91d64656bf515676ca8b1a6d5ec6c18c474", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -57,45 +57,6 @@ package body Scn is\n    procedure Error_Long_Line;\n    --  Signal error of excessively long line\n \n-   ---------------\n-   -- Post_Scan --\n-   ---------------\n-\n-   procedure Post_Scan is\n-   begin\n-      case Token is\n-         when Tok_Char_Literal =>\n-            Token_Node := New_Node (N_Character_Literal, Token_Ptr);\n-            Set_Char_Literal_Value (Token_Node, UI_From_CC (Character_Code));\n-            Set_Chars (Token_Node, Token_Name);\n-\n-         when Tok_Identifier =>\n-            Token_Node := New_Node (N_Identifier, Token_Ptr);\n-            Set_Chars (Token_Node, Token_Name);\n-\n-         when Tok_Real_Literal =>\n-            Token_Node := New_Node (N_Real_Literal, Token_Ptr);\n-            Set_Realval (Token_Node, Real_Literal_Value);\n-\n-         when Tok_Integer_Literal =>\n-            Token_Node := New_Node (N_Integer_Literal, Token_Ptr);\n-            Set_Intval (Token_Node, Int_Literal_Value);\n-\n-         when Tok_String_Literal =>\n-            Token_Node := New_Node (N_String_Literal, Token_Ptr);\n-            Set_Has_Wide_Character (Token_Node, Wide_Character_Found);\n-            Set_Strval (Token_Node, String_Literal_Id);\n-\n-         when Tok_Operator_Symbol =>\n-            Token_Node := New_Node (N_Operator_Symbol, Token_Ptr);\n-            Set_Chars (Token_Node, Token_Name);\n-            Set_Strval (Token_Node, String_Literal_Id);\n-\n-         when others =>\n-            null;\n-      end case;\n-   end Post_Scan;\n-\n    -----------------------\n    -- Check_End_Of_Line --\n    -----------------------\n@@ -345,6 +306,45 @@ package body Scn is\n       Check_Restriction (No_Obsolescent_Features, New_Node (N_Empty, S));\n    end Obsolescent_Check;\n \n+   ---------------\n+   -- Post_Scan --\n+   ---------------\n+\n+   procedure Post_Scan is\n+   begin\n+      case Token is\n+         when Tok_Char_Literal =>\n+            Token_Node := New_Node (N_Character_Literal, Token_Ptr);\n+            Set_Char_Literal_Value (Token_Node, UI_From_CC (Character_Code));\n+            Set_Chars (Token_Node, Token_Name);\n+\n+         when Tok_Identifier =>\n+            Token_Node := New_Node (N_Identifier, Token_Ptr);\n+            Set_Chars (Token_Node, Token_Name);\n+\n+         when Tok_Real_Literal =>\n+            Token_Node := New_Node (N_Real_Literal, Token_Ptr);\n+            Set_Realval (Token_Node, Real_Literal_Value);\n+\n+         when Tok_Integer_Literal =>\n+            Token_Node := New_Node (N_Integer_Literal, Token_Ptr);\n+            Set_Intval (Token_Node, Int_Literal_Value);\n+\n+         when Tok_String_Literal =>\n+            Token_Node := New_Node (N_String_Literal, Token_Ptr);\n+            Set_Has_Wide_Character (Token_Node, Wide_Character_Found);\n+            Set_Strval (Token_Node, String_Literal_Id);\n+\n+         when Tok_Operator_Symbol =>\n+            Token_Node := New_Node (N_Operator_Symbol, Token_Ptr);\n+            Set_Chars (Token_Node, Token_Name);\n+            Set_Strval (Token_Node, String_Literal_Id);\n+\n+         when others =>\n+            null;\n+      end case;\n+   end Post_Scan;\n+\n    ------------------------------\n    -- Scan_Reserved_Identifier --\n    ------------------------------"}, {"sha": "78d879819b9c9009a05ea031c9ab8e39016060bd", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -558,6 +558,8 @@ package body Sem_Case is\n          Raises_CE      : out Boolean;\n          Others_Present : out Boolean)\n       is\n+         pragma Assert (Choice_Table'First = 1);\n+\n          E : Entity_Id;\n \n          Enode : Node_Id;"}, {"sha": "66009c2c33d009c6c3db8f32ec90a4ba879ea5af", "filename": "gcc/ada/sem_case.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fsem_case.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fsem_case.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.ads?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,8 +93,8 @@ package Sem_Case is\n       --  Subtyp is the subtype of the discrete choices. The type against\n       --  which the discrete choices must be resolved is its base type.\n       --\n-      --  On entry Choice_Table must be big enough to contain all the\n-      --  discrete choices encountered.\n+      --  On entry Choice_Table must be big enough to contain all the discrete\n+      --  choices encountered. The lower bound of Choice_Table must be one.\n       --\n       --  On exit Choice_Table contains all the static and non empty discrete\n       --  choices in sorted order. Last_Choice gives the position of the last"}, {"sha": "b1062b757162d7fc523bb997d763d057c55296ce", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -652,8 +652,8 @@ package body Sinput.L is\n       --  We scan past junk to the first interesting compilation unit\n       --  token, to see if it is SEPARATE. We ignore WITH keywords during\n       --  this and also PRIVATE. The reason for ignoring PRIVATE is that\n-      --  it handles some error situations, and also it is possible that\n-      --  a PRIVATE WITH feature might be approved some time in the future.\n+      --  it handles some error situations, and also to handle PRIVATE WITH\n+      --  in Ada 2005 mode.\n \n       while Token = Tok_With\n         or else Token = Tok_Private"}, {"sha": "47189520a14791ef760c93c55df7d4949d07ffe3", "filename": "gcc/ada/sinput-p.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fsinput-p.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fsinput-p.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-p.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -89,8 +89,8 @@ package body Sinput.P is\n       --  We scan past junk to the first interesting compilation unit\n       --  token, to see if it is SEPARATE. We ignore WITH keywords during\n       --  this and also PRIVATE. The reason for ignoring PRIVATE is that\n-      --  it handles some error situations, and also it is possible that\n-      --  a PRIVATE WITH feature might be approved some time in the future.\n+      --  it handles some error situations, and also to handle PRIVATE WITH\n+      --  in Ada 2005 mode.\n \n       while Token = Tok_With\n         or else Token = Tok_Private"}, {"sha": "9de0654cf4480b1e7d331f03be1b31db25921c89", "filename": "gcc/ada/treeprs.adt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Ftreeprs.adt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Ftreeprs.adt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreeprs.adt?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                             T e m p l a t e                              --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,9 +47,9 @@ package Treeprs is\n    --  by the synonym name. The starting location for a given node type is\n    --  found from the corresponding entry in the Pchars_Pos_Array.\n \n-   --  The following characters identify the field. These are characters\n-   --  which  could never occur in a field name, so they also mark the\n-   --  end of the previous name.\n+   --  The following characters identify the field. These are characters which\n+   --  could never occur in a field name, so they also mark the end of the\n+   --  previous name.\n \n    subtype Fchar is Character range '#' .. '9';\n \n@@ -79,9 +79,9 @@ package Treeprs is\n \n    --  Note this table does not include entity field and flags whose access\n    --  functions are in Einfo (these are handled by the Print_Entity_Info\n-   --  procedure in Treepr, which uses the routines in Einfo to get the\n-   --  proper symbolic information). In addition, the following fields are\n-   --  handled by Treepr, and do not appear in the Pchars array:\n+   --  procedure in Treepr, which uses the routines in Einfo to get the proper\n+   --  symbolic information). In addition, the following fields are handled by\n+   --  Treepr, and do not appear in the Pchars array:\n \n    --    Analyzed\n    --    Cannot_Be_Constant"}, {"sha": "7c711abb9b3fe19997f9d03b8fa78439e0977b44", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -134,6 +134,7 @@ package body Uintp is\n    --  digit of Vec contains the sign, all other digits are always non-\n    --  negative. Note that the input may be directly represented, and in\n    --  this case Vec will contain the corresponding one or two digit value.\n+   --  The low bound of Vec is always 1.\n \n    function Least_Sig_Digit (Arg : Uint) return Int;\n    pragma Inline (Least_Sig_Digit);\n@@ -422,6 +423,8 @@ package body Uintp is\n    procedure Init_Operand (UI : Uint; Vec : out UI_Vector) is\n       Loc : Int;\n \n+      pragma Assert (Vec'First = Int'(1));\n+\n    begin\n       if Direct (UI) then\n          Vec (1) := Direct_Val (UI);\n@@ -590,18 +593,28 @@ package body Uintp is\n       Num  : Nat;\n \n    begin\n+      --  Largest negative number has to be handled specially, since it is in\n+      --  Int_Range, but we cannot take the absolute value.\n+\n       if Input = Uint_Int_First then\n          return Int'Size;\n \n+      --  For any other number in Int_Range, get absolute value of number\n+\n       elsif UI_Is_In_Int_Range (Input) then\n          Num := abs (UI_To_Int (Input));\n          Bits := 0;\n \n+      --  If not in Int_Range then initialize bit count for all low order\n+      --  words, and set number to high order digit.\n+\n       else\n          Bits := Base_Bits * (Uints.Table (Input).Length - 1);\n          Num  := abs (Udigits.Table (Uints.Table (Input).Loc));\n       end if;\n \n+      --  Increase bit count for remaining value in Num\n+\n       while Types.\">\" (Num, 0) loop\n          Num := Num / 2;\n          Bits := Bits + 1;"}, {"sha": "4897bf12dc67783975a17c24c2eaa8b3c0d0d5e9", "filename": "gcc/ada/urealp.adb", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Furealp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc8aa81e42ee0a2284061843b07e8035b91460a/gcc%2Fada%2Furealp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.adb?ref=bfc8aa81e42ee0a2284061843b07e8035b91460a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1431,14 +1431,14 @@ package body Urealp is\n       return UR_10_36;\n    end Ureal_10_36;\n \n-   -------------------\n-   -- Ureal_M_10_36 --\n-   -------------------\n+   ----------------\n+   -- Ureal_2_80 --\n+   ----------------\n \n-   function Ureal_M_10_36 return Ureal is\n+   function Ureal_2_80 return Ureal is\n    begin\n-      return UR_M_10_36;\n-   end Ureal_M_10_36;\n+      return UR_2_80;\n+   end Ureal_2_80;\n \n    -----------------\n    -- Ureal_2_128 --\n@@ -1449,14 +1449,14 @@ package body Urealp is\n       return UR_2_128;\n    end Ureal_2_128;\n \n-   ----------------\n-   -- Ureal_2_80 --\n-   ----------------\n+   -------------------\n+   -- Ureal_2_M_80 --\n+   -------------------\n \n-   function Ureal_2_80 return Ureal is\n+   function Ureal_2_M_80 return Ureal is\n    begin\n-      return UR_2_80;\n-   end Ureal_2_80;\n+      return UR_2_M_80;\n+   end Ureal_2_M_80;\n \n    -------------------\n    -- Ureal_2_M_128 --\n@@ -1467,15 +1467,6 @@ package body Urealp is\n       return UR_2_M_128;\n    end Ureal_2_M_128;\n \n-   -------------------\n-   -- Ureal_2_M_80 --\n-   -------------------\n-\n-   function Ureal_2_M_80 return Ureal is\n-   begin\n-      return UR_2_M_80;\n-   end Ureal_2_M_80;\n-\n    ----------------\n    -- Ureal_Half --\n    ----------------\n@@ -1494,6 +1485,15 @@ package body Urealp is\n       return UR_M_0;\n    end Ureal_M_0;\n \n+   -------------------\n+   -- Ureal_M_10_36 --\n+   -------------------\n+\n+   function Ureal_M_10_36 return Ureal is\n+   begin\n+      return UR_M_10_36;\n+   end Ureal_M_10_36;\n+\n    -----------------\n    -- Ureal_Tenth --\n    -----------------"}]}