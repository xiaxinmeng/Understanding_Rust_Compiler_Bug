{"sha": "6638efce562e68d702d859c124ed36c7a8c55556", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYzOGVmY2U1NjJlNjhkNzAyZDg1OWMxMjRlZDM2YzdhOGM1NTU1Ng==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2015-12-18T09:20:53Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-12-18T09:20:53Z"}, "message": "S/390: Deprecate g5 and g6 CPU levels\n\ngcc/ChangeLog:\n\n2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/driver-native.c (s390_host_detect_local_cpu): Pick\n\tz900 -march -mtune even on g5 and g6 machines.\n\t* config/s390/s390.c (s390_option_override_internal): New argument\n\tto distingiush between options and target attributes.  Emit\n\tdeprecation warning for g5 and g6 arch/tune options.\n\t(s390_option_override): Set new s390_option_override_internal\n\targument to true.\n\t(s390_valid_target_attribute_tree): Set new\n\ts390_option_override_internal argument to false.\n\t* config/s390/s390.h: Default to z900 in the driver.\n\t* doc/invoke.texi: Document the deprecation of g5 and g6.\n\ngcc/testsuite/ChangeLog:\n\n2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/hotpatch-8.c: Add -Wno-deprecated to options.\n\t* gcc.target/s390/hotpatch-9.c: Likewise.\n\nFrom-SVN: r231806", "tree": {"sha": "83b07c4418831dab27b81aa23d5dac08c175f73d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83b07c4418831dab27b81aa23d5dac08c175f73d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6638efce562e68d702d859c124ed36c7a8c55556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6638efce562e68d702d859c124ed36c7a8c55556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6638efce562e68d702d859c124ed36c7a8c55556", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6638efce562e68d702d859c124ed36c7a8c55556/comments", "author": null, "committer": null, "parents": [{"sha": "be33d404c0d777fa846787de66e7c4c8efb281a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be33d404c0d777fa846787de66e7c4c8efb281a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be33d404c0d777fa846787de66e7c4c8efb281a9"}], "stats": {"total": 83, "additions": 65, "deletions": 18}, "files": [{"sha": "48bc79d60de848da402fbab22d5142f585031276", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6638efce562e68d702d859c124ed36c7a8c55556", "patch": "@@ -1,3 +1,17 @@\n+2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/driver-native.c (s390_host_detect_local_cpu): Pick\n+\tz900 -march -mtune even on g5 and g6 machines.\n+\t* config/s390/s390.c (s390_option_override_internal): New argument\n+\tto distingiush between options and target attributes.  Emit\n+\tdeprecation warning for g5 and g6 arch/tune options.\n+\t(s390_option_override): Set new s390_option_override_internal\n+\targument to true.\n+\t(s390_valid_target_attribute_tree): Set new\n+\ts390_option_override_internal argument to false.\n+\t* config/s390/s390.h: Default to z900 in the driver.\n+\t* doc/invoke.texi: Document the deprecation of g5 and g6.\n+\n 2015-12-18  Andris Pavenis <andris.pavenis@iki.fi>\n \n \t* config/i386/djgpp-stdint.h: update typedefs for integer types"}, {"sha": "08ec85e8b4ee450b94aa7552fd1c5d0f599f26c2", "filename": "gcc/config/s390/driver-native.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fdriver-native.c?ref=6638efce562e68d702d859c124ed36c7a8c55556", "patch": "@@ -84,9 +84,8 @@ s390_host_detect_local_cpu (int argc, const char **argv)\n \t  machine_id = strtol (p, NULL, 16);\n \t  switch (machine_id)\n \t    {\n+\t      /* g5 and g6 default to z900 */\n \t    case 0x9672:\n-\t      cpu = \"g5\";\n-\t      break;\n \t    case 0x2064:\n \t    case 0x2066:\n \t      cpu = \"z900\";"}, {"sha": "2a42818ef7cb2e69abe47fb8849367f3e94254f1", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 36, "deletions": 5, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=6638efce562e68d702d859c124ed36c7a8c55556", "patch": "@@ -13569,9 +13569,27 @@ s390_function_specific_restore (struct gcc_options *opts,\n }\n \n static void\n-s390_option_override_internal (struct gcc_options *opts,\n+s390_option_override_internal (bool main_args_p,\n+\t\t\t       struct gcc_options *opts,\n \t\t\t       const struct gcc_options *opts_set)\n {\n+  const char *prefix;\n+  const char *suffix;\n+\n+  /* Set up prefix/suffix so the error messages refer to either the command\n+     line argument, or the attribute(target).  */\n+  if (main_args_p)\n+    {\n+      prefix = \"-m\";\n+      suffix = \"\";\n+    }\n+  else\n+    {\n+      prefix = \"option(\\\"\";\n+      suffix = \"\\\")\";\n+    }\n+\n+\n   /* Architecture mode defaults according to ABI.  */\n   if (!(opts_set->x_target_flags & MASK_ZARCH))\n     {\n@@ -13583,13 +13601,26 @@ s390_option_override_internal (struct gcc_options *opts,\n \n   /* Set the march default in case it hasn't been specified on cmdline.  */\n   if (!opts_set->x_s390_arch)\n-    opts->x_s390_arch = TARGET_ZARCH_P (opts->x_target_flags)\n-      ? PROCESSOR_2064_Z900 : PROCESSOR_9672_G5;\n+    opts->x_s390_arch = PROCESSOR_2064_Z900;\n+  else if (opts->x_s390_arch == PROCESSOR_9672_G5\n+\t   || opts->x_s390_arch == PROCESSOR_9672_G6)\n+    warning (OPT_Wdeprecated, \"%sarch=%s%s is deprecated and will be removed \"\n+\t     \"in future releases; use at least %sarch=z900%s\",\n+\t     prefix, opts->x_s390_arch == PROCESSOR_9672_G5 ? \"g5\" : \"g6\",\n+\t     suffix, prefix, suffix);\n+\n   opts->x_s390_arch_flags = processor_flags_table[(int) opts->x_s390_arch];\n \n   /* Determine processor to tune for.  */\n   if (!opts_set->x_s390_tune)\n     opts->x_s390_tune = opts->x_s390_arch;\n+  else if (opts->x_s390_tune == PROCESSOR_9672_G5\n+\t   || opts->x_s390_tune == PROCESSOR_9672_G6)\n+    warning (OPT_Wdeprecated, \"%stune=%s%s is deprecated and will be removed \"\n+\t     \"in future releases; use at least %stune=z900%s\",\n+\t     prefix, opts->x_s390_tune == PROCESSOR_9672_G5 ? \"g5\" : \"g6\",\n+\t     suffix, prefix, suffix);\n+\n   opts->x_s390_tune_flags = processor_flags_table[opts->x_s390_tune];\n \n   /* Sanity checks.  */\n@@ -13800,7 +13831,7 @@ s390_option_override (void)\n   /* Set up function hooks.  */\n   init_machine_status = s390_init_machine_status;\n \n-  s390_option_override_internal (&global_options, &global_options_set);\n+  s390_option_override_internal (true, &global_options, &global_options_set);\n \n   /* Save the initial options in case the user does function specific\n      options.  */\n@@ -14102,7 +14133,7 @@ s390_valid_target_attribute_tree (tree args,\n \tdest[i] |= src[i];\n \n       /* Do any overrides, such as arch=xxx, or tune=xxx support.  */\n-      s390_option_override_internal (opts, &new_opts_set);\n+      s390_option_override_internal (false, opts, &new_opts_set);\n       /* Save the current options unless we are validating options for\n \t #pragma.  */\n       t = build_target_option_node (opts);"}, {"sha": "603e6384f6fc7c3f515bf31f2091422ba43eee9d", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=6638efce562e68d702d859c124ed36c7a8c55556", "patch": "@@ -214,7 +214,7 @@ extern const char *s390_host_detect_local_cpu (int argc, const char **argv);\n   MARCH_MTUNE_NATIVE_SPECS,\t\t\t\t\t\\\n   \"%{!m31:%{!m64:-m\" S390_TARGET_BITS_STRING \"}}\",\t\t\\\n   \"%{!mesa:%{!mzarch:%{m31:-mesa}%{m64:-mzarch}}}\",\t\t\\\n-  \"%{!march=*:%{mesa:-march=g5}%{mzarch:-march=z900}}\"\n+  \"%{!march=*:-march=z900}\"\n \n /* Constants needed to control the TEST DATA CLASS (TDC) instruction.  */\n #define S390_TDC_POSITIVE_ZERO                     (1 << 11)"}, {"sha": "cad32c679b730b1c4757700df1c6645886a49935", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6638efce562e68d702d859c124ed36c7a8c55556", "patch": "@@ -20892,14 +20892,12 @@ The default is to not print debug information.\n \n @item -march=@var{cpu-type}\n @opindex march\n-Generate code that runs on @var{cpu-type}, which is the name of a system\n-representing a certain processor type.  Possible values for\n-@var{cpu-type} are @samp{g5}, @samp{g6}, @samp{z900}, @samp{z990},\n-@samp{z9-109}, @samp{z9-ec}, @samp{z10},  @samp{z196}, @samp{zEC12},\n-and @samp{z13}.\n-When generating code using the instructions available on z/Architecture,\n-the default is @option{-march=z900}.  Otherwise, the default is\n-@option{-march=g5}.\n+Generate code that runs on @var{cpu-type}, which is the name of a\n+system representing a certain processor type.  Possible values for\n+@var{cpu-type} are @samp{z900}, @samp{z990}, @samp{z9-109},\n+@samp{z9-ec}, @samp{z10}, @samp{z196}, @samp{zEC12}, and @samp{z13}.\n+The default is @option{-march=z900}.  @samp{g5} and @samp{g6} are\n+deprecated and will be removed with future releases.\n \n @item -mtune=@var{cpu-type}\n @opindex mtune"}, {"sha": "319cec6f471f08a2323b4957e7978ec2eefca974", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6638efce562e68d702d859c124ed36c7a8c55556", "patch": "@@ -1,3 +1,8 @@\n+2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/hotpatch-8.c: Add -Wno-deprecated to options.\n+\t* gcc.target/s390/hotpatch-9.c: Likewise.\n+\n 2015-12-18  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/68831"}, {"sha": "c5b71a509b521400b513430389bb5c79507690bb", "filename": "gcc/testsuite/gcc.target/s390/hotpatch-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhotpatch-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhotpatch-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhotpatch-8.c?ref=6638efce562e68d702d859c124ed36c7a8c55556", "patch": "@@ -1,7 +1,7 @@\n /* Functional tests for the function hotpatching feature.  */\n \n /* { dg-do compile { target { ! lp64 } } } */\n-/* { dg-options \"-mesa -march=g5 -mhotpatch=0,3\" } */\n+/* { dg-options \"-mesa -march=g5 -Wno-deprecated -mhotpatch=0,3\" } */\n \n #include <stdio.h>\n "}, {"sha": "9ccc8fd66fe2979283a81264ba80b1d2a9ff30f0", "filename": "gcc/testsuite/gcc.target/s390/hotpatch-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhotpatch-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6638efce562e68d702d859c124ed36c7a8c55556/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhotpatch-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhotpatch-9.c?ref=6638efce562e68d702d859c124ed36c7a8c55556", "patch": "@@ -1,7 +1,7 @@\n /* Functional tests for the function hotpatching feature.  */\n \n /* { dg-do compile { target { ! lp64 } } } */\n-/* { dg-options \"-mesa -march=g5 -mhotpatch=0,4\" } */\n+/* { dg-options \"-mesa -march=g5 -Wno-deprecated -mhotpatch=0,4\" } */\n \n #include <stdio.h>\n "}]}