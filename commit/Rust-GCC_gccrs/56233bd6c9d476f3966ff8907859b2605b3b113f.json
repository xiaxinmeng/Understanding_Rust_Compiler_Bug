{"sha": "56233bd6c9d476f3966ff8907859b2605b3b113f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYyMzNiZDZjOWQ0NzZmMzk2NmZmODkwNzg1OWIyNjA1YjNiMTEzZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-01-15T15:57:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-01-15T15:57:07Z"}, "message": "re PR c++/69257 (g++ ICE in \"create_tmp_var\" on invalid inline-asm)\n\n\tPR c++/69257\n\t* typeck.c (decay_conversion): Don't call mark_rvalue_use for\n\tarray/function-to-pointer conversion.  Call\n\tcomplete_type_or_maybe_complain for lvalue-to-rvalue conversion.\n\t* call.c (convert_like_real): Print call context if\n\tdecay_conversion errors.\n\nFrom-SVN: r232436", "tree": {"sha": "543ffffb7f6280a18f0647e018222f3e7cf36bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/543ffffb7f6280a18f0647e018222f3e7cf36bd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56233bd6c9d476f3966ff8907859b2605b3b113f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56233bd6c9d476f3966ff8907859b2605b3b113f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56233bd6c9d476f3966ff8907859b2605b3b113f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56233bd6c9d476f3966ff8907859b2605b3b113f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78810bd35336529a133661a5e4f801ccda57fd74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78810bd35336529a133661a5e4f801ccda57fd74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78810bd35336529a133661a5e4f801ccda57fd74"}], "stats": {"total": 52, "additions": 43, "deletions": 9}, "files": [{"sha": "028088400fcdfe0ae02661f8102aadb37f451041", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56233bd6c9d476f3966ff8907859b2605b3b113f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56233bd6c9d476f3966ff8907859b2605b3b113f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=56233bd6c9d476f3966ff8907859b2605b3b113f", "patch": "@@ -1,3 +1,12 @@\n+2016-01-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/69257\n+\t* typeck.c (decay_conversion): Don't call mark_rvalue_use for\n+\tarray/function-to-pointer conversion.  Call\n+\tcomplete_type_or_maybe_complain for lvalue-to-rvalue conversion.\n+\t* call.c (convert_like_real): Print call context if\n+\tdecay_conversion errors.\n+\n 2016-01-14  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/68773"}, {"sha": "c05170a055749f467d2d480d241a9711bd5c9232", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56233bd6c9d476f3966ff8907859b2605b3b113f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56233bd6c9d476f3966ff8907859b2605b3b113f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=56233bd6c9d476f3966ff8907859b2605b3b113f", "patch": "@@ -6542,7 +6542,16 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n     case ck_rvalue:\n       expr = decay_conversion (expr, complain);\n       if (expr == error_mark_node)\n-\treturn error_mark_node;\n+\t{\n+\t  if (complain)\n+\t    {\n+\t      maybe_print_user_conv_context (convs);\n+\t      if (fn)\n+\t\tinform (DECL_SOURCE_LOCATION (fn),\n+\t\t\t\"  initializing argument %P of %qD\", argnum, fn);\n+\t    }\n+\t  return error_mark_node;\n+\t}\n \n       if (! MAYBE_CLASS_TYPE_P (totype))\n \treturn expr;"}, {"sha": "0503c6f0c738e027d86cc1e7a240ab549a8320d7", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56233bd6c9d476f3966ff8907859b2605b3b113f/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56233bd6c9d476f3966ff8907859b2605b3b113f/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=56233bd6c9d476f3966ff8907859b2605b3b113f", "patch": "@@ -1909,11 +1909,10 @@ unlowered_expr_type (const_tree exp)\n \n /* Perform the conversions in [expr] that apply when an lvalue appears\n    in an rvalue context: the lvalue-to-rvalue, array-to-pointer, and\n-   function-to-pointer conversions.  In addition, manifest constants\n-   are replaced by their values, and bitfield references are converted\n-   to their declared types. Note that this function does not perform the\n-   lvalue-to-rvalue conversion for class types. If you need that conversion\n-   to for class types, then you probably need to use force_rvalue.\n+   function-to-pointer conversions.  In addition, bitfield references are\n+   converted to their declared types. Note that this function does not perform\n+   the lvalue-to-rvalue conversion for class types. If you need that conversion\n+   for class types, then you probably need to use force_rvalue.\n \n    Although the returned value is being used as an rvalue, this\n    function does not wrap the returned expression in a\n@@ -1933,8 +1932,6 @@ decay_conversion (tree exp,\n   if (type == error_mark_node)\n     return error_mark_node;\n \n-  exp = mark_rvalue_use (exp, loc, reject_builtin);\n-\n   exp = resolve_nondeduced_context (exp);\n   if (type_unknown_p (exp))\n     {\n@@ -1962,12 +1959,19 @@ decay_conversion (tree exp,\n   if (invalid_nonstatic_memfn_p (loc, exp, complain))\n     return error_mark_node;\n   if (code == FUNCTION_TYPE || is_overloaded_fn (exp))\n-    return cp_build_addr_expr (exp, complain);\n+    {\n+      exp = mark_lvalue_use (exp);\n+      if (reject_builtin && reject_gcc_builtin (exp, loc))\n+\treturn error_mark_node;\n+      return cp_build_addr_expr (exp, complain);\n+    }\n   if (code == ARRAY_TYPE)\n     {\n       tree adr;\n       tree ptrtype;\n \n+      exp = mark_lvalue_use (exp);\n+\n       if (INDIRECT_REF_P (exp))\n \treturn build_nop (build_pointer_type (TREE_TYPE (type)),\n \t\t\t  TREE_OPERAND (exp, 0));\n@@ -2013,6 +2017,9 @@ decay_conversion (tree exp,\n       return cp_convert (ptrtype, adr, complain);\n     }\n \n+  /* Otherwise, it's the lvalue-to-rvalue conversion.  */\n+  exp = mark_rvalue_use (exp, loc, reject_builtin);\n+\n   /* If a bitfield is used in a context where integral promotion\n      applies, then the caller is expected to have used\n      default_conversion.  That function promotes bitfields correctly\n@@ -2032,6 +2039,9 @@ decay_conversion (tree exp,\n   if (!CLASS_TYPE_P (type) && cv_qualified_p (type))\n     exp = build_nop (cv_unqualified (type), exp);\n \n+  if (!complete_type_or_maybe_complain (type, exp, complain))\n+    return error_mark_node;\n+\n   return exp;\n }\n "}, {"sha": "eece05e0fb3558ca00ae7010254c781d04edc76a", "filename": "gcc/testsuite/g++.dg/ext/asm13.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56233bd6c9d476f3966ff8907859b2605b3b113f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56233bd6c9d476f3966ff8907859b2605b3b113f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm13.C?ref=56233bd6c9d476f3966ff8907859b2605b3b113f", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/69257\n+\n+int fn1() {\n+  struct S *x;\n+  __asm ( \"\": :\"\" (*x));\t// { dg-error \"incomplete\" }\n+}"}]}