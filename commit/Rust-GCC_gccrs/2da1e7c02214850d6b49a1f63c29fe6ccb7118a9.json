{"sha": "2da1e7c02214850d6b49a1f63c29fe6ccb7118a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRhMWU3YzAyMjE0ODUwZDZiNDlhMWY2M2MyOWZlNmNjYjcxMThhOQ==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2014-09-03T09:04:46Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2014-09-03T09:04:46Z"}, "message": "[NDS32] We need to make sure it is NOT a variadic function so that some v3push/v3pop preparation can be applied.\n\n  -- The rationale of such avoidance is that the 'pop25' instruction also\n     contains return behavior and we have no chance to further adjust stack\n     pointer before returning to caller, which is very important to\n     variadic function.\n  -- So we do not setup v3push/v3pop (push25/pop25) information for a\n     variadic function.  It will use normal stack push/pop instead.\n\n\t* config/nds32/nds32.c (nds32_compute_stack_frame): Do not use\n\tv3push/v3pop for variadic function.\n\t* config/nds32/nds32.md (prologue, epilogue): Likewise.\n\nFrom-SVN: r214857", "tree": {"sha": "bc60ff7ca0482a432a6147cfc074d8038b2a1e98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc60ff7ca0482a432a6147cfc074d8038b2a1e98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f3d3f9c7c6db3468b8d0269bbca946df2c48d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3d3f9c7c6db3468b8d0269bbca946df2c48d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f3d3f9c7c6db3468b8d0269bbca946df2c48d5f"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "7d871025608d7385b1b3c71c1b55d8eae1cc9e30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2da1e7c02214850d6b49a1f63c29fe6ccb7118a9", "patch": "@@ -1,3 +1,9 @@\n+2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.c (nds32_compute_stack_frame): Do not use\n+\tv3push/v3pop for variadic function.\n+\t* config/nds32/nds32.md (prologue, epilogue): Likewise.\n+\n 2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32-md-auxiliary.c (nds32_output_stack_push):"}, {"sha": "f54d700f0856ae90724d8ae66f612526d271bacc", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=2da1e7c02214850d6b49a1f63c29fe6ccb7118a9", "patch": "@@ -215,7 +215,8 @@ nds32_compute_stack_frame (void)\n                     which means we do not have to save\n                     any callee-saved registers.\n        condition 2: Both $lp and $fp are NOT live in this function,\n-                    which means we do not need to save them.\n+                    which means we do not need to save them and there\n+                    is no outgoing size.\n        condition 3: There is no local_size, which means\n                     we do not need to adjust $sp.  */\n   if (lookup_attribute (\"naked\", DECL_ATTRIBUTES (current_function_decl))\n@@ -225,8 +226,11 @@ nds32_compute_stack_frame (void)\n \t  && !df_regs_ever_live_p (LP_REGNUM)\n \t  && cfun->machine->local_size == 0))\n     {\n-      /* Set this function 'naked_p' and\n-         other functions can check this flag.  */\n+      /* Set this function 'naked_p' and other functions can check this flag.\n+         Note that in nds32 port, the 'naked_p = 1' JUST means there is no\n+         callee-saved, local size, and outgoing size.\n+         The varargs space and ret instruction may still present in\n+         the prologue/epilogue expanding.  */\n       cfun->machine->naked_p = 1;\n \n       /* No need to save $fp, $gp, and $lp.\n@@ -250,8 +254,11 @@ nds32_compute_stack_frame (void)\n      we need to make sure Rb is $r6 and Re is\n      located on $r6, $r8, $r10, or $r14.\n      Some results above will be discarded and recomputed.\n-     Note that it is only available under V3/V3M ISA.  */\n-  if (TARGET_V3PUSH)\n+     Note that it is only available under V3/V3M ISA and we\n+     DO NOT setup following stuff for isr or variadic function.  */\n+  if (TARGET_V3PUSH\n+      && !nds32_isr_function_p (current_function_decl)\n+      && (cfun->machine->va_args_size == 0))\n     {\n       /* Recompute:\n            cfun->machine->fp_size"}, {"sha": "18d6d1b52ef72d7628d7e3d9f8396dcfc98617bb", "filename": "gcc/config/nds32/nds32.md", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9/gcc%2Fconfig%2Fnds32%2Fnds32.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da1e7c02214850d6b49a1f63c29fe6ccb7118a9/gcc%2Fconfig%2Fnds32%2Fnds32.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.md?ref=2da1e7c02214850d6b49a1f63c29fe6ccb7118a9", "patch": "@@ -1971,8 +1971,12 @@ create_template:\n (define_expand \"prologue\" [(const_int 0)]\n   \"\"\n {\n-  /* Note that only under V3/V3M ISA, we could use v3push prologue.  */\n-  if (TARGET_V3PUSH)\n+  /* Note that only under V3/V3M ISA, we could use v3push prologue.\n+     In addition, we do not want to use v3push for isr function\n+     and variadic function.  */\n+  if (TARGET_V3PUSH\n+      && !nds32_isr_function_p (current_function_decl)\n+      && (cfun->machine->va_args_size == 0))\n     nds32_expand_prologue_v3push ();\n   else\n     nds32_expand_prologue ();\n@@ -1982,8 +1986,12 @@ create_template:\n (define_expand \"epilogue\" [(const_int 0)]\n   \"\"\n {\n-  /* Note that only under V3/V3M ISA, we could use v3pop epilogue.  */\n-  if (TARGET_V3PUSH)\n+  /* Note that only under V3/V3M ISA, we could use v3pop epilogue.\n+     In addition, we do not want to use v3pop for isr function\n+     and variadic function.  */\n+  if (TARGET_V3PUSH\n+      && !nds32_isr_function_p (current_function_decl)\n+      && (cfun->machine->va_args_size == 0))\n     nds32_expand_epilogue_v3pop ();\n   else\n     nds32_expand_epilogue ();"}]}