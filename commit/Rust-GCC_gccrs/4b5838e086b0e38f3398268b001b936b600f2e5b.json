{"sha": "4b5838e086b0e38f3398268b001b936b600f2e5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI1ODM4ZTA4NmIwZTM4ZjMzOTgyNjhiMDAxYjkzNmI2MDBmMmU1Yg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-05-18T09:25:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-08T14:55:52Z"}, "message": "[Ada] Update entities on class-wide condition function creation\n\ngcc/ada/\n\n\t* sem_util.adb (Build_Class_Wide_Clone_Body): Update entities to\n\trefer to the right spec.", "tree": {"sha": "10245198f5dd443eafea08ac6876270e22038da9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10245198f5dd443eafea08ac6876270e22038da9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b5838e086b0e38f3398268b001b936b600f2e5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5838e086b0e38f3398268b001b936b600f2e5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b5838e086b0e38f3398268b001b936b600f2e5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5838e086b0e38f3398268b001b936b600f2e5b/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6091c2e0fa1836c6607562d273a529db5535c3d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6091c2e0fa1836c6607562d273a529db5535c3d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6091c2e0fa1836c6607562d273a529db5535c3d8"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "89b6452856f28880ca1fb34b84df529532dca200", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b5838e086b0e38f3398268b001b936b600f2e5b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b5838e086b0e38f3398268b001b936b600f2e5b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4b5838e086b0e38f3398268b001b936b600f2e5b", "patch": "@@ -1510,17 +1510,38 @@ package body Sem_Util is\n       Loc        : constant Source_Ptr := Sloc (Bod);\n       Clone_Id   : constant Entity_Id  := Class_Wide_Clone (Spec_Id);\n       Clone_Body : Node_Id;\n+      Assoc_List : constant Elist_Id := New_Elmt_List;\n \n    begin\n       --  The declaration of the class-wide clone was created when the\n       --  corresponding class-wide condition was analyzed.\n \n+      --  The body of the original condition may contain references to\n+      --  the formals of Spec_Id. In the body of the classwide clone,\n+      --  these must be replaced with the corresponding formals of\n+      --  the clone.\n+\n+      declare\n+         Spec_Formal_Id  : Entity_Id := First_Formal (Spec_Id);\n+         Clone_Formal_Id : Entity_Id := First_Formal (Clone_Id);\n+      begin\n+         while Present (Spec_Formal_Id) loop\n+            Append_Elmt (Spec_Formal_Id,  Assoc_List);\n+            Append_Elmt (Clone_Formal_Id, Assoc_List);\n+\n+            Next_Formal (Spec_Formal_Id);\n+            Next_Formal (Clone_Formal_Id);\n+         end loop;\n+      end;\n+\n       Clone_Body :=\n         Make_Subprogram_Body (Loc,\n           Specification              =>\n             Copy_Subprogram_Spec (Parent (Clone_Id)),\n           Declarations               => Declarations (Bod),\n-          Handled_Statement_Sequence => Handled_Statement_Sequence (Bod));\n+          Handled_Statement_Sequence =>\n+            New_Copy_Tree (Handled_Statement_Sequence (Bod),\n+              Map => Assoc_List));\n \n       --  The new operation is internal and overriding indicators do not apply\n       --  (the original primitive may have carried one)."}]}