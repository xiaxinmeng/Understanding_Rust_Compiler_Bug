{"sha": "8d9d65619c4ed9bad4171a6cbc6919e074825760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ5ZDY1NjE5YzRlZDliYWQ0MTcxYTZjYmM2OTE5ZTA3NDgyNTc2MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-05-07T11:42:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-05-07T11:42:21Z"}, "message": "tree-ssa-dom.c (tree_ssa_dominator_optimize): Reset cfg_altered.\n\n\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Reset cfg_altered.\n\tFree dominance info before purging EH edges as well as after.\n\t(eliminate_degenerate_phis): Likewise.\n\t(propagate_rhs_into_lhs): Set cfg_altered to true instead of 1.\n\nFrom-SVN: r124498", "tree": {"sha": "6875876f67a8868c139f99ccb0d56a375a8baec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6875876f67a8868c139f99ccb0d56a375a8baec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d9d65619c4ed9bad4171a6cbc6919e074825760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d9d65619c4ed9bad4171a6cbc6919e074825760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d9d65619c4ed9bad4171a6cbc6919e074825760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d9d65619c4ed9bad4171a6cbc6919e074825760/comments", "author": null, "committer": null, "parents": [{"sha": "2cb7995f0758c4863805c4f8320d918373ef0bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cb7995f0758c4863805c4f8320d918373ef0bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cb7995f0758c4863805c4f8320d918373ef0bb8"}], "stats": {"total": 77, "additions": 68, "deletions": 9}, "files": [{"sha": "b4284addced88b3459609d3694aa757a2d8ecf4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d9d65619c4ed9bad4171a6cbc6919e074825760", "patch": "@@ -1,3 +1,10 @@\n+2007-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Reset cfg_altered.\n+\tFree dominance info before purging EH edges as well as after.\n+\t(eliminate_degenerate_phis): Likewise.\n+\t(propagate_rhs_into_lhs): Set cfg_altered to true instead of 1.\n+\n 2007-05-07  Jan Hubicka  <jh@suse.cz>\n \n \t* gimplify.c (gimplify_expr): Do not crash when folding"}, {"sha": "64e12738d2d9bcf7ba8f6849c354c00d27ac2291", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d9d65619c4ed9bad4171a6cbc6919e074825760", "patch": "@@ -1,3 +1,7 @@\n+2007-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt1.ad[sb]: New testcase.\n+\n 2007-05-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/31399"}, {"sha": "69bb8136d04b5fa8826a492800ec4f27851acde2", "filename": "gcc/testsuite/gnat.dg/opt1.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2Ftestsuite%2Fgnat.dg%2Fopt1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2Ftestsuite%2Fgnat.dg%2Fopt1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt1.adb?ref=8d9d65619c4ed9bad4171a6cbc6919e074825760", "patch": "@@ -0,0 +1,29 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatws\" }\n+\n+package body Opt1 is\n+\n+   function De_Linear_Index\n+     (Index       : Natural;\n+      D           : Natural;\n+      Ind_Lengths : Dimention_Length)\n+      return        Dimension_Indexes\n+   is\n+      Len     : Natural := 1;\n+      Tmp_Ind : Natural := Index;\n+      Tmp_Res : Natural;\n+      Result  : Dimension_Indexes (1 .. D);\n+   begin\n+      for J in 1 .. D loop\n+         Len := Len * Ind_Lengths (J);\n+      end loop;\n+\n+      for J in Result'Range loop\n+         Result (J) := Tmp_Res;\n+         Tmp_Ind := Tmp_Ind - Len * (Result (J) - 1);\n+      end loop;\n+\n+      return Result;\n+   end;\n+\n+end Opt1;"}, {"sha": "247e7dc639c3fbeb33ccbfeb6981050904a355f1", "filename": "gcc/testsuite/gnat.dg/opt1.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2Ftestsuite%2Fgnat.dg%2Fopt1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2Ftestsuite%2Fgnat.dg%2Fopt1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt1.ads?ref=8d9d65619c4ed9bad4171a6cbc6919e074825760", "patch": "@@ -0,0 +1,13 @@\n+package Opt1 is\n+\n+   type Dimention_Length is array (1 .. 16) of Natural;\n+\n+   type Dimension_Indexes is array (Positive range <>) of Positive;\n+\n+   function De_Linear_Index\n+     (Index       : Natural;\n+      D           : Natural;\n+      Ind_Lengths : Dimention_Length)\n+      return Dimension_Indexes;\n+\n+end Opt1;"}, {"sha": "d76c2a34f8ab9058cc2e532e55f8480a3a808e81", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9d65619c4ed9bad4171a6cbc6919e074825760/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=8d9d65619c4ed9bad4171a6cbc6919e074825760", "patch": "@@ -275,6 +275,7 @@ tree_ssa_dominator_optimize (void)\n   init_walk_dominator_tree (&walk_data);\n \n   calculate_dominance_info (CDI_DOMINATORS);\n+  cfg_altered = false;\n \n   /* We need to know which edges exit loops so that we can\n      aggressively thread through loop headers to an exit\n@@ -320,17 +321,18 @@ tree_ssa_dominator_optimize (void)\n   /* Thread jumps, creating duplicate blocks as needed.  */\n   cfg_altered |= thread_through_all_blocks ();\n \n+  if (cfg_altered)\n+    free_dominance_info (CDI_DOMINATORS);\n+\n   /* Removal of statements may make some EH edges dead.  Purge\n      such edges from the CFG as needed.  */\n   if (!bitmap_empty_p (need_eh_cleanup))\n     {\n-      cfg_altered |= tree_purge_all_dead_eh_edges (need_eh_cleanup);\n+      if (tree_purge_all_dead_eh_edges (need_eh_cleanup))\n+\tfree_dominance_info (CDI_DOMINATORS);\n       bitmap_zero (need_eh_cleanup);\n     }\n \n-  if (cfg_altered)\n-    free_dominance_info (CDI_DOMINATORS);\n-\n   /* Finally, remove everything except invariants in SSA_NAME_VALUE.\n \n      Long term we will be able to let everything in SSA_NAME_VALUE\n@@ -2336,7 +2338,7 @@ propagate_rhs_into_lhs (tree stmt, tree lhs, tree rhs, bitmap interesting_names)\n \n \t\t\t  te->count += e->count;\n \t\t\t  remove_edge (e);\n-\t\t\t  cfg_altered = 1;\n+\t\t\t  cfg_altered = true;\n \t\t\t}\n \t\t      else\n \t\t\tei_next (&ei);\n@@ -2485,6 +2487,9 @@ eliminate_degenerate_phis (void)\n   interesting_names = BITMAP_ALLOC (NULL);\n   interesting_names1 = BITMAP_ALLOC (NULL);\n \n+  calculate_dominance_info (CDI_DOMINATORS);\n+  cfg_altered = false;\n+\n   /* First phase.  Eliminate degenerate PHIs via a dominator\n      walk of the CFG.\n \n@@ -2493,7 +2498,6 @@ eliminate_degenerate_phis (void)\n      phase in dominator order.  Presumably this is because walking\n      in dominator order leaves fewer PHIs for later examination\n      by the worklist phase.  */\n-  calculate_dominance_info (CDI_DOMINATORS);\n   eliminate_degenerate_phis_1 (ENTRY_BLOCK_PTR, interesting_names);\n \n   /* Second phase.  Eliminate second order degenerate PHIs as well\n@@ -2522,18 +2526,20 @@ eliminate_degenerate_phis (void)\n \t}\n     }\n \n+  if (cfg_altered)\n+    free_dominance_info (CDI_DOMINATORS);\n+\n   /* Propagation of const and copies may make some EH edges dead.  Purge\n      such edges from the CFG as needed.  */\n   if (!bitmap_empty_p (need_eh_cleanup))\n     {\n-      cfg_altered |= tree_purge_all_dead_eh_edges (need_eh_cleanup);\n+      if (tree_purge_all_dead_eh_edges (need_eh_cleanup))\n+\tfree_dominance_info (CDI_DOMINATORS);\n       BITMAP_FREE (need_eh_cleanup);\n     }\n \n   BITMAP_FREE (interesting_names);\n   BITMAP_FREE (interesting_names1);\n-  if (cfg_altered)\n-    free_dominance_info (CDI_DOMINATORS);\n   return 0;\n }\n "}]}