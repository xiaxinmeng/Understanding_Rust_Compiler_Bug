{"sha": "eb33bf0a0a4914eb2a88614cf4041069843018d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIzM2JmMGEwYTQ5MTRlYjJhODg2MTRjZjQwNDEwNjk4NDMwMThkNg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-12-28T03:43:56Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-12-28T03:43:56Z"}, "message": "[libbacktrace] Reduce memory usage in build_address_map\n\nIn build_address_map we allocate a unit, and then look for addresses in the\nunit, which we store in the addrs vector, with the elements pointing to the\nunit.  However, if we cannot find addresses in the unit, the allocated unit is\nnot used.\n\nFix this by detecting if the allocated unit has been used, and reusing it\notherwise.\n\nBootstrapped and reg-tested on x86_64.\n\n2018-12-28  Tom de Vries  <tdevries@suse.de>\n\n\t* dwarf.c (build_address_map): Reuse unused units.\n\nFrom-SVN: r267445", "tree": {"sha": "eed07881def123f46b43c853f4f33d03c6a06f79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eed07881def123f46b43c853f4f33d03c6a06f79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb33bf0a0a4914eb2a88614cf4041069843018d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb33bf0a0a4914eb2a88614cf4041069843018d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb33bf0a0a4914eb2a88614cf4041069843018d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb33bf0a0a4914eb2a88614cf4041069843018d6/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9aa0961ea1b37aa2159761b147e9668422925ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9aa0961ea1b37aa2159761b147e9668422925ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9aa0961ea1b37aa2159761b147e9668422925ba"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "c8ddf43c71f61cf7237bf30043e782b59a143c07", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb33bf0a0a4914eb2a88614cf4041069843018d6/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb33bf0a0a4914eb2a88614cf4041069843018d6/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=eb33bf0a0a4914eb2a88614cf4041069843018d6", "patch": "@@ -1,3 +1,7 @@\n+2018-12-28  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf.c (build_address_map): Reuse unused units.\n+\n 2018-12-28  Tom de Vries  <tdevries@suse.de>\n \n \t* dwarf.c (build_address_map): Simplify by removing local variable"}, {"sha": "733da19ebf340dda410d9b9eff9b4ef3a0f9cf3c", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb33bf0a0a4914eb2a88614cf4041069843018d6/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb33bf0a0a4914eb2a88614cf4041069843018d6/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=eb33bf0a0a4914eb2a88614cf4041069843018d6", "patch": "@@ -1436,9 +1436,11 @@ build_address_map (struct backtrace_state *state, uintptr_t base_address,\n   size_t units_count;\n   size_t i;\n   struct unit **pu;\n+  size_t prev_addrs_count;\n \n   memset (&addrs->vec, 0, sizeof addrs->vec);\n   addrs->count = 0;\n+  prev_addrs_count = 0;\n \n   /* Read through the .debug_info section.  FIXME: Should we use the\n      .debug_aranges section?  gdb and addr2line don't use it, but I'm\n@@ -1534,6 +1536,18 @@ build_address_map (struct backtrace_state *state, uintptr_t base_address,\n \n       if (unit_buf.reported_underflow)\n \tgoto fail;\n+\n+      if (addrs->count > prev_addrs_count)\n+\tprev_addrs_count = addrs->count;\n+      else\n+\t{\n+\t  /* Unit was not used; remove it from the vector.  */\n+\t  --units_count;\n+\t  units.size -= sizeof (u);\n+\t  units.alc += sizeof (u);\n+\t  free_abbrevs (state, &u->abbrevs, error_callback, data);\n+\t  backtrace_free (state, u, sizeof *u, error_callback, data);\n+\t}\n     }\n   if (info.reported_underflow)\n     goto fail;"}]}