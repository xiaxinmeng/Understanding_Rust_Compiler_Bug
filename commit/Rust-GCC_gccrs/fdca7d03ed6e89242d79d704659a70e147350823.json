{"sha": "fdca7d03ed6e89242d79d704659a70e147350823", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRjYTdkMDNlZDZlODkyNDJkNzlkNzA0NjU5YTcwZTE0NzM1MDgyMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-04-29T18:20:58Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-04-29T18:20:58Z"}, "message": "re PR target/57098 (ICE: in extract_insn, at recog.c:2154 (unrecognizable insn) with -mcmodel=large -msse4 and __builtin_shuffle())\n\n\tPR target/57098\n\t* config/i386/i386.c (ix86_expand_vec_perm): Validize constant memory.\n\ntestsuite/ChangeLog:\n\n\tPR target/57098\n\t* gcc.target/i386/pr57098.c: New test.\n\nFrom-SVN: r198430", "tree": {"sha": "fea6a5eeb32c4663237d9b530b7f639d486ceece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fea6a5eeb32c4663237d9b530b7f639d486ceece"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdca7d03ed6e89242d79d704659a70e147350823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdca7d03ed6e89242d79d704659a70e147350823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdca7d03ed6e89242d79d704659a70e147350823", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdca7d03ed6e89242d79d704659a70e147350823/comments", "author": null, "committer": null, "parents": [{"sha": "69acfe77c17da0e231c141b30e0d3aa248706552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69acfe77c17da0e231c141b30e0d3aa248706552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69acfe77c17da0e231c141b30e0d3aa248706552"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "c097c8064b22b14a49fe56756a50d2ca60c4b281", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdca7d03ed6e89242d79d704659a70e147350823/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdca7d03ed6e89242d79d704659a70e147350823/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdca7d03ed6e89242d79d704659a70e147350823", "patch": "@@ -1,3 +1,8 @@\n+2013-04-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/57098\n+\t* config/i386/i386.c (ix86_expand_vec_perm): Validize constant memory.\n+\n 2013-04-29  Ian Bolton  <ian.bolton@arm.com>\n \n \t* config/aarch64/aarch64.md (movsi_aarch64): Support LDR/STR\n@@ -32,8 +37,7 @@\n \t* lto-streamer-in.c (input_cfg): Ditto.\n \t* lto-cgraph.c (merge_profile_summaries): Ditto.\n \t* tree-optimize.c (execute_fixup_cfg): Ditto.\n-\t* tree-inline.c (copy_bb): Update comment to use\n-\tapply_scale.\n+\t* tree-inline.c (copy_bb): Update comment to use apply_scale.\n \t(copy_edges_for_bb): Ditto.\n \t(copy_cfg_body): Ditto.\n \n@@ -63,9 +67,8 @@\n 2013-04-29  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/57089\n-\t* omp-low.c (expand_omp_taskreg): If the parent function had\n-\ta broken loop tree make sure to schedule a fixup for the child\n-\tas well.\n+\t* omp-low.c (expand_omp_taskreg): If the parent function had a broken\n+\tloop tree make sure to schedule a fixup for the child as well.\n \t(expand_omp_for_generic): Properly add loops.\n \t(expand_omp_for_static_nochunk): Likewise.\n \t(expand_omp_for_static_chunk): Likewise."}, {"sha": "d28a0ff07f052cb877fd3cfe7c0e10d20aae66b6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdca7d03ed6e89242d79d704659a70e147350823/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdca7d03ed6e89242d79d704659a70e147350823/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fdca7d03ed6e89242d79d704659a70e147350823", "patch": "@@ -20559,7 +20559,7 @@ ix86_expand_vec_perm (rtx operands[])\n \t      vec[i * 2 + 1] = const1_rtx;\n \t    }\n \t  vt = gen_rtx_CONST_VECTOR (maskmode, gen_rtvec_v (w, vec));\n-\t  vt = force_const_mem (maskmode, vt);\n+\t  vt = validize_mem (force_const_mem (maskmode, vt));\n \t  t1 = expand_simple_binop (maskmode, PLUS, t1, vt, t1, 1,\n \t\t\t\t    OPTAB_DIRECT);\n \n@@ -20756,7 +20756,7 @@ ix86_expand_vec_perm (rtx operands[])\n       for (i = 0; i < 16; ++i)\n \tvec[i] = GEN_INT (i/e * e);\n       vt = gen_rtx_CONST_VECTOR (V16QImode, gen_rtvec_v (16, vec));\n-      vt = force_const_mem (V16QImode, vt);\n+      vt = validize_mem (force_const_mem (V16QImode, vt));\n       if (TARGET_XOP)\n \temit_insn (gen_xop_pperm (mask, mask, mask, vt));\n       else\n@@ -20767,7 +20767,7 @@ ix86_expand_vec_perm (rtx operands[])\n       for (i = 0; i < 16; ++i)\n \tvec[i] = GEN_INT (i % e);\n       vt = gen_rtx_CONST_VECTOR (V16QImode, gen_rtvec_v (16, vec));\n-      vt = force_const_mem (V16QImode, vt);\n+      vt = validize_mem (force_const_mem (V16QImode, vt));\n       emit_insn (gen_addv16qi3 (mask, mask, vt));\n     }\n "}, {"sha": "a70dc4bd37aa474468291f4ce4876e70614d77d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdca7d03ed6e89242d79d704659a70e147350823/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdca7d03ed6e89242d79d704659a70e147350823/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fdca7d03ed6e89242d79d704659a70e147350823", "patch": "@@ -1,6 +1,11 @@\n+2013-04-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/57098\n+\t* gcc.target/i386/pr57098.c: New test.\n+\n 2013-04-29  Kai Tietz  <ktietz@redhat.com>\n \n-\t* gcc.c-torture/execute/pr55875.c\n+\t* gcc.c-torture/execute/pr55875.c: New test.\n \n 2013-04-29  Richard Biener  <rguenther@suse.de>\n "}, {"sha": "c0f1cc34cb49ce7f193af5a14673c4269b3f4d77", "filename": "gcc/testsuite/gcc.target/i386/pr57098.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdca7d03ed6e89242d79d704659a70e147350823/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57098.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdca7d03ed6e89242d79d704659a70e147350823/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57098.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57098.c?ref=fdca7d03ed6e89242d79d704659a70e147350823", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-msse4 -mcmodel=large\" } */\n+\n+typedef int V __attribute__((vector_size(16)));\n+\n+void\n+foo (V *p, V *mask)\n+{\n+  *p = __builtin_shuffle (*p, *mask);\n+}"}]}