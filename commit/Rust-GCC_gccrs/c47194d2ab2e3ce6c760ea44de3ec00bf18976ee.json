{"sha": "c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ3MTk0ZDJhYjJlM2NlNmM3NjBlYTQ0ZGUzZWMwMGJmMTg5NzZlZQ==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2016-04-27T07:14:42Z"}, "committer": {"name": "Sebastian Huber", "email": "sh@gcc.gnu.org", "date": "2016-04-27T07:14:42Z"}, "message": "[libatomic] Add RTEMS support\n\ngcc/\n\n\t* config/rtems.h (LIB_SPEC): Add -latomic.\n\nlibatomic/\n\n\t* configure.tgt (configure_tgt_pre_target_cpu_XCFLAGS): New variable.\n\t(*-*-rtems*): New supported target.\n\t* config/rtems/host-config.h: New file.\n\t* config/rtems/lock.c: Likewise.\n\nFrom-SVN: r235466", "tree": {"sha": "6b59812c3fdcb399dee51a909b909f0521a90d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b59812c3fdcb399dee51a909b909f0521a90d7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "727cbedf8b21e38a47da66c400d51a30d3a64c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727cbedf8b21e38a47da66c400d51a30d3a64c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727cbedf8b21e38a47da66c400d51a30d3a64c33"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "245c929839edc5fa45036b5235e117d2c5169b40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "patch": "@@ -1,3 +1,7 @@\n+2016-04-27  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* config/rtems.h (LIB_SPEC): Add -latomic.\n+\n 2016-04-27  Joel Sherrill  <joel@rtems.org>\n \n \t* config/microblaze/rtems.h: Redefine LINK_SPEC to avoid"}, {"sha": "e005547fd9bf5ab19b7d0f563de7cfac8285d0e4", "filename": "gcc/config/rtems.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/gcc%2Fconfig%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/gcc%2Fconfig%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frtems.h?ref=c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "patch": "@@ -45,6 +45,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define LIB_SPEC \"%{!qrtems: \" STD_LIB_SPEC \"} \" \\\n \"%{!nostdlib: %{qrtems: --start-group \\\n  -lrtemsbsp -lrtemscpu \\\n- -lc -lgcc --end-group %{!qnolinkcmds: -T linkcmds%s}}}\"\n+ -latomic -lc -lgcc --end-group %{!qnolinkcmds: -T linkcmds%s}}}\"\n \n #define TARGET_POSIX_IO"}, {"sha": "9f56a1baf2ac6029bb9d2c7f81560e86d4d1aacc", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "patch": "@@ -1,3 +1,10 @@\n+2016-04-27  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* configure.tgt (configure_tgt_pre_target_cpu_XCFLAGS): New variable.\n+\t(*-*-rtems*): New supported target.\n+\t* config/rtems/host-config.h: New file.\n+\t* config/rtems/lock.c: Likewise.\n+\n 2016-04-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/70454"}, {"sha": "eab2765d7fd2c4a66cece52bb7e005e93029e3ce", "filename": "libatomic/configure.tgt", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/libatomic%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47194d2ab2e3ce6c760ea44de3ec00bf18976ee/libatomic%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fconfigure.tgt?ref=c47194d2ab2e3ce6c760ea44de3ec00bf18976ee", "patch": "@@ -26,6 +26,10 @@\n # Map the target cpu to an ARCH sub-directory.  At the same time,\n # work out any special compilation flags as necessary.\n \n+# Give operating systems the opportunity to discard XCFLAGS modifications based\n+# on ${target_cpu}.  For example to allow proper use of multilibs.\n+configure_tgt_pre_target_cpu_XCFLAGS=\"${XCFLAGS}\"\n+\n case \"${target_cpu}\" in\n   alpha*)\n \t# fenv.c needs this option to generate inexact exceptions.\n@@ -128,6 +132,12 @@ case \"${target}\" in\n             ;;\n         esac\n \t;;\n+\n+  *-*-rtems*)\n+\tXCFLAGS=\"${configure_tgt_pre_target_cpu_XCFLAGS}\"\n+\tconfig_path=\"rtems\"\n+\t;;\n+\n   *-*-elf*)\n \t# ??? No target OS.  We could be targeting bare-metal kernel-mode,\n \t# or user-mode for some custom OS.  If the target supports TAS,"}]}