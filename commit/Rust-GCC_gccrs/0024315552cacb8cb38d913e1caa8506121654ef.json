{"sha": "0024315552cacb8cb38d913e1caa8506121654ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyNDMxNTU1MmNhY2I4Y2IzOGQ5MTNlMWNhYTg1MDYxMjE2NTRlZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2019-07-09T07:54:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-09T07:54:50Z"}, "message": "[Ada] Disable calls to Abort defer/undefer when ZCX_By_Default\n\n2019-07-09  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-memory.adb: Disable calls to Abort defer/undefer\n\twhen ZCX_By_Default.\n\nFrom-SVN: r273284", "tree": {"sha": "c69f997d366072b20e7b07650253a05518257cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c69f997d366072b20e7b07650253a05518257cd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0024315552cacb8cb38d913e1caa8506121654ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0024315552cacb8cb38d913e1caa8506121654ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0024315552cacb8cb38d913e1caa8506121654ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0024315552cacb8cb38d913e1caa8506121654ef/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7854dbd0fedde0bb15e56cc9b4f120d80f3ef41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7854dbd0fedde0bb15e56cc9b4f120d80f3ef41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7854dbd0fedde0bb15e56cc9b4f120d80f3ef41"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "3832b31eaadcdd3d0808ef0ea9250049d4b44dfb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0024315552cacb8cb38d913e1caa8506121654ef/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0024315552cacb8cb38d913e1caa8506121654ef/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0024315552cacb8cb38d913e1caa8506121654ef", "patch": "@@ -1,3 +1,8 @@\n+2019-07-09  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* libgnat/s-memory.adb: Disable calls to Abort defer/undefer\n+\twhen ZCX_By_Default.\n+\n 2019-07-09  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch13.adb (Rep_Item_Too_Early): Representation clauses are"}, {"sha": "ebc168e912edea77411246a3b7b6538a39900fb0", "filename": "gcc/ada/libgnat/s-memory.adb", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0024315552cacb8cb38d913e1caa8506121654ef/gcc%2Fada%2Flibgnat%2Fs-memory.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0024315552cacb8cb38d913e1caa8506121654ef/gcc%2Fada%2Flibgnat%2Fs-memory.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-memory.adb?ref=0024315552cacb8cb38d913e1caa8506121654ef", "patch": "@@ -33,13 +33,10 @@\n \n --  This implementation assumes that the underlying malloc/free/realloc\n --  implementation is thread safe, and thus, no additional lock is required.\n---  Note that we still need to defer abort because on most systems, an\n---  asynchronous signal (as used for implementing asynchronous abort of\n---  task) cannot safely be handled while malloc is executing.\n-\n---  If you are not using Ada constructs containing the \"abort\" keyword, then\n---  you can remove the calls to Abort_Defer.all and Abort_Undefer.all from\n---  this unit.\n+--  Note that when using sjlj exception handling, we still need to defer abort\n+--  because an asynchronous signal (as used for implementing asynchronous abort\n+--  of task on sjlj runtimes) cannot safely be handled while malloc is\n+--  executing.\n \n pragma Compiler_Unit_Warning;\n \n@@ -80,7 +77,7 @@ package body System.Memory is\n          raise Storage_Error with \"object too large\";\n       end if;\n \n-      if Parameters.No_Abort then\n+      if ZCX_By_Default or else Parameters.No_Abort then\n          Result := c_malloc (System.CRTL.size_t (Size));\n       else\n          Abort_Defer.all;\n@@ -121,7 +118,7 @@ package body System.Memory is\n \n    procedure Free (Ptr : System.Address) is\n    begin\n-      if Parameters.No_Abort then\n+      if ZCX_By_Default or else Parameters.No_Abort then\n          c_free (Ptr);\n       else\n          Abort_Defer.all;\n@@ -145,7 +142,7 @@ package body System.Memory is\n          raise Storage_Error with \"object too large\";\n       end if;\n \n-      if Parameters.No_Abort then\n+      if ZCX_By_Default or else Parameters.No_Abort then\n          Result := c_realloc (Ptr, System.CRTL.size_t (Size));\n       else\n          Abort_Defer.all;"}]}