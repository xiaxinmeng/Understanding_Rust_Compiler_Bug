{"sha": "647340c92a042e8e6f7d004637f07060dbde49c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ3MzQwYzkyYTA0MmU4ZTZmN2QwMDQ2MzdmMDcwNjBkYmRlNDljMA==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-06-22T12:35:01Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-06-22T15:28:55Z"}, "message": "Fortran  : ICE in resolve_fl_procedure PR95708\n\nNow issues an error \"Intrinsic procedure 'num_images' not\nallowed in PROCEDURE\" instead of an ICE.\n\n2020-06-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n\ngcc/fortran/\n\n\tPR fortran/95708\n\t* intrinsic.c (add_functions): Replace CLASS_INQUIRY with\n\tCLASS_TRANSFORMATIONAL for intrinsic num_images.\n\t(make_generic): Replace ACTUAL_NO with ACTUAL_YES for\n\tintrinsic team_number.\n\t* resolve.c (resolve_fl_procedure): Check pointer ts.u.derived\n\texists before using it.\n\n2020-06-22  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/testsuite/\n\n\tPR fortran/95708\n\t* gfortran.dg/pr95708.f90: New test.", "tree": {"sha": "3fd542338fe2a07f87480f6d7b60dba5575edb1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fd542338fe2a07f87480f6d7b60dba5575edb1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/647340c92a042e8e6f7d004637f07060dbde49c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647340c92a042e8e6f7d004637f07060dbde49c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/647340c92a042e8e6f7d004637f07060dbde49c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647340c92a042e8e6f7d004637f07060dbde49c0/comments", "author": null, "committer": null, "parents": [{"sha": "9302421e71e85b4d3766a534ed9e1c4ae1e7a6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9302421e71e85b4d3766a534ed9e1c4ae1e7a6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9302421e71e85b4d3766a534ed9e1c4ae1e7a6ca"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "30f9f14572b0387b04f8bb9c47dbfe88845a83a6", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647340c92a042e8e6f7d004637f07060dbde49c0/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647340c92a042e8e6f7d004637f07060dbde49c0/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=647340c92a042e8e6f7d004637f07060dbde49c0", "patch": "@@ -2733,8 +2733,8 @@ add_functions (void)\n \n   make_generic (\"null\", GFC_ISYM_NULL, GFC_STD_F95);\n \n-  add_sym_2 (\"num_images\", GFC_ISYM_NUM_IMAGES, CLASS_INQUIRY, ACTUAL_NO,\n-\t     BT_INTEGER, di, GFC_STD_F2008,\n+  add_sym_2 (\"num_images\", GFC_ISYM_NUM_IMAGES, CLASS_TRANSFORMATIONAL,\n+\t     ACTUAL_NO, BT_INTEGER, di, GFC_STD_F2008,\n \t     gfc_check_num_images, gfc_simplify_num_images, NULL,\n \t     dist, BT_INTEGER, di, OPTIONAL,\n \t     failed, BT_LOGICAL, dl, OPTIONAL);\n@@ -3174,7 +3174,7 @@ add_functions (void)\n   make_generic (\"tanh\", GFC_ISYM_TANH, GFC_STD_F77);\n \n   add_sym_1 (\"team_number\", GFC_ISYM_TEAM_NUMBER, CLASS_TRANSFORMATIONAL,\n-\t     ACTUAL_YES, BT_INTEGER, di, GFC_STD_F2018,\n+\t     ACTUAL_NO, BT_INTEGER, di, GFC_STD_F2018,\n \t     gfc_check_team_number, NULL, gfc_resolve_team_number,\n \t     team, BT_DERIVED, di, OPTIONAL);\n "}, {"sha": "c53b312f7ed36bf4e11fc4d3e310c91c3b47253f", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647340c92a042e8e6f7d004637f07060dbde49c0/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647340c92a042e8e6f7d004637f07060dbde49c0/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=647340c92a042e8e6f7d004637f07060dbde49c0", "patch": "@@ -12999,6 +12999,7 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n \t{\n \t  if (arg->sym\n \t      && arg->sym->ts.type == BT_DERIVED\n+\t      && arg->sym->ts.u.derived\n \t      && !arg->sym->ts.u.derived->attr.use_assoc\n \t      && !gfc_check_symbol_access (arg->sym->ts.u.derived)\n \t      && !gfc_notify_std (GFC_STD_F2003, \"%qs is of a PRIVATE type \""}, {"sha": "32bd324ce15090a7f1f8dec2188201452701d216", "filename": "gcc/testsuite/gfortran.dg/pr95708.f90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647340c92a042e8e6f7d004637f07060dbde49c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95708.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647340c92a042e8e6f7d004637f07060dbde49c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95708.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95708.f90?ref=647340c92a042e8e6f7d004637f07060dbde49c0", "patch": "@@ -0,0 +1,6 @@\n+! { dg-do compile }\n+!\n+\n+program test\n+  procedure(team_num) :: g ! { dg-error \"must be explicit\" }\n+end program"}]}