{"sha": "a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThmZGNhOTFlNzRhNGM5ZGQzZmQ2M2ZlMzNkM2RmODllOThlMGU0NA==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-06-30T06:12:50Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-06-30T06:12:50Z"}, "message": "New test.\n\nFrom-SVN: r20815", "tree": {"sha": "a3cc101255c1bc23d46702f0aaa20295c2938284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3cc101255c1bc23d46702f0aaa20295c2938284"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/comments", "author": null, "committer": null, "parents": [{"sha": "51db713ffd51965e1e25638542f31197fe02f2d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51db713ffd51965e1e25638542f31197fe02f2d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51db713ffd51965e1e25638542f31197fe02f2d8"}], "stats": {"total": 238, "additions": 238, "deletions": 0}, "files": [{"sha": "427f635add916540b26e3095f7b71cfbf7319d3b", "filename": "gcc/testsuite/g77.f-torture/execute/980628-10.f", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-10.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-10.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-10.f?ref=a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44", "patch": "@@ -0,0 +1,57 @@\n+* g77 0.5.23 and previous had bugs involving too little space\n+* allocated for EQUIVALENCE and COMMON areas needing initial\n+* padding to meet alignment requirements of the system.\n+\n+      call subr\n+      end\n+\n+      subroutine subr\n+      implicit none\n+      save\n+\n+      character c1(11), c2(11), c3(11)\n+      real r1, r2, r3\n+      character c4, c5, c6\n+      equivalence (r1, c1(2))\n+      equivalence (r2, c2(2))\n+      equivalence (r3, c3(2))\n+\n+      c1(1) = '1'\n+      r1 = 1.\n+      c1(11) = '1'\n+      c4 = '4'\n+      c2(1) = '2'\n+      r2 = 2.\n+      c2(11) = '2'\n+      c5 = '5'\n+      c3(1) = '3'\n+      r3 = 3.\n+      c3(11) = '3'\n+      c6 = '6'\n+\n+      call x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n+\n+      end\n+\n+      subroutine x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n+      implicit none\n+\n+      character c1(11), c2(11), c3(11)\n+      real r1, r2, r3\n+      character c4, c5, c6\n+\n+      if (c1(1) .ne. '1') call abort\n+      if (r1 .ne. 1.) call abort\n+      if (c1(11) .ne. '1') call abort\n+      if (c4 .ne. '4') call abort\n+      if (c2(1) .ne. '2') call abort\n+      if (r2 .ne. 2.) call abort\n+      if (c2(11) .ne. '2') call abort\n+      if (c5 .ne. '5') call abort\n+      if (c3(1) .ne. '3') call abort\n+      if (r3 .ne. 3.) call abort\n+      if (c3(11) .ne. '3') call abort\n+      if (c6 .ne. '6') call abort\n+\n+      end\n+"}, {"sha": "c81ba31fc26ba24293cb812cbb95ce951e29a263", "filename": "gcc/testsuite/g77.f-torture/execute/980628-7.f", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-7.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-7.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-7.f?ref=a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44", "patch": "@@ -0,0 +1,62 @@\n+* g77 0.5.23 and previous had bugs involving too little space\n+* allocated for EQUIVALENCE and COMMON areas needing initial\n+* padding to meet alignment requirements of the system.\n+\n+      call subr\n+      end\n+\n+      subroutine subr\n+      implicit none\n+\n+      real r1(5), r2(5), r3(5)\n+      double precision d1, d2, d3\n+      integer i1, i2, i3\n+      equivalence (d1, r1(2))\n+      equivalence (d2, r2(2))\n+      equivalence (d3, r3(2))\n+\n+      r1(1) = 1.\n+      d1 = 10.\n+      r1(4) = 1.\n+      r1(5) = 1.\n+      i1 = 1\n+      r2(1) = 2.\n+      d2 = 20.\n+      r2(4) = 2.\n+      r2(5) = 2.\n+      i2 = 2\n+      r3(1) = 3.\n+      d3 = 30.\n+      r3(4) = 3.\n+      r3(5) = 3.\n+      i3 = 3\n+\n+      call x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n+\n+      end\n+\n+      subroutine x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n+      implicit none\n+\n+      real r1(5), r2(5), r3(5)\n+      double precision d1, d2, d3\n+      integer i1, i2, i3\n+\n+      if (r1(1) .ne. 1.) call abort\n+      if (d1 .ne. 10.) call abort\n+      if (r1(4) .ne. 1.) call abort\n+      if (r1(5) .ne. 1.) call abort\n+      if (i1 .ne. 1) call abort\n+      if (r2(1) .ne. 2.) call abort\n+      if (d2 .ne. 20.) call abort\n+      if (r2(4) .ne. 2.) call abort\n+      if (r2(5) .ne. 2.) call abort\n+      if (i2 .ne. 2) call abort\n+      if (r3(1) .ne. 3.) call abort\n+      if (d3 .ne. 30.) call abort\n+      if (r3(4) .ne. 3.) call abort\n+      if (r3(5) .ne. 3.) call abort\n+      if (i3 .ne. 3) call abort\n+\n+      end\n+"}, {"sha": "8940d0099548473d38ae1592218fadc6fc062413", "filename": "gcc/testsuite/g77.f-torture/execute/980628-8.f", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-8.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-8.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-8.f?ref=a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44", "patch": "@@ -0,0 +1,63 @@\n+* g77 0.5.23 and previous had bugs involving too little space\n+* allocated for EQUIVALENCE and COMMON areas needing initial\n+* padding to meet alignment requirements of the system.\n+\n+      call subr\n+      end\n+\n+      subroutine subr\n+      implicit none\n+      save\n+\n+      real r1(5), r2(5), r3(5)\n+      double precision d1, d2, d3\n+      integer i1, i2, i3\n+      equivalence (d1, r1(2))\n+      equivalence (d2, r2(2))\n+      equivalence (d3, r3(2))\n+\n+      r1(1) = 1.\n+      d1 = 10.\n+      r1(4) = 1.\n+      r1(5) = 1.\n+      i1 = 1\n+      r2(1) = 2.\n+      d2 = 20.\n+      r2(4) = 2.\n+      r2(5) = 2.\n+      i2 = 2\n+      r3(1) = 3.\n+      d3 = 30.\n+      r3(4) = 3.\n+      r3(5) = 3.\n+      i3 = 3\n+\n+      call x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n+\n+      end\n+\n+      subroutine x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n+      implicit none\n+\n+      real r1(5), r2(5), r3(5)\n+      double precision d1, d2, d3\n+      integer i1, i2, i3\n+\n+      if (r1(1) .ne. 1.) call abort\n+      if (d1 .ne. 10.) call abort\n+      if (r1(4) .ne. 1.) call abort\n+      if (r1(5) .ne. 1.) call abort\n+      if (i1 .ne. 1) call abort\n+      if (r2(1) .ne. 2.) call abort\n+      if (d2 .ne. 20.) call abort\n+      if (r2(4) .ne. 2.) call abort\n+      if (r2(5) .ne. 2.) call abort\n+      if (i2 .ne. 2) call abort\n+      if (r3(1) .ne. 3.) call abort\n+      if (d3 .ne. 30.) call abort\n+      if (r3(4) .ne. 3.) call abort\n+      if (r3(5) .ne. 3.) call abort\n+      if (i3 .ne. 3) call abort\n+\n+      end\n+"}, {"sha": "54e6552d628fe9f9635f1f836c1d51253b47e9d9", "filename": "gcc/testsuite/g77.f-torture/execute/980628-9.f", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-9.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-9.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-9.f?ref=a8fdca91e74a4c9dd3fd63fe33d3df89e98e0e44", "patch": "@@ -0,0 +1,56 @@\n+* g77 0.5.23 and previous had bugs involving too little space\n+* allocated for EQUIVALENCE and COMMON areas needing initial\n+* padding to meet alignment requirements of the system.\n+\n+      call subr\n+      end\n+\n+      subroutine subr\n+      implicit none\n+\n+      character c1(11), c2(11), c3(11)\n+      real r1, r2, r3\n+      character c4, c5, c6\n+      equivalence (r1, c1(2))\n+      equivalence (r2, c2(2))\n+      equivalence (r3, c3(2))\n+\n+      c1(1) = '1'\n+      r1 = 1.\n+      c1(11) = '1'\n+      c4 = '4'\n+      c2(1) = '2'\n+      r2 = 2.\n+      c2(11) = '2'\n+      c5 = '5'\n+      c3(1) = '3'\n+      r3 = 3.\n+      c3(11) = '3'\n+      c6 = '6'\n+\n+      call x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n+\n+      end\n+\n+      subroutine x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n+      implicit none\n+\n+      character c1(11), c2(11), c3(11)\n+      real r1, r2, r3\n+      character c4, c5, c6\n+\n+      if (c1(1) .ne. '1') call abort\n+      if (r1 .ne. 1.) call abort\n+      if (c1(11) .ne. '1') call abort\n+      if (c4 .ne. '4') call abort\n+      if (c2(1) .ne. '2') call abort\n+      if (r2 .ne. 2.) call abort\n+      if (c2(11) .ne. '2') call abort\n+      if (c5 .ne. '5') call abort\n+      if (c3(1) .ne. '3') call abort\n+      if (r3 .ne. 3.) call abort\n+      if (c3(11) .ne. '3') call abort\n+      if (c6 .ne. '6') call abort\n+\n+      end\n+"}]}