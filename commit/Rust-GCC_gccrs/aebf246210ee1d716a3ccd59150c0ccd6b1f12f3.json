{"sha": "aebf246210ee1d716a3ccd59150c0ccd6b1f12f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWViZjI0NjIxMGVlMWQ3MTZhM2NjZDU5MTUwYzBjY2Q2YjFmMTJmMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@redhat.com", "date": "2001-01-16T21:37:08Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2001-01-16T21:37:08Z"}, "message": "Delete A step Itanium support.\n\n\t* config/ia64/ia64.c (ia64_print_operand_address): Delete 'B' support.\n\t(fixup_errata): Delete TARGET_A_STEP use.\n\t* config/ia64/ia64.h (MASK_A_STEP, TARGET_A_STEP): Delete.\n\t(TARGET_SWITCHES): Delete -ma-step option.\n\t* config/ia64/ia64.md (all FP patterns): Delete %B0.\n\t(movqicc_astep, movqi_internal_astep, movhicc_astep,\n\tmovhi_internal_astep, movsicc_astep, movsi_internal_astep, movdi+1,\n\tmovdi_internal_astep, movsfcc_astep, movsf_internal_astep,\n\tmovdfcc_astep, movdf_internal_astep, movtfcc_astep,\n\tmovtf_internal_astep, cmovdi_internal_astep, cmovsi_internal_astep):\n\tDelete.\n\t(movqi_internal, movhi_internal, movsi_internal, movdi_internal,\n\tmovsf_internal, movdf_internal, movtf_internal, cmovdi_internal,\n\tcmovsi_internal): Delete ! TARGET_A_STEP check.\n\nFrom-SVN: r39075", "tree": {"sha": "72afb11c9c7bf8fd177af5b70cc1bd0bccdd1bbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72afb11c9c7bf8fd177af5b70cc1bd0bccdd1bbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/comments", "author": null, "committer": null, "parents": [{"sha": "aebb127aa90116550fde22901227090e66f6ac92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aebb127aa90116550fde22901227090e66f6ac92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aebb127aa90116550fde22901227090e66f6ac92"}], "stats": {"total": 555, "additions": 119, "deletions": 436}, "files": [{"sha": "93b6c91dc38db7a9c57383a7265e019b95d91294", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aebf246210ee1d716a3ccd59150c0ccd6b1f12f3", "patch": "@@ -1,3 +1,20 @@\n+2001-01-16  Jim Wilson  <wilson@redhat.com>\n+\n+\t* config/ia64/ia64.c (ia64_print_operand_address): Delete 'B' support.\n+\t(fixup_errata): Delete TARGET_A_STEP use.\n+\t* config/ia64/ia64.h (MASK_A_STEP, TARGET_A_STEP): Delete.\n+\t(TARGET_SWITCHES): Delete -ma-step option.\n+\t* config/ia64/ia64.md (all FP patterns): Delete %B0.\n+\t(movqicc_astep, movqi_internal_astep, movhicc_astep,\n+\tmovhi_internal_astep, movsicc_astep, movsi_internal_astep, movdi+1,\n+\tmovdi_internal_astep, movsfcc_astep, movsf_internal_astep,\n+\tmovdfcc_astep, movdf_internal_astep, movtfcc_astep,\n+\tmovtf_internal_astep, cmovdi_internal_astep, cmovsi_internal_astep):\n+\tDelete.\n+\t(movqi_internal, movhi_internal, movsi_internal, movdi_internal,\n+\tmovsf_internal, movdf_internal, movtf_internal, cmovdi_internal,\n+\tcmovsi_internal): Delete ! TARGET_A_STEP check.\n+\t\n 2001-01-16  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* gcc.texi (Bug Lists): Do not mention newsgroups nor the"}, {"sha": "ca1bc41f01fd299b3bf3318673b29b48e204af10", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=aebf246210ee1d716a3ccd59150c0ccd6b1f12f3", "patch": "@@ -3133,7 +3133,6 @@ ia64_print_operand_address (stream, address)\n }\n \n /* Print an operand to a assembler instruction.\n-   B    Work arounds for hardware bugs.\n    C\tSwap and print a comparison operator.\n    D\tPrint an FP comparison operator.\n    E    Print 32 - constant, for SImode shifts as extract.\n@@ -3167,11 +3166,6 @@ ia64_print_operand (file, x, code)\n       /* Handled below.  */\n       break;\n \n-    case 'B':\n-      if (TARGET_A_STEP)\n-\tfputs (\" ;; nop 0 ;; nop 0 ;;\", file);\n-      return;\n-\n     case 'C':\n       {\n \tenum rtx_code c = swap_condition (GET_CODE (x));\n@@ -4684,7 +4678,7 @@ fixup_errata ()\n \t  group_idx = (group_idx + 1) % 3;\n \t  memset (last_group + group_idx, 0, sizeof last_group[group_idx]);\n \t}\n-      if ((TARGET_B_STEP || TARGET_A_STEP) && INSN_P (insn))\n+      if (TARGET_B_STEP && INSN_P (insn))\n \terrata_emit_nops (insn);\n     }\n }"}, {"sha": "fabdd4f070ca9f32f09a32d3b94e89c1d4c933c7", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=aebf246210ee1d716a3ccd59150c0ccd6b1f12f3", "patch": "@@ -53,7 +53,7 @@ extern int target_flags;\n \n #define MASK_VOL_ASM_STOP 0x00000010\t/* Emit stop bits for vol ext asm.  */\n \n-#define MASK_A_STEP\t0x00000020\t/* Emit code for Itanium A step.  */\n+/* 0x00000020 is available.  */\n \n #define MASK_B_STEP\t0x00000040\t/* Emit code for Itanium B step.  */\n \n@@ -81,8 +81,6 @@ extern int target_flags;\n \n #define TARGET_VOL_ASM_STOP\t(target_flags & MASK_VOL_ASM_STOP)\n \n-#define TARGET_A_STEP\t\t(target_flags & MASK_A_STEP)\n-\n #define TARGET_B_STEP\t\t(target_flags & MASK_B_STEP)\n \n #define TARGET_REG_NAMES\t(target_flags & MASK_REG_NAMES)\n@@ -126,8 +124,6 @@ extern int target_flags;\n       N_(\"Emit stop bits before and after volatile extended asms\") },\t\\\n   { \"no-volatile-asm-stop\", -MASK_VOL_ASM_STOP,\t\t\t\t\\\n       N_(\"Don't emit stop bits before and after volatile extended asms\") }, \\\n-  { \"a-step\",\t\tMASK_A_STEP,\t\t\t\t\t\\\n-      N_(\"Emit code for Itanium (TM) processor A step\")},\t\t\\\n   { \"b-step\",\t\tMASK_B_STEP,\t\t\t\t\t\\\n       N_(\"Emit code for Itanium (TM) processor B step\")},\t\t\\\n   { \"register-names\",\tMASK_REG_NAMES,\t\t\t\t\t\\"}, {"sha": "dddfd4b931ce369b22c8f835ccb56a0965e87734", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 100, "deletions": 424, "changes": 524, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aebf246210ee1d716a3ccd59150c0ccd6b1f12f3/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=aebf246210ee1d716a3ccd59150c0ccd6b1f12f3", "patch": "@@ -279,49 +279,10 @@\n     operands[1] = force_reg (QImode, operands[1]);\n }\")\n \n-;; Errata 72 implies that we cannot use predicated loads and stores\n-;; on affected systems.  Reuse TARGET_A_STEP for convenience.\n-\n-;; ??? It would be convenient at this point if the cond_exec pattern\n-;; expander understood non-constant conditions on attributes.  Failing\n-;; that we have to replicate patterns.\n-\n-(define_insn \"*movqicc_astep\"\n-  [(cond_exec\n-     (match_operator 2 \"predicate_operator\"\n-       [(match_operand:BI 3 \"register_operand\" \"c,c,c,c,c\")\n-        (const_int 0)])\n-     (set (match_operand:QI 0 \"register_operand\"  \"=r,r, r,*f,*f\")\n-\t  (match_operand:QI 1 \"nonmemory_operand\" \"rO,J,*f,rO,*f\")))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-   (%J2) mov %0 = %r1\n-   (%J2) addl %0 = %1, r0\n-   (%J2) getf.sig %0 = %1\n-   (%J2) setf.sig %0 = %r1\n-   (%J2) mov %0 = %1\"\n-  [(set_attr \"itanium_class\" \"ialu,ialu,frfr,tofr,fmisc\")\n-   (set_attr \"predicable\" \"no\")])\n-\n-(define_insn \"*movqi_internal_astep\"\n-  [(set (match_operand:QI 0 \"destination_operand\" \"=r,r,r, m, r,*f,*f\")\n-\t(match_operand:QI 1 \"move_operand\"        \"rO,J,m,rO,*f,rO,*f\"))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-   mov %0 = %r1\n-   addl %0 = %1, r0\n-   ld1%O1 %0 = %1%P1\n-   st1%Q0 %0 = %r1%P0\n-   getf.sig %0 = %1\n-   setf.sig %0 = %r1\n-   mov %0 = %1\"\n-  [(set_attr \"itanium_class\" \"ialu,ialu,ld,st,frfr,tofr,fmisc\")\n-   (set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*movqi_internal\"\n   [(set (match_operand:QI 0 \"destination_operand\" \"=r,r,r, m, r,*f,*f\")\n \t(match_operand:QI 1 \"move_operand\"        \"rO,J,m,rO,*f,rO,*f\"))]\n-  \"! TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n+  \"ia64_move_ok (operands[0], operands[1])\"\n   \"@\n    mov %0 = %r1\n    addl %0 = %1, r0\n@@ -343,43 +304,10 @@\n     operands[1] = force_reg (HImode, operands[1]);\n }\")\n \n-;; Errata 72 workaround.\n-(define_insn \"*movhicc_astep\"\n-  [(cond_exec\n-     (match_operator 2 \"predicate_operator\"\n-       [(match_operand:BI 3 \"register_operand\" \"c,c,c,c,c\")\n-        (const_int 0)])\n-     (set (match_operand:HI 0 \"register_operand\"  \"=r,r, r,*f,*f\")\n-\t  (match_operand:HI 1 \"nonmemory_operand\" \"rO,J,*f,rO,*f\")))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-   (%J2) mov %0 = %r1\n-   (%J2) addl %0 = %1, r0\n-   (%J2) getf.sig %0 = %1\n-   (%J2) setf.sig %0 = %r1\n-   (%J2) mov %0 = %1\"\n-  [(set_attr \"itanium_class\" \"ialu,ialu,frfr,tofr,fmisc\")\n-   (set_attr \"predicable\" \"no\")])\n-\n-(define_insn \"*movhi_internal_astep\"\n-  [(set (match_operand:HI 0 \"destination_operand\" \"=r,r,r, m, r,*f,*f\")\n-\t(match_operand:HI 1 \"move_operand\"        \"rO,J,m,rO,*f,rO,*f\"))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-   mov %0 = %r1\n-   addl %0 = %1, r0\n-   ld2%O1 %0 = %1%P1\n-   st2%Q0 %0 = %r1%P0\n-   getf.sig %0 = %1\n-   setf.sig %0 = %r1\n-   mov %0 = %1\"\n-  [(set_attr \"itanium_class\" \"ialu,ialu,ld,st,frfr,tofr,fmisc\")\n-   (set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*movhi_internal\"\n   [(set (match_operand:HI 0 \"destination_operand\" \"=r,r,r, m, r,*f,*f\")\n \t(match_operand:HI 1 \"move_operand\"        \"rO,J,m,rO,*f,rO,*f\"))]\n-  \"! TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n+  \"ia64_move_ok (operands[0], operands[1])\"\n   \"@\n    mov %0 = %r1\n    addl %0 = %1, r0\n@@ -401,51 +329,10 @@\n     operands[1] = force_reg (SImode, operands[1]);\n }\")\n \n-;; Errata 72 workaround.\n-(define_insn \"*movsicc_astep\"\n-  [(cond_exec\n-     (match_operator 2 \"predicate_operator\"\n-       [(match_operand:BI 3 \"register_operand\" \"c,c,c,c,c,c,c,c\")\n-        (const_int 0)])\n-     (set (match_operand:SI 0 \"register_operand\"  \"=r,r,r, r,*f,*f, r,*d\")\n-\t  (match_operand:SI 1 \"nonmemory_operand\" \"rO,J,i,*f,rO,*f,*d,rK\")))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-   (%J2) mov %0 = %r1\n-   (%J2) addl %0 = %1, r0\n-   (%J2) movl %0 = %1\n-   (%J2) getf.sig %0 = %1\n-   (%J2) setf.sig %0 = %r1\n-   (%J2) mov %0 = %1\n-   (%J2) mov %0 = %1\n-   (%J2) mov %0 = %r1\"\n-;; frar_m, toar_m ??? why not frar_i and toar_i\n-  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,frfr,tofr,fmisc,frar_m,toar_m\")\n-   (set_attr \"predicable\" \"no\")])\n-\n-(define_insn \"*movsi_internal_astep\"\n-  [(set (match_operand:SI 0 \"destination_operand\" \"=r,r,r,r, m, r,*f,*f, r,*d\")\n-\t(match_operand:SI 1 \"move_operand\"        \"rO,J,i,m,rO,*f,rO,*f,*d,rK\"))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-  mov %0 = %r1\n-  addl %0 = %1, r0\n-  movl %0 = %1\n-  ld4%O1 %0 = %1%P1\n-  st4%Q0 %0 = %r1%P0\n-  getf.sig %0 = %1\n-  setf.sig %0 = %r1\n-  mov %0 = %1\n-  mov %0 = %1\n-  mov %0 = %r1\"\n-;; frar_m, toar_m ??? why not frar_i and toar_i\n-  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,frar_m,toar_m\")\n-   (set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*movsi_internal\"\n   [(set (match_operand:SI 0 \"destination_operand\" \"=r,r,r,r, m, r,*f,*f, r,*d\")\n \t(match_operand:SI 1 \"move_operand\"        \"rO,J,i,m,rO,*f,rO,*f,*d,rK\"))]\n-  \"! TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n+  \"ia64_move_ok (operands[0], operands[1])\"\n   \"@\n   mov %0 = %r1\n   addl %0 = %1, r0\n@@ -491,54 +378,6 @@\n     }\n }\")\n \n-;; Errata 72 workaround.\n-(define_insn \"\"\n-  [(cond_exec\n-     (match_operator 2 \"predicate_operator\"\n-       [(match_operand:BI 3 \"register_operand\" \"c,c,c,c,c,c,c,c,c,c,c,c\")\n-        (const_int 0)])\n-     (set (match_operand:DI 0 \"register_operand\"\n-\t\t\t      \"=r,r,r, r,*f,*f, r,*b, r,*e, r,*d\")\n-\t  (match_operand:DI 1 \"nonmemory_operand\"\n-\t\t\t      \"rO,J,i,*f,rO,*f,*b,rO,*e,rK,*d,rK\")))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"*\n-{\n-  static const char * const alt[] = {\n-    \\\"(%J2) mov %0 = %r1\\\",\n-    \\\"(%J2) addl %0 = %1, r0\\\",\n-    \\\"(%J2) movl %0 = %1\\\",\n-    \\\"(%J2) getf.sig %0 = %1\\\",\n-    \\\"(%J2) setf.sig %0 = %r1\\\",\n-    \\\"(%J2) mov %0 = %1\\\",\n-    \\\"(%J2) mov %0 = %1\\\",\n-    \\\"(%J2) mov %0 = %r1\\\",\n-    \\\"(%J2) mov %0 = %1\\\",\n-    \\\"(%J2) mov %0 = %1\\\",\n-    \\\"(%J2) mov %0 = %1\\\",\n-    \\\"(%J2) mov %0 = %1\\\"\n-  };\n-\n-  /* We use 'i' for alternative 2 despite possible PIC problems.\n-\n-     If we define LEGITIMATE_CONSTANT_P such that symbols are not\n-     allowed, then the compiler dumps the data into constant memory\n-     instead of letting us read the values from the GOT.  Similarly\n-     if we use 'n' instead of 'i'.\n-\n-     Instead, we allow such insns through reload and then split them\n-     afterward (even without optimization).  Therefore, we should\n-     never get so far with a symbolic operand.  */\n-\n-  if (which_alternative == 2 && ! TARGET_NO_PIC\n-      && symbolic_operand (operands[1], VOIDmode))\n-    abort ();\n-\n-  return alt[which_alternative];\n-}\"\n-  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,frfr,tofr,fmisc,frbr,tobr,frar_i,toar_i,frar_m,toar_m\")\n-   (set_attr \"predicable\" \"no\")])\n-\n ;; This is used during early compilation to delay the decision on\n ;; how to refer to a variable as long as possible.  This is especially\n ;; important between initial rtl generation and optimization for\n@@ -559,50 +398,12 @@\n   [(const_int 0)]\n   \"ia64_expand_load_address (operands[0], operands[1], operands[2]); DONE;\")\n \n-(define_insn \"*movdi_internal_astep\"\n-  [(set (match_operand:DI 0 \"destination_operand\"\n-\t\t    \"=r,r,r,r, m, r,*f,*f,*f, Q, r,*b, r,*e, r,*d, r,*c\")\n-\t(match_operand:DI 1 \"move_operand\"\n-\t\t    \"rO,J,i,m,rO,*f,rO,*f, Q,*f,*b,rO,*e,rK,*d,rK,*c,rO\"))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"*\n-{\n-  static const char * const alt[] = {\n-    \\\"mov %0 = %r1\\\",\n-    \\\"addl %0 = %1, r0\\\",\n-    \\\"movl %0 = %1\\\",\n-    \\\"ld8%O1 %0 = %1%P1\\\",\n-    \\\"st8%Q0 %0 = %r1%P0\\\",\n-    \\\"getf.sig %0 = %1\\\",\n-    \\\"setf.sig %0 = %r1\\\",\n-    \\\"mov %0 = %1\\\",\n-    \\\"ldf8 %0 = %1%P1\\\",\n-    \\\"stf8 %0 = %1%P0\\\",\n-    \\\"mov %0 = %1\\\",\n-    \\\"mov %0 = %r1\\\",\n-    \\\"mov %0 = %1\\\",\n-    \\\"mov %0 = %1\\\",\n-    \\\"mov %0 = %1\\\",\n-    \\\"mov %0 = %1\\\",\n-    \\\"mov %0 = pr\\\",\n-    \\\"mov pr = %1, -1\\\"\n-  };\n-\n-  if (which_alternative == 2 && ! TARGET_NO_PIC\n-      && symbolic_operand (operands[1], VOIDmode))\n-    abort ();\n-\n-  return alt[which_alternative];\n-}\"\n-  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,fld,stf,frbr,tobr,frar_i,toar_i,frar_m,toar_m,frpr,topr\")\n-   (set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*movdi_internal\"\n   [(set (match_operand:DI 0 \"destination_operand\"\n \t\t    \"=r,r,r,r, m, r,*f,*f,*f, Q, r,*b, r,*e, r,*d, r,*c\")\n \t(match_operand:DI 1 \"move_operand\"\n \t\t    \"rO,J,i,m,rO,*f,rO,*f, Q,*f,*b,rO,*e,rK,*d,rK,*c,rO\"))]\n-  \"! TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n+  \"ia64_move_ok (operands[0], operands[1])\"\n   \"*\n {\n   static const char * const alt[] = {\n@@ -835,43 +636,10 @@\n     operands[1] = force_reg (SFmode, operands[1]);\n }\")\n \n-;; Errata 72 workaround.\n-(define_insn \"*movsfcc_astep\"\n-  [(cond_exec\n-     (match_operator 2 \"predicate_operator\"\n-       [(match_operand:BI 3 \"register_operand\" \"c,c,c,c\")\n-        (const_int 0)])\n-     (set (match_operand:SF 0 \"register_operand\"  \"=f,*r, f,*r\")\n-\t  (match_operand:SF 1 \"nonmemory_operand\" \"fG,fG,*r,*r\")))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-  (%J2) mov %0 = %F1\n-  (%J2) getf.s %0 = %F1\n-  (%J2) setf.s %0 = %1\n-  (%J2) mov %0 = %1\"\n-  [(set_attr \"itanium_class\" \"fmisc,frfr,tofr,ialu\")\n-   (set_attr \"predicable\" \"no\")])\n-\n-(define_insn \"*movsf_internal_astep\"\n-  [(set (match_operand:SF 0 \"destination_operand\" \"=f,f, Q,*r, f,*r,*r, m\")\n-\t(match_operand:SF 1 \"general_operand\"     \"fG,Q,fG,fG,*r,*r, m,*r\"))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-  mov %0 = %F1\n-  ldfs %0 = %1%P1\n-  stfs %0 = %F1%P0\n-  getf.s %0 = %F1\n-  setf.s %0 = %1\n-  mov %0 = %1\n-  ld4%O1 %0 = %1%P1\n-  st4%Q0 %0 = %1%P0\"\n-  [(set_attr \"itanium_class\" \"fmisc,fld,stf,frfr,tofr,ialu,ld,st\")\n-   (set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*movsf_internal\"\n   [(set (match_operand:SF 0 \"destination_operand\" \"=f,f, Q,*r, f,*r,*r, m\")\n \t(match_operand:SF 1 \"general_operand\"     \"fG,Q,fG,fG,*r,*r, m,*r\"))]\n-  \"! TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n+  \"ia64_move_ok (operands[0], operands[1])\"\n   \"@\n   mov %0 = %F1\n   ldfs %0 = %1%P1\n@@ -894,43 +662,10 @@\n     operands[1] = force_reg (DFmode, operands[1]);\n }\")\n \n-;; Errata 72 workaround.\n-(define_insn \"*movdfcc_astep\"\n-  [(cond_exec\n-     (match_operator 2 \"predicate_operator\"\n-       [(match_operand:BI 3 \"register_operand\" \"c,c,c,c\")\n-        (const_int 0)])\n-     (set (match_operand:DF 0 \"register_operand\"  \"=f,*r, f,*r\")\n-\t  (match_operand:DF 1 \"nonmemory_operand\" \"fG,fG,*r,*r\")))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-  (%J2) mov %0 = %F1\n-  (%J2) getf.d %0 = %F1\n-  (%J2) setf.d %0 = %1\n-  (%J2) mov %0 = %1\"\n-  [(set_attr \"itanium_class\" \"fmisc,frfr,tofr,ialu\")\n-   (set_attr \"predicable\" \"no\")])\n-\n-(define_insn \"*movdf_internal_astep\"\n-  [(set (match_operand:DF 0 \"destination_operand\" \"=f,f, Q,*r, f,*r,*r, m\")\n-\t(match_operand:DF 1 \"general_operand\"     \"fG,Q,fG,fG,*r,*r, m,*r\"))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-  mov %0 = %F1\n-  ldfd %0 = %1%P1\n-  stfd %0 = %F1%P0\n-  getf.d %0 = %F1\n-  setf.d %0 = %1\n-  mov %0 = %1\n-  ld8%O1 %0 = %1%P1\n-  st8%Q0 %0 = %1%P0\"\n-  [(set_attr \"itanium_class\" \"fmisc,fld,stf,frfr,tofr,ialu,ld,st\")\n-   (set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*movdf_internal\"\n   [(set (match_operand:DF 0 \"destination_operand\" \"=f,f, Q,*r, f,*r,*r, m\")\n \t(match_operand:DF 1 \"general_operand\"     \"fG,Q,fG,fG,*r,*r, m,*r\"))]\n-  \"! TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n+  \"ia64_move_ok (operands[0], operands[1])\"\n   \"@\n   mov %0 = %F1\n   ldfd %0 = %1%P1\n@@ -1016,34 +751,10 @@\n \n ;; ??? There's no easy way to mind volatile acquire/release semantics.\n \n-;; Errata 72 workaround.\n-(define_insn \"*movtfcc_astep\"\n-  [(cond_exec\n-     (match_operator 2 \"predicate_operator\"\n-       [(match_operand:BI 3 \"register_operand\" \"c\")\n-        (const_int 0)])\n-     (set (match_operand:TF 0 \"register_operand\"  \"=f\")\n-\t  (match_operand:TF 1 \"nonmemory_operand\" \"fG\")))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"(%J2) mov %0 = %F1\"\n-  [(set_attr \"itanium_class\" \"fmisc\")\n-   (set_attr \"predicable\" \"no\")])\n-\n-(define_insn \"*movtf_internal_astep\"\n-  [(set (match_operand:TF 0 \"destination_tfmode_operand\" \"=f,f, m\")\n-\t(match_operand:TF 1 \"general_tfmode_operand\"     \"fG,m,fG\"))]\n-  \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n-  \"@\n-  mov %0 = %F1\n-  ldfe %0 = %1%P1\n-  stfe %0 = %F1%P0\"\n-  [(set_attr \"itanium_class\" \"fmisc,fld,stf\")\n-   (set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*movtf_internal\"\n   [(set (match_operand:TF 0 \"destination_tfmode_operand\" \"=f,f, m\")\n \t(match_operand:TF 1 \"general_tfmode_operand\"     \"fG,m,fG\"))]\n-  \"! TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n+  \"ia64_move_ok (operands[0], operands[1])\"\n   \"@\n   mov %0 = %F1\n   ldfe %0 = %1%P1\n@@ -1078,7 +789,7 @@\n   \"\"\n   \"@\n    sxt4 %0 = %1\n-   fsxt.r %0 = %1, %1%B0\"\n+   fsxt.r %0 = %1, %1\"\n   [(set_attr \"itanium_class\" \"xtd,fmisc\")])\n \n ;; Unsigned conversions from a smaller integer to a larger integer\n@@ -1109,7 +820,7 @@\n   \"@\n    zxt4 %0 = %1\n    ld4%O1 %0 = %1%P1\n-   fmix.r %0 = f0, %1%B0\"\n+   fmix.r %0 = f0, %1\"\n   [(set_attr \"itanium_class\" \"xtd,ld,fmisc\")])\n \n ;; Convert between floating point types of different sizes.\n@@ -1193,21 +904,21 @@\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fnorm.s %0 = %1%B0\"\n+  \"fnorm.s %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"trunctfsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:TF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fnorm.s %0 = %1%B0\"\n+  \"fnorm.s %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"trunctfdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:DF (match_operand:TF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fnorm.d %0 = %1%B0\"\n+  \"fnorm.d %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; Convert between signed integer types and floating point.\n@@ -1223,29 +934,29 @@\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(fix:DI (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.fx.trunc %0 = %1%B0\"\n+  \"fcvt.fx.trunc %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(fix:DI (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.fx.trunc %0 = %1%B0\"\n+  \"fcvt.fx.trunc %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_trunctfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(fix:DI (match_operand:TF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.fx.trunc %0 = %1%B0\"\n+  \"fcvt.fx.trunc %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_trunctfdi2_alts\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(fix:DI (match_operand:TF 1 \"fr_register_operand\" \"f\")))\n    (use (match_operand:SI 2 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fcvt.fx.trunc.s%2 %0 = %1%B0\"\n+  \"fcvt.fx.trunc.s%2 %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n ;; Convert between unsigned integer types and floating point.\n@@ -1254,50 +965,50 @@\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_float:SF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.xuf.s %0 = %1%B0\"\n+  \"fcvt.xuf.s %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"floatunsdidf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_float:DF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.xuf.d %0 = %1%B0\"\n+  \"fcvt.xuf.d %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"floatunsditf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_float:TF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.xuf %0 = %1%B0\"\n+  \"fcvt.xuf %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_truncsfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_fix:DI (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.fxu.trunc %0 = %1%B0\"\n+  \"fcvt.fxu.trunc %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_truncdfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_fix:DI (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.fxu.trunc %0 = %1%B0\"\n+  \"fcvt.fxu.trunc %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_trunctfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_fix:DI (match_operand:TF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fcvt.fxu.trunc %0 = %1%B0\"\n+  \"fcvt.fxu.trunc %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_trunctfdi2_alts\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_fix:DI (match_operand:TF 1 \"fr_register_operand\" \"f\")))\n    (use (match_operand:SI 2 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fcvt.fxu.trunc.s%2 %0 = %1%B0\"\n+  \"fcvt.fxu.trunc.s%2 %0 = %1\"\n   [(set_attr \"itanium_class\" \"fcvtfx\")])\n \f\n ;; ::::::::::::::::::::\n@@ -2091,7 +1802,7 @@\n \t(mult:SI (match_operand:SI 1 \"grfr_register_operand\" \"f\")\n \t\t (match_operand:SI 2 \"grfr_register_operand\" \"f\")))]\n   \"\"\n-  \"xmpy.l %0 = %1, %2%B0\"\n+  \"xmpy.l %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"maddsi4\"\n@@ -2100,7 +1811,7 @@\n \t\t\t  (match_operand:SI 2 \"grfr_register_operand\" \"f\"))\n \t\t (match_operand:SI 3 \"grfr_register_operand\" \"f\")))]\n   \"\"\n-  \"xma.l %0 = %1, %2, %3%B0\"\n+  \"xma.l %0 = %1, %2, %3\"\n   [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"negsi2\"\n@@ -2403,7 +2114,7 @@\n \t(mult:DI (match_operand:DI 1 \"grfr_register_operand\" \"f\")\n \t\t (match_operand:DI 2 \"grfr_register_operand\" \"f\")))]\n   \"\"\n-  \"xmpy.l %0 = %1, %2%B0\"\n+  \"xmpy.l %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"xmpy\")])\n \n ;; ??? If operand 3 is an eliminable reg, then register elimination causes the\n@@ -2424,7 +2135,7 @@\n \t\t (match_operand:DI 3 \"grfr_register_operand\" \"f\")))\n    (clobber (match_scratch:DI 4 \"=X\"))]\n   \"\"\n-  \"xma.l %0 = %1, %2, %3%B0\"\n+  \"xma.l %0 = %1, %2, %3\"\n   [(set_attr \"itanium_class\" \"xmpy\")])\n \n ;; This can be created by register elimination if operand3 of shladd is an\n@@ -2474,7 +2185,7 @@\n \t\t     (match_operand:DI 2 \"fr_register_operand\" \"f\")))\n \t  (const_int 64))))]\n   \"\"\n-  \"xmpy.h %0 = %1, %2%B0\"\n+  \"xmpy.h %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"umuldi3_highpart\"\n@@ -2487,7 +2198,7 @@\n \t\t     (match_operand:DI 2 \"fr_register_operand\" \"f\")))\n \t  (const_int 64))))]\n   \"\"\n-  \"xmpy.hu %0 = %1, %2%B0\"\n+  \"xmpy.hu %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"negdi2\"\n@@ -2803,60 +2514,60 @@\n \t(plus:SF (match_operand:SF 1 \"fr_register_operand\" \"%f\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fadd.s %0 = %1, %F2%B0\"\n+  \"fadd.s %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(minus:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t  (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fsub.s %0 = %F1, %F2%B0\"\n+  \"fsub.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"mulsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"fr_register_operand\" \"%f\")\n \t\t (match_operand:SF 2 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fmpy.s %0 = %1, %2%B0\"\n+  \"fmpy.s %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"abssf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(abs:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fabs %0 = %1%B0\"\n+  \"fabs %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fneg %0 = %1%B0\"\n+  \"fneg %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*nabssf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(neg:SF (abs:SF (match_operand:SF 1 \"fr_register_operand\" \"f\"))))]\n   \"\"\n-  \"fnegabs %0 = %1%B0\"\n+  \"fnegabs %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"minsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(smin:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmin %0 = %1, %F2%B0\"\n+  \"fmin %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"maxsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(smax:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmax %0 = %1, %F2%B0\"\n+  \"fmax %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*maddsf4\"\n@@ -2865,7 +2576,7 @@\n \t\t\t  (match_operand:SF 2 \"fr_register_operand\" \"f\"))\n \t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fma.s %0 = %1, %2, %F3%B0\"\n+  \"fma.s %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubsf4\"\n@@ -2874,15 +2585,15 @@\n \t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\"))\n \t\t  (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fms.s %0 = %1, %2, %F3%B0\"\n+  \"fms.s %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmulsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(neg:SF (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n \t\t\t (match_operand:SF 2 \"fr_register_operand\" \"f\"))))]\n   \"\"\n-  \"fnmpy.s %0 = %1, %2%B0\"\n+  \"fnmpy.s %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n@@ -2894,7 +2605,7 @@\n \t\t\t   (match_operand:SF 2 \"fr_register_operand\" \"f\")))\n \t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnma.s %0 = %1, %2, %F3%B0\"\n+  \"fnma.s %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_expand \"divsf3\"\n@@ -3029,7 +2740,7 @@\n \t(plus:DF (match_operand:DF 1 \"fr_register_operand\" \"%f\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fadd.d %0 = %1, %F2%B0\"\n+  \"fadd.d %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*adddf3_trunc\"\n@@ -3038,15 +2749,15 @@\n \t  (plus:DF (match_operand:DF 1 \"fr_register_operand\" \"%f\")\n \t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fadd.s %0 = %1, %F2%B0\"\n+  \"fadd.s %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(minus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t  (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fsub.d %0 = %F1, %F2%B0\"\n+  \"fsub.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*subdf3_trunc\"\n@@ -3055,15 +2766,15 @@\n \t  (minus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t    (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fsub.s %0 = %F1, %F2%B0\"\n+  \"fsub.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"muldf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fmpy.d %0 = %1, %2%B0\"\n+  \"fmpy.d %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*muldf3_trunc\"\n@@ -3072,44 +2783,44 @@\n \t  (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n   \"\"\n-  \"fmpy.s %0 = %1, %2%B0\"\n+  \"fmpy.s %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fabs %0 = %1%B0\"\n+  \"fabs %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n-  \"fneg %0 = %1%B0\"\n+  \"fneg %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*nabsdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(neg:DF (abs:DF (match_operand:DF 1 \"fr_register_operand\" \"f\"))))]\n   \"\"\n-  \"fnegabs %0 = %1%B0\"\n+  \"fnegabs %0 = %1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"mindf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(smin:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmin %0 = %1, %F2%B0\"\n+  \"fmin %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"maxdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(smax:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmax %0 = %1, %F2%B0\"\n+  \"fmax %0 = %1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*madddf4\"\n@@ -3118,7 +2829,7 @@\n \t\t\t  (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n \t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fma.d %0 = %1, %2, %F3%B0\"\n+  \"fma.d %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*madddf4_trunc\"\n@@ -3128,7 +2839,7 @@\n \t\t\t    (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n \t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fma.s %0 = %1, %2, %F3%B0\"\n+  \"fma.s %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubdf4\"\n@@ -3137,7 +2848,7 @@\n \t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n \t\t  (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fms.d %0 = %1, %2, %F3%B0\"\n+  \"fms.d %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubdf4_trunc\"\n@@ -3147,15 +2858,15 @@\n \t\t\t     (match_operand:DF 2 \"fr_register_operand\" \"f\"))\n \t\t    (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fms.s %0 = %1, %2, %F3%B0\"\n+  \"fms.s %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmuldf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(neg:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t\t (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n   \"\"\n-  \"fnmpy.d %0 = %1, %2%B0\"\n+  \"fnmpy.d %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmuldf3_trunc\"\n@@ -3164,7 +2875,7 @@\n \t  (neg:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))))]\n   \"\"\n-  \"fnmpy.s %0 = %1, %2%B0\"\n+  \"fnmpy.s %0 = %1, %2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n@@ -3176,7 +2887,7 @@\n \t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n \t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnma.d %0 = %1, %2, %F3%B0\"\n+  \"fnma.d %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4_alts\"\n@@ -3187,7 +2898,7 @@\n \t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fnma.d.s%4 %0 = %1, %2, %F3%B0\"\n+  \"fnma.d.s%4 %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4_trunc\"\n@@ -3198,7 +2909,7 @@\n \t\t\t     (match_operand:DF 2 \"fr_register_operand\" \"f\")))\n \t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnma.s %0 = %1, %2, %F3%B0\"\n+  \"fnma.s %0 = %1, %2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_expand \"divdf3\"\n@@ -3369,7 +3080,7 @@\n \t(plus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fadd %0 = %F1, %F2%B0\"\n+  \"fadd %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*addtf3_truncsf\"\n@@ -3378,7 +3089,7 @@\n \t  (plus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fadd.s %0 = %F1, %F2%B0\"\n+  \"fadd.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*addtf3_truncdf\"\n@@ -3387,15 +3098,15 @@\n \t  (plus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fadd.d %0 = %F1, %F2%B0\"\n+  \"fadd.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subtf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(minus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t  (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fsub %0 = %F1, %F2%B0\"\n+  \"fsub %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*subtf3_truncsf\"\n@@ -3404,7 +3115,7 @@\n \t  (minus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fsub.s %0 = %F1, %F2%B0\"\n+  \"fsub.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*subtf3_truncdf\"\n@@ -3413,15 +3124,15 @@\n \t  (minus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fsub.d %0 = %F1, %F2%B0\"\n+  \"fsub.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"multf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmpy %0 = %F1, %F2%B0\"\n+  \"fmpy %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_truncsf\"\n@@ -3430,7 +3141,7 @@\n \t  (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fmpy.s %0 = %F1, %F2%B0\"\n+  \"fmpy.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_truncdf\"\n@@ -3439,7 +3150,7 @@\n \t  (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fmpy.d %0 = %F1, %F2%B0\"\n+  \"fmpy.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_alts\"\n@@ -3448,7 +3159,7 @@\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))\n    (use (match_operand:SI 3 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fmpy.s%3 %0 = %F1, %F2%B0\"\n+  \"fmpy.s%3 %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_truncsf_alts\"\n@@ -3458,7 +3169,7 @@\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))\n    (use (match_operand:SI 3 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fmpy.s.s%3 %0 = %F1, %F2%B0\"\n+  \"fmpy.s.s%3 %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_truncdf_alts\"\n@@ -3468,44 +3179,44 @@\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))\n    (use (match_operand:SI 3 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fmpy.d.s%3 %0 = %F1, %F2%B0\"\n+  \"fmpy.d.s%3 %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"abstf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(abs:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fabs %0 = %F1%B0\"\n+  \"fabs %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"negtf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(neg:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fneg %0 = %F1%B0\"\n+  \"fneg %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*nabstf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(neg:TF (abs:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnegabs %0 = %F1%B0\"\n+  \"fnegabs %0 = %F1\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"mintf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(smin:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmin %0 = %F1, %F2%B0\"\n+  \"fmin %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"maxtf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(smax:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fmax %0 = %F1, %F2%B0\"\n+  \"fmax %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*maddtf4\"\n@@ -3514,7 +3225,7 @@\n \t\t\t  (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n \t\t (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fma %0 = %F1, %F2, %F3%B0\"\n+  \"fma %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*maddtf4_truncsf\"\n@@ -3524,7 +3235,7 @@\n \t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fma.s %0 = %F1, %F2, %F3%B0\"\n+  \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*maddtf4_truncdf\"\n@@ -3534,7 +3245,7 @@\n \t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fma.d %0 = %F1, %F2, %F3%B0\"\n+  \"fma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*maddtf4_alts\"\n@@ -3544,7 +3255,7 @@\n \t\t (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fma.s%4 %0 = %F1, %F2, %F3%B0\"\n+  \"fma.s%4 %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*maddtf4_alts_truncdf\"\n@@ -3555,7 +3266,7 @@\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fma.d.s%4 %0 = %F1, %F2, %F3%B0\"\n+  \"fma.d.s%4 %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubtf4\"\n@@ -3564,7 +3275,7 @@\n \t\t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n \t\t  (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fms %0 = %F1, %F2, %F3%B0\"\n+  \"fms %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubtf4_truncsf\"\n@@ -3574,7 +3285,7 @@\n \t\t\t     (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n \t\t    (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fms.s %0 = %F1, %F2, %F3%B0\"\n+  \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubtf4_truncdf\"\n@@ -3584,15 +3295,15 @@\n \t\t\t     (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))\n \t\t    (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fms.d %0 = %F1, %F2, %F3%B0\"\n+  \"fms.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmultf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(neg:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnmpy %0 = %F1, %F2%B0\"\n+  \"fnmpy %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmultf3_truncsf\"\n@@ -3602,7 +3313,7 @@\n \t\t    (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))))]\n   \"\"\n-  \"fnmpy.s %0 = %F1, %F2%B0\"\n+  \"fnmpy.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmultf3_truncdf\"\n@@ -3612,7 +3323,7 @@\n \t\t    (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))))]\n   \"\"\n-  \"fnmpy.d %0 = %F1, %F2%B0\"\n+  \"fnmpy.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n@@ -3624,7 +3335,7 @@\n \t\t\t  (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))\n \t\t (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n-  \"fnma %0 = %F1, %F2, %F3%B0\"\n+  \"fnma %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddtf4_truncsf\"\n@@ -3635,7 +3346,7 @@\n \t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnma.s %0 = %F1, %F2, %F3%B0\"\n+  \"fnma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddtf4_truncdf\"\n@@ -3646,7 +3357,7 @@\n \t\t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n-  \"fnma.d %0 = %F1, %F2, %F3%B0\"\n+  \"fnma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddtf4_alts\"\n@@ -3657,7 +3368,7 @@\n \t\t (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fnma.s%4 %0 = %F1, %F2, %F3%B0\"\n+  \"fnma.s%4 %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddtf4_truncdf_alts\"\n@@ -3670,7 +3381,7 @@\n \t\t (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n-  \"fnma.d.s%4 %0 = %F1, %F2, %F3%B0\"\n+  \"fnma.d.s%4 %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_expand \"divtf3\"\n@@ -4156,7 +3867,7 @@\n   \"\"\n   \"@\n    and %0 = %2, %1\n-   fand %0 = %2, %1%B0\"\n+   fand %0 = %2, %1\"\n   [(set_attr \"itanium_class\" \"ilog,fmisc\")])\n \n (define_insn \"*andnot\"\n@@ -4166,7 +3877,7 @@\n   \"\"\n   \"@\n    andcm %0 = %2, %1\n-   fandcm %0 = %2, %1%B0\"\n+   fandcm %0 = %2, %1\"\n   [(set_attr \"itanium_class\" \"ilog,fmisc\")])\n \n (define_insn \"iordi3\"\n@@ -4176,7 +3887,7 @@\n   \"\"\n   \"@\n    or %0 = %2, %1\n-   for %0 = %2, %1%B0\"\n+   for %0 = %2, %1\"\n   [(set_attr \"itanium_class\" \"ilog,fmisc\")])\n \n (define_insn \"xordi3\"\n@@ -4186,7 +3897,7 @@\n   \"\"\n   \"@\n    xor %0 = %2, %1\n-   fxor %0 = %2, %1%B0\"\n+   fxor %0 = %2, %1\"\n   [(set_attr \"itanium_class\" \"ilog,fmisc\")])\n \n (define_insn \"one_cmpldi2\"\n@@ -4636,25 +4347,6 @@\n ;; DImode if_then_else patterns.\n ;;\n \n-;; Errata 72 workaround.\n-(define_insn \"*cmovdi_internal_astep\"\n-  [(set (match_operand:DI 0 \"register_operand\"\n-\t\t\"=r, r, r,   r, r, r,   r, r, r,   r,*f,*b,*d*e\")\n-\t(if_then_else:DI\n-\t  (match_operator 4 \"predicate_operator\"\n-\t    [(match_operand:BI 1 \"register_operand\"\n-\t\t\" c, c, c,   c, c, c,   c, c, c,   c, c, c,   c\")\n-\t     (const_int 0)])\n-\t  (match_operand:DI 2 \"move_operand\"\n-\t\t\"ri,*f,*b,*d*e,ri,ri,  ri,*f,*b,*d*e,rO,rO,  rK\")\n-\t  (match_operand:DI 3 \"move_operand\"\n-\t\t\"ri,ri,ri,  ri,*f,*b,*d*e,*f,*b,*d*e,rO,rO,  rK\")))]\n-  \"TARGET_A_STEP\n-   && ia64_move_ok (operands[0], operands[2])\n-   && ia64_move_ok (operands[0], operands[3])\"\n-  \"* abort ();\"\n-  [(set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*cmovdi_internal\"\n   [(set (match_operand:DI 0 \"destination_operand\"\n \t   \"= r,  r,  r,   r,  r,  r,   r, r, r,   r, m, Q, *f,*b,*d*e\")\n@@ -4667,8 +4359,7 @@\n \t   \"rim, *f, *b,*d*e,rim,rim, rim,*f,*b,*d*e,rO,*f,rOQ,rO,  rK\")\n \t  (match_operand:DI 3 \"move_operand\"\n \t   \"rim,rim,rim, rim, *f, *b,*d*e,*f,*b,*d*e,rO,*f,rOQ,rO,  rK\")))]\n-  \"! TARGET_A_STEP\n-   && ia64_move_ok (operands[0], operands[2])\n+  \"ia64_move_ok (operands[0], operands[2])\n    && ia64_move_ok (operands[0], operands[3])\"\n   \"* abort ();\"\n   [(set_attr \"predicable\" \"no\")])\n@@ -4759,20 +4450,6 @@\n ;; SImode if_then_else patterns.\n ;;\n \n-(define_insn \"*cmovsi_internal_astep\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,*f,r,*f,r,*f\")\n-\t(if_then_else:SI\n-\t  (match_operator 4 \"predicate_operator\"\n-\t    [(match_operand:BI 1 \"register_operand\" \"c,c,c,c,c,c\")\n-\t     (const_int 0)])\n-\t  (match_operand:SI 2 \"move_operand\" \"0,0,ri*f,rO,ri*f,rO\")\n-\t  (match_operand:SI 3 \"move_operand\" \"ri*f,rO,0,0,ri*f,rO\")))]\n-  \"TARGET_A_STEP\n-   && ia64_move_ok (operands[0], operands[2])\n-   && ia64_move_ok (operands[0], operands[3])\"\n-  \"* abort ();\"\n-  [(set_attr \"predicable\" \"no\")])\n-\n (define_insn \"*cmovsi_internal\"\n   [(set (match_operand:SI 0 \"destination_operand\" \"=r,m,*f,r,m,*f,r,m,*f\")\n \t(if_then_else:SI\n@@ -4783,8 +4460,7 @@\n \t\t    \"0,0,0,rim*f,rO,rO,rim*f,rO,rO\")\n \t  (match_operand:SI 3 \"move_operand\"\n \t\t    \"rim*f,rO,rO,0,0,0,rim*f,rO,rO\")))]\n-  \"! TARGET_A_STEP\n-   && ia64_move_ok (operands[0], operands[2])\n+  \"ia64_move_ok (operands[0], operands[2])\n    && ia64_move_ok (operands[0], operands[3])\"\n   \"* abort ();\"\n   [(set_attr \"predicable\" \"no\")])"}]}