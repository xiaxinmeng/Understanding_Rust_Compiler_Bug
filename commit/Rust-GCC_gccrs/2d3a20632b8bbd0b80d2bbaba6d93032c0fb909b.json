{"sha": "2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQzYTIwNjMyYjhiYmQwYjgwZDJiYmFiYTZkOTMwMzJjMGZiOTA5Yg==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-11-22T20:53:36Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-11-22T20:53:36Z"}, "message": "re PR other/63694 (Build error compiling asan.c: strtoull undeclared)\n\n\tPR other/63694\n\t* libiberty/configure.ac: Check for strtol, strtoul, strtoll and strtoull\n\tdeclarations.\n\t* libiberty/configure: Regenerated.\n\t* gcc/configure.ac: Check for strtol, strtoul, strtoll and strtoull\n\tdeclarations.\n\t* gcc/configure: Regenerated.\n\t* gcc/config.in: Regenerated.\n\nFrom-SVN: r217972", "tree": {"sha": "53e17c2fe4cf83e296c689afa4ca907520223d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53e17c2fe4cf83e296c689afa4ca907520223d09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/comments", "author": null, "committer": null, "parents": [{"sha": "c1b4f9c6ecf054ce3a2aa3c9e3c1f4fdfd8f10fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b4f9c6ecf054ce3a2aa3c9e3c1f4fdfd8f10fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b4f9c6ecf054ce3a2aa3c9e3c1f4fdfd8f10fd"}], "stats": {"total": 76, "additions": 74, "deletions": 2}, "files": [{"sha": "9cc0198c5c1fa8591121774028a4e5c33a7b1c7f", "filename": "gcc/config.in", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "patch": "@@ -952,6 +952,34 @@\n #endif\n \n \n+/* Define to 1 if we found a declaration for 'strtol', otherwise define to 0.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_STRTOL\n+#endif\n+\n+\n+/* Define to 1 if we found a declaration for 'strtoll', otherwise define to 0.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_STRTOLL\n+#endif\n+\n+\n+/* Define to 1 if we found a declaration for 'strtoul', otherwise define to 0.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_STRTOUL\n+#endif\n+\n+\n+/* Define to 1 if we found a declaration for 'strtoull', otherwise define to\n+   0. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_STRTOULL\n+#endif\n+\n+\n /* Define to 1 if we found a declaration for 'strverscmp', otherwise define to\n    0. */\n #ifndef USED_FOR_TARGET"}, {"sha": "4f9d1dfdfcebba46ce70c3bbac0065aa854161e5", "filename": "gcc/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "patch": "@@ -10623,6 +10623,7 @@ saved_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS -I${srcdir} -I${srcdir}/../include $GMPINC\"\n for ac_func in getenv atol asprintf sbrk abort atof getcwd getwd \\\n \tstpcpy strnlen strsignal strstr strverscmp \\\n+\tstrtol strtoul strtoll strtoull \\\n \terrno snprintf vsnprintf vasprintf malloc realloc calloc \\\n \tfree basename getopt clock getpagesize ffs clearerr_unlocked feof_unlocked   ferror_unlocked fflush_unlocked fgetc_unlocked fgets_unlocked   fileno_unlocked fprintf_unlocked fputc_unlocked fputs_unlocked   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked   putchar_unlocked putc_unlocked\n do\n@@ -18146,7 +18147,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18149 \"configure\"\n+#line 18150 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18252,7 +18253,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18255 \"configure\"\n+#line 18256 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "2293fb8fc79fd49d77395d0aaf1eaa47046baf22", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "patch": "@@ -1213,6 +1213,7 @@ saved_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS -I${srcdir} -I${srcdir}/../include $GMPINC\"\n gcc_AC_CHECK_DECLS(getenv atol asprintf sbrk abort atof getcwd getwd \\\n \tstpcpy strnlen strsignal strstr strverscmp \\\n+\tstrtol strtoul strtoll strtoull \\\n \terrno snprintf vsnprintf vasprintf malloc realloc calloc \\\n \tfree basename getopt clock getpagesize ffs gcc_UNLOCKED_FUNCS, , ,[\n #include \"ansidecl.h\""}, {"sha": "2007ecc76b1f6055f6523864c3cdf0ebcaf0bbda", "filename": "libiberty/configure", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "patch": "@@ -6698,6 +6698,47 @@ fi\n \n cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_SBRK $ac_have_decl\n+_ACEOF\n+\n+  ac_fn_c_check_decl \"$LINENO\" \"strtol\" \"ac_cv_have_decl_strtol\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_strtol\" = x\"\"yes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_STRTOL $ac_have_decl\n+_ACEOF\n+ac_fn_c_check_decl \"$LINENO\" \"strtoul\" \"ac_cv_have_decl_strtoul\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_strtoul\" = x\"\"yes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_STRTOUL $ac_have_decl\n+_ACEOF\n+ac_fn_c_check_decl \"$LINENO\" \"strtoll\" \"ac_cv_have_decl_strtoll\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_strtoll\" = x\"\"yes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_STRTOLL $ac_have_decl\n+_ACEOF\n+ac_fn_c_check_decl \"$LINENO\" \"strtoull\" \"ac_cv_have_decl_strtoull\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl_strtoull\" = x\"\"yes; then :\n+  ac_have_decl=1\n+else\n+  ac_have_decl=0\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_STRTOULL $ac_have_decl\n _ACEOF\n \n   ac_fn_c_check_decl \"$LINENO\" \"strverscmp\" \"ac_cv_have_decl_strverscmp\" \"$ac_includes_default\""}, {"sha": "922aa86e9b03719135b2b12ee5aad1c0cbd74342", "filename": "libiberty/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=2d3a20632b8bbd0b80d2bbaba6d93032c0fb909b", "patch": "@@ -678,6 +678,7 @@ if test -z \"${setobjs}\"; then\n   AC_CHECK_FUNCS($checkfuncs)\n   AC_CHECK_DECLS([basename(char *), ffs, asprintf, vasprintf, snprintf, vsnprintf])\n   AC_CHECK_DECLS([calloc, getenv, getopt, malloc, realloc, sbrk])\n+  AC_CHECK_DECLS([strtol, strtoul, strtoll, strtoull])\n   AC_CHECK_DECLS([strverscmp])\n   libiberty_NEED_DECLARATION(canonicalize_file_name)\n fi"}]}