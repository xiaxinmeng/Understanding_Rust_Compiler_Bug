{"sha": "db0e6d01ad5dac14ab89ad75ae723891bcedebcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIwZTZkMDFhZDVkYWMxNGFiODlhZDc1YWU3MjM4OTFiY2VkZWJjYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-03T19:42:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-03T19:42:57Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1147", "tree": {"sha": "2f4db798a76013a9b9a89f49b602fb74d3b6cf54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f4db798a76013a9b9a89f49b602fb74d3b6cf54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db0e6d01ad5dac14ab89ad75ae723891bcedebcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db0e6d01ad5dac14ab89ad75ae723891bcedebcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db0e6d01ad5dac14ab89ad75ae723891bcedebcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db0e6d01ad5dac14ab89ad75ae723891bcedebcc/comments", "author": null, "committer": null, "parents": [{"sha": "80f5b9d8135c93cbec206a232bf78328752029da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f5b9d8135c93cbec206a232bf78328752029da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80f5b9d8135c93cbec206a232bf78328752029da"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "78193cba282cdfc1ddde317398b975e4959f6bde", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db0e6d01ad5dac14ab89ad75ae723891bcedebcc/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db0e6d01ad5dac14ab89ad75ae723891bcedebcc/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=db0e6d01ad5dac14ab89ad75ae723891bcedebcc", "patch": "@@ -4858,7 +4858,15 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  || TREE_CODE (TREE_TYPE (TREE_VALUE (arglist))) != REAL_TYPE)\n \treturn CONST0_RTX (TYPE_MODE (TREE_TYPE (exp)));\n \n-      /* Compute the argument.  */\n+      /* Stabilize and compute the argument.  */\n+      if (TREE_CODE (TREE_VALUE (arglist)) != VAR_DECL\n+\t  && TREE_CODE (TREE_VALUE (arglist)) != PARM_DECL)\n+\t{\n+\t  exp = copy_node (exp);\n+\t  arglist = copy_node (arglist);\n+\t  TREE_OPERAND (exp, 1) = arglist;\n+\t  TREE_VALUE (arglist) = save_expr (TREE_VALUE (arglist));\n+\t}\n       op0 = expand_expr (TREE_VALUE (arglist), subtarget, VOIDmode, 0);\n \n       /* Make a suitable register to place result in.  */"}]}