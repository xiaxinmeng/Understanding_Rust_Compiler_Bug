{"sha": "ed16241c6db23013d70b792a64f29080ad48a414", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQxNjI0MWM2ZGIyMzAxM2Q3MGI3OTJhNjRmMjkwODBhZDQ4YTQxNA==", "commit": {"author": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2021-04-17T15:53:33Z"}, "committer": {"name": "Stefan Schulze Frielinghaus", "email": "stefansf@linux.ibm.com", "date": "2021-04-17T15:53:33Z"}, "message": "testsuite: Enable zero-scratch-regs-{8,9,10,11}.c on s390*\n\nOn s390* the only missing part for the mentioned testcases was a load of\na double floating-point zero via a move (in particular for quite old\nmachines) which was added in commit 46c47420a5fefd4d9d02b0db347235dd74e20fb2.\nCommon code implementation is sufficient in order to clear volatile\nGPRs, FPRs, and VRs.  Access registers a0 and a1 are nonvolatile and not\ncleared.  Therefore, target hook TARGET_ZERO_CALL_USED_REGS is not\nimplemented for s390*.\n\nAdded a target specific test in order to ensure that all call clobbered\nGPRs, FPRs, and VRs are zeroed and all call saved registers are kept.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/zero-scratch-regs-8.c: Enable on s390*.\n\t* c-c++-common/zero-scratch-regs-9.c: Likewise.\n\t* c-c++-common/zero-scratch-regs-10.c: Likewise.\n\t* c-c++-common/zero-scratch-regs-11.c: Likewise.\n\t* gcc.target/s390/zero-scratch-regs-1.c: New test.", "tree": {"sha": "e879cb27fa6e19f1aac6f6fe94b2817b627af9fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e879cb27fa6e19f1aac6f6fe94b2817b627af9fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed16241c6db23013d70b792a64f29080ad48a414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed16241c6db23013d70b792a64f29080ad48a414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed16241c6db23013d70b792a64f29080ad48a414", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed16241c6db23013d70b792a64f29080ad48a414/comments", "author": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stefan-sf-ibm", "id": 73470131, "node_id": "MDQ6VXNlcjczNDcwMTMx", "avatar_url": "https://avatars.githubusercontent.com/u/73470131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-sf-ibm", "html_url": "https://github.com/stefan-sf-ibm", "followers_url": "https://api.github.com/users/stefan-sf-ibm/followers", "following_url": "https://api.github.com/users/stefan-sf-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-sf-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-sf-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-sf-ibm/subscriptions", "organizations_url": "https://api.github.com/users/stefan-sf-ibm/orgs", "repos_url": "https://api.github.com/users/stefan-sf-ibm/repos", "events_url": "https://api.github.com/users/stefan-sf-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-sf-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bda519596543e49f77914b5677693e86be5d01d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda519596543e49f77914b5677693e86be5d01d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bda519596543e49f77914b5677693e86be5d01d0"}], "stats": {"total": 73, "additions": 69, "deletions": 4}, "files": [{"sha": "96e0b79b328c363adb5f073c9a49e321c3b91277", "filename": "gcc/testsuite/c-c++-common/zero-scratch-regs-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-10.c?ref=ed16241c6db23013d70b792a64f29080ad48a414", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* nvptx*-*-* } } } */\n+/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* nvptx*-*-* s390*-*-* } } } */\n /* { dg-options \"-O2\" } */\n \n #include <assert.h>"}, {"sha": "0714f95a04f387ab81f6fd1dca962e3446f3a3f6", "filename": "gcc/testsuite/c-c++-common/zero-scratch-regs-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-11.c?ref=ed16241c6db23013d70b792a64f29080ad48a414", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* arm*-*-* nvptx*-*-* } } } */\n+/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* arm*-*-* nvptx*-*-* s390*-*-* } } } */\n /* { dg-options \"-O2 -fzero-call-used-regs=all\" } */\n \n #include \"zero-scratch-regs-10.c\""}, {"sha": "aceda7e5cb8de200b7bd8ea4524a97ca3906e641", "filename": "gcc/testsuite/c-c++-common/zero-scratch-regs-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-8.c?ref=ed16241c6db23013d70b792a64f29080ad48a414", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* arm*-*-* nvptx*-*-* } } } */\n+/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* arm*-*-* nvptx*-*-* s390*-*-* } } } */\n /* { dg-options \"-O2 -fzero-call-used-regs=all-arg\" } */\n \n #include \"zero-scratch-regs-1.c\""}, {"sha": "f3152a7a732b0de818c4bcb26b02565902b37202", "filename": "gcc/testsuite/c-c++-common/zero-scratch-regs-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fzero-scratch-regs-9.c?ref=ed16241c6db23013d70b792a64f29080ad48a414", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* arm*-*-* nvptx*-*-* } } } */\n+/* { dg-skip-if \"not implemented\" { ! { i?86*-*-* x86_64*-*-* sparc*-*-* aarch64*-*-* arm*-*-* nvptx*-*-* s390*-*-* } } } */\n /* { dg-options \"-O2 -fzero-call-used-regs=all\" } */\n \n #include \"zero-scratch-regs-1.c\""}, {"sha": "c394c4b69e70e0ec60bc14e55cb2da6d6807a00c", "filename": "gcc/testsuite/gcc.target/s390/zero-scratch-regs-1.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzero-scratch-regs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed16241c6db23013d70b792a64f29080ad48a414/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzero-scratch-regs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzero-scratch-regs-1.c?ref=ed16241c6db23013d70b792a64f29080ad48a414", "patch": "@@ -0,0 +1,65 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fzero-call-used-regs=all -march=z13\" } */\n+\n+/* Ensure that all call clobbered GPRs, FPRs, and VRs are zeroed and all call\n+   saved registers are kept. */\n+\n+void foo (void) { }\n+\n+/* { dg-final { scan-assembler-times \"lhi\\t\" 6 { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lhi\\t%r0,0\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lhi\\t%r1,0\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lhi\\t%r2,0\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lhi\\t%r3,0\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lhi\\t%r4,0\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lhi\\t%r5,0\" { target { ! lp64 } } } } */\n+\n+/* { dg-final { scan-assembler-times \"lzdr\\t\" 14 { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f0\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f1\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f2\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f3\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f5\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f7\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f8\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f9\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f10\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f11\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f12\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f13\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f14\" { target { ! lp64 } } } } */\n+/* { dg-final { scan-assembler \"lzdr\\t%f15\" { target { ! lp64 } } } } */\n+\n+/* { dg-final { scan-assembler-times \"lghi\\t\" 6 { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"lghi\\t%r0,0\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"lghi\\t%r1,0\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"lghi\\t%r2,0\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"lghi\\t%r3,0\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"lghi\\t%r4,0\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"lghi\\t%r5,0\" { target { lp64 } } } } */\n+\n+/* { dg-final { scan-assembler-times \"vzero\\t\" 24 { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v0\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v1\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v2\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v3\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v4\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v5\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v6\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v7\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v16\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v17\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v18\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v19\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v20\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v21\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v22\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v23\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v24\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v25\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v26\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v27\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v28\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v29\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v30\" { target { lp64 } } } } */\n+/* { dg-final { scan-assembler \"vzero\\t%v31\" { target { lp64 } } } } */"}]}