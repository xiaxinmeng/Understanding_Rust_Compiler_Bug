{"sha": "8c796d19cf048a6a0aea3ee19a0377e7e9a02351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM3OTZkMTljZjA0OGE2YTBhZWEzZWUxOWEwMzc3ZTdlOWEwMjM1MQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2013-09-25T16:25:32Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2013-09-25T16:25:32Z"}, "message": "* Makefile.in (c-family/cppspec.o, c-family/c-common.o)\n\t(c-family/c-cppbuiltin.o, c-family/c-dump.o, c-family/c-format.o)\n\t(c-family/c-gimplify.o, c-family/c-lex.o, c-family/c-omp.o)\n\t(c-family/c-opts.o, c-family/c-pch.o, c-family/c-ppoutput.o)\n\t(c-family/c-pragma.o, c-family/c-pretty-print.o)\n\t(c-family/c-semantics.o, c-family/c-ada-spec.o)\n\t(c-family/array-notation-common.o, c-family/stub-objc.o)\n\t(c-family/c-ubsan.o): Remove.\n\nFrom-SVN: r202903", "tree": {"sha": "6be4f27970817d46a09a65812dbac6aeb16b9e0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6be4f27970817d46a09a65812dbac6aeb16b9e0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c796d19cf048a6a0aea3ee19a0377e7e9a02351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c796d19cf048a6a0aea3ee19a0377e7e9a02351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c796d19cf048a6a0aea3ee19a0377e7e9a02351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c796d19cf048a6a0aea3ee19a0377e7e9a02351/comments", "author": null, "committer": null, "parents": [{"sha": "76af5b38b58ea089da29898df37fd6dacc367d94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76af5b38b58ea089da29898df37fd6dacc367d94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76af5b38b58ea089da29898df37fd6dacc367d94"}], "stats": {"total": 93, "additions": 12, "deletions": 81}, "files": [{"sha": "deae9f8054fcc6a0e2a80392a7139f98c5805ea0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c796d19cf048a6a0aea3ee19a0377e7e9a02351/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c796d19cf048a6a0aea3ee19a0377e7e9a02351/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c796d19cf048a6a0aea3ee19a0377e7e9a02351", "patch": "@@ -1,3 +1,14 @@\n+2013-09-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in (c-family/cppspec.o, c-family/c-common.o)\n+\t(c-family/c-cppbuiltin.o, c-family/c-dump.o, c-family/c-format.o)\n+\t(c-family/c-gimplify.o, c-family/c-lex.o, c-family/c-omp.o)\n+\t(c-family/c-opts.o, c-family/c-pch.o, c-family/c-ppoutput.o)\n+\t(c-family/c-pragma.o, c-family/c-pretty-print.o)\n+\t(c-family/c-semantics.o, c-family/c-ada-spec.o)\n+\t(c-family/array-notation-common.o, c-family/stub-objc.o)\n+\t(c-family/c-ubsan.o): Remove.\n+\n 2013-09-25  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in (C_TREE_H): Reference c/c-tree.h."}, {"sha": "b30a5f8d83a456e40b5cc9cc95d9e483df3bc7c1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 81, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c796d19cf048a6a0aea3ee19a0377e7e9a02351/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c796d19cf048a6a0aea3ee19a0377e7e9a02351/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8c796d19cf048a6a0aea3ee19a0377e7e9a02351", "patch": "@@ -1972,92 +1972,12 @@ lto-wrapper.o: lto-wrapper.c $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h \\\n \t$(OBSTACK_H) $(DIAGNOSTIC_H) $(OPTS_H) $(OPTIONS_H)\n \n # Files used by all variants of C or by the stand-alone pre-processor.\n-c-family/cppspec.o: c-family/cppspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-    $(TM_H) $(GCC_H) $(OPTS_H)\n-\n-c-family/c-common.o : c-family/c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(TREE_H) \\\n-\t$(OBSTACK_H) $(C_COMMON_H) $(FLAGS_H) toplev.h output.h $(C_PRAGMA_H) \\\n-\t$(GGC_H) builtin-types.def builtin-attrs.def \\\n-\t$(DIAGNOSTIC_H) langhooks.h c-family/c-objc.h \\\n-\t$(TARGET_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n-\tintl.h $(OPTS_H) $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n-\t$(BUILTINS_DEF) $(CGRAPH_H) $(TARGET_DEF_H) \\\n-\tgt-c-family-c-common.h $(COMMON_TARGET_H)\n-\n-c-family/c-cppbuiltin.o : c-family/c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TM_H) $(TREE_H) version.h $(C_COMMON_H) $(C_PRAGMA_H) \\\n-\t$(FLAGS_H) output.h $(TREE_H) $(TARGET_H) $(COMMON_TARGET_H) \\\n-\t$(TM_P_H) debug.h $(CPP_ID_DATA_H) cppbuiltin.h\n-\n-c-family/c-dump.o : c-family/c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(TREE_H) $(TREE_DUMP_H)\n-\n-c-family/c-format.o : c-family/c-format.c c-family/c-format.h \\\n-\t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) langhooks.h \\\n-\t$(C_COMMON_H) $(FLAGS_H) intl.h $(C_TARGET_H) \\\n-\t$(DIAGNOSTIC_CORE_H) alloc-pool.h c-family/c-objc.h\n-\n-c-family/c-gimplify.o : c-family/c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-\t$(C_COMMON_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) \\\n-\t$(FLAGS_H) langhooks.h $(LANGHOOKS_DEF_H) \\\n-\t$(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) \\\n-\t$(DUMPFILE_H) $(TREE_INLINE_H)\n-\n-c-family/c-lex.o : c-family/c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(TREE_H) $(FIXED_VALUE_H) debug.h $(C_COMMON_H) $(SPLAY_TREE_H) \\\n-\t$(C_PRAGMA_H) $(INPUT_H) intl.h $(FLAGS_H) \\\n-\t$(CPPLIB_H) $(TARGET_H) $(TIMEVAR_H)\n-\n-c-family/c-omp.o : c-family/c-omp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TREE_H) $(C_COMMON_H) $(GIMPLE_H) langhooks.h\n \n CFLAGS-c-family/c-opts.o += @TARGET_SYSTEM_ROOT_DEFINE@\n-c-family/c-opts.o : c-family/c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-        $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) toplev.h langhooks.h \\\n-        $(DIAGNOSTIC_H) intl.h debug.h $(C_COMMON_H) $(C_TARGET_H) \\\n-        $(OPTS_H) $(OPTIONS_H) $(MKDEPS_H) incpath.h cppdefault.h\n \n CFLAGS-c-family/c-pch.o += -DHOST_MACHINE=\\\"$(host)\\\" \\\n \t-DTARGET_MACHINE=\\\"$(target)\\\"\n-c-family/c-pch.o : c-family/c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(CPPLIB_H) $(TREE_H) $(C_COMMON_H) output.h $(C_PRAGMA_H) \\\n-\t$(GGC_H) debug.h langhooks.h $(FLAGS_H) hosthooks.h version.h \\\n-\t$(TARGET_H) $(OPTS_H) $(TIMEVAR_H)\n-\n-c-family/c-ppoutput.o : c-family/c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(C_COMMON_H) $(TREE_H) $(CPPLIB_H) $(CPP_INTERNAL_H) \\\n-\t$(C_PRAGMA_H)\n-\n-c-family/c-pragma.o: c-family/c-pragma.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(TREE_H) $(FUNCTION_H) $(C_PRAGMA_H) output.h \\\n-\t$(TM_P_H) $(C_COMMON_H) $(TARGET_H) $(CPPLIB_H) $(FLAGS_H) \\\n-\t$(DIAGNOSTIC_H) $(OPTS_H) $(PLUGINS_H) \\\n-\tgt-c-family-c-pragma.h\n-\n-c-family/c-pretty-print.o : c-family/c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n-\t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(DIAGNOSTIC_H) tree-iterator.h intl.h $(TREE_PRETTY_PRINT_H)\n-\n-c-family/c-semantics.o : c-family/c-semantics.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) \\\n-\t$(C_COMMON_H) $(FUNCTION_H) langhooks.h $(SPLAY_TREE_H) $(TIMEVAR_H) \\\n-\ttree-iterator.h\n-\n-c-family/c-ada-spec.o : c-family/c-ada-spec.c c-family/c-ada-spec.h \\\n-\t$(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPP_ID_DATA_H) $(TM_H) \\\n-\tcoretypes.h tree-iterator.h $(DUMPFILE_H)\n-\n-c-family/array-notation-common.o : c-family/array-notation-common.c $(TREE_H) \\\n-\t$(SYSTEM_H) $(TREE_H) coretypes.h tree-iterator.h $(DIAGNOSTIC_CORE_H)\n-\n-c-family/stub-objc.o : c-family/stub-objc.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TREE_H) $(C_COMMON_H) c-family/c-objc.h\n-\n-c-family/c-ubsan.o : c-family/c-ubsan.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TREE_H) $(C_COMMON_H) c-family/c-ubsan.h \\\n-\talloc-pool.h $(CGRAPH_H) $(GIMPLE_H) $(HASH_TABLE_H) output.h \\\n-\ttoplev.h ubsan.h\n+\n default-c.o: config/default-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(C_TARGET_H) $(C_TARGET_DEF_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\"}]}