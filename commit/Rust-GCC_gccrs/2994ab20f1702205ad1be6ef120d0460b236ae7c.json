{"sha": "2994ab20f1702205ad1be6ef120d0460b236ae7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk5NGFiMjBmMTcwMjIwNWFkMWJlNmVmMTIwZDA0NjBiMjM2YWU3Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-12-16T17:26:20Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-12-16T17:26:20Z"}, "message": "ipa-cp.c (ipa_get_indirect_edge_target_1): Use can_refer; do not speculate to impossible targets.\n\n\n\t* ipa-cp.c (ipa_get_indirect_edge_target_1): Use can_refer; do not\n\tspeculate to impossible targets.\n\t* ipa-prop.c (try_make_edge_direct_virtual_call): Likewise.\n\nFrom-SVN: r231705", "tree": {"sha": "fdf0ac7629ddac3966a0a7ce9814ca63b3387581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdf0ac7629ddac3966a0a7ce9814ca63b3387581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2994ab20f1702205ad1be6ef120d0460b236ae7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2994ab20f1702205ad1be6ef120d0460b236ae7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2994ab20f1702205ad1be6ef120d0460b236ae7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2994ab20f1702205ad1be6ef120d0460b236ae7c/comments", "author": null, "committer": null, "parents": [{"sha": "8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8062bca66dc0acfaf7b5d2659ee5ca4381fea9e8"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "323c8d19b2c399562bb6a80fef35dda478865c68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2994ab20f1702205ad1be6ef120d0460b236ae7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2994ab20f1702205ad1be6ef120d0460b236ae7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2994ab20f1702205ad1be6ef120d0460b236ae7c", "patch": "@@ -1,3 +1,9 @@\n+2015-12-10  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-cp.c (ipa_get_indirect_edge_target_1): Use can_refer; do not\n+\tspeculate to impossible targets.\n+\t* ipa-prop.c (try_make_edge_direct_virtual_call): Likewise.\n+\n 2015-12-16  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "782df710e4672928261474aceeab0dd4a321022a", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2994ab20f1702205ad1be6ef120d0460b236ae7c/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2994ab20f1702205ad1be6ef120d0460b236ae7c/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=2994ab20f1702205ad1be6ef120d0460b236ae7c", "patch": "@@ -2077,15 +2077,22 @@ ipa_get_indirect_edge_target_1 (struct cgraph_edge *ie,\n       unsigned HOST_WIDE_INT offset;\n       if (vtable_pointer_value_to_vtable (t, &vtable, &offset))\n \t{\n+\t  bool can_refer;\n \t  target = gimple_get_virt_method_for_vtable (ie->indirect_info->otr_token,\n-\t\t\t\t\t\t      vtable, offset);\n-\t  if (target)\n+\t\t\t\t\t\t      vtable, offset, &can_refer);\n+\t  if (can_refer)\n \t    {\n-\t      if ((TREE_CODE (TREE_TYPE (target)) == FUNCTION_TYPE\n-\t\t   && DECL_FUNCTION_CODE (target) == BUILT_IN_UNREACHABLE)\n+\t      if (!target\n+\t\t  || (TREE_CODE (TREE_TYPE (target)) == FUNCTION_TYPE\n+\t\t      && DECL_FUNCTION_CODE (target) == BUILT_IN_UNREACHABLE)\n \t\t  || !possible_polymorphic_call_target_p\n \t\t       (ie, cgraph_node::get (target)))\n-\t\ttarget = ipa_impossible_devirt_target (ie, target);\n+\t\t{\n+\t\t  /* Do not speculate builtin_unreachable, it is stupid!  */\n+\t\t  if (ie->indirect_info->vptr_changed)\n+\t\t    return NULL;\n+\t\t  target = ipa_impossible_devirt_target (ie, target);\n+\t\t}\n               *speculative = ie->indirect_info->vptr_changed;\n \t      if (!*speculative)\n \t        return target;\n@@ -2163,7 +2170,11 @@ ipa_get_indirect_edge_target_1 (struct cgraph_edge *ie,\n \n   if (target && !possible_polymorphic_call_target_p (ie,\n \t\t\t\t\t\t     cgraph_node::get (target)))\n-    target = ipa_impossible_devirt_target (ie, target);\n+    {\n+      if (*speculative)\n+\treturn NULL;\n+      target = ipa_impossible_devirt_target (ie, target);\n+    }\n \n   return target;\n }"}, {"sha": "0ab24274004d02c2bccef0fa4868f68672de2ae5", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2994ab20f1702205ad1be6ef120d0460b236ae7c/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2994ab20f1702205ad1be6ef120d0460b236ae7c/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=2994ab20f1702205ad1be6ef120d0460b236ae7c", "patch": "@@ -2898,18 +2898,22 @@ try_make_edge_direct_virtual_call (struct cgraph_edge *ie,\n \t\t\t\t\t   true);\n       if (t && vtable_pointer_value_to_vtable (t, &vtable, &offset))\n \t{\n+\t  bool can_refer;\n \t  t = gimple_get_virt_method_for_vtable (ie->indirect_info->otr_token,\n-\t\t\t\t\t\t      vtable, offset);\n-\t  if (t)\n+\t\t\t\t\t\t vtable, offset, &can_refer);\n+\t  if (can_refer)\n \t    {\n-\t      if ((TREE_CODE (TREE_TYPE (t)) == FUNCTION_TYPE\n-\t\t   && DECL_FUNCTION_CODE (t) == BUILT_IN_UNREACHABLE)\n+\t      if (!t\n+\t\t  || (TREE_CODE (TREE_TYPE (t)) == FUNCTION_TYPE\n+\t\t      && DECL_FUNCTION_CODE (t) == BUILT_IN_UNREACHABLE)\n \t\t  || !possible_polymorphic_call_target_p\n \t\t       (ie, cgraph_node::get (t)))\n \t\t{\n \t\t  /* Do not speculate builtin_unreachable, it is stupid!  */\n \t\t  if (!ie->indirect_info->vptr_changed)\n \t\t    target = ipa_impossible_devirt_target (ie, target);\n+\t\t  else\n+\t\t    target = NULL;\n \t\t}\n \t      else\n \t\t{"}]}