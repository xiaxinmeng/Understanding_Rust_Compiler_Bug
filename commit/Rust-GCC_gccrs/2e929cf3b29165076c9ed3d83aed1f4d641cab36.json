{"sha": "2e929cf3b29165076c9ed3d83aed1f4d641cab36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU5MjljZjNiMjkxNjUwNzZjOWVkM2Q4M2FlZDFmNGQ2NDFjYWIzNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2006-10-27T22:47:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-10-27T22:47:47Z"}, "message": "builtins.c (fold_builtin): Don't generate NOP_EXPR that is going to be thrown away soon when IGNORE is set.\n\n\t* builtins.c (fold_builtin): Don't generate NOP_EXPR that is going\n\tto be thrown away soon when IGNORE is set.\n\t* tree-ssa-ccp.c (convert_to_gimple_builtin): Add IGNORE argument\n\tindicating when return value shall not be computed.\n\t* gimplify.c (internal_get_tmp_var): Avoid random tree sharing.\n\nFrom-SVN: r118091", "tree": {"sha": "d5a9c18533ff3873d00dd0addf661c1122cbcce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5a9c18533ff3873d00dd0addf661c1122cbcce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e929cf3b29165076c9ed3d83aed1f4d641cab36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e929cf3b29165076c9ed3d83aed1f4d641cab36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e929cf3b29165076c9ed3d83aed1f4d641cab36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e929cf3b29165076c9ed3d83aed1f4d641cab36/comments", "author": null, "committer": null, "parents": [{"sha": "cfe1b18f45699de86d625e28ccb4725a46eaae4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe1b18f45699de86d625e28ccb4725a46eaae4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfe1b18f45699de86d625e28ccb4725a46eaae4e"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "eee8ad3c6b2594ae1539285d561450d620c321d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e929cf3b29165076c9ed3d83aed1f4d641cab36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e929cf3b29165076c9ed3d83aed1f4d641cab36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e929cf3b29165076c9ed3d83aed1f4d641cab36", "patch": "@@ -1,3 +1,11 @@\n+2006-10-27  Jan Hubicka  <jh@suse.cz>\n+\n+\t* builtins.c (fold_builtin): Don't generate NOP_EXPR that is going\n+\tto be thrown away soon when IGNORE is set.\n+\t* tree-ssa-ccp.c (convert_to_gimple_builtin): Add IGNORE argument\n+\tindicating when return value shall not be computed.\n+\t* gimplify.c (internal_get_tmp_var): Avoid random tree sharing.\n+\n 2006-10-27  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* config/i386/i386.h (TARGET_GEODE):"}, {"sha": "fec89cc225b2e779f375fbf7e268216ca5e33a3e", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e929cf3b29165076c9ed3d83aed1f4d641cab36/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e929cf3b29165076c9ed3d83aed1f4d641cab36/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=2e929cf3b29165076c9ed3d83aed1f4d641cab36", "patch": "@@ -9273,7 +9273,7 @@ tree\n fold_builtin (tree fndecl, tree arglist, bool ignore)\n {\n   tree exp = fold_builtin_1 (fndecl, arglist, ignore);\n-  if (exp)\n+  if (exp && !ignore)\n     {\n       exp = build1 (NOP_EXPR, TREE_TYPE (exp), exp);\n       TREE_NO_WARNING (exp) = 1;"}, {"sha": "fedc2842229b5437475bbe01b47ed3fe545c6cf3", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e929cf3b29165076c9ed3d83aed1f4d641cab36/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e929cf3b29165076c9ed3d83aed1f4d641cab36/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=2e929cf3b29165076c9ed3d83aed1f4d641cab36", "patch": "@@ -609,7 +609,7 @@ internal_get_tmp_var (tree val, tree *pre_p, tree *post_p, bool is_formal)\n   if (TREE_CODE (TREE_TYPE (t)) == COMPLEX_TYPE)\n     DECL_COMPLEX_GIMPLE_REG_P (t) = 1;\n \n-  mod = build2 (INIT_EXPR, TREE_TYPE (t), t, val);\n+  mod = build2 (INIT_EXPR, TREE_TYPE (t), t, unshare_expr (val));\n \n   if (EXPR_HAS_LOCATION (val))\n     SET_EXPR_LOCUS (mod, EXPR_LOCUS (val));"}, {"sha": "3be926d9ccea0fce5185cd14391b1fa75a0d4c51", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e929cf3b29165076c9ed3d83aed1f4d641cab36/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e929cf3b29165076c9ed3d83aed1f4d641cab36/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=2e929cf3b29165076c9ed3d83aed1f4d641cab36", "patch": "@@ -2465,17 +2465,24 @@ fold_stmt_inplace (tree stmt)\n \f\n /* Convert EXPR into a GIMPLE value suitable for substitution on the\n    RHS of an assignment.  Insert the necessary statements before\n-   iterator *SI_P.  */\n+   iterator *SI_P. \n+   When IGNORE is set, don't worry about the return value.  */\n \n static tree\n-convert_to_gimple_builtin (block_stmt_iterator *si_p, tree expr)\n+convert_to_gimple_builtin (block_stmt_iterator *si_p, tree expr, bool ignore)\n {\n   tree_stmt_iterator ti;\n   tree stmt = bsi_stmt (*si_p);\n   tree tmp, stmts = NULL;\n \n   push_gimplify_context ();\n-  tmp = get_initialized_tmp_var (expr, &stmts, NULL);\n+  if (ignore)\n+    {\n+      tmp = build_empty_stmt ();\n+      gimplify_and_add (expr, &stmts);\n+    }\n+  else\n+    tmp = get_initialized_tmp_var (expr, &stmts, NULL);\n   pop_gimplify_context (NULL);\n \n   if (EXPR_HAS_LOCATION (stmt))\n@@ -2551,7 +2558,9 @@ execute_fold_all_builtins (void)\n \n \t  if (!set_rhs (stmtp, result))\n \t    {\n-\t      result = convert_to_gimple_builtin (&i, result);\n+\t      result = convert_to_gimple_builtin (&i, result,\n+\t\t\t      \t\t\t  TREE_CODE (old_stmt)\n+\t\t\t\t\t\t  != MODIFY_EXPR);\n \t      if (result)\n \t\t{\n \t\t  bool ok = set_rhs (stmtp, result);"}]}