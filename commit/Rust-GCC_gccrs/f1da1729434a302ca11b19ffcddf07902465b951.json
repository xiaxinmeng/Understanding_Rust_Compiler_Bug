{"sha": "f1da1729434a302ca11b19ffcddf07902465b951", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFkYTE3Mjk0MzRhMzAyY2ExMWIxOWZmY2RkZjA3OTAyNDY1Yjk1MQ==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1998-10-08T03:30:32Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-08T03:30:32Z"}, "message": "flags.h (flag_branch_on_count_reg): Always declare\n\n\t* flags.h (flag_branch_on_count_reg): Always declare\n\t* toplev.c (flag_branch_on_count_reg): Likewise.\n\t* toplev.c: Fix typos.\n\nFrom-SVN: r22910", "tree": {"sha": "922ff2ad90e37c0eadb3635732657f43c928b7bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/922ff2ad90e37c0eadb3635732657f43c928b7bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1da1729434a302ca11b19ffcddf07902465b951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1da1729434a302ca11b19ffcddf07902465b951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1da1729434a302ca11b19ffcddf07902465b951", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1da1729434a302ca11b19ffcddf07902465b951/comments", "author": null, "committer": null, "parents": [{"sha": "eba0c7243e08459f3b7210bb4c2cdb550712a999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eba0c7243e08459f3b7210bb4c2cdb550712a999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eba0c7243e08459f3b7210bb4c2cdb550712a999"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "3ecdb777ea810690e271feb87baaa6ebeac5942a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1da1729434a302ca11b19ffcddf07902465b951/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1da1729434a302ca11b19ffcddf07902465b951/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1da1729434a302ca11b19ffcddf07902465b951", "patch": "@@ -1,5 +1,9 @@\n Thu Oct  8 04:26:20 1998  Michael Hayes <m.hayes@elec.canterbury.ac.nz>\n \n+\t* flags.h (flag_branch_on_count_reg): Always declare \n+\t* toplev.c (flag_branch_on_count_reg): Likewise.\n+\t* toplev.c: Fix typos.\n+\n \t* real.c (c4xtoe): Remove unused variables.  Add some missing parens.\n \t(toc4x): Similarly.\n "}, {"sha": "7c853d0b259a4dfb680fc02879e471e51eb0a795", "filename": "gcc/flags.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1da1729434a302ca11b19ffcddf07902465b951/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1da1729434a302ca11b19ffcddf07902465b951/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=f1da1729434a302ca11b19ffcddf07902465b951", "patch": "@@ -345,11 +345,11 @@ extern int flag_schedule_interblock;\n extern int flag_schedule_speculative;\n extern int flag_schedule_speculative_load;\n extern int flag_schedule_speculative_load_dangerous;\n+#endif  /* HAIFA */\n \n /* flag_on_branch_count_reg means try to replace add-1,compare,branch tupple\n    by a cheaper branch, on a count register. */\n extern int flag_branch_on_count_reg;\n-#endif  /* HAIFA */\n \n \n /* Nonzero means put things in delayed-branch slots if supported. */"}, {"sha": "e2ddcaf40675b40ade3c01e49ebaf161a5ea8bbb", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1da1729434a302ca11b19ffcddf07902465b951/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1da1729434a302ca11b19ffcddf07902465b951/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=f1da1729434a302ca11b19ffcddf07902465b951", "patch": "@@ -654,12 +654,11 @@ int flag_schedule_interblock = 1;\n int flag_schedule_speculative = 1;\n int flag_schedule_speculative_load = 0;\n int flag_schedule_speculative_load_dangerous = 0;\n+#endif  /* HAIFA */\n \n /* flag_on_branch_count_reg means try to replace add-1,compare,branch tupple\n    by a cheaper branch, on a count register. */\n int flag_branch_on_count_reg;\n-#endif  /* HAIFA */\n-\n \n /* -finhibit-size-directive inhibits output of .size for ELF.\n    This is used only for compiling crtstuff.c, \n@@ -806,7 +805,7 @@ lang_independent_options f_options[] =\n   {\"unroll-loops\", &flag_unroll_loops, 1,\n    \"Perform loop unrolling when interation count is known\" },\n   {\"unroll-all-loops\", &flag_unroll_all_loops, 1,\n-   \"Perofm loop onrolling for all loops\" },\n+   \"Perform loop unrolling for all loops\" },\n   {\"move-all-movables\", &flag_move_all_movables, 1,\n    \"Force all loop invariant computations out of loops\" },\n   {\"reduce-all-givs\", &flag_reduce_all_givs, 1,\n@@ -862,9 +861,9 @@ lang_independent_options f_options[] =\n    \"Allow speculative motion of some loads\" },\n   {\"sched-spec-load-dangerous\",&flag_schedule_speculative_load_dangerous, 1,\n    \"Allow speculative motion of more loads\" },\n+#endif  /* HAIFA */\n   {\"branch-count-reg\",&flag_branch_on_count_reg, 1,\n    \"Replace add,compare,branch with branch on count reg\"},\n-#endif  /* HAIFA */\n   {\"pic\", &flag_pic, 1,\n    \"Generate position independent code, if possible\"},\n   {\"PIC\", &flag_pic, 2, \"\"},"}]}