{"sha": "85872a69ee1b123557c7c352d45ef608e70b20fb", "node_id": "C_kwDOANBUbNoAKDg1ODcyYTY5ZWUxYjEyMzU1N2M3YzM1MmQ0NWVmNjA4ZTcwYjIwZmI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-05T00:17:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-05T00:17:25Z"}, "message": "Daily bump.", "tree": {"sha": "011921da35d21adffbe62892bd586ecba4bc72af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/011921da35d21adffbe62892bd586ecba4bc72af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85872a69ee1b123557c7c352d45ef608e70b20fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85872a69ee1b123557c7c352d45ef608e70b20fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85872a69ee1b123557c7c352d45ef608e70b20fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85872a69ee1b123557c7c352d45ef608e70b20fb/comments", "author": null, "committer": null, "parents": [{"sha": "ce3a1b5976079b1467473b4628f05797fd2eae08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3a1b5976079b1467473b4628f05797fd2eae08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3a1b5976079b1467473b4628f05797fd2eae08"}], "stats": {"total": 278, "additions": 277, "deletions": 1}, "files": [{"sha": "06e188e8e99726aa85032f3cbc1186748de9e0be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1,3 +1,87 @@\n+2022-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* attribs.h (remove_attribute): Declare overload with additional\n+\tattr_ns argument.\n+\t(private_lookup_attribute): Declare overload with additional\n+\tattr_ns and attr_ns_len arguments.\n+\t(lookup_attribute): New overload with additional attr_ns argument.\n+\t* attribs.cc (remove_attribute): New overload with additional\n+\tattr_ns argument.\n+\t(private_lookup_attribute): New overload with additional\n+\tattr_ns and attr_ns_len arguments.\n+\n+2022-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* attribs.cc (handle_ignored_attributes_option, decl_attributes,\n+\tcommon_function_versions): Use auto_diagnostic_group.\n+\n+2022-10-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (irange::set_nonzero_bits): Remove assert.\n+\n+2022-10-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.h (AARCH64_ISA_RCPC): New macro.\n+\t* config/aarch64/aarch64-arches.def (armv8.3-a): Include RCPC.\n+\t* config/aarch64/aarch64-cores.def (thunderx3t110, zeus, neoverse-v1)\n+\t(neoverse-512tvb, saphira): Remove RCPC from these Armv8.3-A+ cores.\n+\t* config/aarch64/aarch64-c.cc (aarch64_update_cpp_builtins): Define\n+\t__ARM_FEATURE_RCPC when appropriate.\n+\n+2022-10-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* doc/invoke.texi (-fopenmp): Mention C++ attribut syntax.\n+\t(-fopenmp-simd): Likewise; update permitted directives.\n+\n+2022-10-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* doc/install.texi (Specific): Add missing items to bullet list.\n+\t(amdgcn): Update LLVM requirements, use version not date for newlib.\n+\t(nvptx): Use version not git hash for newlib.\n+\n+2022-10-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range-storage.cc (irange_storage_slot::set_irange): Remove\n+\tspecial case.\n+\t* value-range.cc (irange::irange_set): Adjust for nonzero mask\n+\tbeing a wide int.\n+\t(irange::irange_set_anti_range): Same.\n+\t(irange::set): Same.\n+\t(irange::verify_range): Same.\n+\t(irange::legacy_equal_p): Same.\n+\t(irange::operator==): Same.\n+\t(irange::contains_p): Same.\n+\t(irange::legacy_intersect): Same.\n+\t(irange::legacy_union): Same.\n+\t(irange::irange_single_pair_union): Call union_nonzero_bits.\n+\t(irange::irange_union): Same.\n+\t(irange::irange_intersect): Call intersect_nonzero_bits.\n+\t(irange::intersect): Adjust for nonzero mask being a wide int.\n+\t(irange::invert): Same.\n+\t(irange::set_nonzero_bits): Same.\n+\t(irange::get_nonzero_bits_from_range): New.\n+\t(irange::set_range_from_nonzero_bits): New.\n+\t(irange::get_nonzero_bits): Adjust for nonzero mask being a wide\n+\tint.\n+\t(irange::intersect_nonzero_bits): Same.\n+\t(irange::union_nonzero_bits): Same.\n+\t(range_tests_nonzero_bits): Remove test.\n+\t* value-range.h (irange::varying_compatible_p): Adjust for nonzero\n+\tmask being a wide int.\n+\t(gt_ggc_mx): Same.\n+\t(gt_pch_nx): Same.\n+\t(irange::set_undefined): Same.\n+\t(irange::set_varying): Same.\n+\t(irange::normalize_kind): Same.\n+\n+2022-10-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/107130\n+\t* gimple-range-op.cc (class cfn_popcount): Call op_cfn_ffs.\n+\t(class cfn_ffs): New.\n+\t(gimple_range_op_handler::maybe_builtin_call): Separate out\n+\tCASE_CFN_FFS into its own case.\n+\n 2022-10-03  Sergei Trofimovich  <siarheit@google.com>\n \n \t* config/i386/t-i386: Add build-time dependencies against"}, {"sha": "7759c903eed01c732e1f47c45deb985cd36789e0", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1 +1 @@\n-20221004\n+20221005"}, {"sha": "c062fe1556f0d48664e064a3d51176d491f86daf", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1,3 +1,8 @@\n+2022-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-omp.cc (c_omp_directives): Uncomment begin declare target\n+\tentry.\n+\n 2022-10-03  Patrick Palka  <ppalka@redhat.com>\n \n \t* c-common.cc (c_common_reswords): Use RID_IS_SAME instead of"}, {"sha": "48eb23e02380a29a7c7fb34eba59005beb7212f9", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1,3 +1,30 @@\n+2022-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-lang.h (struct c_omp_declare_target_attr): New type.\n+\t(current_omp_declare_target_attribute): Change type from\n+\tint to vec<c_omp_declare_target_attr, va_gc> *.\n+\t* c-parser.cc (c_parser_translation_unit): Adjust for that change.\n+\tIf last pushed directive was begin declare target, use different\n+\twording and simplify format strings for easier translations.\n+\t(c_parser_omp_clause_device_type): Uncomment\n+\tcheck_no_duplicate_clause call.\n+\t(c_parser_omp_declare_target): Adjust for the\n+\tcurrent_omp_declare_target_attribute type change, push { -1 }.\n+\tUse error_at rather than warning_at for declare target with\n+\tonly device_type clauses.\n+\t(OMP_BEGIN_DECLARE_TARGET_CLAUSE_MASK): Define.\n+\t(c_parser_omp_begin): Add begin declare target support.\n+\t(c_parser_omp_end): Adjust for the\n+\tcurrent_omp_declare_target_attribute type change, adjust\n+\tdiagnostics wording and simplify format strings for easier\n+\ttranslations.\n+\t* c-decl.cc (current_omp_declare_target_attribute): Change type from\n+\tint to vec<c_omp_declare_target_attr, va_gc> *.\n+\t(c_decl_attributes): Adjust for the\n+\tcurrent_omp_declare_target_attribute type change.  If device_type\n+\twas present on begin declare target, add \"omp declare target host\"\n+\tand/or \"omp declare target nohost\" attributes.\n+\n 2022-09-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-decl.cc (handle_std_noreturn_attribute): New function."}, {"sha": "3249d8303addb6716451e6ac01d5770ea1631fde", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1,3 +1,43 @@\n+2022-10-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107154\n+\t* cp-gimplify.cc (cp_genericize_init_expr): Use iloc_sentinel.\n+\t(cp_genericize_target_expr): Likewise.\n+\n+2022-10-04  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107136\n+\t* Make-lang.in (CP_PLUGIN_HEADERS): Add cp-trait.def.\n+\n+2022-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cp-tree.h (struct omp_declare_target_attr): Rename to ...\n+\t(cp_omp_declare_target_attr): ... this.  Add device_type member.\n+\t(omp_begin_assumes_data): Rename to ...\n+\t(cp_omp_begin_assumes_data): ... this.\n+\t(struct saved_scope): Change types of omp_declare_target_attribute\n+\tand omp_begin_assumes.\n+\t* parser.cc (cp_parser_omp_clause_device_type): Uncomment\n+\tcheck_no_duplicate_clause call.\n+\t(cp_parser_omp_all_clauses): Fix up pasto, c_name for OMP_CLAUSE_LINK\n+\tshould be \"link\" rather than \"to\".\n+\t(cp_parser_omp_declare_target): Adjust for omp_declare_target_attr\n+\tto cp_omp_declare_target_attr changes, push -1 as device_type.  Use\n+\terror_at rather than warning_at for declare target with only\n+\tdevice_type clauses.\n+\t(OMP_BEGIN_DECLARE_TARGET_CLAUSE_MASK): Define.\n+\t(cp_parser_omp_begin): Add begin declare target support.  Adjust\n+\tfor omp_begin_assumes_data to cp_omp_begin_assumes_data change.\n+\t(cp_parser_omp_end): Adjust for the\n+\tomp_declare_target_attr to cp_omp_declare_target_attr and\n+\tomp_begin_assumes_data to cp_omp_begin_assumes_data type changes,\n+\tadjust diagnostics wording and simplify format strings for easier\n+\ttranslations.\n+\t* semantics.cc (finish_translation_unit): Likewise.\n+\t* decl2.cc (cplus_decl_attributes): If device_type was present on\n+\tbegin declare target, add \"omp declare target host\" and/or\n+\t\"omp declare target nohost\" attributes.\n+\n 2022-10-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-tree.h (BCS_STMT_EXPR): New enumerator."}, {"sha": "692303068fb8d3ceacff61c60a7bc8f55b8ea958", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1,3 +1,8 @@\n+2022-10-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* parse.cc (decode_omp_directive): Handle '(end) loop' and 'scan'\n+\talso with -fopenmp-simd.\n+\n 2022-10-01  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n \n \tPR fortran/100040"}, {"sha": "8a30bb479f62f511198abdb97ac2d16dc5023e0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1,3 +1,39 @@\n+2022-10-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/107154\n+\t* g++.dg/debug/dwarf2/lineno-array1.C: New test.\n+\n+2022-10-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/pragma_cpp_predefs_1.c: Add RCPC tests.\n+\n+2022-10-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/openmp-simd-7.f90: New test.\n+\n+2022-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/gomp/declare-target-4.c: Move tests that are now\n+\trejected into declare-target-7.c.\n+\t* c-c++-common/gomp/declare-target-6.c: Adjust expected diagnostics.\n+\t* c-c++-common/gomp/declare-target-7.c: New test.\n+\t* c-c++-common/gomp/begin-declare-target-1.c: New test.\n+\t* c-c++-common/gomp/begin-declare-target-2.c: New test.\n+\t* c-c++-common/gomp/begin-declare-target-3.c: New test.\n+\t* c-c++-common/gomp/begin-declare-target-4.c: New test.\n+\t* g++.dg/gomp/attrs-9.C: Add begin declare target tests.\n+\t* g++.dg/gomp/attrs-18.C: New test.\n+\n+2022-10-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/107130\n+\t* gcc.dg/tree-ssa/pr107130.c: New test.\n+\n+2022-10-04  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR c/91669\n+\t* c-c++-common/pr91669.c: New test.\n+\n 2022-10-03  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n \t    Yvan ROUX   <yvan.roux@foss.st.com>\n "}, {"sha": "adb619ad6299a5df57b4e8df89e2d5e0b0853441", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1,3 +1,8 @@\n+2022-10-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libgomp.texi (Support begin/end declare target syntax in C/C++):\n+\tMark as implemented.\n+\n 2022-09-30  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/105318"}, {"sha": "81588d6ca3806c219a13b395091aa17b0c3eaa2d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85872a69ee1b123557c7c352d45ef608e70b20fb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85872a69ee1b123557c7c352d45ef608e70b20fb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=85872a69ee1b123557c7c352d45ef608e70b20fb", "patch": "@@ -1,3 +1,77 @@\n+2022-10-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/std/ranges/adaptors/join_with/1.cc: Remove unused\n+\t<sstream header.\n+\t(test04): Remove constexpr for old std::string ABI and test at\n+\truntime.\n+\n+2022-10-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits (remove_cv): Use __remove_cv built-in.\n+\t(remove_reference): Use __remove_reference built-in.\n+\t(remove_cvref): Use __remove_cvref built-in. Remove inheritance\n+\tfor fallback implementation.\n+\n+2022-10-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/random.h (__is_seed_seq): Replace with ...\n+\t(_If_seed_seq_for): ... this.\n+\t* include/ext/random: Adjust to use _If_seed_seq_for.\n+\n+2022-10-04  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/ranges (join_with_view::_Iterator::operator*):\n+\tReplace use of std::visit with manual visitation.\n+\t(join_with_view::_Iterator::operator++): Likewise.\n+\t(join_with_view::_Iterator::operator--): Likewise.\n+\t(join_with_view::_Iterator::iter_move): Likewise.\n+\t(join_with_view::_Iterator::iter_swap): Likewise.\n+\n+2022-10-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/25_algorithms/stable_sort/mem_check.cc: Do nto run\n+\tfor freestanding.\n+\n+2022-10-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/107139\n+\t* include/std/coroutine: Remove all _GLIBCXXHOSTED preprocessor\n+\tconditionals.\n+\n+2022-10-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/107134\n+\t* include/c_global/cstdint [!_GLIBCXX_HOSTED]: Include\n+\t<stdint-gcc.h> directly.\n+\n+2022-10-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/107135\n+\t* include/bits/functexcept.h [!_GLIBCXX_HOSTED]\n+\t(__throw_invalid_argument, __throw_out_of_range)\n+\t(__throw_out_of_range_fmt, __throw_runtime_error)\n+\t(__throw_overflow_error): Define inline.\n+\t* include/std/bitset (_M_copy_from_ptr) [!_GLIBCXX_HOSTED]:\n+\tReplace __builtin_abort with __throw_invalid_argument.\n+\n+2022-10-04  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/ranges: Include <variant> for C++23.\n+\t(__detail::__compatible_joinable_ranges): Define.\n+\t(__detail::__bidirectional_common): Define.\n+\t(join_with_view): Define.\n+\t(join_with_view::_Iterator): Define.\n+\t(join_with_view::_Sentinel): Define.\n+\t(views::__detail::__can_join_with_view): Define.\n+\t(views::_JoinWith, views::join_with): Define.\n+\t* testsuite/std/ranges/adaptors/join_with/1.cc: New test.\n+\n+2022-10-04  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* include/std/iostream: Use ///< for inline documentation.\n+\t* include/std/limits: Likewise.\n+\t* include/experimental/internet: Likewise.\n+\n 2022-10-03  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/status_cxx2020.xml: Update C++20 status."}]}