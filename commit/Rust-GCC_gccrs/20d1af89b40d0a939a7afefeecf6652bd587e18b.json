{"sha": "20d1af89b40d0a939a7afefeecf6652bd587e18b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBkMWFmODliNDBkMGE5MzlhN2FmZWZlZWNmNjY1MmJkNTg3ZTE4Yg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-08-12T12:23:32Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-08-12T12:23:32Z"}, "message": "Create x.gcov file for binary w/o x.gcda file (PR\n\n\t* g++.dg/gcov/gcov-16.C: New test.\n\t* lib/gcov.exp: Support new argument for run-gcov function.\n\t    Adam Fineman  <afineman@afineman.com>\n\n\t* gcov.c (process_file): Create .gcov file when .gcda\n\tfile is missing.\n\nFrom-SVN: r239413", "tree": {"sha": "a32f57e0747c8e6fd6212627797e861dc79b2c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a32f57e0747c8e6fd6212627797e861dc79b2c8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20d1af89b40d0a939a7afefeecf6652bd587e18b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d1af89b40d0a939a7afefeecf6652bd587e18b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d1af89b40d0a939a7afefeecf6652bd587e18b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d1af89b40d0a939a7afefeecf6652bd587e18b/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5cacda56cbeea80e5c5257b6716c5761d3dbd0d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cacda56cbeea80e5c5257b6716c5761d3dbd0d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cacda56cbeea80e5c5257b6716c5761d3dbd0d9"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "14f95cf1a92173ed2f07c0e5ccb37a6ada0805cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20d1af89b40d0a939a7afefeecf6652bd587e18b", "patch": "@@ -1,3 +1,10 @@\n+2016-08-12  Martin Liska  <mliska@suse.cz>\n+\n+\t    Adam Fineman  <afineman@afineman.com>\n+\n+\t* gcov.c (process_file): Create .gcov file when .gcda\n+\tfile is missing.\n+\n 2016-08-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/7652"}, {"sha": "30fc167a0b34436e7954f8a7ea1dbd334fd90e95", "filename": "gcc/gcov.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=20d1af89b40d0a939a7afefeecf6652bd587e18b", "patch": "@@ -902,7 +902,7 @@ process_file (const char *file_name)\n \n       fns = fn->next;\n       fn->next = NULL;\n-      if (fn->counts)\n+      if (fn->counts || no_data_file)\n \t{\n \t  unsigned src = fn->src;\n \t  unsigned line = fn->line;"}, {"sha": "7700cec8b2d12a1c1a676742577aaecc1554e0a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20d1af89b40d0a939a7afefeecf6652bd587e18b", "patch": "@@ -1,3 +1,8 @@\n+2016-08-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/gcov/gcov-16.C: New test.\n+\t* lib/gcov.exp: Support new argument for run-gcov function.\n+\n 2016-08-12  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/35590"}, {"sha": "f09d4060cbdbea03d883b6e9a6d93afc9eda20f0", "filename": "gcc/testsuite/g++.dg/gcov/gcov-16.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-16.C?ref=20d1af89b40d0a939a7afefeecf6652bd587e18b", "patch": "@@ -0,0 +1,10 @@\n+// PR gcov-profile/64634\n+// { dg-options \"-fprofile-arcs -ftest-coverage\" }\n+// { dg-do run { target native } }\n+\n+int main()\n+{\n+  return 0;   /* count(#####) */\n+}\n+\n+// { dg-final { run-gcov remove-gcda gcov-16.C } }"}, {"sha": "02bc6b92c144e809296a1fd6424a477c8acc586f", "filename": "gcc/testsuite/lib/gcov.exp", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d1af89b40d0a939a7afefeecf6652bd587e18b/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcov.exp?ref=20d1af89b40d0a939a7afefeecf6652bd587e18b", "patch": "@@ -19,16 +19,28 @@\n \n global GCOV\n \n+#\n+# clean-gcov-file -- delete a working file the compiler creates for gcov\n+#\n+# TESTCASE is the name of the test.\n+# SUFFIX is file suffix\n+\n+proc clean-gcov-file { testcase suffix } {\n+    set basename [file tail $testcase]\n+    set base [file rootname $basename]\n+    remote_file host delete $base.$suffix\n+}\n+\n #\n # clean-gcov -- delete the working files the compiler creates for gcov\n #\n # TESTCASE is the name of the test.\n #\n proc clean-gcov { testcase } {\n-    set basename [file tail $testcase]\n-    set base [file rootname $basename]\n-    remote_file host delete $base.gcno $base.gcda \\\n-\t$basename.gcov $base.h.gcov\n+    clean-gcov-file $testcase \"gcno\"\n+    clean-gcov-file $testcase \"gcda\"\n+    clean-gcov-file $testcase \"gcov\"\n+    clean-gcov-file $testcase \"h.gcov\"\n }\n \n #\n@@ -305,6 +317,7 @@ proc run-gcov { args } {\n     set gcov_verify_branches 0\n     set gcov_verify_lines 1\n     set gcov_verify_intermediate 0\n+    set gcov_remove_gcda 0\n     set xfailed 0\n \n     foreach a $args {\n@@ -317,6 +330,8 @@ proc run-gcov { args } {\n \t  set gcov_verify_calls 0\n \t  set gcov_verify_branches 0\n \t  set gcov_verify_lines 0\n+\t} elseif { $a == \"remove-gcda\" } {\n+\t  set gcov_remove_gcda 1\n \t} elseif { $gcov_args == \"\" } {\n \t    set gcov_args $a\n \t} else {\n@@ -332,6 +347,11 @@ proc run-gcov { args } {\n     # Extract the test file name from the arguments.\n     set testcase [lindex $gcov_args end]\n \n+    if { $gcov_remove_gcda } {\n+\tverbose \"Removing $testcase.gcda\"\n+\tclean-gcov-file $testcase \"gcda\"\n+    }\n+\n     verbose \"Running $GCOV $testcase\" 2\n     set testcase [remote_download host $testcase]\n     set result [remote_exec host $GCOV $gcov_args]"}]}