{"sha": "fabd753f9e7f96c9c99e680431f0857b774a8aec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiZDc1M2Y5ZTdmOTZjOWM5OWU2ODA0MzFmMDg1N2I3NzRhOGFlYw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-07-03T03:39:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-07-03T03:39:56Z"}, "message": "* config/h8300/h8300.md: Remove trailing whitespace.\n\nFrom-SVN: r262328", "tree": {"sha": "775c4818ff0acac422b00840e38d34172725ace3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/775c4818ff0acac422b00840e38d34172725ace3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fabd753f9e7f96c9c99e680431f0857b774a8aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabd753f9e7f96c9c99e680431f0857b774a8aec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabd753f9e7f96c9c99e680431f0857b774a8aec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabd753f9e7f96c9c99e680431f0857b774a8aec/comments", "author": null, "committer": null, "parents": [{"sha": "eb153f07b3618de080b778ffff5693d94bf785b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb153f07b3618de080b778ffff5693d94bf785b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb153f07b3618de080b778ffff5693d94bf785b4"}], "stats": {"total": 104, "additions": 54, "deletions": 50}, "files": [{"sha": "15becdc2466f12facd426d533680c868f782da0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabd753f9e7f96c9c99e680431f0857b774a8aec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabd753f9e7f96c9c99e680431f0857b774a8aec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fabd753f9e7f96c9c99e680431f0857b774a8aec", "patch": "@@ -1,3 +1,7 @@\n+2018-07-02  Jeff Law  <law@redhat.com>\n+\n+\t* config/h8300/h8300.md: Remove trailing whitespace.\n+\n 2018-07-02  Jim Wilson  <jimw@sifive.com>\n \n \t* config/riscv/riscv.c (riscv_expand_epilogue): Use emit_jump_insn"}, {"sha": "846fd735de0406b1d25bf5d59b774c40e727ca6b", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabd753f9e7f96c9c99e680431f0857b774a8aec/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabd753f9e7f96c9c99e680431f0857b774a8aec/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=fabd753f9e7f96c9c99e680431f0857b774a8aec", "patch": "@@ -880,7 +880,7 @@\n ;; ----------------------------------------------------------------------\n \n (define_insn \"\"\n-  [(set (cc0) \n+  [(set (cc0)\n \t(compare (zero_extract:QI (match_operand:QI 0 \"bit_memory_operand\" \"r,U\")\n \t\t\t\t  (const_int 1)\n \t\t\t\t  (match_operand 1 \"const_int_operand\" \"n,n\"))\n@@ -902,7 +902,7 @@\n    (set_attr \"cc\" \"set_zn\")])\n \n (define_insn_and_split \"*tst_extzv_1_n\"\n-  [(set (cc0) \n+  [(set (cc0)\n \t(compare (zero_extract:SI (match_operand:QI 0 \"general_operand_src\" \"r,U,mn>\")\n \t\t\t\t  (const_int 1)\n \t\t\t\t  (match_operand 1 \"const_int_operand\" \"n,n,n\"))\n@@ -927,7 +927,7 @@\n    (set_attr \"cc\" \"set_zn,set_zn,set_zn\")])\n \n (define_insn \"\"\n-  [(set (cc0) \n+  [(set (cc0)\n \t(compare (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t\t  (const_int 1)\n \t\t\t\t  (match_operand 1 \"const_int_operand\" \"n\"))\n@@ -939,7 +939,7 @@\n    (set_attr \"cc\" \"set_zn\")])\n \n (define_insn_and_split \"*tstsi_upper_bit\"\n-  [(set (cc0) \n+  [(set (cc0)\n \t(compare (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t\t  (const_int 1)\n \t\t\t\t  (match_operand 1 \"const_int_operand\" \"n\"))\n@@ -1004,7 +1004,7 @@\n    (set_attr \"cc\" \"set_zn,set_zn,set_zn\")])\n \n (define_insn \"*tstqi\"\n-  [(set (cc0) \n+  [(set (cc0)\n \t(compare (match_operand:QI 0 \"register_operand\" \"r\")\n \t\t (const_int 0)))]\n   \"\"\n@@ -1169,7 +1169,7 @@\n   \"TARGET_H8300 && epilogue_completed\"\n   [(const_int 0)]\n   {\n-    split_adds_subs (HImode, operands); \n+    split_adds_subs (HImode, operands);\n     DONE;\n   })\n \n@@ -1233,7 +1233,7 @@\n   \"\"\n   [(const_int 0)]\n   {\n-    split_adds_subs (HImode, operands); \n+    split_adds_subs (HImode, operands);\n     DONE;\n   })\n \n@@ -1262,7 +1262,7 @@\n \t(plus:SI (match_operand:SI 1 \"h8300_dst_operand\" \"%0,0\")\n \t\t (match_operand:SI 2 \"h8300_src_operand\" \"i,rQ\")))]\n   \"(TARGET_H8300H || TARGET_H8300S) && h8300_operands_match_p (operands)\"\n-{  \n+{\n   return output_plussi (operands);\n }\n   [(set (attr \"length\")\n@@ -1289,7 +1289,7 @@\n   \"TARGET_H8300H || TARGET_H8300S\"\n   [(const_int 0)]\n   {\n-    split_adds_subs (SImode, operands); \n+    split_adds_subs (SImode, operands);\n     DONE;\n   })\n \n@@ -1585,31 +1585,31 @@\n   \"TARGET_H8300SX\"\n   \"divu.w\\\\t%T2,%T0\"\n   [(set_attr \"length\" \"2\")])\n-  \n+\n (define_insn \"divhi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n \t(div:HI (match_operand:HI 1 \"register_operand\" \"0\")\n \t\t(match_operand:HI 2 \"reg_or_nibble_operand\" \"r IP4>X\")))]\n   \"TARGET_H8300SX\"\n   \"divs.w\\\\t%T2,%T0\"\n   [(set_attr \"length\" \"2\")])\n-  \n+\n (define_insn \"udivsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(udiv:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t (match_operand:SI 2 \"reg_or_nibble_operand\" \"r IP4>X\")))]\n   \"TARGET_H8300SX\"\n   \"divu.l\\\\t%S2,%S0\"\n   [(set_attr \"length\" \"2\")])\n-  \n+\n (define_insn \"divsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(div:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t(match_operand:SI 2 \"reg_or_nibble_operand\" \"r IP4>X\")))]\n   \"TARGET_H8300SX\"\n   \"divs.l\\\\t%S2,%S0\"\n   [(set_attr \"length\" \"2\")])\n-  \n+\n (define_insn \"udivmodqi4\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n \t(truncate:QI\n@@ -2263,7 +2263,7 @@\n     if ((GET_CODE (operands[2]) != REG && operands[2] != const0_rtx)\n \t&& TARGET_H8300)\n       operands[2] = force_reg (HImode, operands[2]);\n-    h8300_expand_branch (operands); \n+    h8300_expand_branch (operands);\n     DONE;\n   })\n \n@@ -2648,15 +2648,15 @@\n   [(const_int 0)]\n   \"\"\n   {\n-    h8300_expand_prologue (); \n+    h8300_expand_prologue ();\n     DONE;\n   })\n \n (define_expand \"epilogue\"\n   [(return)]\n   \"\"\n   {\n-    h8300_expand_epilogue (); \n+    h8300_expand_epilogue ();\n     DONE;\n   })\n \n@@ -2671,7 +2671,7 @@\n   else if (TARGET_H8300H)\n     return \"mov.l\\\\ter0,@-er7\\;stc\\\\tccr,r0l\\;mov.b\\\\tr0l,@(4,er7)\\;mov.l\\\\t@er7+,er0\\;orc\\\\t#128,ccr\";\n   else if (TARGET_H8300S && TARGET_NEXR )\n-    return \"mov.l\\\\ter0,@-er7\\;stc\\tccr,r0l\\;mov.b\\tr0l,@(4,er7)\\;mov.l\\\\t@er7+,er0\\;orc\\t#128,ccr\"; \n+    return \"mov.l\\\\ter0,@-er7\\;stc\\tccr,r0l\\;mov.b\\tr0l,@(4,er7)\\;mov.l\\\\t@er7+,er0\\;orc\\t#128,ccr\";\n   else if (TARGET_H8300S && TARGET_NEXR && TARGET_NORMAL_MODE)\n     return \"subs\\\\t#2,er7\\;mov.l\\\\ter0,@-er7\\;stc\\tccr,r0l\\;mov.b\\tr0l,@(4,er7)\\;mov.l\\\\t@er7+,er0\\;orc\\t#128,ccr\";\n   else if (TARGET_H8300S && TARGET_NORMAL_MODE)\n@@ -2930,7 +2930,7 @@\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (QImode, ASHIFT, operands)) \n+    if (expand_a_shift (QImode, ASHIFT, operands))\n     DONE;\n   })\n \n@@ -2940,7 +2940,7 @@\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (QImode, ASHIFTRT, operands)) \n+    if (expand_a_shift (QImode, ASHIFTRT, operands))\n     DONE;\n   })\n \n@@ -2950,7 +2950,7 @@\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (QImode, LSHIFTRT, operands)) \n+    if (expand_a_shift (QImode, LSHIFTRT, operands))\n     DONE;\n   })\n \n@@ -2960,8 +2960,8 @@\n \t [(match_operand:QI 1 \"h8300_dst_operand\" \"0\")\n \t  (match_operand:QI 2 \"const_int_operand\" \"\")]))]\n   \"h8300_operands_match_p (operands)\"\n-{ \n-  return output_h8sx_shift (operands, 'b', 'X'); \n+{\n+  return output_h8sx_shift (operands, 'b', 'X');\n }\n   [(set_attr \"length_table\" \"unary\")\n    (set_attr \"cc\" \"set_znv\")])\n@@ -2973,7 +2973,7 @@\n \t  (match_operand:QI 2 \"nonmemory_operand\" \"r P3>X\")]))]\n   \"\"\n {\n-  return output_h8sx_shift (operands, 'b', 'X'); \n+  return output_h8sx_shift (operands, 'b', 'X');\n }\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"set_znv\")])\n@@ -3001,7 +3001,7 @@\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (HImode, ASHIFT, operands)) \n+    if (expand_a_shift (HImode, ASHIFT, operands))\n     DONE;\n   })\n \n@@ -3011,7 +3011,7 @@\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (HImode, LSHIFTRT, operands)) \n+    if (expand_a_shift (HImode, LSHIFTRT, operands))\n     DONE;\n   })\n \n@@ -3021,7 +3021,7 @@\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (HImode, ASHIFTRT, operands)) \n+    if (expand_a_shift (HImode, ASHIFTRT, operands))\n     DONE;\n   })\n \n@@ -3031,8 +3031,8 @@\n \t [(match_operand:HI 1 \"h8300_dst_operand\" \"0\")\n \t  (match_operand:QI 2 \"const_int_operand\" \"\")]))]\n   \"h8300_operands_match_p (operands)\"\n-{ \n-  return output_h8sx_shift (operands, 'w', 'T'); \n+{\n+  return output_h8sx_shift (operands, 'w', 'T');\n }\n   [(set_attr \"length_table\" \"unary\")\n    (set_attr \"cc\" \"set_znv\")])\n@@ -3044,7 +3044,7 @@\n \t  (match_operand:QI 2 \"nonmemory_operand\" \"r P4>X\")]))]\n   \"\"\n {\n-  return output_h8sx_shift (operands, 'w', 'T'); \n+  return output_h8sx_shift (operands, 'w', 'T');\n }\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"set_znv\")])\n@@ -3072,7 +3072,7 @@\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (SImode, ASHIFT, operands)) \n+    if (expand_a_shift (SImode, ASHIFT, operands))\n     DONE;\n   })\n \n@@ -3082,7 +3082,7 @@\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (SImode, LSHIFTRT, operands)) \n+    if (expand_a_shift (SImode, LSHIFTRT, operands))\n     DONE;\n   })\n \n@@ -3092,7 +3092,7 @@\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_shift (SImode, ASHIFTRT, operands)) \n+    if (expand_a_shift (SImode, ASHIFTRT, operands))\n     DONE;\n   })\n \n@@ -3103,7 +3103,7 @@\n \t  (match_operand:QI 2 \"const_int_operand\" \"\")]))]\n   \"h8300_operands_match_p (operands)\"\n {\n-  return output_h8sx_shift (operands, 'l', 'S'); \n+  return output_h8sx_shift (operands, 'l', 'S');\n }\n   [(set_attr \"length_table\" \"unary\")\n    (set_attr \"cc\" \"set_znv\")])\n@@ -3114,8 +3114,8 @@\n \t [(match_operand:SI 1 \"register_operand\" \"0\")\n \t  (match_operand:QI 2 \"nonmemory_operand\" \"r P5>X\")]))]\n   \"\"\n-{ \n-  return output_h8sx_shift (operands, 'l', 'S'); \n+{\n+  return output_h8sx_shift (operands, 'l', 'S');\n }\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"set_znv\")])\n@@ -3210,7 +3210,7 @@\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_rotate (operands)) \n+    if (expand_a_rotate (operands))\n     DONE;\n   })\n \n@@ -3231,7 +3231,7 @@\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   {\n-    if (expand_a_rotate (operands)) \n+    if (expand_a_rotate (operands))\n     DONE;\n   })\n \n@@ -3252,7 +3252,7 @@\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n   {\n-    if (expand_a_rotate (operands)) \n+    if (expand_a_rotate (operands))\n     DONE;\n   })\n \n@@ -3555,7 +3555,7 @@\n    (clobber (match_operand:HI 0 \"register_operand\"))]\n   \"TARGET_H8300SX\"\n   {\n-    h8300_expand_store (operands); \n+    h8300_expand_store (operands);\n     DONE;\n   })\n \n@@ -3566,7 +3566,7 @@\n    (clobber (match_operand:HI 0 \"register_operand\"))]\n   \"TARGET_H8300SX\"\n   {\n-    h8300_expand_store (operands); \n+    h8300_expand_store (operands);\n     DONE;\n   })\n \n@@ -3577,7 +3577,7 @@\n    (clobber (match_operand:HI 0 \"register_operand\"))]\n   \"TARGET_H8300SX\"\n   {\n-    h8300_expand_store (operands); \n+    h8300_expand_store (operands);\n     DONE;\n   })\n \n@@ -3609,7 +3609,7 @@\n     operands[5] = gen_rtx_COMPARE (VOIDmode, operands[3], operands[4]);\n   }\n   [(set_attr \"cc\" \"set_znv,compare\")])\n-   \n+\n (define_insn \"*bstz\"\n   [(set (zero_extract:QI (match_operand:QI 0 \"bit_memory_operand\" \"+WU\")\n \t\t\t (const_int 1)\n@@ -3650,7 +3650,7 @@\n     operands[6] = gen_rtx_COMPARE (VOIDmode, operands[2], operands[3]);\n   }\n   [(set_attr \"cc\" \"set_znv,compare\")])\n-   \n+\n (define_insn \"*condbset\"\n   [(set (match_operand:QI 0 \"bit_memory_operand\" \"=WU\")\n \t(if_then_else:QI (match_operator:QI 2 \"eqne_operator\"\n@@ -3683,7 +3683,7 @@\n     operands[6] = gen_rtx_COMPARE (VOIDmode, operands[2], operands[3]);\n   }\n   [(set_attr \"cc\" \"set_znv,compare\")])\n-   \n+\n (define_insn \"*condbclr\"\n   [(set (match_operand:QI 0 \"bit_memory_operand\" \"=WU\")\n \t(if_then_else:QI (match_operator:QI 2 \"eqne_operator\"\n@@ -3719,7 +3719,7 @@\n     operands[6] = gen_rtx_COMPARE (VOIDmode, operands[2], operands[3]);\n   }\n   [(set_attr \"cc\" \"set_znv,compare\")])\n-   \n+\n (define_insn \"*condbsetreg\"\n   [(set (match_operand:QI 0 \"bit_memory_operand\" \"=WU\")\n \t(if_then_else:QI (match_operator:QI 2 \"eqne_operator\"\n@@ -3756,7 +3756,7 @@\n     operands[6] = gen_rtx_COMPARE (VOIDmode, operands[2], operands[3]);\n   }\n   [(set_attr \"cc\" \"set_znv,compare\")])\n-   \n+\n (define_insn \"*condbclrreg\"\n   [(set (match_operand:QI 0 \"bit_memory_operand\" \"=WU\")\n \t(if_then_else:QI (match_operator:QI 2 \"eqne_operator\"\n@@ -4472,7 +4472,7 @@\n \t\t   (ashiftrt:SI (match_dup 0)\n \t\t\t\t(const_int 1)))\n \t      (clobber (scratch:QI))])]\n-  { \n+  {\n     operands[2] = gen_rtx_REG (HImode, REGNO (operands[0]));\n   })\n \n@@ -4687,7 +4687,7 @@\n   \"TARGET_H8300S && !TARGET_NORMAL_MODE && REGNO (operands[0]) != SP_REG\"\n   [(set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n \t(match_dup 0))]\n-  { \n+  {\n     operands[0] = gen_rtx_REG (SImode, REGNO (operands[0]));\n   })\n \n@@ -5968,7 +5968,7 @@\n \t(if_then_else (match_dup 3)\n \t\t      (label_ref (match_dup 2))\n \t\t      (pc)))]\n-  {  \n+  {\n     operands[3] = gen_rtx_fmt_ee (GET_CODE (operands[1]) == GTU ? NE : EQ,\n \t\t\t\t  VOIDmode, cc0_rtx, const0_rtx);\n   })\n@@ -6319,5 +6319,5 @@\n    && !reg_overlap_mentioned_p (operands[0], operands[2])\"\n   [(set (match_dup 2)\n \t(match_dup 1))])\n-\t\n+\n "}]}