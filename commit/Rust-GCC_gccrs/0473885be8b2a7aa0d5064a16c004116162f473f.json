{"sha": "0473885be8b2a7aa0d5064a16c004116162f473f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ3Mzg4NWJlOGIyYTdhYTBkNTA2NGExNmMwMDQxMTYxNjJmNDczZg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2020-05-14T06:16:27Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2020-05-14T06:16:27Z"}, "message": "IBM Z: Define probe_stack expander\n\nProbes emitted by the common code routines still use a store.  Define\nthe \"probe_stack\" pattern to use a compare instead.\n\ngcc/ChangeLog:\n\n2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* config/s390/s390.c (s390_emit_stack_probe): Call the probe_stack\n\texpander.\n\t* config/s390/s390.md (\"@probe_stack2<mode>\", \"probe_stack\"): New\n\texpanders.\n\ngcc/testsuite/ChangeLog:\n\n2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\t* gcc.target/s390/stack-clash-2.c: New test.", "tree": {"sha": "622f63b224d544c7b07834cab5bfe023336c5214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/622f63b224d544c7b07834cab5bfe023336c5214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0473885be8b2a7aa0d5064a16c004116162f473f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0473885be8b2a7aa0d5064a16c004116162f473f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0473885be8b2a7aa0d5064a16c004116162f473f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0473885be8b2a7aa0d5064a16c004116162f473f/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "868d351e232371eec4b40e83014a617d0d46f985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868d351e232371eec4b40e83014a617d0d46f985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/868d351e232371eec4b40e83014a617d0d46f985"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "5c2366e36711e0bb5378a41b49d49470403a8b6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0473885be8b2a7aa0d5064a16c004116162f473f", "patch": "@@ -1,3 +1,10 @@\n+2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.c (s390_emit_stack_probe): Call the probe_stack\n+\texpander.\n+\t* config/s390/s390.md (\"@probe_stack2<mode>\", \"probe_stack\"): New\n+\texpanders.\n+\n 2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.c (allocate_stack_space): Add missing updates"}, {"sha": "4de3129f88ef7c6415c3db9eed75ba428f3e4a4e", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=0473885be8b2a7aa0d5064a16c004116162f473f", "patch": "@@ -10946,10 +10946,9 @@ s390_prologue_plus_offset (rtx target, rtx reg, rtx offset, bool frame_related_p\n static void\n s390_emit_stack_probe (rtx addr)\n {\n-  rtx tmp = gen_rtx_MEM (Pmode, addr);\n-  MEM_VOLATILE_P (tmp) = 1;\n-  s390_emit_compare (EQ, gen_rtx_REG (Pmode, 0), tmp);\n-  emit_insn (gen_blockage ());\n+  rtx mem = gen_rtx_MEM (Pmode, addr);\n+  MEM_VOLATILE_P (mem) = 1;\n+  emit_insn (gen_probe_stack (mem));\n }\n \n /* Use a runtime loop if we have to emit more probes than this.  */"}, {"sha": "cd1c0634b7149669da354f5f763cf48b862c93f4", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=0473885be8b2a7aa0d5064a16c004116162f473f", "patch": "@@ -11017,8 +11017,22 @@\n \n   emit_move_insn (operands[0], virtual_stack_dynamic_rtx);\n   DONE;\n-})\n+  })\n+\n+(define_expand \"@probe_stack2<mode>\"\n+  [(set (reg:CCZ CC_REGNUM)\n+\t(compare:CCZ (reg:P 0)\n+\t\t     (match_operand 0 \"memory_operand\")))\n+   (unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)]\n+  \"\")\n \n+(define_expand \"probe_stack\"\n+  [(match_operand 0 \"memory_operand\")]\n+  \"\"\n+{\n+  emit_insn (gen_probe_stack2 (Pmode, operands[0]));\n+  DONE;\n+})\n \n ;\n ; setjmp instruction pattern."}, {"sha": "498ebb7f6786420e5dd09f36f02975bc23b94f3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0473885be8b2a7aa0d5064a16c004116162f473f", "patch": "@@ -1,3 +1,7 @@\n+2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/stack-clash-2.c: New test.\n+\n 2020-05-14  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* gcc.target/s390/stack-clash-1.c: New test."}, {"sha": "e554ad5ed0d05d44b411964af38d60edaba925f7", "filename": "gcc/testsuite/gcc.target/s390/stack-clash-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstack-clash-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0473885be8b2a7aa0d5064a16c004116162f473f/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstack-clash-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstack-clash-2.c?ref=0473885be8b2a7aa0d5064a16c004116162f473f", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=z900 -fstack-clash-protection\" } */\n+\n+extern void bar (char *);\n+\n+void\n+foo ()\n+{\n+  char * mem = __builtin_alloca (20000);\n+  bar (mem);\n+}\n+\n+/* For alloca a common code routine emits the probes.  Make sure the\n+   \"probe_stack\" expander is used in that case. We want to use mem\n+   compares instead of stores.  */\n+/* { dg-final { scan-assembler-times \"cg\\t\" 5 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times \"c\\t\" 5 { target { ! lp64 } } } } */"}]}