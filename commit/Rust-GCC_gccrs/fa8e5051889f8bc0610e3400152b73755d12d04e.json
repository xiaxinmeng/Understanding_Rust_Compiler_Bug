{"sha": "fa8e5051889f8bc0610e3400152b73755d12d04e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE4ZTUwNTE4ODlmOGJjMDYxMGUzNDAwMTUyYjczNzU1ZDEyZDA0ZQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-01-28T11:41:40Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-01-28T11:41:40Z"}, "message": "re PR tree-optimization/64277 (Incorrect warning \"array subscript is above array bounds\")\n\ngcc/\n\n\tPR tree-optimization/64277\n\t* tree-ssa-loop-niter.c (record_nonwrapping_iv): Use base\n\trange info when possible to refine estimation.\n\ngcc/testsuite/\n\n\tPR tree-optimization/64277\n\t* gcc.dg/pr64277.c: New.\n\nFrom-SVN: r220204", "tree": {"sha": "e6469b694b55626902fc049cce1aff45c3c3499f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6469b694b55626902fc049cce1aff45c3c3499f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa8e5051889f8bc0610e3400152b73755d12d04e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa8e5051889f8bc0610e3400152b73755d12d04e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa8e5051889f8bc0610e3400152b73755d12d04e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa8e5051889f8bc0610e3400152b73755d12d04e/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8447859b3ecba626580a9b812a236ecc6438d730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8447859b3ecba626580a9b812a236ecc6438d730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8447859b3ecba626580a9b812a236ecc6438d730"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "61b36b1b28d63f014d56fd2cb5d8be4ec8a02425", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa8e5051889f8bc0610e3400152b73755d12d04e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa8e5051889f8bc0610e3400152b73755d12d04e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa8e5051889f8bc0610e3400152b73755d12d04e", "patch": "@@ -1,3 +1,9 @@\n+2015-01-28  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR tree-optimization/64277\n+\t* tree-ssa-loop-niter.c (record_nonwrapping_iv): Use base\n+\trange info when possible to refine estimation.\n+\n 2015-01-28  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR tree-optimization/64718"}, {"sha": "6a6a245b728a78ad51aff772b79e9111d6e24d2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa8e5051889f8bc0610e3400152b73755d12d04e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa8e5051889f8bc0610e3400152b73755d12d04e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa8e5051889f8bc0610e3400152b73755d12d04e", "patch": "@@ -1,3 +1,8 @@\n+2015-01-28  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR tree-optimization/64277\n+\t* gcc.dg/pr64277.c: New.\n+\n 2015-01-28  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR tree-optimization/64718"}, {"sha": "c6ef33119a781615c538f0c02a40cf11e2933b30", "filename": "gcc/testsuite/gcc.dg/pr64277.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa8e5051889f8bc0610e3400152b73755d12d04e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64277.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa8e5051889f8bc0610e3400152b73755d12d04e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64277.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64277.c?ref=fa8e5051889f8bc0610e3400152b73755d12d04e", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/64277 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -Wall -Werror -fdump-tree-cunroll-details\" } */\n+/* { dg-final { scan-tree-dump \"loop with 5 iterations completely unrolled\" \"cunroll\" } } */\n+/* { dg-final { scan-tree-dump \"loop with 6 iterations completely unrolled\" \"cunroll\" } } */\n+/* { dg-final { cleanup-tree-dump \"cunroll\" } } */\n+\n+int f1[10];\n+void test1 (short a[], short m, unsigned short l)\n+{\n+  int i = l;\n+  for (i = i + 5; i < m; i++)\n+    f1[i] = a[i]++;\n+}\n+\n+void test2 (short a[], short m, short l)\n+{\n+  int i;\n+  if (m > 5)\n+    m = 5;\n+  for (i = m; i > l; i--)\n+    f1[i] = a[i]++;\n+}"}, {"sha": "a6779585b790a84f261d268f64dae79e3851d56d", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa8e5051889f8bc0610e3400152b73755d12d04e/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa8e5051889f8bc0610e3400152b73755d12d04e/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=fa8e5051889f8bc0610e3400152b73755d12d04e", "patch": "@@ -2754,6 +2754,7 @@ record_nonwrapping_iv (struct loop *loop, tree base, tree step, gimple stmt,\n {\n   tree niter_bound, extreme, delta;\n   tree type = TREE_TYPE (base), unsigned_type;\n+  tree orig_base = base;\n \n   if (TREE_CODE (step) != INTEGER_CST || integer_zerop (step))\n     return;\n@@ -2777,16 +2778,30 @@ record_nonwrapping_iv (struct loop *loop, tree base, tree step, gimple stmt,\n \n   if (tree_int_cst_sign_bit (step))\n     {\n+      wide_int min, max;\n       extreme = fold_convert (unsigned_type, low);\n-      if (TREE_CODE (base) != INTEGER_CST)\n+      if (TREE_CODE (orig_base) == SSA_NAME\n+\t  && TREE_CODE (high) == INTEGER_CST\n+\t  && INTEGRAL_TYPE_P (TREE_TYPE (orig_base))\n+\t  && get_range_info (orig_base, &min, &max) == VR_RANGE\n+\t  && wi::gts_p (high, max))\n+\tbase = wide_int_to_tree (unsigned_type, max);\n+      else if (TREE_CODE (base) != INTEGER_CST)\n \tbase = fold_convert (unsigned_type, high);\n       delta = fold_build2 (MINUS_EXPR, unsigned_type, base, extreme);\n       step = fold_build1 (NEGATE_EXPR, unsigned_type, step);\n     }\n   else\n     {\n+      wide_int min, max;\n       extreme = fold_convert (unsigned_type, high);\n-      if (TREE_CODE (base) != INTEGER_CST)\n+      if (TREE_CODE (orig_base) == SSA_NAME\n+\t  && TREE_CODE (low) == INTEGER_CST\n+\t  && INTEGRAL_TYPE_P (TREE_TYPE (orig_base))\n+\t  && get_range_info (orig_base, &min, &max) == VR_RANGE\n+\t  && wi::gts_p (min, low))\n+\tbase = wide_int_to_tree (unsigned_type, min);\n+      else if (TREE_CODE (base) != INTEGER_CST)\n \tbase = fold_convert (unsigned_type, low);\n       delta = fold_build2 (MINUS_EXPR, unsigned_type, extreme, base);\n     }"}]}