{"sha": "0706262498bc5d206330c08414df0c780a0c3141", "node_id": "C_kwDOANBUbNoAKDA3MDYyNjI0OThiYzVkMjA2MzMwYzA4NDE0ZGYwYzc4MGEwYzMxNDE", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-22T16:07:03Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-23T08:52:20Z"}, "message": "frange: dump hex values when dumping FP numbers.\n\nIt has been suggested that if we start bumping numbers by an ULP when\ncalculating open ranges (for example the numbers less than 3.0) that\ndumping these will become increasingly harder to read, and instead we\nshould opt for the hex representation.  I still find the floating\npoint representation easier to read for most numbers, but perhaps we\ncould have both?\n\nWith this patch this is the representation for [15.0, 20.0]:\n\n     [frange] float [1.5e+1 (0x0.fp+4), 2.0e+1 (0x0.ap+5)]\n\nWould you find this useful, or should we stick to the hex\nrepresentation only?\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* value-range-pretty-print.cc (vrange_printer::print_real_value): New.\n\t(vrange_printer::visit): Call print_real_value.\n\t* value-range-pretty-print.h: New print_real_value.", "tree": {"sha": "2a0875ec30b2eb786bf637753f7778a2000f2f7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a0875ec30b2eb786bf637753f7778a2000f2f7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0706262498bc5d206330c08414df0c780a0c3141", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0706262498bc5d206330c08414df0c780a0c3141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0706262498bc5d206330c08414df0c780a0c3141", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0706262498bc5d206330c08414df0c780a0c3141/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "651625728520b5e1d926f0e12018c96f3fe18b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651625728520b5e1d926f0e12018c96f3fe18b22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/651625728520b5e1d926f0e12018c96f3fe18b22"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "8cbe97b76fd50dd62217c1592d9c88b0bf7713ab", "filename": "gcc/value-range-pretty-print.cc", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0706262498bc5d206330c08414df0c780a0c3141/gcc%2Fvalue-range-pretty-print.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0706262498bc5d206330c08414df0c780a0c3141/gcc%2Fvalue-range-pretty-print.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range-pretty-print.cc?ref=0706262498bc5d206330c08414df0c780a0c3141", "patch": "@@ -117,6 +117,19 @@ vrange_printer::print_irange_bitmasks (const irange &r) const\n   pp_string (pp, buf);\n }\n \n+void\n+vrange_printer::print_real_value (tree type, const REAL_VALUE_TYPE &r) const\n+{\n+  char s[100];\n+  real_to_decimal_for_mode (s, &r, sizeof (s), 0, 1, TYPE_MODE (type));\n+  pp_string (pp, s);\n+  if (!DECIMAL_FLOAT_TYPE_P (type))\n+    {\n+      real_to_hexadecimal (s, &r, sizeof (s), 0, 1);\n+      pp_printf (pp, \" (%s)\", s);\n+    }\n+}\n+\n // Print an frange.\n \n void\n@@ -141,11 +154,9 @@ vrange_printer::visit (const frange &r) const\n   bool has_endpoints = !r.known_isnan ();\n   if (has_endpoints)\n     {\n-      dump_generic_node (pp,\n-\t\t\t build_real (type, r.lower_bound ()), 0, TDF_NONE, false);\n+      print_real_value (type, r.lower_bound ());\n       pp_string (pp, \", \");\n-      dump_generic_node (pp,\n-\t\t\t build_real (type, r.upper_bound ()), 0, TDF_NONE, false);\n+      print_real_value (type, r.upper_bound ());\n     }\n   pp_character (pp, ']');\n   print_frange_nan (r);"}, {"sha": "a9ae5a7b4cc2e3e7cad5a16599853a57724632c7", "filename": "gcc/value-range-pretty-print.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0706262498bc5d206330c08414df0c780a0c3141/gcc%2Fvalue-range-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0706262498bc5d206330c08414df0c780a0c3141/gcc%2Fvalue-range-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range-pretty-print.h?ref=0706262498bc5d206330c08414df0c780a0c3141", "patch": "@@ -32,6 +32,7 @@ class vrange_printer : public vrange_visitor\n   void print_irange_bound (const wide_int &w, tree type) const;\n   void print_irange_bitmasks (const irange &) const;\n   void print_frange_nan (const frange &) const;\n+  void print_real_value (tree type, const REAL_VALUE_TYPE &r) const;\n \n   pretty_printer *pp;\n };"}]}