{"sha": "30a435d83ab076958e210c724f090d0c6a27781a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBhNDM1ZDgzYWIwNzY5NThlMjEwYzcyNGYwOTBkMGM2YTI3NzgxYQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2011-05-25T02:15:58Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2011-05-25T02:15:58Z"}, "message": "re PR rtl-optimization/48757 (internal compiler error: in compensate_edge, at reg-stack.c:2788)\n\n2011-05-24  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/48757\n\t* ira-build.c (loop_with_eh_edge_p): Rename to\n\tloop_with_complex_edge_p, check edges on complexity, make function\n\tconditional.\n\t(mark_loops_for_removal): Make call of loop_with_complex_edge_p\n\tconditional.\n\n2011-05-24  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/48757\n\t* gfortran.dg/pr48757.f:  New test case.\n\nFrom-SVN: r174165", "tree": {"sha": "f1d213918c085cd76f339c47f6e7075674d74817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1d213918c085cd76f339c47f6e7075674d74817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30a435d83ab076958e210c724f090d0c6a27781a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a435d83ab076958e210c724f090d0c6a27781a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30a435d83ab076958e210c724f090d0c6a27781a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a435d83ab076958e210c724f090d0c6a27781a/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82625907a67dd38b3a55d7f4d506c10b4268b297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82625907a67dd38b3a55d7f4d506c10b4268b297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82625907a67dd38b3a55d7f4d506c10b4268b297"}], "stats": {"total": 83, "additions": 79, "deletions": 4}, "files": [{"sha": "9bafa1de3180644fcb96f86ed2992d788eebe1ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a435d83ab076958e210c724f090d0c6a27781a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a435d83ab076958e210c724f090d0c6a27781a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30a435d83ab076958e210c724f090d0c6a27781a", "patch": "@@ -1,3 +1,12 @@\n+2011-05-24  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/48757\n+\t* ira-build.c (loop_with_eh_edge_p): Rename to\n+\tloop_with_complex_edge_p, check edges on complexity, make function\n+\tconditional.\n+\t(mark_loops_for_removal): Make call of loop_with_complex_edge_p\n+\tconditional.\n+\n 2011-05-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.c (sparc_option_override): If not set by the user,"}, {"sha": "95d6c169a27b112e793002a74e83c1977c091bbb", "filename": "gcc/ira-build.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a435d83ab076958e210c724f090d0c6a27781a/gcc%2Fira-build.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a435d83ab076958e210c724f090d0c6a27781a/gcc%2Fira-build.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-build.c?ref=30a435d83ab076958e210c724f090d0c6a27781a", "patch": "@@ -1806,9 +1806,12 @@ low_pressure_loop_node_p (ira_loop_tree_node_t node)\n   return true;\n }\n \n-/* Return TRUE if LOOP has a EH enter or exit edge.  */\n+#ifdef STACK_REGS\n+/* Return TRUE if LOOP has a complex enter or exit edge.  We don't\n+   form a region from such loop if the target use stack register\n+   because reg-stack.c can not deal with such edges.  */\n static bool\n-loop_with_eh_edge_p (struct loop *loop)\n+loop_with_complex_edge_p (struct loop *loop)\n {\n   int i;\n   edge_iterator ei;\n@@ -1820,10 +1823,11 @@ loop_with_eh_edge_p (struct loop *loop)\n       return true;\n   edges = get_loop_exit_edges (loop);\n   FOR_EACH_VEC_ELT (edge, edges, i, e)\n-    if (e->flags & EDGE_EH)\n+    if (e->flags & EDGE_COMPLEX)\n       return true;\n   return false;\n }\n+#endif\n \n /* Sort loops for marking them for removal.  We put already marked\n    loops first, then less frequent loops next, and then outer loops\n@@ -1884,7 +1888,10 @@ mark_loops_for_removal (void)\n \tira_loop_nodes[i].to_remove_p\n \t  = ((low_pressure_loop_node_p (ira_loop_nodes[i].parent)\n \t      && low_pressure_loop_node_p (&ira_loop_nodes[i]))\n-\t     || loop_with_eh_edge_p (ira_loop_nodes[i].loop));\n+#ifdef STACK_REGS\n+\t     || loop_with_complex_edge_p (ira_loop_nodes[i].loop)\n+#endif\n+\t     );\n       }\n   qsort (sorted_loops, n, sizeof (ira_loop_tree_node_t), loop_compare_func);\n   for (i = 0; n - i + 1 > IRA_MAX_LOOPS_NUM; i++)"}, {"sha": "b39b4c726c62cfb2f8c0e370f9056b4e4a2d93bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a435d83ab076958e210c724f090d0c6a27781a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a435d83ab076958e210c724f090d0c6a27781a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30a435d83ab076958e210c724f090d0c6a27781a", "patch": "@@ -1,3 +1,8 @@\n+2011-05-24  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/48757\n+\t* gfortran.dg/pr48757.f:  New test case.\n+\n 2011-05-24  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/access01.C: New."}, {"sha": "e89a59689e49fefe25f06bc304eb08312a0eaeb8", "filename": "gcc/testsuite/gfortran.dg/pr48757.f", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a435d83ab076958e210c724f090d0c6a27781a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr48757.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a435d83ab076958e210c724f090d0c6a27781a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr48757.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr48757.f?ref=30a435d83ab076958e210c724f090d0c6a27781a", "patch": "@@ -0,0 +1,54 @@\n+! { dg-do compile { target i?86-*-* x86_64-*-* } }\n+! { dg-options \"-O2 -w\" }\n+C fconc64.F, from CERNLIB (simplified)\n+\n+      FUNCTION DFCONC(X,TAU,M)\n+      IMPLICIT DOUBLE PRECISION (A-H,O-Z)\n+      COMPLEX*16 WGAMMA,WLOGAM\n+      COMPLEX*16 CGM,CLG,CRG,I,A,B,C,TI,R,RR,U(0:3),V(0:3),W(19)\n+      LOGICAL LM0,LM1,LTA\n+      CHARACTER NAME*(*)\n+      CHARACTER*80 ERRTXT\n+      PARAMETER (NAME = 'RFCONC/DFCONC')\n+      DIMENSION T(7),H(9),S(5),P(11),D(-1:6)\n+      PARAMETER (PI  = 3.14159 26535 89793 24D+0)\n+      PARAMETER (RPI = 1.77245 38509 05516 03D+0)\n+      PARAMETER (I = (0,1))\n+      PARAMETER (Z1 = 1, HF = Z1/2, TH = 1+HF, C1 = Z1/10, C2 = Z1/5)\n+      PARAMETER (RPH = 2/PI, RPW = 2/RPI, TW = 20, NMAX = 200)\n+      DATA EPS /1D-14/\n+      ASSIGN 1 TO JP\n+      GO TO 20\n+    1 ASSIGN 2 TO JP\n+      GO TO 20\n+    2 IF(LM1) FC=2*FC/SQRT(1-X1)\n+      GO TO 99\n+   12 ASSIGN 3 TO JP\n+      GO TO 20\n+    3 IF(LM1) FC=SIGN(HF,1-X)*(TAU**2+HF**2)*SQRT(ABS(X**2-1))*FC\n+      GO TO 99\n+   13 ASSIGN 4 TO JP\n+      GO TO 20\n+    4 R1=EXP((TI-HF)*LOG(X+X)+CLG(1+TI)-CLG((TH-FM)+TI))*\n+     1        R*((HF-FM)+TI)/TI\n+      FC=RPW*R1\n+      IF(LM1) FC=FC/SQRT(1-X1)\n+      GO TO 99\n+   20 IF(LTA) THEN\n+       IF(ABS(R-RR) .LT. EPS) GO TO JP, (1,2,3,4)\n+      ELSE\n+       W(1)=X1*A*B/C\n+       R=1+W(1)\n+       DO 23 N = 1,NMAX\n+       RR=R\n+       W(1)=W(1)*X1*(A+FN)*(B+FN)/((C+FN)*(FN+1))\n+       IF(ABS(R-RR) .LT. EPS) GO TO JP, (1,2,3,4)\n+   23  CONTINUE\n+      END IF\n+   99 DFCONC=FC\n+      RETURN\n+  101 FORMAT('ILLEGAL ARGUMENT(S)  X = ',D15.8,' TAU = ',D15.8,\n+     1       ' M = ',I3)\n+  102 FORMAT('CONVERGENCE PROBLEM FOR HYPERGEOMETRIC FUNCTION, X = ',\n+     1        D15.8)\n+      END"}]}