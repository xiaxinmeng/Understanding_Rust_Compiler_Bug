{"sha": "844eab81da3f49da88e8bb02e2b1255ba88d02b0", "node_id": "C_kwDOANBUbNoAKDg0NGVhYjgxZGEzZjQ5ZGE4OGU4YmIwMmUyYjEyNTViYTg4ZDAyYjA", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-22T15:17:13Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-22T21:21:01Z"}, "message": "Modula-2, testsuite: Remove use of concatenated paths.\n\nThe original implementation for Modula-2 search paths allows things like\n'-I/path/a:/path/b'.  Such paths are not compatible with the rest of the\ncompiler (in particular, the preprocessor, which Modula-2 uses).  In\npreparation for removing that idiom, this patch rewrites the cases in the\ntestsuite and removes string processing where possible from lists of paths.\n\nTODO: There are some apparent discrepancies and/or extraneous insertions\nof partial include paths (especially in gm2_init_log, gm2_init_iso and\ngm2_init_pim) - to be handled in some future patch.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/testsuite/ChangeLog:\n\n\t* gm2/case/pass/case-pass.exp: Update for removal of concatenated\n\tpaths.\n\t* gm2/complex/pass/complex-pass.exp: Likewise.\n\t* gm2/coroutines/pim/run/pass/coroutines-pim-run-pass.exp: Likewise.\n\t* gm2/iso/analysis/fail/iso-analysis-fail.exp: Likewise.\n\t* gm2/iso/check/fail/iso-check-fail.exp: Likewise.\n\t* gm2/iso/fail/iso-fail.exp: Likewise.\n\t* gm2/iso/pass/iso-pass.exp: Likewise.\n\t* gm2/isolib/run/pass/isolib-run-pass.exp: Likewise.\n\t* gm2/pim/fail/pim-fail.exp: Likewise.\n\t* gm2/pim/pass/pim-pass.exp: Likewise.\n\t* gm2/pimlib/logitech/run/pass/pimlib-logitech-run-pass.exp: Likewise.\n\t* gm2/pimlib/pass/pimlib-pass.exp: Likewise.\n\t* gm2/pimlib/run/pass/pimlib-run-pass.exp: Likewise.\n\t* gm2/projects/iso/run/pass/halma/projects-iso-run-pass-halma.exp: Likewise.\n\t* gm2/projects/iso/run/pass/hello/projects-iso-run-pass-hello.exp: Likewise.\n\t* gm2/projects/log/run/pass/hello/projects-log-run-pass-hello.exp: Likewise.\n\t* gm2/projects/pim/run/pass/hello/projects-pim-run-pass-hello.exp: Likewise.\n\t* gm2/recover/pass/recover-pass.exp: Likewise.\n\t* gm2/switches/makeall/fail/switches-makeall-fail.exp: Likewise.\n\t* gm2/switches/makeall/pass/switches-makeall-pass.exp: Likewise.\n\t* gm2/switches/none/run/pass/gm2-none.exp: Likewise.\n\t* gm2/switches/pim2/run/pass/switches-pim2-run-pass.exp: Likewise.\n\t* gm2/ulmlib/pass/ulmlib-pass.exp: Likewise.\n\t* gm2/ulmlib/std/pass/ulmlib-std-pass.exp: Likewise.\n\t* gm2/ulmlib/sys/pass/ulmlib-sys-pass.exp: Likewise.\n\t* lib/gm2.exp: Make the paths list a mandatory entry for each gm2_init_xxx\n\tfunction. Remove the use of concatenated include and library paths.\n\tRemove string processing where possible.", "tree": {"sha": "15ff10d4082765ca5f66107798254494547dd06b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15ff10d4082765ca5f66107798254494547dd06b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/844eab81da3f49da88e8bb02e2b1255ba88d02b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844eab81da3f49da88e8bb02e2b1255ba88d02b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844eab81da3f49da88e8bb02e2b1255ba88d02b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844eab81da3f49da88e8bb02e2b1255ba88d02b0/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c517295940a23db8ca165dfd5d0edea4457eda49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c517295940a23db8ca165dfd5d0edea4457eda49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c517295940a23db8ca165dfd5d0edea4457eda49"}], "stats": {"total": 376, "additions": 200, "deletions": 176}, "files": [{"sha": "e73e4b4e07361fe5b80a9e36f7564c4b8064ff77", "filename": "gcc/testsuite/gm2/case/pass/case-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fcase%2Fpass%2Fcase-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fcase%2Fpass%2Fcase-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fcase%2Fpass%2Fcase-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -25,7 +25,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_pim ${srcdir}/gm2/case/pass;\n+gm2_init_pim \"${srcdir}/gm2/case/pass\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "a661be1be56ae067bc2fe783b00bb2a6d9c0d5bc", "filename": "gcc/testsuite/gm2/complex/pass/complex-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Fpass%2Fcomplex-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Fpass%2Fcomplex-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fcomplex%2Fpass%2Fcomplex-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -25,7 +25,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_iso\n+gm2_init_iso \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "92ed8d8b8ef55fe81ba3c01c13adb3cf03a34bc6", "filename": "gcc/testsuite/gm2/coroutines/pim/run/pass/coroutines-pim-run-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fcoroutines%2Fpim%2Frun%2Fpass%2Fcoroutines-pim-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fcoroutines%2Fpim%2Frun%2Fpass%2Fcoroutines-pim-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fcoroutines%2Fpim%2Frun%2Fpass%2Fcoroutines-pim-run-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -28,7 +28,7 @@ load_lib timeout-dg.exp\n \n set gm2src ${srcdir}/../gm2\n \n-gm2_init_cor\n+gm2_init_cor \"\"\n \n # We should be able to compile, link or run in 15 seconds.\n gm2_push_timeout 15"}, {"sha": "a6c050f0ddc66a3d8825e1b797e9e43c593ed985", "filename": "gcc/testsuite/gm2/iso/analysis/fail/iso-analysis-fail.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fanalysis%2Ffail%2Fiso-analysis-fail.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fanalysis%2Ffail%2Fiso-analysis-fail.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fanalysis%2Ffail%2Fiso-analysis-fail.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -24,7 +24,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_iso ${srcdir}/gm2/iso/fail:${srcdir}/gm2/iso/pass \"-fsoft-check-all -O2\"\n+gm2_init_iso \"${srcdir}/gm2/iso/fail:${srcdir}/gm2/iso/pass\" \"-fsoft-check-all -O2\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "69a1fef6b039281cfb4f1eec90edec8b4f29dc34", "filename": "gcc/testsuite/gm2/iso/check/fail/iso-check-fail.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fcheck%2Ffail%2Fiso-check-fail.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fcheck%2Ffail%2Fiso-check-fail.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fcheck%2Ffail%2Fiso-check-fail.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -44,7 +44,7 @@ set TORTURE_OPTIONS [list \\\n \t\t\t { -O3 -fsoft-check-all } \\\n \t\t         { -O3 -g -fsoft-check-all } ]\n \n-gm2_init_iso ${srcdir}/gm2/iso/check/fail\n+gm2_init_iso \"${srcdir}/gm2/iso/check/fail\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "5e442d629f79435809f85fcf939cc9d9a0baa232", "filename": "gcc/testsuite/gm2/iso/fail/iso-fail.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fiso%2Ffail%2Fiso-fail.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fiso%2Ffail%2Fiso-fail.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Ffail%2Fiso-fail.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -24,7 +24,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_iso ${srcdir}/gm2/iso/fail:${srcdir}/gm2/iso/pass\n+gm2_init_iso \"${srcdir}/gm2/iso/fail ${srcdir}/gm2/iso/pass\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "24c7cd3c0632737417c409ea2a5ef8ad3f97d771", "filename": "gcc/testsuite/gm2/iso/pass/iso-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fpass%2Fiso-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fpass%2Fiso-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fiso%2Fpass%2Fiso-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -24,7 +24,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_iso ${srcdir}/gm2/iso/pass -fcpp;\n+gm2_init_iso \"${srcdir}/gm2/iso/pass\" -fcpp\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "46ab2fe012de2acf4a9d74bf30adef2271e9622a", "filename": "gcc/testsuite/gm2/isolib/run/pass/isolib-run-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Fisolib-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Fisolib-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fisolib%2Frun%2Fpass%2Fisolib-run-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -27,7 +27,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../gm2\n \n-gm2_init_iso \"-I${srcdir}/gm2/iso/run/pass\"\n+gm2_init_iso \"${srcdir}/gm2/iso/run/pass\"\n \n set cmd [exec cp $srcdir/$subdir/testinput .]\n set cmd [exec cp $srcdir/$subdir/testnumber .]"}, {"sha": "febf7a3f615aedd25088db5dbe6344ae086f8c71", "filename": "gcc/testsuite/gm2/pim/fail/pim-fail.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpim%2Ffail%2Fpim-fail.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpim%2Ffail%2Fpim-fail.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpim%2Ffail%2Fpim-fail.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -24,7 +24,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_pim \"${srcdir}/gm2/pim/fail:${srcdir}/gm2/pim/pass\"\n+gm2_init_pim \"${srcdir}/gm2/pim/fail ${srcdir}/gm2/pim/pass\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "6325edf966e81301efd78f230ccc3b62d187a891", "filename": "gcc/testsuite/gm2/pim/pass/pim-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpim%2Fpass%2Fpim-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpim%2Fpass%2Fpim-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpim%2Fpass%2Fpim-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -26,7 +26,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_init_log \"${srcdir}/gm2/pim/pass:${gm2src}/gm2-compiler:${gm2src}/gm2-gcc\"\n+gm2_init_log \"${srcdir}/gm2/pim/pass ${gm2src}/gm2-compiler ${gm2src}/gm2-gcc\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "2b530a55b35c4486229a3d559c388f3f1a09aa90", "filename": "gcc/testsuite/gm2/pimlib/logitech/run/pass/pimlib-logitech-run-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Flogitech%2Frun%2Fpass%2Fpimlib-logitech-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Flogitech%2Frun%2Fpass%2Fpimlib-logitech-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Flogitech%2Frun%2Fpass%2Fpimlib-logitech-run-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -27,7 +27,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_init_log\n+gm2_init_log \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "3c11646e2944bdce1658c1be5dafcdf64fb7f127", "filename": "gcc/testsuite/gm2/pimlib/pass/pimlib-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Fpass%2Fpimlib-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Fpass%2Fpimlib-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Fpass%2Fpimlib-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -25,7 +25,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_log\n+gm2_init_log \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/../gm2/gm2-libs-pim/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "2b530a55b35c4486229a3d559c388f3f1a09aa90", "filename": "gcc/testsuite/gm2/pimlib/run/pass/pimlib-run-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Frun%2Fpass%2Fpimlib-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Frun%2Fpass%2Fpimlib-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fpimlib%2Frun%2Fpass%2Fpimlib-run-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -27,7 +27,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_init_log\n+gm2_init_log \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "faec3f92902cdae417528a6dc8620de252734f65", "filename": "gcc/testsuite/gm2/projects/iso/run/pass/halma/projects-iso-run-pass-halma.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhalma%2Fprojects-iso-run-pass-halma.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhalma%2Fprojects-iso-run-pass-halma.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhalma%2Fprojects-iso-run-pass-halma.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -27,7 +27,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_init_iso\n+gm2_init_iso \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "faec3f92902cdae417528a6dc8620de252734f65", "filename": "gcc/testsuite/gm2/projects/iso/run/pass/hello/projects-iso-run-pass-hello.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhello%2Fprojects-iso-run-pass-hello.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhello%2Fprojects-iso-run-pass-hello.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fiso%2Frun%2Fpass%2Fhello%2Fprojects-iso-run-pass-hello.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -27,7 +27,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_init_iso\n+gm2_init_iso \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "375af707a33b3713e9cce91685d38d7cf8d96bf4", "filename": "gcc/testsuite/gm2/projects/log/run/pass/hello/projects-log-run-pass-hello.exp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Flog%2Frun%2Fpass%2Fhello%2Fprojects-log-run-pass-hello.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Flog%2Frun%2Fpass%2Fhello%2Fprojects-log-run-pass-hello.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Flog%2Frun%2Fpass%2Fhello%2Fprojects-log-run-pass-hello.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -27,8 +27,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-# gm2_link_lib \"m2log m2pim m2iso\"\n-gm2_init_log\n+gm2_init_log \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "3e8db4709ab1d32de64a827a59228d5516d0abd5", "filename": "gcc/testsuite/gm2/projects/pim/run/pass/hello/projects-pim-run-pass-hello.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Fhello%2Fprojects-pim-run-pass-hello.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Fhello%2Fprojects-pim-run-pass-hello.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fprojects%2Fpim%2Frun%2Fpass%2Fhello%2Fprojects-pim-run-pass-hello.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -27,7 +27,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_init_pim\n+gm2_init_pim \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "3c11646e2944bdce1658c1be5dafcdf64fb7f127", "filename": "gcc/testsuite/gm2/recover/pass/recover-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Frecover%2Fpass%2Frecover-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Frecover%2Fpass%2Frecover-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Frecover%2Fpass%2Frecover-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -25,7 +25,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_log\n+gm2_init_log \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/../gm2/gm2-libs-pim/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "32da0ec9119c1a7d435ff111db9b01029fd1a5f7", "filename": "gcc/testsuite/gm2/switches/makeall/fail/switches-makeall-fail.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fmakeall%2Ffail%2Fswitches-makeall-fail.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fmakeall%2Ffail%2Fswitches-makeall-fail.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fmakeall%2Ffail%2Fswitches-makeall-fail.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -29,7 +29,7 @@ load_lib gm2-torture.exp\n #  attempts to use gm2 -fmakeall to build a syntactally incorrect program.\n #\n \n-gm2_init \"-I$srcdir/../gm2/gm2-libs:$srcdir/gm2/switches/makeall/fail -fmakeall\"\n+gm2_init \"$srcdir/../gm2/gm2-libs $srcdir/gm2/switches/makeall/fail\" -fmakeall\n \n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {"}, {"sha": "41308af42c5d3056cbdb7199b892e333536c73bc", "filename": "gcc/testsuite/gm2/switches/makeall/pass/switches-makeall-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fmakeall%2Fpass%2Fswitches-makeall-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fmakeall%2Fpass%2Fswitches-makeall-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fmakeall%2Fpass%2Fswitches-makeall-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -24,7 +24,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init \"-I${srcdir}/gm2/switches/makeall/pass\" -fmakeall\n+gm2_init \"${srcdir}/gm2/switches/makeall/pass\" -fmakeall\n gm2_init_pim4 \"${srcdir}/gm2/switches/makeall/pass\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {"}, {"sha": "86dab20e488f5996575a9ddb4151ebe903cb59e5", "filename": "gcc/testsuite/gm2/switches/none/run/pass/gm2-none.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fnone%2Frun%2Fpass%2Fgm2-none.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fnone%2Frun%2Fpass%2Fgm2-none.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fnone%2Frun%2Fpass%2Fgm2-none.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -26,7 +26,7 @@ load_lib gm2-simple.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_init_pim\n+gm2_init_pim \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "04a32c681b827842e550e95f387d1fedc346265a", "filename": "gcc/testsuite/gm2/switches/pim2/run/pass/switches-pim2-run-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fpim2%2Frun%2Fpass%2Fswitches-pim2-run-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fpim2%2Frun%2Fpass%2Fswitches-pim2-run-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fswitches%2Fpim2%2Frun%2Fpass%2Fswitches-pim2-run-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -27,7 +27,7 @@ load_lib gm2-torture.exp\n \n set gm2src ${srcdir}/../m2\n \n-gm2_init_pim2\n+gm2_init_pim2 \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "0e17dde09ec7d4d58997f2e512dd1c0435adc7c2", "filename": "gcc/testsuite/gm2/ulmlib/pass/ulmlib-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fpass%2Fulmlib-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fpass%2Fulmlib-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fpass%2Fulmlib-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -25,7 +25,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_ulm\n+gm2_init_ulm \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/../gm2/ulm-lib-gm2/sys/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "8aea1073ef0e2ae469e90b981127b36dbd87dee7", "filename": "gcc/testsuite/gm2/ulmlib/std/pass/ulmlib-std-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fstd%2Fpass%2Fulmlib-std-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fstd%2Fpass%2Fulmlib-std-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fstd%2Fpass%2Fulmlib-std-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -25,7 +25,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_ulm\n+gm2_init_ulm \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/../gm2/ulm-lib-gm2/std/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "0e17dde09ec7d4d58997f2e512dd1c0435adc7c2", "filename": "gcc/testsuite/gm2/ulmlib/sys/pass/ulmlib-sys-pass.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fsys%2Fpass%2Fulmlib-sys-pass.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fsys%2Fpass%2Fulmlib-sys-pass.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgm2%2Fulmlib%2Fsys%2Fpass%2Fulmlib-sys-pass.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -25,7 +25,7 @@ if $tracelevel then {\n # load support procs\n load_lib gm2-torture.exp\n \n-gm2_init_ulm\n+gm2_init_ulm \"\"\n \n foreach testcase [lsort [glob -nocomplain $srcdir/../gm2/ulm-lib-gm2/sys/*.mod]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "15e3729e5a3a95b69b321cb82a7c0cdd4952453f", "filename": "gcc/testsuite/lib/gm2.exp", "status": "modified", "additions": 175, "deletions": 150, "changes": 325, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Flib%2Fgm2.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844eab81da3f49da88e8bb02e2b1255ba88d02b0/gcc%2Ftestsuite%2Flib%2Fgm2.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgm2.exp?ref=844eab81da3f49da88e8bb02e2b1255ba88d02b0", "patch": "@@ -65,22 +65,22 @@ proc gm2_pop_timeout { } {\n proc default_gcc_version { } {\n     global GCC_UNDER_TEST\n \n-    gm2_init;\n+    gm2_init\n \n     # ignore any arguments after the command\n     set compiler [lindex $GCC_UNDER_TEST 0]\n \n     if ![is_remote host] {\n-\tset compiler_name [which $compiler];\n+\tset compiler_name [which $compiler]\n     } else {\n-\tset compiler_name $compiler;\n+\tset compiler_name $compiler\n     }\n \n     # verify that the compiler exists\n     if { $compiler_name != 0 } then {\n \tset tmp [remote_exec host \"$compiler --version\"]\n-\tset status [lindex $tmp 0];\n-\tset output [lindex $tmp 1];\n+\tset status [lindex $tmp 0]\n+\tset output [lindex $tmp 1]\n \tregexp \"version.*$\" $output version\n \tif { $status == 0 && [info exists version] } then {\n \t    clone_output \"$compiler_name $version\\n\"\n@@ -98,7 +98,7 @@ proc default_gcc_version { } {\n #\n \n proc gcc_version { } {\n-    default_gcc_version;\n+    default_gcc_version\n }\n \n #\n@@ -108,64 +108,64 @@ proc gcc_version { } {\n # make some enhancements without having to go back and rewrite the scripts.\n #\n \n-set gm2_initialized 0;\n-set gm2_compile_method \"default\";\n-set gm2_link_path \"\";\n-set gm2_link_libraries \"m2pim m2iso\";\n-set gm2_link_objects \"\";\n+set gm2_initialized 0\n+set gm2_compile_method \"default\"\n+set gm2_link_path \"\"\n+set gm2_link_libraries \"m2pim m2iso\"\n+set gm2_link_objects \"\"\n \n proc gm2_set_compile_method { arg } {\n-    global gm2_compile_method;\n+    global gm2_compile_method\n \n     send_log \"********************************************\\n\"\n     send_log \"**** setting gm2_compile_method to $arg ****\\n\"\n     send_log \"********************************************\\n\"\n-    set gm2_compile_method $arg;\n+    set gm2_compile_method $arg\n }\n \n \n proc gm2_init { args } {\n-    global tmpdir;\n-    global objdir;\n-    global rootme;\n-    global base_dir;\n-    global tool_root_dir;\n-    global gluefile wrap_flags;\n-    global gm2_initialized;\n-    global GCC_UNDER_TEST;\n-    global TOOL_EXECUTABLE;\n-    global gm2_link_libraries;\n-    global gm2_link_objects;\n-    global gm2_link_path;\n-    global HAVE_LIBSTDCXX_V3;\n-\n-    if { $gm2_initialized == 1 } { return; }\n-\n-    set gm2_link_objects \"\";\n-    set GCC_UNDER_TEST [lookfor_file $rootme gm2];\n-    append GCC_UNDER_TEST \" \" -B[file dirname $rootme]/gcc \" \" ${args};\n+    global tmpdir\n+    global objdir\n+    global rootme\n+    global base_dir\n+    global tool_root_dir\n+    global gluefile wrap_flags\n+    global gm2_initialized\n+    global GCC_UNDER_TEST\n+    global TOOL_EXECUTABLE\n+    global gm2_link_libraries\n+    global gm2_link_objects\n+    global gm2_link_path\n+    global HAVE_LIBSTDCXX_V3\n+\n+    if { $gm2_initialized == 1 } { return }\n+\n+    set gm2_link_objects \"\"\n+    set GCC_UNDER_TEST [lookfor_file $rootme gm2]\n+    append GCC_UNDER_TEST \" \" -B[file dirname $rootme]/gcc \" \" ${args}\n     append GCC_UNDER_TEST \" \" -fno-diagnostics-show-caret\n     append GCC_UNDER_TEST \" \" -fno-diagnostics-show-line-numbers\n     append GCC_UNDER_TEST \" \" -fdiagnostics-color=never\n     send_log \"GCC_UNDER_TEST is ${GCC_UNDER_TEST}\\n\"\n \n     if ![info exists tmpdir] then {\n-\tset tmpdir /tmp;\n+\tset tmpdir /tmp\n     }\n     if {[target_info needs_status_wrapper] != \"\" && \\\n \t    [target_info needs_status_wrapper] != \"0\" && \\\n \t    ![info exists gluefile]} {\n-\tset gluefile ${tmpdir}/gcc-testglue.o;\n-\tset result [build_wrapper $gluefile];\n+\tset gluefile ${tmpdir}/gcc-testglue.o\n+\tset result [build_wrapper $gluefile]\n \tif { $result != \"\" } {\n-\t    set gluefile [lindex $result 0];\n-\t    set wrap_flags [lindex $result 1];\n+\t    set gluefile [lindex $result 0]\n+\t    set wrap_flags [lindex $result 1]\n \t} else {\n \t    unset gluefile\n \t}\n     }\n \n-    set gm2_link_path \"[gm2_link_flags [get_multilibs]]\";\n+    set gm2_link_path \"[gm2_link_flags [get_multilibs]]\"\n     verbose $gm2_link_path 1\n \n     # Set the default timeout value, larger tests can override\n@@ -231,7 +231,7 @@ proc gm2_target_compile_default { source dest type options } {\n #\n \n proc gm2_target_compile { source dest type options } {\n-    global gm2_compile_method;\n+    global gm2_compile_method\n \n     return [gm2_target_compile_${gm2_compile_method} $source $dest $type $options]\n }\n@@ -242,9 +242,9 @@ proc gm2_target_compile { source dest type options } {\n #\n \n proc gm2_link_lib { libraries } {\n-    global gm2_link_libraries;\n+    global gm2_link_libraries\n \n-    set gm2_link_libraries $libraries;\n+    set gm2_link_libraries $libraries\n }\n \n \n@@ -253,9 +253,9 @@ proc gm2_link_lib { libraries } {\n #\n \n proc gm2_link_obj { objects } {\n-    global gm2_link_objects;\n+    global gm2_link_objects\n \n-    set gm2_link_objects $objects;\n+    set gm2_link_objects $objects\n }\n \n \n@@ -264,10 +264,10 @@ proc gm2_link_obj { objects } {\n #\n \n proc gm2_link_flags { paths } {\n-    global srcdir;\n-    global ld_library_path;\n-    global gccpath;\n-    global gm2_link_libraries;\n+    global srcdir\n+    global ld_library_path\n+    global gccpath\n+    global gm2_link_libraries\n \n     set gccpath ${paths}\n     set libio_dir \"\"\n@@ -329,40 +329,46 @@ proc gm2_link_flags { paths } {\n #\n #\n \n-proc gm2_init_pimx { dialect {path \"\"} args } {\n-    global srcdir;\n-    global gccpath;\n+proc gm2_init_pimx { dialect paths args } {\n+    global srcdir\n+    global gccpath\n \n-    set gm2src ${srcdir}/../m2;\n+    set gm2src ${srcdir}/../m2\n+    \n \n     send_log \"srcdir is $srcdir\\n\"\n     send_log \"gccpath is $gccpath\\n\"\n     send_log \"gm2src is $gm2src\\n\"\n \n-    set pimIpath \"${gccpath}/libgm2/libm2pim:${gm2src}/gm2-libs\";\n-    set pimLpath \"${gccpath}/libgm2/libm2pim/.libs\";\n+    set theIpath -I${gccpath}/libgm2/libm2pim\n+    lappend theIpath -I${gm2src}/gm2-libs-pim\n \n-    set isoIpath \"${gccpath}/libgm2/libm2iso:${gm2src}/gm2-libs-iso\";\n-    set isoLpath \"${gccpath}/libgm2/libm2iso/.libs\";\n+    #\u00a0NOTE:\n+    lappend theIpath -I${gm2src}/gm2-libs\n+    \n+    set theLpath -L${gccpath}/libgm2/libm2pim/.libs\n \n-    set theIpath \"-I${pimIpath} -I${isoIpath}\";\n-    set theLpath \"-L${pimLpath} -L${isoLpath}\";\n+    lappend theIpath -I${gccpath}/libgm2/libm2iso\n+    lappend theIpath -I${gm2src}/gm2-libs-iso\n \n-    if { $path != \"\" } then {\n-\tappend theIpath \" -I\"\n-\tappend theIpath ${path}\n+    lappend theLpath -L${gccpath}/libgm2/libm2iso/.libs\n+\n+    foreach p $paths {\n+\tlappend theIpath -I$p\n     }\n+\n     gm2_link_lib \"m2pim m2iso\"\n-    gm2_init {*}${theIpath} {*}${dialect} {*}${theLpath} {*}${args};\n+    lappend args -fno-libs=-\n+    gm2_init {*}${theIpath} {*}${dialect} {*}${theLpath} {*}${args}\n }\n \n #\n #  gm2_init_pim - set the default libraries to choose PIM and then ISO.\n #\n #\n \n-proc gm2_init_pim { {path \"\"} args } {\n-    gm2_init_pimx -fpim {*}${path} {*}${args};\n+proc gm2_init_pim { paths args } {\n+    gm2_init_pimx -fpim $paths {*}${args}\n }\n \n \n@@ -371,8 +377,8 @@ proc gm2_init_pim { {path \"\"} args } {\n #                  It uses the PIM2 dialect.\n #\n \n-proc gm2_init_pim2 { {path \"\"} args } {\n-    gm2_init_pimx -fpim2 {*}${path} {*}${args};\n+proc gm2_init_pim2 { paths args } {\n+    gm2_init_pimx -fpim2 $paths {*}${args}\n }\n \n \n@@ -381,8 +387,8 @@ proc gm2_init_pim2 { {path \"\"} args } {\n #                  It uses the PIM3 dialect.\n #\n \n-proc gm2_init_pim3 { {path \"\"} args } {\n-    gm2_init_pimx -fpim3 {*}${path} {*}${args};\n+proc gm2_init_pim3 { paths args } {\n+    gm2_init_pimx -fpim3 $paths {*}${args}\n }\n \n \n@@ -391,69 +397,79 @@ proc gm2_init_pim3 { {path \"\"} args } {\n #                  It uses the PIM4 dialect.\n #\n \n-proc gm2_init_pim4 { {path \"\"} args } {\n-    gm2_init_pimx -fpim4 {*}${path} {*}${args};\n+proc gm2_init_pim4 { paths args } {\n+    gm2_init_pimx -fpim4 $paths {*}${args}\n }\n \n \n #\n #  gm2_init_iso - set the default libraries to choose ISO and then PIM.\n #\n \n-proc gm2_init_iso { {path \"\"} args } {\n-    global srcdir;\n-    global gccpath;\n+proc gm2_init_iso { paths args } {\n+    global srcdir\n+    global gccpath\n \n-    set gm2src ${srcdir}/../m2;\n+    set gm2src ${srcdir}/../m2\n \n-    set isoIpath \"${gccpath}/libgm2/libm2iso:${gm2src}/gm2-libs-iso\";\n-    set pimIpath \"${gccpath}/libgm2/libm2pim:${gm2src}/gm2-libs\";\n+    set theIpath -I${gccpath}/libgm2/libm2iso\n+    lappend theIpath -I${gm2src}/gm2-libs-iso\n \n-    set isoLpath \"${gccpath}/libgm2/libm2iso/.libs\";\n-    set pimLpath \"${gccpath}/libgm2/libm2pim/.libs\";\n+    set theLpath -L${gccpath}/libgm2/libm2iso/.libs\n \n-    set corIpath \"${gccpath}/libgm2/libm2cor:${gm2src}/gm2-libs-coroutines\";\n-    set corLpath \"${gccpath}/libgm2/libm2cor/.libs\";\n+    lappend theIpath -I${gccpath}/libgm2/libm2pim\n+    lappend theIpath -I${gm2src}/gm2-libs-pim\n \n-    set theIpath \"-I${isoIpath} -I${corIpath} -I${pimIpath}\";\n-    set theLpath \"-L${isoLpath} -L${corLpath} -L${pimLpath}\";\n+    #\u00a0NOTE:\n+    lappend theIpath -I${gm2src}/gm2-libs\n \n-    if { $path != \"\" } then {\n-\tappend theIpath \" -I\"\n-\tappend theIpath ${path}\n+    lappend theLpath -L${gccpath}/libgm2/libm2pim/.libs\n+\n+    lappend theIpath -I${gccpath}/libgm2/libm2cor\n+    lappend theIpath -I${gm2src}/gm2-libs-coroutines\n+\n+    lappend theLpath -L${gccpath}/libgm2/libm2cor/.libs\n+\n+    foreach p $paths {\n+\tlappend theIpath -I$p\n     }\n \n     gm2_link_lib \"m2iso m2pim m2cor\"\n-    gm2_init {*}${theIpath} -fiso {*}${theLpath} {*}${args};\n+    lappend args -fno-libs=-\n+    gm2_init {*}${theIpath} -fiso {*}${theLpath} {*}${args}\n }\n \n-\n #\n #  gm2_init_ulm - set the default libraries to choose the ULM and PIM libraries.\n #\n \n-proc gm2_init_ulm { {path \"\"} args } {\n-    global srcdir;\n-    global gccpath;\n+proc gm2_init_ulm { paths args } {\n+    global srcdir\n+    global gccpath\n \n-    set gm2src ${srcdir}/../m2;\n+    set gm2src ${srcdir}/../m2\n \n-    set ulmIpath \"${gccpath}/libgm2/libm2ulm:${gm2src}/ulm-lib-gm2/std:${gm2src}/ulm-lib-gm2/sys\";\n-    set ulmLpath \"${gccpath}/libgm2/libm2ulm/.libs\";\n+    set theIpath -I${gccpath}/libgm2/libm2ulm\n+    lappend theIpath -I${gm2src}/ulm-lib-gm2/std\n+    lappend theIpath -I${gm2src}/ulm-lib-gm2/sys\n \n-    set pimIpath \"${gccpath}/libgm2/libm2pim:${gm2src}/gm2-libs\";\n-    set pimLpath \"${gccpath}/libgm2/libm2pim/.libs\";\n+    set theLpath -L${gccpath}/libgm2/libm2ulm/.libs\n \n-    set theIpath \"-I${ulmIpath} -I${pimIpath}\";\n-    set theLpath \"-L${ulmLpath} -L${pimLpath}\";\n+    lappend theIpath -I${gccpath}/libgm2/libm2pim\n+    lappend theIpath -I${gm2src}/gm2-libs-pim\n \n-    if { $path != \"\" } then {\n-\tappend theIpath \" -I\"\n-\tappend theIpath ${path}\n+    #\u00a0NOTE:\n+    lappend theIpath -I${gm2src}/gm2-libs\n+\n+    lappend theLpath -L${gccpath}/libgm2/libm2pim/.libs\n+\n+    foreach p $paths {\n+\tlappend theIpath -I$p\n     }\n \n     gm2_link_lib \"m2ulm m2pim\"\n-    gm2_init {*}${theIpath} -fpim {*}${theLpath} {*}${args};\n+    lappend args -fno-libs=-\n+    gm2_init {*}${theIpath} -fpim {*}${theLpath} {*}${args}\n }\n \n \n@@ -462,75 +478,85 @@ proc gm2_init_ulm { {path \"\"} args } {\n #\n #\n \n-proc gm2_init_log { {path \"\"} args } {\n-    global srcdir;\n-    global gccpath;\n+proc gm2_init_log { paths args } {\n+    global srcdir\n+    global gccpath\n \n-    set gm2src ${srcdir}/../m2;\n+    set gm2src ${srcdir}/../m2\n \n     send_log \"srcdir is $srcdir\\n\"\n     send_log \"gccpath is $gccpath\\n\"\n     send_log \"gm2src is $gm2src\\n\"\n \n-    set logIpath \"${gccpath}/libgm2/libm2log:${gm2src}/gm2-libs-pim\";\n-    set logLpath \"${gccpath}/libgm2/libm2log/.libs\";\n+    # FIXME: this seems to interleave the library defs.\n+    set theIpath -I${gccpath}/libgm2/libm2log\n+    lappend theIpath -I${gm2src}/gm2-libs-pim\n+    \n+    set theLpath -L${gccpath}/libgm2/libm2log/.libs\n+\n+    lappend theIpath -I${gccpath}/libgm2/libm2pim\n+    lappend theIpath -I${gm2src}/gm2-libs\n \n-    set pimIpath \"${gccpath}/libgm2/libm2pim:${gm2src}/gm2-libs\";\n-    set pimLpath \"${gccpath}/libgm2/libm2pim/.libs\";\n+    lappend theLpath -L${gccpath}/libgm2/libm2pim/.libs\n \n-    set isoIpath \"${gccpath}/libgm2/libm2iso:${gm2src}/gm2-libs-iso\";\n-    set pimIpath \"${gccpath}/libgm2/libm2pim:${gm2src}/gm2-libs\";\n+    lappend theIpath -I${gccpath}/libgm2/libm2iso\n+    lappend theIpath -I${gm2src}/gm2-libs-iso\n+    # ??? lappend theIpath -I${gm2src}/gm2-libs\n \n-    set theIpath \"-I${logIpath} -I${pimIpath} -I${isoIpath}\";\n-    set theLpath \"-L${logLpath} -L${pimLpath}\";\n+    lappend theLpath -L${gccpath}/libgm2/libm2iso/.libs\n \n-    if { $path != \"\" } then {\n-\tappend theIpath \" -I\"\n-\tappend theIpath ${path}\n+    foreach p $paths {\n+\tlappend theIpath -I$p\n     }\n \n     gm2_link_lib \"m2log m2pim m2iso\"\n-    gm2_init {*}${theIpath} -fpim {*}${theLpath} {*}${args};\n+    lappend args -fno-libs=-\n+    gm2_init {*}${theIpath} -fpim {*}${theLpath} {*}${args}\n }\n \n #\n #  gm2_init_cor - set the default libraries to choose COR and then PIM.\n #\n #\n \n-proc gm2_init_cor { {path \"\"} args } {\n-    global srcdir;\n-    global gccpath;\n-    global gm2_link_libraries;\n+proc gm2_init_cor { paths args } {\n+    global srcdir\n+    global gccpath\n+    global gm2_link_libraries\n \n-    set gm2src ${srcdir}/../m2;\n+    set gm2src ${srcdir}/../m2\n \n     send_log \"srcdir is $srcdir\\n\"\n     send_log \"gccpath is $gccpath\\n\"\n     send_log \"gm2src is $gm2src\\n\"\n \n-    set corIpath \"${gccpath}/libgm2/libm2cor:${gm2src}/gm2-libs-coroutines\";\n-    set corLpath \"${gccpath}/libgm2/libm2cor/.libs\";\n+    set theIpath -I${gccpath}/libgm2/libm2cor\n+    lappend theIpath -I${gm2src}/gm2-libs-coroutines\n+\n+    set theLpath -L${gccpath}/libgm2/libm2cor/.libs\n+\n+    lappend theIpath -I${gccpath}/libgm2/libm2pim\n+    lappend theIpath -I${gm2src}/gm2-libs-pim\n \n-    set pimIpath \"${gccpath}/libgm2/libm2pim:${gm2src}/gm2-libs\";\n-    set pimLpath \"${gccpath}/libgm2/libm2pim/.libs\";\n+    lappend theLpath -L${gccpath}/libgm2/libm2pim/.libs\n \n-    set isoIpath \"${gccpath}/libgm2/libm2iso:${gm2src}/gm2-libs-iso\";\n-    set isoLpath \"${gccpath}/libgm2/libm2iso/.libs\";\n+    lappend theIpath -I${gccpath}/libgm2/libm2log\n+    lappend theIpath -I${gm2src}/gm2-libs\n \n-    set logIpath \"${gccpath}/libgm2/libm2log:${gm2src}/gm2-libs-pim\";\n-    set logLpath \"${gccpath}/libgm2/libm2log/.libs\";\n+    lappend theLpath -L${gccpath}/libgm2/libm2log/.libs\n \n-    set theIpath \"-I${corIpath} -I${pimIpath} -I${logIpath} -I${isoIpath}\";\n-    set theLpath \"-L${corLpath} -L${pimLpath} -L${logLpath} -L${isoLpath}\";\n+    lappend theIpath -I${gccpath}/libgm2/libm2iso\n+    lappend theIpath -I${gm2src}/gm2-libs-iso\n \n-    if { $path != \"\" } then {\n-\tappend theIpath \" -I\"\n-\tappend theIpath ${path}\n+    lappend theLpath -L${gccpath}/libgm2/libm2iso/.libs\n+\n+    foreach p $paths {\n+\tlappend theIpath -I$p\n     }\n \n-    gm2_link_lib \"m2cor m2pim m2iso\"\n-    gm2_init {*}${theIpath} -fpim {*}${theLpath} {*}${args};\n+    gm2_link_lib \"m2cor m2pim m2log m2iso\"\n+    append args \" -fno-libs=- \"\n+    gm2_init {*}${theIpath} -fpim {*}${theLpath} {*}${args}\n }\n \n \n@@ -540,28 +566,27 @@ proc gm2_init_cor { {path \"\"} args } {\n #\n #\n \n-proc gm2_init_minx { dialect {path \"\"} args } {\n-    global srcdir;\n-    global gccpath;\n-    set gm2src ${srcdir}/../m2;\n+proc gm2_init_minx { dialect paths args } {\n+    global srcdir\n+    global gccpath\n+    set gm2src ${srcdir}/../m2\n \n     send_log \"srcdir is $srcdir\\n\"\n     send_log \"gccpath is $gccpath\\n\"\n     send_log \"gm2src is $gm2src\\n\"\n \n-    set theIpath \" -I${gccpath}/libgm2/libm2min\"\n-    append theIpath \" -I${gm2src}/gm2-libs-min\"\n+    set theIpath -I${gccpath}/libgm2/libm2min\n+    lappend theIpath -I${gm2src}/gm2-libs-min\n \n-    set theLpath \" -L${gccpath}/libgm2/libm2min/.libs\";\n+    set theLpath -L${gccpath}/libgm2/libm2min/.libs\n \n-    if { $path != \"\" } then {\n-\tappend theIpath \" -I\"\n-\tappend theIpath ${path}\n+    foreach p $paths {\n+\tlappend theIpath -I$p\n     }\n \n     gm2_link_lib \"m2min\"\n-    append args \" -fno-exceptions \"\n-    append args \" -fno-libs=- \"\n+    lappend args -fno-exceptions\n+    lappend args -fno-libs=-\n     gm2_init {*}${theIpath} {*}${dialect} {*}${theLpath} {*}${args}\n }\n \n@@ -570,6 +595,6 @@ proc gm2_init_minx { dialect {path \"\"} args } {\n #                 and pim dialect.\n #\n \n-proc gm2_init_min { {path \"\"} args } {\n-    gm2_init_minx -fpim {*}${path} {*}${args}\n+proc gm2_init_min { paths args } {\n+    gm2_init_minx -fpim $paths {*}${args}\n }"}]}