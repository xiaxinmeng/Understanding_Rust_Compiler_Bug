{"sha": "95c952c53231c402909d9342ee7ec1bcda2509e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjOTUyYzUzMjMxYzQwMjkwOWQ5MzQyZWU3ZWMxYmNkYTI1MDllNw==", "commit": {"author": {"name": "Ollie Wild", "email": "aaw@google.com", "date": "2011-05-02T16:25:14Z"}, "committer": {"name": "Ollie Wild", "email": "aaw@gcc.gnu.org", "date": "2011-05-02T16:25:14Z"}, "message": "sso_string_base.h (__sso_string_base<>::_M_construct): Fix unqualified lookup.\n\n\t* include/ext/sso_string_base.h (__sso_string_base<>::_M_construct):\n\tFix unqualified lookup.\n\t(__sso_string_base<>::_M_construct): Likewise.\n\t(__sso_string_base<>::_M_construct): Likewise.\n\t(__sso_string_base<>::_M_assign): Likewise.\n\t(__sso_string_base<>::_M_reserve): Likewise.\n\t(__sso_string_base<>::_M_mutate): Likewise.\n\t(__sso_string_base<>::_M_erase): Likewise.\n\t* include/ext/vstring.h (__versa_string<>::replace): Likewise.\n\t(__versa_string<>::compare): Likewise.\n\t* include/ext/vstring.tcc (__versa_string<>::compare): Likewise.\n\t(__versa_string<>::compare): Likewise.\n\t(__versa_string<>::compare): Likewise.\n\t(__versa_string<>::compare): Likewise.\n\t(__versa_string<>::compare): Likewise.\n\nFrom-SVN: r173257", "tree": {"sha": "1eb56ed00583a7c67643063451ce766b97362ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eb56ed00583a7c67643063451ce766b97362ebd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95c952c53231c402909d9342ee7ec1bcda2509e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c952c53231c402909d9342ee7ec1bcda2509e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95c952c53231c402909d9342ee7ec1bcda2509e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c952c53231c402909d9342ee7ec1bcda2509e7/comments", "author": {"login": "olliewild", "id": 11523068, "node_id": "MDQ6VXNlcjExNTIzMDY4", "avatar_url": "https://avatars.githubusercontent.com/u/11523068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olliewild", "html_url": "https://github.com/olliewild", "followers_url": "https://api.github.com/users/olliewild/followers", "following_url": "https://api.github.com/users/olliewild/following{/other_user}", "gists_url": "https://api.github.com/users/olliewild/gists{/gist_id}", "starred_url": "https://api.github.com/users/olliewild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olliewild/subscriptions", "organizations_url": "https://api.github.com/users/olliewild/orgs", "repos_url": "https://api.github.com/users/olliewild/repos", "events_url": "https://api.github.com/users/olliewild/events{/privacy}", "received_events_url": "https://api.github.com/users/olliewild/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47c94d21e4b95bf3f6d4797461f9dd80dceb22e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c94d21e4b95bf3f6d4797461f9dd80dceb22e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c94d21e4b95bf3f6d4797461f9dd80dceb22e8"}], "stats": {"total": 55, "additions": 36, "deletions": 19}, "files": [{"sha": "c264f1f718d6f6d5767a1471d788de3fbfeaa9aa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c952c53231c402909d9342ee7ec1bcda2509e7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c952c53231c402909d9342ee7ec1bcda2509e7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=95c952c53231c402909d9342ee7ec1bcda2509e7", "patch": "@@ -1,3 +1,21 @@\n+2011-05-02  Ollie Wild  <aaw@google.com>\n+\n+\t* include/ext/sso_string_base.h (__sso_string_base<>::_M_construct):\n+\tFix unqualified lookup.\n+\t(__sso_string_base<>::_M_construct): Likewise.\n+\t(__sso_string_base<>::_M_construct): Likewise.\n+\t(__sso_string_base<>::_M_assign): Likewise.\n+\t(__sso_string_base<>::_M_reserve): Likewise.\n+\t(__sso_string_base<>::_M_mutate): Likewise.\n+\t(__sso_string_base<>::_M_erase): Likewise.\n+\t* include/ext/vstring.h (__versa_string<>::replace): Likewise.\n+\t(__versa_string<>::compare): Likewise.\n+\t* include/ext/vstring.tcc (__versa_string<>::compare): Likewise.\n+\t(__versa_string<>::compare): Likewise.\n+\t(__versa_string<>::compare): Likewise.\n+\t(__versa_string<>::compare): Likewise.\n+\t(__versa_string<>::compare): Likewise.\n+\n 2011-05-02  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/xml/manual/status_cxx200x.xml: Update to reflect current status"}, {"sha": "ccaf419e15c14af0a8276ee0f277dacb66f14330", "filename": "libstdc++-v3/include/ext/sso_string_base.h", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c952c53231c402909d9342ee7ec1bcda2509e7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c952c53231c402909d9342ee7ec1bcda2509e7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h?ref=95c952c53231c402909d9342ee7ec1bcda2509e7", "patch": "@@ -411,7 +411,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t    // Allocate more space.\n \t\t    __capacity = __len + 1;\n \t\t    _CharT* __another = _M_create(__capacity, __len);\n-\t\t    _S_copy(__another, _M_data(), __len);\n+\t\t    this->_S_copy(__another, _M_data(), __len);\n \t\t    _M_dispose();\n \t\t    _M_data(__another);\n \t\t    _M_capacity(__capacity);\n@@ -451,7 +451,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \t// Check for out_of_range and length_error exceptions.\n \t__try\n-\t  { _S_copy_chars(_M_data(), __beg, __end); }\n+\t  { this->_S_copy_chars(_M_data(), __beg, __end); }\n \t__catch(...)\n \t  {\n \t    _M_dispose();\n@@ -473,7 +473,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n \n       if (__n)\n-\t_S_assign(_M_data(), __n, __c);\n+\tthis->_S_assign(_M_data(), __n, __c);\n \n       _M_set_length(__n);\n     }\n@@ -498,7 +498,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    }\n \n \t  if (__rsize)\n-\t    _S_copy(_M_data(), __rcs._M_data(), __rsize);\n+\t    this->_S_copy(_M_data(), __rcs._M_data(), __rsize);\n \n \t  _M_set_length(__rsize);\n \t}\n@@ -520,14 +520,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      || __res > size_type(_S_local_capacity))\n \t    {\n \t      _CharT* __tmp = _M_create(__res, __capacity);\n-\t      _S_copy(__tmp, _M_data(), _M_length() + 1);\n+\t      this->_S_copy(__tmp, _M_data(), _M_length() + 1);\n \t      _M_dispose();\n \t      _M_data(__tmp);\n \t      _M_capacity(__res);\n \t    }\n \t  else if (!_M_is_local())\n \t    {\n-\t      _S_copy(_M_local_data, _M_data(), _M_length() + 1);\n+\t      this->_S_copy(_M_local_data, _M_data(), _M_length() + 1);\n \t      _M_destroy(__capacity);\n \t      _M_data(_M_local_data);\n \t    }\n@@ -546,12 +546,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _CharT* __r = _M_create(__new_capacity, _M_capacity());\n \n       if (__pos)\n-\t_S_copy(__r, _M_data(), __pos);\n+\tthis->_S_copy(__r, _M_data(), __pos);\n       if (__s && __len2)\n-\t_S_copy(__r + __pos, __s, __len2);\n+\tthis->_S_copy(__r + __pos, __s, __len2);\n       if (__how_much)\n-\t_S_copy(__r + __pos + __len2,\n-\t\t_M_data() + __pos + __len1, __how_much);\n+\tthis->_S_copy(__r + __pos + __len2,\n+\t\t      _M_data() + __pos + __len1, __how_much);\n       \n       _M_dispose();\n       _M_data(__r);\n@@ -566,8 +566,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       const size_type __how_much = _M_length() - __pos - __n;\n \n       if (__how_much && __n)\n-\t_S_move(_M_data() + __pos, _M_data() + __pos + __n,\n-\t\t__how_much);\n+\tthis->_S_move(_M_data() + __pos, _M_data() + __pos + __n, __how_much);\n \n       _M_set_length(_M_length() - __n);\n     }"}, {"sha": "442a39225797afbee562e25677da7e8a6ba2ab56", "filename": "libstdc++-v3/include/ext/vstring.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c952c53231c402909d9342ee7ec1bcda2509e7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c952c53231c402909d9342ee7ec1bcda2509e7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h?ref=95c952c53231c402909d9342ee7ec1bcda2509e7", "patch": "@@ -1359,7 +1359,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t\t   && __i2 <= _M_iend());\n \t  __glibcxx_requires_valid_range(__k1, __k2);\n \t  typedef typename std::__is_integer<_InputIterator>::__type _Integral;\n-\t  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());\n+\t  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());\n \t}\n \n       // Specializations for the common case of pointer and iterator:\n@@ -1914,7 +1914,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \tint __r = traits_type::compare(this->_M_data(), __str.data(), __len);\n \tif (!__r)\n-\t  __r = _S_compare(__size, __osize);\n+\t  __r = this->_S_compare(__size, __osize);\n \treturn __r;\n       }\n "}, {"sha": "588985bbe92bc95cdd85d73fe910530eafe18f31", "filename": "libstdc++-v3/include/ext/vstring.tcc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c952c53231c402909d9342ee7ec1bcda2509e7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c952c53231c402909d9342ee7ec1bcda2509e7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.tcc?ref=95c952c53231c402909d9342ee7ec1bcda2509e7", "patch": "@@ -466,7 +466,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       int __r = traits_type::compare(this->_M_data() + __pos,\n \t\t\t\t     __str.data(), __len);\n       if (!__r)\n-\t__r = _S_compare(__n, __osize);\n+\t__r = this->_S_compare(__n, __osize);\n       return __r;\n     }\n \n@@ -485,7 +485,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       int __r = traits_type::compare(this->_M_data() + __pos1,\n \t\t\t\t     __str.data() + __pos2, __len);\n       if (!__r)\n-\t__r = _S_compare(__n1, __n2);\n+\t__r = this->_S_compare(__n1, __n2);\n       return __r;\n     }\n \n@@ -501,7 +501,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       const size_type __len = std::min(__size, __osize);\n       int __r = traits_type::compare(this->_M_data(), __s, __len);\n       if (!__r)\n-\t__r = _S_compare(__size, __osize);\n+\t__r = this->_S_compare(__size, __osize);\n       return __r;\n     }\n \n@@ -518,7 +518,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       const size_type __len = std::min(__n1, __osize);\n       int __r = traits_type::compare(this->_M_data() + __pos, __s, __len);\n       if (!__r)\n-\t__r = _S_compare(__n1, __osize);\n+\t__r = this->_S_compare(__n1, __osize);\n       return __r;\n     }\n \n@@ -535,7 +535,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       const size_type __len = std::min(__n1, __n2);\n       int __r = traits_type::compare(this->_M_data() + __pos, __s, __len);\n       if (!__r)\n-\t__r = _S_compare(__n1, __n2);\n+\t__r = this->_S_compare(__n1, __n2);\n       return __r;\n     }\n "}]}