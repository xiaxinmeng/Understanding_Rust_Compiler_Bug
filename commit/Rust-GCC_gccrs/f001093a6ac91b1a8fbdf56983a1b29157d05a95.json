{"sha": "f001093a6ac91b1a8fbdf56983a1b29157d05a95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwMTA5M2E2YWM5MWIxYThmYmRmNTY5ODNhMWIyOTE1N2QwNWE5NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2005-11-16T19:59:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-11-16T19:59:39Z"}, "message": "alpha.c (alpha_init_builtins): Use type_for_mode langhook to get a DImode integer type.\n\n\t* config/alpha/alpha.c (alpha_init_builtins): Use type_for_mode\n\tlanghook to get a DImode integer type.\n\nFrom-SVN: r107095", "tree": {"sha": "33c21669da912a4aca110c8791300be143f7baf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33c21669da912a4aca110c8791300be143f7baf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f001093a6ac91b1a8fbdf56983a1b29157d05a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f001093a6ac91b1a8fbdf56983a1b29157d05a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f001093a6ac91b1a8fbdf56983a1b29157d05a95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f001093a6ac91b1a8fbdf56983a1b29157d05a95/comments", "author": null, "committer": null, "parents": [{"sha": "46f32b2b9096aef6888b3a1882d88467b845e5fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f32b2b9096aef6888b3a1882d88467b845e5fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f32b2b9096aef6888b3a1882d88467b845e5fe"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "5c3a150338615e186fc645de97d80bf59acfab4a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f001093a6ac91b1a8fbdf56983a1b29157d05a95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f001093a6ac91b1a8fbdf56983a1b29157d05a95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f001093a6ac91b1a8fbdf56983a1b29157d05a95", "patch": "@@ -1,3 +1,8 @@\n+2005-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/alpha/alpha.c (alpha_init_builtins): Use type_for_mode\n+\tlanghook to get a DImode integer type.\n+\n 2005-11-16  Richard Henderson  <rth@redhat.com>\n \t    J\"orn Rennecke <joern.rennecke@st.com>\n \t    Ulrich Weigand  <uweigand@de.ibm.com>"}, {"sha": "4afdb81f8a123663ff8a5b80ddc1802921b2369f", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f001093a6ac91b1a8fbdf56983a1b29157d05a95/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f001093a6ac91b1a8fbdf56983a1b29157d05a95/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=f001093a6ac91b1a8fbdf56983a1b29157d05a95", "patch": "@@ -6473,32 +6473,35 @@ static void\n alpha_init_builtins (void)\n {\n   const struct alpha_builtin_def *p;\n+  tree dimode_integer_type_node;\n   tree ftype, attrs[2];\n   size_t i;\n \n+  dimode_integer_type_node = lang_hooks.types.type_for_mode (DImode, 0);\n+\n   attrs[0] = tree_cons (get_identifier (\"nothrow\"), NULL, NULL);\n   attrs[1] = tree_cons (get_identifier (\"const\"), NULL, attrs[0]);\n \n-  ftype = build_function_type (long_integer_type_node, void_list_node);\n+  ftype = build_function_type (dimode_integer_type_node, void_list_node);\n \n   p = zero_arg_builtins;\n   for (i = 0; i < ARRAY_SIZE (zero_arg_builtins); ++i, ++p)\n     if ((target_flags & p->target_mask) == p->target_mask)\n       lang_hooks.builtin_function (p->name, ftype, p->code, BUILT_IN_MD,\n \t\t\t\t   NULL, attrs[p->is_const]);\n \n-  ftype = build_function_type_list (long_integer_type_node,\n-\t\t\t\t    long_integer_type_node, NULL_TREE);\n+  ftype = build_function_type_list (dimode_integer_type_node,\n+\t\t\t\t    dimode_integer_type_node, NULL_TREE);\n \n   p = one_arg_builtins;\n   for (i = 0; i < ARRAY_SIZE (one_arg_builtins); ++i, ++p)\n     if ((target_flags & p->target_mask) == p->target_mask)\n       lang_hooks.builtin_function (p->name, ftype, p->code, BUILT_IN_MD,\n \t\t\t\t   NULL, attrs[p->is_const]);\n \n-  ftype = build_function_type_list (long_integer_type_node,\n-\t\t\t\t    long_integer_type_node,\n-\t\t\t\t    long_integer_type_node, NULL_TREE);\n+  ftype = build_function_type_list (dimode_integer_type_node,\n+\t\t\t\t    dimode_integer_type_node,\n+\t\t\t\t    dimode_integer_type_node, NULL_TREE);\n \n   p = two_arg_builtins;\n   for (i = 0; i < ARRAY_SIZE (two_arg_builtins); ++i, ++p)"}]}