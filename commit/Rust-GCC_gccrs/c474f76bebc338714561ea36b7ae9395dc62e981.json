{"sha": "c474f76bebc338714561ea36b7ae9395dc62e981", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ3NGY3NmJlYmMzMzg3MTQ1NjFlYTM2YjdhZTkzOTVkYzYyZTk4MQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-06-11T01:03:12Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-06-11T01:03:12Z"}, "message": "invoke.texi (MN10300 Options): Document -mno-crt0.\n\n* doc/invoke.texi (MN10300 Options): Document -mno-crt0.\n(SH Options): Document -mieee.\n* doc/install.texi (Final install): Remove obsolete information\nabout installing cross compilers.\n* doc/gcc.1: Rebuilt.\n\nFrom-SVN: r43164", "tree": {"sha": "68580c429e715063ffc0831c3c0ebace1a37beed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68580c429e715063ffc0831c3c0ebace1a37beed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c474f76bebc338714561ea36b7ae9395dc62e981", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c474f76bebc338714561ea36b7ae9395dc62e981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c474f76bebc338714561ea36b7ae9395dc62e981", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c474f76bebc338714561ea36b7ae9395dc62e981/comments", "author": null, "committer": null, "parents": [{"sha": "61c7194612d105be0b93e3f39e909cf16819f9f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c7194612d105be0b93e3f39e909cf16819f9f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c7194612d105be0b93e3f39e909cf16819f9f1"}], "stats": {"total": 93, "additions": 60, "deletions": 33}, "files": [{"sha": "adf2a20a08cd9fbc419dc5f8676d8e2325e5c3e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c474f76bebc338714561ea36b7ae9395dc62e981/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c474f76bebc338714561ea36b7ae9395dc62e981/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c474f76bebc338714561ea36b7ae9395dc62e981", "patch": "@@ -1,3 +1,11 @@\n+2001-06-10  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* doc/invoke.texi (MN10300 Options): Document -mno-crt0.\n+\t(SH Options): Document -mieee.\n+\t* doc/install.texi (Final install): Remove obsolete information\n+\tabout installing cross compilers.\n+\t* doc/gcc.1: Rebuilt.\n+\n 2001-06-10  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (override_options): Set align_loops,\n@@ -85,8 +93,6 @@ Sun Jun 10 10:00:17 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \t-print-multi-lib.\n \t* doc/gcc.1: Rebuilt.\n \n-2001-06-09  Alexandre Oliva  <aoliva@redhat.com>\n-\n \t* toplev.c (independent_decode_option): Require `=' between\n \t`-aux-info' and filename in the same argument.\n \t* gcc.c: Don't pass -aux-info=filename twice."}, {"sha": "9ea5bad85683a0eb5f114f6f43921d3b552bc1ca", "filename": "gcc/doc/gcc.1", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c474f76bebc338714561ea36b7ae9395dc62e981/gcc%2Fdoc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c474f76bebc338714561ea36b7ae9395dc62e981/gcc%2Fdoc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.1?ref=c474f76bebc338714561ea36b7ae9395dc62e981", "patch": "@@ -1,5 +1,5 @@\n .\\\" Automatically generated by Pod::Man version 1.15\n-.\\\" Sat Jun  9 21:33:22 2001\n+.\\\" Sun Jun 10 22:02:47 2001\n .\\\"\n .\\\" Standard preamble:\n .\\\" ======================================================================\n@@ -138,7 +138,7 @@\n .\\\" ======================================================================\n .\\\"\n .IX Title \"GCC 1\"\n-.TH GCC 1 \"gcc-3.1\" \"2001-06-09\" \"GNU\"\n+.TH GCC 1 \"gcc-3.1\" \"2001-06-10\" \"GNU\"\n .UC\n .SH \"NAME\"\n gcc \\- \\s-1GNU\\s0 project C and \\*(C+ compiler\n@@ -293,7 +293,7 @@ in the following sections.\n \\&\\-fkeep-static-consts  \\-fmove-all-movables \n \\&\\-fno-default-inline  \\-fno-defer-pop \n \\&\\-fno-function-cse  \\-fno-guess-branch-probability \n-\\&\\-fno-inline  \\-fno-math-errno  \\-fno-peephole \n+\\&\\-fno-inline  \\-fno-math-errno  \\-fno-peephole  \\-fno-peephole2 \n \\&\\-funsafe-math-optimizations \\-fno-trapping-math \n \\&\\-fomit-frame-pointer  \\-foptimize-register-move \n \\&\\-foptimize-sibling-calls  \\-freduce-all-givs \n@@ -413,11 +413,9 @@ in the following sections.\n .Sp\n \\&\\fI\\s-1MN10300\\s0 Options\\fR\n .Sp\n-\\&\\fB\\-mmult-bug \n-\\&\\-mno-mult-bug \n-\\&\\-mam33 \n-\\&\\-mno-am33 \n-\\&\\-mrelax\\fR\n+\\&\\fB\\-mmult-bug  \\-mno-mult-bug \n+\\&\\-mam33  \\-mno-am33 \n+\\&\\-mno-crt0  \\-mrelax\\fR\n .Sp\n \\&\\fIM32R/D Options\\fR\n .Sp\n@@ -541,9 +539,8 @@ in the following sections.\n \\&\\-m4\\-nofpu  \\-m4\\-single-only  \\-m4\\-single  \\-m4 \n \\&\\-mb  \\-ml  \\-mdalign  \\-mrelax \n \\&\\-mbigtable  \\-mfmovd  \\-mhitachi  \\-mnomacsave \n-\\&\\-misize  \\-mpadstruct  \\-mspace \n-\\&\\-mprefergot\n-\\&\\-musermode\\fR\n+\\&\\-mieee  \\-misize  \\-mpadstruct  \\-mspace \n+\\&\\-mprefergot  \\-musermode\\fR\n .Sp\n \\&\\fISystem V Options\\fR\n .Sp\n@@ -599,8 +596,9 @@ in the following sections.\n .Ip \"\\fICode Generation Options\\fR\" 4\n .IX Item \"Code Generation Options\"\n \\&\\fB\\-fcall-saved-\\fR\\fIreg\\fR  \\fB\\-fcall-used-\\fR\\fIreg\\fR \n-\\&\\fB\\-fexceptions  \\-funwind-tables  \\-ffixed-\\fR\\fIreg\\fR \n-\\&\\fB\\-finhibit-size-directive  \\-finstrument-functions \n+\\&\\fB\\-ffixed-\\fR\\fIreg\\fR \\fB\\-fexceptions \n+\\&\\-fnon-call-exceptions  \\-funwind-tables \n+\\&\\-finhibit-size-directive  \\-finstrument-functions \n \\&\\-fcheck-memory-usage  \\-fprefix-function-name \n \\&\\-fno-common  \\-fno-ident  \\-fno-gnu-linker \n \\&\\-fpcc-struct-return  \\-fpic  \\-fPIC \n@@ -3201,7 +3199,14 @@ We're very interested in code that runs \\fIslower\\fR\n when these options are \\fIenabled\\fR.\n .Ip \"\\fB\\-fno-peephole\\fR\" 4\n .IX Item \"-fno-peephole\"\n-Disable any machine-specific peephole optimizations.\n+.PD 0\n+.Ip \"\\fB\\-fno-peephole2\\fR\" 4\n+.IX Item \"-fno-peephole2\"\n+.PD\n+Disable any machine-specific peephole optimizations.  The difference\n+between \\fB\\-fno-peephole\\fR and \\fB\\-fno-peephole2\\fR is in how they\n+are implemented in the compiler; some targets use one, some use the\n+other, a few use both.\n .Ip \"\\fB\\-fbranch-probabilities\\fR\" 4\n .IX Item \"-fbranch-probabilities\"\n After running a program compiled with \\fB\\-fprofile-arcs\\fR, you can compile it a second time using\n@@ -4941,6 +4946,9 @@ Generate code which uses features specific to the \\s-1AM33\\s0 processor.\n .IX Item \"-mno-am33\"\n Do not generate code which uses features specific to the \\s-1AM33\\s0 processor.  This\n is the default.\n+.Ip \"\\fB\\-mno-crt0\\fR\" 4\n+.IX Item \"-mno-crt0\"\n+Do not link in the C run-time initialization object file.\n .Ip \"\\fB\\-mrelax\\fR\" 4\n .IX Item \"-mrelax\"\n Indicate to the linker that it should perform a relaxation optimization pass\n@@ -6851,6 +6859,9 @@ Comply with the calling conventions defined by Hitachi.\n .IX Item \"-mnomacsave\"\n Mark the \\f(CW\\*(C`MAC\\*(C'\\fR register as call-clobbered, even if\n \\&\\fB\\-mhitachi\\fR is given.\n+.Ip \"\\fB\\-mieee\\fR\" 4\n+.IX Item \"-mieee\"\n+Increase IEEE-compliance of floating-point code.\n .Ip \"\\fB\\-misize\\fR\" 4\n .IX Item \"-misize\"\n Dump instruction size and location in the assembly code.\n@@ -7548,6 +7559,14 @@ to enable this option when compiling C code that needs to interoperate\n properly with exception handlers written in \\*(C+.  You may also wish to\n disable this option if you are compiling older \\*(C+ programs that don't\n use exception handling.\n+.Ip \"\\fB\\-fnon-call-exceptions\\fR\" 4\n+.IX Item \"-fnon-call-exceptions\"\n+Generate code that allows trapping instructions to throw exceptions.\n+Note that this requires platform-specific runtime support that does\n+not exist everywhere.  Moreover, it only allows \\fItrapping\\fR\n+instructions to throw exceptions, i.e. memory references or floating\n+point instructions.  It does not allow exceptions to be thrown from\n+arbitrary signal handlers such as \\f(CW\\*(C`SIGALRM\\*(C'\\fR.\n .Ip \"\\fB\\-funwind-tables\\fR\" 4\n .IX Item \"-funwind-tables\"\n Similar to \\fB\\-fexceptions\\fR, except that it will just generate any needed"}, {"sha": "60d7f779e12766813e31932e45cad0dab8a7734c", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c474f76bebc338714561ea36b7ae9395dc62e981/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c474f76bebc338714561ea36b7ae9395dc62e981/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=c474f76bebc338714561ea36b7ae9395dc62e981", "patch": "@@ -33,7 +33,7 @@\n @settitle Installing GCC: Binaries\n @end ifset\n \n-@comment $Id: install.texi,v 1.15 2001/06/03 19:06:55 jsm28 Exp $\n+@comment $Id: install.texi,v 1.16 2001/06/04 22:56:52 ljrittle Exp $\n @c Copyright (C) 2001 Free Software Foundation, Inc.\n @c *** Converted to texinfo by Dean Wakerley, dean@wakerley.com\n \n@@ -958,25 +958,22 @@ should look here first if you think your results are unreasonable.\n @end ifnothtml\n \n Now that GCC has been built and tested, you can install it with\n-@samp{cd @var{objdir}; make install} for a native compiler or\n-@samp{cd @var{objdir}; make install LANGUAGES=\"c c++\"} for \n-a cross compiler (note installing cross compilers will be easier in the \n-next release!).\n+@samp{cd @var{objdir}; make install}.\n \n That step completes the installation of GCC; user level binaries can\n be found in @file{@var{prefix}/bin} where @var{prefix} is the value you\n specified with the @option{--prefix} to configure (or @file{/usr/local}\n by default).\n \n If you don't mind, please quickly review the \n-@uref{http://gcc.gnu.org/gcc-2.95/buildstat.html,,build status page}.\n+@uref{http://gcc.gnu.org/gcc-3.0/buildstat.html,,build status page}.\n If your system is not listed, send a note to\n @uref{mailto:gcc@@gcc.gnu.org,,gcc@@gcc.gnu.org} indicating\n that you successfully built and installed GCC.\n \n-Include the output from running @file{@var{srcdir}/config.guess}.  (Do not\n-send us the config.guess file itself, just the output from running\n-it!)\n+Include the output from running @file{@var{srcdir}/config.guess}.  (Do\n+not send us the config.guess file itself, just the one-line output from\n+running it!)\n \n If you find a bug, please report it following our\n @uref{../bugs.html,,bug reporting guidelines}."}, {"sha": "04e0f329b3e5394d338de26d173951b16c3ed91d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c474f76bebc338714561ea36b7ae9395dc62e981/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c474f76bebc338714561ea36b7ae9395dc62e981/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c474f76bebc338714561ea36b7ae9395dc62e981", "patch": "@@ -394,11 +394,9 @@ in the following sections.\n \n @emph{MN10300 Options}\n @gccoptlist{\n--mmult-bug @gol\n--mno-mult-bug @gol\n--mam33 @gol\n--mno-am33 @gol\n--mrelax}\n+-mmult-bug  -mno-mult-bug @gol\n+-mam33  -mno-am33 @gol\n+-mno-crt0  -mrelax}\n \n @emph{M32R/D Options}\n @gccoptlist{\n@@ -522,9 +520,8 @@ in the following sections.\n -m4-nofpu  -m4-single-only  -m4-single  -m4 @gol\n -mb  -ml  -mdalign  -mrelax @gol\n -mbigtable  -mfmovd  -mhitachi  -mnomacsave @gol\n--misize  -mpadstruct  -mspace @gol\n--mprefergot\n--musermode}\n+-mieee  -misize  -mpadstruct  -mspace @gol\n+-mprefergot  -musermode}\n \n @emph{System V Options}\n @gccoptlist{\n@@ -6102,6 +6099,10 @@ Generate code which uses features specific to the AM33 processor.\n Do not generate code which uses features specific to the AM33 processor.  This\n is the default.\n \n+@item -mno-crt0\n+@opindex mno-crt0\n+Do not link in the C run-time initialization object file.\n+\n @item -mrelax\n @opindex mrelax\n Indicate to the linker that it should perform a relaxation optimization pass\n@@ -8154,6 +8155,10 @@ Comply with the calling conventions defined by Hitachi.\n Mark the @code{MAC} register as call-clobbered, even if\n @option{-mhitachi} is given.\n \n+@item -mieee\n+@opindex mieee\n+Increase IEEE-compliance of floating-point code.\n+\n @item -misize\n @opindex misize\n Dump instruction size and location in the assembly code."}]}