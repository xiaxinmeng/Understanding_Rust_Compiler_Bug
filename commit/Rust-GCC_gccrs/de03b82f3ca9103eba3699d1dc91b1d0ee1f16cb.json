{"sha": "de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwM2I4MmYzY2E5MTAzZWJhMzY5OWQxZGM5MWIxZDBlZTFmMTZjYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-06T19:13:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-06T20:08:40Z"}, "message": "c++: access checking in aggregate initialization [PR96673]\n\nWe were deferring access checks while parsing B<int>{}, didn't adjust that\nwhen we went to instantiate the default member initializer for B::c,\ndeferred access checking for C::C, and then checked it after parsing\nB<int>{}, back in the main() context which has no access.  We need to do the\naccess checks in the class context of the DMI.\n\nI tried fixing this in push_to/pop_from_top_level, but that caused several\nregressions.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/96673\n\t* init.c (get_nsdmi): Don't defer access checking.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/96673\n\t* g++.dg/cpp1y/nsdmi-aggr13.C: New test.", "tree": {"sha": "2cfbdb03fd9ae1c5f07a02e5d40ed671000191f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cfbdb03fd9ae1c5f07a02e5d40ed671000191f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8685348075d91945066dea9b564bd42cbc1d22bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8685348075d91945066dea9b564bd42cbc1d22bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8685348075d91945066dea9b564bd42cbc1d22bd"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "91b45a1a69511600ac4da7e1705af5e167cb190b", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb", "patch": "@@ -591,6 +591,7 @@ get_nsdmi (tree member, bool in_ctor, tsubst_flags_t complain)\n \t    {\n \t      push_to_top_level ();\n \t      push_nested_class (ctx);\n+\t      push_deferring_access_checks (dk_no_deferred);\n \t      pushed = true;\n \t    }\n \n@@ -616,6 +617,7 @@ get_nsdmi (tree member, bool in_ctor, tsubst_flags_t complain)\n \n \t  if (pushed)\n \t    {\n+\t      pop_deferring_access_checks ();\n \t      pop_nested_class ();\n \t      pop_from_top_level ();\n \t    }"}, {"sha": "845e26ff59339218e58fe65dd27d7cbf91e4d033", "filename": "gcc/testsuite/g++.dg/cpp1y/nsdmi-aggr13.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnsdmi-aggr13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnsdmi-aggr13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnsdmi-aggr13.C?ref=de03b82f3ca9103eba3699d1dc91b1d0ee1f16cb", "patch": "@@ -0,0 +1,33 @@\n+// PR c++/96673\n+// { dg-do compile { target c++11 } }\n+\n+template <class T>\n+class A {};\n+\n+template <class T>\n+class B;\n+\n+template <class T>\n+class C {\n+    private:\n+\n+    friend class B<T>;\n+\n+    explicit C(A<T>&) {};\n+};\n+\n+\n+template <class T>\n+class B {\n+    public:\n+    B() = default;\n+    //B() {};       // << This implementation of the constructor makes it work\n+\n+    A<T> a = {};\n+    C<T> c = C<T>{a};\n+};\n+\n+int main() {\n+    auto b = B<int>{};\n+    auto &c = b.c;\n+}"}]}