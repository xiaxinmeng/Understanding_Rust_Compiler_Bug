{"sha": "2e7ac77cb9952913586e6b0e81776710b10e69f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU3YWM3N2NiOTk1MjkxMzU4NmU2YjBlODE3NzY3MTBiMTBlNjlmNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-12T17:41:35Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-12T17:41:35Z"}, "message": "(ASM_OUTPUT_DOUBLE): Always use REAL_VALUE_TO_TARGET_DOUBLE.\n\n(ASM_OUTPUT_FLOAT): Always use REAL_VALUE_TO_TARGET_SINGLE.\n\nFrom-SVN: r5140", "tree": {"sha": "2784b213318c17cb2e9bed4d1203164ab468d7f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2784b213318c17cb2e9bed4d1203164ab468d7f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e7ac77cb9952913586e6b0e81776710b10e69f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e7ac77cb9952913586e6b0e81776710b10e69f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e7ac77cb9952913586e6b0e81776710b10e69f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e7ac77cb9952913586e6b0e81776710b10e69f5/comments", "author": null, "committer": null, "parents": [{"sha": "7d26fec6ad4427524ae363313e610c77b48e9993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d26fec6ad4427524ae363313e610c77b48e9993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d26fec6ad4427524ae363313e610c77b48e9993"}], "stats": {"total": 41, "additions": 8, "deletions": 33}, "files": [{"sha": "914ecc5ee754a21f86f83cd5225ce04c9c564b0f", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 8, "deletions": 33, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e7ac77cb9952913586e6b0e81776710b10e69f5/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e7ac77cb9952913586e6b0e81776710b10e69f5/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=2e7ac77cb9952913586e6b0e81776710b10e69f5", "patch": "@@ -1619,47 +1619,22 @@ extern struct rtx_def *legitimize_pic_address ();\n \n /* This is how to output an assembler line defining a `double' constant.  */\n \n-/* Assemblers (both gas 1.35 and as in 4.0.3)\n-   seem to treat -0.0 as if it were 0.0.\n-   They reject 99e9999, but accept inf.  */\n #define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n-    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n-        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n-\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tlong t[2];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_TARGET_DOUBLE ((VALUE), t);\t\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t0x%lx\\n\\t%s\\t0x%lx\\n\",\t\t\t\\\n-\t\t ASM_LONG, t[0], ASM_LONG, t[1]);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tchar str[30];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.17g\", str);\t\t\t\\\n-\tfprintf (FILE, \"\\t.double 0r%s\\n\", str);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n+    long t[2];\t\t\t\t\t\t\t\t\\\n+    REAL_VALUE_TO_TARGET_DOUBLE ((VALUE), t);\t\t\t\t\\\n+    fprintf (FILE, \"\\t%s\\t0x%lx\\n\\t%s\\t0x%lx\\n\",\t\t\t\\\n+\t     ASM_LONG, t[0], ASM_LONG, t[1]);\t\t\t\t\\\n   }\n \n /* This is how to output an assembler line defining a `float' constant.  */\n \n #define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n-    if (REAL_VALUE_ISINF (VALUE)\t\t\t\t\t\\\n-        || REAL_VALUE_ISNAN (VALUE)\t\t\t\t\t\\\n-\t|| REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tlong t;\t\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t0x%lx\\n\", ASM_LONG, t);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tchar str[30];\t\t\t\t\t\t\t\\\n-\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", str);\t\t\t\\\n-\tfprintf (FILE, \"\\t.single 0r%s\\n\", str);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\n+    long t;\t\t\t\t\t\t\t\t\\\n+    REAL_VALUE_TO_TARGET_SINGLE ((VALUE), t);\t\t\t\t\\\n+    fprintf (FILE, \"\\t%s\\t0x%lx\\n\", ASM_LONG, t);\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n \n /* This is how to output an assembler line defining a `long double'\n    constant.  */"}]}