{"sha": "a80bcfc5b1cb471d904ae9135256d9d0b0d77cd4", "node_id": "C_kwDOANBUbNoAKGE4MGJjZmM1YjFjYjQ3MWQ5MDRhZTkxMzUyNTZkOWQwYjBkNzdjZDQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-15T12:01:42Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-22T09:34:23Z"}, "message": "Remove bad prefix from RelativeTypePath resolution\n\nThe TypePath resolver is a naieve and assumes all paths are fully\nresolveable at name resolution time. This is the first patch to update\nthis to resolve each segement in turn.\n\nAddresses #746", "tree": {"sha": "6394daac0a1a3addd6e5843adeb99ea1d30880e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6394daac0a1a3addd6e5843adeb99ea1d30880e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a80bcfc5b1cb471d904ae9135256d9d0b0d77cd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a80bcfc5b1cb471d904ae9135256d9d0b0d77cd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a80bcfc5b1cb471d904ae9135256d9d0b0d77cd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a80bcfc5b1cb471d904ae9135256d9d0b0d77cd4/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "649e3e074bf8306bf0eb042f10483dbd61cd040b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649e3e074bf8306bf0eb042f10483dbd61cd040b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649e3e074bf8306bf0eb042f10483dbd61cd040b"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "a6d1da14b8b9f09277d974f72bf14eca164b1359", "filename": "gcc/rust/resolve/rust-ast-resolve-type.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a80bcfc5b1cb471d904ae9135256d9d0b0d77cd4/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a80bcfc5b1cb471d904ae9135256d9d0b0d77cd4/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h?ref=a80bcfc5b1cb471d904ae9135256d9d0b0d77cd4", "patch": "@@ -189,7 +189,6 @@ class ResolveRelativeTypePath : public ResolveTypeToCanonicalPath\n \n public:\n   static NodeId go (AST::TypePath &path, NodeId parent,\n-\t\t    const CanonicalPath &prefix,\n \t\t    bool canonicalize_type_with_generics)\n   {\n     CanonicalPath canonical_path\n@@ -203,10 +202,6 @@ class ResolveRelativeTypePath : public ResolveTypeToCanonicalPath\n \treturn UNKNOWN_NODEID;\n       }\n \n-    CanonicalPath lookup = canonical_path;\n-    if (!prefix.is_empty ())\n-      lookup = prefix.append (canonical_path);\n-\n     auto resolver = Resolver::get ();\n     NodeId resolved_node = UNKNOWN_NODEID;\n \n@@ -223,11 +218,10 @@ class ResolveRelativeTypePath : public ResolveTypeToCanonicalPath\n   }\n \n   static NodeId go (AST::QualifiedPathInType &path, NodeId parent,\n-\t\t    const CanonicalPath &prefix,\n \t\t    bool canonicalize_type_with_generics)\n   {\n     auto &qualified_path = path.get_qualified_path_type ();\n-    CanonicalPath result = prefix;\n+    CanonicalPath result = CanonicalPath::create_empty ();\n     if (!resolve_qual_seg (qualified_path, result))\n       return UNKNOWN_NODEID;\n \n@@ -324,7 +318,6 @@ class ResolveType : public ResolverBase\n   {\n     resolved_node\n       = ResolveRelativeTypePath::go (path, parent,\n-\t\t\t\t     CanonicalPath::create_empty (),\n \t\t\t\t     canonicalize_type_with_generics);\n     ok = resolved_node != UNKNOWN_NODEID;\n     if (ok)\n@@ -340,7 +333,6 @@ class ResolveType : public ResolverBase\n   {\n     resolved_node\n       = ResolveRelativeTypePath::go (path, parent,\n-\t\t\t\t     CanonicalPath::create_empty (),\n \t\t\t\t     canonicalize_type_with_generics);\n     ok = resolved_node != UNKNOWN_NODEID;\n   }"}]}