{"sha": "b49eefa5747d53788ac33f34fa1d034acd21668e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ5ZWVmYTU3NDdkNTM3ODhhYzMzZjM0ZmExZDAzNGFjZDIxNjY4ZQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-05-28T18:04:41Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-05-28T18:04:41Z"}, "message": "re PR rtl-optimization/57439 (FAIL: gcc.c-torture/execute/920501-6.c execution,  -O1)\n\n        PR rtl-optimization/57439\n        * postreload.c (move2add_use_add2_insn): Use gen_lowpart_common.\n\nFrom-SVN: r199387", "tree": {"sha": "303381d504ff815607487d6ec08358b4610449b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/303381d504ff815607487d6ec08358b4610449b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b49eefa5747d53788ac33f34fa1d034acd21668e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49eefa5747d53788ac33f34fa1d034acd21668e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b49eefa5747d53788ac33f34fa1d034acd21668e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49eefa5747d53788ac33f34fa1d034acd21668e/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9daf6dbb21f8afce247c361f4f2a3ce435908cba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9daf6dbb21f8afce247c361f4f2a3ce435908cba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9daf6dbb21f8afce247c361f4f2a3ce435908cba"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "5af380adfb39ee6b6ced2f1354267a3bd8745dac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b49eefa5747d53788ac33f34fa1d034acd21668e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b49eefa5747d53788ac33f34fa1d034acd21668e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b49eefa5747d53788ac33f34fa1d034acd21668e", "patch": "@@ -1,3 +1,8 @@\n+2013-05-28  Joern Rennecke <joern.rennecke@embecosm.com>\n+\n+\tPR rtl-optimization/57439\n+\t* postreload.c (move2add_use_add2_insn): Use gen_lowpart_common.\n+\n 2013-05-28  Easwaran Raman  <eraman@google.com>\n \n \tPR tree-optimization/57337"}, {"sha": "558ab8b867ea21715c6834f44d9c028c7e40f785", "filename": "gcc/postreload.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b49eefa5747d53788ac33f34fa1d034acd21668e/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b49eefa5747d53788ac33f34fa1d034acd21668e/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=b49eefa5747d53788ac33f34fa1d034acd21668e", "patch": "@@ -1794,8 +1794,7 @@ move2add_use_add2_insn (rtx reg, rtx sym, rtx off, rtx insn)\n \t\t  && ((reg_offset[regno] & ~GET_MODE_MASK (narrow_mode))\n \t\t      == (INTVAL (off) & ~GET_MODE_MASK (narrow_mode))))\n \t\t{\n-\t\t  rtx narrow_reg = gen_rtx_REG (narrow_mode,\n-\t\t\t\t\t\tREGNO (reg));\n+\t\t  rtx narrow_reg = gen_lowpart_common (narrow_mode, reg);\n \t\t  rtx narrow_src = gen_int_mode (INTVAL (off),\n \t\t\t\t\t\t narrow_mode);\n \t\t  rtx new_set"}]}