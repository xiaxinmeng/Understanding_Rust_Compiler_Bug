{"sha": "8b9aa1a98fd194ab8fad3f54e232172fd857f077", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI5YWExYTk4ZmQxOTRhYjhmYWQzZjU0ZTIzMjE3MmZkODU3ZjA3Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-01T13:37:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-01T13:37:31Z"}, "message": "[Ada] Make No_Inline pragma effective for generic subprograms\n\n2019-07-01  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Analyze_Subprogram_Instantiation): Move up\n\thandling of Has_Pragma_Inline_Always and deal with\n\tHas_Pragma_No_Inline.\n\nFrom-SVN: r272880", "tree": {"sha": "7416926e0f97712934f4cfe673b00b3e2d3b57a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7416926e0f97712934f4cfe673b00b3e2d3b57a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b9aa1a98fd194ab8fad3f54e232172fd857f077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9aa1a98fd194ab8fad3f54e232172fd857f077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9aa1a98fd194ab8fad3f54e232172fd857f077", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9aa1a98fd194ab8fad3f54e232172fd857f077/comments", "author": null, "committer": null, "parents": [{"sha": "f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f603c9855e36cd7ab706174bddb997b7bb3f2ce2"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "a342b9853a93021badf2039e24ca27320ce2b1cf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9aa1a98fd194ab8fad3f54e232172fd857f077/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9aa1a98fd194ab8fad3f54e232172fd857f077/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8b9aa1a98fd194ab8fad3f54e232172fd857f077", "patch": "@@ -1,3 +1,9 @@\n+2019-07-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Subprogram_Instantiation): Move up\n+\thandling of Has_Pragma_Inline_Always and deal with\n+\tHas_Pragma_No_Inline.\n+\n 2019-07-01  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Build_Derived_Record_Type): If the parent type is"}, {"sha": "0395af942a9de1f4aaf9586ff1ac0b03b8612364", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9aa1a98fd194ab8fad3f54e232172fd857f077/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9aa1a98fd194ab8fad3f54e232172fd857f077/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=8b9aa1a98fd194ab8fad3f54e232172fd857f077", "patch": "@@ -5654,6 +5654,16 @@ package body Sem_Ch12 is\n          Set_Has_Pragma_Inline (Act_Decl_Id, Has_Pragma_Inline (Gen_Unit));\n          Set_Has_Pragma_Inline (Anon_Id,     Has_Pragma_Inline (Gen_Unit));\n \n+         Set_Has_Pragma_Inline_Always\n+           (Act_Decl_Id, Has_Pragma_Inline_Always (Gen_Unit));\n+         Set_Has_Pragma_Inline_Always\n+           (Anon_Id,     Has_Pragma_Inline_Always (Gen_Unit));\n+\n+         Set_Has_Pragma_No_Inline\n+           (Act_Decl_Id, Has_Pragma_No_Inline (Gen_Unit));\n+         Set_Has_Pragma_No_Inline\n+           (Anon_Id,     Has_Pragma_No_Inline (Gen_Unit));\n+\n          --  Propagate No_Return if pragma applied to generic unit. This must\n          --  be done explicitly because pragma does not appear in generic\n          --  declaration (unlike the aspect case).\n@@ -5663,11 +5673,6 @@ package body Sem_Ch12 is\n             Set_No_Return (Anon_Id);\n          end if;\n \n-         Set_Has_Pragma_Inline_Always\n-           (Act_Decl_Id, Has_Pragma_Inline_Always (Gen_Unit));\n-         Set_Has_Pragma_Inline_Always\n-           (Anon_Id,     Has_Pragma_Inline_Always (Gen_Unit));\n-\n          --  Mark both the instance spec and the anonymous package in case the\n          --  body is instantiated at a later pass. This preserves the original\n          --  context in effect for the body."}]}