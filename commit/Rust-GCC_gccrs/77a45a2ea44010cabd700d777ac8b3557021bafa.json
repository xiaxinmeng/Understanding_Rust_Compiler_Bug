{"sha": "77a45a2ea44010cabd700d777ac8b3557021bafa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdhNDVhMmVhNDQwMTBjYWJkNzAwZDc3N2FjOGIzNTU3MDIxYmFmYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-06-12T09:34:00Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-06-12T09:34:00Z"}, "message": "fold-const.c (fold): Revert last change.\n\n        * fold-const.c (fold): Revert last change.  It breaks constant\n        expressions somehow.\n\nFrom-SVN: r20441", "tree": {"sha": "cc12dcf3279cc9f528603a60ce1954a76753dc3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc12dcf3279cc9f528603a60ce1954a76753dc3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77a45a2ea44010cabd700d777ac8b3557021bafa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a45a2ea44010cabd700d777ac8b3557021bafa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a45a2ea44010cabd700d777ac8b3557021bafa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a45a2ea44010cabd700d777ac8b3557021bafa/comments", "author": null, "committer": null, "parents": [{"sha": "8d62b411cf5f8c9225388d466934878fc2c8e379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d62b411cf5f8c9225388d466934878fc2c8e379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d62b411cf5f8c9225388d466934878fc2c8e379"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "78bc3e73d3e9c83237c548de721419f077d7abff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a45a2ea44010cabd700d777ac8b3557021bafa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a45a2ea44010cabd700d777ac8b3557021bafa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77a45a2ea44010cabd700d777ac8b3557021bafa", "patch": "@@ -1,3 +1,8 @@\n+Fri Jun 12 09:33:44 1998  Richard Henderson <rth@cygnus.com>\n+\n+\t* fold-const.c (fold): Revert last change.  It breaks constant\n+\texpressions somehow.\n+\n Fri Jun 12 10:23:36 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n \n \t* expr.c (do_jump, case EQ_EXPR, NE_EXPR): When comparing complex"}, {"sha": "5daa253a44962b1e568214dfaf43f5045c48dc60", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a45a2ea44010cabd700d777ac8b3557021bafa/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a45a2ea44010cabd700d777ac8b3557021bafa/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=77a45a2ea44010cabd700d777ac8b3557021bafa", "patch": "@@ -4433,12 +4433,9 @@ fold (expr)\n \t\t    return convert (TREE_TYPE (t), con);\n \t\t    \n \t\t  /* If ARG0 is a constant, don't change things around;\n-\t\t     instead keep all the constant computations together.\n-\t\t     Notice, however, if we can merge integer constants.  */\n+\t\t     instead keep all the constant computations together.  */\n \n-\t\t  if (TREE_CONSTANT (arg0)\n-\t\t      && !(TREE_CODE (con) == INTEGER_CST\n-\t\t\t   && TREE_CODE (arg1) == INTEGER_CST))\n+\t\t  if (TREE_CONSTANT (arg0))\n \t\t    return t;\n \n \t\t  /* Otherwise return (CON +- ARG1) - VAR.  */\n@@ -4453,12 +4450,9 @@ fold (expr)\n \t\t    return convert (TREE_TYPE (t), con);\n \t\t    \n \t\t  /* If ARG0 is a constant, don't change things around;\n-\t\t     instead keep all the constant computations together.\n-\t\t     Notice, however, if we can merge integer constants.  */\n+\t\t     instead keep all the constant computations together.  */\n \n-\t\t  if (TREE_CONSTANT (arg0)\n-\t\t      && !(TREE_CODE (con) == INTEGER_CST\n-\t\t\t   && TREE_CODE (arg1) == INTEGER_CST))\n+\t\t  if (TREE_CONSTANT (arg0))\n \t\t    return t;\n \n \t\t  /* Otherwise return VAR +- (ARG1 +- CON).  */\n@@ -4487,13 +4481,7 @@ fold (expr)\n \n \t  if (split_tree (arg1, code, &var, &con, &varsign))\n \t    {\n-\t      /* If ARG1 is a constant, don't change things around;\n-\t\t instead keep all the constant computations together.\n-\t\t Notice, however, if we can merge integer constants.  */\n-\n-\t      if (TREE_CONSTANT (arg1)\n-\t\t  && !(TREE_CODE (con) == INTEGER_CST\n-\t\t       && TREE_CODE (arg0) == INTEGER_CST))\n+\t      if (TREE_CONSTANT (arg1))\n \t\treturn t;\n \n \t      if (varsign == -1)"}]}