{"sha": "c7c816408314bd7e971543bfa91250d464e45540", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdjODE2NDA4MzE0YmQ3ZTk3MTU0M2JmYTkxMjUwZDQ2NGU0NTU0MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-12-06T11:32:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-12-06T11:32:46Z"}, "message": "Don't assert \"alg != libcall\" for -minline-stringops-dynamically\n\ngcc/\n\n\tPR target/64200\n\t* config/i386/i386.c (decide_alg): Don't assert \"alg != libcall\"\n\tfor TARGET_INLINE_STRINGOPS_DYNAMICALLY.\n\ngcc/testsuite/\n\n\tPR target/64200\n\t* gcc.target/i386/memcpy-strategy-4.c: New test.\n\nFrom-SVN: r218446", "tree": {"sha": "4b8680c9d6bab91b91b7f3c24b1ecc3789d959a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b8680c9d6bab91b91b7f3c24b1ecc3789d959a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7c816408314bd7e971543bfa91250d464e45540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c816408314bd7e971543bfa91250d464e45540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c816408314bd7e971543bfa91250d464e45540", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c816408314bd7e971543bfa91250d464e45540/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00d6d5b1e748269b91a8c512911e937d49cbaea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00d6d5b1e748269b91a8c512911e937d49cbaea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00d6d5b1e748269b91a8c512911e937d49cbaea9"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "b340b51fe488675497130351c63a39b37d4d8df9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c816408314bd7e971543bfa91250d464e45540/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c816408314bd7e971543bfa91250d464e45540/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7c816408314bd7e971543bfa91250d464e45540", "patch": "@@ -1,3 +1,9 @@\n+2014-12-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/64200\n+\t* config/i386/i386.c (decide_alg): Don't assert \"alg != libcall\"\n+\tfor TARGET_INLINE_STRINGOPS_DYNAMICALLY.\n+\n 2014-12-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/64170"}, {"sha": "aaf0b385c90da3f5a1570d97a3fb73b40af84e09", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c816408314bd7e971543bfa91250d464e45540/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c816408314bd7e971543bfa91250d464e45540/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c7c816408314bd7e971543bfa91250d464e45540", "patch": "@@ -24507,9 +24507,10 @@ decide_alg (HOST_WIDE_INT count, HOST_WIDE_INT expected_size,\n       alg = decide_alg (count, max / 2, min_size, max_size, memset,\n \t\t\tzero_memset, dynamic_check, noalign);\n       gcc_assert (*dynamic_check == -1);\n-      gcc_assert (alg != libcall);\n       if (TARGET_INLINE_STRINGOPS_DYNAMICALLY)\n \t*dynamic_check = max;\n+      else\n+\tgcc_assert (alg != libcall);\n       return alg;\n     }\n   return (alg_usable_p (algs->unknown_size, memset)"}, {"sha": "4ea2dfe9dcfbce02ee9811004b41c4ab2d7ca5b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c816408314bd7e971543bfa91250d464e45540/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c816408314bd7e971543bfa91250d464e45540/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7c816408314bd7e971543bfa91250d464e45540", "patch": "@@ -1,3 +1,8 @@\n+2014-12-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/64200\n+\t* gcc.target/i386/memcpy-strategy-4.c: New test.\n+\n 2014-12-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/64170"}, {"sha": "5c51248b5c5e5f865d43985a055796c81a82b584", "filename": "gcc/testsuite/gcc.target/i386/memcpy-strategy-4.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7c816408314bd7e971543bfa91250d464e45540/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7c816408314bd7e971543bfa91250d464e45540/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-strategy-4.c?ref=c7c816408314bd7e971543bfa91250d464e45540", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/64200 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=atom -mmemcpy-strategy=libcall:-1:align -minline-stringops-dynamically\" } */\n+\n+#include <stdarg.h>\n+\n+extern void bar(char *x);\n+\n+void foo (int size, ...)\n+{\n+  struct\n+  {\n+    char x[size];\n+  } d;\n+\n+  va_list ap;\n+  va_start(ap, size);\n+  d = va_arg(ap, typeof (d));\n+  va_end(ap);\n+  bar(d.x);\n+}"}]}