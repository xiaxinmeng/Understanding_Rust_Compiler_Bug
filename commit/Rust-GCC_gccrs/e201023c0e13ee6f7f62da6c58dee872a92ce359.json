{"sha": "e201023c0e13ee6f7f62da6c58dee872a92ce359", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIwMTAyM2MwZTEzZWU2ZjdmNjJkYTZjNThkZWU4NzJhOTJjZTM1OQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-20T15:08:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-20T15:08:36Z"}, "message": "exp_aggr.adb (Initialize_Array_Component): Avoid adjusting a component of an array aggregate if...\n\ngcc/ada/\n\n2017-10-20  Bob Duff  <duff@adacore.com>\n\n\t* exp_aggr.adb (Initialize_Array_Component): Avoid adjusting a\n\tcomponent of an array aggregate if it is initialized by a\n\tbuild-in-place function call.\n\t* exp_ch6.adb (Is_Build_In_Place_Result_Type): Use -gnatd.9 to disable\n\tbip for nonlimited types.\n\t* debug.adb: Document -gnatd.9.\n\n2017-10-20  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch12.adb: Remove redundant setting of Parent.\n\n2017-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch4.adb (Find_Concatenation_Types): Filter out operators if one\n\tof the operands is a string literal.\n\n2017-10-20  Bob Duff  <duff@adacore.com>\n\n\t* einfo.ads: Comment fix.\n\n2017-10-20  Clement Fumex  <fumex@adacore.com>\n\n\t* switch-c.adb: Remove -gnatwm from the switches triggered by -gnateC.\n\n2017-10-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_dim.adb (Extract_Power): Accept dimension values that are not\n\tnon-negative integers when the dimensioned base type is an Integer\n\ttype.\n\ngcc/testsuite/\n\n2017-10-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* gnat.dg/dimensions.adb, gnat.dg/dimensions.ads: New testcase.\n\nFrom-SVN: r253941", "tree": {"sha": "7c4323af32f49b9fde5cce011c2bb4d24244838d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c4323af32f49b9fde5cce011c2bb4d24244838d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e201023c0e13ee6f7f62da6c58dee872a92ce359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e201023c0e13ee6f7f62da6c58dee872a92ce359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e201023c0e13ee6f7f62da6c58dee872a92ce359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e201023c0e13ee6f7f62da6c58dee872a92ce359/comments", "author": null, "committer": null, "parents": [{"sha": "3a248f7cecb43333923d6b2f89a1acb4e6b3dd6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a248f7cecb43333923d6b2f89a1acb4e6b3dd6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a248f7cecb43333923d6b2f89a1acb4e6b3dd6e"}], "stats": {"total": 292, "additions": 195, "deletions": 97}, "files": [{"sha": "24618873c1572668f229128272addf12bdcec1cf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -1,3 +1,35 @@\n+2017-10-20  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_aggr.adb (Initialize_Array_Component): Avoid adjusting a\n+\tcomponent of an array aggregate if it is initialized by a\n+\tbuild-in-place function call.\n+\t* exp_ch6.adb (Is_Build_In_Place_Result_Type): Use -gnatd.9 to disable\n+\tbip for nonlimited types.\n+\t* debug.adb: Document -gnatd.9.\n+\n+2017-10-20  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch12.adb: Remove redundant setting of Parent.\n+\n+2017-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch4.adb (Find_Concatenation_Types): Filter out operators if one\n+\tof the operands is a string literal.\n+\n+2017-10-20  Bob Duff  <duff@adacore.com>\n+\n+\t* einfo.ads: Comment fix.\n+\n+2017-10-20  Clement Fumex  <fumex@adacore.com>\n+\n+\t* switch-c.adb: Remove -gnatwm from the switches triggered by -gnateC.\n+\n+2017-10-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_dim.adb (Extract_Power): Accept dimension values that are not\n+\tnon-negative integers when the dimensioned base type is an Integer\n+\ttype.\n+\n 2017-10-20  Bob Duff  <duff@adacore.com>\n \n \t* sinfo.ads, sinfo.adb (Alloc_For_BIP_Return): New flag to indicate"}, {"sha": "e3d875bc8cc5db63a44a3825c62f31488bc09dbf", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -646,8 +646,9 @@ package body Bindgen is\n          --  stack globals.\n \n          if Sec_Stack_Used then\n-            --  Elaborate the body of the binder to initialize the\n-            --  default-sized secondary stack pool.\n+\n+            --  Elaborate the body of the binder to initialize the default-\n+            --  sized secondary stack pool.\n \n             WBI (\"\");\n             WBI (\"      \" & Get_Ada_Main_Name & \"'Elab_Body;\");\n@@ -656,12 +657,13 @@ package body Bindgen is\n             --  related secondary stack globals.\n \n             Set_String (\"      Default_Secondary_Stack_Size := \");\n+\n             if Opt.Default_Sec_Stack_Size /= Opt.No_Stack_Size then\n                Set_Int (Opt.Default_Sec_Stack_Size);\n             else\n-               Set_String\n-                 (\"System.Parameters.Runtime_Default_Sec_Stack_Size\");\n+               Set_String (\"System.Parameters.Runtime_Default_Sec_Stack_Size\");\n             end if;\n+\n             Set_Char (';');\n             Write_Statement_Buffer;\n \n@@ -988,20 +990,23 @@ package body Bindgen is\n          --  stack globals.\n \n          if Sec_Stack_Used then\n-            --  Elaborate the body of the binder to initialize the\n-            --  default-sized secondary stack pool.\n+\n+            --  Elaborate the body of the binder to initialize the default-\n+            --  sized secondary stack pool.\n \n             WBI (\"      \" & Get_Ada_Main_Name & \"'Elab_Body;\");\n \n             --  Generate the default-sized secondary stack pool and set the\n             --  related secondary stack globals.\n \n             Set_String (\"      Default_Secondary_Stack_Size := \");\n+\n             if Opt.Default_Sec_Stack_Size /= Opt.No_Stack_Size then\n                Set_Int (Opt.Default_Sec_Stack_Size);\n             else\n                Set_String (\"System.Parameters.Runtime_Default_Sec_Stack_Size\");\n             end if;\n+\n             Set_Char (';');\n             Write_Statement_Buffer;\n \n@@ -1011,17 +1016,19 @@ package body Bindgen is\n             Write_Statement_Buffer;\n \n             Set_String (\"      Default_Sized_SS_Pool := \");\n+\n             if Num_Sec_Stacks > 0 then\n                Set_String (\"Sec_Default_Sized_Stacks'Address;\");\n             else\n                Set_String (\"System.Null_Address;\");\n             end if;\n-            Write_Statement_Buffer;\n \n+            Write_Statement_Buffer;\n             WBI (\"\");\n          end if;\n \n          --  Generate call to Runtime_Initialize\n+\n          WBI (\"      Runtime_Initialize (1);\");\n       end if;\n \n@@ -2195,9 +2202,11 @@ package body Bindgen is\n       end if;\n \n       for J in Units.First .. Units.Last loop\n-         Num_Primary_Stacks := Num_Primary_Stacks +\n-           Units.Table (J).Primary_Stack_Count;\n-         Num_Sec_Stacks := Num_Sec_Stacks + Units.Table (J).Sec_Stack_Count;\n+         Num_Primary_Stacks :=\n+           Num_Primary_Stacks + Units.Table (J).Primary_Stack_Count;\n+\n+         Num_Sec_Stacks :=\n+           Num_Sec_Stacks + Units.Table (J).Sec_Stack_Count;\n       end loop;\n \n       --  Generate output file in appropriate language\n@@ -2525,11 +2534,13 @@ package body Bindgen is\n          Set_String (\" : array (1 .. \");\n          Set_Int (Num_Sec_Stacks);\n          Set_String (\") of aliased System.Secondary_Stack.SS_Stack (\");\n+\n          if Opt.Default_Sec_Stack_Size /= No_Stack_Size then\n             Set_Int (Opt.Default_Sec_Stack_Size);\n          else\n             Set_String (\"System.Parameters.Runtime_Default_Sec_Stack_Size\");\n          end if;\n+\n          Set_String (\");\");\n          Write_Statement_Buffer;\n          WBI (\"\");\n@@ -2568,8 +2579,8 @@ package body Bindgen is\n \n          if not Suppress_Standard_Library_On_Target then\n \n-            --  The B.1(39) implementation advice says that the adainit\n-            --  and adafinal routines should be idempotent. Generate a flag to\n+            --  The B.1(39) implementation advice says that the adainit and\n+            --  adafinal routines should be idempotent. Generate a flag to\n             --  ensure that. This is not needed if we are suppressing the\n             --  standard library since it would never be referenced.\n "}, {"sha": "442ce0873e5294a01aa865c5ad0a48e1d488415e", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -163,7 +163,7 @@ package body Debug is\n    --  d.6  Do not avoid declaring unreferenced types in C code\n    --  d.7\n    --  d.8\n-   --  d.9  Enable build-in-place for nonlimited types\n+   --  d.9  Disable build-in-place for nonlimited types\n \n    --  Debug flags for binder (GNATBIND)\n "}, {"sha": "2b2a8382e3bd4f6d2d96489e1f7ad27bb98f7da5", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -1312,9 +1312,9 @@ package Einfo is\n --       that represents an activation record pointer is an extra formal.\n \n --    Extra_Formals (Node28)\n---       Applies to subprograms and subprogram types, and also to entries\n---       and entry families. Returns first extra formal of the subprogram\n---       or entry. Returns Empty if there are no extra formals.\n+--       Applies to subprograms, subprogram types, entries, and entry\n+--       families. Returns first extra formal of the subprogram or entry.\n+--       Returns Empty if there are no extra formals.\n \n --    Finalization_Master (Node23) [root type only]\n --       Defined in access-to-controlled or access-to-class-wide types. The"}, {"sha": "86621a4a06a7ecdb48e2d4c290953b1bf2e4b42b", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -1251,6 +1251,7 @@ package body Exp_Aggr is\n \n             if Finalization_OK\n               and then not Is_Limited_Type (Comp_Typ)\n+              and then not Is_Build_In_Place_Function_Call (Init_Expr)\n               and then not\n                 (Is_Array_Type (Comp_Typ)\n                   and then Is_Controlled (Component_Type (Comp_Typ))"}, {"sha": "70d39b7a9167582749865ffa6c18e90676563b06", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -1765,7 +1765,6 @@ package body Exp_Attr is\n \n          if Attribute_Name (Parent (Pref)) = Name_Old then\n             null;\n-\n          else\n             Make_Build_In_Place_Call_In_Anonymous_Context (Pref);\n          end if;"}, {"sha": "043a02c64bab1cf7703cdd0fca12d89c503ee948", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -5792,6 +5792,7 @@ package body Exp_Ch3 is\n          Sec_Stacks  : out Int)\n       is\n          Component : Entity_Id;\n+\n       begin\n          --  To calculate the number of default-sized task stacks required for\n          --  an object of Typ, a depth-first recursive traversal of the AST\n@@ -5806,8 +5807,8 @@ package body Exp_Ch3 is\n          end if;\n \n          case Ekind (Typ) is\n-            when E_Task_Type\n-               | E_Task_Subtype\n+            when E_Task_Subtype\n+               | E_Task_Type\n             =>\n                --  A task type is found marking the bottom of the descent. If\n                --  the type has no representation aspect for the corresponding\n@@ -5825,8 +5826,8 @@ package body Exp_Ch3 is\n                   Sec_Stacks := 1;\n                end if;\n \n-            when E_Array_Type\n-               | E_Array_Subtype\n+            when E_Array_Subtype\n+               | E_Array_Type\n             =>\n                --  First find the number of default stacks contained within an\n                --  array component.\n@@ -5848,10 +5849,10 @@ package body Exp_Ch3 is\n                   Sec_Stacks := Sec_Stacks * Quantity;\n                end;\n \n-            when E_Record_Type\n-               | E_Record_Subtype\n+            when E_Protected_Subtype\n                | E_Protected_Type\n-               | E_Protected_Subtype\n+               | E_Record_Subtype\n+               | E_Record_Type\n             =>\n                Component := First_Component_Or_Discriminant (Typ);\n \n@@ -5862,7 +5863,9 @@ package body Exp_Ch3 is\n                while Present (Component) loop\n                   if Has_Task (Etype (Component)) then\n                      declare\n-                        P, S : Int;\n+                        P : Int;\n+                        S : Int;\n+\n                      begin\n                         Count_Default_Sized_Task_Stacks\n                           (Etype (Component), P, S);\n@@ -5874,10 +5877,10 @@ package body Exp_Ch3 is\n                   Next_Component_Or_Discriminant (Component);\n                end loop;\n \n-            when E_Limited_Private_Type\n-               | E_Limited_Private_Subtype\n-               | E_Record_Type_With_Private\n+            when E_Limited_Private_Subtype\n+               | E_Limited_Private_Type\n                | E_Record_Subtype_With_Private\n+               | E_Record_Type_With_Private\n             =>\n                --  Switch to the full view of the private type to continue\n                --  search."}, {"sha": "abf6d635451e7b8a3b8a6b09663a14bfc3cb9c23", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -5564,6 +5564,7 @@ package body Exp_Ch4 is\n          declare\n             Cnn     : constant Entity_Id := Make_Temporary (Loc, 'C', N);\n             Ptr_Typ : constant Entity_Id := Make_Temporary (Loc, 'A');\n+\n          begin\n             --  Generate:\n             --    type Ann is access all Typ;\n@@ -5641,6 +5642,7 @@ package body Exp_Ch4 is\n       then\n          declare\n             Cnn : constant Node_Id := Make_Temporary (Loc, 'C', N);\n+\n          begin\n             Insert_Action (N,\n               Make_Object_Declaration (Loc,\n@@ -5681,6 +5683,7 @@ package body Exp_Ch4 is\n \n             declare\n                Cnn : constant Node_Id := Make_Temporary (Loc, 'C', N);\n+\n             begin\n                Decl :=\n                  Make_Object_Declaration (Loc,"}, {"sha": "c7cd2a664e1224e2c4a70e89a5d2cea539b8a534", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -7248,7 +7248,12 @@ package body Exp_Ch6 is\n \n       if Is_Limited_View (Typ) then\n          return Ada_Version >= Ada_2005 and then not Debug_Flag_Dot_L;\n+\n       else\n+         if Debug_Flag_Dot_9 then\n+            return False;\n+         end if;\n+\n          if Has_Interfaces (Typ) then\n             return False;\n          end if;\n@@ -7284,16 +7289,15 @@ package body Exp_Ch6 is\n \n             declare\n                Result : Boolean;\n+               --  So we can stop here in the debugger\n             begin\n                --  ???For now, enable build-in-place for a very narrow set of\n                --  controlled types. Change \"if True\" to \"if False\" to\n                --  experiment more controlled types. Eventually, we would\n                --  like to enable build-in-place for all tagged types, all\n                --  types that need finalization, and all caller-unknown-size\n-               --  types. We will eventually use Debug_Flag_Dot_9 to disable\n-               --  build-in-place for nonlimited types.\n+               --  types.\n \n---         if Debug_Flag_Dot_9 then\n                if True then\n                   Result := Is_Controlled (T)\n                     and then Present (Enclosing_Subprogram (T))"}, {"sha": "bcac6ff02b02694f1aef9221b6775ac63ea24144", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -5432,8 +5432,8 @@ package body Exp_Ch9 is\n         (Restriction_Active (No_Implicit_Heap_Allocations)\n           or else Restriction_Active (No_Implicit_Task_Allocations))\n         and then not Restriction_Active (No_Secondary_Stack)\n-        and then Has_Rep_Item (T, Name_Secondary_Stack_Size,\n-                               Check_Parents => False);\n+        and then Has_Rep_Item\n+                   (T, Name_Secondary_Stack_Size, Check_Parents => False);\n    end Create_Secondary_Stack_For_Task;\n \n    -------------------------------------\n@@ -11978,8 +11978,7 @@ package body Exp_Ch9 is\n               Get_Rep_Item\n                 (TaskId, Name_Secondary_Stack_Size, Check_Parents => False);\n \n-            --  Get Secondary_Stack_Size expression. Can be a pragma or\n-            --  aspect.\n+            --  Get Secondary_Stack_Size expression. Can be a pragma or aspect.\n \n             if Nkind (Ritem) = N_Pragma then\n                Size_Expr :=\n@@ -11993,21 +11992,22 @@ package body Exp_Ch9 is\n \n             --  Create the secondary stack for the task\n \n-            Decl_SS := Make_Component_Declaration (Loc,\n-              Defining_Identifier  =>\n-                Make_Defining_Identifier (Loc, Name_uSecondary_Stack),\n-\n-              Component_Definition =>\n-                Make_Component_Definition (Loc,\n-                  Aliased_Present     => True,\n-                  Subtype_Indication  => Make_Subtype_Indication (Loc,\n-                    Subtype_Mark =>\n-                       New_Occurrence_Of (RTE (RE_SS_Stack), Loc),\n-                    Constraint   =>\n-                      Make_Index_Or_Discriminant_Constraint (Loc,\n-                        Constraints  => New_List (\n-                          Make_Integer_Literal (Loc,\n-                            Expr_Value (Size_Expr)))))));\n+            Decl_SS :=\n+              Make_Component_Declaration (Loc,\n+                Defining_Identifier  =>\n+                  Make_Defining_Identifier (Loc, Name_uSecondary_Stack),\n+                Component_Definition =>\n+                  Make_Component_Definition (Loc,\n+                    Aliased_Present     => True,\n+                    Subtype_Indication  =>\n+                      Make_Subtype_Indication (Loc,\n+                        Subtype_Mark =>\n+                          New_Occurrence_Of (RTE (RE_SS_Stack), Loc),\n+                        Constraint   =>\n+                          Make_Index_Or_Discriminant_Constraint (Loc,\n+                            Constraints  => New_List (\n+                              Make_Integer_Literal (Loc,\n+                                Expr_Value (Size_Expr)))))));\n \n             Append_To (Cdecls, Decl_SS);\n          end;\n@@ -14223,8 +14223,8 @@ package body Exp_Ch9 is\n                 Prefix         =>\n                   Make_Selected_Component (Loc,\n                     Prefix        => Make_Identifier (Loc, Name_uInit),\n-                      Selector_Name =>\n-                        Make_Identifier (Loc, Name_uSecondary_Stack)),\n+                    Selector_Name =>\n+                      Make_Identifier (Loc, Name_uSecondary_Stack)),\n                 Attribute_Name => Name_Unrestricted_Access));\n \n          else"}, {"sha": "2fb0e88346f2b6f90f6e06f93ceff51a65528778", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -10820,7 +10820,10 @@ package body Exp_Util is\n          --  Could be e.g. a loop that was transformed into a block or null\n          --  statement. Do nothing for terminate alternatives.\n \n-         when N_Block_Statement | N_Null_Statement | N_Terminate_Alternative =>\n+         when N_Block_Statement\n+            | N_Null_Statement\n+            | N_Terminate_Alternative\n+         =>\n             null;\n \n          when others =>"}, {"sha": "c9686992f5a24d617b99bf76c51dc8fc4cccf5ad", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -455,16 +455,19 @@ package Lib is\n    function Generate_Code    (U : Unit_Number_Type) return Boolean;\n    function Ident_String     (U : Unit_Number_Type) return Node_Id;\n    function Has_RACW         (U : Unit_Number_Type) return Boolean;\n-   function Is_Predefined_Renaming (U : Unit_Number_Type) return Boolean;\n-   function Is_Internal_Unit       (U : Unit_Number_Type) return Boolean;\n-   function Is_Predefined_Unit     (U : Unit_Number_Type) return Boolean;\n+   function Is_Predefined_Renaming\n+                             (U : Unit_Number_Type) return Boolean;\n+   function Is_Internal_Unit (U : Unit_Number_Type) return Boolean;\n+   function Is_Predefined_Unit\n+                             (U : Unit_Number_Type) return Boolean;\n    function Loading          (U : Unit_Number_Type) return Boolean;\n    function Main_CPU         (U : Unit_Number_Type) return Int;\n    function Main_Priority    (U : Unit_Number_Type) return Int;\n    function Munit_Index      (U : Unit_Number_Type) return Nat;\n    function No_Elab_Code_All (U : Unit_Number_Type) return Boolean;\n    function OA_Setting       (U : Unit_Number_Type) return Character;\n-   function Primary_Stack_Count (U : Unit_Number_Type) return Int;\n+   function Primary_Stack_Count\n+                             (U : Unit_Number_Type) return Int;\n    function Sec_Stack_Count  (U : Unit_Number_Type) return Int;\n    function Source_Index     (U : Unit_Number_Type) return Source_File_Index;\n    function Unit_File_Name   (U : Unit_Number_Type) return File_Name_Type;"}, {"sha": "359edacb95ee056f8b583964a22110d6d8366e3f", "filename": "gcc/ada/libgnat/s-parame.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Flibgnat%2Fs-parame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Flibgnat%2Fs-parame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-parame.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -61,8 +61,10 @@ package body System.Parameters is\n    begin\n       --  There are two situations where the default secondary stack size is\n       --  set to zero:\n+      --\n       --    * The user sets it to zero erroneously thinking it will disable\n       --      the secondary stack.\n+      --\n       --    * Or more likely, we are building with an old compiler and\n       --      Default_SS_Size is never set.\n       --"}, {"sha": "9820330f523506f5501ae425b84961a96e3d6f62", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -5305,8 +5305,7 @@ package body Sem_Ch12 is\n             Valid_Operator_Definition (Act_Decl_Id);\n          end if;\n \n-         Set_Alias  (Act_Decl_Id, Anon_Id);\n-         Set_Parent (Act_Decl_Id, Parent (Anon_Id));\n+         Set_Alias (Act_Decl_Id, Anon_Id);\n          Set_Has_Completion (Act_Decl_Id);\n          Set_Related_Instance (Pack_Id, Act_Decl_Id);\n "}, {"sha": "538023524e343e3a925a6b7a629f5ba3825bdbe5", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -6431,10 +6431,24 @@ package body Sem_Ch4 is\n       Op_Id : Entity_Id;\n       N     : Node_Id)\n    is\n-      Op_Type : constant Entity_Id := Etype (Op_Id);\n+      Is_String : constant Boolean := Nkind (L) = N_String_Literal\n+                                        or else\n+                                      Nkind (R) = N_String_Literal;\n+      Op_Type   : constant Entity_Id := Etype (Op_Id);\n \n    begin\n       if Is_Array_Type (Op_Type)\n+\n+        --  Small but very effective optimization: if at least one operand is a\n+        --  string literal, then the type of the operator must be either array\n+        --  of characters or array of strings.\n+\n+        and then (not Is_String\n+                    or else\n+                  Is_Character_Type (Component_Type (Op_Type))\n+                    or else\n+                  Is_String_Type (Component_Type (Op_Type)))\n+\n         and then not Is_Limited_Type (Op_Type)\n \n         and then (Has_Compatible_Type (L, Op_Type)"}, {"sha": "2363eedc69abde90b3ee9233083a26b2bdd146ed", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -518,25 +518,17 @@ package body Sem_Dim is\n          Position : Dimension_Position)\n       is\n       begin\n-         --  Integer case\n-\n-         if Is_Integer_Type (Def_Id) then\n-\n-            --  Dimension value must be an integer literal\n-\n-            if Nkind (Expr) = N_Integer_Literal then\n-               Dimensions (Position) := +Whole (UI_To_Int (Intval (Expr)));\n-            else\n-               Error_Msg_N (\"integer literal expected\", Expr);\n-            end if;\n+         Dimensions (Position) := Create_Rational_From (Expr, True);\n+         Processed (Position) := True;\n \n-         --  Float case\n+         --  If the dimensioned root type is an integer type, it is not\n+         --  particularly useful, and fractional dimensions do not make\n+         --  much sense for such types, so previously we used to reject\n+         --  dimensions of integer types that were not integer literals.\n+         --  However, the manipulation of dimensions does not depend on\n+         --  the kind of root type, so we can accept this usage for rare\n+         --  cases where dimensions are specified for integer values.\n \n-         else\n-            Dimensions (Position) := Create_Rational_From (Expr, True);\n-         end if;\n-\n-         Processed (Position) := True;\n       end Extract_Power;\n \n       ------------------------"}, {"sha": "eae149805fa8143400059704ab25c2060e016d60", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -13242,25 +13242,21 @@ package body Sem_Prag is\n                Set_SCO_Pragma_Enabled (Loc);\n             end if;\n \n-            --  Deal with analyzing the string argument\n+            --  Deal with analyzing the string argument. If checks are not\n+            --  on we don't want any expansion (since such expansion would\n+            --  not get properly deleted) but we do want to analyze (to get\n+            --  proper references). The Preanalyze_And_Resolve routine does\n+            --  just what we want. Ditto if pragma is active, because it will\n+            --  be rewritten as an if-statement whose analysis will complete\n+            --  analysis and expansion of the string message. This makes a\n+            --  difference in the unusual case where the expression for the\n+            --  string may have a side effect, such as raising an exception.\n+            --  This is mandated by RM 11.4.2, which specifies that the string\n+            --  expression is only evaluated if the check fails and\n+            --  Assertion_Error is to be raised.\n \n             if Arg_Count = 3 then\n-\n-               --  If checks are not on we don't want any expansion (since\n-               --  such expansion would not get properly deleted) but\n-               --  we do want to analyze (to get proper references).\n-               --  The Preanalyze_And_Resolve routine does just what we want.\n-               --  Ditto if pragma is active, because it will be rewritten\n-               --  as an if-statement whose analysis will complete analysis\n-               --  and expansion of the string message. This makes a\n-               --  difference in the unusual case where the expression for\n-               --  the string may have a side effect, such as raising an\n-               --  exception. This is mandated by RM 11.4.2, which specifies\n-               --  that the string expression is only evaluated if the\n-               --  check fails and Assertion_Error is to be raised.\n-\n                Preanalyze_And_Resolve (Str, Standard_String);\n-\n             end if;\n \n             --  Now you might think we could just do the same with the Boolean"}, {"sha": "f5c5f9e96dc5dce8541bcd9ce9c9ad9d8900c6ff", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -4843,9 +4843,8 @@ package body Sem_Res is\n              (Comes_From_Source (Parent (N))\n                or else\n                  (Ekind (Current_Scope) = E_Function\n-                   and then Nkind\n-                     (Original_Node (Unit_Declaration_Node (Current_Scope)))\n-                       = N_Expression_Function))\n+                   and then Nkind (Original_Node (Unit_Declaration_Node\n+                              (Current_Scope))) = N_Expression_Function))\n            and then not In_Instance_Body\n          then\n             if not OK_For_Limited_Init (Etype (E), Expression (E)) then"}, {"sha": "5ad10e348a5fa5be4e5a8cf34c9c36cd4c21ad3b", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -548,7 +548,6 @@ package body Switch.C is\n                         Warn_On_Bad_Fixed_Value          := True; -- -gnatwb\n                         Warn_On_Biased_Representation    := True; -- -gnatw.b\n                         Warn_On_Export_Import            := True; -- -gnatwx\n-                        Warn_On_Modified_Unread          := True; -- -gnatwm\n                         Warn_On_No_Value_Assigned        := True; -- -gnatwv\n                         Warn_On_Object_Renames_Function  := True; -- -gnatw.r\n                         Warn_On_Overlap                  := True; -- -gnatw.i"}, {"sha": "30d3203b186ee33487eecd7cceccd27ff423af85", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -1,3 +1,7 @@\n+2017-10-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/dimensions.adb, gnat.dg/dimensions.ads: New testcase.\n+\n 2017-10-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82473"}, {"sha": "86fc6eef6708e1b38e2df0622f3b26bdecfdbd79", "filename": "gcc/testsuite/gnat.dg/dimensions.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Ftestsuite%2Fgnat.dg%2Fdimensions.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Ftestsuite%2Fgnat.dg%2Fdimensions.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdimensions.adb?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do compile }\n+\n+package body Dimensions is\n+   procedure Dummy is null;\n+end Dimensions;"}, {"sha": "54bab0814702f8fdde42f5c91667056c137d8300", "filename": "gcc/testsuite/gnat.dg/dimensions.ads", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Ftestsuite%2Fgnat.dg%2Fdimensions.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e201023c0e13ee6f7f62da6c58dee872a92ce359/gcc%2Ftestsuite%2Fgnat.dg%2Fdimensions.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdimensions.ads?ref=e201023c0e13ee6f7f62da6c58dee872a92ce359", "patch": "@@ -0,0 +1,29 @@\n+package Dimensions is\n+\n+   type Mks_Int_Type is new Integer\n+     with\n+      Dimension_System => (\n+        (Unit_Name => Meter,    Unit_Symbol => 'm',   Dim_Symbol => 'L'),\n+        (Unit_Name => Kilogram, Unit_Symbol => \"kg\",  Dim_Symbol => 'M'),\n+        (Unit_Name => Second,   Unit_Symbol => 's',   Dim_Symbol => 'T'),\n+        (Unit_Name => Ampere,   Unit_Symbol => 'A',   Dim_Symbol => 'I'),\n+        (Unit_Name => Kelvin,   Unit_Symbol => 'K',   Dim_Symbol => '@'),\n+        (Unit_Name => Mole,     Unit_Symbol => \"mol\", Dim_Symbol => 'N'),\n+        (Unit_Name => Candela,  Unit_Symbol => \"cd\",  Dim_Symbol => 'J'));\n+\n+   subtype Int_Length is Mks_Int_Type\n+     with\n+      Dimension => (Symbol => 'm',\n+        Meter  => 1,\n+        others => 0);\n+\n+   subtype Int_Speed is Mks_Int_Type\n+     with\n+      Dimension => (\n+        Meter  =>  1,\n+        Second => -1,\n+        others =>  0);\n+\n+   procedure Dummy;\n+\n+end Dimensions;"}]}