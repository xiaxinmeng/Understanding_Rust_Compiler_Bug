{"sha": "07fc3491260e6b5d261433c977a4e069f5ab40c1", "node_id": "C_kwDOANBUbNoAKDA3ZmMzNDkxMjYwZTZiNWQyNjE0MzNjOTc3YTRlMDY5ZjVhYjQwYzE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-26T18:17:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-26T18:17:00Z"}, "message": "match.pd: Fix up fneg/fadd simplification [PR109230]\n\nThe following testcase is miscompiled on aarch64-linux.  match.pd\nhas a simplification for addsub, where it negates one of the vectors\nin twice as large floating point element vector (effectively negating every\nother element) and then doing addition.\nBut a requirement for that is that the permutation picks the right elements,\nin particular 0, nelts+1, 2, nelts+3, 4, nelts+5, ...\nThe pattern tests this with sel.series_p (0, 2, 0, 2) check, which as\ndocumented verifies that the even elements of the permutation mask are\nidentity, but doesn't say anything about the others.\nThe following patch fixes it by also checking that the odd elements\nstart at nelts + 1 with the same step of 2.\n\n2023-03-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/109230\n\t* match.pd (fneg/fadd simplify): Verify also odd permutation indexes.\n\n\t* gcc.dg/pr109230.c: New test.", "tree": {"sha": "2a9e40da01bf6082120cbae573aaf1b35bc023c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a9e40da01bf6082120cbae573aaf1b35bc023c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07fc3491260e6b5d261433c977a4e069f5ab40c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07fc3491260e6b5d261433c977a4e069f5ab40c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07fc3491260e6b5d261433c977a4e069f5ab40c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07fc3491260e6b5d261433c977a4e069f5ab40c1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eca91d4781bb3df941f25c30b971dac66ba1b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eca91d4781bb3df941f25c30b971dac66ba1b3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eca91d4781bb3df941f25c30b971dac66ba1b3d"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "b8d3538b80947dfc46d0f90d246317d64a4ace5d", "filename": "gcc/match.pd", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07fc3491260e6b5d261433c977a4e069f5ab40c1/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07fc3491260e6b5d261433c977a4e069f5ab40c1/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=07fc3491260e6b5d261433c977a4e069f5ab40c1", "patch": "@@ -8096,6 +8096,7 @@ and,\n        scalar_mode inner_mode = GET_MODE_INNER (vec_mode);\n      }\n      (if (sel.series_p (0, 2, 0, 2)\n+\t  && sel.series_p (1, 2, nelts + 1, 2)\n \t  && GET_MODE_2XWIDER_MODE (inner_mode).exists (&wide_elt_mode)\n \t  && multiple_p (GET_MODE_NUNITS (vec_mode), 2, &wide_nunits)\n \t  && related_vector_mode (vec_mode, wide_elt_mode,"}, {"sha": "9c4ff0546864e4016511a0df6706b91aa29a651d", "filename": "gcc/testsuite/gcc.dg/pr109230.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07fc3491260e6b5d261433c977a4e069f5ab40c1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109230.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07fc3491260e6b5d261433c977a4e069f5ab40c1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109230.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr109230.c?ref=07fc3491260e6b5d261433c977a4e069f5ab40c1", "patch": "@@ -0,0 +1,31 @@\n+/* PR tree-optimization/109230 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -Wno-psabi\" } */\n+\n+#if __SIZEOF_FLOAT__ == __SIZEOF_INT__\n+typedef float V __attribute__((vector_size (4 * sizeof (float))));\n+typedef int VI __attribute__((vector_size (4 * sizeof (float))));\n+\n+__attribute__((noipa)) V\n+foo (V x, V y)\n+{\n+  V a = x - y;\n+  V b = y + x;\n+  return __builtin_shuffle (b, a, (VI) { 0, 5, 2, 3 });\n+}\n+\n+int\n+main ()\n+{\n+  V a = (V) { 1.0f, 2.0f, 3.0f, 4.0f };\n+  V b = (V) { 8.0f, 9.0f, 10.0f, 11.0f };\n+  V c = foo (a, b);\n+  if (c[0] != 9.0f || c[1] != -7.0f || c[2] != 13.0f || c[3] != 15.0f)\n+    __builtin_abort ();\n+}\n+#else\n+int\n+main ()\n+{\n+}\n+#endif"}]}