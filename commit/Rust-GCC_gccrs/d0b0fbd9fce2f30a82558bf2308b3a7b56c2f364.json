{"sha": "d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBiMGZiZDlmY2UyZjMwYTgyNTU4YmYyMzA4YjNhN2I1NmMyZjM2NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-08-26T15:10:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-08-26T15:10:57Z"}, "message": "Avoid calling a trivial default constructor.\n\n\t* class.c (default_ctor_p): New.\n\t(in_class_defaulted_default_constructor): Use it.\n\t(type_has_non_user_provided_default_constructor): Use it.\n\t* call.c (build_over_call): Handle trivial default constructor.\n\t* cp-tree.h: Declare default_ctor_p.\n\nFrom-SVN: r239783", "tree": {"sha": "8b759d9ca7a0bbc18fbf82d0501f69c847a84582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b759d9ca7a0bbc18fbf82d0501f69c847a84582"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9729a5d5241257d07aa2a9c2fa6c3abbd73e25e5"}], "stats": {"total": 60, "additions": 40, "deletions": 20}, "files": [{"sha": "e8e2e038b43695daaf68306f10ba0ec1ee315e3d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "patch": "@@ -1,5 +1,12 @@\n 2016-08-15  Jason Merrill  <jason@redhat.com>\n \n+\tAvoid calling a trivial default constructor.\n+\t* class.c (default_ctor_p): New.\n+\t(in_class_defaulted_default_constructor): Use it.\n+\t(type_has_non_user_provided_default_constructor): Use it.\n+\t* call.c (build_over_call): Handle trivial default constructor.\n+\t* cp-tree.h: Declare default_ctor_p.\n+\n \tPR c++/57728\n \t* pt.c (do_type_instantiation): Don't mess with non-user-provided\n \tmember functions."}, {"sha": "024519d36011a85490d0309d9422aaf8fac0c77a", "filename": "gcc/cp/call.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "patch": "@@ -7798,11 +7798,19 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \n       return val;\n     }\n-  else if (DECL_DESTRUCTOR_P (fn)\n-\t   && trivial_fn_p (fn)\n-\t   && !DECL_DELETED_FN (fn))\n-    return fold_convert (void_type_node, argarray[0]);\n-  /* FIXME handle trivial default constructor, too.  */\n+  else if (!DECL_DELETED_FN (fn)\n+\t   && trivial_fn_p (fn))\n+    {\n+      if (DECL_DESTRUCTOR_P (fn))\n+\treturn fold_convert (void_type_node, argarray[0]);\n+      else if (default_ctor_p (fn))\n+\t{\n+\t  if (is_dummy_object (argarray[0]))\n+\t    return force_target_expr (DECL_CONTEXT (fn), void_node, complain);\n+\t  else\n+\t    return cp_build_indirect_ref (argarray[0], RO_NULL, complain);\n+\t}\n+    }\n \n   /* For calls to a multi-versioned function, overload resolution\n      returns the function with the highest target priority, that is,"}, {"sha": "a4f3c6b6aba6223239282967a19efd53c6eb119b", "filename": "gcc/cp/class.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "patch": "@@ -5133,8 +5133,17 @@ set_method_tm_attributes (tree t)\n     }\n }\n \n-/* Returns true iff class T has a user-defined constructor other than\n-   the default constructor.  */\n+/* Returns true if FN is a default constructor.  */\n+\n+bool\n+default_ctor_p (tree fn)\n+{\n+  return (DECL_CONSTRUCTOR_P (fn)\n+\t  && sufficient_parms_p (FUNCTION_FIRST_USER_PARMTYPE (fn)));\n+}\n+\n+/* Returns true iff class T has a user-defined constructor that can be called\n+   with more than zero arguments.  */\n \n bool\n type_has_user_nondefault_constructor (tree t)\n@@ -5163,23 +5172,16 @@ type_has_user_nondefault_constructor (tree t)\n tree\n in_class_defaulted_default_constructor (tree t)\n {\n-  tree fns, args;\n-\n   if (!TYPE_HAS_USER_CONSTRUCTOR (t))\n     return NULL_TREE;\n \n-  for (fns = CLASSTYPE_CONSTRUCTORS (t); fns; fns = OVL_NEXT (fns))\n+  for (tree fns = CLASSTYPE_CONSTRUCTORS (t); fns; fns = OVL_NEXT (fns))\n     {\n       tree fn = OVL_CURRENT (fns);\n \n-      if (DECL_DEFAULTED_IN_CLASS_P (fn))\n-\t{\n-\t  args = FUNCTION_FIRST_USER_PARMTYPE (fn);\n-\t  while (args && TREE_PURPOSE (args))\n-\t    args = TREE_CHAIN (args);\n-\t  if (!args || args == void_list_node)\n-\t    return fn;\n-\t}\n+      if (DECL_DEFAULTED_IN_CLASS_P (fn)\n+\t  && default_ctor_p (fn))\n+\treturn fn;\n     }\n \n   return NULL_TREE;\n@@ -5268,8 +5270,8 @@ type_has_non_user_provided_default_constructor (tree t)\n     {\n       tree fn = OVL_CURRENT (fns);\n       if (TREE_CODE (fn) == FUNCTION_DECL\n-\t  && !user_provided_p (fn)\n-\t  && sufficient_parms_p (FUNCTION_FIRST_USER_PARMTYPE (fn)))\n+\t  && default_ctor_p (fn)\n+\t  && !user_provided_p (fn))\n \treturn true;\n     }\n "}, {"sha": "72a128d90dd832551c9db25e1cc091e40fcff670", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "patch": "@@ -5666,6 +5666,7 @@ extern void determine_key_method\t\t(tree);\n extern void check_for_override\t\t\t(tree, tree);\n extern void push_class_stack\t\t\t(void);\n extern void pop_class_stack\t\t\t(void);\n+extern bool default_ctor_p\t\t\t(tree);\n extern bool type_has_user_nondefault_constructor (tree);\n extern tree in_class_defaulted_default_constructor (tree);\n extern bool user_provided_p\t\t\t(tree);"}, {"sha": "912d507eed6e11ace65b0d397e5b2b4153b7b2ff", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit12.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit12.C?ref=d0b0fbd9fce2f30a82558bf2308b3a7b56c2f364", "patch": "@@ -15,3 +15,5 @@ int main()\n {\n   A<int> a;\n }\n+\n+// { dg-final { scan-assembler-not \"_ZN1AIiEC1Ev\" } }"}]}