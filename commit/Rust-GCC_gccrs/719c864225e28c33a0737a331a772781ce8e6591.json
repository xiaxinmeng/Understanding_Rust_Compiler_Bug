{"sha": "719c864225e28c33a0737a331a772781ce8e6591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE5Yzg2NDIyNWUyOGMzM2EwNzM3YTMzMWE3NzI3ODFjZThlNjU5MQ==", "commit": {"author": {"name": "Andre Simoes Dias Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2020-03-20T09:18:18Z"}, "committer": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2020-03-20T09:22:47Z"}, "message": "gcc, Arm: Revert changes to {get,set}_fpscr\n\nMVE made changes to {get,set}_fpscr to enable the compiler to optimize\nunneccesary gets and sets when using these for intrinsics that use and/or write\nthe carry bit.  However, these actually get and set the full FPSCR register and\nare used by fp env intrinsics to modify the fp context.  So MVE should not be\nusing these.\n\ngcc/ChangeLog:\n2020-03-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/arm/unspecs.md (UNSPEC_GET_FPSCR): Rename this to ...\n\t(VUNSPEC_GET_FPSCR): ... this, and move it to vunspec.\n\t* config/arm/vfp.md: (get_fpscr, set_fpscr): Revert to old patterns.", "tree": {"sha": "2629bebd41444c0506da2e70425c5cc5af570db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2629bebd41444c0506da2e70425c5cc5af570db6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/719c864225e28c33a0737a331a772781ce8e6591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/719c864225e28c33a0737a331a772781ce8e6591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/719c864225e28c33a0737a331a772781ce8e6591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/719c864225e28c33a0737a331a772781ce8e6591/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "005f6fc59e5fceb658e11f153402711ee7f12c1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005f6fc59e5fceb658e11f153402711ee7f12c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/005f6fc59e5fceb658e11f153402711ee7f12c1a"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "ded73b3164a1ddf169f9b849266da73276723103", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719c864225e28c33a0737a331a772781ce8e6591/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719c864225e28c33a0737a331a772781ce8e6591/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=719c864225e28c33a0737a331a772781ce8e6591", "patch": "@@ -1,3 +1,9 @@\n+2020-03-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/arm/unspecs.md (UNSPEC_GET_FPSCR): Rename this to ...\n+\t(VUNSPEC_GET_FPSCR): ... this, and move it to vunspec.\n+\t* config/arm/vfp.md: (get_fpscr, set_fpscr): Revert to old patterns.\n+\n 2020-03-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/arm/mve.md (mve_mov<mode>): Fix R->R case."}, {"sha": "f0b1f465de4b63d624510783576700519044717d", "filename": "gcc/config/arm/unspecs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719c864225e28c33a0737a331a772781ce8e6591/gcc%2Fconfig%2Farm%2Funspecs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719c864225e28c33a0737a331a772781ce8e6591/gcc%2Fconfig%2Farm%2Funspecs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funspecs.md?ref=719c864225e28c33a0737a331a772781ce8e6591", "patch": "@@ -170,7 +170,6 @@\n   UNSPEC_TORC\t\t; Used by the intrinsic form of the iWMMXt TORC instruction.\n   UNSPEC_TORVSC\t\t; Used by the intrinsic form of the iWMMXt TORVSC instruction.\n   UNSPEC_TEXTRC\t\t; Used by the intrinsic form of the iWMMXt TEXTRC instruction.\n-  UNSPEC_GET_FPSCR\t; Represent fetch of FPSCR content.\n ])\n \n \n@@ -217,6 +216,7 @@\n   VUNSPEC_SLX\t\t; Represent a store-register-release-exclusive.\n   VUNSPEC_LDA\t\t; Represent a store-register-acquire.\n   VUNSPEC_STL\t\t; Represent a store-register-release.\n+  VUNSPEC_GET_FPSCR\t; Represent fetch of FPSCR content.\n   VUNSPEC_SET_FPSCR\t; Represent assign of FPSCR content.\n   VUNSPEC_PROBE_STACK_RANGE ; Represent stack range probing.\n   VUNSPEC_CDP\t\t; Represent the coprocessor cdp instruction."}, {"sha": "dfb1031431af3ec87d9cccdee35db04e0adffe04", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719c864225e28c33a0737a331a772781ce8e6591/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719c864225e28c33a0737a331a772781ce8e6591/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=719c864225e28c33a0737a331a772781ce8e6591", "patch": "@@ -2096,17 +2096,16 @@\n \n ;; Write Floating-point Status and Control Register.\n (define_insn \"set_fpscr\"\n-  [(set (reg:SI VFPCC_REGNUM)\n-\t(unspec_volatile:SI\n-\t [(match_operand:SI 0 \"register_operand\" \"r\")] VUNSPEC_SET_FPSCR))]\n+  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"r\")]\n+    VUNSPEC_SET_FPSCR)]\n   \"TARGET_VFP_BASE\"\n   \"mcr\\\\tp10, 7, %0, cr1, cr0, 0\\\\t @SET_FPSCR\"\n   [(set_attr \"type\" \"mrs\")])\n \n ;; Read Floating-point Status and Control Register.\n (define_insn \"get_fpscr\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(reg:SI VFPCC_REGNUM)] UNSPEC_GET_FPSCR))]\n+    (unspec_volatile:SI [(const_int 0)] VUNSPEC_GET_FPSCR))]\n   \"TARGET_VFP_BASE\"\n   \"mrc\\\\tp10, 7, %0, cr1, cr0, 0\\\\t @GET_FPSCR\"\n   [(set_attr \"type\" \"mrs\")])"}]}