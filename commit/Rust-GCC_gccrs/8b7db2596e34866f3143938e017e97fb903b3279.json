{"sha": "8b7db2596e34866f3143938e017e97fb903b3279", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3ZGIyNTk2ZTM0ODY2ZjMxNDM5MzhlMDE3ZTk3ZmI5MDNiMzI3OQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-04-16T11:03:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-04-16T11:03:16Z"}, "message": "re PR tree-optimization/52975 (Ofast produces not optimized code for vectorized \"converted if\")\n\n2012-04-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/52975\n\t* tree-if-conv.c (predicate_bbs): Do not simplify inverted\n\tcondition but always mark it with TRUTH_NOT_EXPR.\n\nFrom-SVN: r186491", "tree": {"sha": "e0d0e98c8ce375e15c7f970bb865d04058a3c444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0d0e98c8ce375e15c7f970bb865d04058a3c444"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b7db2596e34866f3143938e017e97fb903b3279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7db2596e34866f3143938e017e97fb903b3279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7db2596e34866f3143938e017e97fb903b3279", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7db2596e34866f3143938e017e97fb903b3279/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3be74079134b4fde672bdb875636a9b5f95da7ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be74079134b4fde672bdb875636a9b5f95da7ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be74079134b4fde672bdb875636a9b5f95da7ba"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "173dfee8ac833fa6d44f8da086c57a27e077bf63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b7db2596e34866f3143938e017e97fb903b3279/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b7db2596e34866f3143938e017e97fb903b3279/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b7db2596e34866f3143938e017e97fb903b3279", "patch": "@@ -1,3 +1,9 @@\n+2012-04-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52975\n+\t* tree-if-conv.c (predicate_bbs): Do not simplify inverted\n+\tcondition but always mark it with TRUTH_NOT_EXPR.\n+ \n 2012-04-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/52975"}, {"sha": "31bb610af08c44617fa9ea1a6d70dd5b17f9bf9d", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b7db2596e34866f3143938e017e97fb903b3279/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b7db2596e34866f3143938e017e97fb903b3279/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=8b7db2596e34866f3143938e017e97fb903b3279", "patch": "@@ -968,7 +968,7 @@ predicate_bbs (loop_p loop)\n \n \t    case GIMPLE_COND:\n \t      {\n-\t\ttree c2, tem;\n+\t\ttree c2;\n \t\tedge true_edge, false_edge;\n \t\tlocation_t loc = gimple_location (stmt);\n \t\ttree c = fold_build2_loc (loc, gimple_cond_code (stmt),\n@@ -986,10 +986,8 @@ predicate_bbs (loop_p loop)\n \t\t\t\t\t   unshare_expr (c));\n \n \t\t/* If C is false, then FALSE_EDGE is taken.  */\n-\t\tc2 = invert_truthvalue_loc (loc, unshare_expr (c));\n-\t\ttem = canonicalize_cond_expr_cond (c2);\n-\t\tif (tem)\n-\t\t  c2 = tem;\n+\t\tc2 = build1_loc (loc, TRUTH_NOT_EXPR,\n+\t\t\t\t boolean_type_node, unshare_expr (c));\n \t\tadd_to_dst_predicate_list (loop, false_edge,\n \t\t\t\t\t   unshare_expr (cond), c2);\n "}]}