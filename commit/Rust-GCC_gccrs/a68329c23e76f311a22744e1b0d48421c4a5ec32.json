{"sha": "a68329c23e76f311a22744e1b0d48421c4a5ec32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY4MzI5YzIzZTc2ZjMxMWEyMjc0NGUxYjBkNDg0MjFjNGE1ZWMzMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-04-15T15:23:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-04-15T15:23:53Z"}, "message": "re PR c++/56388 (catch(...) in lambda rejected)\n\n\tPR c++/56388\n\t* semantics.c (insert_capture_proxy): Just use index 1 in the\n\tstmt_list_stack.\n\nFrom-SVN: r197981", "tree": {"sha": "78d0c26d1b0965f62f5c7fec597905aa22efcd16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78d0c26d1b0965f62f5c7fec597905aa22efcd16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a68329c23e76f311a22744e1b0d48421c4a5ec32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68329c23e76f311a22744e1b0d48421c4a5ec32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a68329c23e76f311a22744e1b0d48421c4a5ec32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68329c23e76f311a22744e1b0d48421c4a5ec32/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b8265ba384990c3ba844abb0568bb8e770e06bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b8265ba384990c3ba844abb0568bb8e770e06bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b8265ba384990c3ba844abb0568bb8e770e06bc"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "eefd11ea8904ff1227e79844ac6ccdc5bc3a1e02", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68329c23e76f311a22744e1b0d48421c4a5ec32/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68329c23e76f311a22744e1b0d48421c4a5ec32/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a68329c23e76f311a22744e1b0d48421c4a5ec32", "patch": "@@ -1,3 +1,9 @@\n+2013-04-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56388\n+\t* semantics.c (insert_capture_proxy): Just use index 1 in the\n+\tstmt_list_stack.\n+\n 2013-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* error.c (cp_print_error_function,"}, {"sha": "2784d797bdb06631ee533601f31c7fcfbc0bc9a5", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68329c23e76f311a22744e1b0d48421c4a5ec32/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68329c23e76f311a22744e1b0d48421c4a5ec32/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=a68329c23e76f311a22744e1b0d48421c4a5ec32", "patch": "@@ -9265,13 +9265,12 @@ void\n insert_capture_proxy (tree var)\n {\n   cp_binding_level *b;\n-  int skip;\n   tree stmt_list;\n \n   /* Put the capture proxy in the extra body block so that it won't clash\n      with a later local variable.  */\n   b = current_binding_level;\n-  for (skip = 0; ; ++skip)\n+  for (;;)\n     {\n       cp_binding_level *n = b->level_chain;\n       if (n->kind == sk_function_parms)\n@@ -9282,7 +9281,7 @@ insert_capture_proxy (tree var)\n \n   /* And put a DECL_EXPR in the STATEMENT_LIST for the same block.  */\n   var = build_stmt (DECL_SOURCE_LOCATION (var), DECL_EXPR, var);\n-  stmt_list = (*stmt_list_stack)[stmt_list_stack->length () - 1 - skip];\n+  stmt_list = (*stmt_list_stack)[1];\n   gcc_assert (stmt_list);\n   append_to_statement_list_force (var, &stmt_list);\n }"}, {"sha": "10dc6e36d2bb1e6da61423e9bcae634fb4d8d1f7", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-eh3.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68329c23e76f311a22744e1b0d48421c4a5ec32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-eh3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68329c23e76f311a22744e1b0d48421c4a5ec32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-eh3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-eh3.C?ref=a68329c23e76f311a22744e1b0d48421c4a5ec32", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/56388\n+// { dg-require-effective-target c++11 }\n+\n+int main()\n+{\n+    bool /*const*/ condition = false;\n+\n+    [&]{\n+        try{}\n+        catch(...){\n+            if(condition){}\n+        }\n+    }();\n+}"}]}