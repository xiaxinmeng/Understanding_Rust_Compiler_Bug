{"sha": "a4613d9ada54c334650d93edbb4c08069550099e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ2MTNkOWFkYTU0YzMzNDY1MGQ5M2VkYmI0YzA4MDY5NTUwMDk5ZQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-02-23T22:37:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-07T09:29:26Z"}, "message": "[Ada] Robust detection of access-to-subprogram and access-to-object types\n\ngcc/ada/\n\n\t* einfo-utils.adb (Is_Access_Object_Type): Use\n\tDirectly_Designated_Type.\n\t(Is_Access_Subprogram_Type): Use Directly_Designated_Type.\n\t(Set_Convention): Use plain Ekind.\n\t* gen_il-gen-gen_entities.adb (Type_Kind): Use plain Ekind.\n\t* sem_ch3.adb (Access_Type_Declaration): When seeing an illegal\n\tcompletion with an access type don't attempt to decorate the\n\tcompletion entity; previously the entity had its Ekind set to\n\tE_General_Access_Type or E_Access_Type, but its Designated_Type\n\twas empty, which caused a crash in freezing. (Actually, the\n\terror recovery in the surrounding context is still incomplete,\n\te.g. we will crash when the illegal completion is an access to\n\tan unknown identifier).", "tree": {"sha": "92b8fbb42ca8bf469ff25dff8465fa3a41a7afa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92b8fbb42ca8bf469ff25dff8465fa3a41a7afa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4613d9ada54c334650d93edbb4c08069550099e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4613d9ada54c334650d93edbb4c08069550099e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4613d9ada54c334650d93edbb4c08069550099e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4613d9ada54c334650d93edbb4c08069550099e/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "104f58db5f9cf759e9a223d5a3415d3a71849d79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/104f58db5f9cf759e9a223d5a3415d3a71849d79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/104f58db5f9cf759e9a223d5a3415d3a71849d79"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "f0dbf9c27d4975c42948ab4cce95383cbc85fce9", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4613d9ada54c334650d93edbb4c08069550099e/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4613d9ada54c334650d93edbb4c08069550099e/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=a4613d9ada54c334650d93edbb4c08069550099e", "patch": "@@ -101,7 +101,8 @@ package body Einfo.Utils is\n \n    function Is_Access_Object_Type               (Id : E) return B is\n    begin\n-      return Is_Access_Type (Id) and then not Is_Access_Subprogram_Type (Id);\n+      return Is_Access_Type (Id)\n+        and then Ekind (Directly_Designated_Type (Id)) /= E_Subprogram_Type;\n    end Is_Access_Object_Type;\n \n    function Is_Access_Type                      (Id : E) return B is\n@@ -116,7 +117,8 @@ package body Einfo.Utils is\n \n    function Is_Access_Subprogram_Type           (Id : E) return B is\n    begin\n-      return Ekind (Id) in Access_Subprogram_Kind;\n+      return Is_Access_Type (Id)\n+        and then Ekind (Directly_Designated_Type (Id)) = E_Subprogram_Type;\n    end Is_Access_Subprogram_Type;\n \n    function Is_Aggregate_Type                   (Id : E) return B is\n@@ -2672,8 +2674,7 @@ package body Einfo.Utils is\n    begin\n       Set_Basic_Convention (E, Val);\n \n-      if Is_Type (E)\n-        and then Is_Access_Subprogram_Type (Base_Type (E))\n+      if Ekind (E) in Access_Subprogram_Kind\n         and then Has_Foreign_Convention (E)\n       then\n          Set_Can_Use_Internal_Rep (E, False);"}, {"sha": "edc108201c25112327f79ee97fbd28817ad7b529", "filename": "gcc/ada/gen_il-gen-gen_entities.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4613d9ada54c334650d93edbb4c08069550099e/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4613d9ada54c334650d93edbb4c08069550099e/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_entities.adb?ref=a4613d9ada54c334650d93edbb4c08069550099e", "patch": "@@ -480,7 +480,7 @@ begin -- Gen_IL.Gen.Gen_Entities\n        (Sm (Alignment, Uint),\n         Sm (Associated_Node_For_Itype, Node_Id),\n         Sm (Can_Use_Internal_Rep, Flag, Base_Type_Only,\n-            Pre => \"Is_Access_Subprogram_Type (Base_Type (N))\"),\n+            Pre => \"Ekind (Base_Type (N)) in Access_Subprogram_Kind\"),\n         Sm (Class_Wide_Type, Node_Id),\n         Sm (Contract, Node_Id),\n         Sm (Current_Use_Clause, Node_Id),"}, {"sha": "8306309e5b9ce7e61f4b9e5d890dd6d3aab1fb04", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4613d9ada54c334650d93edbb4c08069550099e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4613d9ada54c334650d93edbb4c08069550099e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a4613d9ada54c334650d93edbb4c08069550099e", "patch": "@@ -1354,6 +1354,7 @@ package body Sem_Ch3 is\n \n             else\n                pragma Assert (Error_Posted (T));\n+               return;\n             end if;\n \n             --  If the designated type is a limited view, we cannot tell if\n@@ -6725,7 +6726,9 @@ package body Sem_Ch3 is\n                               Has_Private_Component (Derived_Type));\n       Conditional_Delay      (Derived_Type, Subt);\n \n-      if Is_Access_Subprogram_Type (Derived_Type) then\n+      if Is_Access_Subprogram_Type (Derived_Type)\n+        and then Is_Base_Type (Derived_Type)\n+      then\n          Set_Can_Use_Internal_Rep\n            (Derived_Type, Can_Use_Internal_Rep (Parent_Type));\n       end if;"}]}