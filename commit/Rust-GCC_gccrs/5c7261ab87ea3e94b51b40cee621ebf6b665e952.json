{"sha": "5c7261ab87ea3e94b51b40cee621ebf6b665e952", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM3MjYxYWI4N2VhM2U5NGI1MWI0MGNlZTYyMWViZjZiNjY1ZTk1Mg==", "commit": {"author": {"name": "Alex Samuel", "email": "samuel@codesourcery.com", "date": "1999-09-21T18:09:54Z"}, "committer": {"name": "Alex Samuel", "email": "samuel@gcc.gnu.org", "date": "1999-09-21T18:09:54Z"}, "message": "Replace string const \"<built-in>\" with dynamic allocation.\n\n\t* tree.c (built_in_filename): New variable.\n\t(BUILT_IN_FILENAME): New macro.\n\t(init_tree_codes): Allocate built_in_filename.\n\t(make_node): Use built_in_filename instead of string constant.\n\nFrom-SVN: r29552", "tree": {"sha": "89263391f64cf9aef62e2594ccd56036bca0f0f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89263391f64cf9aef62e2594ccd56036bca0f0f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c7261ab87ea3e94b51b40cee621ebf6b665e952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7261ab87ea3e94b51b40cee621ebf6b665e952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7261ab87ea3e94b51b40cee621ebf6b665e952", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7261ab87ea3e94b51b40cee621ebf6b665e952/comments", "author": null, "committer": null, "parents": [{"sha": "3e3f78a69b9d2bf4608d5b04b907a9a13099971b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e3f78a69b9d2bf4608d5b04b907a9a13099971b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e3f78a69b9d2bf4608d5b04b907a9a13099971b"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "0eb093a6102b2bc21b2b424cf8214bffe5924f3b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7261ab87ea3e94b51b40cee621ebf6b665e952/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7261ab87ea3e94b51b40cee621ebf6b665e952/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c7261ab87ea3e94b51b40cee621ebf6b665e952", "patch": "@@ -1,3 +1,10 @@\n+Tue Sep 21 11:04:34 1999  Alex Samuel  <samuel@codesourcery.com>\n+\n+\t* tree.c (built_in_filename): New variable.\n+\t(BUILT_IN_FILENAME): New macro.\n+\t(init_tree_codes): Allocate built_in_filename.\n+\t(make_node): Use built_in_filename instead of string constant.\n+\n Tue Sep 21 14:13:27 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* configure.in: Add fr30 target."}, {"sha": "81942ce8b0f74184367a29e5c951be3f23a17cdc", "filename": "gcc/tree.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c7261ab87ea3e94b51b40cee621ebf6b665e952/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c7261ab87ea3e94b51b40cee621ebf6b665e952/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=5c7261ab87ea3e94b51b40cee621ebf6b665e952", "patch": "@@ -278,6 +278,13 @@ static void fix_sizetype PROTO ((tree));\n /* If non-null, a language specific helper for unsave_expr_now. */\n \n void (*lang_unsave_expr_now) PROTO((tree));\n+\n+/* The string used as a placeholder instead of a source file name for\n+   built-in tree nodes.  The variable, which is dynamically allocated,\n+   should be used; the macro is only used to initialize it.  */\n+\n+static char *built_in_filename;\n+#define BUILT_IN_FILENAME (\"<built-in>\")\n \f\n tree global_trees[TI_MAX];\n \f\n@@ -867,7 +874,9 @@ resume_momentary (yes)\n void\n init_tree_codes ()\n {\n-  \n+  built_in_filename = \n+    ggc_alloc_string (BUILT_IN_FILENAME, sizeof (BUILT_IN_FILENAME));\n+  ggc_add_string_root (&built_in_filename, 1);\n }\n \n /* Return a newly allocated node of code CODE.\n@@ -1044,7 +1053,8 @@ make_node (code)\n       DECL_IN_SYSTEM_HEADER (t)\n \t= in_system_header && (obstack == &permanent_obstack);\n       DECL_SOURCE_LINE (t) = lineno;\n-      DECL_SOURCE_FILE (t) = (input_filename) ? input_filename : \"<built-in>\";\n+      DECL_SOURCE_FILE (t) = \n+\t(input_filename) ? input_filename : built_in_filename;\n       DECL_UID (t) = next_decl_uid++;\n       /* Note that we have not yet computed the alias set for this\n \t declaration.  */"}]}