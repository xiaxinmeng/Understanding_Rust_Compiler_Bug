{"sha": "830c5948106c441435731ada9084cba8595bb407", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMwYzU5NDgxMDZjNDQxNDM1NzMxYWRhOTA4NGNiYTg1OTViYjQwNw==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-08-21T08:30:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-21T08:30:17Z"}, "message": "[Ada] Undefined master in task with limited class-wide aliased entry formal\n\nIn the case of a task declaring an entry with an aliased formal\nparameter of a limited class-wide type, the front end was creating a\nmaster object (_master) for the access type generated for such an entry\nformal inside the task specification, even though such access types\ndon't need an associated master.  The master object wasn't being copied\ninto the procedure expanded for the task body, but a renaming for the\nmaster appeared in the statements of the task body, and the LLVM back\nend rejects this since the master object doesn't appear in the expanded\ntask procedure (for some reason, gigi doesn't complain). This is fixed\nby suppressing the creation of the master object in the case where the\naccess-to-limited-class-wide access type is the type of a component in\nan entry's parameter block.  This is similar to the suppression done for\nthe master object in other cases, where the access type designates a\ntype explicitly containing tasks (though the suppression involves\ntesting Comes_From_Source in that case).\n\nNo simple test (and this only affects the LLVM-based compiler).\n\n2019-08-21  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb (Build_Master): Suppress call to\n\tBuild_Class_Wide_Master in the case where the\n\taccess-to-limited-class-wide type was created for a component in\n\tan entry's formal parameter\n\tblock (Is_Parameter_Block_Component_Type), to prevent a master\n\tfrom being created for such access types generated by the front\n\tend in a task spec for entry formals in a parameter block.  Add\n\ta ??? about whether this suppression should be done more\n\tgenerally (such as by using Comes_From_Source).\n\nFrom-SVN: r274783", "tree": {"sha": "06a399da578e75da19912bb717f56682679b5449", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06a399da578e75da19912bb717f56682679b5449"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/830c5948106c441435731ada9084cba8595bb407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830c5948106c441435731ada9084cba8595bb407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/830c5948106c441435731ada9084cba8595bb407", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830c5948106c441435731ada9084cba8595bb407/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bde9a2c227e1c78215ab881de9a7eba29f45c37f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde9a2c227e1c78215ab881de9a7eba29f45c37f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bde9a2c227e1c78215ab881de9a7eba29f45c37f"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "29617b0c7ba9e5788dbe77cb3a8e0d090598ef9d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830c5948106c441435731ada9084cba8595bb407/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830c5948106c441435731ada9084cba8595bb407/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=830c5948106c441435731ada9084cba8595bb407", "patch": "@@ -1,3 +1,15 @@\n+2019-08-21  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Master): Suppress call to\n+\tBuild_Class_Wide_Master in the case where the\n+\taccess-to-limited-class-wide type was created for a component in\n+\tan entry's formal parameter\n+\tblock (Is_Parameter_Block_Component_Type), to prevent a master\n+\tfrom being created for such access types generated by the front\n+\tend in a task spec for entry formals in a parameter block.  Add\n+\ta ??? about whether this suppression should be done more\n+\tgenerally (such as by using Comes_From_Source).\n+\n 2019-08-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_ch6.adb (Expand_N_Extended_Return_Statement): In the case"}, {"sha": "87636002aa08202262135715a0a02dcdf771b468", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830c5948106c441435731ada9084cba8595bb407/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830c5948106c441435731ada9084cba8595bb407/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=830c5948106c441435731ada9084cba8595bb407", "patch": "@@ -5518,7 +5518,14 @@ package body Exp_Ch3 is\n          --  Note: This code covers access-to-limited-interfaces because they\n          --        can be used to reference tasks implementing them.\n \n-         elsif Is_Limited_Class_Wide_Type (Desig_Typ)\n+         --  Suppress the master creation for access types created for entry\n+         --  formal parameters (parameter block component types). Seems like\n+         --  suppression should be more general for compiler-generated types,\n+         --  but testing Comes_From_Source, like the code above does, may be\n+         --  too general in this case (affects some test output)???\n+\n+         elsif not Is_Param_Block_Component_Type (Ptr_Typ)\n+           and then Is_Limited_Class_Wide_Type (Desig_Typ)\n            and then Tasking_Allowed\n          then\n             Build_Class_Wide_Master (Ptr_Typ);"}]}