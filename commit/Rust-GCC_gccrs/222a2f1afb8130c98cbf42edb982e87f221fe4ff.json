{"sha": "222a2f1afb8130c98cbf42edb982e87f221fe4ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyYTJmMWFmYjgxMzBjOThjYmY0MmVkYjk4MmU4N2YyMjFmZTRmZg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@greed.local", "date": "2003-12-30T20:27:53Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-12-30T20:27:53Z"}, "message": "tm.texi (PREFERRED_RELOAD_CLASS): Describe use of NO_REGS with constants.\n\n\t* doc/tm.texi (PREFERRED_RELOAD_CLASS): Describe use of NO_REGS\n\twith constants.\n\nFrom-SVN: r75245", "tree": {"sha": "910d863649df21fad7a3b3035c97ecc3b25d907b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/910d863649df21fad7a3b3035c97ecc3b25d907b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/222a2f1afb8130c98cbf42edb982e87f221fe4ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222a2f1afb8130c98cbf42edb982e87f221fe4ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/222a2f1afb8130c98cbf42edb982e87f221fe4ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222a2f1afb8130c98cbf42edb982e87f221fe4ff/comments", "author": null, "committer": null, "parents": [{"sha": "cca9b4b54d86897efe9f691274a2a9fbd0c15b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca9b4b54d86897efe9f691274a2a9fbd0c15b5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca9b4b54d86897efe9f691274a2a9fbd0c15b5e"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "4272091c5456c1e45dabd336013ed32b31632167", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a2f1afb8130c98cbf42edb982e87f221fe4ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a2f1afb8130c98cbf42edb982e87f221fe4ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=222a2f1afb8130c98cbf42edb982e87f221fe4ff", "patch": "@@ -1,3 +1,8 @@\n+2003-12-30  Geoffrey Keating  <geoffk@greed.local>\n+\n+\t* doc/tm.texi (PREFERRED_RELOAD_CLASS): Describe use of NO_REGS\n+\twith constants.\n+\n 2003-12-30  Mark Mitchell  <mark@codesourcery.com>\n \n \t* stor-layout.c (layout_decl): Turn bitfields into ordinary"}, {"sha": "fa0e189bc8e2c9dc3503d565f8ea71a7f79f6520", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a2f1afb8130c98cbf42edb982e87f221fe4ff/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a2f1afb8130c98cbf42edb982e87f221fe4ff/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=222a2f1afb8130c98cbf42edb982e87f221fe4ff", "patch": "@@ -2419,10 +2419,17 @@ for a @samp{moveq} instruction, the value of this macro is always\n @code{DATA_REGS} as long as @var{class} includes the data registers.\n Requiring a data register guarantees that a @samp{moveq} will be used.\n \n-If @var{x} is a @code{const_double}, by returning @code{NO_REGS}\n-you can force @var{x} into a memory constant.  This is useful on\n-certain machines where immediate floating values cannot be loaded into\n-certain kinds of registers.\n+One case where @code{PREFERRED_RELOAD_CLASS} must not return\n+@var{class} is if @var{x} is a legitimate constant which cannot be\n+loaded into some register class.  By returning @code{NO_REGS} you can\n+force @var{x} into a memory location.  For example, rs6000 can load\n+immediate values into general-purpose registers, but does not have an\n+instruction for loading an immediate value into a floating-point\n+register, so @code{PREFERRED_RELOAD_CLASS} returns @code{NO_REGS} when\n+@var{x} is a floating-point constant.  If the constant can't be loaded\n+into any kind of register, code generation will be better if\n+@code{LEGITIMATE_CONSTANT_P} makes the constant illegitimate instead\n+of using @code{PREFERRED_RELOAD_CLASS}.\n @end defmac\n \n @defmac PREFERRED_OUTPUT_RELOAD_CLASS (@var{x}, @var{class})"}]}