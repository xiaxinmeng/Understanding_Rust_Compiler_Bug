{"sha": "dc02d4a99a7073dbef193c93529f2e1b64addfe2", "node_id": "C_kwDOANBUbNoAKGRjMDJkNGE5OWE3MDczZGJlZjE5M2M5MzUyOWYyZTFiNjRhZGRmZTI", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2022-12-07T19:24:45Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2022-12-07T19:24:45Z"}, "message": "testsuite: Add test for C90 auto with implicit int\n\nAdd a test for the case of auto with implicit int in C90 mode, which\nis incompatible with C2x semantics (I missed adding such a test when\nimplementing C2x auto).\n\nTested for x86_64-pc-linux-gnu.\n\n\t* gcc.dg/c90-auto-1.c: New test.", "tree": {"sha": "78e261fa6a989a779d8577cee9d52a93b1d386f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78e261fa6a989a779d8577cee9d52a93b1d386f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc02d4a99a7073dbef193c93529f2e1b64addfe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc02d4a99a7073dbef193c93529f2e1b64addfe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc02d4a99a7073dbef193c93529f2e1b64addfe2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc02d4a99a7073dbef193c93529f2e1b64addfe2/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce53cf7b61ea6bce05570e2fd1f8c10eee308ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce53cf7b61ea6bce05570e2fd1f8c10eee308ab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce53cf7b61ea6bce05570e2fd1f8c10eee308ab0"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "f00f767c50a7769ad2604ea1d8f38e1f8c46e2b1", "filename": "gcc/testsuite/gcc.dg/c90-auto-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc02d4a99a7073dbef193c93529f2e1b64addfe2/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-auto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc02d4a99a7073dbef193c93529f2e1b64addfe2/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-auto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-auto-1.c?ref=dc02d4a99a7073dbef193c93529f2e1b64addfe2", "patch": "@@ -0,0 +1,12 @@\n+/* Test auto with implicit int for C90.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c90 -pedantic-errors\" } */\n+\n+void\n+f (void)\n+{\n+  /* This should have type int following C90 rules, whereas in C2x it\n+     would have type double.  */\n+  auto x = 1.5;\n+  int *p = &x;\n+}"}]}