{"sha": "631e21eb7b2cf181fe8662990fa5a91db26e2686", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMxZTIxZWI3YjJjZjE4MWZlODY2Mjk5MGZhNWE5MWRiMjZlMjY4Ng==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-02-20T08:17:28Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-02-20T08:17:28Z"}, "message": "* Save temp file in ${LIB}. Use -I${ORIGDIR} when compiling types.c.\n\nFrom-SVN: r3499", "tree": {"sha": "e7f02a0db7b28ffc959b279de446dc3f34f48959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7f02a0db7b28ffc959b279de446dc3f34f48959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/631e21eb7b2cf181fe8662990fa5a91db26e2686", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/631e21eb7b2cf181fe8662990fa5a91db26e2686", "html_url": "https://github.com/Rust-GCC/gccrs/commit/631e21eb7b2cf181fe8662990fa5a91db26e2686", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/631e21eb7b2cf181fe8662990fa5a91db26e2686/comments", "author": null, "committer": null, "parents": [{"sha": "49b6e255d9b3f6e7fbf146046ab9913c53a6ec06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49b6e255d9b3f6e7fbf146046ab9913c53a6ec06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49b6e255d9b3f6e7fbf146046ab9913c53a6ec06"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "65d2277545dc4cd828e13cf07588ce3d2e6aba80", "filename": "gcc/fixincludes", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/631e21eb7b2cf181fe8662990fa5a91db26e2686/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/631e21eb7b2cf181fe8662990fa5a91db26e2686/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=631e21eb7b2cf181fe8662990fa5a91db26e2686", "patch": "@@ -27,6 +27,9 @@ case \"`pwd`\" in\n \t;;\n esac\n \n+# Original directory.\n+ORIGDIR=`${PWDCMD}`\n+\n # Make sure it exists.\n if [ ! -d $LIB ]; then\n   mkdir $LIB || exit 1\n@@ -294,9 +297,9 @@ do\n     # Extract the definition of SIZE_TYPE, if any.\n     # (This file must be called something.c).\n     echo \"#include \\\"tm.h\\\"\n-gobblegobble SIZE_TYPE\" > types.c\n-    foo=`cc -E -I. -I$SRCDIR -I$SRCDIR/config types.c | grep gobblegobble | sed -e \"s/gobblegobble[ \t]*//\"`\n-    rm -f types.c\n+gobblegobble SIZE_TYPE\" > ${LIB}/types.c\n+    foo=`cc -E -I${ORIGDIR} -I${SRCDIR} -I${SRCDIR}/config ${LIB}/types.c | grep gobblegobble | sed -e \"s/gobblegobble[ \t]*//\"`\n+    rm -f ${LIB}/types.c\n     # Default to our preferred type.\n     if [ $foo = SIZE_TYPE ]; then foo=\"unsigned long int\"; else true; fi\n     sed -e \"s/typedef[ \ta-z_]*[ \t]size_t/typedef $foo size_t/\" ${LIB}/$file > ${LIB}/${file}.sed"}]}