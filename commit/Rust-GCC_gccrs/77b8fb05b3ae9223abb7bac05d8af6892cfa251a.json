{"sha": "77b8fb05b3ae9223abb7bac05d8af6892cfa251a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdiOGZiMDViM2FlOTIyM2FiYjdiYWMwNWQ4YWY2ODkyY2ZhMjUxYQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2018-06-01T15:50:18Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2018-06-01T15:50:18Z"}, "message": "[AArch64] Used prefer aliases SXTL(2) and UXTL(2)\n\nThe SSHL and USHL instructions are used with a shift operand of zero to\nsign and zero-extend integer vectors into wider modes.\nGCC makes extensive use of them to \"unpack\" vectors.\n\nAArch64 defines a shorthand alias for that case. Instead of writing:\nSSHLL <Vd>.<Ta>, <Vn>.<Tb>, 0\n\nwe can write\n\nSXTL <Vd>.<Ta>, <Vn>.<Tb>\n\nSimilar for the unsigned versions and the high-part versions (SSHL2 -> SXTL2).\nThis makes the assembly of vectorised functions a bit more readable.\n\n\t* config/aarch64/aarch64-simd.md\n\t(aarch64_simd_vec_unpack<su>_lo_<mode>): Use UXTL and SXTL assembler\n\tmnemonics.\n\t(aarch64_simd_vec_unpack<su>_hi_<mode>): Use UXTL2 and SXTL2 assembler\n\tmnemonics.\n\nFrom-SVN: r261073", "tree": {"sha": "78d710facd7d9b41c56e3ec05bb671c79726df82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78d710facd7d9b41c56e3ec05bb671c79726df82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77b8fb05b3ae9223abb7bac05d8af6892cfa251a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b8fb05b3ae9223abb7bac05d8af6892cfa251a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77b8fb05b3ae9223abb7bac05d8af6892cfa251a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b8fb05b3ae9223abb7bac05d8af6892cfa251a/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7aad7f4b8508e26248205c2b408186b5f8f71ce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aad7f4b8508e26248205c2b408186b5f8f71ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aad7f4b8508e26248205c2b408186b5f8f71ce5"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "24cf22e1bd6163fb2dd43faf8e748909bae4b151", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b8fb05b3ae9223abb7bac05d8af6892cfa251a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b8fb05b3ae9223abb7bac05d8af6892cfa251a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77b8fb05b3ae9223abb7bac05d8af6892cfa251a", "patch": "@@ -1,3 +1,11 @@\n+2018-06-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md\n+\t(aarch64_simd_vec_unpack<su>_lo_<mode>): Use UXTL and SXTL assembler\n+\tmnemonics.\n+\t(aarch64_simd_vec_unpack<su>_hi_<mode>): Use UXTL2 and SXTL2 assembler\n+\tmnemonics.\n+\n 2018-06-01  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR tree-optimization/85989"}, {"sha": "dc4e0263096923097ac003fd7131a86bc661297e", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77b8fb05b3ae9223abb7bac05d8af6892cfa251a/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77b8fb05b3ae9223abb7bac05d8af6892cfa251a/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=77b8fb05b3ae9223abb7bac05d8af6892cfa251a", "patch": "@@ -1492,7 +1492,7 @@\n \t\t\t       (match_operand:VQW 2 \"vect_par_cnst_lo_half\" \"\")\n \t\t\t    )))]\n   \"TARGET_SIMD\"\n-  \"<su>shll\\t%0.<Vwtype>, %1.<Vhalftype>, 0\"\n+  \"<su>xtl\\t%0.<Vwtype>, %1.<Vhalftype>\"\n   [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n@@ -1503,7 +1503,7 @@\n \t\t\t       (match_operand:VQW 2 \"vect_par_cnst_hi_half\" \"\")\n \t\t\t    )))]\n   \"TARGET_SIMD\"\n-  \"<su>shll2\\t%0.<Vwtype>, %1.<Vtype>, 0\"\n+  \"<su>xtl2\\t%0.<Vwtype>, %1.<Vtype>\"\n   [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n "}]}