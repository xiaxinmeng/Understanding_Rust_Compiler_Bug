{"sha": "8e3b9bbfc850c53fe92b6015005b20b159adfa60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzYjliYmZjODUwYzUzZmU5MmI2MDE1MDA1YjIwYjE1OWFkZmE2MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-07-04T07:40:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-07-04T07:40:00Z"}, "message": "parser.c (cp_parser_decomposition_declaration): Replace decomposition declaration with structured binding in diagnostics.\n\n\t* parser.c (cp_parser_decomposition_declaration): Replace\n\tdecomposition declaration with structured binding in diagnostics.\n\t* decl.c (cp_finish_decomp): Likewise.\n\t(grokdeclarator): Likewise.\n\n\t* g++.dg/cpp1z/decomp1.C: Expect structured binding instead of\n\tdecomposition declaration in diagnostics.\n\t* g++.dg/cpp1z/decomp2.C: Likewise.\n\t* g++.dg/cpp1z/decomp3.C: Likewise.\n\t* g++.dg/cpp1z/decomp4.C: Likewise.\n\t* g++.dg/cpp1z/decomp5.C: Likewise.\n\t* g++.dg/cpp1z/decomp6.C: Likewise.\n\t* g++.dg/cpp1z/decomp7.C: Likewise.\n\t* g++.dg/cpp1z/decomp8.C: Likewise.\n\t* g++.dg/cpp1z/decomp13.C: Likewise.\n\t* g++.dg/cpp1z/decomp14.C: Likewise.\n\t* g++.dg/cpp1z/decomp18.C: Likewise.\n\t* g++.dg/cpp1z/decomp19.C: Likewise.\n\t* g++.dg/cpp1z/decomp22.C: Likewise.\n\t* g++.dg/cpp1z/decomp23.C: Likewise.\n\t* g++.dg/cpp1z/decomp24.C: Likewise.\n\t* g++.dg/cpp1z/decomp25.C: Likewise.\n\t* g++.dg/cpp1z/decomp26.C: Likewise.\n\t* g++.dg/cpp1z/decomp28.C: Likewise.\n\nFrom-SVN: r249948", "tree": {"sha": "725a3d38cbcc0ce67980d25705255c248f23531a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/725a3d38cbcc0ce67980d25705255c248f23531a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e3b9bbfc850c53fe92b6015005b20b159adfa60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3b9bbfc850c53fe92b6015005b20b159adfa60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3b9bbfc850c53fe92b6015005b20b159adfa60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3b9bbfc850c53fe92b6015005b20b159adfa60/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fc1fed43a7ea50803a7a95f3d6a6cea2faf0c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc1fed43a7ea50803a7a95f3d6a6cea2faf0c27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc1fed43a7ea50803a7a95f3d6a6cea2faf0c27"}], "stats": {"total": 263, "additions": 144, "deletions": 119}, "files": [{"sha": "4dffee44f17f45e566df30b2e473c6cd84ea9b33", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -1,5 +1,10 @@\n 2017-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* parser.c (cp_parser_decomposition_declaration): Replace\n+\tdecomposition declaration with structured binding in diagnostics.\n+\t* decl.c (cp_finish_decomp): Likewise.\n+\t(grokdeclarator): Likewise.\n+\n \tPR c++/81258\n \t* parser.c (cp_parser_decomposition_declaration): Diagnose invalid\n \tforms of structured binding initializers."}, {"sha": "43a94d9f6eb62ed4ad014a0c9349b46ebaf4dbf8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -7486,8 +7486,8 @@ cp_finish_decomp (tree decl, tree first, unsigned int count)\n \n \t  if (init == error_mark_node || eltype == error_mark_node)\n \t    {\n-\t      inform (dloc, \"in initialization of decomposition variable %qD\",\n-\t\t      v[i]);\n+\t      inform (dloc, \"in initialization of structured binding \"\n+\t\t      \"variable %qD\", v[i]);\n \t      goto error_out;\n \t    }\n \t  /* Save the decltype away before reference collapse.  */\n@@ -10137,7 +10137,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t  break;\n \n \tcase cdk_decomp:\n-\t  name = \"decomposition\";\n+\t  name = \"structured binding\";\n \t  break;\n \n \tcase cdk_error:\n@@ -10591,43 +10591,43 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t\t? declarator->declarator->id_loc : declarator->id_loc);\n       if (inlinep)\n \terror_at (declspecs->locations[ds_inline],\n-\t\t  \"decomposition declaration cannot be declared %<inline%>\");\n+\t\t  \"structured binding declaration cannot be %<inline%>\");\n       if (typedef_p)\n \terror_at (declspecs->locations[ds_typedef],\n-\t\t  \"decomposition declaration cannot be declared %<typedef%>\");\n+\t\t  \"structured binding declaration cannot be %<typedef%>\");\n       if (constexpr_p)\n-\terror_at (declspecs->locations[ds_constexpr], \"decomposition \"\n-\t\t  \"declaration cannot be declared %<constexpr%>\");\n+\terror_at (declspecs->locations[ds_constexpr], \"structured \"\n+\t\t  \"binding declaration cannot be %<constexpr%>\");\n       if (thread_p)\n \terror_at (declspecs->locations[ds_thread],\n-\t\t  \"decomposition declaration cannot be declared %qs\",\n+\t\t  \"structured binding declaration cannot be %qs\",\n \t\t  declspecs->gnu_thread_keyword_p\n \t\t  ? \"__thread\" : \"thread_local\");\n       if (concept_p)\n \terror_at (declspecs->locations[ds_concept],\n-\t\t  \"decomposition declaration cannot be declared %<concept%>\");\n+\t\t  \"structured binding declaration cannot be %<concept%>\");\n       switch (storage_class)\n \t{\n \tcase sc_none:\n \t  break;\n \tcase sc_register:\n-\t  error_at (loc, \"decomposition declaration cannot be declared \"\n+\t  error_at (loc, \"structured binding declaration cannot be \"\n \t\t    \"%<register%>\");\n \t  break;\n \tcase sc_static:\n-\t  error_at (loc, \"decomposition declaration cannot be declared \"\n+\t  error_at (loc, \"structured binding declaration cannot be \"\n \t\t    \"%<static%>\");\n \t  break;\n \tcase sc_extern:\n-\t  error_at (loc, \"decomposition declaration cannot be declared \"\n+\t  error_at (loc, \"structured binding declaration cannot be \"\n \t\t    \"%<extern%>\");\n \t  break;\n \tcase sc_mutable:\n-\t  error_at (loc, \"decomposition declaration cannot be declared \"\n+\t  error_at (loc, \"structured binding declaration cannot be \"\n \t\t    \"%<mutable%>\");\n \t  break;\n \tcase sc_auto:\n-\t  error_at (loc, \"decomposition declaration cannot be declared \"\n+\t  error_at (loc, \"structured binding declaration cannot be \"\n \t\t    \"C++98 %<auto%>\");\n \t  break;\n \tdefault:\n@@ -10638,8 +10638,8 @@ grokdeclarator (const cp_declarator *declarator,\n \t{\n \t  if (type != error_mark_node)\n \t    {\n-\t      error_at (loc, \"decomposition declaration cannot be declared \"\n-\t\t\t\"with type %qT\", type);\n+\t      error_at (loc, \"structured binding declaration cannot have \"\n+\t\t\t\"type %qT\", type);\n \t      inform (loc,\n \t\t      \"type must be cv-qualified %<auto%> or reference to \"\n \t\t      \"cv-qualified %<auto%>\");"}, {"sha": "dbe0052792454c2e32edddb10d1b8b5d96409388", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -13150,7 +13150,7 @@ cp_parser_decomposition_declaration (cp_parser *parser,\n     }\n \n   if (cxx_dialect < cxx1z)\n-    pedwarn (loc, 0, \"decomposition declaration only available with \"\n+    pedwarn (loc, 0, \"structured bindings only available with \"\n \t\t     \"-std=c++1z or -std=gnu++1z\");\n \n   tree pushed_scope;\n@@ -13199,7 +13199,7 @@ cp_parser_decomposition_declaration (cp_parser *parser,\n \n   if (v.is_empty ())\n     {\n-      error_at (loc, \"empty decomposition declaration\");\n+      error_at (loc, \"empty structured binding declaration\");\n       decl = error_mark_node;\n     }\n "}, {"sha": "1293cb0ea6882ba0e8508a0ddabac24a485a0bc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -1,5 +1,25 @@\n 2017-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* g++.dg/cpp1z/decomp1.C: Expect structured binding instead of\n+\tdecomposition declaration in diagnostics.\n+\t* g++.dg/cpp1z/decomp2.C: Likewise.\n+\t* g++.dg/cpp1z/decomp3.C: Likewise.\n+\t* g++.dg/cpp1z/decomp4.C: Likewise.\n+\t* g++.dg/cpp1z/decomp5.C: Likewise.\n+\t* g++.dg/cpp1z/decomp6.C: Likewise.\n+\t* g++.dg/cpp1z/decomp7.C: Likewise.\n+\t* g++.dg/cpp1z/decomp8.C: Likewise.\n+\t* g++.dg/cpp1z/decomp13.C: Likewise.\n+\t* g++.dg/cpp1z/decomp14.C: Likewise.\n+\t* g++.dg/cpp1z/decomp18.C: Likewise.\n+\t* g++.dg/cpp1z/decomp19.C: Likewise.\n+\t* g++.dg/cpp1z/decomp22.C: Likewise.\n+\t* g++.dg/cpp1z/decomp23.C: Likewise.\n+\t* g++.dg/cpp1z/decomp24.C: Likewise.\n+\t* g++.dg/cpp1z/decomp25.C: Likewise.\n+\t* g++.dg/cpp1z/decomp26.C: Likewise.\n+\t* g++.dg/cpp1z/decomp28.C: Likewise.\n+\n \tPR c++/81258\n \t* g++.dg/cpp1z/decomp21.C (foo): Adjust expected diagnostics.\n \t* g++.dg/cpp1z/decomp30.C: New test."}, {"sha": "330689178634a3cd6127601f2739b100cf8fa298", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp1.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -7,10 +7,10 @@ struct S { int a; signed char b; float c; } s = { 6, 7, 8.0f };\n int\n main ()\n {\n-  auto & [ c, d ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ e, f ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ g, h, i ] = s;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto & [ j, k, l ] = s;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ c, d ] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ e, f ] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ g, h, i ] = s;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto & [ j, k, l ] = s;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   c++;\n   d++;\n   e += 6;"}, {"sha": "a9bf264a2ca89671d2f4c5850cc8e793b0427735", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp13.C", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp13.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -11,42 +11,42 @@ namespace std {\n template<> struct std::tuple_size<B> { static constexpr int value = 2; };\n template<int I> struct std::tuple_element<I,B> { typedef int type; };\n \n-auto [ aa, bb, cc, dd ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+auto [ aa, bb, cc, dd ] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n // { dg-final { scan-assembler \"_ZDC2aa2bb2cc2ddE\" } }\n-const auto & [ e, f, g, h ] = a;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+const auto & [ e, f, g, h ] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n // { dg-final { scan-assembler \"_ZDC1e1f1g1hE\" } }\n-auto [ ee, ff ] = b;\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+auto [ ee, ff ] = b;\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n // { dg-final { scan-assembler \"_ZDC2ee2ffE\" } }\n-auto & [ gg, hh ] = b;\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+auto & [ gg, hh ] = b;\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n // { dg-final { scan-assembler \"_ZDC2gg2hhE\" } }\n namespace N\n {\n   namespace M\n   {\n-    auto [ i, j, k, l ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    auto [ i, j, k, l ] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     // { dg-final { scan-assembler \"_ZN1N1MDC1i1j1k1lEE\" } }\n-    auto & [ m, n, o, ppp ] = a;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    auto & [ m, n, o, ppp ] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     // { dg-final { scan-assembler \"_ZN1N1MDC1m1n1o3pppEE\" } }\n-    auto [ ii, jj ] = b;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    auto [ ii, jj ] = b;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     // { dg-final { scan-assembler \"_ZN1N1MDC2ii2jjEE\" } }\n     // { dg-final { scan-assembler \"_ZN1N1M2iiE\" } }\n     // { dg-final { scan-assembler \"_ZN1N1M2jjE\" } }\n-    auto & [ mm, nn ] = b;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    auto & [ mm, nn ] = b;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     // { dg-final { scan-assembler \"_ZN1N1MDC2mm2nnEE\" } }\n     // { dg-final { scan-assembler \"_ZN1N1M2mmE\" } }\n     // { dg-final { scan-assembler \"_ZN1N1M2nnE\" } }\n   }\n }\n namespace std\n {\n-  auto [ i2, j2, k2, l2 ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ i2, j2, k2, l2 ] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   // { dg-final { scan-assembler \"_ZStDC2i22j22k22l2E\" } }\n-  auto [ vv, ww ] = b;\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ vv, ww ] = b;\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   // { dg-final { scan-assembler \"_ZStDC2vv2wwE\" } }\n   // { dg-final { scan-assembler \"_ZSt2vv\" } }\n   // { dg-final { scan-assembler \"_ZSt2ww\" } }\n }\n namespace\n {\n-  auto [ v, w, x, y ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ v, w, x, y ] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n }"}, {"sha": "d05a8903232e028a92571968b7aa45cf231c6b82", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp14.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp14.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -18,13 +18,13 @@ struct M : virtual J, L {};\n void\n foo (C &c, F &f, G &g, H &h, I &i, K &k, M &m)\n {\n-  auto [ ci ] = c;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ ci ] = c;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   auto [ fi ] = f;\t\t// { dg-error \"cannot decompose class type 'F': both it and its base class 'A' have non-static data members\" }\n-\t\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .-1 }\n   auto [ gi ] = g;\t\t// { dg-error \"cannot decompose class type 'G': its base classes 'A' and 'E' have non-static data members\" }\n-\t\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n-  auto [ hi ] = h;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+\t\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .-1 }\n+  auto [ hi ] = h;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   auto [ ki ] = k;\t\t// { dg-error \"'B' is an ambiguous base of 'K'\" }\n-\t\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n-  auto [ mi ] = m;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+\t\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .-1 }\n+  auto [ mi ] = m;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n }"}, {"sha": "7799e462cdd4c0c768da0f59054f519efee197c7", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp18.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -7,6 +7,6 @@ void\n foo ()\n {\n   int z = 0;\n-  for (auto & [ b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (auto & [ b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s ] : a)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     z += b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s;\n }"}, {"sha": "e7d7abfce7c3ec848a5a66089e12a3d7db78a140", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp19.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -8,6 +8,6 @@ main ()\n   int x = 99;\n   struct S { int &x; };\n   S s{x};\n-  auto [p] = s;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [p] = s;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   return p - 99;\n }"}, {"sha": "6574028217fa66818d897897475637ccd575addd", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp2.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp2.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -9,12 +9,12 @@ __complex__ int c = 7 + 8i;\n int\n main ()\n {\n-  auto & [ d, e, f, g ] = a;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ h, i, j, k ] = a;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ l, m ] = b;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto & [ n, o ] = b;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto & [ p, q ] = c;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ r, s ] = c;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ d, e, f, g ] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ h, i, j, k ] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ l, m ] = b;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto & [ n, o ] = b;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto & [ p, q ] = c;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ r, s ] = c;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   d += 10;\n   e += 11;\n   f += 12;"}, {"sha": "9e6b8df486a85cb6a2943a7660211af475c97b69", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp22.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -16,6 +16,6 @@ int &&get (C<E...> &&);\n int\n foo (C<int> t)\n {\n-  auto[x0] = t;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto[x0] = t;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   return x0;\n }"}, {"sha": "9e9278050c980015f1c7f23336bc0d335689d475", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp23.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -7,6 +7,6 @@\n int\n foo (std::tuple<int> t)\n {\n-  auto [x0] = t;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [x0] = t;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   return x0;\n }"}, {"sha": "4bd519791ff8091b758066399d894aa386f57379", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp24.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -7,5 +7,5 @@ foo ()\n {\n   int a {10};\n   auto [b] { [&a](){} };\t// { dg-error \"cannot decompose lambda closure type\" }\n-  return b - a;\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n+  return b - a;\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .-1 }\n }"}, {"sha": "d90e665add0390bb7814f8583ea32f911bbbbd10", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp25.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp25.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -7,9 +7,9 @@ struct S\n {\n   enum E { A };\n   void f () { auto [x] = 0; x++; }\t// { dg-error \"cannot decompose non-array non-class type\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .-1 }\n   void g (T t) { auto [y] = t; y++; }\t// { dg-error \"cannot decompose non-array non-class type\" }\n-};\t\t\t\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .-1 }\n+};\t\t\t\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .-1 }\n \n int\n main ()"}, {"sha": "035433385d7494203d8cb80fd2741dea4ae0184a", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp26.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp26.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -2,5 +2,5 @@\n // { dg-do compile { target c++11 } }\n // { dg-options \"\" }\n \n-template<typename T> T &make();\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } .+1 }\n+template<typename T> T &make();\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } .+1 }\n auto [d1, d2] = make<int>();\t// { dg-error \"cannot decompose non-array non-class type\" }"}, {"sha": "8b0b5a54999d546337782547c30a0f796efdc019", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp28.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp28.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -15,14 +15,14 @@ template <int N>\n void\n foo (std::tuple<int> b)\n {\n-  auto [c] = b;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [c] = b;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n }\n \n template <typename T>\n void\n bar (std::tuple<T> b)\n {\n-  auto [c] = b;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [c] = b;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n }\n \n void\n@@ -35,5 +35,5 @@ baz (std::tuple<int> b)\n int\n main ()\n {\n-  [](auto) { [](std::tuple<int> b) { auto[c] = b; }; } (0); // { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  [](auto) { [](std::tuple<int> b) { auto[c] = b; }; } (0); // { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n }"}, {"sha": "58ce71bf6acdf42f7de9036a69cd9dd78148c8af", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp3.C", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -9,36 +9,36 @@ B baz ();\n void\n test (A &b, B c)\n {\n-  int && [ d ] = c;\t\t\t// { dg-error \"decomposition declaration cannot be declared with type 'int'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  char & [ e, f, ff ] { b };\t\t// { dg-error \"decomposition declaration cannot be declared with type 'char'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  auto&[g,h,i]=b;\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n-  decltype (auto) [ j ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared with type 'decltype.auto.'\" \"\" { target c++14 } }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  int && [ d ] = c;\t\t\t// { dg-error \"structured binding declaration cannot have type 'int'\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  char & [ e, f, ff ] { b };\t\t// { dg-error \"structured binding declaration cannot have type 'char'\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto&[g,h,i]=b;\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n+  decltype (auto) [ j ] = c;\t\t// { dg-error \"structured binding declaration cannot have type 'decltype.auto.'\" \"\" { target c++14 } }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n \t\t\t\t\t// { dg-error \"expected primary-expression before 'decltype'\" \"\" { target c++11_down } .-2 }\n   auto & & && & [ m, n, o ] = b;\t// { dg-error \"multiple ref-qualifiers\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  constexpr auto [ p ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared 'constexpr'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  constexpr auto [ p ] = c;\t\t// { dg-error \"structured binding declaration cannot be 'constexpr'\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   friend auto [ q ] = c;\t\t// { dg-error \"'friend' used outside of class\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  typedef auto [ r ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared 'typedef'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  inline auto [ s ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared 'inline'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  typedef auto [ r ] = c;\t\t// { dg-error \"structured binding declaration cannot be 'typedef'\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  inline auto [ s ] = c;\t\t// { dg-error \"structured binding declaration cannot be 'inline'\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   __restrict auto [ t ] = c;\t\t// { dg-error \"invalid use of 'restrict'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  long long auto [ u ] = c;\t\t// { dg-error \"'long long' invalid for 'decomposition'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  long long auto [ u ] = c;\t\t// { dg-error \"'long long' invalid for 'structured binding'\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   virtual auto [ v ] = c;\t\t// { dg-error \"'virtual' outside class declaration\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   explicit auto [ w ] = c;\t\t// { dg-error \"'explicit' outside class declaration\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  static auto [ x ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared 'static'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  extern auto [ y ] { c };\t\t// { dg-error \"decomposition declaration cannot be declared 'extern'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  static auto [ x ] = c;\t\t// { dg-error \"structured binding declaration cannot be 'static'\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  extern auto [ y ] { c };\t\t// { dg-error \"structured binding declaration cannot be 'extern'\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n }\n \n void\n@@ -52,15 +52,15 @@ void\n test3 (A &b, B c)\n {\n   auto [ d, e, f ] = arr;\t\t// { dg-error \"only 3 names provided while 'int .4.' decomposes into 4 elements\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   auto & [ g, h, i, j, k ] = arr;\t// { dg-error \"5 names provided while 'int .4.' decomposes into 4 elements\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   auto [ l, m ] = b;\t\t\t// { dg-error \"only 2 names provided while 'A' decomposes into 3 elements\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   auto & [ n, o, p, q ] = b;\t\t// { dg-error \"4 names provided while 'A' decomposes into 3 elements\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  auto [] { c };\t\t\t// { dg-error \"empty decomposition declaration\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [] { c };\t\t\t// { dg-error \"empty structured binding declaration\" }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   auto [ r, s ] = c;\t\t\t// { dg-error \"2 names provided while 'B' decomposes into 1 elements\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n }"}, {"sha": "55460833bd9231873d95039518fb28e16aaf3bcc", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp4.C", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp4.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -15,18 +15,18 @@ void\n test (A &a, B &b, C &c, D &d, E &e, F &f, G &g, H &h, I &i)\n {\n   auto [ j ] = a;\t\t\t// { dg-error \"cannot decompose class type 'A' because it has an anonymous struct member\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   auto [ k ] { b };\t\t\t// { dg-error \"cannot decompose class type 'B' because it has an anonymous union member\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n   auto [ l, l2 ] = c;\t\t\t// { dg-error \"cannot decompose non-public member 'C::b' of 'C'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  auto [ m ] = d;\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ m ] = d;\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n   auto [ n ] { e };\t\t\t// { dg-error \"cannot decompose non-public member 'E::a' of 'E'\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  auto [ o ] { f };\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ o ] { f };\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n   auto & [ p ] { g };\t\t\t// { dg-error \"cannot decompose class type 'G': both it and its base class 'F' have non-static data members\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n-  auto [ q ] { h };\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ q ] { h };\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n   auto [ r ] { i };\t\t\t// { dg-error \"cannot decompose class type 'I': its base classes 'F' and 'H' have non-static data members\" }\n-\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-warning \"structured bindings only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n }"}, {"sha": "99610d76832b14cacceb82fec38bfe83fc1a689f", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp5.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp5.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -12,19 +12,19 @@ main ()\n       x.i = i;\n       x.j = 2 * i++;\n     }\n-  for (auto & [ x, y ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (auto & [ x, y ] : a)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       x += 2;\n       y += 3;\n     }\n   i = 0;\n-  for (const auto [ u, v ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (const auto [ u, v ] : a)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       if (u != i + 2 || v != 2 * i++ + 3)\n \t__builtin_abort ();\n     }\n   i = 0;\n-  for (auto [ x, y ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (auto [ x, y ] : a)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       x += 4;\n       y += 5;"}, {"sha": "378a25141f407fcbc7f818388477589c8b2dcf36", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp6.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp6.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -23,7 +23,7 @@ main ()\n     if (ccnt != 6 || dcnt || cccnt || tccnt)\n       __builtin_abort ();\n     {\n-      auto [b,c,d,e,f,g] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+      auto [b,c,d,e,f,g] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n       if (ccnt != 6 || dcnt || cccnt || tccnt != 6)\n \t__builtin_abort ();\n       b.a++;\n@@ -34,7 +34,7 @@ main ()\n       if (&b == &a[0] || &c == &a[1] || &d == &a[2] || &e == &a[3] || &f == &a[4] || &g == &a[5])\n \t__builtin_abort ();\n       {\n-\tauto&[ h, i, j, k, l, m ] = a;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+\tauto&[ h, i, j, k, l, m ] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n \tif (ccnt != 6 || dcnt || cccnt || tccnt != 6)\n \t  __builtin_abort ();\n \tj.a += 4;\n@@ -59,7 +59,7 @@ main ()\n     if (ccnt != 12 || dcnt != 12 || cccnt || tccnt != 6)\n       __builtin_abort ();\n     {\n-      auto [b,c,d,e,f,g] { a };\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+      auto [b,c,d,e,f,g] { a };\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n       if (ccnt != 12 || dcnt != 12 || cccnt != 6 || tccnt != 6)\n \t__builtin_abort ();\n       b.a++;\n@@ -70,7 +70,7 @@ main ()\n       if (&b == &a[0] || &c == &a[1] || &d == &a[2] || &e == &a[3] || &f == &a[4] || &g == &a[5])\n \t__builtin_abort ();\n       {\n-\tauto&[ h, i, j, k, l, m ] {a};\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+\tauto&[ h, i, j, k, l, m ] {a};\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n \tif (ccnt != 12 || dcnt != 12 || cccnt != 6 || tccnt != 6)\n \t  __builtin_abort ();\n \tj.a += 4;\n@@ -95,7 +95,7 @@ main ()\n     if (ccnt != 18 || dcnt != 24 || cccnt != 6 || tccnt != 6)\n       __builtin_abort ();\n     {\n-      auto [b,c,d,e,f,g] ( a );\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+      auto [b,c,d,e,f,g] ( a );\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n       if (ccnt != 18 || dcnt != 24 || cccnt != 12 || tccnt != 6)\n \t__builtin_abort ();\n       b.a++;\n@@ -106,7 +106,7 @@ main ()\n       if (&b == &a[0] || &c == &a[1] || &d == &a[2] || &e == &a[3] || &f == &a[4] || &g == &a[5])\n \t__builtin_abort ();\n       {\n-\tauto&[ h, i, j, k, l, m ] (a);\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+\tauto&[ h, i, j, k, l, m ] (a);\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n \tif (ccnt != 18 || dcnt != 24 || cccnt != 12 || tccnt != 6)\n \t  __builtin_abort ();\n \tj.a += 4;"}, {"sha": "545c5cf1060afed5e61b947864acad4a6907b2f9", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp7.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp7.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -10,14 +10,14 @@ template <typename T, typename U>\n void\n foo (T &x, U &y)\n {\n-  auto & [ c, d ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ e, f ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ g, h, i ] = sa;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto & [ j, k, l ] = sa;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto & [ m, n ] = x;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ o, p ] = x;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto [ q, r, s ] = y;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n-  auto & [ t, u, v ] = y;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ c, d ] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ e, f ] = a;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ g, h, i ] = sa;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto & [ j, k, l ] = sa;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto & [ m, n ] = x;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ o, p ] = x;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto [ q, r, s ] = y;\t\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  auto & [ t, u, v ] = y;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n   c += 1;\n   e += 2;\n   g += 3;"}, {"sha": "af3075cce9850828fae3e6f6139f89de89b74604", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp8.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3b9bbfc850c53fe92b6015005b20b159adfa60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp8.C?ref=8e3b9bbfc850c53fe92b6015005b20b159adfa60", "patch": "@@ -14,19 +14,19 @@ foo (T &b)\n       x.i = i;\n       x.j = 2 * i++;\n     }\n-  for (auto & [ x, y ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (auto & [ x, y ] : a)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       x += 2;\n       y += 3;\n     }\n   i = 0;\n-  for (const auto [ u, v ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (const auto [ u, v ] : a)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       if (u != i + 2 || v != 2 * i++ + 3)\n \t__builtin_abort ();\n     }\n   i = 0;\n-  for (auto [ x, y ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (auto [ x, y ] : a)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       x += 4;\n       y += 5;\n@@ -45,19 +45,19 @@ foo (T &b)\n       x.i = i;\n       x.j = 2 * i++;\n     }\n-  for (auto & [ x, y ] : b)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (auto & [ x, y ] : b)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       x -= 2;\n       y -= 3;\n     }\n   i = 0;\n-  for (const auto [ u, v ] : b)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (const auto [ u, v ] : b)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       if (u != i - 2 || v != 2 * i++ - 3)\n \t__builtin_abort ();\n     }\n   i = 0;\n-  for (auto [ x, y ] : b)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  for (auto [ x, y ] : b)\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n     {\n       x -= 4;\n       y -= 5;"}]}