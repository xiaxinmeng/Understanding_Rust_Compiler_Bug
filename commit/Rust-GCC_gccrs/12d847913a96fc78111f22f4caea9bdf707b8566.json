{"sha": "12d847913a96fc78111f22f4caea9bdf707b8566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJkODQ3OTEzYTk2ZmM3ODExMWYyMmY0Y2FlYTliZGY3MDdiODU2Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-08-29T12:15:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-08-29T12:15:57Z"}, "message": "dwarf2out.c (add_dwarf_attr): When checking is enabled verify we do not add a DW_AT_inline attribute twice.\n\n2017-08-29  Richard Biener  <rguenther@suse.de>\n\n\t* dwarf2out.c (add_dwarf_attr): When checking is enabled verify\n\twe do not add a DW_AT_inline attribute twice.\n\t(gen_subprogram_die): Remove code setting DW_AT_inline on\n\tDECL_ABSTRACT_P nodes.\n\nFrom-SVN: r251409", "tree": {"sha": "1d3a033f3cf255dfb20ce45e8c8fdbd342b82cec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d3a033f3cf255dfb20ce45e8c8fdbd342b82cec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12d847913a96fc78111f22f4caea9bdf707b8566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d847913a96fc78111f22f4caea9bdf707b8566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d847913a96fc78111f22f4caea9bdf707b8566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d847913a96fc78111f22f4caea9bdf707b8566/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0694da45b3f362bf099d49ad5babff5a04feb047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0694da45b3f362bf099d49ad5babff5a04feb047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0694da45b3f362bf099d49ad5babff5a04feb047"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "0002ce1ff488e51ff82747f437bc889389a18650", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d847913a96fc78111f22f4caea9bdf707b8566/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d847913a96fc78111f22f4caea9bdf707b8566/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12d847913a96fc78111f22f4caea9bdf707b8566", "patch": "@@ -1,3 +1,10 @@\n+2017-08-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* dwarf2out.c (add_dwarf_attr): When checking is enabled verify\n+\twe do not add a DW_AT_inline attribute twice.\n+\t(gen_subprogram_die): Remove code setting DW_AT_inline on\n+\tDECL_ABSTRACT_P nodes.\n+\n 2017-08-29  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gimplify.c (gimplify_call_expr): Copy the nothrow flag to"}, {"sha": "7120f4edf029d035a257e0e64c3e84618bc7f0a3", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d847913a96fc78111f22f4caea9bdf707b8566/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d847913a96fc78111f22f4caea9bdf707b8566/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=12d847913a96fc78111f22f4caea9bdf707b8566", "patch": "@@ -4122,6 +4122,16 @@ add_dwarf_attr (dw_die_ref die, dw_attr_node *attr)\n   if (die == NULL)\n     return;\n \n+  if (flag_checking)\n+    {\n+      /* Check we do not add duplicate attrs.  Can't use get_AT here\n+         because that recurses to the specification/abstract origin DIE.  */\n+      dw_attr_node *a;\n+      unsigned ix;\n+      FOR_EACH_VEC_SAFE_ELT (die->die_attr, ix, a)\n+\tgcc_assert (a->dw_attr != attr->dw_attr || a->dw_attr != DW_AT_inline);\n+    }\n+\n   vec_safe_reserve (die->die_attr, 1);\n   vec_safe_push (die->die_attr, *attr);\n }\n@@ -22082,28 +22092,6 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t    add_AT_flag (subr_die, DW_AT_rvalue_reference, 1);\n \t}\n     }\n-  /* Tag abstract instances with DW_AT_inline.  */\n-  else if (DECL_ABSTRACT_P (decl))\n-    {\n-      if (DECL_DECLARED_INLINE_P (decl))\n-\t{\n-\t  if (cgraph_function_possibly_inlined_p (decl))\n-\t    add_AT_unsigned (subr_die, DW_AT_inline, DW_INL_declared_inlined);\n-\t  else\n-\t    add_AT_unsigned (subr_die, DW_AT_inline, DW_INL_declared_not_inlined);\n-\t}\n-      else\n-\t{\n-\t  if (cgraph_function_possibly_inlined_p (decl))\n-\t    add_AT_unsigned (subr_die, DW_AT_inline, DW_INL_inlined);\n-\t  else\n-\t    add_AT_unsigned (subr_die, DW_AT_inline, DW_INL_not_inlined);\n-\t}\n-\n-      if (DECL_DECLARED_INLINE_P (decl)\n-\t  && lookup_attribute (\"artificial\", DECL_ATTRIBUTES (decl)))\n-\tadd_AT_flag (subr_die, DW_AT_artificial, 1);\n-    }\n   /* For non DECL_EXTERNALs, if range information is available, fill\n      the DIE with it.  */\n   else if (!DECL_EXTERNAL (decl) && !early_dwarf)"}]}