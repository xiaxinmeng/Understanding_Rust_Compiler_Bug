{"sha": "cb96be0bf70de411aab1e2b71953371f15a00b88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I5NmJlMGJmNzBkZTQxMWFhYjFlMmI3MTk1MzM3MWYxNWEwMGI4OA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-09-22T01:42:59Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1993-09-22T01:42:59Z"}, "message": "Minor push_member_name improvement.\n\nFrom-SVN: r5380", "tree": {"sha": "9a57a41074fdbf102f947eeef1b86935146fee64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a57a41074fdbf102f947eeef1b86935146fee64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb96be0bf70de411aab1e2b71953371f15a00b88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb96be0bf70de411aab1e2b71953371f15a00b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb96be0bf70de411aab1e2b71953371f15a00b88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb96be0bf70de411aab1e2b71953371f15a00b88/comments", "author": null, "committer": null, "parents": [{"sha": "ca695ac93dca6da6f9bcb2916cd3798f016084b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca695ac93dca6da6f9bcb2916cd3798f016084b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca695ac93dca6da6f9bcb2916cd3798f016084b2"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a298c57bd53e24a76e5b2c0df465a1602753c699", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb96be0bf70de411aab1e2b71953371f15a00b88/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb96be0bf70de411aab1e2b71953371f15a00b88/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=cb96be0bf70de411aab1e2b71953371f15a00b88", "patch": "@@ -4780,9 +4780,12 @@ push_string (string)\n /* Push a member name on the stack.  Printed as '.' STRING.  */\n \n static void\n-push_member_name (string)\n-     char *string;\n+push_member_name (decl)\n+     tree decl;\n+     \n {\n+  char *string\n+    = DECL_NAME (decl) ? IDENTIFIER_POINTER (DECL_NAME (decl)) : \"<anonymous>\";\n   PUSH_SPELLING (SPELLING_MEMBER, string, u.s);\n }\n \n@@ -5519,7 +5522,7 @@ push_init_level (implicit)\n       else\n \t{\n \t  constructor_type = TREE_TYPE (constructor_fields);\n-\t  push_member_name (IDENTIFIER_POINTER (DECL_NAME (constructor_fields)));\n+\t  push_member_name (constructor_fields);\n \t}\n     }\n   else if (TREE_CODE (constructor_type) == ARRAY_TYPE)\n@@ -6258,7 +6261,7 @@ process_init_element (value)\n \n \t  if (value)\n \t    {\n-\t      push_member_name (IDENTIFIER_POINTER (DECL_NAME (constructor_fields)));\n+\t      push_member_name (constructor_fields);\n \t      output_init_element (value, fieldtype, constructor_fields, 1);\n \t      RESTORE_SPELLING_DEPTH (constructor_depth);\n \t    }\n@@ -6315,7 +6318,7 @@ process_init_element (value)\n \n \t  if (value)\n \t    {\n-\t      push_member_name (IDENTIFIER_POINTER (DECL_NAME (constructor_fields)));\n+\t      push_member_name (constructor_fields);\n \t      output_init_element (value, fieldtype, constructor_fields, 1);\n \t      RESTORE_SPELLING_DEPTH (constructor_depth);\n \t    }"}]}