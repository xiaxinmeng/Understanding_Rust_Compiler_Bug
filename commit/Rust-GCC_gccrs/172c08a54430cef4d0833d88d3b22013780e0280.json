{"sha": "172c08a54430cef4d0833d88d3b22013780e0280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcyYzA4YTU0NDMwY2VmNGQwODMzZDg4ZDNiMjIwMTM3ODBlMDI4MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-08-01T19:35:43Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-08-01T19:35:43Z"}, "message": "re PR target/49881 ([AVR] Inefficient stack manipulation around calls)\n\nPR target/49881\n        * config/avr/avr.h (PUSH_ROUNDING): New.\n        * config/avr/avr.md (pushqi1): Rename from *pushqi.\n        (*pushhi, *pushsi, *pushsf): Remove.\n        (MPUSH): New mode iterator.\n        (push<MPUSH>1): New expander.\n\nFrom-SVN: r177071", "tree": {"sha": "3796e229da8b3ccd4452bbc829e238dac4572686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3796e229da8b3ccd4452bbc829e238dac4572686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/172c08a54430cef4d0833d88d3b22013780e0280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/172c08a54430cef4d0833d88d3b22013780e0280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/172c08a54430cef4d0833d88d3b22013780e0280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/172c08a54430cef4d0833d88d3b22013780e0280/comments", "author": null, "committer": null, "parents": [{"sha": "750867b7f4a6cf9086e925e89147fb763291b853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750867b7f4a6cf9086e925e89147fb763291b853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750867b7f4a6cf9086e925e89147fb763291b853"}], "stats": {"total": 62, "additions": 35, "deletions": 27}, "files": [{"sha": "580c12f14439a17f9acfe3eb7a51445194df81b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172c08a54430cef4d0833d88d3b22013780e0280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172c08a54430cef4d0833d88d3b22013780e0280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=172c08a54430cef4d0833d88d3b22013780e0280", "patch": "@@ -1,3 +1,12 @@\n+2011-08-01  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/49881\n+\t* config/avr/avr.h (PUSH_ROUNDING): New.\n+\t* config/avr/avr.md (pushqi1): Rename from *pushqi.\n+\t(*pushhi, *pushsi, *pushsf): Remove.\n+\t(MPUSH): New mode iterator.\n+\t(push<MPUSH>1): New expander.\n+\n 2011-08-01  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/mmix/mmix.h (PREFERRED_RELOAD_CLASS,"}, {"sha": "ebf8290866af3d564afdd206540d8d4dcfcbe3d0", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172c08a54430cef4d0833d88d3b22013780e0280/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172c08a54430cef4d0833d88d3b22013780e0280/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=172c08a54430cef4d0833d88d3b22013780e0280", "patch": "@@ -685,3 +685,7 @@ struct GTY(()) machine_function\n   /* 'true' if a callee might be tail called */\n   int sibcall_fails;\n };\n+\n+/* AVR does not round pushes, but the existance of this macro is\n+   required in order for pushes to be generated.  */\n+#define PUSH_ROUNDING(X)\t(X)"}, {"sha": "f60f9f0ee6393c9f7498a08c5ec9e0a26c38ff23", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 22, "deletions": 27, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172c08a54430cef4d0833d88d3b22013780e0280/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172c08a54430cef4d0833d88d3b22013780e0280/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=172c08a54430cef4d0833d88d3b22013780e0280", "patch": "@@ -202,8 +202,7 @@\n   DONE;\n })\n \n-\n-(define_insn \"*pushqi\"\n+(define_insn \"pushqi1\"\n   [(set (mem:QI (post_dec:HI (reg:HI REG_SP)))\n         (match_operand:QI 0 \"reg_or_0_operand\" \"r,L\"))]\n   \"\"\n@@ -212,33 +211,29 @@\n \tpush __zero_reg__\"\n   [(set_attr \"length\" \"1,1\")])\n \n-(define_insn \"*pushhi\"\n-  [(set (mem:HI (post_dec:HI (reg:HI REG_SP)))\n-        (match_operand:HI 0 \"reg_or_0_operand\" \"r,L\"))]\n-  \"\"\n-  \"@\n-\tpush %B0\\;push %A0\n-\tpush __zero_reg__\\;push __zero_reg__\"\n-  [(set_attr \"length\" \"2,2\")])\n+;; All modes for a multi-byte push.  We must include complex modes here too,\n+;; lest emit_single_push_insn \"helpfully \" create the auto-inc itself.\n+(define_mode_iterator MPUSH\n+  [(CQI \"\")\n+   (HI \"\") (CHI \"\")\n+   (SI \"\") (CSI \"\")\n+   (DI \"\") (CDI \"\")\n+   (SF \"\") (SC \"\")])\n \n-(define_insn \"*pushsi\"\n-  [(set (mem:SI (post_dec:HI (reg:HI REG_SP)))\n-        (match_operand:SI 0 \"reg_or_0_operand\" \"r,L\"))]\n+(define_expand \"push<mode>1\"\n+  [(match_operand:MPUSH 0 \"general_operand\" \"\")]\n   \"\"\n-  \"@\n-\tpush %D0\\;push %C0\\;push %B0\\;push %A0\n-\tpush __zero_reg__\\;push __zero_reg__\\;push __zero_reg__\\;push __zero_reg__\"\n-  [(set_attr \"length\" \"4,4\")])\n-\n-(define_insn \"*pushsf\"\n-  [(set (mem:SF (post_dec:HI (reg:HI REG_SP)))\n-        (match_operand:SF 0 \"register_operand\" \"r\"))]\n-  \"\"\n-  \"push %D0\n-\tpush %C0\n-\tpush %B0\n-\tpush %A0\"\n-  [(set_attr \"length\" \"4\")])\n+{\n+  int i;\n+  for (i = GET_MODE_SIZE (<MODE>mode) - 1; i >= 0; --i)\n+    {\n+      rtx part = simplify_gen_subreg (QImode, operands[0], <MODE>mode, i);\n+      if (part != const0_rtx)\n+\tpart = force_reg (QImode, part);\n+      emit_insn (gen_pushqi1 (part));\n+    }\n+  DONE;\n+})\n \n ;;========================================================================\n ;; move byte"}]}