{"sha": "7c363a4e044115ea811888fe0d32b04f23d79ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzNjNhNGUwNDQxMTVlYTgxMTg4OGZlMGQzMmIwNGYyM2Q3OWFlMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-09-28T20:47:25Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-09-28T20:49:39Z"}, "message": "libbacktrace: only run dsymutil with Mach-O\n\nlibbacktrace/ChangeLog:\n\tPR libbacktrace/97227\n\t* configure.ac (USE_DSYMUTIL): Define instead of HAVE_DSYMUTIL.\n\t* Makefile.am: Change all uses of HAVE_DSYMUTIL to USE_DSYMUTIL.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.", "tree": {"sha": "3fef5d26d8f1577b37398fb8a5670db4977b7966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fef5d26d8f1577b37398fb8a5670db4977b7966"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c363a4e044115ea811888fe0d32b04f23d79ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c363a4e044115ea811888fe0d32b04f23d79ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c363a4e044115ea811888fe0d32b04f23d79ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c363a4e044115ea811888fe0d32b04f23d79ae2/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a10a2c0689db280ee3a94164504b7196b8370f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a10a2c0689db280ee3a94164504b7196b8370f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a10a2c0689db280ee3a94164504b7196b8370f4"}], "stats": {"total": 90, "additions": 46, "deletions": 44}, "files": [{"sha": "f7e8ca2cf5cb2838ad43f08bba33b22c25ce9e00", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c363a4e044115ea811888fe0d32b04f23d79ae2/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c363a4e044115ea811888fe0d32b04f23d79ae2/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=7c363a4e044115ea811888fe0d32b04f23d79ae2", "patch": "@@ -100,12 +100,12 @@ check_DATA =\n # Flags to use when compiling test programs.\n libbacktrace_TEST_CFLAGS = $(EXTRA_FLAGS) $(WARN_FLAGS) -g\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n \n %.dSYM: %\n \t$(DSYMUTIL) $<\n \n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n if NATIVE\n check_LTLIBRARIES = libbacktrace_alloc.la\n@@ -237,9 +237,9 @@ allocfail.sh: allocfail\n \n TESTS += allocfail.sh\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += allocfail.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n if HAVE_ELF\n if HAVE_OBJCOPY_DEBUGLINK\n@@ -273,9 +273,9 @@ btest_LDADD = libbacktrace.la\n \n BUILDTESTS += btest\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += btest.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n if HAVE_ELF\n \n@@ -293,9 +293,9 @@ btest_alloc_LDADD = libbacktrace_alloc.la\n \n BUILDTESTS += btest_alloc\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += btest_alloc.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n if HAVE_DWZ\n \n@@ -323,19 +323,19 @@ stest_LDADD = libbacktrace.la\n \n BUILDTESTS += stest\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += stest.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n stest_alloc_SOURCES = $(stest_SOURCES)\n stest_alloc_CFLAGS = $(libbacktrace_TEST_CFLAGS)\n stest_alloc_LDADD = libbacktrace_alloc.la\n \n BUILDTESTS += stest_alloc\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += stest_alloc.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n if HAVE_ELF\n \n@@ -366,17 +366,17 @@ edtest_LDADD = libbacktrace.la\n \n BUILDTESTS += edtest\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += edtest.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n edtest_alloc_SOURCES = $(edtest_SOURCES)\n edtest_alloc_CFLAGS = $(libbacktrace_TEST_CFLAGS)\n edtest_alloc_LDADD = libbacktrace_alloc.la\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += edtest_alloc.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n BUILDTESTS += edtest_alloc\n \n@@ -394,19 +394,19 @@ ttest_SOURCES = ttest.c testlib.c\n ttest_CFLAGS = $(libbacktrace_TEST_CFLAGS) -pthread\n ttest_LDADD = libbacktrace.la\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += ttest.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n BUILDTESTS += ttest_alloc\n \n ttest_alloc_SOURCES = $(ttest_SOURCES)\n ttest_alloc_CFLAGS = $(ttest_CFLAGS)\n ttest_alloc_LDADD = libbacktrace_alloc.la\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += ttest_alloc.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n endif HAVE_PTHREAD\n \n@@ -462,19 +462,19 @@ dwarf5_LDADD = libbacktrace.la\n \n BUILDTESTS += dwarf5\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += dwarf5.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n dwarf5_alloc_SOURCES = $(dwarf5_SOURCES)\n dwarf5_alloc_CFLAGS = $(dwarf5_CFLAGS)\n dwarf5_alloc_LDADD = libbacktrace_alloc.la\n \n BUILDTESTS += dwarf5_alloc\n \n-if HAVE_DSYMUTIL\n+if USE_DSYMUTIL\n check_DATA += dwarf5_alloc.dSYM\n-endif HAVE_DSYMUTIL\n+endif USE_DSYMUTIL\n \n endif\n "}, {"sha": "b7280aaba68d943d1b419966f7fe8aedbdbe9e53", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c363a4e044115ea811888fe0d32b04f23d79ae2/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c363a4e044115ea811888fe0d32b04f23d79ae2/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=7c363a4e044115ea811888fe0d32b04f23d79ae2", "patch": "@@ -131,10 +131,10 @@ TESTS = $(am__append_4) $(am__append_7) $(am__append_9) \\\n @NATIVE_TRUE@\ttest_unknown unittest unittest_alloc btest\n @NATIVE_TRUE@am__append_3 = allocfail\n @NATIVE_TRUE@am__append_4 = allocfail.sh\n-@HAVE_DSYMUTIL_TRUE@@NATIVE_TRUE@am__append_5 = allocfail.dSYM \\\n-@HAVE_DSYMUTIL_TRUE@@NATIVE_TRUE@\tbtest.dSYM btest_alloc.dSYM \\\n-@HAVE_DSYMUTIL_TRUE@@NATIVE_TRUE@\tstest.dSYM stest_alloc.dSYM \\\n-@HAVE_DSYMUTIL_TRUE@@NATIVE_TRUE@\tedtest.dSYM edtest_alloc.dSYM\n+@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@am__append_5 = allocfail.dSYM \\\n+@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tbtest.dSYM btest_alloc.dSYM \\\n+@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tstest.dSYM stest_alloc.dSYM \\\n+@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tedtest.dSYM edtest_alloc.dSYM\n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_6 = b2test\n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_7 = b2test_buildid\n @HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_8 = b3test\n@@ -148,15 +148,17 @@ TESTS = $(am__append_4) $(am__append_7) $(am__append_9) \\\n @HAVE_ELF_TRUE@@NATIVE_TRUE@am__append_16 = ztest ztest_alloc\n @NATIVE_TRUE@am__append_17 = edtest edtest_alloc\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_18 = ttest ttest_alloc\n-@HAVE_DSYMUTIL_TRUE@@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_19 = ttest.dSYM \\\n-@HAVE_DSYMUTIL_TRUE@@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\tttest_alloc.dSYM\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@am__append_19 =  \\\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tttest.dSYM \\\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tttest_alloc.dSYM\n @HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_20 = btest_gnudebuglink\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_21 = ctestg ctesta \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc\n @HAVE_DWARF5_TRUE@@NATIVE_TRUE@am__append_22 = dwarf5 dwarf5_alloc\n-@HAVE_DSYMUTIL_TRUE@@HAVE_DWARF5_TRUE@@NATIVE_TRUE@am__append_23 = dwarf5.dSYM \\\n-@HAVE_DSYMUTIL_TRUE@@HAVE_DWARF5_TRUE@@NATIVE_TRUE@\tdwarf5_alloc.dSYM\n+@HAVE_DWARF5_TRUE@@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@am__append_23 =  \\\n+@HAVE_DWARF5_TRUE@@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tdwarf5.dSYM \\\n+@HAVE_DWARF5_TRUE@@NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tdwarf5_alloc.dSYM\n @NATIVE_TRUE@am__append_24 = mtest\n @HAVE_MINIDEBUG_TRUE@@NATIVE_TRUE@am__append_25 = mtest_minidebug\n @HAVE_ELF_TRUE@@HAVE_LIBLZMA_TRUE@am__append_26 = -llzma\n@@ -2392,8 +2394,8 @@ uninstall-am:\n .PRECIOUS: Makefile\n \n \n-@HAVE_DSYMUTIL_TRUE@%.dSYM: %\n-@HAVE_DSYMUTIL_TRUE@\t$(DSYMUTIL) $<\n+@USE_DSYMUTIL_TRUE@%.dSYM: %\n+@USE_DSYMUTIL_TRUE@\t$(DSYMUTIL) $<\n \n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@elf_for_test.c: elf.c\n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tSEARCH='^#define SYSTEM_BUILD_ID_DIR.*$$'; \\"}, {"sha": "8c8c34d45cfe7975b7b2589d2d1a364545efbb54", "filename": "libbacktrace/configure", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c363a4e044115ea811888fe0d32b04f23d79ae2/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c363a4e044115ea811888fe0d32b04f23d79ae2/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=7c363a4e044115ea811888fe0d32b04f23d79ae2", "patch": "@@ -645,8 +645,8 @@ COMM\n HAVE_XZ_FALSE\n HAVE_XZ_TRUE\n XZ\n-HAVE_DSYMUTIL_FALSE\n-HAVE_DSYMUTIL_TRUE\n+USE_DSYMUTIL_FALSE\n+USE_DSYMUTIL_TRUE\n HAVE_OBJCOPY_DEBUGLINK_FALSE\n HAVE_OBJCOPY_DEBUGLINK_TRUE\n READELF\n@@ -13860,12 +13860,12 @@ $as_echo \"no\" >&6; }\n fi\n \n \n- if test -n \"${DSYMUTIL}\"; then\n-  HAVE_DSYMUTIL_TRUE=\n-  HAVE_DSYMUTIL_FALSE='#'\n+ if test -n \"${DSYMUTIL}\" -a \"$FORMAT_FILE\" = \"macho.lo\"; then\n+  USE_DSYMUTIL_TRUE=\n+  USE_DSYMUTIL_FALSE='#'\n else\n-  HAVE_DSYMUTIL_TRUE='#'\n-  HAVE_DSYMUTIL_FALSE=\n+  USE_DSYMUTIL_TRUE='#'\n+  USE_DSYMUTIL_FALSE=\n fi\n \n \n@@ -14271,8 +14271,8 @@ if test -z \"${HAVE_OBJCOPY_DEBUGLINK_TRUE}\" && test -z \"${HAVE_OBJCOPY_DEBUGLINK\n   as_fn_error $? \"conditional \\\"HAVE_OBJCOPY_DEBUGLINK\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n-if test -z \"${HAVE_DSYMUTIL_TRUE}\" && test -z \"${HAVE_DSYMUTIL_FALSE}\"; then\n-  as_fn_error $? \"conditional \\\"HAVE_DSYMUTIL\\\" was never defined.\n+if test -z \"${USE_DSYMUTIL_TRUE}\" && test -z \"${USE_DSYMUTIL_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"USE_DSYMUTIL\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n if test -z \"${HAVE_XZ_TRUE}\" && test -z \"${HAVE_XZ_FALSE}\"; then"}, {"sha": "ec456bf4a1fb53607ea896bd1f94e03925f1760e", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c363a4e044115ea811888fe0d32b04f23d79ae2/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c363a4e044115ea811888fe0d32b04f23d79ae2/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=7c363a4e044115ea811888fe0d32b04f23d79ae2", "patch": "@@ -510,7 +510,7 @@ AM_CONDITIONAL(HAVE_OBJCOPY_DEBUGLINK, test \"$libbacktrace_cv_objcopy_debuglink\"\n \n AC_ARG_VAR(DSYMUTIL, [location of dsymutil])\n AC_CHECK_PROG(DSYMUTIL, dsymutil, dsymutil)\n-AM_CONDITIONAL(HAVE_DSYMUTIL, test -n \"${DSYMUTIL}\")\n+AM_CONDITIONAL(USE_DSYMUTIL, test -n \"${DSYMUTIL}\" -a \"$FORMAT_FILE\" = \"macho.lo\")\n \n AC_ARG_VAR(NM, [location of nm])\n AC_CHECK_PROG(NM, nm, nm)"}]}