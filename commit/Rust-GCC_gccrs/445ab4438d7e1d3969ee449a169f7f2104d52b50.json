{"sha": "445ab4438d7e1d3969ee449a169f7f2104d52b50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ1YWI0NDM4ZDdlMWQzOTY5ZWU0NDlhMTY5ZjdmMjEwNGQ1MmI1MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-02-13T19:29:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-02-13T19:29:53Z"}, "message": "parse.y (frob_specs): Split out...\n\n        * parse.y (frob_specs): Split out...\n        (parse_decl): From here.\n        (fn.def2): Call initial_deferred_type_access_control.\n        (after_type_component_declarator0): Call frob_specs.\n        (notype_component_declarator0): Likewise.\n        * search.c (friend_accessible_p): Nested classes are friends of their\n        enclosing classes.\n\nFrom-SVN: r31957", "tree": {"sha": "7cf1a385da9fc9da89fb532c0bef4448737a4959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cf1a385da9fc9da89fb532c0bef4448737a4959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/445ab4438d7e1d3969ee449a169f7f2104d52b50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/445ab4438d7e1d3969ee449a169f7f2104d52b50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/445ab4438d7e1d3969ee449a169f7f2104d52b50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/445ab4438d7e1d3969ee449a169f7f2104d52b50/comments", "author": null, "committer": null, "parents": [{"sha": "564e43cdf1e237ef4f451bc5afc949d8cc326b1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564e43cdf1e237ef4f451bc5afc949d8cc326b1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564e43cdf1e237ef4f451bc5afc949d8cc326b1a"}], "stats": {"total": 1717, "additions": 864, "deletions": 853}, "files": [{"sha": "c382a9d2af3953f3fb8576fb845d869190d04ca4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=445ab4438d7e1d3969ee449a169f7f2104d52b50", "patch": "@@ -1,3 +1,13 @@\n+2000-02-13  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* parse.y (frob_specs): Split out...\n+\t(parse_decl): From here.\n+\t(fn.def2): Call initial_deferred_type_access_control.\n+\t(after_type_component_declarator0): Call frob_specs.\n+\t(notype_component_declarator0): Likewise.\n+\t* search.c (friend_accessible_p): Nested classes are friends of their\n+\tenclosing classes.\n+\n 2000-02-10  Mark Mitchell  <mark@codesourcery.com>\n \n \t* ir.texi (ADDR_EXPR): Document the fact that an ADDR_EXPR can be"}, {"sha": "6baf52dcd1711033e0fb7c89877fab06790795c7", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=445ab4438d7e1d3969ee449a169f7f2104d52b50", "patch": "@@ -101,7 +101,7 @@ is_friend (type, supplicant)\n   else\n     /* It's a type.  */\n     {\n-      /* The type and its nested classes are implicitly friends, as\n+      /* Nested classes are implicitly friends of their enclosing types, as\n \t per core issue 45 (this is a change from the standard).  */\n       for (context = supplicant;\n \t   context && TYPE_P (context);"}, {"sha": "eebd16ba6db085084875947269e26021fac80f35", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 826, "deletions": 829, "changes": 1655, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=445ab4438d7e1d3969ee449a169f7f2104d52b50"}, {"sha": "ede7d93169a1b254af96dadeeee103b5824fcd77", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 20, "deletions": 23, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=445ab4438d7e1d3969ee449a169f7f2104d52b50", "patch": "@@ -314,6 +314,18 @@ static tree current_enum_type;\n extern void yyprint\t\t\tPARAMS ((FILE *, int, YYSTYPE));\n extern tree combine_strings\t\tPARAMS ((tree));\n \n+static void\n+frob_specs (specs_attrs, lookups)\n+  tree specs_attrs;\n+  tree lookups;\n+{\n+  initial_deferred_type_access_control (lookups);\n+  split_specs_attrs (specs_attrs, &current_declspecs, &prefix_attributes);\n+  if (current_declspecs\n+      && TREE_CODE (current_declspecs) != TREE_LIST)\n+    current_declspecs = build_decl_list (NULL_TREE, current_declspecs);\n+}\n+\n static void\n parse_decl (declarator, specs_attrs, lookups, attributes, initialized, decl)\n   tree declarator;\n@@ -323,12 +335,8 @@ parse_decl (declarator, specs_attrs, lookups, attributes, initialized, decl)\n   int initialized;\n   tree* decl;\n {\n-  initial_deferred_type_access_control (lookups);\n+  frob_specs (specs_attrs, lookups);\n \n-  split_specs_attrs (specs_attrs, &current_declspecs, &prefix_attributes);\n-  if (current_declspecs\n-      && TREE_CODE (current_declspecs) != TREE_LIST)\n-    current_declspecs = build_decl_list (NULL_TREE, current_declspecs);\n   if (have_extern_spec && !used_extern_spec)\n     {\n       current_declspecs = decl_tree_cons (NULL_TREE, \n@@ -747,6 +755,7 @@ fn.def2:\n \t\t{ tree specs, attrs;\n \t\t  split_specs_attrs ($1.t, &specs, &attrs);\n \t\t  attrs = build_tree_list (attrs, NULL_TREE);\n+\t\t  initial_deferred_type_access_control ($1.lookups);\n \t\t  $$ = start_method (specs, $2, attrs); goto rest_of_mdef; }\n \t| declmods notype_declarator\n \t\t{ tree specs, attrs;\n@@ -2543,42 +2552,30 @@ component_declarator:\n \n after_type_component_declarator0:\n \t  after_type_declarator maybeasm maybe_attribute maybe_init\n-\t\t{ split_specs_attrs ($<ttype>0, &current_declspecs,\n-\t\t\t\t     &prefix_attributes);\n-\t\t  $<ttype>0 = current_declspecs;\n+\t\t{ frob_specs ($<ftype>0.t, $<ftype>0.lookups);\n \t\t  $$ = grokfield ($$, current_declspecs, $4, $2,\n \t\t\t\t  build_tree_list ($3, prefix_attributes)); }\n \t| TYPENAME ':' expr_no_commas maybe_attribute\n-\t\t{ split_specs_attrs ($<ttype>0, &current_declspecs,\n-\t\t\t\t     &prefix_attributes);\n-\t\t  $<ttype>0 = current_declspecs;\n+\t\t{ frob_specs ($<ftype>0.t, $<ftype>0.lookups);\n \t\t  $$ = grokbitfield ($$, current_declspecs, $3);\n \t\t  cplus_decl_attributes ($$, $4, prefix_attributes); }\n \t;\n \n notype_component_declarator0:\n \t  notype_declarator maybeasm maybe_attribute maybe_init\n-\t\t{ split_specs_attrs ($<ttype>0, &current_declspecs,\n-\t\t\t\t     &prefix_attributes);\n-\t\t  $<ttype>0 = current_declspecs;\n+\t\t{ frob_specs ($<ftype>0.t, $<ftype>0.lookups);\n \t\t  $$ = grokfield ($$, current_declspecs, $4, $2,\n \t\t\t\t  build_tree_list ($3, prefix_attributes)); }\n \t| constructor_declarator maybeasm maybe_attribute maybe_init\n-\t\t{ split_specs_attrs ($<ttype>0, &current_declspecs,\n-\t\t\t\t     &prefix_attributes);\n-\t\t  $<ttype>0 = current_declspecs;\n+\t\t{ frob_specs ($<ftype>0.t, $<ftype>0.lookups);\n \t\t  $$ = grokfield ($$, current_declspecs, $4, $2,\n \t\t\t\t  build_tree_list ($3, prefix_attributes)); }\n \t| IDENTIFIER ':' expr_no_commas maybe_attribute\n-\t\t{ split_specs_attrs ($<ttype>0, &current_declspecs,\n-\t\t\t\t     &prefix_attributes);\n-\t\t  $<ttype>0 = current_declspecs;\n+\t\t{ frob_specs ($<ftype>0.t, $<ftype>0.lookups);\n \t\t  $$ = grokbitfield ($$, current_declspecs, $3);\n \t\t  cplus_decl_attributes ($$, $4, prefix_attributes); }\n \t| ':' expr_no_commas maybe_attribute\n-\t\t{ split_specs_attrs ($<ttype>0, &current_declspecs,\n-\t\t\t\t     &prefix_attributes);\n-\t\t  $<ttype>0 = current_declspecs;\n+\t\t{ frob_specs ($<ftype>0.t, $<ftype>0.lookups);\n \t\t  $$ = grokbitfield (NULL_TREE, current_declspecs, $2);\n \t\t  cplus_decl_attributes ($$, $3, prefix_attributes); }\n \t;"}, {"sha": "a3544dd63be4452d13c8812ef842f31faee49a79", "filename": "gcc/cp/search.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/445ab4438d7e1d3969ee449a169f7f2104d52b50/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=445ab4438d7e1d3969ee449a169f7f2104d52b50", "patch": "@@ -1052,6 +1052,13 @@ friend_accessible_p (scope, type, decl, binfo)\n     if (protected_accessible_p (type, decl, TREE_VALUE (t), binfo))\n       return 1;\n \n+  /* Nested classes are implicitly friends of their enclosing types, as\n+     per core issue 45 (this is a change from the standard).  */\n+  if (TYPE_P (scope))\n+    for (t = TYPE_CONTEXT (scope); t && TYPE_P (t); t = TYPE_CONTEXT (t))\n+      if (protected_accessible_p (type, decl, t, binfo))\n+\treturn 1;\n+\n   if (TREE_CODE (scope) == FUNCTION_DECL\n       || DECL_FUNCTION_TEMPLATE_P (scope))\n     {"}]}