{"sha": "4ede02a5f2af1205434f0e05aaaeff762b24e329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVkZTAyYTVmMmFmMTIwNTQzNGYwZTA1YWFhZWZmNzYyYjI0ZTMyOQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2021-02-05T09:36:38Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-05T12:26:00Z"}, "message": "debug: fix switch lowering debug info\n\ngcc/ChangeLog:\n\n\tPR debug/98656\n\t* tree-switch-conversion.c (jump_table_cluster::emit): Add loc\n\targument.\n\t(bit_test_cluster::emit): Reuse location_t for newly created\n\tgswitch statement.\n\t(switch_decision_tree::try_switch_expansion): Preserve\n\tlocation_t.\n\t* tree-switch-conversion.h: Change function signatures.", "tree": {"sha": "5bf9ac38d50cdc113b8c765ced6e497778b6d90f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf9ac38d50cdc113b8c765ced6e497778b6d90f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ede02a5f2af1205434f0e05aaaeff762b24e329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ede02a5f2af1205434f0e05aaaeff762b24e329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ede02a5f2af1205434f0e05aaaeff762b24e329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ede02a5f2af1205434f0e05aaaeff762b24e329/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37876976b0511ec96741f638f160874f2added0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37876976b0511ec96741f638f160874f2added0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37876976b0511ec96741f638f160874f2added0e"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "a4798812dbf0cd3523a0d51768ffda37476ccf2e", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ede02a5f2af1205434f0e05aaaeff762b24e329/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ede02a5f2af1205434f0e05aaaeff762b24e329/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=4ede02a5f2af1205434f0e05aaaeff762b24e329", "patch": "@@ -1112,7 +1112,8 @@ group_cluster::dump (FILE *f, bool details)\n \n void\n jump_table_cluster::emit (tree index_expr, tree,\n-\t\t\t  tree default_label_expr, basic_block default_bb)\n+\t\t\t  tree default_label_expr, basic_block default_bb,\n+\t\t\t  location_t loc)\n {\n   unsigned HOST_WIDE_INT range = get_range (get_low (), get_high ());\n   unsigned HOST_WIDE_INT nondefault_range = 0;\n@@ -1131,6 +1132,7 @@ jump_table_cluster::emit (tree index_expr, tree,\n \n   gswitch *s = gimple_build_switch (index_expr,\n \t\t\t\t    unshare_expr (default_label_expr), labels);\n+  gimple_set_location (s, loc);\n   gimple_stmt_iterator gsi = gsi_start_bb (m_case_bb);\n   gsi_insert_after (&gsi, s, GSI_NEW_STMT);\n \n@@ -1491,7 +1493,7 @@ case_bit_test::cmp (const void *p1, const void *p2)\n \n void\n bit_test_cluster::emit (tree index_expr, tree index_type,\n-\t\t\ttree, basic_block default_bb)\n+\t\t\ttree, basic_block default_bb, location_t)\n {\n   case_bit_test test[m_max_case_bit_tests] = { {} };\n   unsigned int i, j, k;\n@@ -1892,7 +1894,8 @@ switch_decision_tree::try_switch_expansion (vec<cluster *> &clusters)\n     {\n       cluster *c = clusters[0];\n       c->emit (index_expr, index_type,\n-\t       gimple_switch_default_label (m_switch), m_default_bb);\n+\t       gimple_switch_default_label (m_switch), m_default_bb,\n+\t       gimple_location (m_switch));\n       redirect_edge_succ (single_succ_edge (bb), c->m_case_bb);\n     }\n   else\n@@ -1904,7 +1907,7 @@ switch_decision_tree::try_switch_expansion (vec<cluster *> &clusters)\n \tif (clusters[i]->get_type () != SIMPLE_CASE)\n \t  clusters[i]->emit (index_expr, index_type,\n \t\t\t     gimple_switch_default_label (m_switch),\n-\t\t\t     m_default_bb);\n+\t\t\t     m_default_bb, gimple_location (m_switch));\n     }\n \n   fix_phi_operands_for_edges ();"}, {"sha": "d3d568e84cc74e5689047019a371594a82953f7e", "filename": "gcc/tree-switch-conversion.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ede02a5f2af1205434f0e05aaaeff762b24e329/gcc%2Ftree-switch-conversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ede02a5f2af1205434f0e05aaaeff762b24e329/gcc%2Ftree-switch-conversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.h?ref=4ede02a5f2af1205434f0e05aaaeff762b24e329", "patch": "@@ -71,7 +71,7 @@ class cluster\n   virtual void dump (FILE *f, bool details = false) = 0;\n \n   /* Emit GIMPLE code to handle the cluster.  */\n-  virtual void emit (tree, tree, tree, basic_block) = 0;\n+  virtual void emit (tree, tree, tree, basic_block, location_t) = 0;\n \n   /* Return true if a cluster handles only a single case value and the\n      value is not a range.  */\n@@ -170,7 +170,7 @@ class simple_cluster: public cluster\n     fprintf (f, \" \");\n   }\n \n-  void emit (tree, tree, tree, basic_block)\n+  void emit (tree, tree, tree, basic_block, location_t)\n   {\n     gcc_unreachable ();\n   }\n@@ -260,7 +260,7 @@ class jump_table_cluster: public group_cluster\n   }\n \n   void emit (tree index_expr, tree index_type,\n-\t     tree default_label_expr, basic_block default_bb);\n+\t     tree default_label_expr, basic_block default_bb, location_t loc);\n \n   /* Find jump tables of given CLUSTERS, where all members of the vector\n      are of type simple_cluster.  New clusters are returned.  */\n@@ -378,7 +378,7 @@ class bit_test_cluster: public group_cluster\n     There *MUST* be max_case_bit_tests or less unique case\n     node targets.  */\n   void emit (tree index_expr, tree index_type,\n-\t     tree default_label_expr, basic_block default_bb);\n+\t     tree default_label_expr, basic_block default_bb, location_t loc);\n \n   /* Find bit tests of given CLUSTERS, where all members of the vector\n      are of type simple_cluster.  New clusters are returned.  */"}]}