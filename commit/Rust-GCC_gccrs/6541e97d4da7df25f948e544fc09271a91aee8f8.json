{"sha": "6541e97d4da7df25f948e544fc09271a91aee8f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU0MWU5N2Q0ZGE3ZGYyNWY5NDhlNTQ0ZmMwOTI3MWE5MWFlZThmOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-04-04T07:35:34Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-04-04T07:35:34Z"}, "message": "DF usage in loop-invariant.c (PR46590)\n\n- df_live is already present at -O2, so we only need to add it and\n  mark all blocks dirty for -O\n\n- df_process_deferred_rescans should be enough to force a rescan of\n  blocks affected by moving invariants, but calling it in find_defs\n  means that we don't do any rescans for the final loop\n\n2019-04-04  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR rtl-optimization/46590\n\t* loop-invariant.c (find_defs): Move df_remove_problem and\n\tdf_process_deferred_rescans to move_invariants.\n\tMove df_live_add_problem and df_live_set_all_dirty calls\n\tto move_invariants.\n\t(move_invariants): Likewise.\n\t(move_loop_invariants): Likewise, making the df_live calls\n\tconditional on -O.  Remove the problem again if we added it\n\tlocally.\n\nFrom-SVN: r270142", "tree": {"sha": "0204ba9afddd95196fbf6013eee38328ccb5850f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0204ba9afddd95196fbf6013eee38328ccb5850f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6541e97d4da7df25f948e544fc09271a91aee8f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6541e97d4da7df25f948e544fc09271a91aee8f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6541e97d4da7df25f948e544fc09271a91aee8f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6541e97d4da7df25f948e544fc09271a91aee8f8/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "325d3f4642eb72812b4dbbd15968228d27f135a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/325d3f4642eb72812b4dbbd15968228d27f135a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/325d3f4642eb72812b4dbbd15968228d27f135a1"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "47eeed65ab7cfe965ae718591624d11e63f10921", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6541e97d4da7df25f948e544fc09271a91aee8f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6541e97d4da7df25f948e544fc09271a91aee8f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6541e97d4da7df25f948e544fc09271a91aee8f8", "patch": "@@ -1,3 +1,15 @@\n+2019-04-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/46590\n+\t* loop-invariant.c (find_defs): Move df_remove_problem and\n+\tdf_process_deferred_rescans to move_invariants.\n+\tMove df_live_add_problem and df_live_set_all_dirty calls\n+\tto move_invariants.\n+\t(move_invariants): Likewise.\n+\t(move_loop_invariants): Likewise, making the df_live calls\n+\tconditional on -O.  Remove the problem again if we added it\n+\tlocally.\n+\n 2019-04-03  qing zhao  <qing.zhao@oracle.com>\n \n \tPR tree-optimization/89730"}, {"sha": "b880ead3d15fad0cd7f56712705be3e3d3c67f87", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6541e97d4da7df25f948e544fc09271a91aee8f8/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6541e97d4da7df25f948e544fc09271a91aee8f8/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=6541e97d4da7df25f948e544fc09271a91aee8f8", "patch": "@@ -681,11 +681,7 @@ find_defs (struct loop *loop)\n \t       loop->num);\n     }\n \n-  df_remove_problem (df_chain);\n-  df_process_deferred_rescans ();\n   df_chain_add_problem (DF_UD_CHAIN);\n-  df_live_add_problem ();\n-  df_live_set_all_dirty ();\n   df_set_flags (DF_RD_PRUNE_DEAD_DEFS);\n   df_analyze_loop (loop);\n   check_invariant_table_size ();\n@@ -1891,6 +1887,10 @@ move_invariants (struct loop *loop)\n \t\t\t\t GENERAL_REGS, NO_REGS, GENERAL_REGS);\n \t  }\n     }\n+  /* Remove the DF_UD_CHAIN problem added in find_defs before rescanning,\n+     to save a bit of compile time.  */\n+  df_remove_problem (df_chain);\n+  df_process_deferred_rescans ();\n }\n \n /* Initializes invariant motion data.  */\n@@ -2254,6 +2254,14 @@ move_loop_invariants (void)\n {\n   struct loop *loop;\n \n+  if (optimize == 1)\n+    df_live_add_problem ();\n+  /* ??? This is a hack.  We should only need to call df_live_set_all_dirty\n+     for optimize == 1, but can_move_invariant_reg relies on DF_INSN_LUID\n+     being up-to-date.  That isn't always true (even after df_analyze)\n+     because df_process_deferred_rescans doesn't necessarily cause\n+     blocks to be rescanned.  */\n+  df_live_set_all_dirty ();\n   if (flag_ira_loop_pressure)\n     {\n       df_analyze ();\n@@ -2286,5 +2294,8 @@ move_loop_invariants (void)\n   invariant_table = NULL;\n   invariant_table_size = 0;\n \n+  if (optimize == 1)\n+    df_remove_problem (df_live);\n+\n   checking_verify_flow_info ();\n }"}]}