{"sha": "1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE4YzEzYjMzY2UxNDcwZDVhMjkxMDYzYTVmNWQwYmVlYmY0MjFlZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-01-04T11:45:50Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-01-04T11:45:50Z"}, "message": "s390.md (UNSPEC_MB): Rename from UNSPECV_MB.\n\n\t* config/s390/s390.md (UNSPEC_MB): Rename from UNSPECV_MB.\n\t(memory_barrier): Expand as unspec instead of unspec_volatile.\n\tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n\t(*memory_barrier): Define as unspec instead of unspec_volatile.\n\tUse (match_dup 0) as input operand.\n\n\t* config/sparc/sparc.md (UNSPEC_MEMBAR): Rename from UNSPECV_MEMBAR.\n\t* config/sparc/sync.md (memory_barrier): Expand as unspec instead of\n\tunspec_volatile.  Remove mem:BLK from insn operands.  Use Pmode\n\tscratch register.  Remove operand 1.\n\t(*stbar): Define as unspec instead of unspec_volatile.\n\tUse (match_dup 0) as input operand, remove (const_int 8).\n\t(*membar): Define as unspec instead of unspec_volatile.\n\tUse (match_dup 0) as input operand, remove input operand 2.\n\n\t* config/xtensa/xtensa.md (UNSPEC_MEMW): Rename from UNSPECV_MEMW.\n\t(memory_barrier): Expand as unspec instead of unspec_volatile.\n\tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n\t(*memory_barrier): Define as unspec instead of unspec_volatile.\n\tUse (match_dup 0) as input operand.\n\n\t* config/ia64/sync.md (memory_barrier): Redefine as expander pattern.\n\tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n\tSet volatile flag on operand 0.\n\t(*memory_barrier): New insn pattern.\n\n\t* config/rs6000/sync.md (memory_barrier): Remove mem:BLK from\n\tinsn operands.\n\t(*memory_barrier): Use (match_dup 0) as input operand.\n\n\t* config/mips/sync.md (memory_barrier): Redefine as expander pattern.\n\tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n\tSet volatile flag on operand 0.\n\t(*memory_barrier): New insn pattern.\n\n\t* config/alpha/sync.md (*memory_barrier): Rename from *mb_internal.\n\nFrom-SVN: r143047", "tree": {"sha": "8d6ea6df137e3fd50276c47a375137a6827044f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d6ea6df137e3fd50276c47a375137a6827044f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3aa37f1e673090a0e4efc81f7e6b92a6b329c2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa37f1e673090a0e4efc81f7e6b92a6b329c2c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aa37f1e673090a0e4efc81f7e6b92a6b329c2c6"}], "stats": {"total": 129, "additions": 91, "deletions": 38}, "files": [{"sha": "bd19cbe265339abef41fc8e18b857d2520d7290e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -1,3 +1,42 @@\n+2009-01-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/s390/s390.md (UNSPEC_MB): Rename from UNSPECV_MB.\n+\t(memory_barrier): Expand as unspec instead of unspec_volatile.\n+\tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n+\t(*memory_barrier): Define as unspec instead of unspec_volatile.\n+\tUse (match_dup 0) as input operand.\n+\n+\t* config/sparc/sparc.md (UNSPEC_MEMBAR): Rename from UNSPECV_MEMBAR.\n+\t* config/sparc/sync.md (memory_barrier): Expand as unspec instead of\n+\tunspec_volatile.  Remove mem:BLK from insn operands.  Use Pmode\n+\tscratch register.  Remove operand 1.\n+\t(*stbar): Define as unspec instead of unspec_volatile.\n+\tUse (match_dup 0) as input operand, remove (const_int 8).\n+\t(*membar): Define as unspec instead of unspec_volatile.\n+\tUse (match_dup 0) as input operand, remove input operand 2.\n+\n+\t* config/xtensa/xtensa.md (UNSPEC_MEMW): Rename from UNSPECV_MEMW.\n+\t(memory_barrier): Expand as unspec instead of unspec_volatile.\n+\tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n+\t(*memory_barrier): Define as unspec instead of unspec_volatile.\n+\tUse (match_dup 0) as input operand.\n+\n+\t* config/ia64/sync.md (memory_barrier): Redefine as expander pattern.\n+\tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n+\tSet volatile flag on operand 0.\n+\t(*memory_barrier): New insn pattern.\n+\n+\t* config/rs6000/sync.md (memory_barrier): Remove mem:BLK from\n+\tinsn operands.\n+\t(*memory_barrier): Use (match_dup 0) as input operand.\n+\n+\t* config/mips/sync.md (memory_barrier): Redefine as expander pattern.\n+\tRemove mem:BLK from insn operands.  Use Pmode scratch register.\n+\tSet volatile flag on operand 0.\n+\t(*memory_barrier): New insn pattern.\n+\n+\t* config/alpha/sync.md (*memory_barrier): Rename from *mb_internal.\n+\n 2009-01-04  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR middle-end/38586"}, {"sha": "88087f191012125900be96ff36aec49fe1e3df4c", "filename": "gcc/config/alpha/sync.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Falpha%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Falpha%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fsync.md?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -36,7 +36,7 @@\n   MEM_VOLATILE_P (operands[0]) = 1;\n })\n \n-(define_insn \"*mb_internal\"\n+(define_insn \"*memory_barrier\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n \t(unspec:BLK [(match_dup 0)] UNSPEC_MB))]\n   \"\""}, {"sha": "0c2ae2e47a81c69bdb8106fcdc7905361783a9ec", "filename": "gcc/config/ia64/sync.md", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fia64%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fia64%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsync.md?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -27,9 +27,18 @@\n (define_code_attr fetchop_name\n   [(plus \"add\") (minus \"sub\") (ior \"ior\") (xor \"xor\") (and \"and\")])\n \n-(define_insn \"memory_barrier\"\n-  [(set (mem:BLK (match_scratch:DI 0 \"X\"))\n-\t(unspec:BLK [(mem:BLK (match_scratch:DI 1 \"X\"))] UNSPEC_MF))]\n+(define_expand \"memory_barrier\"\n+  [(set (match_dup 0)\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MF))]\n+  \"\"\n+{\n+  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n+  MEM_VOLATILE_P (operands[0]) = 1;\n+})\n+\n+(define_insn \"*memory_barrier\"\n+  [(set (match_operand:BLK 0 \"\" \"\")\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MF))]\n   \"\"\n   \"mf\"\n   [(set_attr \"itanium_class\" \"syst_m\")])"}, {"sha": "41266d13563bb8a2ddaf709d32eb854e79f2326b", "filename": "gcc/config/mips/sync.md", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fmips%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fmips%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsync.md?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -27,9 +27,18 @@\n \n ;; Atomic memory operations.\n \n-(define_insn \"memory_barrier\"\n-  [(set (mem:BLK (scratch))\n-        (unspec:BLK [(const_int 0)] UNSPEC_MEMORY_BARRIER))]\n+(define_expand \"memory_barrier\"\n+  [(set (match_dup 0)\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MEMORY_BARRIER))]\n+  \"GENERATE_SYNC\"\n+{\n+  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n+  MEM_VOLATILE_P (operands[0]) = 1;\n+})\n+\n+(define_insn \"*mb_internal\"\n+  [(set (match_operand:BLK 0 \"\" \"\")\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MEMORY_BARRIER))]\n   \"GENERATE_SYNC\"\n   \"%|sync%-\")\n "}, {"sha": "bb5de392f559da6d21e7596a981068b476f19eb6", "filename": "gcc/config/rs6000/sync.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Frs6000%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Frs6000%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsync.md?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -33,8 +33,8 @@\n   [(plus \"rIL\") (minus \"r\") (ior \"rKJF\") (xor \"rKJF\") (and \"rSTKJ\")])\n \n (define_expand \"memory_barrier\"\n-  [(set (mem:BLK (match_dup 0))\n-\t(unspec:BLK [(mem:BLK (match_dup 0))] UNSPEC_SYNC))]\n+  [(set (match_dup 0)\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_SYNC))]\n   \"\"\n {\n   operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n@@ -43,7 +43,7 @@\n \n (define_insn \"*sync_internal\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n-\t(unspec:BLK [(match_operand:BLK 1 \"\" \"\")] UNSPEC_SYNC))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_SYNC))]\n   \"\"\n   \"{dcs|sync}\"\n   [(set_attr \"type\" \"sync\")])"}, {"sha": "e8b50830d5834cee9db0cc1870717aff392744e1", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -82,6 +82,9 @@\n    (UNSPEC_INSN\t\t\t213)\n    (UNSPEC_EXECUTE\t\t214)\n \n+   ; Atomic Support\n+   (UNSPEC_MB\t\t\t400)\n+\n    ; TLS relocation specifiers\n    (UNSPEC_TLSGD\t\t500)\n    (UNSPEC_TLSLDM\t\t501)\n@@ -132,8 +135,7 @@\n    (UNSPECV_SET_TP\t\t500)\n \n    ; Atomic Support\n-   (UNSPECV_MB\t\t\t700)\n-   (UNSPECV_CAS\t\t\t701)\n+   (UNSPECV_CAS\t\t\t700)\n   ])\n \n ;;\n@@ -8183,20 +8185,21 @@\n ;\n \n (define_expand \"memory_barrier\"\n-  [(set (mem:BLK (match_dup 0))\n-\t(unspec_volatile:BLK [(mem:BLK (match_dup 0))] UNSPECV_MB))]\n+  [(set (match_dup 0)\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MB))]\n   \"\"\n {\n-  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (DImode));\n+  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n   MEM_VOLATILE_P (operands[0]) = 1;\n })\n \n (define_insn \"*memory_barrier\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n-\t(unspec_volatile:BLK [(match_operand:BLK 1 \"\" \"\")] UNSPECV_MB))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MB))]\n   \"\"\n   \"bcr\\t15,0\"\n   [(set_attr \"op_type\" \"RR\")])\n+\n ; Although bcr is superscalar on Z10, this variant will never become part of\n ; an execution group.\n "}, {"sha": "a3eb01f51bda2f2f4febe18e83e54849a52d8ab6", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -38,6 +38,8 @@\n    (UNSPEC_EMB_TEXTULO\t\t15)\n    (UNSPEC_EMB_SETHM\t\t18)\n \n+   (UNSPEC_MEMBAR\t\t20)\n+\n    (UNSPEC_TLSGD\t\t30)\n    (UNSPEC_TLSLDM\t\t31)\n    (UNSPEC_TLSLDO\t\t32)\n@@ -68,7 +70,6 @@\n    (UNSPECV_FLUSH\t\t4)\n    (UNSPECV_SETJMP\t\t5)\n    (UNSPECV_SAVEW\t\t6)\n-   (UNSPECV_MEMBAR\t\t7)\n    (UNSPECV_CAS\t\t\t8)\n    (UNSPECV_SWAP\t\t9)\n    (UNSPECV_LDSTUB\t\t10)"}, {"sha": "f1444d8f7672f5b6932f2fc55ea4140f553375d6", "filename": "gcc/config/sparc/sync.md", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fsparc%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fsparc%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsync.md?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -24,36 +24,28 @@\n (define_mode_attr modesuffix [(SI \"\") (DI \"x\")])\n \n (define_expand \"memory_barrier\"\n-  [(set (mem:BLK (match_dup 0))\n-\t(unspec_volatile:BLK [(mem:BLK (match_dup 0)) (match_dup 1)]\n-\t\t\t     UNSPECV_MEMBAR))]\n+  [(set (match_dup 0)\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MEMBAR))]\n   \"TARGET_V8 || TARGET_V9\"\n {\n-  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (DImode));\n+  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n   MEM_VOLATILE_P (operands[0]) = 1;\n-  if (TARGET_V9)\n-    /* member #StoreStore | #LoadStore | #StoreLoad | #LoadLoad */\n-    operands[1] = GEN_INT (15);\n-  else\n-    /* stbar */\n-    operands[1] = GEN_INT (8);\n+\n })\n \n (define_insn \"*stbar\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n-\t(unspec_volatile:BLK [(match_operand:BLK 1 \"\" \"\")\n-\t\t\t      (const_int 8)] UNSPECV_MEMBAR))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MEMBAR))]\n   \"TARGET_V8\"\n   \"stbar\"\n   [(set_attr \"type\" \"multi\")])\n \n+;; membar #StoreStore | #LoadStore | #StoreLoad | #LoadLoad\n (define_insn \"*membar\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n-\t(unspec_volatile:BLK [(match_operand:BLK 1 \"\" \"\")\n-\t\t\t      (match_operand:SI 2 \"immediate_operand\" \"I\")]\n-\t\t\t      UNSPECV_MEMBAR))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MEMBAR))]\n   \"TARGET_V9\"\n-  \"membar\\t%2\"\n+  \"membar\\t15\"\n   [(set_attr \"type\" \"multi\")])\n \n (define_expand \"sync_compare_and_swap<mode>\""}, {"sha": "d0e4772cc8398928e91f43abcae80c1b674889fc", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8c13b33ce1470d5a291063a5f5d0beebf421ee/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=1a8c13b33ce1470d5a291063a5f5d0beebf421ee", "patch": "@@ -35,10 +35,10 @@\n   (UNSPEC_TLS_ARG\t8)\n   (UNSPEC_TLS_CALL\t9)\n   (UNSPEC_TP\t\t10)\n+  (UNSPEC_MEMW\t\t11)\n \n   (UNSPECV_SET_FP\t1)\n   (UNSPECV_ENTRY\t2)\n-  (UNSPECV_MEMW\t\t3)\n   (UNSPECV_S32RI\t4)\n   (UNSPECV_S32C1I\t5)\n   (UNSPECV_EH_RETURN\t6)\n@@ -1819,17 +1819,17 @@\n ;; Atomic operations\n \n (define_expand \"memory_barrier\"\n-  [(set (mem:BLK (match_dup 0))\n-\t(unspec_volatile:BLK [(mem:BLK (match_dup 0))] UNSPECV_MEMW))]\n+  [(set (match_dup 0)\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MEMW))]\n   \"\"\n {\n-  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (SImode));\n+  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n   MEM_VOLATILE_P (operands[0]) = 1;\n })\n \n (define_insn \"*memory_barrier\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n-\t(unspec_volatile:BLK [(match_operand:BLK 1 \"\" \"\")] UNSPECV_MEMW))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MEMW))]\n   \"\"\n   \"memw\"\n   [(set_attr \"type\"\t\"unknown\")"}]}