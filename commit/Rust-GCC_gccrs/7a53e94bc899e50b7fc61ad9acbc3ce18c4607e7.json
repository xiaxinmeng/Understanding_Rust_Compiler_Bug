{"sha": "7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E1M2U5NGJjODk5ZTUwYjdmYzYxYWQ5YWNiYzNjZTE4YzQ2MDdlNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-01-24T21:02:27Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-01-24T21:02:27Z"}, "message": "Makefile.in (CXX_FOR_TARGET): Use g++, not xgcc, to invoke the C++ compiler.\n\n\t* Makefile.in (CXX_FOR_TARGET): Use g++, not xgcc, to invoke\n\tthe C++ compiler.\n\n\t* lib/g++.exp (g++init): Use g++, not xgcc, to invoke the C++\n\tcompiler.\n\t(tool_option_proc): Fix typo.\n\nFrom-SVN: r31593", "tree": {"sha": "3f579a8e728fe1c66390b40416c9796a6b87d835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f579a8e728fe1c66390b40416c9796a6b87d835"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/comments", "author": null, "committer": null, "parents": [{"sha": "360f2326ea3d48a37d912b4735d308da3a9ab6eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360f2326ea3d48a37d912b4735d308da3a9ab6eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360f2326ea3d48a37d912b4735d308da3a9ab6eb"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "eab5091e05b05c94f83f60d78f28b980b9e819d6", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7", "patch": "@@ -1,3 +1,8 @@\n+2000-01-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Makefile.in (CXX_FOR_TARGET): Use g++, not xgcc, to invoke\n+\tthe C++ compiler.\n+\n Wed Jan 12 18:00:26 2000  Mark P. Mitchell  <mark@codesourcery.com>\n \n \t* configure.in: Fix typo in last change."}, {"sha": "c6ea61f3481f717e30394788340eaf8130f7daf6", "filename": "Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7", "patch": "@@ -247,15 +247,15 @@ CHILL_FOR_TARGET = ` \\\n   fi`\n \n CXX_FOR_TARGET = ` \\\n-  if [ -f $$r/gcc/xgcc ] ; then \\\n+  if [ -f $$r/gcc/g++ ] ; then \\\n     if [ -f $$r/$(TARGET_SUBDIR)/newlib/Makefile ] ; then \\\n       if [ -f $$r/$(TARGET_SUBDIR)/winsup/Makefile ] ; then \\\n-        echo $$r/gcc/xgcc -B$$r/gcc/ -B$$r/$(TARGET_SUBDIR)/newlib/ -B$(build_tooldir)/bin/ -L$$r/winsup -idirafter $$r/$(TARGET_SUBDIR)/newlib/targ-include -idirafter $$s/newlib/libc/include -nostdinc; \\\n+        echo $$r/gcc/g++ -B$$r/gcc/ -B$$r/$(TARGET_SUBDIR)/newlib/ -B$(build_tooldir)/bin/ -L$$r/winsup -idirafter $$r/$(TARGET_SUBDIR)/newlib/targ-include -idirafter $$s/newlib/libc/include -nostdinc; \\\n       else \\\n-        echo $$r/gcc/xgcc -B$$r/gcc/ -B$(build_tooldir)/bin/ -idirafter $$r/$(TARGET_SUBDIR)/newlib/targ-include -idirafter $$s/newlib/libc/include -nostdinc; \\\n+        echo $$r/gcc/g++ -B$$r/gcc/ -B$(build_tooldir)/bin/ -idirafter $$r/$(TARGET_SUBDIR)/newlib/targ-include -idirafter $$s/newlib/libc/include -nostdinc; \\\n       fi; \\\n     else \\\n-      echo $$r/gcc/xgcc -B$$r/gcc/ -B$(build_tooldir)/bin/; \\\n+      echo $$r/gcc/g++ -B$$r/gcc/ -B$(build_tooldir)/bin/; \\\n     fi; \\\n   else \\\n     if [ \"$(host_canonical)\" = \"$(target_canonical)\" ] ; then \\"}, {"sha": "1ec2bc12c08b8788a5d630320de1d90272ba2f79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7", "patch": "@@ -1,3 +1,9 @@\n+2000-01-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* lib/g++.exp (g++init): Use g++, not xgcc, to invoke the C++\n+\tcompiler.\n+\t(tool_option_proc): Fix typo.\n+\t\n 2000-01-24  Geoff Keating  <geoffk@cygnus.com>\n \n \t* gcc.dg/special/ecos.exp (gcsec-1.c): Check the version"}, {"sha": "720cd434f4c4dbbab97a3b1b81a3db89185a38d1", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=7a53e94bc899e50b7fc61ad9acbc3ce18c4607e7", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 2000 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -85,7 +85,7 @@ proc g++_init { args } {\n \t    if [is_remote host] {\n \t\tset GXX_UNDER_TEST [transform c++]\n \t    } else {\n-\t\tset GXX_UNDER_TEST [findfile $base_dir/../xgcc \"$base_dir/../xgcc -B$base_dir/../\" [findfile $base_dir/xgcc \"$base_dir/xgcc -B$base_dir/\" [transform c++]]]\n+\t\tset GXX_UNDER_TEST [findfile $base_dir/../g++ \"$base_dir/../g++ -B$base_dir/../\" [findfile $base_dir/g++ \"$base_dir/g++ -B$base_dir/\" [transform c++]]]\n \t    }\n \t}\n     }\n@@ -97,7 +97,7 @@ proc g++_init { args } {\n \n     if ![is_remote host] {\n \tif { [which $GXX_UNDER_TEST] == 0 } then {\n-\t    perror \"GXX_UNDER_TEST does not exist\"\n+\t    perror \"GXX_UNDER_TEST ($GXX_UNDER_TEST) does not exist\"\n \t    exit 1\n \t}\n     }\n@@ -221,7 +221,7 @@ proc ${tool}_option_help { } {\n }\n \n proc ${tool}_option_proc { option } {\n-    if[regexp \"^--additional_options,\" $option] {\n+    if [regexp \"^--additional_options,\" $option] {\n \tglobal gpp_compile_options\n \tregsub \"--additional_options,\" $option \"\" option\n \tforeach x [split $option \",\"] {"}]}