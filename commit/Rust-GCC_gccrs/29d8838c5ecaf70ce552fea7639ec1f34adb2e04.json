{"sha": "29d8838c5ecaf70ce552fea7639ec1f34adb2e04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlkODgzOGM1ZWNhZjcwY2U1NTJmZWE3NjM5ZWMxZjM0YWRiMmUwNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-04-19T20:21:46Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-04-19T20:35:00Z"}, "message": "c++: ICE with concept defined in function [PR97536]\n\nThis is an ICE-on-invalid, but I keep seeing it when reducing code so\nI'd like to fix it.  We crash on\n\n  template <typename> void forward() {\n    concept C = true;\n  }\n\nwhich breaks two requirements:\n[temp.concept]/1: A concept is a template ...\n[temp.concept]/3: A concept-definition shall inhabit a namespace scope.\n\nThis patch adds a test that exercises broken code and fixes the ICE\nby checking that a concept-definition is defined at namespace scope.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/97536\n\t* decl.c (grokvardecl): Given an error when a concept is not defined\n\tat namespace scope.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/97536\n\t* g++.dg/concepts/diagnostic16.C: New test.", "tree": {"sha": "5d18c2036d00214ef045e3afa9828b3918d52301", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d18c2036d00214ef045e3afa9828b3918d52301"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29d8838c5ecaf70ce552fea7639ec1f34adb2e04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d8838c5ecaf70ce552fea7639ec1f34adb2e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d8838c5ecaf70ce552fea7639ec1f34adb2e04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d8838c5ecaf70ce552fea7639ec1f34adb2e04/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "329d2f0df7d6d22c87ab3338b94caef68139cd58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329d2f0df7d6d22c87ab3338b94caef68139cd58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329d2f0df7d6d22c87ab3338b94caef68139cd58"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "b81de8ef9349dedc5657c89d0b0c78014c298bc9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d8838c5ecaf70ce552fea7639ec1f34adb2e04/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d8838c5ecaf70ce552fea7639ec1f34adb2e04/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=29d8838c5ecaf70ce552fea7639ec1f34adb2e04", "patch": "@@ -10365,6 +10365,12 @@ grokvardecl (tree type,\n \t\t    \"a non-template variable cannot be %<concept%>\");\n           return NULL_TREE;\n         }\n+      else if (!at_namespace_scope_p ())\n+\t{\n+\t  error_at (declspecs->locations[ds_concept],\n+\t\t    \"concept must be defined at namespace scope\");\n+\t  return NULL_TREE;\n+\t}\n       else\n         DECL_DECLARED_CONCEPT_P (decl) = true;\n       if (!same_type_ignoring_top_level_qualifiers_p (type, boolean_type_node))"}, {"sha": "fcba535a876653f8009d723ccd43708b33af21b5", "filename": "gcc/testsuite/g++.dg/concepts/diagnostic16.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d8838c5ecaf70ce552fea7639ec1f34adb2e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d8838c5ecaf70ce552fea7639ec1f34adb2e04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic16.C?ref=29d8838c5ecaf70ce552fea7639ec1f34adb2e04", "patch": "@@ -0,0 +1,45 @@\n+// PR c++/97536\n+// { dg-do compile { target concepts } }\n+\n+template<typename>\n+concept C1 = true;\n+\n+concept C2 = true; // { dg-error \"non-template variable cannot be .concept.\" }\n+// { dg-error \"concept definition syntax is\" \"\" { target *-*-* } .-1 }\n+\n+template<typename>\n+void fn1 ()\n+{\n+  concept bar = true; // { dg-error \"concept must be defined at namespace scope\" }\n+// { dg-error \"concept definition syntax is\" \"\" { target *-*-* } .-1 }\n+}\n+\n+void fn2 ()\n+{\n+  concept bar = true; // { dg-error \"non-template variable cannot be .concept.\" }\n+// { dg-error \"concept definition syntax is\" \"\" { target *-*-* } .-1 }\n+}\n+\n+template<typename>\n+void fn3 ()\n+{\n+  template<typename> // { dg-error \"template declaration cannot appear at block scope\" }\n+  concept bar = true;\n+}\n+\n+void fn4 ()\n+{\n+  template<typename> // { dg-error \"template declaration cannot appear at block scope\" }\n+  concept bar = true;\n+}\n+\n+void fn5 ()\n+{\n+  C1 auto x = 42;\n+}\n+\n+template<typename>\n+void fn6 ()\n+{\n+  C1 auto x = 42;\n+}"}]}