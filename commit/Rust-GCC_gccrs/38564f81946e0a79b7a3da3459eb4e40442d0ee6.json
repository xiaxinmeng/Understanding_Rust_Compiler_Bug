{"sha": "38564f81946e0a79b7a3da3459eb4e40442d0ee6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg1NjRmODE5NDZlMGE3OWI3YTNkYTM0NTllYjRlNDA0NDJkMGVlNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T15:06:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T15:06:34Z"}, "message": "[multiple changes]\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, prj.adb: Minor reformatting.\n\n2014-07-29  Vincent Celier  <celier@adacore.com>\n\n\t* prj-pp.adb (Pretty_Print.Output_Project_File): New\n\tprocedure to output project file names between quotes without\n\tconcatenation, even if the line is too long.\n\t(Pretty_Print): Use Output_Project_File for project being extended and\n\tproject imported.\n\nFrom-SVN: r213210", "tree": {"sha": "dc05c9f4c1e9e1a02c47cf6e0efdf5e84c6898b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc05c9f4c1e9e1a02c47cf6e0efdf5e84c6898b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38564f81946e0a79b7a3da3459eb4e40442d0ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38564f81946e0a79b7a3da3459eb4e40442d0ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38564f81946e0a79b7a3da3459eb4e40442d0ee6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38564f81946e0a79b7a3da3459eb4e40442d0ee6/comments", "author": null, "committer": null, "parents": [{"sha": "5f6fb720bb65b6954b2ecf0ceecc8f212b08e988", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6fb720bb65b6954b2ecf0ceecc8f212b08e988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f6fb720bb65b6954b2ecf0ceecc8f212b08e988"}], "stats": {"total": 124, "additions": 72, "deletions": 52}, "files": [{"sha": "6108f5b00c16b04ae3b9345c611f1d95abefbe95", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38564f81946e0a79b7a3da3459eb4e40442d0ee6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38564f81946e0a79b7a3da3459eb4e40442d0ee6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=38564f81946e0a79b7a3da3459eb4e40442d0ee6", "patch": "@@ -1,3 +1,15 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, prj.adb: Minor reformatting.\n+\n+2014-07-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-pp.adb (Pretty_Print.Output_Project_File): New\n+\tprocedure to output project file names between quotes without\n+\tconcatenation, even if the line is too long.\n+\t(Pretty_Print): Use Output_Project_File for project being extended and\n+\tproject imported.\n+\n 2014-07-29  Vincent Celier  <celier@adacore.com>\n \n \t* gnat_ugn.texi: Document that configuration pragmas files are"}, {"sha": "7c21e10193918d7cecb29f48188d93f7def33d0e", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 60, "deletions": 50, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38564f81946e0a79b7a3da3459eb4e40442d0ee6/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38564f81946e0a79b7a3da3459eb4e40442d0ee6/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=38564f81946e0a79b7a3da3459eb4e40442d0ee6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,8 +35,8 @@ package body Prj.PP is\n    Not_Tested : array (Project_Node_Kind) of Boolean := (others => True);\n \n    procedure Indicate_Tested (Kind : Project_Node_Kind);\n-   --  Set the corresponding component of array Not_Tested to False.\n-   --  Only called by pragmas Debug.\n+   --  Set the corresponding component of array Not_Tested to False. Only\n+   --  called by Debug pragmas.\n \n    ---------------------\n    -- Indicate_Tested --\n@@ -84,14 +84,16 @@ package body Prj.PP is\n       procedure Start_Line (Indent : Natural);\n       --  Outputs the indentation at the beginning of the line\n \n+      procedure Output_Project_File (S : Name_Id);\n+      --  Output a string for a project file name. No concatenation even if the\n+      --  line is too long. What does that mean???\n+\n       procedure Output_String (S : Name_Id; Indent : Natural);\n-      procedure Output_String (S : Path_Name_Type; Indent : Natural);\n       --  Outputs a string using the default output procedures\n \n       procedure Write_Empty_Line (Always : Boolean := False);\n       --  Outputs an empty line, only if the previous line was not empty\n-      --  already and either Always is True or Minimize_Empty_Lines is\n-      --  False.\n+      --  already and either Always is True or Minimize_Empty_Lines is False.\n \n       procedure Write_Line (S : String);\n       --  Outputs S followed by a new line\n@@ -100,12 +102,12 @@ package body Prj.PP is\n         (S         : String;\n          Indent    : Natural;\n          Truncated : Boolean := False);\n-      --  Outputs S using Write_Str, starting a new line if line would\n-      --  become too long, when Truncated = False.\n-      --  When Truncated = True, only the part of the string that can fit on\n-      --  the line is output.\n+      --  Outputs S using Write_Str, starting a new line if line would become\n+      --  too long, when Truncated = False. When Truncated = True, only the\n+      --  part of the string that can fit on the line is output.\n \n       procedure Write_End_Of_Line_Comment (Node : Project_Node_Id);\n+      --  Needs comment???\n \n       Write_Char : Write_Char_Ap := Output.Write_Char'Access;\n       Write_Eol  : Write_Eol_Ap := Output.Write_Eol'Access;\n@@ -199,6 +201,28 @@ package body Prj.PP is\n          Column := Column + Name_Len;\n       end Output_Name;\n \n+      -------------------------\n+      -- Output_Project_File --\n+      -------------------------\n+\n+      procedure Output_Project_File (S : Name_Id) is\n+         File_Name : constant String := Get_Name_String (S);\n+\n+      begin\n+         Write_Char ('\"');\n+\n+         for J in File_Name'Range loop\n+            if File_Name (J) = '\"' then\n+               Write_Char ('\"');\n+               Write_Char ('\"');\n+            else\n+               Write_Char (File_Name (J));\n+            end if;\n+         end loop;\n+\n+         Write_Char ('\"');\n+      end Output_Project_File;\n+\n       -------------------\n       -- Output_String --\n       -------------------\n@@ -256,11 +280,6 @@ package body Prj.PP is\n          Column := Column + 1;\n       end Output_String;\n \n-      procedure Output_String (S : Path_Name_Type; Indent : Natural) is\n-      begin\n-         Output_String (Name_Id (S), Indent);\n-      end Output_String;\n-\n       ----------------\n       -- Start_Line --\n       ----------------\n@@ -323,15 +342,16 @@ package body Prj.PP is\n       procedure Write_String\n         (S         : String;\n          Indent    : Natural;\n-         Truncated : Boolean := False) is\n+         Truncated : Boolean := False)\n+      is\n          Length : Natural := S'Length;\n+\n       begin\n          if Column = 0 and then Indent /= 0 then\n             Start_Line (Indent + Increment);\n          end if;\n \n-         --  If the string would not fit on the line,\n-         --  start a new line.\n+         --  If the string would not fit on the line, start a new line\n \n          if Column + Length > Max_Line_Length then\n             if Truncated then\n@@ -358,9 +378,7 @@ package body Prj.PP is\n       procedure Print (Node : Project_Node_Id; Indent : Natural) is\n       begin\n          if Present (Node) then\n-\n             case Kind_Of (Node, In_Tree) is\n-\n                when N_Project  =>\n                   pragma Debug (Indicate_Tested (N_Project));\n                   if Present (First_With_Clause_Of (Node, In_Tree)) then\n@@ -407,9 +425,8 @@ package body Prj.PP is\n                         Write_String (\"all \", Indent);\n                      end if;\n \n-                     Output_String\n-                       (Extended_Project_Path_Of (Node, In_Tree),\n-                        Indent);\n+                     Output_Project_File\n+                       (Name_Id (Extended_Project_Path_Of (Node, In_Tree)));\n                   end if;\n \n                   Write_String (\" is\", Indent);\n@@ -440,9 +457,8 @@ package body Prj.PP is\n                   pragma Debug (Indicate_Tested (N_With_Clause));\n \n                   --  The with clause will sometimes contain an invalid name\n-                  --  when we are importing a virtual project from an\n-                  --  extending all project. Do not output anything in this\n-                  --  case\n+                  --  when we are importing a virtual project from an extending\n+                  --  all project. Do not output anything in this case.\n \n                   if Name_Of (Node, In_Tree) /= No_Name\n                     and then String_Value_Of (Node, In_Tree) /= No_Name\n@@ -460,7 +476,10 @@ package body Prj.PP is\n                         Write_String (\"with \", Indent);\n                      end if;\n \n-                     Output_String (String_Value_Of (Node, In_Tree), Indent);\n+                     --  Output the project name without concatenation, even if\n+                     --  the line is too long.\n+\n+                     Output_Project_File (String_Value_Of (Node, In_Tree));\n \n                      if Is_Not_Last_In_List (Node, In_Tree) then\n                         Write_String (\", \", Indent);\n@@ -522,8 +541,7 @@ package body Prj.PP is\n                      Print (First_Comment_After (Node, In_Tree),\n                             Indent + Increment);\n \n-                     if First_Declarative_Item_Of (Node, In_Tree) /=\n-                          Empty_Node\n+                     if First_Declarative_Item_Of (Node, In_Tree) /= Empty_Node\n                      then\n                         Print\n                           (First_Declarative_Item_Of (Node, In_Tree),\n@@ -557,8 +575,7 @@ package body Prj.PP is\n                   begin\n                      while Present (String_Node) loop\n                         Output_String\n-                          (String_Value_Of (String_Node, In_Tree),\n-                           Indent);\n+                          (String_Value_Of (String_Node, In_Tree), Indent);\n                         String_Node :=\n                           Next_Literal_String (String_Node, In_Tree);\n \n@@ -579,8 +596,7 @@ package body Prj.PP is\n                   if Source_Index_Of (Node, In_Tree) /= 0 then\n                      Write_String (\" at\", Indent);\n                      Write_String\n-                       (Source_Index_Of (Node, In_Tree)'Img,\n-                        Indent);\n+                       (Source_Index_Of (Node, In_Tree)'Img, Indent);\n                   end if;\n \n                when N_Attribute_Declaration =>\n@@ -593,14 +609,12 @@ package body Prj.PP is\n                   if Associative_Array_Index_Of (Node, In_Tree) /= No_Name then\n                      Write_String (\" (\", Indent);\n                      Output_String\n-                       (Associative_Array_Index_Of (Node, In_Tree),\n-                        Indent);\n+                       (Associative_Array_Index_Of (Node, In_Tree), Indent);\n \n                      if Source_Index_Of (Node, In_Tree) /= 0 then\n                         Write_String (\" at\", Indent);\n                         Write_String\n-                          (Source_Index_Of (Node, In_Tree)'Img,\n-                           Indent);\n+                          (Source_Index_Of (Node, In_Tree)'Img, Indent);\n                      end if;\n \n                      Write_String (\")\", Indent);\n@@ -614,17 +628,14 @@ package body Prj.PP is\n                   else\n                      --  Full associative array declaration\n \n-                     if\n-                       Present (Associative_Project_Of (Node, In_Tree))\n-                     then\n+                     if Present (Associative_Project_Of (Node, In_Tree)) then\n                         Output_Name\n                           (Name_Of\n                              (Associative_Project_Of (Node, In_Tree),\n                               In_Tree),\n                            Indent);\n \n-                        if\n-                          Present (Associative_Package_Of (Node, In_Tree))\n+                        if Present (Associative_Package_Of (Node, In_Tree))\n                         then\n                            Write_String (\".\", Indent);\n                            Output_Name\n@@ -634,8 +645,7 @@ package body Prj.PP is\n                               Indent);\n                         end if;\n \n-                     elsif\n-                       Present (Associative_Package_Of (Node, In_Tree))\n+                     elsif Present (Associative_Package_Of (Node, In_Tree))\n                      then\n                         Output_Name\n                           (Name_Of\n@@ -705,7 +715,7 @@ package body Prj.PP is\n \n                   declare\n                      Expression : Project_Node_Id :=\n-                       First_Expression_In_List (Node, In_Tree);\n+                                    First_Expression_In_List (Node, In_Tree);\n \n                   begin\n                      while Present (Expression) loop\n@@ -783,7 +793,6 @@ package body Prj.PP is\n                   declare\n                      Index : constant Name_Id :=\n                                Associative_Array_Index_Of (Node, In_Tree);\n-\n                   begin\n                      if Index /= No_Name then\n                         Write_String (\" (\", Indent);\n@@ -804,7 +813,7 @@ package body Prj.PP is\n                      while Present (Case_Item) loop\n                         if Present\n                             (First_Declarative_Item_Of (Case_Item, In_Tree))\n-                           or else not Eliminate_Empty_Case_Constructions\n+                          or else not Eliminate_Empty_Case_Constructions\n                         then\n                            Is_Non_Empty := True;\n                            exit;\n@@ -819,8 +828,7 @@ package body Prj.PP is\n                         Start_Line (Indent);\n                         Write_String (\"case \", Indent);\n                         Print\n-                          (Case_Variable_Reference_Of (Node, In_Tree),\n-                           Indent);\n+                          (Case_Variable_Reference_Of (Node, In_Tree), Indent);\n                         Write_String (\" is\", Indent);\n                         Write_End_Of_Line_Comment (Node);\n                         Print\n@@ -867,6 +875,7 @@ package body Prj.PP is\n                         declare\n                            Label : Project_Node_Id :=\n                                      First_Choice_Of (Node, In_Tree);\n+\n                         begin\n                            while Present (Label) loop\n                               Print (Label, Indent);\n@@ -975,7 +984,8 @@ package body Prj.PP is\n \n    procedure wpr\n      (Project : Prj.Tree.Project_Node_Id;\n-      In_Tree : Prj.Tree.Project_Node_Tree_Ref) is\n+      In_Tree : Prj.Tree.Project_Node_Tree_Ref)\n+   is\n    begin\n       Pretty_Print (Project, In_Tree, Backward_Compatibility => False);\n    end wpr;"}, {"sha": "e4c7784297bf3514bafdea8cd9597a650f336f4f", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38564f81946e0a79b7a3da3459eb4e40442d0ee6/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38564f81946e0a79b7a3da3459eb4e40442d0ee6/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=38564f81946e0a79b7a3da3459eb4e40442d0ee6", "patch": "@@ -142,7 +142,6 @@ package body Prj is\n          declare\n             New_Buffer : constant  String_Access :=\n                            new String (1 .. 2 * To'Length);\n-\n          begin\n             New_Buffer (1 .. Last) := To (1 .. Last);\n             Free (To);"}, {"sha": "ad59f58c8e1a257dff0e6258c094f6830e4838fa", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38564f81946e0a79b7a3da3459eb4e40442d0ee6/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38564f81946e0a79b7a3da3459eb4e40442d0ee6/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=38564f81946e0a79b7a3da3459eb4e40442d0ee6", "patch": "@@ -3504,7 +3504,6 @@ package body Sem_Ch3 is\n            and then Nkind (E) = N_Aggregate\n          then\n             Set_Etype (E, T);\n-\n          else\n             Resolve (E, T);\n          end if;"}]}