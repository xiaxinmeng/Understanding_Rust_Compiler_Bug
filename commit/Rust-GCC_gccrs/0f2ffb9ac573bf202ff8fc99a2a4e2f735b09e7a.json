{"sha": "0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYyZmZiOWFjNTczYmYyMDJmZjhmYzk5YTJhNGUyZjczNWIwOWU3YQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-04-13T13:47:34Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-04-13T13:47:34Z"}, "message": "tree-sra.c (replace_uses_with_default_def_ssa_name): New function.\n\n2010-04-13  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c (replace_uses_with_default_def_ssa_name): New function.\n\t(sra_modify_assign): Delete stmts loading dead data even if racc has no\n\tchildren.  Call replace_uses_with_default_def_ssa_name to handle\n\tSSA_NAES on lhs.\n\n\t* testsuite/gcc.dg/tree-ssa/sra-9.c: New test.\n\nFrom-SVN: r158271", "tree": {"sha": "ad8b78a33a4ceac84a1d0b5c50db056861743f47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad8b78a33a4ceac84a1d0b5c50db056861743f47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61"}], "stats": {"total": 82, "additions": 73, "deletions": 9}, "files": [{"sha": "f82bc7a0655b9dbcc6a620696ff6996da52bebda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a", "patch": "@@ -1,3 +1,10 @@\n+2010-04-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c (replace_uses_with_default_def_ssa_name): New function.\n+\t(sra_modify_assign): Delete stmts loading dead data even if racc has no\n+\tchildren.  Call replace_uses_with_default_def_ssa_name to handle\n+\tSSA_NAES on lhs.\n+\n 2010-04-13  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/43730"}, {"sha": "dfd16d4cd50adfabf2517331e52237336f84209c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a", "patch": "@@ -1,3 +1,7 @@\n+2010-04-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* gcc.dg/tree-ssa/sra-9.c: New test.\n+\n 2010-04-13  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/43730"}, {"sha": "7a810c644a7e44c3f986532e3b54faf50dd430c2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-9.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-9.c?ref=0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-optimized\" } */\n+\n+struct S\n+{\n+  int a, b, c;\n+  int z[20];\n+};\n+\n+int foo (int d)\n+{\n+  struct S s;\n+\n+  s.a = d;\n+  return s.a + s.b;\n+}\n+\n+/* There should be no reference to s.b.  */\n+/* { dg-final { scan-tree-dump-times \"s\\.b\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "0a9b3df3b15a7400791de62fc98472811e168a7a", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 42, "deletions": 9, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=0f2ffb9ac573bf202ff8fc99a2a4e2f735b09e7a", "patch": "@@ -2528,6 +2528,37 @@ sra_modify_constructor_assign (gimple *stmt, gimple_stmt_iterator *gsi)\n     }\n }\n \n+/* Create a new suitable default definition SSA_NAME and replace all uses of\n+   SSA with it.  */\n+\n+static void\n+replace_uses_with_default_def_ssa_name (tree ssa)\n+{\n+  tree repl, decl = SSA_NAME_VAR (ssa);\n+  if (TREE_CODE (decl) == PARM_DECL)\n+    {\n+      tree tmp = create_tmp_var (TREE_TYPE (decl), \"SR\");\n+      if (TREE_CODE (TREE_TYPE (tmp)) == COMPLEX_TYPE\n+\t  || TREE_CODE (TREE_TYPE (tmp)) == VECTOR_TYPE)\n+\tDECL_GIMPLE_REG_P (tmp) = 1;\n+\n+      get_var_ann (tmp);\n+      add_referenced_var (tmp);\n+      repl = make_ssa_name (tmp, gimple_build_nop ());\n+      set_default_def (tmp, repl);\n+    }\n+  else\n+    {\n+      repl = gimple_default_def (cfun, decl);\n+      if (!repl)\n+\t{\n+\t  repl = make_ssa_name (decl, gimple_build_nop ());\n+\t  set_default_def (decl, repl);\n+\t}\n+    }\n+\n+  replace_uses_by (ssa, repl);\n+}\n \n /* Callback of scan_function to process assign statements.  It examines both\n    sides of the statement, replaces them with a scalare replacement if there is\n@@ -2703,26 +2734,28 @@ sra_modify_assign (gimple *stmt, gimple_stmt_iterator *gsi,\n \t}\n       else\n \t{\n-\t  if (access_has_children_p (racc))\n+\t  if (racc)\n \t    {\n-\t      if (!racc->grp_unscalarized_data\n-\t\t  /* Do not remove SSA name definitions (PR 42704).  */\n-\t\t  && TREE_CODE (lhs) != SSA_NAME)\n+\t      if (!racc->grp_to_be_replaced && !racc->grp_unscalarized_data)\n \t\t{\n-\t\t  generate_subtree_copies (racc->first_child, lhs,\n-\t\t\t\t\t   racc->offset, 0, 0, gsi,\n-\t\t\t\t\t   false, false);\n+\t\t  if (racc->first_child)\n+\t\t    generate_subtree_copies (racc->first_child, lhs,\n+\t\t\t\t\t     racc->offset, 0, 0, gsi,\n+\t\t\t\t\t     false, false);\n \t\t  gcc_assert (*stmt == gsi_stmt (*gsi));\n+\t\t  if (TREE_CODE (lhs) == SSA_NAME)\n+\t\t    replace_uses_with_default_def_ssa_name (lhs);\n+\n \t\t  unlink_stmt_vdef (*stmt);\n \t\t  gsi_remove (gsi, true);\n \t\t  sra_stats.deleted++;\n \t\t  return SRA_SA_REMOVED;\n \t\t}\n-\t      else\n+\t      else if (racc->first_child)\n \t\tgenerate_subtree_copies (racc->first_child, lhs,\n \t\t\t\t\t racc->offset, 0, 0, gsi, false, true);\n \t    }\n-\t  else if (access_has_children_p (lacc))\n+\t  if (access_has_children_p (lacc))\n \t    generate_subtree_copies (lacc->first_child, rhs, lacc->offset,\n \t\t\t\t     0, 0, gsi, true, true);\n \t}"}]}