{"sha": "bdd5056736b642f0124e6cb26f9c2fd8be028908", "node_id": "C_kwDOANBUbNoAKGJkZDUwNTY3MzZiNjQyZjAxMjRlNmNiMjZmOWMyZmQ4YmUwMjg5MDg", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-05-23T23:14:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-04T07:45:51Z"}, "message": "[Ada] Plug loophole for built-in-place return with limited_with clause\n\nWhen the result type of a function requiring built-in-place return is\nonly visible through a limited_with clause, the compiled needs to wait\nfor the nonlimited view to be available in order to compute whether\nthe built-in-place return is needed, and this comprises tagging the\nfunction with the Returns_By_Ref flag.\n\ngcc/ada/\n\n\t* exp_ch6.adb (Build_In_Place_Formal): Also compute Returns_By_Ref\n\tfor the function if the extra formals were not built initially.", "tree": {"sha": "f3d73d533b4c8d45a878aca452fdf87d13e00049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3d73d533b4c8d45a878aca452fdf87d13e00049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdd5056736b642f0124e6cb26f9c2fd8be028908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd5056736b642f0124e6cb26f9c2fd8be028908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd5056736b642f0124e6cb26f9c2fd8be028908", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd5056736b642f0124e6cb26f9c2fd8be028908/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df69e326b39dabc34f0c9b31f694079e5fa1343a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df69e326b39dabc34f0c9b31f694079e5fa1343a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df69e326b39dabc34f0c9b31f694079e5fa1343a"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "88157b946ea8fd141470bce876569579dd479580", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd5056736b642f0124e6cb26f9c2fd8be028908/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd5056736b642f0124e6cb26f9c2fd8be028908/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=bdd5056736b642f0124e6cb26f9c2fd8be028908", "patch": "@@ -850,11 +850,12 @@ package body Exp_Ch6 is\n       --  The return type in the function declaration may have been a limited\n       --  view, and the extra formals for the function were not generated at\n       --  that point. At the point of call the full view must be available and\n-      --  the extra formals can be created.\n+      --  the extra formals can be created and Returns_By_Ref computed.\n \n       if No (Extra_Formal) then\n          Create_Extra_Formals (Func);\n          Extra_Formal := Extra_Formals (Func);\n+         Compute_Returns_By_Ref (Func);\n       end if;\n \n       --  We search for a formal with a matching suffix. We can't search"}]}