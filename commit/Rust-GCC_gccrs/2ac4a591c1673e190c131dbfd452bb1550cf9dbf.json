{"sha": "2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjNGE1OTFjMTY3M2UxOTBjMTMxZGJmZDQ1MmJiMTU1MGNmOWRiZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T09:43:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T09:43:40Z"}, "message": "[multiple changes]\n\n2015-02-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* s-stalib.ads: Fix typo.\n\n2015-02-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb (Default_Initialize_Object): If the object has a\n\tdelayed freeze, the actions associated with default initialization\n\tmust be part of the freeze actions, rather that being inserted\n\tdirectly after the object declaration.\n\n2015-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* lib-load.adb: Minor comment update.\n\n2015-02-20  Vincent Celier  <celier@adacore.com>\n\n\t* prj-proc.adb (Process_Case_Construction): When there are\n\tincomplete withed projects and the case variable is unknown,\n\tskip the case construction.\n\n2015-02-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Expand_Actuals): Add caller-side invariant checks\n\twhen an actual is a view conversion, either because the call is\n\tto an inherited operation, or because the actual is an explicit\n\ttype conversion to an ancestor type.  Fixes ACATS 4.0D: C732001\n\nFrom-SVN: r220840", "tree": {"sha": "acaf14a80419b8de4f21255acc522c848e311725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acaf14a80419b8de4f21255acc522c848e311725"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/comments", "author": null, "committer": null, "parents": [{"sha": "dacc3457d6960a86f27178af18a161e47c48ec41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dacc3457d6960a86f27178af18a161e47c48ec41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dacc3457d6960a86f27178af18a161e47c48ec41"}], "stats": {"total": 127, "additions": 119, "deletions": 8}, "files": [{"sha": "2144ec83d51584d492ba6e4ff64298ac1dcbcd12", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "patch": "@@ -1,3 +1,31 @@\n+2015-02-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* s-stalib.ads: Fix typo.\n+\n+2015-02-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.adb (Default_Initialize_Object): If the object has a\n+\tdelayed freeze, the actions associated with default initialization\n+\tmust be part of the freeze actions, rather that being inserted\n+\tdirectly after the object declaration.\n+\n+2015-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib-load.adb: Minor comment update.\n+\n+2015-02-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-proc.adb (Process_Case_Construction): When there are\n+\tincomplete withed projects and the case variable is unknown,\n+\tskip the case construction.\n+\n+2015-02-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Actuals): Add caller-side invariant checks\n+\twhen an actual is a view conversion, either because the call is\n+\tto an inherited operation, or because the actual is an explicit\n+\ttype conversion to an ancestor type.  Fixes ACATS 4.0D: C732001\n+\n 2015-02-20  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.ads: Minor comment updates Fix missing pragma Inline"}, {"sha": "3d0ee1f76600ca821aecca21189c6a76453e5731", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "patch": "@@ -5356,8 +5356,15 @@ package body Exp_Ch3 is\n          end if;\n \n          --  Step 4: Insert the whole initialization sequence into the tree\n+         --  If the object has a delayed freeze, as will be the case when\n+         --  it has aspect specifications, the initialization sequence is\n+         --  part of the freeze actions.\n \n-         Insert_Actions_After (After, Abrt_Stmts);\n+         if Has_Delayed_Freeze (Def_Id) then\n+            Append_Freeze_Actions (Def_Id, Abrt_Stmts);\n+         else\n+            Insert_Actions_After (After, Abrt_Stmts);\n+         end if;\n       end Default_Initialize_Object;\n \n       -------------------------"}, {"sha": "c9c5da2cbe943ef29002d36c6b17042cd1450b0c", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 74, "deletions": 2, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "patch": "@@ -970,6 +970,10 @@ package body Exp_Ch6 is\n    -- Expand_Actuals --\n    --------------------\n \n+   --------------------\n+   -- Expand_Actuals --\n+   --------------------\n+\n    procedure Expand_Actuals (N : in out Node_Id; Subp : Entity_Id) is\n       Loc       : constant Source_Ptr := Sloc (N);\n       Actual    : Node_Id;\n@@ -1750,10 +1754,50 @@ package body Exp_Ch6 is\n             --  be handled separately because the name does not denote an\n             --  overloadable entity.\n \n-            declare\n+            By_Ref_Predicate_Check : declare\n                Aund : constant Entity_Id := Underlying_Type (E_Actual);\n                Atyp : Entity_Id;\n \n+               function Is_Public_Subp return Boolean;\n+               --  Check whether the subprogram being called is a visible\n+               --  operation of the type of the actual. Used to determine\n+               --  whether an invariant check must be generated on the\n+               --  caller side.\n+\n+               ---------------------\n+               --  Is_Public_Subp --\n+               ---------------------\n+\n+               function Is_Public_Subp return Boolean is\n+                  Pack      : constant Entity_Id := Scope (Subp);\n+                  Subp_Decl : Node_Id;\n+\n+               begin\n+                  if not Is_Subprogram (Subp) then\n+                     return False;\n+\n+                  --  The operation may be inherited, or a primitive of the\n+                  --  root type.\n+\n+                  elsif\n+                    Nkind_In (Parent (Subp), N_Private_Extension_Declaration,\n+                                             N_Full_Type_Declaration)\n+                  then\n+                     Subp_Decl := Parent (Subp);\n+\n+                  else\n+                     Subp_Decl := Unit_Declaration_Node (Subp);\n+                  end if;\n+\n+                  return Ekind (Pack) = E_Package\n+                    and then\n+                      List_Containing (Subp_Decl) =\n+                        Visible_Declarations\n+                          (Specification (Unit_Declaration_Node (Pack)));\n+               end Is_Public_Subp;\n+\n+            --  Start of processing for By_Ref_Predicate_Check\n+\n             begin\n                if No (Aund) then\n                   Atyp := E_Actual;\n@@ -1771,7 +1815,34 @@ package body Exp_Ch6 is\n                   Append_To (Post_Call,\n                     Make_Predicate_Check (Atyp, Actual));\n                end if;\n-            end;\n+\n+               --  We generated caller-side invariant checks in two cases:\n+\n+               --  a) when calling an inherited operation, where there is an\n+               --  implicit view conversion of the actual to the parent type.\n+\n+               --  b) When the conversion is explicit\n+\n+               --  We treat these cases separately because the required\n+               --  conversion for a) is added later when expanding the call.\n+\n+               if Has_Invariants (Etype (Actual))\n+                  and then\n+                    Nkind (Parent (Subp)) = N_Private_Extension_Declaration\n+               then\n+                  if  Comes_From_Source (N) and then Is_Public_Subp then\n+                     Append_To (Post_Call, Make_Invariant_Call (Actual));\n+                  end if;\n+\n+               elsif Nkind (Actual) = N_Type_Conversion\n+                 and then Has_Invariants (Etype (Expression (Actual)))\n+               then\n+                  if Comes_From_Source (N) and then Is_Public_Subp then\n+                     Append_To (Post_Call,\n+                       Make_Invariant_Call (Expression (Actual)));\n+                  end if;\n+               end if;\n+            end By_Ref_Predicate_Check;\n \n          --  Processing for IN parameters\n \n@@ -7609,6 +7680,7 @@ package body Exp_Ch6 is\n \n                   if Present (Class_Pre) then\n                      Merge_Preconditions (Check_Prag, Class_Pre);\n+\n                   else\n                      Class_Pre := Check_Prag;\n                   end if;"}, {"sha": "83d3576eeb6f1e56813491b5f073abc99d1ce6f6", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "patch": "@@ -740,7 +740,7 @@ package body Lib.Load is\n                goto Done;\n             end if;\n \n-            --  If loaded unit had a fatal error, then caller inherits setting\n+            --  If loaded unit had an error, then caller inherits setting\n \n             if Present (Error_Node) then\n                case Units.Table (Unum).Fatal_Error is"}, {"sha": "57b88c651bf6fe326ad3e9c681d62c932af5166d", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "patch": "@@ -2363,13 +2363,17 @@ package body Prj.Proc is\n             end if;\n \n             if Var_Id = No_Variable then\n+               if Node_Tree.Incomplete_With then\n+                  return;\n \n                --  Should never happen, because this has already been checked\n                --  during parsing.\n \n-               Write_Line\n-                 (\"variable \"\"\" & Get_Name_String (Name) & \"\"\" not found\");\n-               raise Program_Error;\n+               else\n+                  Write_Line\n+                    (\"variable \"\"\" & Get_Name_String (Name) & \"\"\" not found\");\n+                  raise Program_Error;\n+               end if;\n             end if;\n \n             --  Get the case variable"}, {"sha": "8d96677dad04fa8fd6145e35cb75270cd9ae9b63", "filename": "gcc/ada/s-stalib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Fs-stalib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac4a591c1673e190c131dbfd452bb1550cf9dbf/gcc%2Fada%2Fs-stalib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.ads?ref=2ac4a591c1673e190c131dbfd452bb1550cf9dbf", "patch": "@@ -242,7 +242,7 @@ package System.Standard_Library is\n    --  A little procedure that just calls Abort_Undefer.all, for use in\n    --  clean up procedures, which only permit a simple subprogram name.\n    --  ??? This procedure is not marked inline because the front-end\n-   --  cannot currently mark its calls from at-end handers as inlined.\n+   --  cannot currently mark its calls from at-end handlers as inlined.\n \n    procedure Adafinal;\n    --  Performs the Ada Runtime finalization the first time it is invoked."}]}