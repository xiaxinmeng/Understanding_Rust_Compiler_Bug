{"sha": "582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgyZGJiNTNhYzZkMGJkNDZjMTQwMjU4NGQyYzRiZTBhMzRhMDQwYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T10:08:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T10:08:46Z"}, "message": "[multiple changes]\n\n2017-01-13  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Package_Instantiation): Move disabiling\n\tof the style check until after preanalysis of acutals.\n\n2017-01-13  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch13.adb: Minor reformatting.\n\t* par-ch11.adb: minor style fix in whitespace\n\t* gnatbind.adb (Gnatbind): Scope of Std_Lib_File\n\treduced to Add_Artificial_ALI_File; style fix in declaration of\n\tText; grammar fix in comment.\n\t* osint-c.adb (Read_Library_Info): strip trailing NUL from result.\n\t* freeze.adb: Cleanup to pass pragma instead of\n\texpression to call.\n\t* exp_spark.adb (Expand_SPARK_Attribute_Reference): New procedure to\n\treplace System'To_Address by equivalent call.\n\nFrom-SVN: r244401", "tree": {"sha": "6e32717db983e2c599fedb1f699d0bfade203b38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e32717db983e2c599fedb1f699d0bfade203b38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/comments", "author": null, "committer": null, "parents": [{"sha": "e4d0416682374541d42aebe9b3535dbfa7fd0058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d0416682374541d42aebe9b3535dbfa7fd0058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d0416682374541d42aebe9b3535dbfa7fd0058"}], "stats": {"total": 115, "additions": 92, "deletions": 23}, "files": [{"sha": "d851a51b4b709858f43281539fed3f8254ff9c7a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "patch": "@@ -1,3 +1,21 @@\n+2017-01-13  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Package_Instantiation): Move disabiling\n+\tof the style check until after preanalysis of acutals.\n+\n+2017-01-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch13.adb: Minor reformatting.\n+\t* par-ch11.adb: minor style fix in whitespace\n+\t* gnatbind.adb (Gnatbind): Scope of Std_Lib_File\n+\treduced to Add_Artificial_ALI_File; style fix in declaration of\n+\tText; grammar fix in comment.\n+\t* osint-c.adb (Read_Library_Info): strip trailing NUL from result.\n+\t* freeze.adb: Cleanup to pass pragma instead of\n+\texpression to call.\n+\t* exp_spark.adb (Expand_SPARK_Attribute_Reference): New procedure to\n+\treplace System'To_Address by equivalent call.\n+\n 2017-01-13  Arnaud Charlet  <charlet@adacore.com>\n \n \t* bindusg.adb: Improve usage output for -f switch."}, {"sha": "bd66d015afd6ed41514bb407f8d8367c1f23a962", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "patch": "@@ -28,9 +28,14 @@ with Einfo;    use Einfo;\n with Exp_Ch5;  use Exp_Ch5;\n with Exp_Dbug; use Exp_Dbug;\n with Exp_Util; use Exp_Util;\n+with Namet;    use Namet;\n+with Nlists;   use Nlists;\n+with Nmake;    use Nmake;\n+with Rtsfind;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n+with Snames;   use Snames;\n with Tbuild;   use Tbuild;\n \n package body Exp_SPARK is\n@@ -39,6 +44,10 @@ package body Exp_SPARK is\n    -- Local Subprograms --\n    -----------------------\n \n+   procedure Expand_SPARK_Attribute_Reference (N : Node_Id);\n+   --  Replace occurrences of System'To_Address by calls to\n+   --  System.Storage_Elements.To_Address\n+\n    procedure Expand_SPARK_N_Object_Renaming_Declaration (N : Node_Id);\n    --  Perform name evaluation for a renamed object\n \n@@ -74,6 +83,12 @@ package body Exp_SPARK is\n          when N_Object_Renaming_Declaration =>\n             Expand_SPARK_N_Object_Renaming_Declaration (N);\n \n+         --  Replace occurrences of System'To_Address by calls to\n+         --  System.Storage_Elements.To_Address\n+\n+         when N_Attribute_Reference =>\n+            Expand_SPARK_Attribute_Reference (N);\n+\n          --  Loop iterations over arrays need to be expanded, to avoid getting\n          --  two names referring to the same object in memory (the array and\n          --  the iterator) in GNATprove, especially since both can be written\n@@ -101,6 +116,42 @@ package body Exp_SPARK is\n       end case;\n    end Expand_SPARK;\n \n+   --------------------------------------\n+   -- Expand_SPARK_Attribute_Reference --\n+   --------------------------------------\n+\n+   procedure Expand_SPARK_Attribute_Reference (N : Node_Id) is\n+      Aname   : constant Name_Id := Attribute_Name (N);\n+      Attr_Id : constant Attribute_Id := Get_Attribute_Id (Aname);\n+      Expr    : Node_Id;\n+      Call    : Node_Id;\n+\n+   begin\n+      if Attr_Id = Attribute_To_Address then\n+         --  Extract argument to later reanalyze it in the new context\n+\n+         Expr := First (Expressions (N));\n+         Nlists.Remove (Expr);\n+         Set_Etype (Expr, Empty);\n+         Set_Analyzed (Expr, False);\n+\n+         --  Create the call and insert it in the tree\n+\n+         Call := Make_Function_Call (Sloc (N),\n+                    Name => New_Occurrence_Of\n+                      (Rtsfind.RTE (Rtsfind.RE_To_Address), Sloc (N)),\n+                    Parameter_Associations =>\n+                      New_List (Expr));\n+         Set_Etype (Call, Etype (N));\n+         Rewrite (Old_Node => N, New_Node => Call);\n+\n+         --  Reanalyze argument and call in the new context\n+\n+         Analyze_And_Resolve (Expr, Rtsfind.RTE (Rtsfind.RE_Integer_Address));\n+         Analyze_And_Resolve (N, Etype (N));\n+      end if;\n+   end Expand_SPARK_Attribute_Reference;\n+\n    ------------------------------------------------\n    -- Expand_SPARK_N_Object_Renaming_Declaration --\n    ------------------------------------------------"}, {"sha": "8215a7602c3ed6e322dcce8c5cfe7d4a9e8ec87f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "patch": "@@ -1455,9 +1455,6 @@ package body Freeze is\n             A_Pre := Get_Pragma (Par_Prim, Pragma_Precondition);\n \n             if Present (A_Pre) and then Class_Present (A_Pre) then\n-               A_Pre :=\n-                 Expression (First (Pragma_Argument_Associations (A_Pre)));\n-\n                Build_Class_Wide_Expression\n                  (Prag        => New_Copy_Tree (A_Pre),\n                   Subp        => Prim,\n@@ -1468,9 +1465,6 @@ package body Freeze is\n             A_Post := Get_Pragma (Par_Prim, Pragma_Postcondition);\n \n             if Present (A_Post) and then Class_Present (A_Post) then\n-               A_Post :=\n-                 Expression (First (Pragma_Argument_Associations (A_Post)));\n-\n                Build_Class_Wide_Expression\n                  (Prag        => New_Copy_Tree (A_Post),\n                   Subp        => Prim,"}, {"sha": "8cd99cf8f758ddbf8d6fe1e02756838a776905f7", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "patch": "@@ -69,10 +69,7 @@ procedure Gnatbind is\n    --  The first library file, that should be a main subprogram if neither -n\n    --  nor -z are used.\n \n-   Std_Lib_File : File_Name_Type;\n-   --  Standard library\n-\n-   Text     : Text_Buffer_Ptr;\n+   Text : Text_Buffer_Ptr;\n \n    Output_File_Name_Seen : Boolean := False;\n    Output_File_Name      : String_Ptr := new String'(\"\");\n@@ -124,6 +121,9 @@ procedure Gnatbind is\n       Id : ALI_Id;\n       pragma Warnings (Off, Id);\n \n+      Std_Lib_File : File_Name_Type;\n+      --  Standard library\n+\n    begin\n       Name_Len := Name'Length;\n       Name_Buffer (1 .. Name_Len) := Name;\n@@ -769,7 +769,7 @@ begin\n       --  Add System.Standard_Library to list to ensure that these files are\n       --  included in the bind, even if not directly referenced from Ada code\n       --  This is suppressed if the appropriate targparm switch is set. Be sure\n-      --  in any case that System is in the closure, as it may contains linker\n+      --  in any case that System is in the closure, as it may contain linker\n       --  options. Note that it will be automatically added if s-stalib is\n       --  added.\n "}, {"sha": "28abc609030f26f781d7dc76134f10f16d6e76d8", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -347,6 +347,13 @@ package body Osint.C is\n    is\n    begin\n       Set_File_Name (ALI_Suffix.all);\n+\n+      --  Remove trailing NUL that comes from Set_File_Name above. This is\n+      --  needed for consistency with names that come from Scan_ALI and thus\n+      --  preventing repeated scanning of the same file.\n+      pragma Assert (Name_Len > 1 and then Name_Buffer (Name_Len) = ASCII.NUL);\n+      Name_Len := Name_Len - 1;\n+\n       Name := Name_Find;\n       Text := Read_Library_Info (Name, Fatal_Err => False);\n    end Read_Library_Info;"}, {"sha": "6c954b1edf9ee1c418265161c7907c8172a81c1a", "filename": "gcc/ada/par-ch11.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fpar-ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fpar-ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch11.adb?ref=582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,8 +34,8 @@ package body Ch11 is\n \n    --  Local functions, used only in this chapter\n \n-   function P_Exception_Handler  return Node_Id;\n-   function P_Exception_Choice   return Node_Id;\n+   function P_Exception_Handler return Node_Id;\n+   function P_Exception_Choice  return Node_Id;\n \n    ---------------------------------\n    -- 11.1  Exception Declaration --"}, {"sha": "2a5e66002eaac047c3e5dee772fe85157218a0f2", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "patch": "@@ -3686,12 +3686,6 @@ package body Sem_Ch12 is\n \n       Instantiation_Node := N;\n \n-      --  Turn off style checking in instances. If the check is enabled on the\n-      --  generic unit, a warning in an instance would just be noise. If not\n-      --  enabled on the generic, then a warning in an instance is just wrong.\n-\n-      Style_Check := False;\n-\n       --  Case of instantiation of a generic package\n \n       if Nkind (N) = N_Package_Instantiation then\n@@ -3724,6 +3718,12 @@ package body Sem_Ch12 is\n \n       Preanalyze_Actuals (N, Act_Decl_Id);\n \n+      --  Turn off style checking in instances. If the check is enabled on the\n+      --  generic unit, a warning in an instance would just be noise. If not\n+      --  enabled on the generic, then a warning in an instance is just wrong.\n+\n+      Style_Check := False;\n+\n       Init_Env;\n       Env_Installed := True;\n "}, {"sha": "b4319f11fe164e57beb77054c3d9997ab5463eb3", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582dbb53ac6d0bd46c1402584d2c4be0a34a040b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=582dbb53ac6d0bd46c1402584d2c4be0a34a040b", "patch": "@@ -11603,12 +11603,11 @@ package body Sem_Ch13 is\n \n       function Is_Type_Ref (N : Node_Id) return Boolean;\n       pragma Inline (Is_Type_Ref);\n-\n       --  Returns True if N is a reference to the type for the predicate in the\n       --  expression (i.e. if it is an identifier whose Chars field matches the\n       --  Nam given in the call). N must not be parenthesized, if the type name\n       --  appears in parens, this routine will return False.\n-\n+      --\n       --  The routine also returns True for function calls generated during the\n       --  expansion of comparison operators on strings, which are intended to\n       --  be legal in static predicates, and are converted into calls to array"}]}