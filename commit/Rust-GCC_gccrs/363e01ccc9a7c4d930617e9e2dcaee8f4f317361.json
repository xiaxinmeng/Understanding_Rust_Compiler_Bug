{"sha": "363e01ccc9a7c4d930617e9e2dcaee8f4f317361", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYzZTAxY2NjOWE3YzRkOTMwNjE3ZTllMmRjYWVlOGY0ZjMxNzM2MQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-12-09T15:11:26Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-12-09T15:11:26Z"}, "message": "re PR middle-end/46734 (ICE in create_tmp_var, at gimplify.c:505)\n\n2010-12-09  Martin Jambor  <mjambor@suse.cz>\n\n\tPR middle-end/46734\n\t* tree-sra.c (splice_param_accesses): Check that there are not\n\tmultiple ADDRESSABLE types.\n\n\t* testsuite/g++.dg/tree-ssa/pr46734.C: New test.\n\nFrom-SVN: r167639", "tree": {"sha": "a649156fc4ed815181f0260b8c18f60eca1a7c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a649156fc4ed815181f0260b8c18f60eca1a7c18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/363e01ccc9a7c4d930617e9e2dcaee8f4f317361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363e01ccc9a7c4d930617e9e2dcaee8f4f317361", "html_url": "https://github.com/Rust-GCC/gccrs/commit/363e01ccc9a7c4d930617e9e2dcaee8f4f317361", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b6606f2fa4e3a3992e7fcc4a026173232769cae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6606f2fa4e3a3992e7fcc4a026173232769cae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b6606f2fa4e3a3992e7fcc4a026173232769cae"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "47e2b866ef28a7f7b9a6e68da0cf39d53f48ea65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=363e01ccc9a7c4d930617e9e2dcaee8f4f317361", "patch": "@@ -1,3 +1,9 @@\n+2010-12-09  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/46734\n+\t* tree-sra.c (splice_param_accesses): Check that there are not\n+\tmultiple ADDRESSABLE types.\n+\n 2010-12-09  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/arc/arc.h (ASM_SPEC): Remove %{v}."}, {"sha": "eb32b497c5b161115660e0b8e697719cb3ea3e64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=363e01ccc9a7c4d930617e9e2dcaee8f4f317361", "patch": "@@ -1,3 +1,8 @@\n+2010-12-09  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/46734\n+\t* g++.dg/tree-ssa/pr46734.C: New test.\n+\n 2010-12-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR c++/44641"}, {"sha": "e95c620897490ec65d43edf66686ddf01354eab3", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr46734.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr46734.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr46734.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr46734.C?ref=363e01ccc9a7c4d930617e9e2dcaee8f4f317361", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fipa-sra\" } */\n+\n+struct A\n+{\n+  int *p;\n+  A() {p = (int *) -1;}\n+  ~A() {if (p && p != (int *) -1) *p = 0;}\n+};\n+\n+struct B\n+{\n+  A a;\n+  char data[23];\n+  B() : a() {data[0] = 0;}\n+};\n+\n+extern A ga;\n+extern int *gi;\n+extern void *gz;\n+extern B *gb;\n+\n+static int * __attribute__ ((noinline)) foo (B *b, void *z)\n+{\n+  __builtin_memcpy (gz, z, 28);\n+  ga = b->a;\n+  return b->a.p;\n+}\n+\n+int *bar (B *b, void *z)\n+{\n+  gb = b;\n+  return foo (b, z);\n+}"}, {"sha": "4330a17fc49ebc3116d48795b98ab2c92a02e65a", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363e01ccc9a7c4d930617e9e2dcaee8f4f317361/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=363e01ccc9a7c4d930617e9e2dcaee8f4f317361", "patch": "@@ -3587,7 +3587,10 @@ splice_param_accesses (tree parm, bool *ro_grp)\n \t  else if (ac2->size != access->size)\n \t    return NULL;\n \n-\t  if (access_precludes_ipa_sra_p (ac2))\n+\t  if (access_precludes_ipa_sra_p (ac2)\n+\t      || (ac2->type != access->type\n+\t\t  && (TREE_ADDRESSABLE (ac2->type)\n+\t\t      || TREE_ADDRESSABLE (access->type))))\n \t    return NULL;\n \n \t  modification |= ac2->write;"}]}