{"sha": "2fabf41e29b234852ef2d099977c27af9a24ec3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZhYmY0MWUyOWIyMzQ4NTJlZjJkMDk5OTc3YzI3YWY5YTI0ZWMzZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-23T09:47:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-23T09:47:13Z"}, "message": "[multiple changes]\n\n2013-04-23  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb, sem_res.adb, prj-tree.adb, prj-tree.ads: Minor\n\treformatting.\n\n2013-04-23  Pascal Obry  <obry@adacore.com>\n\n\t* xoscons.adb: Remove unused use clause, minor code clean-up.\n\nFrom-SVN: r198182", "tree": {"sha": "d37af54c35810e69eca39dff8f27afd13612dfa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d37af54c35810e69eca39dff8f27afd13612dfa5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fabf41e29b234852ef2d099977c27af9a24ec3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fabf41e29b234852ef2d099977c27af9a24ec3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fabf41e29b234852ef2d099977c27af9a24ec3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fabf41e29b234852ef2d099977c27af9a24ec3f/comments", "author": null, "committer": null, "parents": [{"sha": "dd4e47ab99609cdc7187ff284dff04e54cf4950d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4e47ab99609cdc7187ff284dff04e54cf4950d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4e47ab99609cdc7187ff284dff04e54cf4950d"}], "stats": {"total": 92, "additions": 56, "deletions": 36}, "files": [{"sha": "3c09dd07efb78e777578e9419e1fbac29cb5d434", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2fabf41e29b234852ef2d099977c27af9a24ec3f", "patch": "@@ -1,3 +1,12 @@\n+2013-04-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb, sem_res.adb, prj-tree.adb, prj-tree.ads: Minor\n+\treformatting.\n+\n+2013-04-23  Pascal Obry  <obry@adacore.com>\n+\n+\t* xoscons.adb: Remove unused use clause, minor code clean-up.\n+\n 2013-04-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.ads, sem_util.adb: Code cleanup for Is_Expression_Function"}, {"sha": "c1215216dbb0f9b6ae58a3039e54e945f72ec52e", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=2fabf41e29b234852ef2d099977c27af9a24ec3f", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                              P R J . T R E E                             --\n+--                             P R J . T R E E                              --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -279,7 +279,8 @@ package body Prj.Tree is\n \n    function Case_Insensitive\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Boolean is\n+      In_Tree : Project_Node_Tree_Ref) return Boolean\n+   is\n    begin\n       pragma Assert\n         (Present (Node)\n@@ -524,7 +525,8 @@ package body Prj.Tree is\n \n    function Directory_Of\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Path_Name_Type is\n+      In_Tree : Project_Node_Tree_Ref) return Path_Name_Type\n+   is\n    begin\n       pragma Assert\n         (Present (Node)\n@@ -539,7 +541,8 @@ package body Prj.Tree is\n \n    function End_Of_Line_Comment\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Name_Id is\n+      In_Tree : Project_Node_Tree_Ref) return Name_Id\n+   is\n       Zone : Project_Node_Id := Empty_Node;\n \n    begin\n@@ -960,7 +963,8 @@ package body Prj.Tree is\n \n    function Follows_Empty_Line\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Boolean is\n+      In_Tree : Project_Node_Tree_Ref) return Boolean\n+   is\n    begin\n       pragma Assert\n         (Present (Node)\n@@ -1005,14 +1009,14 @@ package body Prj.Tree is\n    ----------------\n \n    procedure Initialize\n-     (Self      : out Environment;\n-      Flags     : Processing_Flags) is\n+     (Self  : out Environment;\n+      Flags : Processing_Flags)\n+   is\n    begin\n       --  Do not reset the external references, in case we are reloading a\n       --  project, since we want to preserve the current environment. But we\n       --  still need to ensure that the external references are properly\n       --  initialized.\n-      --  Prj.Ext.Reset (Tree.External);\n \n       Prj.Ext.Initialize (Self.External);\n \n@@ -1025,7 +1029,8 @@ package body Prj.Tree is\n \n    procedure Initialize_And_Copy\n      (Self      : out Environment;\n-      Copy_From : Environment) is\n+      Copy_From : Environment)\n+   is\n    begin\n       Self.Flags := Copy_From.Flags;\n       Prj.Ext.Initialize (Self.External, Copy_From => Copy_From.External);\n@@ -1079,7 +1084,8 @@ package body Prj.Tree is\n \n    function Is_Extending_All\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Boolean is\n+      In_Tree : Project_Node_Tree_Ref) return Boolean\n+   is\n    begin\n       pragma Assert\n         (Present (Node)\n@@ -1096,7 +1102,8 @@ package body Prj.Tree is\n \n    function Is_Not_Last_In_List\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Boolean is\n+      In_Tree : Project_Node_Tree_Ref) return Boolean\n+   is\n    begin\n       pragma Assert\n         (Present (Node)\n@@ -1155,7 +1162,8 @@ package body Prj.Tree is\n \n    function Kind_Of\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Project_Node_Kind is\n+      In_Tree : Project_Node_Tree_Ref) return Project_Node_Kind\n+   is\n    begin\n       pragma Assert (Present (Node));\n       return In_Tree.Project_Nodes.Table (Node).Kind;\n@@ -1167,7 +1175,8 @@ package body Prj.Tree is\n \n    function Location_Of\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Source_Ptr is\n+      In_Tree : Project_Node_Tree_Ref) return Source_Ptr\n+   is\n    begin\n       pragma Assert (Present (Node));\n       return In_Tree.Project_Nodes.Table (Node).Location;\n@@ -1179,7 +1188,8 @@ package body Prj.Tree is\n \n    function Name_Of\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Name_Id is\n+      In_Tree : Project_Node_Tree_Ref) return Name_Id\n+   is\n    begin\n       pragma Assert (Present (Node));\n       return In_Tree.Project_Nodes.Table (Node).Name;\n@@ -1207,7 +1217,8 @@ package body Prj.Tree is\n \n    function Next_Comment\n      (Node    : Project_Node_Id;\n-      In_Tree : Project_Node_Tree_Ref) return Project_Node_Id is\n+      In_Tree : Project_Node_Tree_Ref) return Project_Node_Id\n+   is\n    begin\n       pragma Assert\n         (Present (Node)\n@@ -1648,8 +1659,8 @@ package body Prj.Tree is\n                      Follows_Empty_Line        => Empty_Line,\n                      Is_Followed_By_Empty_Line => False);\n \n-               --  Otherwise, it is an end of line comment. If there is\n-               --  an end of line node specified, associate the comment with\n+               --  Otherwise, it is an end of line comment. If there is an\n+               --  end of line node specified, associate the comment with\n                --  this node.\n \n                elsif Present (End_Of_Line_Node) then\n@@ -2038,7 +2049,6 @@ package body Prj.Tree is\n      (Node    : Project_Node_Id;\n       In_Tree : Project_Node_Tree_Ref;\n       To      : Project_Node_Id)\n-\n    is\n       Zone : constant Project_Node_Id := Comment_Zones_Of (Node, In_Tree);\n    begin"}, {"sha": "0d585a3afe48f6a584156f86d4d30a22d6ddb907", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=2fabf41e29b234852ef2d099977c27af9a24ec3f", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                              P R J . T R E E                             --\n+--                             P R J . T R E E                              --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,8 +61,8 @@ package Prj.Tree is\n    end record;\n \n    procedure Initialize\n-     (Self      : out Environment;\n-      Flags     : Processing_Flags);\n+     (Self  : out Environment;\n+      Flags : Processing_Flags);\n    --  Initialize a new environment\n \n    procedure Initialize_And_Copy"}, {"sha": "db6ecf7ecfb82d8dd7a23a7c3930bc612743a565", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=2fabf41e29b234852ef2d099977c27af9a24ec3f", "patch": "@@ -5376,19 +5376,19 @@ package body Sem_Res is\n \n       Check_Internal_Protected_Use (N, Nam);\n \n-      --  Freeze the subprogram name if not in a spec-expression. Note that we\n-      --  freeze procedure calls as well as function calls. Procedure calls are\n-      --  not frozen according to the rules (RM 13.14(14)) because it is\n-      --  impossible to have a procedure call to a non-frozen procedure in pure\n-      --  Ada, but in the code that we generate in the expander, this rule\n-      --  needs extending because we can generate procedure calls that need\n-      --  freezing.\n+      --  Freeze the subprogram name if not in a spec-expression. Note that\n+      --  we freeze procedure calls as well as function calls. Procedure calls\n+      --  are not frozen according to the rules (RM 13.14(14)) because it is\n+      --  impossible to have a procedure call to a non-frozen procedure in\n+      --  pure Ada, but in the code that we generate in the expander, this\n+      --  rule needs extending because we can generate procedure calls that\n+      --  need freezing.\n \n       --  In Ada 2012, expression functions may be called within pre/post\n       --  conditions of subsequent functions or expression functions. Such\n       --  calls do not freeze when they appear within generated bodies,\n       --  (including the body of another expression function) which would\n-      --  place the freeze node in the wrong scope.  An expression function\n+      --  place the freeze node in the wrong scope. An expression function\n       --  is frozen in the usual fashion, by the appearance of a real body,\n       --  or at the end of a declarative part.\n "}, {"sha": "199c55121b8addbae246a64c495155c75cb23959", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2fabf41e29b234852ef2d099977c27af9a24ec3f", "patch": "@@ -8137,8 +8137,9 @@ package body Sem_Util is\n                  (Present (Corresponding_Body (Decl))\n                    and then\n                      Nkind (Original_Node\n-                        (Unit_Declaration_Node (Corresponding_Body (Decl))))\n-                    = N_Expression_Function));\n+                             (Unit_Declaration_Node\n+                               (Corresponding_Body (Decl)))) =\n+                                  N_Expression_Function));\n       end if;\n    end Is_Expression_Function;\n "}, {"sha": "2aafe08769ac1dba5d45401b1e6cf5268cf26021", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fabf41e29b234852ef2d099977c27af9a24ec3f/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=2fabf41e29b234852ef2d099977c27af9a24ec3f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2008-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2008-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,7 +55,6 @@ with XUtil; use XUtil;\n procedure XOSCons is\n \n    use Ada.Strings;\n-   use ASCII;\n \n    Unit_Name : constant String := Argument (1);\n    Tmpl_Name : constant String := Unit_Name & \"-tmplt\";\n@@ -442,6 +441,7 @@ procedure XOSCons is\n       Ada_Ofile, C_Ofile : Sfile;\n       Current_Line       : in out Integer)\n    is\n+\n       function Get_Value (Name : String) return Int_Value_Type;\n       --  Returns the value of the variable Name\n \n@@ -516,7 +516,7 @@ procedure XOSCons is\n          Current_Line := Current_Line + 1;\n          exit when Line (1 .. Last) = \"@END_IF\";\n \n-         if Line (1 .. 4) = \"@IF \" then\n+         if Last > 4 and then Line (1 .. 4) = \"@IF \" then\n             Parse_Cond\n               (Line (1 .. Last), Res,\n                Tmpl_File, Ada_Ofile, C_Ofile, Current_Line);"}]}