{"sha": "faa9eb19777eaf54cdc8c2bac01b9d4217e524bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFhOWViMTk3NzdlYWY1NGNkYzhjMmJhYzAxYjlkNDIxN2U1MjRiZg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "crux@pool.informatik.rwth-aachen.de", "date": "1998-12-04T13:09:39Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1998-12-04T13:09:39Z"}, "message": "* tm.texi (SMALL_REGISTER_CLASSES): Make description match reality.\n\nFrom-SVN: r24092", "tree": {"sha": "70c98a19fbbf41025fff502c5bcd05dd63b55f6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70c98a19fbbf41025fff502c5bcd05dd63b55f6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faa9eb19777eaf54cdc8c2bac01b9d4217e524bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa9eb19777eaf54cdc8c2bac01b9d4217e524bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faa9eb19777eaf54cdc8c2bac01b9d4217e524bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa9eb19777eaf54cdc8c2bac01b9d4217e524bf/comments", "author": null, "committer": null, "parents": [{"sha": "4dab1f3e9f46e25c08a6f73cfe18ac81865917f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dab1f3e9f46e25c08a6f73cfe18ac81865917f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dab1f3e9f46e25c08a6f73cfe18ac81865917f4"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d8bf2060a2b652e7c096461eb31c704c6dd3d108", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa9eb19777eaf54cdc8c2bac01b9d4217e524bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa9eb19777eaf54cdc8c2bac01b9d4217e524bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=faa9eb19777eaf54cdc8c2bac01b9d4217e524bf", "patch": "@@ -1,5 +1,7 @@\n Fri Dec  4 20:15:57 1998  Bernd Schmidt  <crux@pool.informatik.rwth-aachen.de>\n \n+\t* tm.texi (SMALL_REGISTER_CLASSES): Make description match reality.\n+\n \t* final.c (cleanup_subreg_operands): Delete some unused code.\n \n \t* recog.h (MAX_RECOG_ALTERNATIVES): New macro."}, {"sha": "738ec162bcf9c57f75015ca8634ca6a66e12b876", "filename": "gcc/tm.texi", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa9eb19777eaf54cdc8c2bac01b9d4217e524bf/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa9eb19777eaf54cdc8c2bac01b9d4217e524bf/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=faa9eb19777eaf54cdc8c2bac01b9d4217e524bf", "patch": "@@ -2022,17 +2022,15 @@ is @code{BITS_PER_WORD} bits wide is correct for your machine.\n \n @findex SMALL_REGISTER_CLASSES\n @item SMALL_REGISTER_CLASSES\n-Normally the compiler avoids choosing registers that have been\n-explicitly mentioned in the rtl as spill registers (these registers are\n-normally those used to pass parameters and return values).  However,\n-some machines have so few registers of certain classes that there\n-would not be enough registers to use as spill registers if this were\n-done.\n+On some machines, it is risky to let hard registers live across arbitrary\n+insns.  Typically, these machines have instructions that require values\n+to be in specific registers (like an accumulator), and reload will fail\n+if the required hard register is used for another purpose across such an\n+insn.\n \n Define @code{SMALL_REGISTER_CLASSES} to be an expression with a non-zero\n value on these machines.  When this macro has a non-zero value, the\n-compiler allows registers explicitly used in the rtl to be used as spill\n-registers but avoids extending the lifetime of these registers.\n+compiler will try to minimize the lifetime of hard registers.\n \n It is always safe to define this macro with a non-zero value, but if you\n unnecessarily define it, you will reduce the amount of optimizations"}]}