{"sha": "afdac905840a1d37db1ba2510bc3ecee7b307d8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZkYWM5MDU4NDBhMWQzN2RiMWJhMjUxMGJjM2VjZWU3YjMwN2Q4Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "1999-12-14T12:53:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "1999-12-14T12:53:39Z"}, "message": "xm-sp64.h: Avoid using __sparc_v9__ when testing for sparc64.\n\n\n\t* config/sparc/xm-sp64.h: Avoid using __sparc_v9__ when testing\n\tfor sparc64.\n\t* config/sparc/sparc.h: Likewise.\n\t* config/sparc/xm-sysv4-64.h: Likewise.\n\t* config/float-sparc.h: Likewise.\n\t* glimits.h: Likewise.\n\t* longlong.h: Likewise.\n\nFrom-SVN: r30917", "tree": {"sha": "c79c7b3df215c1d8b66e7b99a0b774586e6ed66a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c79c7b3df215c1d8b66e7b99a0b774586e6ed66a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afdac905840a1d37db1ba2510bc3ecee7b307d8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afdac905840a1d37db1ba2510bc3ecee7b307d8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afdac905840a1d37db1ba2510bc3ecee7b307d8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afdac905840a1d37db1ba2510bc3ecee7b307d8c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a330e73b144e71ac85ba571f643a1bbc19794d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a330e73b144e71ac85ba571f643a1bbc19794d08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a330e73b144e71ac85ba571f643a1bbc19794d08"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "5dbd9a695dc69eef954bdf71721a15573b2874cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afdac905840a1d37db1ba2510bc3ecee7b307d8c", "patch": "@@ -39,6 +39,14 @@ Tue Dec 14 12:07:29 MET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n \tmacros on TARGET_ARCH32. sparc.h has macros good enough for sparc64.\n \t* config/sparc/sol2.h (MACHINE_STATE_*): Likewise.\n \n+\t* config/sparc/xm-sp64.h: Avoid using __sparc_v9__ when testing\n+\tfor sparc64.\n+\t* config/sparc/sparc.h: Likewise.\n+\t* config/sparc/xm-sysv4-64.h: Likewise.\n+\t* config/float-sparc.h: Likewise.\n+\t* glimits.h: Likewise.\n+\t* longlong.h: Likewise.\n+\n 1999-12-14  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* combine.c (combine_simplify_rtx): Don't make shared rtl."}, {"sha": "292019835b69c27306c6070182e7813041020b6d", "filename": "gcc/config/float-sparc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fconfig%2Ffloat-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fconfig%2Ffloat-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-sparc.h?ref=afdac905840a1d37db1ba2510bc3ecee7b307d8c", "patch": "@@ -66,7 +66,7 @@\n #undef DBL_MAX_10_EXP\n #define DBL_MAX_10_EXP 308\n \n-#if defined(__sparc_v9__) || defined(__sparcv9) || defined(__arch64__)\n+#if defined(__sparcv9) || defined(__arch64__)\n \n    /* Number of base-FLT_RADIX digits in the significand of a long double */\n #undef LDBL_MANT_DIG"}, {"sha": "b38b6f3c3d1b6c1ba18121ac2d6d343355210c53", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=afdac905840a1d37db1ba2510bc3ecee7b307d8c", "patch": "@@ -35,11 +35,11 @@ Boston, MA 02111-1307, USA.  */\n    runtime selection.  */\n #ifdef SPARC_BI_ARCH\n #ifdef IN_LIBGCC2\n-#if defined(__sparcv9) || defined(__sparcv_v9) || defined(__arch64__)\n+#if defined(__sparcv9) || defined(__arch64__)\n #define TARGET_ARCH32 0\n #else\n #define TARGET_ARCH32 1\n-#endif /* V9 sparc */\n+#endif /* sparc64 */\n #else\n #define TARGET_ARCH32 (! TARGET_64BIT)\n #endif /* IN_LIBGCC2 */"}, {"sha": "2f084331ce230d6d6b6ac47476ffe9f9a7716951", "filename": "gcc/config/sparc/xm-sp64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fconfig%2Fsparc%2Fxm-sp64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fconfig%2Fsparc%2Fxm-sp64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fxm-sp64.h?ref=afdac905840a1d37db1ba2510bc3ecee7b307d8c", "patch": "@@ -21,7 +21,7 @@ Boston, MA 02111-1307, USA.  */\n #include <sparc/xm-sparc.h>\n \n /* This describes the machine the compiler is hosted on.  */\n-#if defined(__arch64__) || defined(__sparc_v9__) || defined(__sparcv9)\n+#if defined(__arch64__) || defined(__sparcv9)\n #undef HOST_BITS_PER_LONG\n #define HOST_BITS_PER_LONG 64\n #endif"}, {"sha": "4ff56b90deadc8d17846f0061dabc476c4ba933c", "filename": "gcc/config/sparc/xm-sysv4-64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fconfig%2Fsparc%2Fxm-sysv4-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fconfig%2Fsparc%2Fxm-sysv4-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fxm-sysv4-64.h?ref=afdac905840a1d37db1ba2510bc3ecee7b307d8c", "patch": "@@ -21,7 +21,7 @@ Boston, MA 02111-1307, USA.  */\n #include <sparc/xm-sysv4.h>\n \n /* This describes the machine the compiler is hosted on.  */\n-#if defined(__arch64__) || defined(__sparc_v9__) || defined(__sparcv9)\n+#if defined(__arch64__) || defined(__sparcv9)\n #undef HOST_BITS_PER_LONG\n #define HOST_BITS_PER_LONG 64\n #endif"}, {"sha": "93e7b8d69ef658daa62495b8ac84c9c0a7ad69bc", "filename": "gcc/glimits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fglimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Fglimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglimits.h?ref=afdac905840a1d37db1ba2510bc3ecee7b307d8c", "patch": "@@ -64,7 +64,7 @@\n /* Minimum and maximum values a `signed long int' can hold.\n    (Same as `int').  */\n #ifndef __LONG_MAX__\n-#if defined (__alpha__) || defined (__sparc_v9__) || defined (__sparcv9)\n+#if defined (__alpha__) || (defined (__sparc__) && defined(__arch64__)) || defined (__sparcv9)\n #define __LONG_MAX__ 9223372036854775807L\n #else\n #define __LONG_MAX__ 2147483647L"}, {"sha": "6c91d4d4754a32e62bf67f77f13d41f274b8690d", "filename": "gcc/longlong.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afdac905840a1d37db1ba2510bc3ecee7b307d8c/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=afdac905840a1d37db1ba2510bc3ecee7b307d8c", "patch": "@@ -993,8 +993,8 @@ UDItype __umulsidi3 (USItype, USItype);\n #define UMUL_TIME 5\n #endif\n \n-#if defined (__sparc__) && !defined (__sparc_v9__) && !defined(__arch64__) \\\n-    && !defined(__sparc_v9) && W_TYPE_SIZE == 32\n+#if defined (__sparc__) && !defined (__arch64__) && !defined (__sparcv9) \\\n+    && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"addcc %r4,%5,%1\n \taddx %r2,%3,%0\"\t\t\t\t\t\t\t\\\n@@ -1180,10 +1180,10 @@ UDItype __umulsidi3 (USItype, USItype);\n #define UDIV_TIME (3+7*32)\t/* 7 instructions/iteration. 32 iterations. */\n #endif /* __sparclite__ */\n #endif /* __sparc_v8__ */\n-#endif /* __sparc__ */\n+#endif /* sparc32 */\n \n-#if (defined (__sparc_v9__) || (defined (__sparc__) && defined (__arch64__)) \\\n-    || defined (__sparcv9)) && W_TYPE_SIZE == 64\n+#if ((defined (__sparc__) && defined (__arch64__)) || defined (__sparcv9)) \\\n+    && W_TYPE_SIZE == 64\n #define add_ssaaaa(sh, sl, ah, al, bh, bl)\t\t\t\t\\\n   __asm__ (\"addcc %r4,%5,%1\n   \t    add %r2,%3,%0\n@@ -1246,7 +1246,7 @@ UDItype __umulsidi3 (USItype, USItype);\n   } while (0)\n #define UMUL_TIME 96\n #define UDIV_TIME 230\n-#endif /* __sparc_v9__ */\n+#endif /* sparc64 */\n \n #if defined (__vax__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\"}]}