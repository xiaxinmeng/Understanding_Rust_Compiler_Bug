{"sha": "f82da7d270d2bf27905b338f28622c3546ad9306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgyZGE3ZDI3MGQyYmYyNzkwNWIzMzhmMjg2MjJjMzU0NmFkOTMwNg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-12-19T02:45:11Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-12-19T02:45:11Z"}, "message": "(simplify_rtx, case SUBREG): For SUBREG of a constant,\n\nuse <= instead of < when comparing mode sizes.\n(force_to_mode, case NOT): Use full mask inside\tthe NOT operation.\n\nFrom-SVN: r10814", "tree": {"sha": "0c17c1f95313f2b964e496aa7dea2ea2e1a30f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c17c1f95313f2b964e496aa7dea2ea2e1a30f67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f82da7d270d2bf27905b338f28622c3546ad9306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f82da7d270d2bf27905b338f28622c3546ad9306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f82da7d270d2bf27905b338f28622c3546ad9306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f82da7d270d2bf27905b338f28622c3546ad9306/comments", "author": null, "committer": null, "parents": [{"sha": "e24b8776094a482b0e9bdcadc9a697aca06e733a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e24b8776094a482b0e9bdcadc9a697aca06e733a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e24b8776094a482b0e9bdcadc9a697aca06e733a"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "d37fcb223e08a8135aada845b37c87b77c1c1381", "filename": "gcc/combine.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f82da7d270d2bf27905b338f28622c3546ad9306/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f82da7d270d2bf27905b338f28622c3546ad9306/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=f82da7d270d2bf27905b338f28622c3546ad9306", "patch": "@@ -3307,7 +3307,7 @@ simplify_rtx (x, op0_mode, last, in_dest)\n \t always valid.  On a big-endian machine, it's valid\n \t only if the constant's mode fits in one word.  */\n       if (CONSTANT_P (SUBREG_REG (x)) && subreg_lowpart_p (x)\n-\t  && GET_MODE_SIZE (mode) < GET_MODE_SIZE (op0_mode)\n+\t  && GET_MODE_SIZE (mode) <= GET_MODE_SIZE (op0_mode)\n \t  && (! WORDS_BIG_ENDIAN\n \t      || GET_MODE_BITSIZE (op0_mode) <= BITS_PER_WORD))\n \treturn gen_lowpart_for_combine (mode, SUBREG_REG (x));\n@@ -6171,6 +6171,10 @@ force_to_mode (x, mode, mask, reg, just_select)\n \t  return force_to_mode (x, mode, mask, reg, next_select);\n \t}\n \n+      /* (and (not FOO) CONST) is (not (or FOO (not CONST))), so we must\n+\t use the full mask inside the NOT.  */\n+      mask = fuller_mask;\n+\n     unop:\n       op0 = gen_lowpart_for_combine (op_mode,\n \t\t\t\t     force_to_mode (XEXP (x, 0), mode, mask,"}]}