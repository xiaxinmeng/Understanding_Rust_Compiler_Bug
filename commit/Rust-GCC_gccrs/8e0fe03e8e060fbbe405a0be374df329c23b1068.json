{"sha": "8e0fe03e8e060fbbe405a0be374df329c23b1068", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUwZmUwM2U4ZTA2MGZiYmU0MDVhMGJlMzc0ZGYzMjljMjNiMTA2OA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-12-17T11:51:14Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-12-17T11:51:14Z"}, "message": "ArrayList.java (data): Declare transient.\n\n\t* java/util/ArrayList.java (data): Declare transient.\n\t(serialPersistantFields): Removed.\n\t(readObject): Use defaultReadObject(), not readFields().\n\t(writeObject): Use defaultWriteObject(), not writeFields().\n\nFrom-SVN: r38328", "tree": {"sha": "32d4ea657f649cf017d02cbe381d6d234de4d561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32d4ea657f649cf017d02cbe381d6d234de4d561"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e0fe03e8e060fbbe405a0be374df329c23b1068", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e0fe03e8e060fbbe405a0be374df329c23b1068", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e0fe03e8e060fbbe405a0be374df329c23b1068", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e0fe03e8e060fbbe405a0be374df329c23b1068/comments", "author": null, "committer": null, "parents": [{"sha": "b372743a30cb466bd15a4a44a8e1981e4026052f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b372743a30cb466bd15a4a44a8e1981e4026052f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b372743a30cb466bd15a4a44a8e1981e4026052f"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "b19f7dcb163365e0ef11a859cebfc73124fb2d18", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e0fe03e8e060fbbe405a0be374df329c23b1068/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e0fe03e8e060fbbe405a0be374df329c23b1068/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8e0fe03e8e060fbbe405a0be374df329c23b1068", "patch": "@@ -1,3 +1,10 @@\n+2000-12-17  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* java/util/ArrayList.java (data): Declare transient.\n+\t(serialPersistantFields): Removed.\n+\t(readObject): Use defaultReadObject(), not readFields().\n+\t(writeObject): Use defaultWriteObject(), not writeFields().\n+\n 2000-12-17  Jeff Sturm  <jeff.sturm@commerceone.com>\n \n \t* java/util/Hashtable.java (put): Remove `last' variable."}, {"sha": "ba9c2d144b30706e1559cd7eb3a0017c953276f3", "filename": "libjava/java/util/ArrayList.java", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e0fe03e8e060fbbe405a0be374df329c23b1068/libjava%2Fjava%2Futil%2FArrayList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e0fe03e8e060fbbe405a0be374df329c23b1068/libjava%2Fjava%2Futil%2FArrayList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FArrayList.java?ref=8e0fe03e8e060fbbe405a0be374df329c23b1068", "patch": "@@ -33,17 +33,14 @@\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream.GetField;\n-import java.io.ObjectOutputStream.PutField;\n-import java.io.ObjectStreamField;\n \n /**\n  * An array-backed implementation of the List interface.  ArrayList\n  * performs well on simple tasks:  random access into a list, appending\n  * to or removing from the end of a list, checking the size, &c.\n  *\n  * @author        Jon A. Zeppieri\n- * @version       $Id: ArrayList.java,v 1.4 2000/11/22 11:59:59 bryce Exp $\n+ * @version       $Id: ArrayList.java,v 1.12 2000/12/17 07:54:39 cbj Exp $\n  * @see           java.util.AbstractList\n  * @see           java.util.List\n  */\n@@ -57,11 +54,7 @@ public class ArrayList extends AbstractList\n   int size;\n \n   /** where the data is stored */\n-  Object[] data;\n-\n-  /** used for serialization -- denotes which fields are serialized */\n-  private static final ObjectStreamField[] serialPersistentFields =\n-    { new ObjectStreamField(\"size\", int.class) };\n+  transient Object[] data;\n \n   /** \n    * Construct a new ArrayList with the supplied initial capacity. \n@@ -398,9 +391,8 @@ private void writeObject(ObjectOutputStream out) throws IOException\n   {\n     int i;\n \n-    ObjectOutputStream.PutField fields = out.putFields();\n-    fields.put(\"size\", size);\n-    out.writeFields();\n+    // The 'size' field.\n+    out.defaultWriteObject();\n \n     // FIXME: Do we really want to serialize unused list entries??\n     out.writeInt(data.length);\n@@ -414,8 +406,8 @@ private void readObject(ObjectInputStream in)\n     int i;\n     int capacity;\n \n-    ObjectInputStream.GetField fields = in.readFields();\n-    size = fields.get(\"size\", 0);\n+    // the `size' field.\n+    in.defaultReadObject();\n \n     capacity = in.readInt();\n     data = new Object[capacity];"}]}