{"sha": "6c33409079616051a31b9c7546d22dc59a44f24e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMzMzQwOTA3OTYxNjA1MWEzMWI5Yzc1NDZkMjJkYzU5YTQ0ZjI0ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-08-20T18:40:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-08-20T18:40:56Z"}, "message": "i386.md (ashift RSP splitter): Remove splitter.\n\n\t* config/i386/i386.md (ashift RSP splitter): Remove splitter.\n\t(pro_epilogue_adjust_stack_di_2): Use \"l\" constraint for\n\talternative 1 of operand 2.\n\nFrom-SVN: r163414", "tree": {"sha": "5ea5a409389c895f0c50380b99cb1ab2c8495997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ea5a409389c895f0c50380b99cb1ab2c8495997"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c33409079616051a31b9c7546d22dc59a44f24e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c33409079616051a31b9c7546d22dc59a44f24e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c33409079616051a31b9c7546d22dc59a44f24e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c33409079616051a31b9c7546d22dc59a44f24e/comments", "author": null, "committer": null, "parents": [{"sha": "561da6bc0b57495cb390311326598b0558d23dd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561da6bc0b57495cb390311326598b0558d23dd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/561da6bc0b57495cb390311326598b0558d23dd3"}], "stats": {"total": 41, "additions": 11, "deletions": 30}, "files": [{"sha": "3674805174866ce7fd1d5e830c029431149bedbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c33409079616051a31b9c7546d22dc59a44f24e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c33409079616051a31b9c7546d22dc59a44f24e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c33409079616051a31b9c7546d22dc59a44f24e", "patch": "@@ -1,8 +1,14 @@\n+2010-08-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (ashift RSP splitter): Remove splitter.\n+\t(pro_epilogue_adjust_stack_di_2): Use \"l\" constraint for\n+\talternative 1 of operand 2.\n+\n 2010-08-20  Jakub Jelinek  <jakub@redhat.com>\n \t    Paolo Bonzini  <bonzini@gnu.org>\n \n \t* simplify-rtx.c (simplify_unary_operation_1): Optimize\n-\t(sign_extend (zero_extend ()) and\n+\t(sign_extend (zero_extend (...)) and\n \t({sign,zero}_extend (lshiftrt (ashift X (const_int I)) (const_int I))).\n \n 2010-08-20  Jakub Jelinek  <jakub@redhat.com>\n@@ -13,14 +19,13 @@\n \n 2010-08-20  Iain Sandoe  <iains@gcc.gnu.org>\n \n-\t* config/rs6000/darwin.h (LIB_SPEC): New. Provide save/restFP by \n+\t* config/rs6000/darwin.h (LIB_SPEC): New. Provide saveFP/restFP by\n \tlinking libgcc.a.\n-\t\n+\n 2010-08-20  Jakub Jelinek  <jakub@redhat.com>\n \t    Michael Matz  <matz@suse.de>\n \n-\t* tree-ssa-address.c (tree_mem_ref_addr): Convert offset to\n-\tsizetype.\n+\t* tree-ssa-address.c (tree_mem_ref_addr): Convert offset to sizetype.\n \n 2010-08-20  Nathan Froyd  <froydnj@codesourcery.com>\n "}, {"sha": "4d4e4c9c99265b057f14b9e0c2138d28c1e1a4c6", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c33409079616051a31b9c7546d22dc59a44f24e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c33409079616051a31b9c7546d22dc59a44f24e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6c33409079616051a31b9c7546d22dc59a44f24e", "patch": "@@ -5935,10 +5935,6 @@\n \t(const_string \"*\")))\n    (set_attr \"mode\" \"HI\")])\n \n-;; %%% After Dave's SUBREG_BYTE stuff goes in, re-enable incb %ah\n-;; type optimizations enabled by define-splits.  This is not important\n-;; for PII, and in fact harmful because of partial register stalls.\n-\n (define_insn \"*addhi_1_lea\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,rm,r,r\")\n \t(plus:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0,r,r\")\n@@ -9637,26 +9633,6 @@\n   operands[2] = gen_int_mode (1 << INTVAL (operands[2]), DImode);\n })\n \n-;; Rare case of shifting RSP is handled by generating move and shift\n-(define_split\n-  [(set (match_operand 0 \"register_operand\" \"\")\n-\t(ashift (match_operand 1 \"register_operand\" \"\")\n-                (match_operand:QI 2 \"const_int_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"reload_completed\n-   && true_regnum (operands[0]) != true_regnum (operands[1])\"\n-  [(const_int 0)]\n-{\n-  rtx pat, clob;\n-  emit_move_insn (operands[0], operands[1]);\n-  pat = gen_rtx_SET (VOIDmode, operands[0],\n-\t\t     gen_rtx_ASHIFT (GET_MODE (operands[0]),\n-\t\t\t\t     operands[0], operands[2]));\n-  clob = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (CCmode, FLAGS_REG));\n-  emit_insn (gen_rtx_PARALLEL (VOIDmode, gen_rtvec (2, pat, clob)));\n-  DONE;\n-})\n-\n ;; This pattern can't accept a variable shift count, since shifts by\n ;; zero don't affect the flags.  We assume that shifts by constant\n ;; zero are optimized away.\n@@ -16411,7 +16387,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(plus:DI (match_operand:DI 1 \"register_operand\" \"0,r\")\n \t\t (match_operand:DI 3 \"immediate_operand\" \"i,i\")))\n-   (use (match_operand:DI 2 \"register_operand\" \"r,r\"))\n+   (use (match_operand:DI 2 \"register_operand\" \"r,l\"))\n    (clobber (reg:CC FLAGS_REG))\n    (clobber (mem:BLK (scratch)))]\n   \"TARGET_64BIT\""}]}