{"sha": "633e2687a950227587635110c118ee14ae08d671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMzZTI2ODdhOTUwMjI3NTg3NjM1MTEwYzExOGVlMTRhZTA4ZDY3MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-17T12:08:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-17T12:08:31Z"}, "message": "Initial revision\n\nFrom-SVN: r10786", "tree": {"sha": "4eb364eb67b02afe23ce29973b868318c6be5644", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb364eb67b02afe23ce29973b868318c6be5644"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/633e2687a950227587635110c118ee14ae08d671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/633e2687a950227587635110c118ee14ae08d671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/633e2687a950227587635110c118ee14ae08d671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/633e2687a950227587635110c118ee14ae08d671/comments", "author": null, "committer": null, "parents": [{"sha": "7548d1adb83c2f1a1087d845ffa2fc2c36b98827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7548d1adb83c2f1a1087d845ffa2fc2c36b98827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7548d1adb83c2f1a1087d845ffa2fc2c36b98827"}], "stats": {"total": 231, "additions": 231, "deletions": 0}, "files": [{"sha": "667059c1dda38a9ea86c11f40f8650c8fc11e031", "filename": "gcc/fp-test.c", "status": "added", "additions": 231, "deletions": 0, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/633e2687a950227587635110c118ee14ae08d671/gcc%2Ffp-test.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/633e2687a950227587635110c118ee14ae08d671/gcc%2Ffp-test.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffp-test.c?ref=633e2687a950227587635110c118ee14ae08d671", "patch": "@@ -0,0 +1,231 @@\n+/* fp-test.c - Check that all floating-point operations are available.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Contributed by Ronald F. Guilmette <rfg@monkeys.com>.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This is a trivial test program which may be useful to people who are\n+   porting the GCC or G++ compilers to a new system.  The intent here is\n+   merely to check that all floating-point operations have been provided\n+   by the port. (Note that I say ``provided'' rather than ``implemented''.)\n+\n+   To use this file, simply compile it (with GCC or G++) and then try to\n+   link it in the normal way (also using GCC or G++ respectively).  If\n+   all of the floating -point operations (including conversions) have\n+   been provided, then this file will link without incident.  If however\n+   one or more of the primitive floating-point operations have not been\n+   properly provided, you will get link-time errors indicating which\n+   floating-point operations are unavailable.\n+\n+   This file will typically be used when porting the GNU compilers to\n+   some system which lacks floating-point hardware, and for which\n+   software emulation routines (for FP ops) are needed in order to\n+   complete the port.  */\n+\n+#if 0\n+#include <math.h>\n+#endif\n+\n+extern double acos (double);\n+extern double asin (double);\n+extern double atan (double);\n+extern double atan2 (double, double);\n+extern double cos (double);\n+extern double sin (double);\n+extern double tan (double);\n+extern double cosh (double);\n+extern double sinh (double);\n+extern double tanh (double);\n+extern double exp (double);\n+extern double frexp (double, int *);\n+extern double ldexp (double, int);\n+extern double log (double);\n+extern double log10 (double);\n+extern double modf (double, double *);\n+extern double pow (double, double);\n+extern double sqrt (double);\n+extern double ceil (double);\n+extern double fabs (double);\n+extern double floor (double);\n+extern double fmod (double, double);\n+\n+int i1, i2 = 2;\n+\n+volatile signed char sc;\n+volatile unsigned char uc;\n+\n+volatile signed short ss;\n+volatile unsigned short us;\n+\n+volatile signed int si;\n+volatile unsigned int ui;\n+\n+volatile signed long sl;\n+volatile unsigned long ul;\n+\n+volatile float f1 = 1.0, f2 = 1.0, f3 = 1.0;\n+volatile double d1 = 1.0, d2 = 1.0, d3 = 1.0;\n+volatile long double D1 = 1.0, D2 = 1.0, D3 = 1.0;\n+\n+int\n+main ()\n+{\n+  /* TYPE: float */\n+\n+  f1 = -f2;\n+  f1 = f2 + f3;\n+  f1 = f2 - f3;\n+  f1 = f2 * f3;\n+  f1 = f2 / f3;\n+  f1 += f2;\n+  f1 -= f2;\n+  f1 *= f2;\n+  f1 /= f2;\n+\n+  si = f1 == f2;\n+  si = f1 != f2;\n+  si = f1 > f2;\n+  si = f1 < f2;\n+  si = f1 >= f2;\n+  si = f1 <= f2;\n+\n+  sc = f1;\n+  uc = f1;\n+  ss = f1;\n+  us = f1;\n+  si = f1;\n+  ui = f1;\n+  sl = f1;\n+  ul = f1;\n+  d1 = f1;\n+  D1 = f1;\n+\n+  f1 = sc;\n+  f1 = uc;\n+  f1 = ss;\n+  f1 = us;\n+  f1 = si;\n+  f1 = ui;\n+  f1 = sl;\n+  f1 = ul;\n+  f1 = d1;\n+  f1 = D1;\n+\n+  d1 = -d2;\n+  d1 = d2 + d3;\n+  d1 = d2 - d3;\n+  d1 = d2 * d3;\n+  d1 = d2 / d3;\n+  d1 += d2;\n+  d1 -= d2;\n+  d1 *= d2;\n+  d1 /= d2;\n+\n+  si = d1 == d2;\n+  si = d1 != d2;\n+  si = d1 > d2;\n+  si = d1 < d2;\n+  si = d1 >= d2;\n+  si = d1 <= d2;\n+\n+  sc = d1;\n+  uc = d1;\n+  ss = d1;\n+  us = d1;\n+  si = d1;\n+  ui = d1;\n+  sl = d1;\n+  ul = d1;\n+  f1 = d1;\n+  D1 = d1;\n+\n+  d1 = sc;\n+  d1 = uc;\n+  d1 = ss;\n+  d1 = us;\n+  d1 = si;\n+  d1 = ui;\n+  d1 = sl;\n+  d1 = ul;\n+  d1 = f1;\n+  d1 = D1;\n+\n+  D1 = -D2;\n+  D1 = D2 + D3;\n+  D1 = D2 - D3;\n+  D1 = D2 * D3;\n+  D1 = D2 / D3;\n+  D1 += D2;\n+  D1 -= D2;\n+  D1 *= D2;\n+  D1 /= D2;\n+\n+  si = D1 == D2;\n+  si = D1 != D2;\n+  si = D1 > D2;\n+  si = D1 < D2;\n+  si = D1 >= D2;\n+  si = D1 <= D2;\n+\n+  sc = D1;\n+  uc = D1;\n+  ss = D1;\n+  us = D1;\n+  si = D1;\n+  ui = D1;\n+  sl = D1;\n+  ul = D1;\n+  f1 = D1;\n+  d1 = D1;\n+\n+  D1 = sc;\n+  D1 = uc;\n+  D1 = ss;\n+  D1 = us;\n+  D1 = si;\n+  D1 = ui;\n+  D1 = sl;\n+  D1 = ul;\n+  D1 = f1;\n+  D1 = d1;\n+\n+  d1 = acos (d2);\n+  d1 = asin (d2);\n+  d1 = atan (d2);\n+  d1 = atan2 (d2, d3);\n+  d1 = cos (d2);\n+  d1 = sin (d2);\n+  d1 = tan (d2);\n+  d1 = cosh (d2);\n+  d1 = sinh (d2);\n+  d1 = tanh (d2);\n+  d1 = exp (d2);\n+  d1 = frexp (d2, &i1);\n+  d1 = ldexp (d2, i2);\n+  d1 = log (d2);\n+  d1 = log10 (d2);\n+  d1 = modf (d2, &d3);\n+  d1 = pow (d2, d3);\n+  d1 = sqrt (d2);\n+  d1 = ceil (d2);\n+  d1 = fabs (d2);\n+  d1 = floor (d2);\n+  d1 = fmod (d2, d3);\n+\n+  return 0;\n+}"}]}