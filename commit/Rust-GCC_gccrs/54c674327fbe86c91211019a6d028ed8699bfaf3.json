{"sha": "54c674327fbe86c91211019a6d028ed8699bfaf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRjNjc0MzI3ZmJlODZjOTEyMTEwMTlhNmQwMjhlZDg2OTliZmFmMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-07-26T14:02:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-07-26T14:02:11Z"}, "message": "Add missing checks for _GLIBCXX_USE_C99_STDINT_TR1\n\nThe throw_allocator extension depends on <tr1/random> which depends on\n_GLIBCXX_USE_C99_STDINT_TR1.\n\nThe Transactional Memory support uses fixed-width integer types from\n<stdint.h>.\n\n\t* include/ext/throw_allocator.h [!_GLIBCXX_USE_C99_STDINT_TR1]\n\t(random_condition, throw_value_random, throw_allocator_random)\n\t(std::hash<throw_value_random>): Do not define when <tr1/random> is\n\tnot usable.\n\t* src/c++11/cow-stdexcept.cc [!_GLIBCXX_USE_C99_STDINT_TR1]: Do not\n\tdefine transactional memory support when <stdint.h> is not usable.\n\nFrom-SVN: r263004", "tree": {"sha": "dfe8138bafa56eb858eeb8694a409ca327ae3641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfe8138bafa56eb858eeb8694a409ca327ae3641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54c674327fbe86c91211019a6d028ed8699bfaf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c674327fbe86c91211019a6d028ed8699bfaf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54c674327fbe86c91211019a6d028ed8699bfaf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c674327fbe86c91211019a6d028ed8699bfaf3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4957b284f1ac52ce14b15fe3b915d46776d624ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4957b284f1ac52ce14b15fe3b915d46776d624ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4957b284f1ac52ce14b15fe3b915d46776d624ec"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "285ea6b7dcaf471ec2fcdf7c98f3164795f94a01", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c674327fbe86c91211019a6d028ed8699bfaf3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c674327fbe86c91211019a6d028ed8699bfaf3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=54c674327fbe86c91211019a6d028ed8699bfaf3", "patch": "@@ -1,5 +1,12 @@\n 2018-07-26  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/ext/throw_allocator.h [!_GLIBCXX_USE_C99_STDINT_TR1]\n+\t(random_condition, throw_value_random, throw_allocator_random)\n+\t(std::hash<throw_value_random>): Do not define when <tr1/random> is\n+\tnot usable.\n+\t* src/c++11/cow-stdexcept.cc [!_GLIBCXX_USE_C99_STDINT_TR1]: Do not\n+\tdefine transactional memory support when <stdint.h> is not usable.\n+\n \t* include/bits/hashtable_policy.h (__detail::__clp2): Use faster\n \timplementation that doesn't depend on <stdint.h> types.\n \t* include/std/memory (align) [!_GLIBCXX_USE_C99_STDINT_TR1]: Use"}, {"sha": "dd7c692222e493f8e5592420b3eff8ce19650179", "filename": "libstdc++-v3/include/ext/throw_allocator.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c674327fbe86c91211019a6d028ed8699bfaf3/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c674327fbe86c91211019a6d028ed8699bfaf3/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h?ref=54c674327fbe86c91211019a6d028ed8699bfaf3", "patch": "@@ -482,7 +482,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n   };\n \n-\n+#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   /**\n    *  @brief Base class for random probability control and throw.\n    */\n@@ -596,7 +596,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return _S_e;\n     }\n   };\n-\n+#endif // _GLIBCXX_USE_C99_STDINT_TR1\n \n   /**\n    *  @brief Class with exception generation control. Intended to be\n@@ -752,6 +752,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n   };\n \n+#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   /// Type throwing via random condition.\n   struct throw_value_random : public throw_value_base<random_condition>\n   {\n@@ -782,7 +783,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator=(throw_value_random&&) = default;\n #endif\n   };\n-\n+#endif // _GLIBCXX_USE_C99_STDINT_TR1\n \n   /**\n    *  @brief Allocator class with logging and exception generation control.\n@@ -920,6 +921,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       ~throw_allocator_limit() _GLIBCXX_USE_NOEXCEPT { }\n     };\n \n+#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   /// Allocator throwing via random condition.\n   template<typename _Tp>\n     struct throw_allocator_random\n@@ -940,6 +942,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       ~throw_allocator_random() _GLIBCXX_USE_NOEXCEPT { }\n     };\n+#endif // _GLIBCXX_USE_C99_STDINT_TR1\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n@@ -965,6 +968,7 @@ namespace std _GLIBCXX_VISIBILITY(default)\n       }\n     };\n \n+#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   /// Explicit specialization of std::hash for __gnu_cxx::throw_value_random.\n   template<>\n     struct hash<__gnu_cxx::throw_value_random>\n@@ -979,6 +983,7 @@ namespace std _GLIBCXX_VISIBILITY(default)\n \treturn __result;\n       }\n     };\n+#endif\n } // end namespace std\n #endif\n "}, {"sha": "54859d58820c3e1389eac06b36b7789cede488e4", "filename": "libstdc++-v3/src/c++11/cow-stdexcept.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54c674327fbe86c91211019a6d028ed8699bfaf3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54c674327fbe86c91211019a6d028ed8699bfaf3/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc?ref=54c674327fbe86c91211019a6d028ed8699bfaf3", "patch": "@@ -198,6 +198,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n // declared transaction-safe, so we just don't provide transactional clones\n // in this case.\n #if _GLIBCXX_USE_WEAK_REF\n+#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n \n extern \"C\" {\n \n@@ -456,4 +457,5 @@ CTORDTOR(15underflow_error, std::underflow_error, runtime_error)\n \n }\n \n+#endif  // _GLIBCXX_USE_C99_STDINT_TR1\n #endif  // _GLIBCXX_USE_WEAK_REF"}]}