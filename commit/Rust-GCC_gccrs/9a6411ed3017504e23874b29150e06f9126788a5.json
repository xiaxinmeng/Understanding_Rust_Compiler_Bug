{"sha": "9a6411ed3017504e23874b29150e06f9126788a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE2NDExZWQzMDE3NTA0ZTIzODc0YjI5MTUwZTA2ZjkxMjY3ODhhNQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2005-05-18T14:20:53Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2005-05-18T14:20:53Z"}, "message": "gtk_jawt.c (classpath_jawt_object_lock, [...]): New functions.\n\n2005-05-18  Anthony Green  <green@redhat.com>\n\n        * jni/gtk-peer/gtk_jawt.c (classpath_jawt_object_lock,\n        classpath_jawt_object_unlock, classpath_jawt_create_lock,\n        classpath_jawt_destroy_lock): New functions.\n        * jni/classpath/classpath_jawt.h (classpath_jawt_object_lock,\n        classpath_jawt_object_unlock, classpath_jawt_create_lock,\n        classpath_jawt_destroy_lock): New functions.\n        * include/jawt.h (struct _JAWT_DrawingSurface): Add lock\n        field.\n        * jawt.c: #include malloc.h.\n        (_Jv_Lock): Use lock.\n        (_Jv_Unlock): Ditto.\n        (_Jv_GetDrawingSurface): Initialize lock.\n        (_Jv_FreeDrawingSurface): Destroy lock.\n        (_Jv_FreeDrawingSurfaceInfo): Free platformInfo.\n\nFrom-SVN: r99903", "tree": {"sha": "e1bb7b54d3a4998a94109fc23d7049a9867f87fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1bb7b54d3a4998a94109fc23d7049a9867f87fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a6411ed3017504e23874b29150e06f9126788a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6411ed3017504e23874b29150e06f9126788a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a6411ed3017504e23874b29150e06f9126788a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6411ed3017504e23874b29150e06f9126788a5/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e876a0fb9db7f2bfc6ba477c468b4cb8ec2f6a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e876a0fb9db7f2bfc6ba477c468b4cb8ec2f6a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e876a0fb9db7f2bfc6ba477c468b4cb8ec2f6a9"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "985415b5b8b1e3d312c886734b24d2fcebe46b1b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9a6411ed3017504e23874b29150e06f9126788a5", "patch": "@@ -1,3 +1,20 @@\n+2005-05-18  Anthony Green  <green@redhat.com>\n+\n+\t* jni/gtk-peer/gtk_jawt.c (classpath_jawt_object_lock,\n+\tclasspath_jawt_object_unlock, classpath_jawt_create_lock,\n+\tclasspath_jawt_destroy_lock): New functions.\n+\t* jni/classpath/classpath_jawt.h (classpath_jawt_object_lock,\n+\tclasspath_jawt_object_unlock, classpath_jawt_create_lock,\n+\tclasspath_jawt_destroy_lock): New functions.\n+\t* include/jawt.h (struct _JAWT_DrawingSurface): Add lock\n+\tfield.\n+\t* jawt.c: #include malloc.h.\n+\t(_Jv_Lock): Use lock.\n+\t(_Jv_Unlock): Ditto.\n+\t(_Jv_GetDrawingSurface): Initialize lock.\n+\t(_Jv_FreeDrawingSurface): Destroy lock.\n+\t(_Jv_FreeDrawingSurfaceInfo): Free platformInfo.\n+\n 2005-05-18  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* Makefile.am (Makefile.deps): Do not use \\0, it is unportable."}, {"sha": "bbefe2063f40df2a0eefac248992388ebaebd257", "filename": "libjava/include/jawt.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2Finclude%2Fjawt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2Finclude%2Fjawt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjawt.h?ref=9a6411ed3017504e23874b29150e06f9126788a5", "patch": "@@ -72,6 +72,9 @@ struct _JAWT_DrawingSurface\n \n   struct _JAWT_DrawingSurfaceInfo* surface_info;\n \n+  /* An object we're going to use for locking the surface.  */\n+  jobject lock;\n+\n   /* FIXME: also include bounding rectangle of drawing surface. */\n   /* FIXME: also include current clipping region. */\n };"}, {"sha": "bb03c638e55ffd763cbca16f6cf61a1ba7829b40", "filename": "libjava/jawt.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2Fjawt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2Fjawt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjawt.c?ref=9a6411ed3017504e23874b29150e06f9126788a5", "patch": "@@ -40,6 +40,7 @@\n #include <jawt.h>\n #include <jawt_md.h>\n #include \"classpath_jawt.h\"\n+#include <malloc.h>\n \n static jint (JNICALL _Jv_Lock) (JAWT_DrawingSurface* surface);\n static void (JNICALL _Jv_Unlock) (JAWT_DrawingSurface* surface);\n@@ -76,14 +77,13 @@ JAWT_GetAWT (JNIEnv* env, JAWT* awt)\n static jint\n (JNICALL _Jv_Lock) (JAWT_DrawingSurface* surface)\n {\n-  /* lock the drawing surface */\n-  return classpath_jawt_lock ();\n+  return classpath_jawt_object_lock (surface->lock);\n }\n \n static void\n (JNICALL _Jv_Unlock) (JAWT_DrawingSurface* surface)\n {\n-  classpath_jawt_unlock ();\n+  classpath_jawt_object_unlock (surface->lock);\n }\n \n static JAWT_DrawingSurfaceInfo*\n@@ -109,6 +109,7 @@ static void\n   surface_info_x11->drawable = 0;\n   surface_info_x11->visualID = 0;\n \n+  free (surface_info->platformInfo);\n   free (surface_info);\n   surface_info = NULL;\n }\n@@ -135,6 +136,8 @@ static JAWT_DrawingSurface*\n \n   surface->surface_info = (JAWT_DrawingSurfaceInfo*) malloc (sizeof (JAWT_DrawingSurfaceInfo));\n \n+  surface->lock = classpath_jawt_create_lock ();\n+\n   if (surface->surface_info == NULL)\n     return NULL;\n \n@@ -158,6 +161,7 @@ static JAWT_DrawingSurface*\n static void\n (JNICALL _Jv_FreeDrawingSurface) (JAWT_DrawingSurface* surface)\n {\n+  classpath_jawt_destroy_lock (surface->lock);\n   free (surface);\n }\n "}, {"sha": "6ff5c53355e83181b816a51c9af6c0213c66a4f9", "filename": "libjava/jni/classpath/classpath_jawt.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2Fjni%2Fclasspath%2Fclasspath_jawt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2Fjni%2Fclasspath%2Fclasspath_jawt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fclasspath%2Fclasspath_jawt.h?ref=9a6411ed3017504e23874b29150e06f9126788a5", "patch": "@@ -54,7 +54,11 @@ jint     classpath_jawt_get_awt_version ();\n Display* classpath_jawt_get_default_display (JNIEnv* env, jobject canvas);\n Drawable classpath_jawt_get_drawable (JNIEnv* env, jobject canvas);\n VisualID classpath_jawt_get_visualID (JNIEnv* env, jobject canvas);\n+jint     classpath_jawt_object_lock (jobject lock);\n+void     classpath_jawt_object_unlock (jobject lock);\n jint     classpath_jawt_lock ();\n void     classpath_jawt_unlock ();\n+jobject  classpath_jawt_create_lock ();\n+void     classpath_jawt_destroy_lock (jobject lock);\n \n #endif /* __classpath_jawt_h__ */"}, {"sha": "ed5f3f55ba5670e293f2aa0abcf58e5de4bf3eaa", "filename": "libjava/jni/gtk-peer/gtk_jawt.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2Fjni%2Fgtk-peer%2Fgtk_jawt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6411ed3017504e23874b29150e06f9126788a5/libjava%2Fjni%2Fgtk-peer%2Fgtk_jawt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtk_jawt.c?ref=9a6411ed3017504e23874b29150e06f9126788a5", "patch": "@@ -152,6 +152,21 @@ classpath_jawt_get_drawable (JNIEnv* env, jobject canvas)\n   return drawable;\n }\n \n+jint\n+classpath_jawt_object_lock (jobject lock)\n+{\n+  JNIEnv *env = gdk_env();\n+  (*env)->MonitorEnter (env, lock);\n+  return 0;\n+}\n+\n+void\n+classpath_jawt_object_unlock (jobject lock)\n+{\n+  JNIEnv *env = gdk_env();\n+  (*env)->MonitorExit (env, lock);\n+}\n+\n jint\n classpath_jawt_lock ()\n {\n@@ -164,3 +179,19 @@ classpath_jawt_unlock ()\n {\n   gdk_threads_leave ();\n }\n+\n+jobject\n+classpath_jawt_create_lock ()\n+{\n+  JNIEnv *env = gdk_env ();\n+  jobject lock = (*env)->NewStringUTF (env, \"jawt-lock\");\n+  NSA_SET_GLOBAL_REF (env, lock);\n+  return lock;\n+}\n+\n+void\n+classpath_jawt_destroy_lock (jobject lock)\n+{\n+  JNIEnv *env = gdk_env ();\n+  NSA_DEL_GLOBAL_REF (env, lock);\n+}"}]}