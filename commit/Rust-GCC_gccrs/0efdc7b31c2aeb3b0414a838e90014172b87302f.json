{"sha": "0efdc7b31c2aeb3b0414a838e90014172b87302f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVmZGM3YjMxYzJhZWIzYjA0MTRhODM4ZTkwMDE0MTcyYjg3MzAyZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-14T11:55:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-14T11:56:18Z"}, "message": "i386: Fix the pmovzx SSE4.1 define_insn_and_split patterns [PR98670]\n\nI've made two mistakes in the *sse4_1_zero_extend* define_insn_and_split\npatterns.  One is that when it uses vector_operand, it should use Bm rather\nthan m constraint, and the other one is that because it is a post-reload\nsplitter it needs isa attribute to select which alternatives are valid for\nwhich ISAs.  Sorry for messing this up.\n\n2021-01-14  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/98670\n\t* config/i386/sse.md (*sse4_1_zero_extendv8qiv8hi2_3,\n\t*sse4_1_zero_extendv4hiv4si2_3, *sse4_1_zero_extendv2siv2di2_3):\n\tUse Bm instead of m for non-avx.  Add isa attribute.\n\n\t* gcc.target/i386/pr98670.c: New test.", "tree": {"sha": "f293dad1cd762822a8d68ca81820fff61c1822de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f293dad1cd762822a8d68ca81820fff61c1822de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0efdc7b31c2aeb3b0414a838e90014172b87302f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0efdc7b31c2aeb3b0414a838e90014172b87302f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0efdc7b31c2aeb3b0414a838e90014172b87302f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0efdc7b31c2aeb3b0414a838e90014172b87302f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f8762a2e8659c1db802ba001869085c1915498f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f8762a2e8659c1db802ba001869085c1915498f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f8762a2e8659c1db802ba001869085c1915498f"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "42d4c447182b6143324a5dccf2c126ba29a26e08", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0efdc7b31c2aeb3b0414a838e90014172b87302f/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0efdc7b31c2aeb3b0414a838e90014172b87302f/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=0efdc7b31c2aeb3b0414a838e90014172b87302f", "patch": "@@ -17721,7 +17721,7 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=Yr,*x,v\")\n \t(vec_select:V16QI\n \t  (vec_concat:V32QI\n-\t    (match_operand:V16QI 1 \"vector_operand\" \"Yrm,*xm,vm\")\n+\t    (match_operand:V16QI 1 \"vector_operand\" \"YrBm,*xBm,vm\")\n \t    (match_operand:V16QI 2 \"const0_operand\" \"C,C,C\"))\n \t  (match_parallel 3 \"pmovzx_parallel\"\n \t    [(match_operand 4 \"const_int_operand\" \"n,n,n\")])))]\n@@ -17745,7 +17745,8 @@\n       emit_insn (gen_rtx_SET (operands[0], operands[1]));\n       DONE;\n     }\n-})\n+}\n+  [(set_attr \"isa\" \"noavx,noavx,avx\")])\n \n (define_expand \"<insn>v8qiv8hi2\"\n   [(set (match_operand:V8HI 0 \"register_operand\")\n@@ -18031,7 +18032,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=Yr,*x,v\")\n \t(vec_select:V8HI\n \t  (vec_concat:V16HI\n-\t    (match_operand:V8HI 1 \"vector_operand\" \"Yrm,*xm,vm\")\n+\t    (match_operand:V8HI 1 \"vector_operand\" \"YrBm,*xBm,vm\")\n \t    (match_operand:V8HI 2 \"const0_operand\" \"C,C,C\"))\n \t  (match_parallel 3 \"pmovzx_parallel\"\n \t    [(match_operand 4 \"const_int_operand\" \"n,n,n\")])))]\n@@ -18053,7 +18054,8 @@\n       emit_insn (gen_rtx_SET (operands[0], operands[1]));\n       DONE;\n     }\n-})\n+}\n+  [(set_attr \"isa\" \"noavx,noavx,avx\")])\n \n (define_insn \"avx512f_<code>v8qiv8di2<mask_name>\"\n   [(set (match_operand:V8DI 0 \"register_operand\" \"=v\")\n@@ -18447,7 +18449,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=Yr,*x,v\")\n \t(vec_select:V4SI\n \t  (vec_concat:V8SI\n-\t    (match_operand:V4SI 1 \"vector_operand\" \"Yrm,*xm,vm\")\n+\t    (match_operand:V4SI 1 \"vector_operand\" \"YrBm,*xBm,vm\")\n \t    (match_operand:V4SI 2 \"const0_operand\" \"C,C,C\"))\n \t  (match_parallel 3 \"pmovzx_parallel\"\n \t    [(match_operand 4 \"const_int_operand\" \"n,n,n\")])))]\n@@ -18467,7 +18469,8 @@\n       emit_insn (gen_rtx_SET (operands[0], operands[1]));\n       DONE;\n     }\n-})\n+}\n+  [(set_attr \"isa\" \"noavx,noavx,avx\")])\n \n (define_expand \"<insn>v2siv2di2\"\n   [(set (match_operand:V2DI 0 \"register_operand\")"}, {"sha": "34a0095cceb8f21d8ad827dad144647b392999d6", "filename": "gcc/testsuite/gcc.target/i386/pr98670.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0efdc7b31c2aeb3b0414a838e90014172b87302f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98670.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0efdc7b31c2aeb3b0414a838e90014172b87302f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98670.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98670.c?ref=0efdc7b31c2aeb3b0414a838e90014172b87302f", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/98670 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse4.1\" } */\n+\n+#include <x86intrin.h>\n+\n+void foo (__m128i);\n+int a[6];\n+\n+void\n+bar (void)\n+{\n+  __m128i d = *(__m128i *) (a + 2);\n+  __m128i e = _mm_unpacklo_epi16 (d, (__m128i) {});\n+  foo (e);\n+}"}]}