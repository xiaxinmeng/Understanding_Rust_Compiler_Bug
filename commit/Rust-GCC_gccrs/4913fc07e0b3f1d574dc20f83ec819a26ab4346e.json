{"sha": "4913fc07e0b3f1d574dc20f83ec819a26ab4346e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkxM2ZjMDdlMGIzZjFkNTc0ZGMyMGY4M2VjODE5YTI2YWI0MzQ2ZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-02T15:07:14Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-02T15:07:14Z"}, "message": "net: don't fail test if splice fails because pipe2 is missing\n    \n    This reportedly happens on CentOS 5.11.  The real code will work fine;\n    this test is assuming that the unexported slice function will handle\n    the splice, but if pipe2 does not work then it doesn't.  The relevant\n    code in internal/poll/splice_linux.go says \"Falling back to pipe is\n    possible, but prior to 2.6.29 splice returns -EAGAIN instead of 0 when\n    the connection is closed.\"\n    \n    Reviewed-on: https://go-review.googlesource.com/138838\n\nFrom-SVN: r264793", "tree": {"sha": "a71fa364340b23c6320039a6aa0951d3decfb01f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a71fa364340b23c6320039a6aa0951d3decfb01f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4913fc07e0b3f1d574dc20f83ec819a26ab4346e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4913fc07e0b3f1d574dc20f83ec819a26ab4346e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4913fc07e0b3f1d574dc20f83ec819a26ab4346e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4913fc07e0b3f1d574dc20f83ec819a26ab4346e/comments", "author": null, "committer": null, "parents": [{"sha": "0036218b1093a36a67d7c04834e5c0383eda6efa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0036218b1093a36a67d7c04834e5c0383eda6efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0036218b1093a36a67d7c04834e5c0383eda6efa"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "b9528721ad3a49ae9cb13c7c5055088099cccc97", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4913fc07e0b3f1d574dc20f83ec819a26ab4346e/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4913fc07e0b3f1d574dc20f83ec819a26ab4346e/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=4913fc07e0b3f1d574dc20f83ec819a26ab4346e", "patch": "@@ -1,4 +1,4 @@\n-53d0d7ca278a5612fcdb5fb098e7bf950a0178ef\n+098e36f4ddfcf50aeb34509b5f25b86d7050749c\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "40ed19b8fa8f41b293dbd130b50a4d4387de8e70", "filename": "libgo/go/net/splice_test.go", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4913fc07e0b3f1d574dc20f83ec819a26ab4346e/libgo%2Fgo%2Fnet%2Fsplice_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4913fc07e0b3f1d574dc20f83ec819a26ab4346e/libgo%2Fgo%2Fnet%2Fsplice_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fsplice_test.go?ref=4913fc07e0b3f1d574dc20f83ec819a26ab4346e", "patch": "@@ -11,7 +11,9 @@ import (\n \t\"fmt\"\n \t\"io\"\n \t\"io/ioutil\"\n+\t\"os\"\n \t\"sync\"\n+\t\"syscall\"\n \t\"testing\"\n )\n \n@@ -225,6 +227,10 @@ func testSpliceReaderAtEOF(t *testing.T) {\n \tserverUp.Close()\n \t_, err, handled := splice(serverDown.(*TCPConn).fd, serverUp)\n \tif !handled {\n+\t\tif serr, ok := err.(*os.SyscallError); ok && serr.Syscall == \"pipe2\" && serr.Err == syscall.ENOSYS {\n+\t\t\tt.Skip(\"pipe2 not supported\")\n+\t\t}\n+\n \t\tt.Errorf(\"closed connection: got err = %v, handled = %t, want handled = true\", err, handled)\n \t}\n \tlr := &io.LimitedReader{"}]}