{"sha": "49edfe6d716b50994edc67d16f77d5274a1aabf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllZGZlNmQ3MTZiNTA5OTRlZGM2N2QxNmY3N2Q1Mjc0YTFhYWJmNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-08-03T23:17:20Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-08-03T23:17:41Z"}, "message": "c++: Remove unused declaration.\n\ngcc/cp/ChangeLog:\n\n\t* cp-tree.h (after_nsdmi_defaulted_late_checks): Remove.", "tree": {"sha": "b39a162a05bdf4187d9c0159f93445a423359e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b39a162a05bdf4187d9c0159f93445a423359e4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49edfe6d716b50994edc67d16f77d5274a1aabf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49edfe6d716b50994edc67d16f77d5274a1aabf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49edfe6d716b50994edc67d16f77d5274a1aabf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49edfe6d716b50994edc67d16f77d5274a1aabf5/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b6a53238f312e8bd05844795b8638a5d12402db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b6a53238f312e8bd05844795b8638a5d12402db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b6a53238f312e8bd05844795b8638a5d12402db"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "fc54e6bb9bdf91fedbf4250805a3bbac0c37a652", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49edfe6d716b50994edc67d16f77d5274a1aabf5/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49edfe6d716b50994edc67d16f77d5274a1aabf5/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=49edfe6d716b50994edc67d16f77d5274a1aabf5", "patch": "@@ -6809,7 +6809,6 @@ extern tree forward_parm\t\t\t(tree);\n extern bool is_trivially_xible\t\t\t(enum tree_code, tree, tree);\n extern bool is_xible\t\t\t\t(enum tree_code, tree, tree);\n extern tree get_defaulted_eh_spec\t\t(tree, tsubst_flags_t = tf_warning_or_error);\n-extern void after_nsdmi_defaulted_late_checks   (tree);\n extern bool maybe_explain_implicit_delete\t(tree);\n extern void explain_implicit_non_constexpr\t(tree);\n extern void deduce_inheriting_ctor\t\t(tree);"}]}