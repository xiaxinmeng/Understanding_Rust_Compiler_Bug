{"sha": "d667538bbfbe7ef11f1d79bbfac3ec6a36b24e6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY2NzUzOGJiZmJlN2VmMTFmMWQ3OWJiZmFjM2VjNmEzNmIyNGU2ZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-07T23:55:27Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-07T23:55:27Z"}, "message": "(ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE):\n\nUse REAL_VALUE_TO_DECIMAL to generate decimal string.\n(REAL_ARITHMETIC): Define.\n\nFrom-SVN: r4882", "tree": {"sha": "c418cfc754712f2cc38c4d514f4c1b9ae5728c36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c418cfc754712f2cc38c4d514f4c1b9ae5728c36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d667538bbfbe7ef11f1d79bbfac3ec6a36b24e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d667538bbfbe7ef11f1d79bbfac3ec6a36b24e6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d667538bbfbe7ef11f1d79bbfac3ec6a36b24e6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d667538bbfbe7ef11f1d79bbfac3ec6a36b24e6d/comments", "author": null, "committer": null, "parents": [{"sha": "15f67e0660ab655933ab4ca0006d41d6c43ad895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f67e0660ab655933ab4ca0006d41d6c43ad895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15f67e0660ab655933ab4ca0006d41d6c43ad895"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "eb90e070b127fc7592c76f972762956832f86c6d", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d667538bbfbe7ef11f1d79bbfac3ec6a36b24e6d/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d667538bbfbe7ef11f1d79bbfac3ec6a36b24e6d/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=d667538bbfbe7ef11f1d79bbfac3ec6a36b24e6d", "patch": "@@ -42,17 +42,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define CC1_SPEC \"%{sun4:} %{target:}\"\n \n-#if 0\n-/* ??? This fails because REAL_VALUE_TYPE is `double' making it impossible to\n-   represent and output `long double' constants.  This causes problems during\n-   a bootstrap with enquire/float.h, and hence must be disabled for now.\n-   To fix, we need to implement code for TFmode just like the existing XFmode\n-   support in real.[ch].  */\n-/* Sparc ABI says that long double is 4 words.  */\n-\n-#define LONG_DOUBLE_TYPE_SIZE 128\n-#endif\n-\n #define PTRDIFF_TYPE \"int\"\n /* In 2.4 it should work to delete this.\n    #define SIZE_TYPE \"int\"  */\n@@ -169,6 +158,21 @@ extern int target_flags;\n \f\n /* target machine storage layout */\n \n+#if 0\n+/* ??? This fails because REAL_VALUE_TYPE is `double' making it impossible to\n+   represent and output `long double' constants.  This causes problems during\n+   a bootstrap with enquire/float.h, and hence must be disabled for now.\n+   To fix, we need to implement code for TFmode just like the existing XFmode\n+   support in real.[ch].  */\n+/* Define for support of TFmode long double and REAL_ARITHMETIC.\n+   Sparc ABI says that long double is 4 words.  */\n+#define LONG_DOUBLE_TYPE_SIZE 128\n+#endif\n+\n+/* Define for cross-compilation to a sparc target with no TFmode from a host\n+   with a different float format (e.g. VAX).  */\n+#define REAL_ARITHMETIC\n+\n /* Define this if most significant bit is lowest numbered\n    in instructions that operate on numbered bit-fields.  */\n #define BITS_BIG_ENDIAN 1\n@@ -1621,7 +1625,11 @@ extern struct rtx_def *legitimize_pic_address ();\n \t\t ASM_LONG, t[0], ASM_LONG, t[1]);\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.double 0r%.17g\\n\", VALUE);\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tchar str[30];\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.17g\", str);\t\t\t\\\n+\tfprintf (FILE, \"\\t.double 0r%s\\n\", str);\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n   }\n \n /* This is how to output an assembler line defining a `float' constant.  */\n@@ -1637,7 +1645,11 @@ extern struct rtx_def *legitimize_pic_address ();\n \tfprintf (FILE, \"\\t%s\\t0x%lx\\n\", ASM_LONG, t);\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.single 0r%.9g\\n\", VALUE);\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tchar str[30];\t\t\t\t\t\t\t\\\n+\tREAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", str);\t\t\t\\\n+\tfprintf (FILE, \"\\t.single 0r%s\\n\", str);\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n   }\n \n /* This is how to output an assembler line defining a `long double'"}]}