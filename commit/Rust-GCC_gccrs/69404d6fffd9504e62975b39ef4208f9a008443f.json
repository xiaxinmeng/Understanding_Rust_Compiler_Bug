{"sha": "69404d6fffd9504e62975b39ef4208f9a008443f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk0MDRkNmZmZmQ5NTA0ZTYyOTc1YjM5ZWY0MjA4ZjlhMDA4NDQzZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-10-14T11:59:00Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-14T11:59:00Z"}, "message": "i386.md (call value patterns): Move to the end of the file.\n\n        * i386.md (call value patterns): Move to the end of the file.\n        (prologue_set_got, prologue_get_pc): Use register_operand for op 0.\n\nFrom-SVN: r29978", "tree": {"sha": "503b8413c6e2b9262b43ddd7b874119f185b4990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/503b8413c6e2b9262b43ddd7b874119f185b4990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69404d6fffd9504e62975b39ef4208f9a008443f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69404d6fffd9504e62975b39ef4208f9a008443f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69404d6fffd9504e62975b39ef4208f9a008443f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69404d6fffd9504e62975b39ef4208f9a008443f/comments", "author": null, "committer": null, "parents": [{"sha": "65be5cf051bab27f8be0aec3475bf84617f82d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65be5cf051bab27f8be0aec3475bf84617f82d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65be5cf051bab27f8be0aec3475bf84617f82d82"}], "stats": {"total": 115, "additions": 62, "deletions": 53}, "files": [{"sha": "e4563368c38af700f6079fc1ae3f259c848826aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69404d6fffd9504e62975b39ef4208f9a008443f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69404d6fffd9504e62975b39ef4208f9a008443f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69404d6fffd9504e62975b39ef4208f9a008443f", "patch": "@@ -1,3 +1,8 @@\n+Thu Oct 14 04:54:54 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* i386.md (call value patterns): Move to the end of the file.\n+\t(prologue_set_got, prologue_get_pc): Use register_operand for op 0.\n+\n 1999-10-14 Mark Elbrecht <snowball3@bigfoot.com>\n \n \t* configure.in (djgpp configuration): Define extra_objects.."}, {"sha": "6f714dd7d7a85909056848a517ddef9c0521f60c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 57, "deletions": 53, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69404d6fffd9504e62975b39ef4208f9a008443f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69404d6fffd9504e62975b39ef4208f9a008443f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=69404d6fffd9504e62975b39ef4208f9a008443f", "patch": "@@ -6557,33 +6557,6 @@\n \t\t\tcopy_to_mode_reg (Pmode, XEXP (operands[1], 0)));\n }\")\n \n-(define_insn \"*call_value_pop_pic\"\n-  [(set (match_operand 0 \"\" \"=rf\")\n-\t(call (match_operand:QI 1 \"call_insn_operand\" \"m\")\n-\t      (match_operand:SI 2 \"general_operand\" \"g\")))\n-   (set (reg:SI 7) (plus:SI (reg:SI 7)\n-\t\t\t    (match_operand:SI 4 \"immediate_operand\" \"i\")))]\n-  \"\"\n-  \"*\n-{\n-  if (constant_call_address_operand (operands[1], GET_MODE (operands[1])))\n-    return \\\"call\\\\t%P1\\\";\n-  \n-  operands[1] = XEXP (operands[1], 0);\n-  return \\\"call\\\\t%*%1\\\";\n-}\"\n-  [(set_attr \"type\" \"callv\")])\n-\n-(define_insn \"*call_value_pop_pic2\"\n-  [(set (match_operand 0 \"\" \"=rf\")\n-\t(call (match_operand:QI 1 \"constant_call_address_operand\" \"\")\n-\t      (match_operand:SI 2 \"general_operand\" \"g\")))\n-   (set (reg:SI 7) (plus:SI (reg:SI 7)\n-\t\t\t    (match_operand:SI 4 \"immediate_operand\" \"i\")))]\n-  \"!HALF_PIC_P ()\"\n-  \"call\\\\t%P1\"\n-  [(set_attr \"type\" \"callv\")])\n-\n (define_expand \"call_value\"\n   [(set (match_operand 0 \"\" \"\")\n \t(call (match_operand:QI 1 \"indirect_operand\" \"\")\n@@ -6608,30 +6581,6 @@\n \t\t\tcopy_to_mode_reg (Pmode, XEXP (operands[1], 0)));\n }\")\n \n-(define_insn \"*call_value_pic\"\n-  [(set (match_operand 0 \"\" \"=rf\")\n-\t(call (match_operand:QI 1 \"call_insn_operand\" \"m\")\n-\t      (match_operand:SI 2 \"general_operand\" \"g\")))]\n-  ;; Operand 2 not used on the i386.\n-  \"\"\n-  \"*\n-{\n-  if (constant_call_address_operand (operands[1], GET_MODE (operands[1])))\n-    return \\\"call\\\\t%P1\\\";\n-  \n-  operands[1] = XEXP (operands[1], 0);\n-  return \\\"call\\\\t%*%1\\\";\n-}\"\n-  [(set_attr \"type\" \"callv\")])\n-\n-(define_insn \"*call_value_pic2\"\n-  [(set (match_operand 0 \"\" \"=rf\")\n-\t(call (match_operand:QI 1 \"constant_call_address_operand\" \"\")\n-\t      (match_operand:SI 2 \"general_operand\" \"g\")))]\n-  \"!HALF_PIC_P ()\"\n-  \"call\\\\t%P1\"\n-  [(set_attr \"type\" \"callv\")])\n-\n ;; Call subroutine returning any type.\n \n (define_expand \"untyped_call\"\n@@ -6715,7 +6664,7 @@\n   \"ix86_expand_prologue (); DONE;\")\n \n (define_insn \"prologue_set_got\"\n-  [(set (match_operand:SI 0 \"\" \"\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(unspec_volatile:SI\n \t [(plus:SI (match_dup 0)\n \t\t   (plus:SI (match_operand:SI 1 \"symbolic_operand\" \"\")\n@@ -6734,7 +6683,7 @@\n   [(set_attr \"type\" \"alu\")])\n \n (define_insn \"prologue_get_pc\"\n-  [(set (match_operand:SI 0 \"\" \"\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n     (unspec_volatile:SI [(plus:SI (pc) (match_operand 1 \"\" \"\"))] 2))]\n   \"\"\n   \"*\n@@ -8169,3 +8118,58 @@\n \t\t   (ior:HI (match_dup 0) (const_int -1)))\n \t      (clobber (reg:CC 17))])]\n   \"\")\n+\n+\f\n+;; Call-value patterns last so that the wildcard operand does not\n+;; disrupt insn-recog's switch tables.\n+\n+(define_insn \"*call_value_pop_1\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (match_operand:QI 1 \"call_insn_operand\" \"m\")\n+\t      (match_operand:SI 2 \"general_operand\" \"g\")))\n+   (set (reg:SI 7) (plus:SI (reg:SI 7)\n+\t\t\t    (match_operand:SI 4 \"immediate_operand\" \"i\")))]\n+  \"\"\n+  \"*\n+{\n+  if (constant_call_address_operand (operands[1], GET_MODE (operands[1])))\n+    return \\\"call\\\\t%P1\\\";\n+  \n+  operands[1] = XEXP (operands[1], 0);\n+  return \\\"call\\\\t%*%1\\\";\n+}\"\n+  [(set_attr \"type\" \"callv\")])\n+\n+(define_insn \"*call_value_pop_2\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (match_operand:QI 1 \"constant_call_address_operand\" \"\")\n+\t      (match_operand:SI 2 \"general_operand\" \"g\")))\n+   (set (reg:SI 7) (plus:SI (reg:SI 7)\n+\t\t\t    (match_operand:SI 4 \"immediate_operand\" \"i\")))]\n+  \"!HALF_PIC_P ()\"\n+  \"call\\\\t%P1\"\n+  [(set_attr \"type\" \"callv\")])\n+\n+(define_insn \"*call_value_1\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (match_operand:QI 1 \"call_insn_operand\" \"m\")\n+\t      (match_operand:SI 2 \"general_operand\" \"g\")))]\n+  ;; Operand 2 not used on the i386.\n+  \"\"\n+  \"*\n+{\n+  if (constant_call_address_operand (operands[1], GET_MODE (operands[1])))\n+    return \\\"call\\\\t%P1\\\";\n+  \n+  operands[1] = XEXP (operands[1], 0);\n+  return \\\"call\\\\t%*%1\\\";\n+}\"\n+  [(set_attr \"type\" \"callv\")])\n+\n+(define_insn \"*call_value_2\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (match_operand:QI 1 \"constant_call_address_operand\" \"\")\n+\t      (match_operand:SI 2 \"general_operand\" \"g\")))]\n+  \"!HALF_PIC_P ()\"\n+  \"call\\\\t%P1\"\n+  [(set_attr \"type\" \"callv\")])"}]}