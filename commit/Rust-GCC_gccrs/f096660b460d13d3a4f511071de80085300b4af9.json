{"sha": "f096660b460d13d3a4f511071de80085300b4af9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5NjY2MGI0NjBkMTNkM2E0ZjUxMTA3MWRlODAwODUzMDBiNGFmOQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2006-04-03T10:15:25Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2006-04-03T10:15:25Z"}, "message": "Float_2.java: New file.\n\n2006-04-03  Andrew Haley  <aph@redhat.com>\n\n        * testsuite/libjava.lang/Float_2.java: New file.\n\nFrom-SVN: r112636", "tree": {"sha": "1d5ecc94f47ed5d16ce17f543279f42086137ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d5ecc94f47ed5d16ce17f543279f42086137ce0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f096660b460d13d3a4f511071de80085300b4af9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f096660b460d13d3a4f511071de80085300b4af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f096660b460d13d3a4f511071de80085300b4af9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f096660b460d13d3a4f511071de80085300b4af9/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16a2acea0aca10ade467f2e15bde2bc956d6528e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a2acea0aca10ade467f2e15bde2bc956d6528e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a2acea0aca10ade467f2e15bde2bc956d6528e"}], "stats": {"total": 142, "additions": 142, "deletions": 0}, "files": [{"sha": "d5f175c9a1d6866c2626a36828a275e3f40e9b75", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f096660b460d13d3a4f511071de80085300b4af9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f096660b460d13d3a4f511071de80085300b4af9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f096660b460d13d3a4f511071de80085300b4af9", "patch": "@@ -1,3 +1,7 @@\n+2006-04-03  Andrew Haley  <aph@redhat.com>\n+\n+\t* testsuite/libjava.lang/Float_2.java: New file.\n+\n 2006-03-31  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* posix.cc (_Jv_platform_nanotime): Declare id with clockid_t."}, {"sha": "5d019533d53f71c6f5631d1b91b89f0860205fec", "filename": "libjava/testsuite/libjava.lang/Float_2.java", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f096660b460d13d3a4f511071de80085300b4af9/libjava%2Ftestsuite%2Flibjava.lang%2FFloat_2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f096660b460d13d3a4f511071de80085300b4af9/libjava%2Ftestsuite%2Flibjava.lang%2FFloat_2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FFloat_2.java?ref=f096660b460d13d3a4f511071de80085300b4af9", "patch": "@@ -0,0 +1,138 @@\n+// Test floating-point to integer conversion.  We do this twice, once\n+// with literal conversions that can be optimized away and once using\n+// a static field that can't.\n+\n+public class Float_2\n+{\n+  public static double zero = 0.0;\n+\n+  public static void main (String argv[])\n+  {\n+    {\n+      int itest = (int)(float)(0.0/0.0);\n+      if (itest != 0)\n+\tSystem.err.println (\"literal inf error 1: \" + itest);\t\n+    }\n+    {\n+      int itest = (int)(0.0/0.0);\n+      if (itest != 0)\n+\tSystem.err.println (\"literal inf error 2\" + itest);\t\n+    }\n+    {\n+      long ltest = (long)(0.0/0.0);\n+      if (ltest != 0)\n+\tSystem.err.println (\"literal inf error 3\" + ltest);\t\n+    }\n+    {\n+      long ltest = (long)(float)(0.0/0.0);\n+      if (ltest != 0)\n+\tSystem.err.println (\"literal inf error 4\" + ltest);\t\n+    }\n+      \n+    {\n+      int itest = (int)(float)(1.0/0.0);\n+      if (itest != Integer.MAX_VALUE)\n+\tSystem.err.println (\"literal max error 1: \" + itest);\t\n+    }\n+    {\n+      int itest = (int)(1.0/0.0);\n+      if (itest != Integer.MAX_VALUE)\n+\tSystem.err.println (\"literal max error 2\" + itest);\t\n+    }\n+    {\n+      long ltest = (long)(1.0/0.0);\n+      if (ltest != Long.MAX_VALUE)\n+\tSystem.err.println (\"literal max error 3\" + ltest);\t\n+    }\n+    {\n+      long ltest = (long)(float)(1.0/0.0);\n+      if (ltest != Long.MAX_VALUE)\n+\tSystem.err.println (\"literal max error 4\" + ltest);\t\n+    }\n+      \n+    {\n+      int itest = (int)(float)(-1.0/0.0);\n+      if (itest != Integer.MIN_VALUE)\n+\tSystem.err.println (\"literal min error 1: \" + itest);\t\n+    }\n+    {\n+      int itest = (int)(-1.0/0.0);\n+      if (itest != Integer.MIN_VALUE)\n+\tSystem.err.println (\"literal min error 2\" + itest);\t\n+    }\n+    {\n+      long ltest = (long)(-1.0/0.0);\n+      if (ltest != Long.MIN_VALUE)\n+\tSystem.err.println (\"literal min error 3\" + ltest);\t\n+    }\n+    {\n+      long ltest = (long)(float)(-1.0/0.0);\n+      if (ltest != Long.MIN_VALUE)\n+\tSystem.err.println (\"literal min error 4\" + ltest);\t\n+    }\n+      \n+    {\n+      int itest = (int)(float)(zero/zero);\n+      if (itest != 0)\n+\tSystem.err.println (\"calc inf error 1: \" + itest);\t\n+    }\n+    {\n+      int itest = (int)(zero/zero);\n+      if (itest != 0)\n+\tSystem.err.println (\"calc inf error 2\" + itest);\t\n+    }\n+    {\n+      long ltest = (long)(zero/zero);\n+      if (ltest != 0)\n+\tSystem.err.println (\"calc inf error 3\" + ltest);\t\n+    }\n+    {\n+      long ltest = (long)(float)(zero/zero);\n+      if (ltest != 0)\n+\tSystem.err.println (\"calc inf error 4\" + ltest);\t\n+    }\n+      \n+    {\n+      int itest = (int)(float)(1.0/zero);\n+      if (itest != Integer.MAX_VALUE)\n+\tSystem.err.println (\"calc max error 1: \" + itest);\t\n+    }\n+    {\n+      int itest = (int)(1.0/zero);\n+      if (itest != Integer.MAX_VALUE)\n+\tSystem.err.println (\"calc max error 2\" + itest);\t\n+    }\n+    {\n+      long ltest = (long)(1.0/zero);\n+      if (ltest != Long.MAX_VALUE)\n+\tSystem.err.println (\"calc max error 3\" + ltest);\t\n+    }\n+    {\n+      long ltest = (long)(float)(1.0/zero);\n+      if (ltest != Long.MAX_VALUE)\n+\tSystem.err.println (\"calc max error 4\" + ltest);\t\n+    }\n+      \n+    {\n+      int itest = (int)(float)(-1.0/zero);\n+      if (itest != Integer.MIN_VALUE)\n+\tSystem.err.println (\"calc min error 1: \" + itest);\t\n+    }\n+    {\n+      int itest = (int)(-1.0/zero);\n+      if (itest != Integer.MIN_VALUE)\n+\tSystem.err.println (\"calc min error 2\" + itest);\t\n+    }\n+    {\n+      long ltest = (long)(-1.0/zero);\n+      if (ltest != Long.MIN_VALUE)\n+\tSystem.err.println (\"calc min error 3\" + ltest);\t\n+    }\n+    {\n+      long ltest = (long)(float)(-1.0/zero);\n+      if (ltest != Long.MIN_VALUE)\n+\tSystem.err.println (\"calc min error 4\" + ltest);\t\n+    }\n+      \n+  }\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "libjava/testsuite/libjava.lang/Float_2.out", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f096660b460d13d3a4f511071de80085300b4af9/libjava%2Ftestsuite%2Flibjava.lang%2FFloat_2.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f096660b460d13d3a4f511071de80085300b4af9/libjava%2Ftestsuite%2Flibjava.lang%2FFloat_2.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FFloat_2.out?ref=f096660b460d13d3a4f511071de80085300b4af9"}]}