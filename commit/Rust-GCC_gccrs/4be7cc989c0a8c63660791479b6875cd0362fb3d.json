{"sha": "4be7cc989c0a8c63660791479b6875cd0362fb3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJlN2NjOTg5YzBhOGM2MzY2MDc5MTQ3OWI2ODc1Y2QwMzYyZmIzZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-06T02:42:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-06T02:42:55Z"}, "message": "(__objc_send_initialize, class_add_method_list):\n\nAllow multiple +initialize methods per class.\n\nFrom-SVN: r4349", "tree": {"sha": "c347a1855fc4c0bbb0e5f040f5ec24b5165e7f82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c347a1855fc4c0bbb0e5f040f5ec24b5165e7f82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4be7cc989c0a8c63660791479b6875cd0362fb3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be7cc989c0a8c63660791479b6875cd0362fb3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be7cc989c0a8c63660791479b6875cd0362fb3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be7cc989c0a8c63660791479b6875cd0362fb3d/comments", "author": null, "committer": null, "parents": [{"sha": "bda63bf128168ac7c2b4ab65c92097a6ae533c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda63bf128168ac7c2b4ab65c92097a6ae533c95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bda63bf128168ac7c2b4ab65c92097a6ae533c95"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "c7947ecbf8c35e2dd7b9ba6d1124a8bd25951c90", "filename": "gcc/objc/sendmsg.c", "status": "modified", "additions": 30, "deletions": 9, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be7cc989c0a8c63660791479b6875cd0362fb3d/gcc%2Fobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be7cc989c0a8c63660791479b6875cd0362fb3d/gcc%2Fobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsendmsg.c?ref=4be7cc989c0a8c63660791479b6875cd0362fb3d", "patch": "@@ -186,14 +186,31 @@ static void __objc_send_initialize(Class* class)\n       \n       if(class->super_class)\n \t__objc_send_initialize(class->super_class);\n-  \n-      m = search_for_method_in_list(class->class_pointer->methods,\n-\t\t\t\t    sel_get_uid(\"initialize\"));\n-      if(m != NULL)\n-        {\n-          CLS_SETINITIALIZED(class);\n-          (*m->method_imp) ((id) class, sel_get_uid(\"initialize\"));\n-        }\n+\n+      {\n+\tMethodList_t method_list = class->class_pointer->methods;\n+\tSEL op = sel_register_name (\"initialize\");\n+\n+\t/* If not found then we'll search the list.  */\n+\twhile (method_list)\n+\t  {\n+\t    int i;\n+\n+\t    /* Search the method list.  */\n+\t    for (i = 0; i < method_list->method_count; ++i)\n+\t      {\n+\t\tMethod_t method = &method_list->method_list[i];\n+\t\t\n+\t\t\n+\t\tif (method->method_name == op)\n+\t\t  (*method->method_imp)((id) class, op);\n+\t      }\n+\n+\t    /* The method wasn't found.  Follow the link to the next list of\n+\t       methods.  */\n+\t    method_list = method_list->method_next;\n+\t  }\n+      }\n     }\n }  \n \n@@ -268,6 +285,9 @@ void\n class_add_method_list (Class* class, MethodList_t list)\n {\n   int i;\n+  static SEL initialize_sel = 0;\n+  if (!initialize_sel)\n+    initialize_sel = sel_register_name (\"initialize\");\n \n   /* Passing of a linked list is not allowed.  Do multiple calls.  */\n   assert (!list->method_next);\n@@ -282,7 +302,8 @@ class_add_method_list (Class* class, MethodList_t list)\n \t  /* This is where selector names are transmogriffed to SEL's */\n \t  method->method_name = sel_register_name ((char*)method->method_name);\n \n-\t  if (search_for_method_in_list (class->methods, method->method_name))\n+\t  if (search_for_method_in_list (class->methods, method->method_name)\n+\t      && method->method_name != initialize_sel)\n \t    {\n \t      /* Duplication. Print a error message an change the method name\n \t\t to NULL. */"}]}