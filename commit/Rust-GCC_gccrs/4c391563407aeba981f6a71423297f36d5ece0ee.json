{"sha": "4c391563407aeba981f6a71423297f36d5ece0ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMzOTE1NjM0MDdhZWJhOTgxZjZhNzE0MjMyOTdmMzZkNWVjZTBlZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-02T17:03:28Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-02T17:03:28Z"}, "message": "libstdc++: Rename __detail::__maybe_empty_t alias template\n\nThe key property of this alias is not that it may be an empty type, but\nthat the type argument may not be used. The fact it's replaced by an\nempty type is just an implementation detail.  The name was also\nbackwards with respect to the bool argument.\n\nThis patch changes the name to better reflect its purpose.\n\n\t* include/std/ranges (__detail::__maybe_empty_t): Rename to\n\t__maybe_present_t.\n\t(__adaptor::_RangeAdaptor, join_view, split_view): Use new name.", "tree": {"sha": "1383801559c8b46fc15098caa18fd01d1f4d8cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1383801559c8b46fc15098caa18fd01d1f4d8cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c391563407aeba981f6a71423297f36d5ece0ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c391563407aeba981f6a71423297f36d5ece0ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c391563407aeba981f6a71423297f36d5ece0ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c391563407aeba981f6a71423297f36d5ece0ee/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "005530eb019eb7703534540bdac01e5acc611e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005530eb019eb7703534540bdac01e5acc611e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/005530eb019eb7703534540bdac01e5acc611e78"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "d810b0887b5e6677e642c2601a697be60508e1e5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c391563407aeba981f6a71423297f36d5ece0ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c391563407aeba981f6a71423297f36d5ece0ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4c391563407aeba981f6a71423297f36d5ece0ee", "patch": "@@ -1,5 +1,9 @@\n 2020-03-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/ranges (__detail::__maybe_empty_t): Rename to\n+\t__maybe_present_t.\n+\t(__adaptor::_RangeAdaptor, join_view, split_view): Use new name.\n+\n \t* include/bits/ranges_algo.h (shift_right): Add 'typename' to\n \tdependent type.\n "}, {"sha": "c71cf918cfc071e254143db0df5493fbb63c14c0", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c391563407aeba981f6a71423297f36d5ece0ee/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c391563407aeba981f6a71423297f36d5ece0ee/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=4c391563407aeba981f6a71423297f36d5ece0ee", "patch": "@@ -1030,9 +1030,14 @@ namespace __detail\n {\n   struct _Empty { };\n \n-  template<bool _NonEmpty, typename _Tp>\n-    using __maybe_empty_t = conditional_t<_NonEmpty, _Tp, _Empty>;\n-\n+  // Alias for a type that is conditionally present\n+  // (and is an empty type otherwise).\n+  // Data members using this alias should use [[no_unique_address]] so that\n+  // they take no space when not needed.\n+  template<bool _Present, typename _Tp>\n+    using __maybe_present_t = conditional_t<_Present, _Tp, _Empty>;\n+\n+  // Alias for a type that is conditionally const.\n   template<bool _Const, typename _Tp>\n     using __maybe_const_t = conditional_t<_Const, const _Tp, _Tp>;\n \n@@ -1065,8 +1070,8 @@ namespace views\n       {\n       protected:\n \t[[no_unique_address]]\n-\t  __detail::__maybe_empty_t<!is_default_constructible_v<_Callable>,\n-\t\t\t\t    _Callable> _M_callable;\n+\t  __detail::__maybe_present_t<!is_default_constructible_v<_Callable>,\n+\t\t\t\t      _Callable> _M_callable;\n \n       public:\n \tconstexpr\n@@ -2211,8 +2216,9 @@ namespace views\n \n       static constexpr bool _S_needs_cached_begin = !random_access_range<_Vp>;\n       [[no_unique_address]]\n-\t__detail::__maybe_empty_t<_S_needs_cached_begin,\n-\t\t\t\t  __detail::_CachedPosition<_Vp>> _M_cached_begin;\n+\t__detail::__maybe_present_t<_S_needs_cached_begin,\n+\t\t\t\t    __detail::_CachedPosition<_Vp>>\n+\t\t\t\t      _M_cached_begin;\n \n     public:\n       drop_view() = default;\n@@ -2592,8 +2598,8 @@ namespace views\n \n       // XXX: _M_inner is \"present only when !is_reference_v<_InnerRange>\"\n       [[no_unique_address]]\n-\t__detail::__maybe_empty_t<!is_reference_v<_InnerRange>,\n-\t\t\t\t  views::all_t<_InnerRange>> _M_inner;\n+\t__detail::__maybe_present_t<!is_reference_v<_InnerRange>,\n+\t\t\t\t    views::all_t<_InnerRange>> _M_inner;\n \n     public:\n       join_view() = default;\n@@ -2728,8 +2734,8 @@ namespace views\n \n \t  // XXX: _M_current is present only if \"V models forward_range\"\n \t  [[no_unique_address]]\n-\t    __detail::__maybe_empty_t<forward_range<_Vp>,\n-\t\t\t\t      iterator_t<_Base>> _M_current;\n+\t    __detail::__maybe_present_t<forward_range<_Vp>,\n+\t\t\t\t\titerator_t<_Base>> _M_current;\n \n \tpublic:\n \t  using iterator_concept = conditional_t<forward_range<_Base>,\n@@ -2969,7 +2975,7 @@ namespace views\n \n       // XXX: _M_current is \"present only if !forward_range<V>\"\n       [[no_unique_address]]\n-\t__detail::__maybe_empty_t<!forward_range<_Vp>, iterator_t<_Vp>>\n+\t__detail::__maybe_present_t<!forward_range<_Vp>, iterator_t<_Vp>>\n \t  _M_current;\n \n \n@@ -3180,8 +3186,9 @@ namespace views\n       static constexpr bool _S_needs_cached_begin\n \t= !common_range<_Vp> && !random_access_range<_Vp>;\n       [[no_unique_address]]\n-\t__detail::__maybe_empty_t<_S_needs_cached_begin,\n-\t\t\t\t  __detail::_CachedPosition<_Vp>> _M_cached_begin;\n+\t__detail::__maybe_present_t<_S_needs_cached_begin,\n+\t\t\t\t    __detail::_CachedPosition<_Vp>>\n+\t\t\t\t      _M_cached_begin;\n \n     public:\n       reverse_view() = default;"}]}