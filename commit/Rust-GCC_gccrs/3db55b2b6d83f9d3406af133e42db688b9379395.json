{"sha": "3db55b2b6d83f9d3406af133e42db688b9379395", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RiNTViMmI2ZDgzZjlkMzQwNmFmMTMzZTQyZGI2ODhiOTM3OTM5NQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-06-30T16:36:44Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-06-30T16:36:44Z"}, "message": "match.pd (~x | x): Don't use tree_nop_conversion_p.\n\n\t* match.pd (~x | x): Don't use tree_nop_conversion_p.  Build\n\tthe final expression with the operand's type and then convert\n\tit to the type of the expression.\n\n\t* gcc.dg/fold-ior-3.c: New test.\n\nFrom-SVN: r225196", "tree": {"sha": "5b8dce2e677b5633bbb88ff76efadcddc0decb73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b8dce2e677b5633bbb88ff76efadcddc0decb73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3db55b2b6d83f9d3406af133e42db688b9379395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db55b2b6d83f9d3406af133e42db688b9379395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db55b2b6d83f9d3406af133e42db688b9379395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db55b2b6d83f9d3406af133e42db688b9379395/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3bc1d1b65a18177f6baacda0251b4777a2794f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3bc1d1b65a18177f6baacda0251b4777a2794f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3bc1d1b65a18177f6baacda0251b4777a2794f4"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "92953b2f3f220cd8fe9c93dcc25f9f269e737abe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db55b2b6d83f9d3406af133e42db688b9379395/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db55b2b6d83f9d3406af133e42db688b9379395/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3db55b2b6d83f9d3406af133e42db688b9379395", "patch": "@@ -3,6 +3,10 @@\n \t* match.pd (X - (X / Y) * Y): Use convert1 and convert2.  Convert\n \tboth operands of the resulting expression.\t\n \n+\t* match.pd (~x | x): Don't use tree_nop_conversion_p.  Build\n+\tthe final expression with the operand's type and then convert\n+\tit to the type of the expression.\n+\n 2015-06-30  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.c (fold_binary_loc): Move ~x & ~y -> ~(x | y) and"}, {"sha": "74e42efd8071e9180d46086102ac60b5a4dbb5ef", "filename": "gcc/match.pd", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db55b2b6d83f9d3406af133e42db688b9379395/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db55b2b6d83f9d3406af133e42db688b9379395/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=3db55b2b6d83f9d3406af133e42db688b9379395", "patch": "@@ -286,8 +286,7 @@ along with GCC; see the file COPYING3.  If not see\n /* ~x | x -> -1 */\n (simplify\n  (bit_ior:c (convert? @0) (convert? (bit_not @0)))\n- (if (tree_nop_conversion_p (type, TREE_TYPE (@0)))\n-  { build_all_ones_cst (type); }))\n+ (convert { build_all_ones_cst (TREE_TYPE (@0)); }))\n \n /* x ^ x -> 0 */\n (simplify"}, {"sha": "7b51e77b7f8e29c7b148e6ec8d063fb591b38946", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db55b2b6d83f9d3406af133e42db688b9379395/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db55b2b6d83f9d3406af133e42db688b9379395/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3db55b2b6d83f9d3406af133e42db688b9379395", "patch": "@@ -2,6 +2,8 @@\n \n \t* gcc.dg/fold-minus-6.c: New test.\n \n+\t* gcc.dg/fold-ior-3.c: New test.\n+\n 2015-06-30  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \tImplement N4197 - Adding u8 character literals"}, {"sha": "ed89ff9188cbe4f81ddfbfd0e8a061843ce28a5f", "filename": "gcc/testsuite/gcc.dg/fold-ior-3.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db55b2b6d83f9d3406af133e42db688b9379395/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-ior-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db55b2b6d83f9d3406af133e42db688b9379395/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-ior-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-ior-3.c?ref=3db55b2b6d83f9d3406af133e42db688b9379395", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (_Bool a)\n+{\n+  return ((int) a) | ((int) ~a);\n+}\n+\n+int\n+fn2 (unsigned char a)\n+{\n+  return ((int) a) | ((int) ~a);\n+}\n+\n+int\n+fn3 (unsigned short a)\n+{\n+  return ((int) a) | ((int) ~a);\n+}\n+\n+int\n+fn4 (signed char a)\n+{\n+  return ((int) a) | ((int) ~a);\n+}\n+\n+int\n+fn5 (signed short a)\n+{\n+  return ((int) a) | ((int) ~a);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"~\" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"cddce1\" } } */"}]}