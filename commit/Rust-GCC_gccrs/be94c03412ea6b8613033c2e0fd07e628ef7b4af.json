{"sha": "be94c03412ea6b8613033c2e0fd07e628ef7b4af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU5NGMwMzQxMmVhNmI4NjEzMDMzYzJlMGZkMDdlNjI4ZWY3YjRhZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-12-10T20:13:59Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-12-10T20:13:59Z"}, "message": "trans-decl.c (add_argument_checking): Check ts.deferred earlier.\n\n2011-12-10  Tobias Burnus  <burnus@net-b.de>\n            Kai Tietz  <ktietz@redhat.com>\n\n        * trans-decl.c (add_argument_checking): Check ts.deferred earlier.\n        * trans-intrinsic.c (gfc_conv_intrinsic_repeat): Use %ld with long.\n\n\nCo-Authored-By: Kai Tietz <ktietz@redhat.com>\n\nFrom-SVN: r182190", "tree": {"sha": "018cfe6cb6ea181912b1475eedf607a41fab9ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/018cfe6cb6ea181912b1475eedf607a41fab9ad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be94c03412ea6b8613033c2e0fd07e628ef7b4af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be94c03412ea6b8613033c2e0fd07e628ef7b4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be94c03412ea6b8613033c2e0fd07e628ef7b4af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be94c03412ea6b8613033c2e0fd07e628ef7b4af/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7897a1c0294162b5fedef308588f3f354199fd04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7897a1c0294162b5fedef308588f3f354199fd04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7897a1c0294162b5fedef308588f3f354199fd04"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "b7df50611cfa26642cd4bc61c7cfa588babecdfe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be94c03412ea6b8613033c2e0fd07e628ef7b4af/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be94c03412ea6b8613033c2e0fd07e628ef7b4af/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=be94c03412ea6b8613033c2e0fd07e628ef7b4af", "patch": "@@ -1,3 +1,9 @@\n+2011-12-10  Tobias Burnus  <burnus@net-b.de>\n+\t    Kai Tietz  <ktietz@redhat.com>\n+\n+\t* trans-decl.c (add_argument_checking): Check ts.deferred earlier.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_repeat): Use %ld with long.\n+\n 2011-12-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/50815"}, {"sha": "4ea4e7adfdb44c0c041fee8dbe5d0605ffa65767", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be94c03412ea6b8613033c2e0fd07e628ef7b4af/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be94c03412ea6b8613033c2e0fd07e628ef7b4af/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=be94c03412ea6b8613033c2e0fd07e628ef7b4af", "patch": "@@ -4672,7 +4672,8 @@ add_argument_checking (stmtblock_t *block, gfc_symbol *sym)\n   gfc_formal_arglist *formal;\n \n   for (formal = sym->formal; formal; formal = formal->next)\n-    if (formal->sym && formal->sym->ts.type == BT_CHARACTER)\n+    if (formal->sym && formal->sym->ts.type == BT_CHARACTER\n+\t&& !fsym->ts.deferred)\n       {\n \tenum tree_code comparison;\n \ttree cond;\n@@ -4695,10 +4696,8 @@ add_argument_checking (stmtblock_t *block, gfc_symbol *sym)\n \t   if the actual argument is (part of) an array, but only if the\n \t   dummy argument is an array. (See \"Sequence association\" in\n \t   Section 12.4.1.4 for F95 and 12.4.1.5 for F2003.)  */\n-\tif (fsym->ts.deferred)\n-\t  continue;\n-\telse if (fsym->attr.pointer || fsym->attr.allocatable\n-\t\t || (fsym->as && fsym->as->type == AS_ASSUMED_SHAPE))\n+\tif (fsym->attr.pointer || fsym->attr.allocatable\n+\t    || (fsym->as && fsym->as->type == AS_ASSUMED_SHAPE))\n \t  {\n \t    comparison = NE_EXPR;\n \t    message = _(\"Actual string length does not match the declared one\""}, {"sha": "d8e1783e7b16d4202d8d6638db50bb3520a8dd38", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be94c03412ea6b8613033c2e0fd07e628ef7b4af/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be94c03412ea6b8613033c2e0fd07e628ef7b4af/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=be94c03412ea6b8613033c2e0fd07e628ef7b4af", "patch": "@@ -6015,7 +6015,7 @@ gfc_conv_intrinsic_repeat (gfc_se * se, gfc_expr * expr)\n \t\t\t  build_int_cst (ncopies_type, 0));\n   gfc_trans_runtime_check (true, false, cond, &se->pre, &expr->where,\n \t\t\t   \"Argument NCOPIES of REPEAT intrinsic is negative \"\n-\t\t\t   \"(its value is %lld)\",\n+\t\t\t   \"(its value is %ld)\",\n \t\t\t   fold_convert (long_integer_type_node, ncopies));\n \n   /* If the source length is zero, any non negative value of NCOPIES"}]}