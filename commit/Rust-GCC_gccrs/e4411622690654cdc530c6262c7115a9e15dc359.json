{"sha": "e4411622690654cdc530c6262c7115a9e15dc359", "node_id": "C_kwDOANBUbNoAKGU0NDExNjIyNjkwNjU0Y2RjNTMwYzYyNjJjNzExNWE5ZTE1ZGMzNTk", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-11-04T10:34:55Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-11-04T14:37:35Z"}, "message": "Avoid repeating calculations in threader.\n\nWe already attempt to resolve the current path on entry to\nfind_paths_to_name(), so there's no need to do so again for each\nexported range since nothing has changed.\n\nRemoving this redundant calculation avoids 22% of calls into the path\nsolver.\n\nTested on x86-64 and ppc64le Linux with the usual regstrap.  I also\nverified that the before and after number of threads was the same\nin a suite of .ii files from a bootstrap.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/102943\n\t* tree-ssa-threadbackward.c (back_threader::find_paths_to_names):\n\tAvoid duplicate calculation of paths.", "tree": {"sha": "b85bf7a4a2323863c830bf1b26c9530eff218f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b85bf7a4a2323863c830bf1b26c9530eff218f54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4411622690654cdc530c6262c7115a9e15dc359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4411622690654cdc530c6262c7115a9e15dc359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4411622690654cdc530c6262c7115a9e15dc359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4411622690654cdc530c6262c7115a9e15dc359/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ea1ce43b6070aaa94882e8b15f3340344aaa6b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea1ce43b6070aaa94882e8b15f3340344aaa6b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea1ce43b6070aaa94882e8b15f3340344aaa6b2"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "b7eaff945679024cc2d5c4d485a323460a91214c", "filename": "gcc/tree-ssa-threadbackward.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4411622690654cdc530c6262c7115a9e15dc359/gcc%2Ftree-ssa-threadbackward.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4411622690654cdc530c6262c7115a9e15dc359/gcc%2Ftree-ssa-threadbackward.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.c?ref=e4411622690654cdc530c6262c7115a9e15dc359", "patch": "@@ -443,18 +443,6 @@ back_threader::find_paths_to_names (basic_block bb, bitmap interesting)\n \t      goto leave_bb;\n \t    }\n \t}\n-      // Examine blocks that define or export an interesting SSA,\n-      // since they may compute a range which resolve this path.\n-      if ((def_bb == bb\n-\t   || bitmap_bit_p (m_ranger->gori ().exports (bb), i))\n-\t  && m_path.length () > 1)\n-\t{\n-\t  if (maybe_register_path ())\n-\t    {\n-\t      done = true;\n-\t      goto leave_bb;\n-\t    }\n-\t}\n     }\n \n   // If there are interesting names not yet processed, keep looking."}]}