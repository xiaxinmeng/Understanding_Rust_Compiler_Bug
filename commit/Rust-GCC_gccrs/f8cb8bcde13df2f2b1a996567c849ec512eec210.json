{"sha": "f8cb8bcde13df2f2b1a996567c849ec512eec210", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhjYjhiY2RlMTNkZjJmMmIxYTk5NjU2N2M4NDllYzUxMmVlYzIxMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-10-24T22:27:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-10-24T22:27:10Z"}, "message": "arc.c (hwloop_optimize): Add missing space in string literal.\n\n\t* config/arc/arc.c (hwloop_optimize): Add missing space in string\n\tliteral.\n\t* config/rx/rx.c (rx_print_operand): Likewise.\n\t* tree-vect-data-refs.c (vect_analyze_data_refs): Likewise.\n\t* tree-ssa-loop-ch.c (should_duplicate_loop_header_p): Likewise.\n\t* ipa-sra.c (create_parameter_descriptors, process_scan_results):\n\tLikewise.\n\t* genemit.c (emit_c_code): Likewise.\n\t* plugin.c (try_init_one_plugin): Likewise.  Formatting fix.\ncp/\n\t* call.c (convert_arg_to_ellipsis): Add missing space in string\n\tliteral.\n\nFrom-SVN: r277426", "tree": {"sha": "67adcb0e05087bc06e27587ef4d99ec1f233b4cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67adcb0e05087bc06e27587ef4d99ec1f233b4cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8cb8bcde13df2f2b1a996567c849ec512eec210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb8bcde13df2f2b1a996567c849ec512eec210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8cb8bcde13df2f2b1a996567c849ec512eec210", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb8bcde13df2f2b1a996567c849ec512eec210/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea3628bdeb9a5411aaa1aa567fa6bc005057482f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3628bdeb9a5411aaa1aa567fa6bc005057482f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3628bdeb9a5411aaa1aa567fa6bc005057482f"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "9d1997500367ad9ec5774fbc1a9e1ec3610b7228", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -1,3 +1,15 @@\n+2019-10-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/arc/arc.c (hwloop_optimize): Add missing space in string\n+\tliteral.\n+\t* config/rx/rx.c (rx_print_operand): Likewise.\n+\t* tree-vect-data-refs.c (vect_analyze_data_refs): Likewise.\n+\t* tree-ssa-loop-ch.c (should_duplicate_loop_header_p): Likewise.\n+\t* ipa-sra.c (create_parameter_descriptors, process_scan_results):\n+\tLikewise.\n+\t* genemit.c (emit_c_code): Likewise.\n+\t* plugin.c (try_init_one_plugin): Likewise.  Formatting fix.\n+\n 2019-10-24  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* symbols-summary.h (fast_function_summary<T *, V>::release,"}, {"sha": "138c84ec5aaf140c292aee9df4821ad47137478e", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -8001,7 +8001,7 @@ hwloop_optimize (hwloop_info loop)\n \t  return false;\n \t}\n       if (dump_file)\n-\tfprintf (dump_file, \";; loop %d has a control like last insn;\"\n+\tfprintf (dump_file, \";; loop %d has a control like last insn; \"\n \t\t \"add a nop\\n\",\n \t\t loop->loop_no);\n \n@@ -8011,7 +8011,7 @@ hwloop_optimize (hwloop_info loop)\n   if (LABEL_P (last_insn))\n     {\n       if (dump_file)\n-\tfprintf (dump_file, \";; loop %d has a label as last insn;\"\n+\tfprintf (dump_file, \";; loop %d has a label as last insn; \"\n \t\t \"add a nop\\n\",\n \t\t loop->loop_no);\n       last_insn = emit_insn_after (gen_nopv (), last_insn);\n@@ -8038,7 +8038,7 @@ hwloop_optimize (hwloop_info loop)\n   if (entry_edge == NULL)\n     {\n       if (dump_file)\n-\tfprintf (dump_file, \";; loop %d has no fallthru edge jumping\"\n+\tfprintf (dump_file, \";; loop %d has no fallthru edge jumping \"\n \t\t \"into the loop\\n\",\n \t\t loop->loop_no);\n       return false;"}, {"sha": "931205c9232af29e0de78d13609d42bb46eec093", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -649,7 +649,7 @@ rx_print_operand (FILE * file, rtx op, int letter)\n \tcase CTRLREG_INTB:  fprintf (file, \"intb\"); break;\n \tdefault:\n \t  warning (0, \"unrecognized control register number: %d\"\n-\t\t   \"- using %<psw%>\", (int) INTVAL (op));\n+\t\t   \" - using %<psw%>\", (int) INTVAL (op));\n \t  fprintf (file, \"psw\");\n \t  break;\n \t}"}, {"sha": "33420f1289d390ae9000e0dd2c38589bb75c5907", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -1,3 +1,8 @@\n+2019-10-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* call.c (convert_arg_to_ellipsis): Add missing space in string\n+\tliteral.\n+\n 2019-10-24  Marek Polacek  <polacek@redhat.com>\n \n \t* decl.c (reshape_init_r): Add missing space."}, {"sha": "cbd1fe8a0a452d7e3747c59ee3438ea73828365b", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -7590,7 +7590,7 @@ convert_arg_to_ellipsis (tree arg, tsubst_flags_t complain)\n \t      && TYPE_MODE (TREE_TYPE (prom)) != TYPE_MODE (arg_type)\n \t      && (complain & tf_warning))\n \t    warning_at (loc, OPT_Wabi, \"scoped enum %qT passed through %<...%>\"\n-\t\t\t\"as %qT before %<-fabi-version=6%>, %qT after\",\n+\t\t\t\" as %qT before %<-fabi-version=6%>, %qT after\",\n \t\t\targ_type,\n \t\t\tTREE_TYPE (prom), ENUM_UNDERLYING_TYPE (arg_type));\n \t  if (!abi_version_at_least (6))"}, {"sha": "d590f8d26dd2ee8bb49cfa29b3d6fe326dbbf392", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -305,7 +305,7 @@ emit_c_code (const char *code, bool can_fail_p, const char *name)\n   else\n     printf (\"#define FAIL _Pragma (\\\"GCC error \\\\\\\"%s cannot FAIL\\\\\\\"\\\")\"\n \t    \" (void)0\\n\", name);\n-  printf (\"#define DONE return (_val = get_insns (),\"\n+  printf (\"#define DONE return (_val = get_insns (), \"\n \t  \"end_sequence (), _val)\\n\");\n \n   rtx_reader_ptr->print_md_ptr_loc (code);"}, {"sha": "836db4015880d747f716f30b90e8d703ce424f4b", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -1137,8 +1137,8 @@ create_parameter_descriptors (cgraph_node *node,\n \t      && TYPE_NONALIASED_COMPONENT (type))\n \t    {\n \t      if (dump_file && (dump_flags & TDF_DETAILS))\n-\t\tfprintf (dump_file, \" not a candidate, reference to a\"\n-\t\t\t \"nonaliased component array\\n\");\n+\t\tfprintf (dump_file, \" not a candidate, reference to \"\n+\t\t\t \"a nonaliased component array\\n\");\n \t      continue;\n \t    }\n \t  if (!is_gimple_reg (parm))\n@@ -2284,8 +2284,8 @@ process_scan_results (cgraph_node *node, struct function *fun,\n       if (nonarg_acc_size > param_size_limit\n \t  || (!desc->by_ref && nonarg_acc_size == param_size_limit))\n \t{\n-\t  disqualify_split_candidate (desc, \"Would result into a too big set of\"\n-\t\t\t\t      \"replacements.\");\n+\t  disqualify_split_candidate (desc, \"Would result into a too big set \"\n+\t\t\t\t      \"of replacements.\");\n \t}\n       else\n \t{"}, {"sha": "8ea08ab8a67ffb43016a3a1668e18a8a44f22e28", "filename": "gcc/plugin.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fplugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Fplugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.c?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -712,10 +712,10 @@ try_init_one_plugin (struct plugin_name_args *plugin)\n   if (dlsym (dl_handle, str_license) == NULL)\n     fatal_error (input_location,\n \t\t \"plugin %s is not licensed under a GPL-compatible license\"\n-\t\t \"%s\", plugin->full_name, dlerror ());\n+\t\t \" %s\", plugin->full_name, dlerror ());\n \n-  PTR_UNION_AS_VOID_PTR (plugin_init_union) =\n-      dlsym (dl_handle, str_plugin_init_func_name);\n+  PTR_UNION_AS_VOID_PTR (plugin_init_union)\n+    = dlsym (dl_handle, str_plugin_init_func_name);\n   plugin_init = PTR_UNION_AS_CAST_PTR (plugin_init_union);\n \n   if ((err = dlerror ()) != NULL)"}, {"sha": "5a30a296d5e09170200010677e657d266f365a56", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -199,7 +199,7 @@ should_duplicate_loop_header_p (basic_block header, class loop *loop,\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tfprintf (dump_file,\n \t\t \"  Not duplicating bb %i: condition based on non-IV loop\"\n-\t\t \"variant.\\n\", header->index);\n+\t\t \" variant.\\n\", header->index);\n       return false;\n     }\n "}, {"sha": "9dd18d265361ba5635de685f9d898e355999bf4c", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb8bcde13df2f2b1a996567c849ec512eec210/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=f8cb8bcde13df2f2b1a996567c849ec512eec210", "patch": "@@ -4282,7 +4282,7 @@ vect_analyze_data_refs (vec_info *vinfo, poly_uint64 *min_vf, bool *fatal)\n \t{\n \t  if (nested_in_vect_loop_p (loop, stmt_info))\n \t    return opt_result::failure_at (stmt_info->stmt,\n-\t\t\t\t\t   \"not vectorized:\"\n+\t\t\t\t\t   \"not vectorized: \"\n \t\t\t\t\t   \"not suitable for strided load %G\",\n \t\t\t\t\t   stmt_info->stmt);\n \t  STMT_VINFO_STRIDED_P (stmt_info) = true;"}]}