{"sha": "0d65bdbb703d5da86f2987aadd735049db9c2af0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ2NWJkYmI3MDNkNWRhODZmMjk4N2FhZGQ3MzUwNDlkYjljMmFmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-05-26T06:00:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-26T06:00:44Z"}, "message": "re PR target/44199 (ppc64 glibc miscompilation)\n\n\tPR target/44199\n\t* config/rs6000/rs6000.c (rs6000_emit_epilogue): If cfun->calls_alloca\n\tor total_size is larger than red zone size for non-V4 ABI, emit a\n\tstack_tie resp. frame_tie insn before stack pointer restore.\n\t* config/rs6000/rs6000.md (frame_tie): New insn.\n\nFrom-SVN: r159853", "tree": {"sha": "dd65d1e614fa43328db8f1be183bb7801199c86b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd65d1e614fa43328db8f1be183bb7801199c86b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d65bdbb703d5da86f2987aadd735049db9c2af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d65bdbb703d5da86f2987aadd735049db9c2af0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d65bdbb703d5da86f2987aadd735049db9c2af0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d65bdbb703d5da86f2987aadd735049db9c2af0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc9a4ca9331ad603c930616c7d5700b5b56dc82b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9a4ca9331ad603c930616c7d5700b5b56dc82b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc9a4ca9331ad603c930616c7d5700b5b56dc82b"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "abcdeae510f0a1fe56f507ee1a25a50903f906b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d65bdbb703d5da86f2987aadd735049db9c2af0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d65bdbb703d5da86f2987aadd735049db9c2af0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d65bdbb703d5da86f2987aadd735049db9c2af0", "patch": "@@ -1,3 +1,11 @@\n+2010-05-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/44199\n+\t* config/rs6000/rs6000.c (rs6000_emit_epilogue): If cfun->calls_alloca\n+\tor total_size is larger than red zone size for non-V4 ABI, emit a\n+\tstack_tie resp. frame_tie insn before stack pointer restore.\n+\t* config/rs6000/rs6000.md (frame_tie): New insn.\n+\n 2010-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* function.h (struct function): Add can_throw_non_call_exceptions bit."}, {"sha": "eb8af6fea845f41d247854bccfcd322c167a3592", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d65bdbb703d5da86f2987aadd735049db9c2af0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d65bdbb703d5da86f2987aadd735049db9c2af0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0d65bdbb703d5da86f2987aadd735049db9c2af0", "patch": "@@ -19796,6 +19796,16 @@ rs6000_emit_epilogue (int sibcall)\n       frame_reg_rtx = sp_reg_rtx;\n       if (DEFAULT_ABI == ABI_V4)\n \tframe_reg_rtx = gen_rtx_REG (Pmode, 11);\n+      /* Prevent reordering memory accesses against stack pointer restore.  */\n+      else if (cfun->calls_alloca\n+\t       || offset_below_red_zone_p (-info->total_size))\n+\t{\n+\t  rtx mem1 = gen_rtx_MEM (BLKmode, hard_frame_pointer_rtx);\n+\t  rtx mem2 = gen_rtx_MEM (BLKmode, sp_reg_rtx);\n+\t  MEM_NOTRAP_P (mem1) = 1;\n+\t  MEM_NOTRAP_P (mem2) = 1;\n+\t  emit_insn (gen_frame_tie (mem1, mem2));\n+\t}\n \n       insn = emit_insn (gen_add3_insn (frame_reg_rtx, hard_frame_pointer_rtx,\n \t\t\t\t       GEN_INT (info->total_size)));\n@@ -19805,6 +19815,14 @@ rs6000_emit_epilogue (int sibcall)\n \t   && DEFAULT_ABI != ABI_V4\n \t   && !crtl->calls_eh_return)\n     {\n+      /* Prevent reordering memory accesses against stack pointer restore.  */\n+      if (cfun->calls_alloca\n+\t  || offset_below_red_zone_p (-info->total_size))\n+\t{\n+\t  rtx mem = gen_rtx_MEM (BLKmode, sp_reg_rtx);\n+\t  MEM_NOTRAP_P (mem) = 1;\n+\t  emit_insn (gen_stack_tie (mem));\n+\t}\n       insn = emit_insn (gen_add3_insn (sp_reg_rtx, sp_reg_rtx,\n \t\t\t\t       GEN_INT (info->total_size)));\n       sp_offset = 0;"}, {"sha": "34d619c38e74094ac93364c300fb6d1ea3330054", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d65bdbb703d5da86f2987aadd735049db9c2af0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d65bdbb703d5da86f2987aadd735049db9c2af0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0d65bdbb703d5da86f2987aadd735049db9c2af0", "patch": "@@ -15286,6 +15286,15 @@\n   \"\"\n   [(set_attr \"length\" \"0\")])\n \n+; Like stack_tie, but depend on both fp and sp based memory.\n+(define_insn \"frame_tie\"\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"+m\")\n+\t(unspec:BLK [(match_dup 0)\n+\t\t     (match_operand:BLK 1 \"memory_operand\" \"m\")] UNSPEC_TIE))]\n+  \"\"\n+  \"\"\n+  [(set_attr \"length\" \"0\")])\n+\n \n (define_expand \"epilogue\"\n   [(use (const_int 0))]"}]}