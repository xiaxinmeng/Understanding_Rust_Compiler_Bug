{"sha": "db57bbc9b26143a2efb24868ce1a0cb8ed653447", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI1N2JiYzliMjYxNDNhMmVmYjI0ODY4Y2UxYTBjYjhlZDY1MzQ0Nw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-02-25T10:20:40Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-02-25T10:20:40Z"}, "message": "re PR target/55426 (gcc.target/arm/neon-vld1_dupQ.c ICEs on armeb)\n\n\tPR target/55426\n\t* config/arm/arm.h (CANNOT_CHANGE_MODE_CLASS): Allow 128 to 64-bit\n\tconversions.\n\nFrom-SVN: r208116", "tree": {"sha": "ce9c0e97460f7c8e2f8900b4796a62a7cf1715b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce9c0e97460f7c8e2f8900b4796a62a7cf1715b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db57bbc9b26143a2efb24868ce1a0cb8ed653447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db57bbc9b26143a2efb24868ce1a0cb8ed653447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db57bbc9b26143a2efb24868ce1a0cb8ed653447", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db57bbc9b26143a2efb24868ce1a0cb8ed653447/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43b3f52f4a5c6c6f03039a06da6006e1b5c44f14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b3f52f4a5c6c6f03039a06da6006e1b5c44f14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b3f52f4a5c6c6f03039a06da6006e1b5c44f14"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "4042cf9f31c68472e2015a76bea49fb89fe4eae5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db57bbc9b26143a2efb24868ce1a0cb8ed653447/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db57bbc9b26143a2efb24868ce1a0cb8ed653447/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db57bbc9b26143a2efb24868ce1a0cb8ed653447", "patch": "@@ -1,3 +1,9 @@\n+2014-02-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/55426\n+\t* config/arm/arm.h (CANNOT_CHANGE_MODE_CLASS): Allow 128 to 64-bit\n+\tconversions.\n+\n 2014-02-25  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_PREFETCHWT1_SET),"}, {"sha": "7ca47a7ec70faeef510a05b7f5d388ed06f53301", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db57bbc9b26143a2efb24868ce1a0cb8ed653447/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db57bbc9b26143a2efb24868ce1a0cb8ed653447/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=db57bbc9b26143a2efb24868ce1a0cb8ed653447", "patch": "@@ -1257,11 +1257,15 @@ enum reg_class\n    VFPv2.\n    In big-endian mode, modes greater than word size (i.e. DFmode) are stored in\n    VFP registers in little-endian order.  We can't describe that accurately to\n-   GCC, so avoid taking subregs of such values.  */\n-#define CANNOT_CHANGE_MODE_CLASS(FROM, TO, CLASS)\t\\\n-  (TARGET_VFP && TARGET_BIG_END\t\t\t\t\\\n-   && (GET_MODE_SIZE (FROM) > UNITS_PER_WORD\t\t\\\n-       || GET_MODE_SIZE (TO) > UNITS_PER_WORD)\t\t\\\n+   GCC, so avoid taking subregs of such values.\n+   The only exception is going from a 128-bit to a 64-bit type.  In that case\n+   the data layout happens to be consistent for big-endian, so we explicitly allow\n+   that case.  */\n+#define CANNOT_CHANGE_MODE_CLASS(FROM, TO, CLASS)\t\t\\\n+  (TARGET_VFP && TARGET_BIG_END\t\t\t\t\t\\\n+   && !(GET_MODE_SIZE (FROM) == 16 && GET_MODE_SIZE (TO) == 8)\t\\\n+   && (GET_MODE_SIZE (FROM) > UNITS_PER_WORD\t\t\t\\\n+       || GET_MODE_SIZE (TO) > UNITS_PER_WORD)\t\t\t\\\n    && reg_classes_intersect_p (VFP_REGS, (CLASS)))\n \n /* The class value for index registers, and the one for base regs.  */"}]}