{"sha": "58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThlYzFkMGU2NzlhMGRkZDk2NDhkMWY0ZWZmODEwYzk5NzNiZWRlMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-06T13:14:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-06T13:14:34Z"}, "message": "sse.md (*avx2_pmaddwd, [...]): Use v instead of x in vex or maybe_vex alternatives...\n\n\t* config/i386/sse.md (*avx2_pmaddwd, *sse2_pmaddwd): Use\n\tv instead of x in vex or maybe_vex alternatives, use\n\tmaybe_evex instead of vex in prefix.\n\n\t* gcc.target/i386/avx512bw-vpmaddwd-3.c: New test.\n\nFrom-SVN: r235971", "tree": {"sha": "fef1a1bf78727d0eab1dd345e5b0d25326911ab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fef1a1bf78727d0eab1dd345e5b0d25326911ab6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5111f1d4ac6b1ccc41aac4ccaf9a6a8c047f0e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5111f1d4ac6b1ccc41aac4ccaf9a6a8c047f0e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5111f1d4ac6b1ccc41aac4ccaf9a6a8c047f0e67"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "14ca88749af5914a8aedacdfb0e54f75c79bb5e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "patch": "@@ -1,5 +1,9 @@\n 2016-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (*avx2_pmaddwd, *sse2_pmaddwd): Use\n+\tv instead of x in vex or maybe_vex alternatives, use\n+\tmaybe_evex instead of vex in prefix.\n+\n \t* config/i386/sse.md (*vec_extractv4sf_0, *sse4_1_extractps,\n \t*vec_extractv4sf_mem, vec_extract_lo_v16hi, vec_extract_hi_v16hi,\n \tvec_extract_lo_v32qi, vec_extract_hi_v32qi): Use v instead of x"}, {"sha": "b7b8966d2947fc490d0571183b950c567ec2ea97", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "patch": "@@ -9817,19 +9817,19 @@\n   \"ix86_fixup_binary_operands_no_copy (MULT, V16HImode, operands);\")\n \n (define_insn \"*avx2_pmaddwd\"\n-  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8SI 0 \"register_operand\" \"=x,v\")\n \t(plus:V8SI\n \t  (mult:V8SI\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI\n-\t\t(match_operand:V16HI 1 \"nonimmediate_operand\" \"%x\")\n+\t\t(match_operand:V16HI 1 \"nonimmediate_operand\" \"%x,v\")\n \t\t(parallel [(const_int 0) (const_int 2)\n \t\t\t   (const_int 4) (const_int 6)\n \t\t\t   (const_int 8) (const_int 10)\n \t\t\t   (const_int 12) (const_int 14)])))\n \t    (sign_extend:V8SI\n \t      (vec_select:V8HI\n-\t\t(match_operand:V16HI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t(match_operand:V16HI 2 \"nonimmediate_operand\" \"xm,vm\")\n \t\t(parallel [(const_int 0) (const_int 2)\n \t\t\t   (const_int 4) (const_int 6)\n \t\t\t   (const_int 8) (const_int 10)\n@@ -9850,7 +9850,8 @@\n   \"TARGET_AVX2 && ix86_binary_operator_ok (MULT, V16HImode, operands)\"\n   \"vpmaddwd\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"isa\" \"*,avx512bw\")\n+   (set_attr \"prefix\" \"vex,evex\")\n    (set_attr \"mode\" \"OI\")])\n \n (define_expand \"sse2_pmaddwd\"\n@@ -9880,17 +9881,17 @@\n   \"ix86_fixup_binary_operands_no_copy (MULT, V8HImode, operands);\")\n \n (define_insn \"*sse2_pmaddwd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x,v\")\n \t(plus:V4SI\n \t  (mult:V4SI\n \t    (sign_extend:V4SI\n \t      (vec_select:V4HI\n-\t\t(match_operand:V8HI 1 \"vector_operand\" \"%0,x\")\n+\t\t(match_operand:V8HI 1 \"vector_operand\" \"%0,x,v\")\n \t\t(parallel [(const_int 0) (const_int 2)\n \t\t\t   (const_int 4) (const_int 6)])))\n \t    (sign_extend:V4SI\n \t      (vec_select:V4HI\n-\t\t(match_operand:V8HI 2 \"vector_operand\" \"xBm,xm\")\n+\t\t(match_operand:V8HI 2 \"vector_operand\" \"xBm,xm,vm\")\n \t\t(parallel [(const_int 0) (const_int 2)\n \t\t\t   (const_int 4) (const_int 6)]))))\n \t  (mult:V4SI\n@@ -9905,12 +9906,13 @@\n   \"TARGET_SSE2 && ix86_binary_operator_ok (MULT, V8HImode, operands)\"\n   \"@\n    pmaddwd\\t{%2, %0|%0, %2}\n+   vpmaddwd\\t{%2, %1, %0|%0, %1, %2}\n    vpmaddwd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n+  [(set_attr \"isa\" \"noavx,avx,avx512bw\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"simul\")\n-   (set_attr \"prefix_data16\" \"1,*\")\n-   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"prefix_data16\" \"1,*,*\")\n+   (set_attr \"prefix\" \"orig,vex,evex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"avx512dq_mul<mode>3<mask_name>\""}, {"sha": "b7a06a279886a34d4bb405c5a04d67d05fc14415", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "patch": "@@ -1,3 +1,7 @@\n+2016-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.target/i386/avx512bw-vpmaddwd-3.c: New test.\n+\n 2016-05-06  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR debug/70935"}, {"sha": "d0c7c38e195e1517efb74f9ec4aae6d4fd7a4a21", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpmaddwd-3.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpmaddwd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ec1d0e679a0ddd9648d1f4eff810c9973bede0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpmaddwd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpmaddwd-3.c?ref=58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do assemble { target { avx512bw && { avx512vl && { ! ia32 } } } } } */\n+/* { dg-options \"-O2 -mavx512bw -mavx512vl\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+f1 (__m128i x, __m128i y)\n+{\n+  register __m128i a __asm (\"xmm16\"), b __asm (\"xmm17\");\n+  a = x; b = y;\n+  asm volatile (\"\" : \"+v\" (a), \"+v\" (b));\n+  a = _mm_madd_epi16 (a, b);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+void\n+f2 (__m256i x, __m256i y)\n+{\n+  register __m256i a __asm (\"xmm16\"), b __asm (\"xmm17\");\n+  a = x; b = y;\n+  asm volatile (\"\" : \"+v\" (a), \"+v\" (b));\n+  a = _mm256_madd_epi16 (a, b);\n+  asm volatile (\"\" : \"+v\" (a));\n+}"}]}