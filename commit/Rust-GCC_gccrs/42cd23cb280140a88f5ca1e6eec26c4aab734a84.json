{"sha": "42cd23cb280140a88f5ca1e6eec26c4aab734a84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJjZDIzY2IyODAxNDBhODhmNWNhMWU2ZWVjMjZjNGFhYjczNGE4NA==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2008-01-25T21:55:47Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2008-01-25T21:55:47Z"}, "message": "re PR fortran/34661 (ice on where / ASSIGNMENT(=))\n\ngcc/fortran:\n2008-01-25  Daniel Franke  <franke.daniel@gmail.com>\n\n        PR fortran/34661\n        * resolve.c (resolve_where): Added check if user-defined assignment\n        operator is an elemental subroutine.\n        (gfc_resolve_where_code_in_forall): Likewise.\n\ngcc/testsuite:\n2008-01-25  Daniel Franke  <franke.daniel@gmail.com>\n\n        PR fortran/34661\n        * gfortran.dg/where_operator_assign_4.f90: New test.\n\nFrom-SVN: r131845", "tree": {"sha": "3ba33c622a4fe8a006e1ca2101a2dec278009729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ba33c622a4fe8a006e1ca2101a2dec278009729"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42cd23cb280140a88f5ca1e6eec26c4aab734a84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42cd23cb280140a88f5ca1e6eec26c4aab734a84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42cd23cb280140a88f5ca1e6eec26c4aab734a84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42cd23cb280140a88f5ca1e6eec26c4aab734a84/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3725c0cab37a26f998242bcff23b4b0fdc900de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3725c0cab37a26f998242bcff23b4b0fdc900de5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3725c0cab37a26f998242bcff23b4b0fdc900de5"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "6860244a8187d414769540d3124dcac7db171fc2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42cd23cb280140a88f5ca1e6eec26c4aab734a84/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42cd23cb280140a88f5ca1e6eec26c4aab734a84/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=42cd23cb280140a88f5ca1e6eec26c4aab734a84", "patch": "@@ -1,3 +1,10 @@\n+2008-01-25  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/34661\n+\t* resolve.c (resolve_where): Added check if user-defined assignment \n+\toperator is an elemental subroutine.\n+\t(gfc_resolve_where_code_in_forall): Likewise.\n+\n 2008-01-24  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/33375"}, {"sha": "833fd27611c5f9e3f3a8d6f73fcd8de87be14805", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42cd23cb280140a88f5ca1e6eec26c4aab734a84/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42cd23cb280140a88f5ca1e6eec26c4aab734a84/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=42cd23cb280140a88f5ca1e6eec26c4aab734a84", "patch": "@@ -5656,6 +5656,9 @@ resolve_where (gfc_code *code, gfc_expr *mask)\n   \n \t    case EXEC_ASSIGN_CALL:\n \t      resolve_call (cnext);\n+\t      if (!cnext->resolved_sym->attr.elemental)\n+\t\tgfc_error(\"Non-ELEMETAL user-defined assignment in WHERE at %L\",\n+\t\t\t  &cnext->ext.actual->expr->where);\n \t      break;\n \n \t    /* WHERE or WHERE construct is part of a where-body-construct */\n@@ -5738,6 +5741,9 @@ gfc_resolve_where_code_in_forall (gfc_code *code, int nvar,\n \t    /* WHERE operator assignment statement */\n \t    case EXEC_ASSIGN_CALL:\n \t      resolve_call (cnext);\n+\t      if (!cnext->resolved_sym->attr.elemental)\n+\t\tgfc_error(\"Non-ELEMETAL user-defined assignment in WHERE at %L\",\n+\t\t\t  &cnext->ext.actual->expr->where);\n \t      break;\n \n \t    /* WHERE or WHERE construct is part of a where-body-construct */"}, {"sha": "0ea511952dce7be9c391811ced636e2a49661810", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42cd23cb280140a88f5ca1e6eec26c4aab734a84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42cd23cb280140a88f5ca1e6eec26c4aab734a84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42cd23cb280140a88f5ca1e6eec26c4aab734a84", "patch": "@@ -1,3 +1,8 @@\n+2008-01-25  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/34661\n+\t* gfortran.dg/where_operator_assign_4.f90: New test.\n+\n 2008-01-25  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/builtin-inf-1.c, gcc.dg/compare6.c, gcc.dg/sibcall-3.c,"}, {"sha": "4cf14b267315b28a450615da8c7aa420a38c1eea", "filename": "gcc/testsuite/gfortran.dg/where_operator_assign_4.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42cd23cb280140a88f5ca1e6eec26c4aab734a84/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhere_operator_assign_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42cd23cb280140a88f5ca1e6eec26c4aab734a84/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhere_operator_assign_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhere_operator_assign_4.f90?ref=42cd23cb280140a88f5ca1e6eec26c4aab734a84", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+! PR fortran/34661 ICE on user-defined assignments in where statements\n+! Testcase contributed by Joost VandeVondele\n+\n+MODULE M1\n+ IMPLICIT NONE\n+ TYPE T1\n+   INTEGER :: I\n+ END TYPE T1\n+ INTERFACE ASSIGNMENT(=)\n+  MODULE PROCEDURE S1\n+ END INTERFACE\n+CONTAINS\n+ SUBROUTINE S1(I,J)\n+   TYPE(T1), INTENT(OUT)  :: I(2)\n+   TYPE(T1), INTENT(IN)  :: J(2)\n+   I%I=-J%I\n+ END SUBROUTINE S1\n+END MODULE M1\n+\n+USE M1\n+TYPE(T1) :: I(2),J(2)\n+I(:)%I=1\n+WHERE (I(:)%I>0)\n+ J=I                       ! { dg-error \"Non-ELEMETAL user-defined assignment in WHERE\" }\n+END WHERE\n+\n+WHERE (I(:)%I>0) J=I       ! { dg-error \"Non-ELEMETAL user-defined assignment in WHERE\" }\n+\n+END"}]}