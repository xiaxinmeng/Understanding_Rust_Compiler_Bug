{"sha": "8c410416207d0fd87d574c621eaacfb74588c47e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM0MTA0MTYyMDdkMGZkODdkNTc0YzYyMWVhYWNmYjc0NTg4YzQ3ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-05-31T11:58:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-31T11:58:35Z"}, "message": "flow.c (propagate_block): If block has no successors, stores to frame are dead if not used.\n\n\t* flow.c (propagate_block): If block has no successors, stores to\n\tframe are dead if not used.\n\nFrom-SVN: r34296", "tree": {"sha": "27d600ce15ff0bdab4697a43d2848886d96aed6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27d600ce15ff0bdab4697a43d2848886d96aed6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c410416207d0fd87d574c621eaacfb74588c47e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c410416207d0fd87d574c621eaacfb74588c47e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c410416207d0fd87d574c621eaacfb74588c47e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c410416207d0fd87d574c621eaacfb74588c47e/comments", "author": null, "committer": null, "parents": [{"sha": "efd58783444cdeb32ac41a9a1bc645e9544e8c1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd58783444cdeb32ac41a9a1bc645e9544e8c1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd58783444cdeb32ac41a9a1bc645e9544e8c1f"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "8dea6937a98d83b48d90ffd9c9eccb75c4417945", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c410416207d0fd87d574c621eaacfb74588c47e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c410416207d0fd87d574c621eaacfb74588c47e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c410416207d0fd87d574c621eaacfb74588c47e", "patch": "@@ -1,3 +1,8 @@\n+Wed May 31 08:07:52 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* flow.c (propagate_block): If block has no successors, stores to\n+\tframe are dead if not used.\n+\n 2000-05-31  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* stmt (expand_end_case): Reorder conversion sequence for jump"}, {"sha": "5526c9f7fc34c9d5946cf85d9688a23a8615d12f", "filename": "gcc/flow.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c410416207d0fd87d574c621eaacfb74588c47e/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c410416207d0fd87d574c621eaacfb74588c47e/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=8c410416207d0fd87d574c621eaacfb74588c47e", "patch": "@@ -3772,6 +3772,26 @@ propagate_block (bb, live, local_set, flags)\n \t\t\t\t { REG_BASIC_BLOCK (i) = REG_BLOCK_GLOBAL; });\n     }\n \n+  /* If this block has no successors, any stores to the frame that aren't\n+     used later in the block are dead.  So make a pass over the block\n+     recording any such that are made and show them dead at the end.  We do\n+     a very conservative and simple job here.  */\n+  if (bb->succ != 0 && bb->succ->succ_next == 0\n+      && bb->succ->dest == EXIT_BLOCK_PTR)\n+    for (insn = bb->end; insn != bb->head; insn = PREV_INSN (insn))\n+      if (GET_CODE (insn) == INSN && GET_CODE (PATTERN (insn)) == SET\n+\t  && GET_CODE (SET_DEST (PATTERN (insn))) == MEM)\n+\t{\n+\t  rtx mem = SET_DEST (PATTERN (insn));\n+\n+\t  if ((GET_CODE (XEXP (mem, 0)) == REG\n+\t       && REGNO (XEXP (mem, 0)) == FRAME_POINTER_REGNUM)\n+\t      || (GET_CODE (XEXP (mem, 0)) == PLUS\n+\t\t  && GET_CODE (XEXP (XEXP (mem, 0), 0)) == REG\n+\t\t  && REGNO (XEXP (XEXP (mem, 0), 0)) == FRAME_POINTER_REGNUM))\n+\t    pbi->mem_set_list = alloc_EXPR_LIST (0, mem, pbi->mem_set_list);\n+\t}\n+\n   /* Scan the block an insn at a time from end to beginning.  */\n \n   for (insn = bb->end; ; insn = prev)"}]}