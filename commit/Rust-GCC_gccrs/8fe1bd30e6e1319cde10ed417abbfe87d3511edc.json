{"sha": "8fe1bd30e6e1319cde10ed417abbfe87d3511edc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZlMWJkMzBlNmUxMzE5Y2RlMTBlZDQxN2FiYmZlODdkMzUxMWVkYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-01T14:59:25Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-01T14:59:25Z"}, "message": "[02/11] Remove vect_schedule_slp return value\n\nNothing now uses the vect_schedule_slp return value, so it's not worth\npropagating the value through vect_schedule_slp_instance.\n\n2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vectorizer.h (vect_schedule_slp): Return void.\n\t* tree-vect-slp.c (vect_schedule_slp_instance): Likewise.\n\t(vect_schedule_slp): Likewise.\n\nFrom-SVN: r263215", "tree": {"sha": "dfe1a55ae90524f2406e34ba4bfd1133fd51ce1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfe1a55ae90524f2406e34ba4bfd1133fd51ce1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fe1bd30e6e1319cde10ed417abbfe87d3511edc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fe1bd30e6e1319cde10ed417abbfe87d3511edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fe1bd30e6e1319cde10ed417abbfe87d3511edc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fe1bd30e6e1319cde10ed417abbfe87d3511edc/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99615cf595266cdbe27fb3caf201fa38bd1f8d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99615cf595266cdbe27fb3caf201fa38bd1f8d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99615cf595266cdbe27fb3caf201fa38bd1f8d8b"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "0dd29def4e23914406def732b6f6232e6f1f592c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe1bd30e6e1319cde10ed417abbfe87d3511edc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe1bd30e6e1319cde10ed417abbfe87d3511edc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fe1bd30e6e1319cde10ed417abbfe87d3511edc", "patch": "@@ -1,3 +1,9 @@\n+2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vectorizer.h (vect_schedule_slp): Return void.\n+\t* tree-vect-slp.c (vect_schedule_slp_instance): Likewise.\n+\t(vect_schedule_slp): Likewise.\n+\n 2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-loop.c (vect_transform_loop_stmt): Remove slp_scheduled"}, {"sha": "304580643715d887278ee1423d8c8cdd46fceebb", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe1bd30e6e1319cde10ed417abbfe87d3511edc/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe1bd30e6e1319cde10ed417abbfe87d3511edc/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=8fe1bd30e6e1319cde10ed417abbfe87d3511edc", "patch": "@@ -3849,11 +3849,11 @@ vect_transform_slp_perm_load (slp_tree node, vec<tree> dr_chain,\n \n /* Vectorize SLP instance tree in postorder.  */\n \n-static bool\n+static void\n vect_schedule_slp_instance (slp_tree node, slp_instance instance,\n \t\t\t    scalar_stmts_to_slp_tree_map_t *bst_map)\n {\n-  bool grouped_store, is_store;\n+  bool grouped_store;\n   gimple_stmt_iterator si;\n   stmt_vec_info stmt_info;\n   unsigned int group_size;\n@@ -3862,14 +3862,14 @@ vect_schedule_slp_instance (slp_tree node, slp_instance instance,\n   slp_tree child;\n \n   if (SLP_TREE_DEF_TYPE (node) != vect_internal_def)\n-    return false;\n+    return;\n \n   /* See if we have already vectorized the same set of stmts and reuse their\n      vectorized stmts.  */\n   if (slp_tree *leader = bst_map->get (SLP_TREE_SCALAR_STMTS (node)))\n     {\n       SLP_TREE_VEC_STMTS (node).safe_splice (SLP_TREE_VEC_STMTS (*leader));\n-      return false;\n+      return;\n     }\n \n   bst_map->put (SLP_TREE_SCALAR_STMTS (node).copy (), node);\n@@ -3991,11 +3991,10 @@ vect_schedule_slp_instance (slp_tree node, slp_instance instance,\n \t    }\n \t  v0.release ();\n \t  v1.release ();\n-\t  return false;\n+\t  return;\n \t}\n     }\n-  is_store = vect_transform_stmt (stmt_info, &si, &grouped_store, node,\n-\t\t\t\t  instance);\n+  vect_transform_stmt (stmt_info, &si, &grouped_store, node, instance);\n \n   /* Restore stmt def-types.  */\n   FOR_EACH_VEC_ELT (SLP_TREE_CHILDREN (node), i, child)\n@@ -4005,8 +4004,6 @@ vect_schedule_slp_instance (slp_tree node, slp_instance instance,\n \tFOR_EACH_VEC_ELT (SLP_TREE_SCALAR_STMTS (child), j, child_stmt_info)\n \t  STMT_VINFO_DEF_TYPE (child_stmt_info) = vect_internal_def;\n       }\n-\n-  return is_store;\n }\n \n /* Replace scalar calls from SLP node NODE with setting of their lhs to zero.\n@@ -4048,23 +4045,21 @@ vect_remove_slp_scalar_calls (slp_tree node)\n \n /* Generate vector code for all SLP instances in the loop/basic block.  */\n \n-bool\n+void\n vect_schedule_slp (vec_info *vinfo)\n {\n   vec<slp_instance> slp_instances;\n   slp_instance instance;\n   unsigned int i;\n-  bool is_store = false;\n-\n \n   scalar_stmts_to_slp_tree_map_t *bst_map\n     = new scalar_stmts_to_slp_tree_map_t ();\n   slp_instances = vinfo->slp_instances;\n   FOR_EACH_VEC_ELT (slp_instances, i, instance)\n     {\n       /* Schedule the tree of INSTANCE.  */\n-      is_store = vect_schedule_slp_instance (SLP_INSTANCE_TREE (instance),\n-                                             instance, bst_map);\n+      vect_schedule_slp_instance (SLP_INSTANCE_TREE (instance),\n+\t\t\t\t  instance, bst_map);\n       if (dump_enabled_p ())\n \tdump_printf_loc (MSG_NOTE, vect_location,\n                          \"vectorizing stmts using SLP.\\n\");\n@@ -4099,6 +4094,4 @@ vect_schedule_slp (vec_info *vinfo)\n \t  vinfo->remove_stmt (store_info);\n         }\n     }\n-\n-  return is_store;\n }"}, {"sha": "a58cc581ccf2de5c9801f0576673c165939dd82f", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fe1bd30e6e1319cde10ed417abbfe87d3511edc/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fe1bd30e6e1319cde10ed417abbfe87d3511edc/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=8fe1bd30e6e1319cde10ed417abbfe87d3511edc", "patch": "@@ -1575,7 +1575,7 @@ extern bool vect_transform_slp_perm_load (slp_tree, vec<tree> ,\n \t\t\t\t\t  gimple_stmt_iterator *, poly_uint64,\n \t\t\t\t\t  slp_instance, bool, unsigned *);\n extern bool vect_slp_analyze_operations (vec_info *);\n-extern bool vect_schedule_slp (vec_info *);\n+extern void vect_schedule_slp (vec_info *);\n extern bool vect_analyze_slp (vec_info *, unsigned);\n extern bool vect_make_slp_decision (loop_vec_info);\n extern void vect_detect_hybrid_slp (loop_vec_info);"}]}