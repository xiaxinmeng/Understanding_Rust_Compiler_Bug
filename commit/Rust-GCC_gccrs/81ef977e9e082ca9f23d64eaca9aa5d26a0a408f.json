{"sha": "81ef977e9e082ca9f23d64eaca9aa5d26a0a408f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFlZjk3N2U5ZTA4MmNhOWYyM2Q2NGVhY2E5YWE1ZDI2YTBhNDA4Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-15T23:40:15Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-15T23:40:15Z"}, "message": "Don't crash on empty struct created due to recursive reference.\n\nFrom-SVN: r167881", "tree": {"sha": "265d208de839ddce619aa3a70047912d31655be7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/265d208de839ddce619aa3a70047912d31655be7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81ef977e9e082ca9f23d64eaca9aa5d26a0a408f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ef977e9e082ca9f23d64eaca9aa5d26a0a408f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81ef977e9e082ca9f23d64eaca9aa5d26a0a408f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ef977e9e082ca9f23d64eaca9aa5d26a0a408f/comments", "author": null, "committer": null, "parents": [{"sha": "bd9c1f8f189c00662eaf588134b01bfbd424b87e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9c1f8f189c00662eaf588134b01bfbd424b87e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9c1f8f189c00662eaf588134b01bfbd424b87e"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "844ff660a2459916802171ecbd01ea12d4ffcef5", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81ef977e9e082ca9f23d64eaca9aa5d26a0a408f/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81ef977e9e082ca9f23d64eaca9aa5d26a0a408f/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=81ef977e9e082ca9f23d64eaca9aa5d26a0a408f", "patch": "@@ -9628,7 +9628,13 @@ Field_reference_expression::do_get_tree(Translate_context* context)\n     return error_mark_node;\n   gcc_assert(TREE_CODE(TREE_TYPE(struct_tree)) == RECORD_TYPE);\n   tree field = TYPE_FIELDS(TREE_TYPE(struct_tree));\n-  gcc_assert(field != NULL_TREE);\n+  if (field == NULL_TREE)\n+    {\n+      // This can happen for a type which refers to itself indirectly\n+      // and then turns out to be erroneous.\n+      gcc_assert(saw_errors());\n+      return error_mark_node;\n+    }\n   for (unsigned int i = this->field_index_; i > 0; --i)\n     {\n       field = DECL_CHAIN(field);"}]}