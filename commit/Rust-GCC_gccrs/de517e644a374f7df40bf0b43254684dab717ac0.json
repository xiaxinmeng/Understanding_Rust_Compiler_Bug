{"sha": "de517e644a374f7df40bf0b43254684dab717ac0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU1MTdlNjQ0YTM3NGY3ZGY0MGJmMGI0MzI1NDY4NGRhYjcxN2FjMA==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-04-04T09:32:28Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-04-04T09:32:28Z"}, "message": "re PR fortran/65795 (Segfault (invalid write) for ALLOCATE statement involving COARRAYS)\n\ngcc/fortran/ChangeLog:\n\n2016-04-04  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/65795\n\t* trans-array.c (gfc_array_allocate): When the array is a coarray,\n\tdo not nullyfing its allocatable components in array_allocate, because\n\tthe nullify missed the array ref and nullifies the wrong component.\n\tCosmetics.\n\ngcc/testsuite/ChangeLog:\n\n2016-04-04  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/65795\n\t* gfortran.dg/coarray_allocate_6.f08: New test.\n\nFrom-SVN: r234710", "tree": {"sha": "0359da9c7ee2fde9145b6988e87491fb19e9ceb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0359da9c7ee2fde9145b6988e87491fb19e9ceb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de517e644a374f7df40bf0b43254684dab717ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de517e644a374f7df40bf0b43254684dab717ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de517e644a374f7df40bf0b43254684dab717ac0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de517e644a374f7df40bf0b43254684dab717ac0/comments", "author": null, "committer": null, "parents": [{"sha": "43b9f499103ccebb9ce00e7c62e11da54334e63a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b9f499103ccebb9ce00e7c62e11da54334e63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b9f499103ccebb9ce00e7c62e11da54334e63a"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "88ac1cc352ee60900d0594da79ce51b0cc0bf673", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de517e644a374f7df40bf0b43254684dab717ac0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de517e644a374f7df40bf0b43254684dab717ac0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=de517e644a374f7df40bf0b43254684dab717ac0", "patch": "@@ -1,3 +1,11 @@\n+2016-04-04  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/65795\n+\t* trans-array.c (gfc_array_allocate): When the array is a coarray,\n+\tdo not nullyfing its allocatable components in array_allocate, because\n+\tthe nullify missed the array ref and nullifies the wrong component.\n+\tCosmetics.\n+\n 2016-03-29  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/70397"}, {"sha": "825dfb822af5a963f0c76794432ff15dd80135d6", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de517e644a374f7df40bf0b43254684dab717ac0/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de517e644a374f7df40bf0b43254684dab717ac0/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=de517e644a374f7df40bf0b43254684dab717ac0", "patch": "@@ -5550,8 +5550,8 @@ gfc_array_allocate (gfc_se * se, gfc_expr * expr, tree status, tree errmsg,\n   else\n       gfc_add_expr_to_block (&se->pre, set_descriptor);\n \n-  if ((expr->ts.type == BT_DERIVED)\n-\t&& expr->ts.u.derived->attr.alloc_comp)\n+  if (expr->ts.type == BT_DERIVED && expr->ts.u.derived->attr.alloc_comp\n+      && !coarray)\n     {\n       tmp = gfc_nullify_alloc_comp (expr->ts.u.derived, se->expr,\n \t\t\t\t    ref->u.ar.as->rank);"}, {"sha": "47656a92652cf0d36588986236272c3e50ed106a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de517e644a374f7df40bf0b43254684dab717ac0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de517e644a374f7df40bf0b43254684dab717ac0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=de517e644a374f7df40bf0b43254684dab717ac0", "patch": "@@ -1,3 +1,8 @@\n+2016-04-04  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/65795\n+\t* gfortran.dg/coarray_allocate_6.f08: New test.\n+\n 2016-04-04  Richard Biener  <rguenther@suse.de>\n \n \tPR rtl-optimization/70484"}, {"sha": "2fdd4c128ef5923733ef7bcccce135623ed66ca6", "filename": "gcc/testsuite/gfortran.dg/coarray_allocate_6.f08", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de517e644a374f7df40bf0b43254684dab717ac0/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_allocate_6.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de517e644a374f7df40bf0b43254684dab717ac0/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_allocate_6.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_allocate_6.f08?ref=de517e644a374f7df40bf0b43254684dab717ac0", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+! { dg-options \"-fcoarray=single -fdump-tree-original\" }\n+\n+! Contributed by Tobias Burnus  <burnus@gcc.gnu.org>\n+! Test fix for pr65795.\n+\n+implicit none\n+\n+type t2\n+  integer, allocatable :: x\n+end type t2\n+\n+type t3\n+  type(t2), allocatable :: caf[:]\n+end type t3\n+\n+!type(t3), save, target :: c, d\n+type(t3), target :: c, d\n+integer :: stat\n+\n+allocate(c%caf[*], stat=stat)\n+end\n+\n+! Besides checking that the executable does not crash anymore, check\n+! that the cause has been remove.\n+! { dg-final { scan-tree-dump-not \"c.caf.x = 0B\" \"original\" } }\n+"}]}