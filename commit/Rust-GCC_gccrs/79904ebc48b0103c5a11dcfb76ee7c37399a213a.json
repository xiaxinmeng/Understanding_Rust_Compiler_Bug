{"sha": "79904ebc48b0103c5a11dcfb76ee7c37399a213a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk5MDRlYmM0OGIwMTAzYzVhMTFkY2ZiNzZlZTdjMzczOTlhMjEzYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T13:57:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T13:57:55Z"}, "message": "[multiple changes]\n\n2014-10-10  Gary Dismukes  <dismukes@adacore.com>\n\n\t* a-coinho-shared.adb: Minor typo fix.\n\t* prj-env.ads: Minor reformatting.\n\n2014-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_res.adb (Resolve_String_Literal): Do not\n\tgenerate a string literal subtype for the default expression of\n\ta formal parameter in GNATprove mode.\n\n2014-10-10  Yannick Moy  <moy@adacore.com>\n\n\t* errout.adb (SPARK_Msg_N): Issue error unless SPARK_Mode is Off.\n\n2014-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Expand_Formal_Container_Element_Loop): Analyze\n\tdeclaration for loop parameter before rest of loop, and set\n\tentity kind to prevent assignments to it in the user code.\n\t* sem_ch3.adb (Analyze_Object_Contract): No contracts apply to the\n\tloop parameter in an element iteration over o formal container.\n\n2014-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Document use of user-level routines to handle\n\te.g. col major arrays.\n\n2014-10-10  Doug Rupp  <rupp@adacore.com>\n\n\t* s-osinte-android.adb: Fix misspelling.\n\t* gsocket.h: Tweak the Android quirks.\n\n2014-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.ads (SPARK_Msg_N): Fix spec to match change in body.\n\nFrom-SVN: r216083", "tree": {"sha": "7195986a7034a9f4a49452941e16b32f41232bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7195986a7034a9f4a49452941e16b32f41232bcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79904ebc48b0103c5a11dcfb76ee7c37399a213a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79904ebc48b0103c5a11dcfb76ee7c37399a213a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79904ebc48b0103c5a11dcfb76ee7c37399a213a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79904ebc48b0103c5a11dcfb76ee7c37399a213a/comments", "author": null, "committer": null, "parents": [{"sha": "06a04ce75ab48a0a1b539b2140cd22a746f4c030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a04ce75ab48a0a1b539b2140cd22a746f4c030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a04ce75ab48a0a1b539b2140cd22a746f4c030"}], "stats": {"total": 105, "additions": 91, "deletions": 14}, "files": [{"sha": "b62069f464b1a10d9ae34ebdd91faab60b728a16", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -1,3 +1,40 @@\n+2014-10-10  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* a-coinho-shared.adb: Minor typo fix.\n+\t* prj-env.ads: Minor reformatting.\n+\n+2014-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Resolve_String_Literal): Do not\n+\tgenerate a string literal subtype for the default expression of\n+\ta formal parameter in GNATprove mode.\n+\n+2014-10-10  Yannick Moy  <moy@adacore.com>\n+\n+\t* errout.adb (SPARK_Msg_N): Issue error unless SPARK_Mode is Off.\n+\n+2014-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Formal_Container_Element_Loop): Analyze\n+\tdeclaration for loop parameter before rest of loop, and set\n+\tentity kind to prevent assignments to it in the user code.\n+\t* sem_ch3.adb (Analyze_Object_Contract): No contracts apply to the\n+\tloop parameter in an element iteration over o formal container.\n+\n+2014-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_ugn.texi: Document use of user-level routines to handle\n+\te.g. col major arrays.\n+\n+2014-10-10  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-osinte-android.adb: Fix misspelling.\n+\t* gsocket.h: Tweak the Android quirks.\n+\n+2014-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.ads (SPARK_Msg_N): Fix spec to match change in body.\n+\n 2014-10-10  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch13.adb: Minor code reorganization."}, {"sha": "cf9d1ccaa2364df9d19a86457a8373e19d4552c1", "filename": "gcc/ada/a-coinho-shared.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fa-coinho-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fa-coinho-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.adb?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -26,7 +26,7 @@\n ------------------------------------------------------------------------------\n \n --  Note: special attention must be paid to the case of simultaneous access\n---  to internal shared objects and elements by difference tasks. The Reference\n+--  to internal shared objects and elements by different tasks. The Reference\n --  counter of internal shared object is the only component protected using\n --  atomic operations; other components and elements can be modified only when\n --  reference counter is equal to one (so there are no other references to this"}, {"sha": "78ca1fe2fc47a6e797c40566d99c1a4b288d92e1", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -3138,7 +3138,7 @@ package body Errout is\n \n    procedure SPARK_Msg_N (Msg : String; N : Node_Or_Entity_Id) is\n    begin\n-      if SPARK_Mode = On then\n+      if SPARK_Mode /= Off then\n          Error_Msg_N (Msg, N);\n       end if;\n    end SPARK_Msg_N;"}, {"sha": "92642daacd4616f2041623c66c4b8a300d712f0d", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -868,8 +868,8 @@ package Errout is\n \n    procedure SPARK_Msg_N (Msg : String; N : Node_Or_Entity_Id);\n    pragma Inline (SPARK_Msg_N);\n-   --  Same as Error_Msg_N, but the error is reported only when SPARK_Mode is\n-   --  \"on\". The routine is inlined because it acts as a simple wrapper.\n+   --  Same as Error_Msg_N, but the error is suppressed if SPARK_Mode is Off.\n+   --  The routine is inlined because it acts as a simple wrapper.\n \n    procedure SPARK_Msg_NE\n      (Msg : String;\n@@ -878,6 +878,7 @@ package Errout is\n    pragma Inline (SPARK_Msg_NE);\n    --  Same as Error_Msg_NE, but the error is reported only when SPARK_Mode is\n    --  \"on\". The routine is inlined because it acts as a simple wrapper.\n+   --  Is it right that this is so different from SPARK_Msg_N???\n \n    ------------------------------------\n    -- Utility Interface for Back End --"}, {"sha": "b414d54ae762be79323d478f128c0407f9b907e0", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -2889,7 +2889,17 @@ package body Exp_Ch5 is\n               Statements =>  New_List (New_Loop)));\n \n       Rewrite (N, New_Loop);\n-      Analyze (New_Loop);\n+\n+      --  The loop parameter is declared by an object declaration, but within\n+      --  the loop we must prevent user assignments to it, so we analyze the\n+      --  declaration and reset the entity kind, before analyzing the rest of\n+      --  the loop;\n+\n+      Analyze (Elmt_Decl);\n+      Set_Ekind (Defining_Identifier (Elmt_Decl), E_Loop_Parameter);\n+      Set_Assignment_OK (Name (Elmt_Ref));\n+\n+      Analyze (N);\n    end Expand_Formal_Container_Element_Loop;\n \n    -----------------------------"}, {"sha": "e58a2a90a61955b06e71376eaf14bf9592d0f1ac", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -20865,6 +20865,14 @@ that denote descendant nodes and parent node, as well as varied\n semantic information. To study this example in more detail, you might want to\n look at the body of the PN procedure in the stated file.\n \n+Another useful application of this capability is to deal with situations of\n+complex data which are not handled suitably by GDB. For example, if you specify\n+Convention Fortran for a multi-dimensional array, GDB does not know that\n+the ordering of array elements has been switched and will not properly\n+address the array elements. In such a case, instead of trying to print the\n+elements directly from GDB, you can write a callable procedure that prints\n+the elements in the desired format.\n+\n @node Using the Next Command in a Function\n @section Using the Next Command in a Function\n "}, {"sha": "4f9448b37b33923758058fefcb91650d34942943", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -29,8 +29,7 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-#if defined(__nucleus__) || defined(VTHREADS) || defined(__ANDROID__) \\\n-  || defined(__PikeOS__)\n+#if defined(__nucleus__) || defined(VTHREADS) || defined(__PikeOS__)\n \n /* Sockets not supported on these platforms.  */\n #undef HAVE_SOCKETS\n@@ -204,8 +203,13 @@\n #include <netdb.h>\n #endif\n \n+#ifdef __ANDROID__\n+#include <unistd.h>\n+#include <sys/select.h>\n+#endif\n+\n #if defined (_AIX) || defined (__FreeBSD__) || defined (__hpux__) || \\\n-    defined (_WIN32) || defined (__APPLE__)\n+    defined (_WIN32) || defined (__APPLE__) || defined (__ANDROID__)\n # define HAVE_THREAD_SAFE_GETxxxBYyyy 1\n \n #elif defined (linux) || defined (__GLIBC__) || \\"}, {"sha": "043723b6b6b0ef6510da99f9384a358c9cea3357", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -243,10 +243,10 @@ package Prj.Env is\n    function Get_Runtime_Path\n      (Self : Project_Search_Path;\n       Name : String) return String_Access;\n-   --  Compute the full path for the project-based runtime name.  It first\n-   --  checks that name is not a simple name (must has a path separator in it),\n-   --  and returns null in case of failure.  This check might be removed in the\n-   --  future.  The name is simply searched on the project path.\n+   --  Compute the full path for the project-based runtime name. It first\n+   --  checks that Name is not a simple file name (must have a path separator\n+   --  in it), and returns null in case of failure. This check might be removed\n+   --  in the future. Name is simply searched on the project path.\n \n private\n    package Projects_Paths is new GNAT.Dynamic_HTables.Simple_HTable"}, {"sha": "3b89e777a1710072d9a9714962096fbc6c0c45e1", "filename": "gcc/ada/s-osinte-android.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fs-osinte-android.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fs-osinte-android.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-android.adb?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -39,7 +39,7 @@ pragma Polling (Off);\n --  that are needed by children of System.\n \n with Interfaces.C;            use Interfaces.C;\n-with Interfaces.C.Extentions; use Interfaces.C.Extentions;\n+with Interfaces.C.Extensions; use Interfaces.C.Extensions;\n \n package body System.OS_Interface is\n "}, {"sha": "3448e515189e8586f30545488cbbb91635a65814", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -3062,6 +3062,12 @@ package body Sem_Ch3 is\n             Error_Msg_N (\"constant cannot be volatile\", Obj_Id);\n          end if;\n \n+      --  The loop parameter in an element iterator over a formal container\n+      --  is declared with an object declaration but no contracts apply.\n+\n+      elsif Ekind (Obj_Id) = E_Loop_Parameter then\n+         null;\n+\n       else pragma Assert (Ekind (Obj_Id) = E_Variable);\n \n          --  The following checks are only relevant when SPARK_Mode is on as"}, {"sha": "eacb977344f433ea98477776f4575cc59f0ae86c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79904ebc48b0103c5a11dcfb76ee7c37399a213a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=79904ebc48b0103c5a11dcfb76ee7c37399a213a", "patch": "@@ -9947,6 +9947,17 @@ package body Sem_Res is\n       then\n          Subtype_Id := Typ;\n \n+      --  Do not generate a string literal subtype for the default expression\n+      --  of a formal parameter in GNATprove mode. This is because the string\n+      --  subtype is associated with the freezing actions of the subprogram,\n+      --  however freezing is disabled in GNATprove mode and as a result the\n+      --  subtype is unavailable.\n+\n+      elsif GNATprove_Mode\n+        and then Nkind (Parent (N)) = N_Parameter_Specification\n+      then\n+         Subtype_Id := Typ;\n+\n       --  Otherwise we must create a string literal subtype. Note that the\n       --  whole idea of string literal subtypes is simply to avoid the need\n       --  for building a full fledged array subtype for each literal."}]}