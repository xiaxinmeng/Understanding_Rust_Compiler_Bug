{"sha": "cdc6bf44eec295805ae29a8aaddafd111de01c8e", "node_id": "C_kwDOANBUbNoAKGNkYzZiZjQ0ZWVjMjk1ODA1YWUyOWE4YWFkZGFmZDExMWRlMDFjOGU", "commit": {"author": {"name": "Steve Kargl", "email": "kargl@gcc.gnu.org", "date": "2022-12-26T22:07:04Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2022-12-30T03:25:17Z"}, "message": "Modify checks to avoid referencing NULL pointer.\n\nUpdate test cases with error messages that changed as a result.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/102595\n\t* decl.cc (attr_decl1): Guard against NULL pointer.\n\t* parse.cc (match_deferred_characteristics): Include BT_CLASS in check for\n\tderived being undefined.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/102595\n\t* gfortran.dg/class_result_4.f90: Update error message check.\n\t* gfortran.dg/pr85779_3.f90: Update error message check.", "tree": {"sha": "e3a00ce5b53e7370e25cd9ee0af8618c46ffd756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3a00ce5b53e7370e25cd9ee0af8618c46ffd756"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdc6bf44eec295805ae29a8aaddafd111de01c8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdc6bf44eec295805ae29a8aaddafd111de01c8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdc6bf44eec295805ae29a8aaddafd111de01c8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdc6bf44eec295805ae29a8aaddafd111de01c8e/comments", "author": null, "committer": null, "parents": [{"sha": "bbab9c83f27cf15b861b34f2900e570c065dfc07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbab9c83f27cf15b861b34f2900e570c065dfc07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbab9c83f27cf15b861b34f2900e570c065dfc07"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "bac7b6568b07031323f1b5ce70d654959ce03e6c", "filename": "gcc/fortran/decl.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdc6bf44eec295805ae29a8aaddafd111de01c8e/gcc%2Ffortran%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdc6bf44eec295805ae29a8aaddafd111de01c8e/gcc%2Ffortran%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.cc?ref=cdc6bf44eec295805ae29a8aaddafd111de01c8e", "patch": "@@ -8743,7 +8743,9 @@ attr_decl1 (void)\n   /* Update symbol table.  DIMENSION attribute is set in\n      gfc_set_array_spec().  For CLASS variables, this must be applied\n      to the first component, or '_data' field.  */\n-  if (sym->ts.type == BT_CLASS && sym->ts.u.derived->attr.is_class)\n+  if (sym->ts.type == BT_CLASS\n+      && sym->ts.u.derived\n+      && sym->ts.u.derived->attr.is_class)\n     {\n       /* gfc_set_array_spec sets sym->attr not CLASS_DATA(sym)->attr.  Check\n \t for duplicate attribute here.  */"}, {"sha": "6186c48aee2390a891db12d2698c6d426713f6af", "filename": "gcc/fortran/parse.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdc6bf44eec295805ae29a8aaddafd111de01c8e/gcc%2Ffortran%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdc6bf44eec295805ae29a8aaddafd111de01c8e/gcc%2Ffortran%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.cc?ref=cdc6bf44eec295805ae29a8aaddafd111de01c8e", "patch": "@@ -3934,7 +3934,7 @@ match_deferred_characteristics (gfc_typespec * ts)\n   m = gfc_match_prefix (ts);\n   gfc_buffer_error (false);\n \n-  if (ts->type == BT_DERIVED)\n+  if (ts->type == BT_DERIVED || ts->type == BT_CLASS)\n     {\n       ts->kind = 0;\n \n@@ -4215,7 +4215,7 @@ parse_spec (gfc_statement st)\n   if (bad_characteristic)\n     {\n       ts = &gfc_current_block ()->result->ts;\n-      if (ts->type != BT_DERIVED)\n+      if (ts->type != BT_DERIVED && ts->type != BT_CLASS)\n \tgfc_error (\"Bad kind expression for function %qs at %L\",\n \t\t   gfc_current_block ()->name,\n \t\t   &gfc_current_block ()->declared_at);"}, {"sha": "5497ac652ecd911a249c94b7afe5cc1387fbabe8", "filename": "gcc/testsuite/gfortran.dg/class_result_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdc6bf44eec295805ae29a8aaddafd111de01c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_result_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdc6bf44eec295805ae29a8aaddafd111de01c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_result_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_result_4.f90?ref=cdc6bf44eec295805ae29a8aaddafd111de01c8e", "patch": "@@ -1,6 +1,6 @@\n ! { dg-do compile }\n ! PR fortran/78500\n-class(t) function f() ! { dg-error \"must be dummy, allocatable or pointer\" }\n+class(t) function f() ! { dg-error \"is not accessible\" }\n    f = 1              ! { dg-error \"variable must not be polymorphic\" }\n end\n "}, {"sha": "a81a9faf88e7bc43d86badb91f56c2e733cc521e", "filename": "gcc/testsuite/gfortran.dg/pr85779_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdc6bf44eec295805ae29a8aaddafd111de01c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85779_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdc6bf44eec295805ae29a8aaddafd111de01c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85779_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85779_3.f90?ref=cdc6bf44eec295805ae29a8aaddafd111de01c8e", "patch": "@@ -1,6 +1,6 @@\n ! { dg-do compile }\n ! PR fortran/85779\n-class(t) function f()   ! { dg-error \"must be dummy, allocatable or pointer\" }\n+class(t) function f()   ! { dg-error \"is not accessible\" }\n    type f               ! { dg-error \"already has a basic type\" }\n    end type             ! { dg-error \"END FUNCTION statement\" }\n end"}]}