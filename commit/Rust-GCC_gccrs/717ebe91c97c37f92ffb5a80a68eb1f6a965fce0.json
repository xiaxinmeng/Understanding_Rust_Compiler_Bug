{"sha": "717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE3ZWJlOTFjOTdjMzdmOTJmZmI1YTgwYTY4ZWIxZjZhOTY1ZmNlMA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-09-02T19:41:17Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-09-02T19:41:17Z"}, "message": "Add -fdiagnostics-generate-patch\n\ngcc/ChangeLog:\n\t* common.opt (fdiagnostics-generate-patch): New option.\n\t* diagnostic.c: Include \"edit-context.h\".\n\t(diagnostic_initialize): Initialize context->edit_context_ptr.\n\t(diagnostic_finish): Delete context->edit_context_ptr.\n\t(diagnostic_report_diagnostic): Add fix-it hints from the\n\tdiagnostic to context->edit_context_ptr, if any.\n\t* diagnostic.h (class edit_context): Add forward decl.\n\t(struct diagnostic_context): Add field \"edit_context_ptr\".\n\t* doc/invoke.texi (Diagnostic Message Formatting Options): Add\n\t-fdiagnostics-generate-patch.\n\t(-fdiagnostics-generate-patch): New item.\n\t* toplev.c: Include \"edit-context.h\".\n\t(process_options): Set global_dc->edit_context_ptr to a new\n\tedit_context if the options need one.\n\t(toplev::main): Handle -fdiagnostics-generate-patch by using\n\tglobal_dc->edit_context_ptr.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/plugin/diagnostic-test-show-locus-generate-patch.c: New\n\ttest case.\n\t* gcc.dg/plugin/plugin.exp (plugin_test_list): Add\n\tdiagnostic-test-show-locus-generate-patch.c to the sources\n\tfor diagnostic_plugin_test_show_locus.c.\n\nFrom-SVN: r239965", "tree": {"sha": "1c48b3da48c0d917939aeb557e3ff941f07bf978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c48b3da48c0d917939aeb557e3ff941f07bf978"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dc5773f4b529dd0fefffaf2a2bf9b9ff0195edd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc5773f4b529dd0fefffaf2a2bf9b9ff0195edd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc5773f4b529dd0fefffaf2a2bf9b9ff0195edd"}], "stats": {"total": 165, "additions": 163, "deletions": 2}, "files": [{"sha": "2e076c7a976b7387db775325ac5e550e5cd4147f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -1,3 +1,22 @@\n+2016-09-02  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* common.opt (fdiagnostics-generate-patch): New option.\n+\t* diagnostic.c: Include \"edit-context.h\".\n+\t(diagnostic_initialize): Initialize context->edit_context_ptr.\n+\t(diagnostic_finish): Delete context->edit_context_ptr.\n+\t(diagnostic_report_diagnostic): Add fix-it hints from the\n+\tdiagnostic to context->edit_context_ptr, if any.\n+\t* diagnostic.h (class edit_context): Add forward decl.\n+\t(struct diagnostic_context): Add field \"edit_context_ptr\".\n+\t* doc/invoke.texi (Diagnostic Message Formatting Options): Add\n+\t-fdiagnostics-generate-patch.\n+\t(-fdiagnostics-generate-patch): New item.\n+\t* toplev.c: Include \"edit-context.h\".\n+\t(process_options): Set global_dc->edit_context_ptr to a new\n+\tedit_context if the options need one.\n+\t(toplev::main): Handle -fdiagnostics-generate-patch by using\n+\tglobal_dc->edit_context_ptr.\n+\n 2016-09-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/65467"}, {"sha": "fa1c0365e3c9d9ea7d925f514c9cd9763dc37e9d", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -1196,6 +1196,10 @@ fdiagnostics-parseable-fixits\n Common Var(flag_diagnostics_parseable_fixits)\n Print fixit hints in machine-readable form.\n \n+fdiagnostics-generate-patch\n+Common Var(flag_diagnostics_generate_patch)\n+Print fix-it hints to stderr in unified diff format.\n+\n fdiagnostics-show-option\n Common Var(flag_diagnostics_show_option) Init(1)\n Amend appropriate diagnostic messages with the command line option that controls them."}, {"sha": "46cdb629e8d55e7b05c409e94a05a5b5ea6bbc18", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -31,6 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"backtrace.h\"\n #include \"diagnostic.h\"\n #include \"diagnostic-color.h\"\n+#include \"edit-context.h\"\n #include \"selftest.h\"\n \n #ifdef HAVE_TERMIOS_H\n@@ -174,6 +175,7 @@ diagnostic_initialize (diagnostic_context *context, int n_opts)\n   context->colorize_source_p = false;\n   context->show_ruler_p = false;\n   context->parseable_fixits_p = false;\n+  context->edit_context_ptr = NULL;\n }\n \n /* Maybe initialize the color support. We require clients to do this\n@@ -235,6 +237,12 @@ diagnostic_finish (diagnostic_context *context)\n   context->printer->~pretty_printer ();\n   XDELETE (context->printer);\n   context->printer = NULL;\n+\n+  if (context->edit_context_ptr)\n+    {\n+      delete context->edit_context_ptr;\n+      context->edit_context_ptr = NULL;\n+    }\n }\n \n /* Initialize DIAGNOSTIC, where the message MSG has already been\n@@ -943,6 +951,9 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n   diagnostic->message.format_spec = saved_format_spec;\n   diagnostic->x_data = NULL;\n \n+  if (context->edit_context_ptr)\n+    context->edit_context_ptr->add_fixits (diagnostic->richloc);\n+\n   context->lock--;\n \n   return true;"}, {"sha": "ead4d2a9544096f65c7931f7015b40f77dc757da", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -62,6 +62,8 @@ typedef void (*diagnostic_start_span_fn) (diagnostic_context *,\n \n typedef diagnostic_starter_fn diagnostic_finalizer_fn;\n \n+class edit_context;\n+\n /* This data structure bundles altogether any information relevant to\n    the context of a diagnostic message.  */\n struct diagnostic_context\n@@ -209,6 +211,10 @@ struct diagnostic_context\n   /* If true, print fixits in machine-parseable form after the\n      rest of the diagnostic.  */\n   bool parseable_fixits_p;\n+\n+  /* If non-NULL, an edit_context to which fix-it hints should be\n+     applied, for generating patches.  */\n+  edit_context *edit_context_ptr;\n };\n \n static inline void"}, {"sha": "73aab7cddc85649c23a613ea08f1fe25c42168cb", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -248,7 +248,7 @@ Objective-C and Objective-C++ Dialects}.\n -fdiagnostics-show-location=@r{[}once@r{|}every-line@r{]}  @gol\n -fdiagnostics-color=@r{[}auto@r{|}never@r{|}always@r{]}  @gol\n -fno-diagnostics-show-option -fno-diagnostics-show-caret @gol\n--fdiagnostics-parseable-fixits}\n+-fdiagnostics-parseable-fixits -fdiagnostics-generate-patch}\n \n @item Warning Options\n @xref{Warning Options,,Options to Request or Suppress Warnings}.\n@@ -3460,6 +3460,27 @@ An empty replacement string indicates that the given range is to be removed.\n An empty range (e.g. ``45:3-45:3'') indicates that the string is to\n be inserted at the given position.\n \n+@item -fdiagnostics-generate-patch\n+@opindex fdiagnostics-generate-patch\n+Print fix-it hints to stderr in unified diff format, after any diagnostics\n+are printed.  For example:\n+\n+@smallexample\n+--- test.c\n++++ test.c\n+@@ -42,5 +42,5 @@\n+\n+ void show_cb(GtkDialog *dlg)\n+ @{\n+-  gtk_widget_showall(dlg);\n++  gtk_widget_show_all(dlg);\n+ @}\n+\n+@end smallexample\n+\n+The diff may or may not be colorized, following the same rules\n+as for diagnostics (see @option{-fdiagnostics-color}).\n+\n @end table\n \n @node Warning Options"}, {"sha": "255d6c2c7cb46dfab63d99278312f926a580377b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -1,3 +1,11 @@\n+2016-09-02  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/plugin/diagnostic-test-show-locus-generate-patch.c: New\n+\ttest case.\n+\t* gcc.dg/plugin/plugin.exp (plugin_test_list): Add\n+\tdiagnostic-test-show-locus-generate-patch.c to the sources\n+\tfor diagnostic_plugin_test_show_locus.c.\n+\n 2016-09-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/65467"}, {"sha": "afbaf6354012f2979671454a0c29fab7c876b3ba", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-show-locus-generate-patch.c", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-generate-patch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-generate-patch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-generate-patch.c?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -0,0 +1,77 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdiagnostics-generate-patch\" } */\n+\n+/* This is a collection of unittests for diagnostic_show_locus;\n+   see the overview in diagnostic_plugin_test_show_locus.c.\n+\n+   In particular, note the discussion of why we need a very long line here:\n+01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\n+   and that we can't use macros in this file.  */\n+\n+/* Unit test for rendering of insertion fixit hints\n+   (example taken from PR 62316).  */\n+\n+void test_fixit_insert (void)\n+{\n+#if 0\n+   int a[2][2] = { 0, 1 , 2, 3 }; /* { dg-warning \"insertion hints\" } */\n+#endif\n+}\n+\n+/* Unit test for rendering of \"remove\" fixit hints.  */\n+\n+void test_fixit_remove (void)\n+{\n+#if 0\n+  int a;; /* { dg-warning \"example of a removal hint\" } */\n+#endif\n+}\n+\n+/* Unit test for rendering of \"replace\" fixit hints.  */\n+\n+void test_fixit_replace (void)\n+{\n+#if 0\n+  gtk_widget_showall (dlg); /* { dg-warning \"example of a replacement hint\" } */\n+#endif\n+}\n+\n+\n+\n+/* Verify the output from -fdiagnostics-generate-patch.\n+   We expect a header, containing the filename.  This is the absolute path,\n+   so we can only capture it via regexps.  */\n+\n+/* { dg-regexp \"\\\\-\\\\-\\\\- .*\" } */\n+/* { dg-regexp \"\\\\+\\\\+\\\\+ .*\" } */\n+\n+/* Next, we expect the diff itself.  */\n+/* { dg-begin-multiline-output \"\" }\n+@@ -14,7 +14,7 @@\n+ void test_fixit_insert (void)\n+ {\n+ #if 0\n+-   int a[2][2] = { 0, 1 , 2, 3 };\n++   int a[2][2] = { {0, 1} , 2, 3 };\n+ #endif\n+ }\n+ \n+@@ -23,7 +23,7 @@\n+ void test_fixit_remove (void)\n+ {\n+ #if 0\n+-  int a;;\n++  int a;\n+ #endif\n+ }\n+ \n+@@ -32,7 +32,7 @@\n+ void test_fixit_replace (void)\n+ {\n+ #if 0\n+-  gtk_widget_showall (dlg);\n++  gtk_widget_show_all (dlg);\n+ #endif\n+ }\n+ \n+   { dg-end-multiline-output \"\" } */"}, {"sha": "32ca748e2cb64fd8ac253457007d2f22b495b6bb", "filename": "gcc/testsuite/gcc.dg/plugin/plugin.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -65,7 +65,8 @@ set plugin_test_list [list \\\n     { diagnostic_plugin_test_show_locus.c \\\n \t  diagnostic-test-show-locus-bw.c \\\n \t  diagnostic-test-show-locus-color.c \\\n-\t  diagnostic-test-show-locus-parseable-fixits.c } \\\n+\t  diagnostic-test-show-locus-parseable-fixits.c \\\n+\t  diagnostic-test-show-locus-generate-patch.c } \\\n     { diagnostic_plugin_test_tree_expression_range.c \\\n \t  diagnostic-test-expressions-1.c } \\\n     { diagnostic_plugin_show_trees.c \\"}, {"sha": "4da5627b350a165c1453309bedac39b76e5fa862", "filename": "gcc/toplev.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717ebe91c97c37f92ffb5a80a68eb1f6a965fce0/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=717ebe91c97c37f92ffb5a80a68eb1f6a965fce0", "patch": "@@ -76,6 +76,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-chkp.h\"\n #include \"omp-low.h\"\n #include \"hsa.h\"\n+#include \"edit-context.h\"\n \n #if defined(DBX_DEBUGGING_INFO) || defined(XCOFF_DEBUGGING_INFO)\n #include \"dbxout.h\"\n@@ -1221,6 +1222,9 @@ process_options (void)\n   /* Some machines may reject certain combinations of options.  */\n   targetm.target_option.override ();\n \n+  if (flag_diagnostics_generate_patch)\n+      global_dc->edit_context_ptr = new edit_context ();\n+\n   /* Avoid any informative notes in the second run of -fcompare-debug.  */\n   if (flag_compare_debug) \n     diagnostic_inhibit_notes (global_dc);\n@@ -2147,6 +2151,16 @@ toplev::main (int argc, char **argv)\n      emit some diagnostics here.  */\n   invoke_plugin_callbacks (PLUGIN_FINISH, NULL);\n \n+  if (flag_diagnostics_generate_patch)\n+    {\n+      gcc_assert (global_dc->edit_context_ptr);\n+\n+      pretty_printer (pp);\n+      pp_show_color (&pp) = pp_show_color (global_dc->printer);\n+      global_dc->edit_context_ptr->print_diff (&pp, true);\n+      pp_flush (&pp);\n+    }\n+\n   diagnostic_finish (global_dc);\n \n   finalize_plugins ();"}]}