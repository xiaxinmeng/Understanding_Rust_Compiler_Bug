{"sha": "1d21a8e566372a8b6344351f5cef1faa4d468250", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQyMWE4ZTU2NjM3MmE4YjYzNDQzNTFmNWNlZjFmYWE0ZDQ2ODI1MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-13T15:04:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-13T15:04:38Z"}, "message": "re PR tree-optimization/42705 (verify_flow_info failed with -O)\n\n2010-01-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42705\n\t* tree-ssa-reassoc.c (build_and_add_sum): Insert stmts after\n\tlabels.\n\n\t* gcc.c-torture/compile/pr42705.c: New testcase.\n\nFrom-SVN: r155861", "tree": {"sha": "30be63e8d337dc502ed3074c1eb4ba97d023b876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30be63e8d337dc502ed3074c1eb4ba97d023b876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d21a8e566372a8b6344351f5cef1faa4d468250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d21a8e566372a8b6344351f5cef1faa4d468250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d21a8e566372a8b6344351f5cef1faa4d468250", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d21a8e566372a8b6344351f5cef1faa4d468250/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9858e0ccdaea066d6c044e6e4195966e9e4b2747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9858e0ccdaea066d6c044e6e4195966e9e4b2747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9858e0ccdaea066d6c044e6e4195966e9e4b2747"}], "stats": {"total": 75, "additions": 72, "deletions": 3}, "files": [{"sha": "d9105623abbfbcd1c5afdfe70eed6f86d9fa5c3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d21a8e566372a8b6344351f5cef1faa4d468250/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d21a8e566372a8b6344351f5cef1faa4d468250/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d21a8e566372a8b6344351f5cef1faa4d468250", "patch": "@@ -1,3 +1,9 @@\n+2010-01-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42705\n+\t* tree-ssa-reassoc.c (build_and_add_sum): Insert stmts after\n+\tlabels.\n+\n 2010-01-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/42716"}, {"sha": "9f3ff54d5e82b607dc2230186a9cd2d1d5699399", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d21a8e566372a8b6344351f5cef1faa4d468250/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d21a8e566372a8b6344351f5cef1faa4d468250/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d21a8e566372a8b6344351f5cef1faa4d468250", "patch": "@@ -1,3 +1,8 @@\n+2010-01-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42705\n+\t* gcc.c-torture/compile/pr42705.c: New testcase.\n+\n 2010-01-13  Jie Zhang  <jie.zhang@analog.com>\n \n \t* gcc.target/bfin/l2.c: New test."}, {"sha": "3d7b22da833469e8699d7c0c628943fa7f4476b8", "filename": "gcc/testsuite/gcc.c-torture/compile/pr42705.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d21a8e566372a8b6344351f5cef1faa4d468250/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42705.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d21a8e566372a8b6344351f5cef1faa4d468250/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42705.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42705.c?ref=1d21a8e566372a8b6344351f5cef1faa4d468250", "patch": "@@ -0,0 +1,58 @@\n+typedef int GLint;\n+typedef unsigned char GLubyte;\n+typedef unsigned int uint32_t;\n+struct radeon_bo {\n+    void *ptr;\n+    uint32_t flags;\n+};\n+struct radeon_renderbuffer {\n+    struct radeon_bo *bo;\n+    unsigned int cpp;\n+    int has_surface;\n+};\n+static inline\n+GLint r600_1d_tile_helper(const struct radeon_renderbuffer * rrb,\n+\t\t\t  GLint x, GLint y, GLint is_depth, GLint is_stencil)\n+{\n+  GLint element_bytes = rrb->cpp;\n+  GLint num_samples = 1;\n+  GLint tile_width = 8;\n+  GLint tile_height = 8;\n+  GLint tile_thickness = 1;\n+  GLint tile_bytes;\n+  GLint tiles_per_row;\n+  GLint slice_offset;\n+  GLint tile_row_index;\n+  GLint tile_column_index;\n+  GLint tile_offset;\n+  GLint pixel_number = 0;\n+  GLint element_offset;\n+  GLint offset = 0;\n+  tile_bytes = tile_width * tile_height * tile_thickness\n+      * element_bytes * num_samples;\n+  tile_column_index = x / tile_width;\n+  tile_offset = ((tile_row_index * tiles_per_row)\n+\t\t + tile_column_index) * tile_bytes;\n+  if (is_depth) {\n+  }\n+  else {\n+      GLint sample_offset;\n+      switch (element_bytes) {\n+\t  case 1:       pixel_number |= ((x >> 0) & 1) << 0;\n+      }\n+      element_offset = sample_offset + (pixel_number * element_bytes);\n+  }\n+  offset = slice_offset + tile_offset + element_offset;\n+  return offset;\n+}\n+GLubyte *r600_ptr_color(const struct radeon_renderbuffer * rrb,\n+\t\t\tGLint x, GLint y)\n+{\n+  GLubyte *ptr = rrb->bo->ptr;\n+  uint32_t mask = 1 | 2;\n+  GLint offset;\n+  if (rrb->has_surface || !(rrb->bo->flags & mask)) {\n+      offset = r600_1d_tile_helper(rrb, x, y, 0, 0);\n+  }\n+  return &ptr[offset];\n+}"}, {"sha": "5f7c6b721d8e1af5f50a59ed5ad16b1658d9e731", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d21a8e566372a8b6344351f5cef1faa4d468250/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d21a8e566372a8b6344351f5cef1faa4d468250/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=1d21a8e566372a8b6344351f5cef1faa4d468250", "patch": "@@ -845,7 +845,7 @@ build_and_add_sum (tree tmpvar, tree op1, tree op2, enum tree_code opcode)\n   if ((!op1def || gimple_nop_p (op1def))\n       && (!op2def || gimple_nop_p (op2def)))\n     {\n-      gsi = gsi_start_bb (single_succ (ENTRY_BLOCK_PTR));\n+      gsi = gsi_after_labels (single_succ (ENTRY_BLOCK_PTR));\n       gsi_insert_before (&gsi, sum, GSI_NEW_STMT);\n     }\n   else if ((!op1def || gimple_nop_p (op1def))\n@@ -854,7 +854,7 @@ build_and_add_sum (tree tmpvar, tree op1, tree op2, enum tree_code opcode)\n     {\n       if (gimple_code (op2def) == GIMPLE_PHI)\n \t{\n-\t  gsi = gsi_start_bb (gimple_bb (op2def));\n+\t  gsi = gsi_after_labels (gimple_bb (op2def));\n \t  gsi_insert_before (&gsi, sum, GSI_NEW_STMT);\n \t}\n       else\n@@ -879,7 +879,7 @@ build_and_add_sum (tree tmpvar, tree op1, tree op2, enum tree_code opcode)\n     {\n       if (gimple_code (op1def) == GIMPLE_PHI)\n \t{\n-\t  gsi = gsi_start_bb (gimple_bb (op1def));\n+\t  gsi = gsi_after_labels (gimple_bb (op1def));\n \t  gsi_insert_before (&gsi, sum, GSI_NEW_STMT);\n \t}\n       else"}]}