{"sha": "1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWViMzFlNjA1ZmY2ZmZiNDMzMmU4NjgxZWUwODZmNWE0ZWExYmVhOQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2014-07-30T13:58:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T13:58:00Z"}, "message": "inline.adb (Build_Body_To_Inline): Issue more precise messages for declarations that prevent inlining.\n\n2014-07-30  Yannick Moy  <moy@adacore.com>\n\n\t* inline.adb (Build_Body_To_Inline): Issue more precise messages\n\tfor declarations that prevent inlining.\n\t(Cannot_Inline): Change usual start of message to refer to contextual\n\tanalysis in GNATprove mode.\n\t* sem_res.adb (Resolve_Call): Change usual start of message to\n\trefer to contextual analysis in GNATprove mode, when inlining\n\tnot possible.\n\nFrom-SVN: r213273", "tree": {"sha": "00fc53b06cfa7fc93c47a5b3e25a9031093199d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00fc53b06cfa7fc93c47a5b3e25a9031093199d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1ee7570adaec1bc439b3af932b5ffd88c9a6f7"}], "stats": {"total": 87, "additions": 75, "deletions": 12}, "files": [{"sha": "e64b7badca6e9b8dd5d608bb0ffadfa6b4807de0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9", "patch": "@@ -1,3 +1,13 @@\n+2014-07-30  Yannick Moy  <moy@adacore.com>\n+\n+\t* inline.adb (Build_Body_To_Inline): Issue more precise messages\n+\tfor declarations that prevent inlining.\n+\t(Cannot_Inline): Change usual start of message to refer to contextual\n+\tanalysis in GNATprove mode.\n+\t* sem_res.adb (Resolve_Call): Change usual start of message to\n+\trefer to contextual analysis in GNATprove mode, when inlining\n+\tnot possible.\n+\n 2014-07-30  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_res.adb, sem_ch6.adb: Minor code reorganization."}, {"sha": "65fec716974125113337408e756426c6203946ed", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 61, "deletions": 9, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9", "patch": "@@ -923,17 +923,48 @@ package body Inline is\n       begin\n          D := First (Decls);\n          while Present (D) loop\n-            if (Nkind (D) = N_Function_Instantiation\n-                 and then not Is_Unchecked_Conversion (D))\n-              or else Nkind_In (D, N_Protected_Type_Declaration,\n-                                   N_Package_Declaration,\n-                                   N_Package_Instantiation,\n-                                   N_Subprogram_Body,\n-                                   N_Procedure_Instantiation,\n-                                   N_Task_Type_Declaration)\n+            if Nkind (D) = N_Function_Instantiation\n+              and then not Is_Unchecked_Conversion (D)\n             then\n                Cannot_Inline\n-                 (\"cannot inline & (non-allowed declaration)?\", D, Subp);\n+                 (\"cannot inline & (nested function instantiation)?\",\n+                  D, Subp);\n+               return True;\n+\n+            elsif Nkind (D) = N_Protected_Type_Declaration then\n+               Cannot_Inline\n+                 (\"cannot inline & (nested protected type declaration)?\",\n+                  D, Subp);\n+               return True;\n+\n+            elsif Nkind (D) = N_Package_Declaration then\n+               Cannot_Inline\n+                 (\"cannot inline & (nested package declaration)?\",\n+                  D, Subp);\n+               return True;\n+\n+            elsif Nkind (D) = N_Package_Instantiation then\n+               Cannot_Inline\n+                 (\"cannot inline & (nested package instantiation)?\",\n+                  D, Subp);\n+               return True;\n+\n+            elsif Nkind (D) = N_Subprogram_Body then\n+               Cannot_Inline\n+                 (\"cannot inline & (nested subprogram)?\",\n+                  D, Subp);\n+               return True;\n+\n+            elsif Nkind (D) = N_Procedure_Instantiation then\n+               Cannot_Inline\n+                 (\"cannot inline & (nested procedure instantiation)?\",\n+                  D, Subp);\n+               return True;\n+\n+            elsif Nkind (D) = N_Task_Type_Declaration then\n+               Cannot_Inline\n+                 (\"cannot inline & (nested task type declaration)?\",\n+                  D, Subp);\n                return True;\n             end if;\n \n@@ -1435,6 +1466,27 @@ package body Inline is\n       Is_Serious : Boolean := False)\n    is\n    begin\n+      --  In GNATprove mode, inlining is the technical means by which the\n+      --  higher-level goal of contextual analysis is reached, so issue\n+      --  messages about failure to apply contextual analysis to a\n+      --  subprogram, rather than failure to inline it.\n+\n+      if GNATprove_Mode\n+        and then Msg (Msg'First .. Msg'First + 12) = \"cannot inline\"\n+      then\n+         declare\n+            Len1 : constant Positive := 13;  --  \"cannot inline\"\n+            Len2 : constant Positive := 25;  --  \"no contextual analysis of\"\n+            New_Msg : String (1 .. Msg'Length + Len2 - Len1);\n+         begin\n+            New_Msg (1 .. Len2) := \"no contextual analysis of\";\n+            New_Msg (Len2 + 1 .. Msg'Length + Len2 - Len1) :=\n+              Msg (Msg'First + Len1 .. Msg'Last);\n+            Cannot_Inline (New_Msg, N, Subp, Is_Serious);\n+            return;\n+         end;\n+      end if;\n+\n       pragma Assert (Msg (Msg'Last) = '?');\n \n       --  Old semantics"}, {"sha": "43441248eb7d90eafc2562939a5a372079b8b846", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=1eb31e605ff6ffb4332e8681ee086f5a4ea1bea9", "patch": "@@ -6233,7 +6233,7 @@ package body Sem_Res is\n             --  assertions as logic expressions.\n \n             elsif In_Assertion_Expr /= 0 then\n-               Error_Msg_NE (\"?cannot inline call to &\", N, Nam);\n+               Error_Msg_NE (\"?no contextual analysis of &\", N, Nam);\n                Error_Msg_N (\"\\call appears in assertion expression\", N);\n                Set_Is_Inlined_Always (Nam_UA, False);\n \n@@ -6246,7 +6246,8 @@ package body Sem_Res is\n \n                if No (Corresponding_Body (Decl)) then\n                   Error_Msg_NE\n-                    (\"?cannot inline call to & (body not seen yet)\", N, Nam);\n+                    (\"?no contextual analysis of & (body not seen yet)\",\n+                     N, Nam);\n                   Set_Is_Inlined_Always (Nam_UA, False);\n \n                --  Nothing to do if there is no body to inline, indicating that\n@@ -6261,7 +6262,7 @@ package body Sem_Res is\n                --  expressions, that are not handled by GNATprove.\n \n                elsif Is_Potentially_Unevaluated (N) then\n-                  Error_Msg_NE (\"?cannot inline call to &\", N, Nam);\n+                  Error_Msg_NE (\"?no contextual anlysis of &\", N, Nam);\n                   Error_Msg_N\n                     (\"\\call appears in potentially unevaluated context\", N);\n                   Set_Is_Inlined_Always (Nam_UA, False);"}]}