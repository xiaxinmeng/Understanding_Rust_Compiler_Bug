{"sha": "b72feab889cd7925fab59771269638fcc88bc195", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcyZmVhYjg4OWNkNzkyNWZhYjU5NzcxMjY5NjM4ZmNjODhiYzE5NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-23T07:08:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-23T07:08:43Z"}, "message": "tree-ssa-sccvn.c (vn_reference_lookup_3): Handle arbitrary memset constants via native_interpret_expr.\n\n2018-05-23  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Handle arbitrary\n\tmemset constants via native_interpret_expr.\n\n\t* gcc.dg/tree-ssa/ssa-fre-65.c: New testcase.\n\nFrom-SVN: r260565", "tree": {"sha": "18db96dd908525e794b421bc94164a84d7bb9c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18db96dd908525e794b421bc94164a84d7bb9c1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b72feab889cd7925fab59771269638fcc88bc195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b72feab889cd7925fab59771269638fcc88bc195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b72feab889cd7925fab59771269638fcc88bc195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b72feab889cd7925fab59771269638fcc88bc195/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3423a64d46de09a8625db4c2ec2b6a1586f40c56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3423a64d46de09a8625db4c2ec2b6a1586f40c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3423a64d46de09a8625db4c2ec2b6a1586f40c56"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "fbb0120c497ff94748f41e825214d10b167a7cc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b72feab889cd7925fab59771269638fcc88bc195/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b72feab889cd7925fab59771269638fcc88bc195/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b72feab889cd7925fab59771269638fcc88bc195", "patch": "@@ -1,3 +1,8 @@\n+2018-05-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Handle arbitrary\n+\tmemset constants via native_interpret_expr.\n+\n 2018-05-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/85345"}, {"sha": "6bd7a1546cd4188a914ae2277fb73699dd9b5ef8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b72feab889cd7925fab59771269638fcc88bc195/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b72feab889cd7925fab59771269638fcc88bc195/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b72feab889cd7925fab59771269638fcc88bc195", "patch": "@@ -1,3 +1,7 @@\n+2018-05-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-fre-65.c: New testcase.\n+\n 2018-05-22  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/85841"}, {"sha": "87ba6662041d9be470cd0fdfcbb92847eca804e9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-65.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b72feab889cd7925fab59771269638fcc88bc195/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-65.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b72feab889cd7925fab59771269638fcc88bc195/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-65.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-65.c?ref=b72feab889cd7925fab59771269638fcc88bc195", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre1-details -fdump-tree-dse1-details\" } */\n+\n+typedef unsigned char v16qi __attribute__((vector_size(16)));\n+typedef unsigned short v8hi __attribute__((vector_size(16)));\n+typedef unsigned int v4si __attribute__((vector_size(16)));\n+void foo(char *dest)\n+{\n+  unsigned char x[256] __attribute__((aligned(16)));\n+  __builtin_memset (x, 23, 256);\n+  v16qi resqi = *(v16qi *)&x[16];\n+  v8hi reshi = *(v8hi *)&x[16];\n+  v4si ressi = *(v4si *)&x[16];\n+  *(v16qi *)dest = resqi;\n+  *(v8hi *)(dest + 16) = reshi;\n+  *(v4si *)(dest + 32) = ressi;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Replaced MEM\" 3 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Deleted dead call\" 1 \"dse1\" } } */"}, {"sha": "96e80c7b5a3058553a8f69921976b9326a001017", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b72feab889cd7925fab59771269638fcc88bc195/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b72feab889cd7925fab59771269638fcc88bc195/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=b72feab889cd7925fab59771269638fcc88bc195", "patch": "@@ -1959,9 +1959,9 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_,\n   if (is_gimple_reg_type (vr->type)\n       && gimple_call_builtin_p (def_stmt, BUILT_IN_MEMSET)\n       && (integer_zerop (gimple_call_arg (def_stmt, 1))\n-\t  || (INTEGRAL_TYPE_P (vr->type)\n+\t  || ((TREE_CODE (gimple_call_arg (def_stmt, 1)) == INTEGER_CST\n+\t       || (INTEGRAL_TYPE_P (vr->type) && known_eq (ref->size, 8)))\n \t      && CHAR_BIT == 8 && BITS_PER_UNIT == 8\n-\t      && known_eq (ref->size, 8)\n \t      && known_eq (ref->size, maxsize)\n \t      && offset.is_constant (&offseti)\n \t      && offseti % BITS_PER_UNIT == 0))\n@@ -2030,7 +2030,8 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_,\n \t  tree val;\n \t  if (integer_zerop (gimple_call_arg (def_stmt, 1)))\n \t    val = build_zero_cst (vr->type);\n-\t  else\n+\t  else if (INTEGRAL_TYPE_P (vr->type)\n+\t\t   && known_eq (ref->size, 8))\n \t    {\n \t      code_helper rcode = NOP_EXPR;\n \t      tree ops[3] = {};\n@@ -2041,6 +2042,16 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_,\n \t\t      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (val)))\n \t\treturn (void *)-1;\n \t    }\n+\t  else\n+\t    {\n+\t      unsigned len = TREE_INT_CST_LOW (TYPE_SIZE_UNIT (vr->type));\n+\t      unsigned char *buf = XALLOCAVEC (unsigned char, len);\n+\t      memset (buf, TREE_INT_CST_LOW (gimple_call_arg (def_stmt, 1)),\n+\t\t      len);\n+\t      val = native_interpret_expr (vr->type, buf, len);\n+\t      if (!val)\n+\t\treturn (void *)-1;\n+\t    }\n \t  return vn_reference_lookup_or_insert_for_pieces\n \t           (vuse, vr->set, vr->type, vr->operands, val);\n \t}"}]}