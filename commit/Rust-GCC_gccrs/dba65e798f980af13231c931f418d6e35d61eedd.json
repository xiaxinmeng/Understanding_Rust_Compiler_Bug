{"sha": "dba65e798f980af13231c931f418d6e35d61eedd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJhNjVlNzk4Zjk4MGFmMTMyMzFjOTMxZjQxOGQ2ZTM1ZDYxZWVkZA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2003-09-07T10:11:28Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2003-09-07T10:11:28Z"}, "message": "langhooks.c (lhd_print_error_function): Move from diagnostic.c.\n\n\t* langhooks.c (lhd_print_error_function): Move from diagnostic.c.\n\t* Makefile.in (langhooks.o): Depend on diagnostic.h\n\nFrom-SVN: r71165", "tree": {"sha": "cf1ec8b78316a2d95e298530826a3c04d994ca76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf1ec8b78316a2d95e298530826a3c04d994ca76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dba65e798f980af13231c931f418d6e35d61eedd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba65e798f980af13231c931f418d6e35d61eedd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba65e798f980af13231c931f418d6e35d61eedd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba65e798f980af13231c931f418d6e35d61eedd/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "687f4bc133ed1a3f22d225def43de34ebf5d9873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687f4bc133ed1a3f22d225def43de34ebf5d9873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/687f4bc133ed1a3f22d225def43de34ebf5d9873"}], "stats": {"total": 76, "additions": 41, "deletions": 35}, "files": [{"sha": "492f6d7fdd7314ba2dfa2fa8ec2300a49943b89f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba65e798f980af13231c931f418d6e35d61eedd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba65e798f980af13231c931f418d6e35d61eedd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dba65e798f980af13231c931f418d6e35d61eedd", "patch": "@@ -1,3 +1,8 @@\n+2003-09-07  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* langhooks.c (lhd_print_error_function): Move from diagnostic.c.\n+\t* Makefile.in (langhooks.o): Depend on diagnostic.h\n+\n 2003-09-06  James E Wilson  <wilson@tuliptree.org>\n \n \t* loop.c (loop_regs_update): Delete else clause for PATTERN rtx and"}, {"sha": "732e8f8122e3e165270e3d6d93ac0960c029a63e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba65e798f980af13231c931f418d6e35d61eedd/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba65e798f980af13231c931f418d6e35d61eedd/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=dba65e798f980af13231c931f418d6e35d61eedd", "patch": "@@ -1462,7 +1462,7 @@ convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) flags\n \n langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) toplev.h \\\n    tree-inline.h $(RTL_H) insn-config.h $(INTEGRATE_H) langhooks.h \\\n-   $(LANGHOOKS_DEF_H) flags.h $(GGC_H) gt-langhooks.h\n+   $(LANGHOOKS_DEF_H) flags.h $(GGC_H) gt-langhooks.h diagnostic.h\n tree.o : tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) flags.h function.h \\\n    toplev.h $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) langhooks.h \\\n    real.h gt-tree.h"}, {"sha": "8c8a86c2b381e4747b97c4e91be7a52b0b98240d", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba65e798f980af13231c931f418d6e35d61eedd/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba65e798f980af13231c931f418d6e35d61eedd/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=dba65e798f980af13231c931f418d6e35d61eedd", "patch": "@@ -279,40 +279,6 @@ diagnostic_action_after_output (diagnostic_context *context,\n     }\n }\n \n-/* The default function to print out name of current function that caused\n-   an error.  */\n-void\n-lhd_print_error_function (diagnostic_context *context, const char *file)\n-{\n-  if (diagnostic_last_function_changed (context))\n-    {\n-      const char *old_prefix = context->printer->prefix;\n-      char *new_prefix = file ? build_message_string (\"%s: \", file) : NULL;\n-\n-      pp_set_prefix (context->printer, new_prefix);\n-\n-      if (current_function_decl == NULL)\n-\tpp_string (context->printer, _(\"At top level:\"));\n-      else\n-\t{\n-\t  if (TREE_CODE (TREE_TYPE (current_function_decl)) == METHOD_TYPE)\n-\t    pp_printf\n-\t      (context->printer, \"In member function `%s':\",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2));\n-\t  else\n-\t    pp_printf\n-\t      (context->printer, \"In function `%s':\",\n-\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2));\n-\t}\n-      pp_newline (context->printer);\n-\n-      diagnostic_set_last_function (context);\n-      pp_flush (context->printer);\n-      context->printer->prefix = old_prefix;\n-      free ((char*) new_prefix);\n-    }\n-}\n-\n /* Prints out, if necessary, the name of the current function\n   that caused an error.  Called from all error and warning functions.\n   We ignore the FILE parameter, as it cannot be relied upon.  */"}, {"sha": "622e0626801d54c6d7d37642b68fac8b6996dd83", "filename": "gcc/langhooks.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba65e798f980af13231c931f418d6e35d61eedd/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba65e798f980af13231c931f418d6e35d61eedd/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=dba65e798f980af13231c931f418d6e35d61eedd", "patch": "@@ -33,6 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"ggc.h\"\n+#include \"diagnostic.h\"\n \n /* Do nothing; in many cases the default hook.  */\n \n@@ -493,4 +494,38 @@ lhd_initialize_diagnostics (struct diagnostic_context *ctx ATTRIBUTE_UNUSED)\n {\n }\n \n+/* The default function to print out name of current function that caused\n+   an error.  */\n+void\n+lhd_print_error_function (diagnostic_context *context, const char *file)\n+{\n+  if (diagnostic_last_function_changed (context))\n+    {\n+      const char *old_prefix = context->printer->prefix;\n+      char *new_prefix = file ? file_name_as_prefix (file) : NULL;\n+\n+      pp_set_prefix (context->printer, new_prefix);\n+\n+      if (current_function_decl == NULL)\n+\tpp_printf (context->printer, \"At top level:\");\n+      else\n+\t{\n+\t  if (TREE_CODE (TREE_TYPE (current_function_decl)) == METHOD_TYPE)\n+\t    pp_printf\n+\t      (context->printer, \"In member function `%s':\",\n+\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2));\n+\t  else\n+\t    pp_printf\n+\t      (context->printer, \"In function `%s':\",\n+\t       (*lang_hooks.decl_printable_name) (current_function_decl, 2));\n+\t}\n+      pp_newline (context->printer);\n+\n+      diagnostic_set_last_function (context);\n+      pp_flush (context->printer);\n+      context->printer->prefix = old_prefix;\n+      free ((char*) new_prefix);\n+    }\n+}\n+\n #include \"gt-langhooks.h\""}]}