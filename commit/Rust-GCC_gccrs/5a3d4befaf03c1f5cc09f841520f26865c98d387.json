{"sha": "5a3d4befaf03c1f5cc09f841520f26865c98d387", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzZDRiZWZhZjAzYzFmNWNjMDlmODQxNTIwZjI2ODY1Yzk4ZDM4Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-31T20:57:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-31T20:57:24Z"}, "message": "(simplify_binary_operation...\n\n(simplify_binary_operation, case MULT): When testing for\nfloating-point equality, make sure we do so inside a region protected\nfrom traps.\n\nFrom-SVN: r3963", "tree": {"sha": "67584a19d59eca2c45bde16d8017123c6f2c6d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67584a19d59eca2c45bde16d8017123c6f2c6d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a3d4befaf03c1f5cc09f841520f26865c98d387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3d4befaf03c1f5cc09f841520f26865c98d387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3d4befaf03c1f5cc09f841520f26865c98d387", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3d4befaf03c1f5cc09f841520f26865c98d387/comments", "author": null, "committer": null, "parents": [{"sha": "0b6b29004875046757143caa8a0552d236d137f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b6b29004875046757143caa8a0552d236d137f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b6b29004875046757143caa8a0552d236d137f0"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "44c75e60cf570c96abe561c021eaf321c67158ba", "filename": "gcc/cse.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3d4befaf03c1f5cc09f841520f26865c98d387/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3d4befaf03c1f5cc09f841520f26865c98d387/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=5a3d4befaf03c1f5cc09f841520f26865c98d387", "patch": "@@ -3565,15 +3565,23 @@ simplify_binary_operation (code, mode, op0, op1)\n \t      && GET_MODE_CLASS (GET_MODE (op1)) == MODE_FLOAT)\n \t    {\n \t      REAL_VALUE_TYPE d;\n+\t      jmp_buf handler;\n+\t      int op1is2, op1ism1;\n+\n+\t      if (setjmp (handler))\n+\t\treturn 0;\n+\n+\t      set_float_handler (handler);\n \t      REAL_VALUE_FROM_CONST_DOUBLE (d, op1);\n+\t      op1is2 = REAL_VALUES_EQUAL (d, dconst2);\n+\t      op1ism1 = REAL_VALUES_EQUAL (d, dconstm1);\n+\t      set_float_handler (NULL_PTR);\n \n \t      /* x*2 is x+x and x*(-1) is -x */\n-\t      if (REAL_VALUES_EQUAL (d, dconst2)\n-\t\t  && GET_MODE (op0) == mode)\n+\t      if (op1is2 && GET_MODE (op0) == mode)\n \t\treturn gen_rtx (PLUS, mode, op0, copy_rtx (op0));\n \n-\t      else if (REAL_VALUES_EQUAL (d, dconstm1)\n-\t\t       && GET_MODE (op0) == mode)\n+\t      else if (op1ism1 && GET_MODE (op0) == mode)\n \t\treturn gen_rtx (NEG, mode, op0);\n \t    }\n \t  break;"}]}