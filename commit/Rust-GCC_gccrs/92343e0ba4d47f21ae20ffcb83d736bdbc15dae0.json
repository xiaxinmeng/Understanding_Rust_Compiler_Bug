{"sha": "92343e0ba4d47f21ae20ffcb83d736bdbc15dae0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIzNDNlMGJhNGQ0N2YyMWFlMjBmZmNiODNkNzM2YmRiYzE1ZGFlMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-12T08:49:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-12T10:18:37Z"}, "message": "tree-optimization/101394 - fix PRE full redundancy wrt abnormals\n\nThis avoids adding a copy from an abnormal picked up from PHI\ntranslation much like we'd avoid inserting the translated\nexpression on pred edges.\n\n2021-07-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/101394\n\t* tree-ssa-pre.c (do_pre_regular_insertion): Avoid inserting\n\tcopies from abnormals for a full redundancy.\n\n\t* gcc.dg/torture/pr101394.c: New testcase.", "tree": {"sha": "24735458da32f09d12172504c90bfc032706b72e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24735458da32f09d12172504c90bfc032706b72e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "123d0a597beb6d9865f808bf15b0d67f2a8fd5b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/123d0a597beb6d9865f808bf15b0d67f2a8fd5b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/123d0a597beb6d9865f808bf15b0d67f2a8fd5b2"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "87fbdadc1525ba79a4d370e02f99701218476411", "filename": "gcc/testsuite/gcc.dg/torture/pr101394.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101394.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101394.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101394.c?ref=92343e0ba4d47f21ae20ffcb83d736bdbc15dae0", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d;\n+void h();\n+int e() __attribute__((returns_twice));\n+void f() {\n+  int *g = (int *)(__INTPTR_TYPE__)c;\n+  if (b) {\n+    h();\n+    g--;\n+    if (a)\n+      if (d)\n+        h();\n+  }\n+  if (g++)\n+    e();\n+  c = (__INTPTR_TYPE__)g;\n+}"}, {"sha": "69141c2f0c9287d3cb49e5f67b2657fb324d67a8", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92343e0ba4d47f21ae20ffcb83d736bdbc15dae0/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=92343e0ba4d47f21ae20ffcb83d736bdbc15dae0", "patch": "@@ -3412,7 +3412,11 @@ do_pre_regular_insertion (basic_block block, basic_block dom,\n \t  /* If all edges produce the same value and that value is\n \t     an invariant, then the PHI has the same value on all\n \t     edges.  Note this.  */\n-\t  else if (!cant_insert && all_same)\n+\t  else if (!cant_insert\n+\t\t   && all_same\n+\t\t   && (edoubleprime->kind != NAME\n+\t\t       || !SSA_NAME_OCCURS_IN_ABNORMAL_PHI\n+\t\t\t     (PRE_EXPR_NAME (edoubleprime))))\n \t    {\n \t      gcc_assert (edoubleprime->kind == CONSTANT\n \t\t\t  || edoubleprime->kind == NAME);"}]}