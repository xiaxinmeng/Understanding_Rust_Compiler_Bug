{"sha": "c9407e4c671efb42c76dbb80a13ecf0c5dc09f05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk0MDdlNGM2NzFlZmI0MmM3NmRiYjgwYTEzZWNmMGM1ZGMwOWYwNQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-02-20T18:22:32Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-02-20T18:22:32Z"}, "message": "stmt.c (expand_return): If an attempt is made to return the error_mar_node...\n\n\t* stmt.c (expand_return): If an attempt is made to return the\n\terror_mar_node, treat the return like a return without a value.\n\nFrom-SVN: r39924", "tree": {"sha": "40949ebadccd8eec61e63b81100bb256e38ed590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40949ebadccd8eec61e63b81100bb256e38ed590"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/comments", "author": null, "committer": null, "parents": [{"sha": "0cbd39801459319899e08e930f5257c2ced61ddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cbd39801459319899e08e930f5257c2ced61ddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cbd39801459319899e08e930f5257c2ced61ddb"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "70b8d265321b497c36b7fb81c0a9b53c8baac9a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9407e4c671efb42c76dbb80a13ecf0c5dc09f05", "patch": "@@ -1,3 +1,8 @@\n+2001-02-20  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* stmt.c (expand_return): If an attempt is made to return the\n+\terror_mar_node, treat the return like a return without a value.\n+\n 2001-02-19  Zack Weinberg  <zackw@stanford.edu>\n \n \t* sibcall.c (skip_copy_to_return_value): Call"}, {"sha": "5387d68d43797485d717673382d42563008bea15", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c9407e4c671efb42c76dbb80a13ecf0c5dc09f05", "patch": "@@ -1075,8 +1075,7 @@ Sun Feb  4 15:52:44 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* class.c (check_field_decls): Don't special case anonymous\n \tfields in error messages.\n-\t(note_name_declared_inpwdpwd\n-\t_class): Use %D on diagnostic.\n+\t(note_name_declared_in_class): Use %D on diagnostic.\n \n \t* tree.c (pod_type_p): Use strip_array_types.\n \t(cp_valid_lang_attribute): Likewise."}, {"sha": "80be1faf7370dc7c9aa4b216b1327f2c1136610b", "filename": "gcc/stmt.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=c9407e4c671efb42c76dbb80a13ecf0c5dc09f05", "patch": "@@ -2946,7 +2946,12 @@ expand_return (retval)\n #endif\n \n   if (retval == error_mark_node)\n-    retval_rhs = NULL_TREE;\n+    {\n+      /* Treat this like a return of no value from a function that\n+\t returns a value.  */\n+      expand_null_return ();\n+      return; \n+    }\n   else if (TREE_CODE (retval) == RESULT_DECL)\n     retval_rhs = retval;\n   else if ((TREE_CODE (retval) == MODIFY_EXPR || TREE_CODE (retval) == INIT_EXPR)"}, {"sha": "42a7e47a2c41e1fef94c2fe5eb32e9b15df96784", "filename": "gcc/testsuite/g++.old-deja/g++.other/return1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Freturn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9407e4c671efb42c76dbb80a13ecf0c5dc09f05/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Freturn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Freturn1.C?ref=c9407e4c671efb42c76dbb80a13ecf0c5dc09f05", "patch": "@@ -0,0 +1,18 @@\n+// Build don't link:\n+// Special g++ Option: \n+// Origin: holmen@mail.nu\n+\n+struct C {\n+    int f() {return 0;}\n+};\n+\n+struct D {\n+    C a[1];\n+    C* g();\n+};\n+\n+C* D::g() {\n+    int i = 0;\n+    while (i < 1 && a[i].f() != 1) {}\n+    return undefined_variable; // ERROR - \n+}"}]}