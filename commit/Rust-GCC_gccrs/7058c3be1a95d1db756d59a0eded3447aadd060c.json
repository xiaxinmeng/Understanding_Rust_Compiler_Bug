{"sha": "7058c3be1a95d1db756d59a0eded3447aadd060c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA1OGMzYmUxYTk1ZDFkYjc1NmQ1OWEwZWRlZDM0NDdhYWRkMDYwYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-10-20T01:07:13Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-10-20T01:07:13Z"}, "message": "sso_string_base.h (_M_swap): Rewrite.\n\n2005-10-19  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/ext/sso_string_base.h (_M_swap): Rewrite.\n\nFrom-SVN: r105654", "tree": {"sha": "fbd3f993eeb346179adea6cacfc33aad6bcf9209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbd3f993eeb346179adea6cacfc33aad6bcf9209"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7058c3be1a95d1db756d59a0eded3447aadd060c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7058c3be1a95d1db756d59a0eded3447aadd060c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7058c3be1a95d1db756d59a0eded3447aadd060c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7058c3be1a95d1db756d59a0eded3447aadd060c/comments", "author": null, "committer": null, "parents": [{"sha": "c9218d26da4bf70c3a4fac39f2a42eb5a9e67645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9218d26da4bf70c3a4fac39f2a42eb5a9e67645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9218d26da4bf70c3a4fac39f2a42eb5a9e67645"}], "stats": {"total": 100, "additions": 56, "deletions": 44}, "files": [{"sha": "902f5f27dafdaad957408cc87d78b2ddda64f3fe", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7058c3be1a95d1db756d59a0eded3447aadd060c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7058c3be1a95d1db756d59a0eded3447aadd060c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7058c3be1a95d1db756d59a0eded3447aadd060c", "patch": "@@ -1,3 +1,7 @@\n+2005-10-19  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/ext/sso_string_base.h (_M_swap): Rewrite.\n+\n 2005-10-19  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/rc_string_base.h (_S_terminal): Remove."}, {"sha": "f9b32330f62102cf59b0b259c98753dae9c8f2ef", "filename": "libstdc++-v3/include/ext/sso_string_base.h", "status": "modified", "additions": 52, "deletions": 44, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7058c3be1a95d1db756d59a0eded3447aadd060c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7058c3be1a95d1db756d59a0eded3447aadd060c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h?ref=7058c3be1a95d1db756d59a0eded3447aadd060c", "patch": "@@ -248,55 +248,63 @@ namespace __gnu_cxx\n     __sso_string_base<_CharT, _Traits, _Alloc>::\n     _M_swap(__sso_string_base& __rcs)\n     {\n-      const bool __local = _M_is_local();\n-      const bool __rcs_local = __rcs._M_is_local();\n-      \n-      if (__local && __rcs_local)\n-\t{\n-\t  _CharT __tmp_data[_S_local_capacity + 1];\n-\t  const size_type __tmp_length = __rcs._M_length();\n-\t  _S_copy(__tmp_data, __rcs._M_data(), __rcs._M_length() + 1);\n-\t  __rcs._M_length(_M_length());\n-\t  _S_copy(__rcs._M_data(), _M_data(), _M_length() + 1);\n-\t  _M_length(__tmp_length);\n-\t  _S_copy(_M_data(), __tmp_data, __tmp_length + 1);\n-\t}\n-      else if (__local && !__rcs_local)\n-\t{\n-\t  const size_type __tmp_capacity = __rcs._M_allocated_capacity;\n-\t  const size_type __tmp_length = __rcs._M_length();\n-\t  _CharT* __tmp_ptr = __rcs._M_data();\n-\t  __rcs._M_data(__rcs._M_local_data);\n-\t  _S_copy(__rcs._M_data(), _M_data(), _M_length() + 1);\n-\t  __rcs._M_length(_M_length());\n-\t  _M_data(__tmp_ptr);\n-\t  _M_length(__tmp_length);\n-\t  _M_capacity(__tmp_capacity);\n-\t}\n-      else if (!__local && __rcs_local)\n-\t{\n-\t  const size_type __tmp_capacity = _M_allocated_capacity;\n-\t  const size_type __tmp_length = _M_length();\n-\t  _CharT* __tmp_ptr = _M_data();\n-\t  _M_data(_M_local_data);\n-\t  _S_copy(_M_data(), __rcs._M_data(), __rcs._M_length() + 1);\n-\t  _M_length(__rcs._M_length());\n-\t  __rcs._M_data(__tmp_ptr);\n-\t  __rcs._M_length(__tmp_length);\n-\t  __rcs._M_capacity(__tmp_capacity);\n-\t}\n+      if (_M_is_local())\n+\tif (__rcs._M_is_local())\n+\t  {\n+\t    if (_M_length() && __rcs._M_length())\n+\t      {\n+\t\t_CharT __tmp_data[_S_local_capacity + 1];\n+\t\ttraits_type::copy(__tmp_data, __rcs._M_local_data,\n+\t\t\t\t  __rcs._M_length() + 1);\n+\t\ttraits_type::copy(__rcs._M_local_data, _M_local_data,\n+\t\t\t\t  _M_length() + 1);\n+\t\ttraits_type::copy(_M_local_data, __tmp_data,\n+\t\t\t\t  __rcs._M_length() + 1);\n+\t      }\n+\t    else if (__rcs._M_length())\n+\t      {\n+\t\ttraits_type::copy(_M_local_data, __rcs._M_local_data,\n+\t\t\t\t  __rcs._M_length() + 1);\n+\t\ttraits_type::assign(__rcs._M_local_data[0], _CharT());\n+\t      }\n+\t    else if (_M_length())\n+\t      {\n+\t\ttraits_type::copy(__rcs._M_local_data, _M_local_data,\n+\t\t\t\t  _M_length() + 1);\n+\t\ttraits_type::assign(_M_local_data[0], _CharT());\n+\t      }\n+\t  }\n+\telse\n+\t  {\n+\t    const size_type __tmp_capacity = __rcs._M_allocated_capacity;\n+\t    _S_copy(__rcs._M_local_data, _M_local_data, _M_length() + 1);\n+\t    _M_data(__rcs._M_data());\n+\t    __rcs._M_data(__rcs._M_local_data);\n+\t    _M_capacity(__tmp_capacity);\n+\t  }\n       else\n \t{\n \t  const size_type __tmp_capacity = _M_allocated_capacity;\n-\t  const size_type __tmp_length = _M_length();\n-\t  _CharT* __tmp_ptr = _M_data();\n-\t  _M_data(__rcs._M_data());\n-\t  _M_length(__rcs._M_length());\n-\t  _M_capacity(__rcs._M_allocated_capacity);\n-\t  __rcs._M_data(__tmp_ptr);\n-\t  __rcs._M_length(__tmp_length);\n+\t  if (__rcs._M_is_local())\n+\t    {\n+\t      _S_copy(_M_local_data, __rcs._M_local_data,\n+\t\t      __rcs._M_length() + 1);\n+\t      __rcs._M_data(_M_data());\n+\t      _M_data(_M_local_data);\n+\t    }\n+\t  else\n+\t    {\n+\t      _CharT* __tmp_ptr = _M_data();\n+\t      _M_data(__rcs._M_data());\n+\t      __rcs._M_data(__tmp_ptr);\n+\t      _M_capacity(__rcs._M_allocated_capacity);\n+\t    }\n \t  __rcs._M_capacity(__tmp_capacity);\n \t}\n+\n+      const size_type __tmp_length = _M_length();\n+      _M_length(__rcs._M_length());\n+      __rcs._M_length(__tmp_length);\n     }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>"}]}