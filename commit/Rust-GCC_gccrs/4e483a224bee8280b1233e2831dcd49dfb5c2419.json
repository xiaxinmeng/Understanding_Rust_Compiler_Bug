{"sha": "4e483a224bee8280b1233e2831dcd49dfb5c2419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU0ODNhMjI0YmVlODI4MGIxMjMzZTI4MzFkY2Q0OWRmYjVjMjQxOQ==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@novell.com", "date": "2008-03-31T07:53:48Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2008-03-31T07:53:48Z"}, "message": "constraints.md: Add 'j' constraint.\n\ngcc/\n2008-03-31  Jan Beulich  <jbeulich@novell.com>\n\n\t* config/ia64/constraints.md: Add 'j' constraint.\n\t* config/ia64/ia64.md (movsi_internal): Add addp4 case.\n\t(movdi_internal): Likewise.\n\nFrom-SVN: r133748", "tree": {"sha": "33acedc330af1e81b1c928c7039a9c195f2c8816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33acedc330af1e81b1c928c7039a9c195f2c8816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e483a224bee8280b1233e2831dcd49dfb5c2419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e483a224bee8280b1233e2831dcd49dfb5c2419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e483a224bee8280b1233e2831dcd49dfb5c2419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e483a224bee8280b1233e2831dcd49dfb5c2419/comments", "author": null, "committer": null, "parents": [{"sha": "5b6a73c3ece1f92002771f2ca7c3bb4a3fbfa424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6a73c3ece1f92002771f2ca7c3bb4a3fbfa424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b6a73c3ece1f92002771f2ca7c3bb4a3fbfa424"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "6568174321709deff13677b5fecfbaaba0911fb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e483a224bee8280b1233e2831dcd49dfb5c2419/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e483a224bee8280b1233e2831dcd49dfb5c2419/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e483a224bee8280b1233e2831dcd49dfb5c2419", "patch": "@@ -1,3 +1,9 @@\n+2008-03-31  Jan Beulich  <jbeulich@novell.com>\n+\n+\t* config/ia64/constraints.md: Add 'j' constraint.\n+\t* config/ia64/ia64.md (movsi_internal): Add addp4 case.\n+\t(movdi_internal): Likewise.\n+\n 2008-03-30  Volker Reichelt  <v.reichelt@netcologne.de>\n \n \tPR c/35748"}, {"sha": "0c24536c9aaa1da25d6120848c5e129ac6f99331", "filename": "gcc/config/ia64/constraints.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e483a224bee8280b1233e2831dcd49dfb5c2419/gcc%2Fconfig%2Fia64%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e483a224bee8280b1233e2831dcd49dfb5c2419/gcc%2Fconfig%2Fia64%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fconstraints.md?ref=4e483a224bee8280b1233e2831dcd49dfb5c2419", "patch": "@@ -52,6 +52,12 @@\n   (and (match_code \"const_int\")\n        (match_test \"(unsigned HOST_WIDE_INT)ival + 0x200000 < 0x400000\")))\n \n+(define_constraint \"j\"\n+  \"(2**32-2**13)..(2**32-1) for addp4 instructions\"\n+  (and (match_code \"const_int\")\n+       (match_test \"(unsigned HOST_WIDE_INT)ival >= 0xffffe000\n+\t\t    && (unsigned HOST_WIDE_INT)ival <= 0xffffffff\")))\n+\n (define_constraint \"K\"\n   \"8 bit signed immediate for logical instructions\"\n   (and (match_code \"const_int\")"}, {"sha": "ff2bfc8aa0339db0d00346a72a1df7280518bc7e", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e483a224bee8280b1233e2831dcd49dfb5c2419/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e483a224bee8280b1233e2831dcd49dfb5c2419/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=4e483a224bee8280b1233e2831dcd49dfb5c2419", "patch": "@@ -322,12 +322,13 @@\n })\n \n (define_insn \"*movsi_internal\"\n-  [(set (match_operand:SI 0 \"destination_operand\" \"=r,r,r,r, m, r,*f,*f, r,*d\")\n-\t(match_operand:SI 1 \"move_operand\"        \"rO,J,i,m,rO,*f,rO,*f,*d,rK\"))]\n+  [(set (match_operand:SI 0 \"destination_operand\" \"=r,r,r,r,r, m, r,*f,*f, r,*d\")\n+\t(match_operand:SI 1 \"move_operand\"        \"rO,J,j,i,m,rO,*f,rO,*f,*d,rK\"))]\n   \"ia64_move_ok (operands[0], operands[1])\"\n   \"@\n   mov %0 = %r1\n   addl %0 = %1, r0\n+  addp4 %0 = %1 - 0x100000000, r0\n   movl %0 = %1\n   ld4%O1 %0 = %1%P1\n   st4%Q0 %0 = %r1%P0\n@@ -337,7 +338,7 @@\n   mov %0 = %1\n   mov %0 = %r1\"\n   ;; frar_m, toar_m ??? why not frar_i and toar_i\n-  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,frar_m,toar_m\")])\n+  [(set_attr \"itanium_class\" \"ialu,ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,frar_m,toar_m\")])\n \n (define_expand \"movdi\"\n   [(set (match_operand:DI 0 \"general_operand\" \"\")\n@@ -352,14 +353,15 @@\n \n (define_insn \"*movdi_internal\"\n   [(set (match_operand:DI 0 \"destination_operand\"\n-\t\t    \"=r,r,r,r, m, r,*f,*f,*f, Q, r,*b, r,*e, r,*d, r,*c\")\n+\t\t    \"=r,r,r,r,r, m, r,*f,*f,*f, Q, r,*b, r,*e, r,*d, r,*c\")\n \t(match_operand:DI 1 \"move_operand\"\n-\t\t    \"rO,JT,i,m,rO,*f,rO,*f, Q,*f,*b,rO,*e,rK,*d,rK,*c,rO\"))]\n+\t\t    \"rO,JT,j,i,m,rO,*f,rO,*f, Q,*f,*b,rO,*e,rK,*d,rK,*c,rO\"))]\n   \"ia64_move_ok (operands[0], operands[1])\"\n {\n   static const char * const alt[] = {\n     \"%,mov %0 = %r1\",\n     \"%,addl %0 = %1, r0\",\n+    \"%,addp4 %0 = %1 - 0x100000000, r0\",\n     \"%,movl %0 = %1\",\n     \"%,ld8%O1 %0 = %1%P1\",\n     \"%,st8%Q0 %0 = %r1%P0\",\n@@ -383,7 +385,7 @@\n \n   return alt[which_alternative];\n }\n-  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,fld,stf,frbr,tobr,frar_i,toar_i,frar_m,toar_m,frpr,topr\")])\n+  [(set_attr \"itanium_class\" \"ialu,ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,fld,stf,frbr,tobr,frar_i,toar_i,frar_m,toar_m,frpr,topr\")])\n \n (define_mode_iterator MODE [BI QI HI SI DI SF DF XF TI])\n (define_mode_iterator MODE_FOR_EXTEND [QI HI SI])"}]}