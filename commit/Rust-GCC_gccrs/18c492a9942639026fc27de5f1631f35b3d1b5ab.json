{"sha": "18c492a9942639026fc27de5f1631f35b3d1b5ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjNDkyYTk5NDI2MzkwMjZmYzI3ZGU1ZjE2MzFmMzViM2QxYjVhYg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2007-07-09T22:34:43Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2007-07-09T22:34:43Z"}, "message": "re PR libfortran/32336 (matmul: flag runtime- instead of assertation error)\n\n2007-07-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/32336\n\t* m4/matmul.m4:  When the dimension of b is incorrect,\n\traise a runtime error instead of a failed assertion.\n\t* generated/matmul_i1.c:  Regenerated.\n\t* generated/matmul_i2.c:  Regenerated.\n\t* generated/matmul_i4.c:  Regenerated.\n\t* generated/matmul_i8.c:  Regenerated.\n\t* generated/matmul_i16.c:  Regenerated.\n\t* generated/matmul_r4.c:  Regenerated.\n\t* generated/matmul_r8.c:  Regenerated.\n\t* generated/matmul_r10.c:  Regenerated.\n\t* generated/matmul_r16.c:  Regenerated.\n\n2007-07-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/32336\n\t* gfortran.dg/matmul_5.f90:  New test case.\n\nFrom-SVN: r126498", "tree": {"sha": "d4f862e620d24da8c9d4a5c46013f07251cfcc85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4f862e620d24da8c9d4a5c46013f07251cfcc85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c492a9942639026fc27de5f1631f35b3d1b5ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c492a9942639026fc27de5f1631f35b3d1b5ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c492a9942639026fc27de5f1631f35b3d1b5ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c492a9942639026fc27de5f1631f35b3d1b5ab/comments", "author": null, "committer": null, "parents": [{"sha": "924a20b64b21c176e07229e0d0c227d07b1040f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/924a20b64b21c176e07229e0d0c227d07b1040f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/924a20b64b21c176e07229e0d0c227d07b1040f9"}], "stats": {"total": 73, "additions": 59, "deletions": 14}, "files": [{"sha": "edbe7edd628d3360d4326a1213e80d0a34fa7906", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -1,3 +1,8 @@\n+2007-07-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32336\n+\t* gfortran.dg/matmul_5.f90:  New test case.\n+\n 2007-07-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/fesd-any.c: Move to gcc.dg/debug/dwarf2 directory."}, {"sha": "b67601f40f4e264b96ba658c04ee72f9dabe46a8", "filename": "gcc/testsuite/gfortran.dg/matmul_5.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_5.f90?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do run }\n+! { dg-shouldfail \"dimension of array B incorrect in MATMUL intrinsic\" }\n+program main\n+  real, dimension(:,:), allocatable :: a\n+  real, dimension(:), allocatable :: b\n+  allocate (a(2,2), b(3))\n+  call random_number(a)\n+  call random_number(b)\n+  print *,matmul(a,b)\n+end program main\n+! { dg-output \"Fortran runtime error: dimension of array B incorrect in MATMUL intrinsic.*\" }"}, {"sha": "154d241f651b6d131881f4a5bfdfb86b45817e62", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -1,3 +1,18 @@\n+2007-07-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/32336\n+\t* m4/matmul.m4:  When the dimension of b is incorrect,\n+\traise a runtime error instead of a failed assertion.\n+\t* generated/matmul_i1.c:  Regenerated.\n+\t* generated/matmul_i2.c:  Regenerated.\n+\t* generated/matmul_i4.c:  Regenerated.\n+\t* generated/matmul_i8.c:  Regenerated.\n+\t* generated/matmul_i16.c:  Regenerated.\n+\t* generated/matmul_r4.c:  Regenerated.\n+\t* generated/matmul_r8.c:  Regenerated.\n+\t* generated/matmul_r10.c:  Regenerated.\n+\t* generated/matmul_r16.c:  Regenerated.\n+\n 2007-07-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/32678"}, {"sha": "d7d4c650a98b88eff88fc096409285299d8ddcb5", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "e9ad2d439c088f0b5487828562ae502fee03b8ae", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "753e535df79e0a7169ac98b2718d53f1cd3bf962", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "23aea6a4fc3651475c84521ccc10b4a1bdd9f36f", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "ae035076bedeeac7c2ad946c29e5aaf6da579c1b", "filename": "libgfortran/generated/matmul_i1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i1.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "38756dc9010011532969c448783787e5b05cd1d5", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "7287b6b745aaee4ca6470640f35557b40987a20e", "filename": "libgfortran/generated/matmul_i2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i2.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "d5eed998311f7a27311a3fe4c9c4eb898d14c289", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "4ab55471c9e110f20ab6548f72acdc72e88ee310", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "9f7fb4b654e70eea9f6f0516f8a714d20cd31ba9", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "6a8f220a44753423915a339b21d85782fd09edeb", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "e4a45801edccfcd2ba97d05cde441c97848353e5", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "e823a756a97cace928f63e96b8adb19eebdbc42b", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -169,7 +169,8 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}, {"sha": "6235f63e2b039c79711e1a86fd08fa620663177d", "filename": "libgfortran/m4/matmul.m4", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fm4%2Fmatmul.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c492a9942639026fc27de5f1631f35b3d1b5ab/libgfortran%2Fm4%2Fmatmul.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul.m4?ref=18c492a9942639026fc27de5f1631f35b3d1b5ab", "patch": "@@ -171,7 +171,8 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n \n-  assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n+  if (count != b->dim[0].ubound + 1 - b->dim[0].lbound)\n+    runtime_error (\"dimension of array B incorrect in MATMUL intrinsic\");\n \n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n     {"}]}