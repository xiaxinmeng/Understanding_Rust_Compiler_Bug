{"sha": "80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBhYWM1YzgyMDQzYjZmM2Q3YjIxMDBlMWYyZjlhYmJiYWQ5N2U4OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-03-08T22:30:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-03-08T22:30:44Z"}, "message": "Remove Concepts from -std=c++1z.\n\ngcc/c-family/\n\t* c-opts.c (set_std_cxx1z): Don't enable concepts.\ngcc/testsuite/\n\t* lib/g++-dg.exp (g++-dg-runtest): Handle \"concepts\" in std list.\n\t* lib/target-supports.exp (check_effective_target_concepts): New.\ngcc/cp/\n\t* parser.c (cp_parser_diagnose_invalid_type_name): Give helpful\n\tdiagnostic for use of \"concept\".\n\t(cp_parser_requires_clause_opt): And \"requires\".\n\t(cp_parser_type_parameter, cp_parser_late_return_type_opt)\n\t(cp_parser_explicit_template_declaration): Adjust.\n\t* Make-lang.in (check-c++-all): Add \"concepts\" to std list.\n\nFrom-SVN: r234069", "tree": {"sha": "25bdfea51e1be2eb39b8e789b3b2f3eb0e543289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25bdfea51e1be2eb39b8e789b3b2f3eb0e543289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e546b68c1e45d0f1fffbf02c5324717264816c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e546b68c1e45d0f1fffbf02c5324717264816c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e546b68c1e45d0f1fffbf02c5324717264816c4"}], "stats": {"total": 357, "additions": 199, "deletions": 158}, "files": [{"sha": "464297b653919e9de1c9dea81e4a4e8f10961052", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,3 +1,7 @@\n+2016-03-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-opts.c (set_std_cxx1z): Don't enable concepts.\n+\n 2016-03-04  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/68187"}, {"sha": "fec58bcf91f454af36dd048a97d3ad8a87d9a3ec", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1566,8 +1566,6 @@ set_std_cxx1z (int iso)\n   /* C++11 includes the C99 standard library.  */\n   flag_isoc94 = 1;\n   flag_isoc99 = 1;\n-  /* Enable concepts by default. */\n-  flag_concepts = 1;\n   flag_isoc11 = 1;\n   cxx_dialect = cxx1z;\n   lang_hooks.name = \"GNU C++14\"; /* Pretend C++14 till standarization.  */"}, {"sha": "4bb43db6bf1016e385a0735dcd00ade1d465dd04", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,12 @@\n 2016-03-08  Jason Merrill  <jason@redhat.com>\n \n+\t* parser.c (cp_parser_diagnose_invalid_type_name): Give helpful\n+\tdiagnostic for use of \"concept\".\n+\t(cp_parser_requires_clause_opt): And \"requires\".\n+\t(cp_parser_type_parameter, cp_parser_late_return_type_opt)\n+\t(cp_parser_explicit_template_declaration): Adjust.\n+\t* Make-lang.in (check-c++-all): Add \"concepts\" to std list.\n+\n \tP0036R0: Unary Folds and Empty Parameter Packs\n \t* pt.c (expand_empty_fold): Remove special cases for *,+,&,|.\n "}, {"sha": "8770f6ff1bed4bb016f5ca20b515393ef8defb29", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -152,7 +152,7 @@ check-c++1z:\n \n # Run the testsuite in all standard conformance levels.\n check-c++-all:\n-\t$(MAKE) RUNTESTFLAGS=\"$(RUNTESTFLAGS) --stds=98,11,14,1z\" check-g++\n+\t$(MAKE) RUNTESTFLAGS=\"$(RUNTESTFLAGS) --stds=98,11,14,1z,concepts\" check-g++\n \n # Run the testsuite with garbage collection at every opportunity.\n check-g++-strict-gc:"}, {"sha": "726d5fc6a82c8eb73c5424cc1164b399ddbeb3a1", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -3172,6 +3172,8 @@ cp_parser_diagnose_invalid_type_name (cp_parser *parser, tree id,\n \t       && !strcmp (IDENTIFIER_POINTER (id), \"thread_local\"))\n \tinform (location, \"C++11 %<thread_local%> only available with \"\n \t\t\"-std=c++11 or -std=gnu++11\");\n+      else if (!flag_concepts && id == ridpointers[(int)RID_CONCEPT])\n+\tinform (location, \"%<concept%> only available with -fconcepts\");\n       else if (processing_template_decl && current_class_type\n \t       && TYPE_BINFO (current_class_type))\n \t{\n@@ -14668,13 +14670,10 @@ cp_parser_type_parameter (cp_parser* parser, bool *is_parameter_pack)\n \tcp_parser_require (parser, CPP_GREATER, RT_GREATER);\n \n         // If template requirements are present, parse them.\n-\tif (flag_concepts)\n-          {\n-            tree reqs = get_shorthand_constraints (current_template_parms);\n-            if (tree r = cp_parser_requires_clause_opt (parser))\n-              reqs = conjoin_constraints (reqs, make_predicate_constraint (r));\n-            TEMPLATE_PARMS_CONSTRAINTS (current_template_parms) = reqs;\n-          }\n+\ttree reqs = get_shorthand_constraints (current_template_parms);\n+\tif (tree r = cp_parser_requires_clause_opt (parser))\n+\t  reqs = conjoin_constraints (reqs, make_predicate_constraint (r));\n+\tTEMPLATE_PARMS_CONSTRAINTS (current_template_parms) = reqs;\n \n \t/* Look for the `class' or 'typename' keywords.  */\n \tcp_parser_type_parameter_key (parser);\n@@ -19745,6 +19744,8 @@ cp_parser_late_return_type_opt (cp_parser* parser, cp_declarator *declarator,\n   /* A late-specified return type is indicated by an initial '->'. */\n   if (token->type != CPP_DEREF\n       && token->keyword != RID_REQUIRES\n+      && !(token->type == CPP_NAME\n+\t   && token->u.value == ridpointers[RID_REQUIRES])\n       && !(declare_simd_p || cilk_simd_fn_vector_p || oacc_routine_p))\n     return NULL_TREE;\n \n@@ -24216,8 +24217,20 @@ cp_parser_requires_clause (cp_parser *parser)\n static tree\n cp_parser_requires_clause_opt (cp_parser *parser)\n {\n-  if (!cp_lexer_next_token_is_keyword (parser->lexer, RID_REQUIRES))\n-    return NULL_TREE;\n+  cp_token *tok = cp_lexer_peek_token (parser->lexer);\n+  if (tok->keyword != RID_REQUIRES)\n+    {\n+      if (!flag_concepts && tok->type == CPP_NAME\n+\t  && tok->u.value == ridpointers[RID_REQUIRES])\n+\t{\n+\t  error_at (cp_lexer_peek_token (parser->lexer)->location,\n+\t\t    \"%<requires%> only available with -fconcepts\");\n+\t  /* Parse and discard the requires-clause.  */\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t  cp_parser_requires_clause (parser);\n+\t}\n+      return NULL_TREE;\n+    }\n   cp_lexer_consume_token (parser->lexer);\n   return cp_parser_requires_clause (parser);\n }\n@@ -25608,13 +25621,10 @@ cp_parser_explicit_template_declaration (cp_parser* parser, bool member_p)\n   cp_parser_skip_to_end_of_template_parameter_list (parser);\n \n   /* Manage template requirements */\n-  if (flag_concepts)\n-  {\n-    tree reqs = get_shorthand_constraints (current_template_parms);\n-    if (tree r = cp_parser_requires_clause_opt (parser))\n-      reqs = conjoin_constraints (reqs, make_predicate_constraint (r));\n-    TEMPLATE_PARMS_CONSTRAINTS (current_template_parms) = reqs;\n-  }\n+  tree reqs = get_shorthand_constraints (current_template_parms);\n+  if (tree r = cp_parser_requires_clause_opt (parser))\n+    reqs = conjoin_constraints (reqs, make_predicate_constraint (r));\n+  TEMPLATE_PARMS_CONSTRAINTS (current_template_parms) = reqs;\n \n   cp_parser_template_declaration_after_parameters (parser, parameter_list,\n \t\t\t\t\t\t   member_p);"}, {"sha": "9580c10fc451828951e3cac9fdb60c5b9ba450fb", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -2238,6 +2238,16 @@ return value even without this option.  In all other cases, when\n exhaustion is signalled by throwing @code{std::bad_alloc}.  See also\n @samp{new (nothrow)}.\n \n+@item -fconcepts\n+@opindex fconcepts\n+Enable support for the C++ Extensions for Concepts Technical\n+Specification, ISO 19217 (2015), which allows code like\n+\n+@smallexample\n+template <class T> concept bool Addable = requires (T t) @{ t + t; @};\n+template <Addable T> T add (T a, T b) @{ return a + b; @}\n+@end smallexample\n+\n @item -fconstexpr-depth=@var{n}\n @opindex fconstexpr-depth\n Set the maximum nested evaluation depth for C++11 constexpr functions"}, {"sha": "40e9b5275caf61ba575d2e7832455930b97ac141", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,3 +1,8 @@\n+2016-03-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* lib/g++-dg.exp (g++-dg-runtest): Handle \"concepts\" in std list.\n+\t* lib/target-supports.exp (check_effective_target_concepts): New.\n+\n 2016-03-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/70135"}, {"sha": "fdd54bd2af150731559fbc609ca2762d26f91b68", "filename": "gcc/testsuite/g++.dg/concepts/alias1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "7879d441961750785ab2379ec4eec823193d3b28", "filename": "gcc/testsuite/g++.dg/concepts/alias2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "a8f0f67e04f91cb1058746dc3e8a34439389b3b5", "filename": "gcc/testsuite/g++.dg/concepts/alias3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "8ffa0a10e3f0b1492c27854ed6acb9153dae0f09", "filename": "gcc/testsuite/g++.dg/concepts/alias4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Falias4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "be9237d69fa5cb3e90f2f56c4295e7447644d2c8", "filename": "gcc/testsuite/g++.dg/concepts/auto1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T1, class T2> class A { };\n "}, {"sha": "e1a4d7342aa4157d1a907e5e2d365bf8ec30eaf9", "filename": "gcc/testsuite/g++.dg/concepts/auto3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class...> class tuple {};\n "}, {"sha": "061105756cb0446e9a5286c41d6125d289629c1c", "filename": "gcc/testsuite/g++.dg/concepts/class.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Class() { return __is_class(T); }"}, {"sha": "a2c4f5d1aed887501456e1907ea361604712c807", "filename": "gcc/testsuite/g++.dg/concepts/class1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "4b8706d8001bc8687af983cf0d1902aa210a4350", "filename": "gcc/testsuite/g++.dg/concepts/class2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "c25c801f1f63d7755c01896d254f513d3cd9fd01", "filename": "gcc/testsuite/g++.dg/concepts/class3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "af6db2509dbfd310b06ff1d633c209e63f9b36fc", "filename": "gcc/testsuite/g++.dg/concepts/class4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Class() { return __is_class(T); }"}, {"sha": "218ec9f5a9f094f466900fb7f5316eaff4280835", "filename": "gcc/testsuite/g++.dg/concepts/class5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool One() { return sizeof(T) >= 4; }"}, {"sha": "4a3a3d70a85c0418a0083c7436c0989da9e86e66", "filename": "gcc/testsuite/g++.dg/concepts/class6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fclass6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool One() { return sizeof(T) >= 4; }"}, {"sha": "2650caeb9c422b1b66482a25dac69f750771fc3e", "filename": "gcc/testsuite/g++.dg/concepts/constrained-parm.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fconstrained-parm.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fconstrained-parm.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fconstrained-parm.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "9829ba1ba6977bab243e7449112b8f2dcecf539a", "filename": "gcc/testsuite/g++.dg/concepts/decl-diagnose.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdecl-diagnose.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n typedef concept int CINT; // { dg-error \"'concept' cannot appear in a typedef declaration\" }\n "}, {"sha": "dfb0c6e9436776b2f867d146c99441612905885a", "filename": "gcc/testsuite/g++.dg/concepts/deduction-constraint1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdeduction-constraint1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67007\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class U>\n concept bool A ="}, {"sha": "aa98ffa752a4a1937ee21052ae4e03036fcd28e6", "filename": "gcc/testsuite/g++.dg/concepts/diagnostic1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67159\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T>\n concept bool R = requires (T& t) {"}, {"sha": "24472cc296de73a27468f5dd433236db2796de6a", "filename": "gcc/testsuite/g++.dg/concepts/disjunction1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdisjunction1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdisjunction1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdisjunction1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66962\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <typename> struct remove_cv;\n template <typename> struct is_reference;"}, {"sha": "3a7ba0363b1afa0a16afdff6bcb3f80ae7693f35", "filename": "gcc/testsuite/g++.dg/concepts/dr1430.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdr1430.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66092\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <type_traits>\n "}, {"sha": "11e232fe2d5e5a015ec4e645963e05f4e91a5d62", "filename": "gcc/testsuite/g++.dg/concepts/equiv.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Check equivalence of short- and longhand declarations.\n "}, {"sha": "24d419b2ed3e948cd2a1edc2ab170ed8a679b608", "filename": "gcc/testsuite/g++.dg/concepts/equiv2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fequiv2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n \n // template<typename T>"}, {"sha": "89eeb156b5748229faebd51cb07dd39f47a60887", "filename": "gcc/testsuite/g++.dg/concepts/explicit-inst1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "0319756bfc5c48c31c318ab1879eedeccedce59c", "filename": "gcc/testsuite/g++.dg/concepts/explicit-inst2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "177fc6c1368cd8b99b900f0343e3aa4579e4fbd8", "filename": "gcc/testsuite/g++.dg/concepts/explicit-inst3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "cf0d8988bd301cca594d996bec8b0ea7d1714d65", "filename": "gcc/testsuite/g++.dg/concepts/explicit-inst4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-inst4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "c6f559cd1af7d71df37aa1e90babf7646a266a73", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "8fa7e8aef16625dcc8c0f21a6e916c2676e00f3c", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "6294cef5845ed37d9666fe64ce0b0fceb77db0e6", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "16698cbb366a19a323daf7d5848806b05479e2fc", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "e889c2192bfd90e3bbe17922818943773dbfb926", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "0bf7640df27c0e4ab5e96dc2528efeea6bb91d84", "filename": "gcc/testsuite/g++.dg/concepts/explicit-spec6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexplicit-spec6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n struct A {"}, {"sha": "de68ef89ee6f48d8c1ed392a11849b44429d18f4", "filename": "gcc/testsuite/g++.dg/concepts/expression.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n #include <iostream>"}, {"sha": "ebdadc231f380376e03851470bb804d3f131fd39", "filename": "gcc/testsuite/g++.dg/concepts/expression2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool C1()"}, {"sha": "77b414e5cfc38c591d4380af6bafa397f4da0cb0", "filename": "gcc/testsuite/g++.dg/concepts/expression3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fexpression3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool C()"}, {"sha": "d8ea369814747628b5cf84c395444dcee7ec541f", "filename": "gcc/testsuite/g++.dg/concepts/feature-macro.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffeature-macro.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffeature-macro.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffeature-macro.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #ifndef __cpp_concepts\n #error __cpp_concepts not defined"}, {"sha": "4a8437f010b34a4d1b62a28ee9327fe78dfa1dbb", "filename": "gcc/testsuite/g++.dg/concepts/fn-concept1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Tuple() { // { dg-error \"multiple statements\" }"}, {"sha": "86ba936d842b476a9793941278b317f92eaed839", "filename": "gcc/testsuite/g++.dg/concepts/fn-concept2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn-concept2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept auto C1() { return 0; } // { dg-error \"deduced return type\" }"}, {"sha": "c4f9f555e0a9bc2fb1a98d87ccd2bbe914953485", "filename": "gcc/testsuite/g++.dg/concepts/fn1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "859c1d5eb21880a40cfb7885276a496845fdcc89", "filename": "gcc/testsuite/g++.dg/concepts/fn10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn10.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Test that constraint satisfaction checks work even when\n // processing template declarations."}, {"sha": "51a3fb5fd8e0c9d214c40d719ee21b878bf4985f", "filename": "gcc/testsuite/g++.dg/concepts/fn2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "ef704f7e135dcaad7fabcaf581d477654d8b6638", "filename": "gcc/testsuite/g++.dg/concepts/fn3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "9fa5790fd5e95efc6d28deacefae6f8b060094ff", "filename": "gcc/testsuite/g++.dg/concepts/fn4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "dd9a19e9f195350503e3a24127eac0cf02c90ec5", "filename": "gcc/testsuite/g++.dg/concepts/fn5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Check shorthand notation.\n "}, {"sha": "f6f165e099952478698f20f9d20fcd531d032830", "filename": "gcc/testsuite/g++.dg/concepts/fn6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Redefinition errors.\n "}, {"sha": "dd16a9ae65b58002bf68625d19365e3d13b8b19e", "filename": "gcc/testsuite/g++.dg/concepts/fn7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn7.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do link }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // FIXME: What is this actually testing?\n "}, {"sha": "e7481be2f05ca1a8d84327770fde574212cf78f2", "filename": "gcc/testsuite/g++.dg/concepts/fn8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn8.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Class() { return __is_class(T); }"}, {"sha": "c135bd7010a6ca13a4153dc5d17ea1fd140b5a09", "filename": "gcc/testsuite/g++.dg/concepts/fn9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffn9.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "5c418cbf76cfb054c3e97d79f9c336cc7ff757fe", "filename": "gcc/testsuite/g++.dg/concepts/friend1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Eq() { return requires(T t) { t == t; }; }"}, {"sha": "6268801a260c6f5a4e16eeb59062b578e8c14d5a", "filename": "gcc/testsuite/g++.dg/concepts/friend2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ffriend2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Eq() { return requires(T t) { t == t; }; }"}, {"sha": "03a47d5c959783a4fa48e3cb93054b1eced1d235", "filename": "gcc/testsuite/g++.dg/concepts/generic-fn-err.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn-err.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "d74ea21b6eff82f763db58c0428cf7c273ec6347", "filename": "gcc/testsuite/g++.dg/concepts/generic-fn.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fgeneric-fn.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n #include <type_traits>"}, {"sha": "28f3566d4178809a46d20f61380df1fa48aa8735", "filename": "gcc/testsuite/g++.dg/concepts/iconv1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67240\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n int foo(int x)\n {"}, {"sha": "6f5115c6c85fdf8eed5ad83c9fec056dc64a20bd", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "435745a1fa9e0db7448d6bfa6887056648d66975", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "07499bb40f9dc301b370de44946a060e867b38ae", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "4c53205466ddf8a428de0282ce054e86039b82e5", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "5f036c4b6454b0f3a8f32c3ae41f1050684098b2", "filename": "gcc/testsuite/g++.dg/concepts/intro1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C = __is_class(T);"}, {"sha": "1db1d7a493fbfdb4df4cd0099a8cba3a9d1c412c", "filename": "gcc/testsuite/g++.dg/concepts/intro2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "3cb3ecbb8b4b011556bfd60bb29f87ce72f04483", "filename": "gcc/testsuite/g++.dg/concepts/intro3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename ... T>\n   concept bool C1 = true;"}, {"sha": "182129165556bc5ab007f0df2ff8385011c156c6", "filename": "gcc/testsuite/g++.dg/concepts/intro4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename ... T>\n   concept bool C1 = true;"}, {"sha": "31924f930a7029ab198f8ad8c8fc1d723eb16f0e", "filename": "gcc/testsuite/g++.dg/concepts/intro5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T, typename U = int>\n   concept bool C()"}, {"sha": "f8ed6669f14f0fb091854b56ba93a4352678bd97", "filename": "gcc/testsuite/g++.dg/concepts/intro6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67003\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n namespace X {\n   template<class>"}, {"sha": "914c5fd611006d5ab68f9f14db5d58ffa5a98d14", "filename": "gcc/testsuite/g++.dg/concepts/intro7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fintro7.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66985\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <template <class> class T>\n concept bool _Valid = requires { typename T<int>; };"}, {"sha": "2b0604648313b98911e8b8381291d26ab92c1ace", "filename": "gcc/testsuite/g++.dg/concepts/member-concept.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmember-concept.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmember-concept.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmember-concept.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n struct Base {\n   template<typename T>"}, {"sha": "e44273ca8c872a475760358364565825bd5f53fd", "filename": "gcc/testsuite/g++.dg/concepts/memfun-err.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun-err.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun-err.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun-err.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run}\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n \n template<typename T>"}, {"sha": "523410cab984c8e8950f610c5acac859b2798277", "filename": "gcc/testsuite/g++.dg/concepts/memfun.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run}\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <cassert>\n "}, {"sha": "117400cf1b21486925a1e93cb92146bdb6345668", "filename": "gcc/testsuite/g++.dg/concepts/partial-concept-id1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Type() { return true; }"}, {"sha": "2e6866ecb9f1f58366aa675799d42af80194f8c5", "filename": "gcc/testsuite/g++.dg/concepts/partial-concept-id2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-concept-id2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Make sure that we check partial concept ids\n // with variable concepts."}, {"sha": "5db9a585090dc066fd7c1f9dc25206c8dc6eeddb", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Check that constraints don't break unconstrained partial\n // specializations."}, {"sha": "bc7621bec4d42676ddb44c23978c9c1a5c533993", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67084\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T>\n constexpr bool p = false;"}, {"sha": "9387ce00a1b7ee3a9c6df4002e3d143fa1cb18f6", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T> struct A { };\n template <class T> requires false struct A<T*> { };"}, {"sha": "80e41ab8399013370e218b4e4255fe31b9997118", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T> concept bool is_int = __is_same_as(T,int);\n "}, {"sha": "32a5eae693c1534045730e361a40011d25fd61c1", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67138\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T>\n concept bool _Auto = true;"}, {"sha": "50ef28991030f5fb32ea871e28d097fa6eaafd60", "filename": "gcc/testsuite/g++.dg/concepts/partial-spec6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpartial-spec6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67152\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T>\n concept bool HasType = requires { typename T::type; };"}, {"sha": "757bcef9b1ce9fe66f5f7887176b705da2111099", "filename": "gcc/testsuite/g++.dg/concepts/placeholder1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T, typename U>\n struct is_same"}, {"sha": "cf2013e63a6b29c3145e40d530755bb2db4d7113", "filename": "gcc/testsuite/g++.dg/concepts/placeholder2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Check argument deduction constraints.\n // TODO: We shoul have more of these..."}, {"sha": "208fc29a0d3f9bf4aae46d23f0af98b759a9567a", "filename": "gcc/testsuite/g++.dg/concepts/placeholder3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66218\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "2fb47580cdba857c6465eb0d138ff8259d2ab125", "filename": "gcc/testsuite/g++.dg/concepts/placeholder4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66218\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "e1d3092a77db31ec5fada751f735d7ecc7f4a709", "filename": "gcc/testsuite/g++.dg/concepts/placeholder5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T, class U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "ee218fdf9042b9003ae21e0282f0e50a5a7aad67", "filename": "gcc/testsuite/g++.dg/concepts/placeholder6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fplaceholder6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <int I> struct B { static const int i = I; };\n template <int I> concept bool Few = I < 10;"}, {"sha": "c1cc0b165b0d769c2b955fdb6b1d6f865c69abb6", "filename": "gcc/testsuite/g++.dg/concepts/pr65552.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65552.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65552.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65552.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool Concept() {"}, {"sha": "18e805959de5b02cd7d1749d26aca53a4b15526c", "filename": "gcc/testsuite/g++.dg/concepts/pr65575.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65575.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65575.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65575.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool C = false;"}, {"sha": "df64a3f386a504c30054bcd0b00febf38ee9b0f6", "filename": "gcc/testsuite/g++.dg/concepts/pr65634.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65634.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool C1() {"}, {"sha": "ddeef8203146361d36b149909302054df420f27f", "filename": "gcc/testsuite/g++.dg/concepts/pr65636.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65636.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n using TD = int;\n "}, {"sha": "fcbbab376ac6f1520d9633fd6b7c35e2923fbf10", "filename": "gcc/testsuite/g++.dg/concepts/pr65681.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65681.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool C()"}, {"sha": "4affa2366d2f0e029c643d59a3a6e6ddedaacdc5", "filename": "gcc/testsuite/g++.dg/concepts/pr65848.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65848.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Performance test... This should be fast.\n "}, {"sha": "c615ed7b4da4364276152ac22d4683d6427f2a02", "filename": "gcc/testsuite/g++.dg/concepts/pr65854.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65854.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65854.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr65854.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Handle alias templates in type requirements.\n "}, {"sha": "b53f64c7bd3a4299532596348f49998e2311093f", "filename": "gcc/testsuite/g++.dg/concepts/pr66091.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr66091.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr66091.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr66091.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool C1()"}, {"sha": "9cfada59b3eecb461a57b9ae4d50bf85ae019d60", "filename": "gcc/testsuite/g++.dg/concepts/pr67249.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr67249.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<class T> concept bool C1 = true;\n template<class A, class B> struct Pair {};"}, {"sha": "ece5bb7c0019b3f60b7e56807662fdd40f5236ed", "filename": "gcc/testsuite/g++.dg/concepts/pr68434.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68434.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class>\n concept bool C1 () {"}, {"sha": "eef1b33c96a6b771a259c453889a7dc70ece1120", "filename": "gcc/testsuite/g++.dg/concepts/pr68683.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr68683.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <typename, typename>\n struct is_same {"}, {"sha": "6c80d81a3026f422f8ec60de8087e90aa0282748", "filename": "gcc/testsuite/g++.dg/concepts/req-neg1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq-neg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq-neg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq-neg1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n void f1(int a) requires true;         // OK\n auto f2(int a) -> bool requires true; // OK"}, {"sha": "0636f1dfdb8263eb4e06d662707ba483f450ea2d", "filename": "gcc/testsuite/g++.dg/concepts/req1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Class () { return __is_class(T); }"}, {"sha": "0352a08113b1288566fef46b5d3b08738fbae49c", "filename": "gcc/testsuite/g++.dg/concepts/req10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq10.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Test that standard conversions are checked with\n // implicit conversion constraints."}, {"sha": "1a259e82990eba2083f9244b403a088e36d8d559", "filename": "gcc/testsuite/g++.dg/concepts/req11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq11.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Check that we can evaluate constant requires-expressions\n // as constant expressions, for the curious case when they"}, {"sha": "f28551443c36603e072badd6a8883f10e807e62a", "filename": "gcc/testsuite/g++.dg/concepts/req12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq12.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66218\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <type_traits>\n "}, {"sha": "559c12874093be1b2c10f8a254f8b674e06dda9b", "filename": "gcc/testsuite/g++.dg/concepts/req13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq13.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66758\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T, class...Args>\n concept bool Constructible ="}, {"sha": "de7efcd2c738d926af8d91cd1e801600fd0d99cb", "filename": "gcc/testsuite/g++.dg/concepts/req14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq14.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66758\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T, class U>\n concept bool C = requires (T t, U u) { t + u; };"}, {"sha": "537669bbcb43badbb6f58838e85b05e6b87d4b06", "filename": "gcc/testsuite/g++.dg/concepts/req15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq15.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66832\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T, class U, unsigned N>\n   requires requires (T& t, U &u) { t.foo(); u.foo(); }"}, {"sha": "2704c38bacb47fda6e4f480f9d61e842de4ab8a6", "filename": "gcc/testsuite/g++.dg/concepts/req16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq16.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66988\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <type_traits>\n "}, {"sha": "af622e2fb6d4ab3baa5117727927f940daf499cb", "filename": "gcc/testsuite/g++.dg/concepts/req17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq17.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67018\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <typename T>\n constexpr bool Val = true;"}, {"sha": "0b6848b42f25eb03d044af8206253bfe2570b0a4", "filename": "gcc/testsuite/g++.dg/concepts/req18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq18.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class> struct all_same {\n   static constexpr bool value = 1;"}, {"sha": "b1258c4508b550b28c4a677e5ceef12200976727", "filename": "gcc/testsuite/g++.dg/concepts/req2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Class () { return __is_class(T); }"}, {"sha": "5bc7ac790a34d406289e1845897399e1964a8fe0", "filename": "gcc/testsuite/g++.dg/concepts/req3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Class () { return __is_class(T); }"}, {"sha": "e7e71a47bd29c910585c6c9f068efbd9aafb066e", "filename": "gcc/testsuite/g++.dg/concepts/req4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n struct fool {\n   constexpr fool operator&&(fool) const { return {}; }"}, {"sha": "17db0dd6abcfcb8a220ff3c5aee862418a2565d5", "filename": "gcc/testsuite/g++.dg/concepts/req5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n struct fool { };\n "}, {"sha": "e8e94c02ff26a31ffdff2dffc0c6820415fa58b8", "filename": "gcc/testsuite/g++.dg/concepts/req6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n struct X { };\n int operator==(X, X) { return 0; }"}, {"sha": "ef25987a4f8a31d96e01dd09ceee9f90e4f75390", "filename": "gcc/testsuite/g++.dg/concepts/req7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq7.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <vector>\n "}, {"sha": "4adbc78978c0980ca15ccc50c5bee1c0c21cfeee", "filename": "gcc/testsuite/g++.dg/concepts/req8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq8.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n // Check that type requirements are normalized correctly.\n "}, {"sha": "5f66376fd0b31f0c7611ca40f158ea77abb8da95", "filename": "gcc/testsuite/g++.dg/concepts/req9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Freq9.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n struct S1 {};"}, {"sha": "101432feefbadd12f043fabe1b6823a269b825f8", "filename": "gcc/testsuite/g++.dg/concepts/template-parm1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "b61912c84bcd0fbe35b318ed5b19136c7888d530", "filename": "gcc/testsuite/g++.dg/concepts/template-parm10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm10.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<int N, class T>\n   concept bool P() { return true; }"}, {"sha": "1f0d91ad778b381ee6cd57810f0692f4223af4b1", "filename": "gcc/testsuite/g++.dg/concepts/template-parm11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm11.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool NameProvider()"}, {"sha": "edeeb909fcb27a680a07a12ade8fcb79e0dccdce", "filename": "gcc/testsuite/g++.dg/concepts/template-parm12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm12.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // Conceptized version of template/ttp23.C\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T> concept bool Foo = true;\n "}, {"sha": "146d1c6def15752c48e4fee3bd6a8a089ec1d8f7", "filename": "gcc/testsuite/g++.dg/concepts/template-parm2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "5fcd5a29a342ac5d08aade1f9c53aa7622e46130", "filename": "gcc/testsuite/g++.dg/concepts/template-parm3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "ac9d2af7cb8bf7f8863bb7ffc948b9eece22f312", "filename": "gcc/testsuite/g++.dg/concepts/template-parm4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "25bd916ca017a916fe0858692afcfe0d0cadc067", "filename": "gcc/testsuite/g++.dg/concepts/template-parm5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_same_as(T, int);"}, {"sha": "e70cdc0b2b0a080b55255d9312a3faba2c55800f", "filename": "gcc/testsuite/g++.dg/concepts/template-parm6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename... Ts> struct are_same;\n "}, {"sha": "3e2a2f23377c24f9f1b514deca878f3e45f8e598", "filename": "gcc/testsuite/g++.dg/concepts/template-parm7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm7.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename... Ts> struct are_same;\n "}, {"sha": "69a31bcb8e6a1170af6443806cae05bc81a4b2bd", "filename": "gcc/testsuite/g++.dg/concepts/template-parm8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm8.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "06b0f96e094eb6674b8aee610a2d2e3480fc6b4a", "filename": "gcc/testsuite/g++.dg/concepts/template-parm9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-parm9.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C() { return __is_class(T); }"}, {"sha": "c2dcc3a8c1b49189e21be6690747327552b9e578", "filename": "gcc/testsuite/g++.dg/concepts/template-template-parm1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftemplate-template-parm1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66937\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n #include <tuple>\n "}, {"sha": "7ccf087aaed89355259d828455212cad9eb3ae7a", "filename": "gcc/testsuite/g++.dg/concepts/traits1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Nothrow_assignable() { return __has_nothrow_assign(T); }"}, {"sha": "971a67bf64f93b0ac864ea1203c20acf308a4d50", "filename": "gcc/testsuite/g++.dg/concepts/traits2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ftraits2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool Nothrow_assignable() { return __has_nothrow_assign(T); }"}, {"sha": "b99016f9a8bf0ab7c6a45370d18076094765e7e1", "filename": "gcc/testsuite/g++.dg/concepts/var-concept1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n concept bool C1 = __is_class(T);"}, {"sha": "21c69dd4a430db958e47008d2c08cabf798f1e6b", "filename": "gcc/testsuite/g++.dg/concepts/var-concept2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_class(T);"}, {"sha": "d27e4fa24b7248e5df0afb98f4ad34eec5000b42", "filename": "gcc/testsuite/g++.dg/concepts/var-concept3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T>\n   concept bool C1 = __is_class(T);"}, {"sha": "1870a42dcb0e3becca2745273467f078c84c977a", "filename": "gcc/testsuite/g++.dg/concepts/var-concept4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept4.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T, typename U>\n concept bool Same = __is_same_as(T, U);"}, {"sha": "ca163321e7620e15962eb70b5155bac872ccf87f", "filename": "gcc/testsuite/g++.dg/concepts/var-concept5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept5.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template<typename T1, typename T2>\n concept bool C1 = true;"}, {"sha": "40be4f9d02f669b6181dd4f257022091f88caa5a", "filename": "gcc/testsuite/g++.dg/concepts/var-concept6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-concept6.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T>\n concept int C = true;\t\t// { dg-error \"bool\" }"}, {"sha": "7dfa2400d3cf8a4f7b510ab134b6c55d4b9f4d28", "filename": "gcc/testsuite/g++.dg/concepts/var-templ1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67117\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T>\n   requires false"}, {"sha": "dc0be75cae73782843a660f31ca76139fcedec65", "filename": "gcc/testsuite/g++.dg/concepts/var-templ2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvar-templ2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/67139\n-// { dg-options -std=c++1z }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T>\n constexpr typename T::type::value_type _v = T::type::value;"}, {"sha": "8129463ae785b739a19dff51e1cb49529042e521", "filename": "gcc/testsuite/g++.dg/concepts/variadic1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic1.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,5 +1,5 @@\n // PR c++/66712\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T, class...Args>\n concept bool _Constructible_ ="}, {"sha": "f7aa7108480fd663ebd889e9b3c4dc7d3c93b81c", "filename": "gcc/testsuite/g++.dg/concepts/variadic2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic2.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -1,4 +1,4 @@\n-// { dg-options \"-std=c++1z\" }\n+// { dg-options \"-std=c++1z -fconcepts\" }\n \n template <class T> concept bool Copyable = requires (T t) { T(t); };\n template <class T> concept bool Constructable = requires { T(); };"}, {"sha": "ed7084b771e39a34eea823fd2b308a9c6777b275", "filename": "gcc/testsuite/g++.dg/cpp0x/auto3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto3.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -17,11 +17,11 @@ struct A { };\n \n A<int> A1;\n // CWG issue 625\n-A<auto> A2 = A1;\t\t// { dg-error \"\" \"\" { target { ! c++1z } } }\n+A<auto> A2 = A1;\t\t// { dg-error \"\" \"\" { target { ! concepts } } }\n \n auto foo() { }\t\t\t// { dg-error \"auto\" \"\" { target { ! c++14 } } }\n \n-void bar(auto i)\t\t// { dg-error \"incomplete|auto\" \"\" { target { ! c++1z } } }\n+void bar(auto i)\t\t// { dg-error \"incomplete|auto\" \"\" { target { ! concepts } } }\n {\n   (void)i;\n }"}, {"sha": "9001f78fa45ee93c05cb9b4158f991129dfd859c", "filename": "gcc/testsuite/g++.dg/cpp0x/auto9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -116,8 +116,8 @@ template <auto V = 4> struct G {};\t\t// { dg-error \"auto\" }\n template <typename T> struct H { H (); ~H (); };\n H<auto> h;\t\t\t\t\t// { dg-error \"invalid|initializer\" }\n \n-void qq (auto);\t\t       // { dg-error \"auto\" \"\" { target { ! c++1z } } }\n-void qr (auto*);\t       // { dg-error \"auto\" \"\" { target { ! c++1z } } }\n+void qq (auto);\t\t       // { dg-error \"auto\" \"\" { target { ! concepts } } }\n+void qr (auto*);\t       // { dg-error \"auto\" \"\" { target { ! concepts } } }\n \n // PR c++/46145\n typedef auto autot;\t\t// { dg-error \"auto\" }"}, {"sha": "4f7d18a18c06c762d71292b00d4dab556147a981", "filename": "gcc/testsuite/lib/g++-dg.exp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B-dg.exp?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -56,6 +56,8 @@ proc g++-dg-runtest { testcases flags default-extra-flags } {\n \t    }\n \t    set option_list { }\n \t    foreach x $std_list {\n+\t\t# Handle \"concepts\" as C++1z plus Concepts TS.\n+\t\tif { $x eq \"concepts\" } then { set x \"1z -fconcepts\" }\n \t\tlappend option_list \"${std_prefix}$x\"\n \t    }\n \t} else {"}, {"sha": "5af139b55ab90a546fddb2ef240b65d0fa87e1e0", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80aac5c82043b6f3d7b2100e1f2f9abbbad97e89/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=80aac5c82043b6f3d7b2100e1f2f9abbbad97e89", "patch": "@@ -6557,6 +6557,11 @@ proc check_effective_target_c++1z { } {\n     return [check_effective_target_c++1z_only]\n }\n \n+# Check for C++ Concepts TS support, i.e. -fconcepts flag.\n+proc check_effective_target_concepts { } {\n+    return [check-flags { \"\" { } { -fconcepts } }]\n+}\n+\n # Return 1 if expensive testcases should be run.\n \n proc check_effective_target_run_expensive_tests { } {"}]}