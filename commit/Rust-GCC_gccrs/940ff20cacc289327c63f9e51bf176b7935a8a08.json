{"sha": "940ff20cacc289327c63f9e51bf176b7935a8a08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQwZmYyMGNhY2MyODkzMjdjNjNmOWU1MWJmMTc2Yjc5MzVhOGEwOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-01-06T11:58:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-01-06T11:58:36Z"}, "message": "decl.c (gnat_to_gnu_entity): Do not pack the field of the record type made for a misaligned type.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <discrete_type>: Do not\n\tpack the field of the record type made for a misaligned type.\n\nFrom-SVN: r194942", "tree": {"sha": "cf02d15bdfda08e9a1039a888fab5cbfc2c6a4be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf02d15bdfda08e9a1039a888fab5cbfc2c6a4be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/940ff20cacc289327c63f9e51bf176b7935a8a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/940ff20cacc289327c63f9e51bf176b7935a8a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/940ff20cacc289327c63f9e51bf176b7935a8a08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/940ff20cacc289327c63f9e51bf176b7935a8a08/comments", "author": null, "committer": null, "parents": [{"sha": "adf8bb4f07f6f05144db43faf21237dff80f64fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adf8bb4f07f6f05144db43faf21237dff80f64fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adf8bb4f07f6f05144db43faf21237dff80f64fb"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "1d3dcd3b0f1a253caa4e140eec45ca2ab987c2c1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff20cacc289327c63f9e51bf176b7935a8a08/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff20cacc289327c63f9e51bf176b7935a8a08/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=940ff20cacc289327c63f9e51bf176b7935a8a08", "patch": "@@ -1,3 +1,8 @@\n+2013-01-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <discrete_type>: Do not\n+\tpack the field of the record type made for a misaligned type.\n+\n 2013-01-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (annotate_value) <COMPONENT_REF>: Be prepared\n@@ -12,7 +17,7 @@\n \t* einfo.adb, atree.adb: Enlarge entities to make 63 more flags, 6 more\n \tfields.\n \n-2013-01-04  Joel Brobecker  <brobecker@adacore.com brobecker>\n+2013-01-04  Joel Brobecker  <brobecker@adacore.com>\n \n \t* gnat_ugn.texi: Fix typo.\n "}, {"sha": "f312c7d4cbea2f0c49d0d45bb833a2ddaf73c10b", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff20cacc289327c63f9e51bf176b7935a8a08/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff20cacc289327c63f9e51bf176b7935a8a08/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=940ff20cacc289327c63f9e51bf176b7935a8a08", "patch": "@@ -1887,8 +1887,10 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t}\n \n       /* If the type we are dealing with has got a smaller alignment than the\n-\t natural one, we need to wrap it up in a record type and under-align\n-\t the latter.  We reuse the padding machinery for this purpose.  */\n+\t natural one, we need to wrap it up in a record type and misalign the\n+\t latter; we reuse the padding machinery for this purpose.  Note that,\n+\t even if the record type is marked as packed because of misalignment,\n+\t we don't pack the field so as to give it the size of the type.  */\n       else if (align > 0)\n \t{\n \t  tree gnu_field_type, gnu_field;\n@@ -1918,7 +1920,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t     a bitfield.  */\n \t  gnu_field\n \t    = create_field_decl (get_identifier (\"F\"), gnu_field_type,\n-\t\t\t\t gnu_type, NULL_TREE, bitsize_zero_node, 1, 0);\n+\t\t\t\t gnu_type, TYPE_SIZE (gnu_field_type),\n+\t\t\t\t bitsize_zero_node, 0, 0);\n \n \t  finish_record_type (gnu_type, gnu_field, 2, debug_info_p);\n \t  compute_record_mode (gnu_type);"}, {"sha": "1c91f462e3727103bb779d84a087551e97c83da5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff20cacc289327c63f9e51bf176b7935a8a08/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff20cacc289327c63f9e51bf176b7935a8a08/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=940ff20cacc289327c63f9e51bf176b7935a8a08", "patch": "@@ -1,3 +1,7 @@\n+2013-01-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/alignment10.adb: New test.\n+\n 2013-01-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n \t    Mikael Morin  <mikael@gcc.gnu.org>\n "}, {"sha": "61779f1d7b4e76fb45e0be8faf615518a7ca6e83", "filename": "gcc/testsuite/gnat.dg/alignment10.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/940ff20cacc289327c63f9e51bf176b7935a8a08/gcc%2Ftestsuite%2Fgnat.dg%2Falignment10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/940ff20cacc289327c63f9e51bf176b7935a8a08/gcc%2Ftestsuite%2Fgnat.dg%2Falignment10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Falignment10.adb?ref=940ff20cacc289327c63f9e51bf176b7935a8a08", "patch": "@@ -0,0 +1,20 @@\n+-- { dg-do run }\r\n+\r\n+procedure Alignment10 is\r\n+\r\n+   type Short_T is mod 2 ** 16;\r\n+   for Short_T'Size use 16;\r\n+   for Short_T'Alignment use 1;\r\n+\r\n+   subtype Short_Sub_T is Short_T range 1000 .. 1005;\r\n+\r\n+   A : aliased Short_T := 1000;\r\n+   B : Short_Sub_T;\r\n+   for B'Address use A'Address;\r\n+   pragma Import (Ada, B);\r\n+\r\n+begin\r\n+  if B /= 1000 then\r\n+    raise Program_Error;\r\n+  end if;\r\n+end;\r"}]}