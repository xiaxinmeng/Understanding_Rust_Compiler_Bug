{"sha": "e9793dae58b5eaa6bf0a939be473f98dd83719f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3OTNkYWU1OGI1ZWFhNmJmMGE5MzliZTQ3M2Y5OGRkODM3MTlmNg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@inria.fr", "date": "2007-04-11T00:09:35Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2007-04-11T00:09:35Z"}, "message": "re PR tree-optimization/31343 (ICE in data-refs dependence testing)\n\n\tPR tree-optimization/31343\n\t* tree-chrec.h (chrec_zerop): Moved before build_polynomial_chrec.\n\t(build_polynomial_chrec): Return a scalar when the evolution is zero.\n\t* testsuite/gcc.dg/vect/pr31343.c: New.\n\nFrom-SVN: r123708", "tree": {"sha": "0fa302f4379fe52efe787effc1171e8bc6322e1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fa302f4379fe52efe787effc1171e8bc6322e1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9793dae58b5eaa6bf0a939be473f98dd83719f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9793dae58b5eaa6bf0a939be473f98dd83719f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9793dae58b5eaa6bf0a939be473f98dd83719f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9793dae58b5eaa6bf0a939be473f98dd83719f6/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0334147da1db614a99d09fe96a065b5eceae4d69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0334147da1db614a99d09fe96a065b5eceae4d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0334147da1db614a99d09fe96a065b5eceae4d69"}], "stats": {"total": 77, "additions": 58, "deletions": 19}, "files": [{"sha": "ef788643cd809e8e4b982d32a03d2c33dc83054c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9793dae58b5eaa6bf0a939be473f98dd83719f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9793dae58b5eaa6bf0a939be473f98dd83719f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9793dae58b5eaa6bf0a939be473f98dd83719f6", "patch": "@@ -1,3 +1,10 @@\n+2007-04-10  Sebastian Pop  <sebastian.pop@inria.fr>\n+\n+\tPR tree-optimization/31343\n+\t* tree-chrec.h (chrec_zerop): Moved before build_polynomial_chrec.\n+\t(build_polynomial_chrec): Return a scalar when the evolution is zero.\n+\t* testsuite/gcc.dg/vect/pr31343.c: New.\n+\n 2007-04-10  Eric Christopher  <echristo@apple.com>\n \n \t* config/i386/i386.h (X87_FLOAT_MODE_P): New."}, {"sha": "856422221cf3c3c2e79c8272c57f52f9ea41ae2f", "filename": "gcc/testsuite/gcc.dg/vect/pr31343.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9793dae58b5eaa6bf0a939be473f98dd83719f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr31343.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9793dae58b5eaa6bf0a939be473f98dd83719f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr31343.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr31343.c?ref=e9793dae58b5eaa6bf0a939be473f98dd83719f6", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+\n+#define N 16\n+ \n+struct\n+{\n+  unsigned int x;\n+  unsigned int y;\n+} pS [100];\n+\n+void\n+main1 ()\n+{\n+  int i, j;\n+  unsigned int ub[N] =\n+    { 1, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45 };\n+  unsigned int uc[N] =\n+    { 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };\n+  unsigned int udiffx, udiffy;\n+\n+  for (i = 0; i < N; i++)\n+    {\n+      pS[i].x = 0;\n+      pS[i].y = 0;\n+      for (j = 0; j < N; j++)\n+      {\n+        udiffx = (ub[j] - uc[j]);\n+        udiffy = (ub[j] - uc[j]);\n+        pS[i].x = udiffx;\n+        pS[i].y = udiffy;\n+      }\n+    }\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "95c6f384ddecd2d3d41be388cdb0d01f8a9ce06b", "filename": "gcc/tree-chrec.h", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9793dae58b5eaa6bf0a939be473f98dd83719f6/gcc%2Ftree-chrec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9793dae58b5eaa6bf0a939be473f98dd83719f6/gcc%2Ftree-chrec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.h?ref=e9793dae58b5eaa6bf0a939be473f98dd83719f6", "patch": "@@ -84,7 +84,19 @@ extern bool evolution_function_is_affine_multivariate_p (tree);\n extern bool evolution_function_is_univariate_p (tree);\n extern unsigned nb_vars_in_chrec (tree);\n \n-\f\n+/* Determines whether CHREC is equal to zero.  */\n+\n+static inline bool \n+chrec_zerop (tree chrec)\n+{\n+  if (chrec == NULL_TREE)\n+    return false;\n+  \n+  if (TREE_CODE (chrec) == INTEGER_CST)\n+    return integer_zerop (chrec);\n+  \n+  return false;\n+}\n \n /* Build a polynomial chain of recurrence.  */\n \n@@ -99,28 +111,13 @@ build_polynomial_chrec (unsigned loop_num,\n \n   gcc_assert (TREE_TYPE (left) == TREE_TYPE (right));\n \n+  if (chrec_zerop (right))\n+    return left;\n+\n   return build3 (POLYNOMIAL_CHREC, TREE_TYPE (left), \n \t\t build_int_cst (NULL_TREE, loop_num), left, right);\n }\n \n-\f\n-\n-/* Observers.  */\n-\n-/* Determines whether CHREC is equal to zero.  */\n-\n-static inline bool \n-chrec_zerop (tree chrec)\n-{\n-  if (chrec == NULL_TREE)\n-    return false;\n-  \n-  if (TREE_CODE (chrec) == INTEGER_CST)\n-    return integer_zerop (chrec);\n-  \n-  return false;\n-}\n-\n /* Determines whether the expression CHREC is a constant.  */\n \n static inline bool "}]}