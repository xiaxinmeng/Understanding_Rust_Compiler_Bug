{"sha": "700119230a53a83eb787a235d1361e0188526d8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAwMTE5MjMwYTUzYTgzZWI3ODdhMjM1ZDEzNjFlMDE4ODUyNmQ4Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-05-14T20:37:56Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-05-14T20:37:56Z"}, "message": "Don't leave new_thread hanging if it was split by try_split\n\nFrom-SVN: r4458", "tree": {"sha": "1ce9ec4a464e2ac2e322abe6d66285d977c7567d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ce9ec4a464e2ac2e322abe6d66285d977c7567d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/700119230a53a83eb787a235d1361e0188526d8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/700119230a53a83eb787a235d1361e0188526d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/700119230a53a83eb787a235d1361e0188526d8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/700119230a53a83eb787a235d1361e0188526d8b/comments", "author": null, "committer": null, "parents": [{"sha": "b4bf13a89e99e8bd7fa60c9813003467db60d365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4bf13a89e99e8bd7fa60c9813003467db60d365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4bf13a89e99e8bd7fa60c9813003467db60d365"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "3c6291814c046a6b88499b5080bc9eb49b7e252c", "filename": "gcc/reorg.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/700119230a53a83eb787a235d1361e0188526d8b/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/700119230a53a83eb787a235d1361e0188526d8b/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=700119230a53a83eb787a235d1361e0188526d8b", "patch": "@@ -3095,7 +3095,7 @@ fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,\n        ! stop_search_p (trial, ! thread_if_true) && (! lose || own_thread);\n        trial = next_nonnote_insn (trial))\n     {\n-      rtx pat;\n+      rtx pat, old_trial;\n \n       /* If we have passed a label, we no longer own this thread.  */\n       if (GET_CODE (trial) == CODE_LABEL)\n@@ -3142,7 +3142,10 @@ fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,\n \t      || (! insn_sets_resource_p (trial, &opposite_needed, 1)\n \t\t  && ! may_trap_p (pat)))\n \t    {\n+\t      old_trial = trial;\n \t      trial = try_split (pat, trial, 0);\n+\t      if (new_thread == old_trial)\n+\t\tnew_thread = trial;\n \t      pat = PATTERN (trial);\n \t      if (eligible_for_delay (insn, *pslots_filled, trial, flags))\n \t\tgoto winner;\n@@ -3156,7 +3159,10 @@ fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,\n #endif\n \t\t   )\n \t    {\n+\t      old_trial = trial;\n \t      trial = try_split (pat, trial, 0);\n+\t      if (new_thread == old_trial)\n+\t\tnew_thread = trial;\n \t      pat = PATTERN (trial);\n \t      if ((thread_if_true\n \t\t   ? eligible_for_annul_false (insn, *pslots_filled, trial, flags)"}]}