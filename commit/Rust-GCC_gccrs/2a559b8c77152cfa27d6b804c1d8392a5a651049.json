{"sha": "2a559b8c77152cfa27d6b804c1d8392a5a651049", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE1NTliOGM3NzE1MmNmYTI3ZDZiODA0YzFkODM5MmE1YTY1MTA0OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-06-06T13:33:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-06-06T13:33:08Z"}, "message": "ix86_expand_call: convert return type to rtx_insn *\n\nEliminate an \"as_a <rtx_insn *>()\" cast.\n\ngcc/ChangeLog:\n\t* config/i386/i386-protos.h (ix86_expand_call): Strengthen return\n\ttype from \"rtx\" to \"rtx_insn *\".\n\t* config/i386/i386.c (ix86_expand_split_stack_prologue): Likewise\n\tfor local \"call_insn\", removing cast.\n\t(ix86_expand_call): Likewise, introducing a \"call_insn\" local.\n\nFrom-SVN: r261233", "tree": {"sha": "2abd0370867ba79cb7018333ea2e1554629ff60e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2abd0370867ba79cb7018333ea2e1554629ff60e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a559b8c77152cfa27d6b804c1d8392a5a651049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a559b8c77152cfa27d6b804c1d8392a5a651049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a559b8c77152cfa27d6b804c1d8392a5a651049", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a559b8c77152cfa27d6b804c1d8392a5a651049/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31a5d8c53883cd6ed31cd9d3320a5e0185a214b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a5d8c53883cd6ed31cd9d3320a5e0185a214b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a5d8c53883cd6ed31cd9d3320a5e0185a214b8"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "2374b9e94a7033a919ec612f4fab58ce8a4afe97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a559b8c77152cfa27d6b804c1d8392a5a651049/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a559b8c77152cfa27d6b804c1d8392a5a651049/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a559b8c77152cfa27d6b804c1d8392a5a651049", "patch": "@@ -1,3 +1,11 @@\n+2018-06-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* config/i386/i386-protos.h (ix86_expand_call): Strengthen return\n+\ttype from \"rtx\" to \"rtx_insn *\".\n+\t* config/i386/i386.c (ix86_expand_split_stack_prologue): Likewise\n+\tfor local \"call_insn\", removing cast.\n+\t(ix86_expand_call): Likewise, introducing a \"call_insn\" local.\n+\n 2018-06-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR tree-optimization/86066"}, {"sha": "02991a55509f638edefc4c8aec5ba0671479dda0", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a559b8c77152cfa27d6b804c1d8392a5a651049/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a559b8c77152cfa27d6b804c1d8392a5a651049/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=2a559b8c77152cfa27d6b804c1d8392a5a651049", "patch": "@@ -139,7 +139,7 @@ extern bool ix86_expand_fp_vec_cmp (rtx[]);\n extern void ix86_expand_sse_movcc (rtx, rtx, rtx, rtx);\n extern void ix86_expand_sse_unpack (rtx, rtx, bool, bool);\n extern bool ix86_expand_int_addcc (rtx[]);\n-extern rtx ix86_expand_call (rtx, rtx, rtx, rtx, rtx, bool);\n+extern rtx_insn *ix86_expand_call (rtx, rtx, rtx, rtx, rtx, bool);\n extern void ix86_split_call_vzeroupper (rtx, rtx);\n extern void x86_initialize_trampoline (rtx, rtx, rtx);\n extern rtx ix86_zero_extend_to_Pmode (rtx);"}, {"sha": "9568d25fbd4b95f109e548c230d3d61149d482d8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a559b8c77152cfa27d6b804c1d8392a5a651049/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a559b8c77152cfa27d6b804c1d8392a5a651049/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2a559b8c77152cfa27d6b804c1d8392a5a651049", "patch": "@@ -15064,7 +15064,8 @@ ix86_expand_split_stack_prologue (void)\n   HOST_WIDE_INT allocate;\n   unsigned HOST_WIDE_INT args_size;\n   rtx_code_label *label;\n-  rtx limit, current, allocate_rtx, call_insn, call_fusage;\n+  rtx limit, current, allocate_rtx, call_fusage;\n+  rtx_insn *call_insn;\n   rtx scratch_reg = NULL_RTX;\n   rtx_code_label *varargs_label = NULL;\n   rtx fn;\n@@ -15234,7 +15235,7 @@ ix86_expand_split_stack_prologue (void)\n   if (!TARGET_64BIT)\n     add_reg_note (call_insn, REG_ARGS_SIZE, GEN_INT (0));\n   /* Indicate that this function can't jump to non-local gotos.  */\n-  make_reg_eh_region_note_nothrow_nononlocal (as_a <rtx_insn *> (call_insn));\n+  make_reg_eh_region_note_nothrow_nononlocal (call_insn);\n \n   /* In order to make call/return prediction work right, we now need\n      to execute a return instruction.  See\n@@ -28466,7 +28467,7 @@ construct_plt_address (rtx symbol)\n   return tmp;\n }\n \n-rtx\n+rtx_insn *\n ix86_expand_call (rtx retval, rtx fnaddr, rtx callarg1,\n \t\t  rtx callarg2,\n \t\t  rtx pop, bool sibcall)\n@@ -28681,11 +28682,11 @@ ix86_expand_call (rtx retval, rtx fnaddr, rtx callarg1,\n \n   if (vec_len > 1)\n     call = gen_rtx_PARALLEL (VOIDmode, gen_rtvec_v (vec_len, vec));\n-  call = emit_call_insn (call);\n+  rtx_insn *call_insn = emit_call_insn (call);\n   if (use)\n-    CALL_INSN_FUNCTION_USAGE (call) = use;\n+    CALL_INSN_FUNCTION_USAGE (call_insn) = use;\n \n-  return call;\n+  return call_insn;\n }\n \n /* Return true if the function being called was marked with attribute"}]}