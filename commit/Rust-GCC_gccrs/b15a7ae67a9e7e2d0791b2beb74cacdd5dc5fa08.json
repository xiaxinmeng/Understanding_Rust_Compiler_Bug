{"sha": "b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1YTdhZTY3YTllN2UyZDA3OTFiMmJlYjc0Y2FjZGQ1ZGM1ZmEwOA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2008-09-26T00:14:30Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2008-09-26T00:14:30Z"}, "message": "re PR middle-end/37448 (cannot compile big function)\n\n2008-09-25  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/37448\n\t\n\t* ira-int.h (IRA_ALLOCNO_TEMP): Rename to ALLOCNO_TEMP.\n\t(ira_compress_allocno_live_ranges): New prototype.\n\n\t* ira-color.c: Rename IRA_ALLOCNO_TEMP to ALLOCNO_TEMP.\n\t(coalesced_allocnos_living_at_program_points): New.\n\t(coalesced_allocnos_live_at_points_p,\n\tset_coalesced_allocnos_live_points): New functions.\n\t(coalesce_spill_slots): Rewrite.\n\t\n\t* ira-lives.c (remove_some_program_points_and_update_live_ranges,\n\tira_compress_allocno_live_ranges): New functions.\n\n\t* ira-build.c (ira_flattening): Call\n\tira_compress_allocno_live_ranges.\n\t(ira_build): Ditto.\n\nFrom-SVN: r140674", "tree": {"sha": "2741e87ab5d7829e6e4d8233ab8d254ba88a0f4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2741e87ab5d7829e6e4d8233ab8d254ba88a0f4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6396547e62404f1a4965a61dd5c87258cda2be2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6396547e62404f1a4965a61dd5c87258cda2be2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6396547e62404f1a4965a61dd5c87258cda2be2c"}], "stats": {"total": 181, "additions": 166, "deletions": 15}, "files": [{"sha": "fa2f0ccd52be5f52610c6de412e06a0bf1457b98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "patch": "@@ -1,3 +1,23 @@\n+2008-09-25  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/37448\n+\t\n+\t* ira-int.h (IRA_ALLOCNO_TEMP): Rename to ALLOCNO_TEMP.\n+\t(ira_compress_allocno_live_ranges): New prototype.\n+\n+\t* ira-color.c: Rename IRA_ALLOCNO_TEMP to ALLOCNO_TEMP.\n+\t(coalesced_allocnos_living_at_program_points): New.\n+\t(coalesced_allocnos_live_at_points_p,\n+\tset_coalesced_allocnos_live_points): New functions.\n+\t(coalesce_spill_slots): Rewrite.\n+\t\n+\t* ira-lives.c (remove_some_program_points_and_update_live_ranges,\n+\tira_compress_allocno_live_ranges): New functions.\n+\n+\t* ira-build.c (ira_flattening): Call\n+\tira_compress_allocno_live_ranges.\n+\t(ira_build): Ditto.\n+\n 2008-09-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.md: Check cmp/branch fuse for cmp peephole"}, {"sha": "55a3beb71bde67e68bc4bffd7740e59b381f2e06", "filename": "gcc/ira-build.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2Fira-build.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2Fira-build.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-build.c?ref=b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "patch": "@@ -2371,6 +2371,8 @@ ira_flattening (int max_regno_before_emit, int ira_max_point_before_emit)\n       ira_swap_allocno_copy_ends_if_necessary (cp);\n     }\n   rebuild_regno_allocno_maps ();\n+  if (ira_max_point != ira_max_point_before_emit)\n+    ira_compress_allocno_live_ranges ();\n   ira_free (regno_top_level_allocno_map);\n }\n \n@@ -2427,6 +2429,7 @@ ira_build (bool loops_p)\n   ira_costs ();\n   ira_create_allocno_live_ranges ();\n   remove_unnecessary_regions ();\n+  ira_compress_allocno_live_ranges ();\n   loops_p = more_one_region_p ();\n   if (loops_p)\n     {"}, {"sha": "c972ba942a25e72788ee3b5bb3bd8a0c7994f60e", "filename": "gcc/ira-color.c", "status": "modified", "additions": 82, "deletions": 14, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "patch": "@@ -993,17 +993,17 @@ allocno_spill_priority_compare (splay_tree_key k1, splay_tree_key k2)\n   int pri1, pri2, diff;\n   ira_allocno_t a1 = (ira_allocno_t) k1, a2 = (ira_allocno_t) k2;\n   \n-  pri1 = (IRA_ALLOCNO_TEMP (a1)\n+  pri1 = (ALLOCNO_TEMP (a1)\n \t  / (ALLOCNO_LEFT_CONFLICTS_NUM (a1)\n \t     * ira_reg_class_nregs[ALLOCNO_COVER_CLASS (a1)][ALLOCNO_MODE (a1)]\n \t     + 1));\n-  pri2 = (IRA_ALLOCNO_TEMP (a2)\n+  pri2 = (ALLOCNO_TEMP (a2)\n \t  / (ALLOCNO_LEFT_CONFLICTS_NUM (a2)\n \t     * ira_reg_class_nregs[ALLOCNO_COVER_CLASS (a2)][ALLOCNO_MODE (a2)]\n \t     + 1));\n   if ((diff = pri1 - pri2) != 0)\n     return diff;\n-  if ((diff = IRA_ALLOCNO_TEMP (a1) - IRA_ALLOCNO_TEMP (a2)) != 0)\n+  if ((diff = ALLOCNO_TEMP (a1) - ALLOCNO_TEMP (a2)) != 0)\n     return diff;\n   return ALLOCNO_NUM (a1) - ALLOCNO_NUM (a2);\n }\n@@ -1078,7 +1078,7 @@ push_allocnos_to_stack (void)\n \t  }\n \t/* ??? Remove cost of copies between the coalesced\n \t   allocnos.  */\n-\tIRA_ALLOCNO_TEMP (allocno) = cost;\n+\tALLOCNO_TEMP (allocno) = cost;\n       }\n   /* Define place where to put uncolorable allocnos of the same cover\n      class.  */\n@@ -1170,7 +1170,7 @@ push_allocnos_to_stack (void)\n \t      if (ALLOCNO_IN_GRAPH_P (i_allocno))\n \t\t{\n \t\t  i++;\n-\t\t  if (IRA_ALLOCNO_TEMP (i_allocno) == INT_MAX)\n+\t\t  if (ALLOCNO_TEMP (i_allocno) == INT_MAX)\n \t\t    {\n \t\t      ira_allocno_t a;\n \t\t      int cost = 0;\n@@ -1184,9 +1184,9 @@ push_allocnos_to_stack (void)\n \t\t\t}\n \t\t      /* ??? Remove cost of copies between the coalesced\n \t\t\t allocnos.  */\n-\t\t      IRA_ALLOCNO_TEMP (i_allocno) = cost;\n+\t\t      ALLOCNO_TEMP (i_allocno) = cost;\n \t\t    }\n-\t\t  i_allocno_cost = IRA_ALLOCNO_TEMP (i_allocno);\n+\t\t  i_allocno_cost = ALLOCNO_TEMP (i_allocno);\n \t\t  i_allocno_pri\n \t\t    = (i_allocno_cost\n \t\t       / (ALLOCNO_LEFT_CONFLICTS_NUM (i_allocno)\n@@ -2316,6 +2316,53 @@ collect_spilled_coalesced_allocnos (int *pseudo_regnos, int n,\n   return num;\n }\n \n+/* Array of bitmaps of size IRA_MAX_POINT.  Bitmap for given point\n+   contains numbers of coalesced allocnos living at this point.  */\n+static regset_head *coalesced_allocnos_living_at_program_points;\n+\n+/* Return TRUE if coalesced allocnos represented by ALLOCNO live at\n+   program points of coalesced allocnos with number N.  */\n+static bool\n+coalesced_allocnos_live_at_points_p (ira_allocno_t allocno, int n)\n+{\n+  int i;\n+  ira_allocno_t a;\n+  allocno_live_range_t r;\n+\n+  for (a = ALLOCNO_NEXT_COALESCED_ALLOCNO (allocno);;\n+       a = ALLOCNO_NEXT_COALESCED_ALLOCNO (a))\n+    {\n+      for (r = ALLOCNO_LIVE_RANGES (a); r != NULL; r = r->next)\n+\tfor (i = r->start; i <= r->finish; i++)\n+\t  if (bitmap_bit_p (&coalesced_allocnos_living_at_program_points[i], n))\n+\t      return true;\n+      if (a == allocno)\n+\tbreak;\n+    }\n+  return false;\n+}\n+\n+/* Mark program points where coalesced allocnos represented by ALLOCNO\n+   live.  */\n+static void\n+set_coalesced_allocnos_live_points (ira_allocno_t allocno)\n+{\n+  int i, n;\n+  ira_allocno_t a;\n+  allocno_live_range_t r;\n+\n+  n = ALLOCNO_TEMP (allocno);\n+  for (a = ALLOCNO_NEXT_COALESCED_ALLOCNO (allocno);;\n+       a = ALLOCNO_NEXT_COALESCED_ALLOCNO (a))\n+    {\n+      for (r = ALLOCNO_LIVE_RANGES (a); r != NULL; r = r->next)\n+\tfor (i = r->start; i <= r->finish; i++)\n+\t  bitmap_set_bit (&coalesced_allocnos_living_at_program_points[i], n);\n+      if (a == allocno)\n+\tbreak;\n+    }\n+}\n+\n /* We have coalesced allocnos involving in copies.  Coalesce allocnos\n    further in order to share the same memory stack slot.  Allocnos\n    representing sets of allocnos coalesced before the call are given\n@@ -2324,10 +2371,15 @@ collect_spilled_coalesced_allocnos (int *pseudo_regnos, int n,\n static bool\n coalesce_spill_slots (ira_allocno_t *spilled_coalesced_allocnos, int num)\n {\n-  int i, j;\n+  int i, j, last_coalesced_allocno_num;\n   ira_allocno_t allocno, a;\n   bool merged_p = false;\n \n+  coalesced_allocnos_living_at_program_points\n+    = (regset_head *) ira_allocate (sizeof (regset_head) * ira_max_point);\n+  for (i = 0; i < ira_max_point; i++)\n+    INIT_REG_SET (&coalesced_allocnos_living_at_program_points[i]);\n+  last_coalesced_allocno_num = 0;\n   /* Coalesce non-conflicting spilled allocnos preferring most\n      frequently used.  */\n   for (i = 0; i < num; i++)\n@@ -2341,23 +2393,39 @@ coalesce_spill_slots (ira_allocno_t *spilled_coalesced_allocnos, int num)\n       for (j = 0; j < i; j++)\n \t{\n \t  a = spilled_coalesced_allocnos[j];\n-\t  if (ALLOCNO_FIRST_COALESCED_ALLOCNO (a) != a\n-\t      || (ALLOCNO_REGNO (a) < ira_reg_equiv_len\n-\t\t  && (ira_reg_equiv_invariant_p[ALLOCNO_REGNO (a)]\n-\t\t      || ira_reg_equiv_const[ALLOCNO_REGNO (a)] != NULL_RTX))\n-\t      || coalesced_allocno_conflict_p (allocno, a, true))\n-\t    continue;\n+\t  if (ALLOCNO_FIRST_COALESCED_ALLOCNO (a) == a\n+\t      && (ALLOCNO_REGNO (a) >= ira_reg_equiv_len\n+\t\t  || (! ira_reg_equiv_invariant_p[ALLOCNO_REGNO (a)]\n+\t\t      && ira_reg_equiv_const[ALLOCNO_REGNO (a)] == NULL_RTX))\n+\t      && ! coalesced_allocnos_live_at_points_p (allocno,\n+\t\t\t\t\t\t\tALLOCNO_TEMP (a)))\n+\t    break;\n+\t}\n+      if (j >= i)\n+\t{\n+\t  /* No coalescing: set up number for coalesced allocnos\n+\t     represented by ALLOCNO.  */\n+\t  ALLOCNO_TEMP (allocno) = last_coalesced_allocno_num++;\n+\t  set_coalesced_allocnos_live_points (allocno);\n+\t}\n+      else\n+\t{\n \t  allocno_coalesced_p = true;\n \t  merged_p = true;\n \t  if (internal_flag_ira_verbose > 3 && ira_dump_file != NULL)\n \t    fprintf (ira_dump_file,\n \t\t     \"      Coalescing spilled allocnos a%dr%d->a%dr%d\\n\",\n \t\t     ALLOCNO_NUM (allocno), ALLOCNO_REGNO (allocno),\n \t\t     ALLOCNO_NUM (a), ALLOCNO_REGNO (a));\n+\t  ALLOCNO_TEMP (allocno) = ALLOCNO_TEMP (a);\n+\t  set_coalesced_allocnos_live_points (allocno);\n \t  merge_allocnos (a, allocno);\n \t  ira_assert (ALLOCNO_FIRST_COALESCED_ALLOCNO (a) == a);\n \t}\n     }\n+  for (i = 0; i < ira_max_point; i++)\n+    CLEAR_REG_SET (&coalesced_allocnos_living_at_program_points[i]);\n+  ira_free (coalesced_allocnos_living_at_program_points);\n   return merged_p;\n }\n "}, {"sha": "fc18cdf9a0db386b6d6ec3f0eae94837115df038", "filename": "gcc/ira-int.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2Fira-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2Fira-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-int.h?ref=b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "patch": "@@ -457,7 +457,7 @@ struct ira_allocno\n #define ALLOCNO_AVAILABLE_REGS_NUM(A) ((A)->available_regs_num)\n #define ALLOCNO_NEXT_BUCKET_ALLOCNO(A) ((A)->next_bucket_allocno)\n #define ALLOCNO_PREV_BUCKET_ALLOCNO(A) ((A)->prev_bucket_allocno)\n-#define IRA_ALLOCNO_TEMP(A) ((A)->temp)\n+#define ALLOCNO_TEMP(A) ((A)->temp)\n #define ALLOCNO_FIRST_COALESCED_ALLOCNO(A) ((A)->first_coalesced_allocno)\n #define ALLOCNO_NEXT_COALESCED_ALLOCNO(A) ((A)->next_coalesced_allocno)\n #define ALLOCNO_LIVE_RANGES(A) ((A)->live_ranges)\n@@ -882,6 +882,7 @@ extern void ira_debug_live_range_list (allocno_live_range_t);\n extern void ira_debug_allocno_live_ranges (ira_allocno_t);\n extern void ira_debug_live_ranges (void);\n extern void ira_create_allocno_live_ranges (void);\n+extern void ira_compress_allocno_live_ranges (void);\n extern void ira_finish_allocno_live_ranges (void);\n \n /* ira-conflicts.c */"}, {"sha": "609708e9069546c7e7abaaa2aa8641e083cc678d", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=b15a7ae67a9e7e2d0791b2beb74cacdd5dc5fa08", "patch": "@@ -843,6 +843,52 @@ ira_rebuild_start_finish_chains (void)\n   create_start_finish_chains ();\n }\n \n+/* Compress allocno live ranges by removing program points where\n+   nothing happens.  */\n+static void\n+remove_some_program_points_and_update_live_ranges (void)\n+{\n+  unsigned i;\n+  int n;\n+  int *map;\n+  ira_allocno_t a;\n+  ira_allocno_iterator ai;\n+  allocno_live_range_t r;\n+  bitmap born_or_died;\n+  bitmap_iterator bi;\n+  \n+  born_or_died = ira_allocate_bitmap ();\n+  FOR_EACH_ALLOCNO (a, ai)\n+    {\n+      for (r = ALLOCNO_LIVE_RANGES (a); r != NULL; r = r->next)\n+\t{\n+\t  ira_assert (r->start <= r->finish);\n+\t  bitmap_set_bit (born_or_died, r->start);\n+\t  bitmap_set_bit (born_or_died, r->finish);\n+\t}\n+    }\n+  map = (int *) ira_allocate (sizeof (int) * ira_max_point);\n+  n = 0;\n+  EXECUTE_IF_SET_IN_BITMAP(born_or_died, 0, i, bi)\n+    {\n+      map[i] = n++;\n+    }\n+  ira_free_bitmap (born_or_died);\n+  if (internal_flag_ira_verbose > 1 && ira_dump_file != NULL)\n+    fprintf (ira_dump_file, \"Compressing live ranges: from %d to %d - %d%%\\n\",\n+\t     ira_max_point, n, 100 * n / ira_max_point);\n+  ira_max_point = n;\n+  FOR_EACH_ALLOCNO (a, ai)\n+    {\n+      for (r = ALLOCNO_LIVE_RANGES (a); r != NULL; r = r->next)\n+\t{\n+\t  r->start = map[r->start];\n+\t  r->finish = map[r->finish];\n+\t}\n+    }\n+  ira_free (map);\n+}\n+\n /* Print live ranges R to file F.  */\n void\n ira_print_live_range_list (FILE *f, allocno_live_range_t r)\n@@ -910,6 +956,19 @@ ira_create_allocno_live_ranges (void)\n   sparseset_free (allocnos_live);\n }\n \n+/* Compress allocno live ranges.  */\n+void\n+ira_compress_allocno_live_ranges (void)\n+{\n+  remove_some_program_points_and_update_live_ranges ();\n+  ira_rebuild_start_finish_chains ();\n+  if (internal_flag_ira_verbose > 2 && ira_dump_file != NULL)\n+    {\n+      fprintf (ira_dump_file, \"Ranges after the compression:\\n\");\n+      print_live_ranges (ira_dump_file);\n+    }\n+}\n+\n /* Free arrays IRA_START_POINT_RANGES and IRA_FINISH_POINT_RANGES.  */\n void\n ira_finish_allocno_live_ranges (void)"}]}