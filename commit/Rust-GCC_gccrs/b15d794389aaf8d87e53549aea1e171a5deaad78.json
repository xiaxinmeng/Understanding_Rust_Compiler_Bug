{"sha": "b15d794389aaf8d87e53549aea1e171a5deaad78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE1ZDc5NDM4OWFhZjhkODdlNTM1NDlhZWExZTE3MWE1ZGVhYWQ3OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-09-17T22:11:43Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-09-17T22:11:43Z"}, "message": "reflect: Fix bug calling method on indirect value.\n\nThe gccgo-specific iword function was checking v.kind, but for\na method value that is always Func.  Fix to check v.typ.Kind()\ninstead.\n\nFrom-SVN: r202670", "tree": {"sha": "6990912d681eeeada6a993bf6923d62a5add528d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6990912d681eeeada6a993bf6923d62a5add528d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b15d794389aaf8d87e53549aea1e171a5deaad78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15d794389aaf8d87e53549aea1e171a5deaad78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15d794389aaf8d87e53549aea1e171a5deaad78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15d794389aaf8d87e53549aea1e171a5deaad78/comments", "author": null, "committer": null, "parents": [{"sha": "09d5094b2d48192f5e4cc7be9b123289c41a8f65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d5094b2d48192f5e4cc7be9b123289c41a8f65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09d5094b2d48192f5e4cc7be9b123289c41a8f65"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "69a87031e56683e23415c87b7398abaec6a153cb", "filename": "libgo/go/reflect/value.go", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b15d794389aaf8d87e53549aea1e171a5deaad78/libgo%2Fgo%2Freflect%2Fvalue.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b15d794389aaf8d87e53549aea1e171a5deaad78/libgo%2Fgo%2Freflect%2Fvalue.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fvalue.go?ref=b15d794389aaf8d87e53549aea1e171a5deaad78", "patch": "@@ -611,7 +611,13 @@ func methodReceiver(op string, v Value, methodIndex int) (t *rtype, fn unsafe.Po\n \t\t}\n \t\tfn = unsafe.Pointer(&m.tfn)\n \t\tt = m.mtyp\n-\t\trcvr = v.iword()\n+\t\t// Can't call iword here, because it checks v.kind,\n+\t\t// and that is always Func.\n+\t\tif v.flag&flagIndir != 0 && (v.typ.Kind() == Ptr || v.typ.Kind() == UnsafePointer) {\n+\t\t\trcvr = loadIword(v.val, v.typ.size)\n+\t\t} else {\n+\t\t\trcvr = iword(v.val)\n+\t\t}\n \t}\n \treturn\n }"}]}