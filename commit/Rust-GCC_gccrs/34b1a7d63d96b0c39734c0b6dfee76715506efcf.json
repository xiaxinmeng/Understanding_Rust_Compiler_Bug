{"sha": "34b1a7d63d96b0c39734c0b6dfee76715506efcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRiMWE3ZDYzZDk2YjBjMzk3MzRjMGI2ZGZlZTc2NzE1NTA2ZWZjZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-12-06T08:23:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-12-06T08:23:04Z"}, "message": "decl2.c (grokbitfield): Use DECL_SOURCE_LOCATION in error message...\n\n/cp\n2018-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl2.c (grokbitfield): Use DECL_SOURCE_LOCATION in error message;\n\tprint the type too; fix thinko in INDIRECT_TYPE_P use.\n\n/testsuite\n2018-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/parse/bitfield6b.C: New.\n\t* g++.dg/parse/bitfield3.C: Test location and type.\n\nFrom-SVN: r266841", "tree": {"sha": "e897985b35ad8beaf0811b3b69770ec8701b81f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e897985b35ad8beaf0811b3b69770ec8701b81f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34b1a7d63d96b0c39734c0b6dfee76715506efcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b1a7d63d96b0c39734c0b6dfee76715506efcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34b1a7d63d96b0c39734c0b6dfee76715506efcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b1a7d63d96b0c39734c0b6dfee76715506efcf/comments", "author": null, "committer": null, "parents": [{"sha": "bd38d0da47c238e6660a3d1d8461083abfe23aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd38d0da47c238e6660a3d1d8461083abfe23aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd38d0da47c238e6660a3d1d8461083abfe23aa2"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "704e01defcfdec897092451874288257da4e4afc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=34b1a7d63d96b0c39734c0b6dfee76715506efcf", "patch": "@@ -1,3 +1,8 @@\n+2018-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl2.c (grokbitfield): Use DECL_SOURCE_LOCATION in error message;\n+\tprint the type too; fix thinko in INDIRECT_TYPE_P use.\n+\n 2018-12-05  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR c++/85569"}, {"sha": "79abdaebe861b9006e566e2bfecf0b41813cae77", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=34b1a7d63d96b0c39734c0b6dfee76715506efcf", "patch": "@@ -1016,18 +1016,21 @@ grokbitfield (const cp_declarator *declarator,\n \n   if (value == error_mark_node)\n     return NULL_TREE; /* friends went bad.  */\n-  if (TREE_TYPE (value) == error_mark_node)\n+\n+  tree type = TREE_TYPE (value);\n+  if (type == error_mark_node)\n     return value;\n \n   /* Pass friendly classes back.  */\n   if (VOID_TYPE_P (value))\n     return void_type_node;\n \n-  if (!INTEGRAL_OR_ENUMERATION_TYPE_P (TREE_TYPE (value))\n-      && (INDIRECT_TYPE_P (value)\n-          || !dependent_type_p (TREE_TYPE (value))))\n+  if (!INTEGRAL_OR_ENUMERATION_TYPE_P (type)\n+      && (INDIRECT_TYPE_P (type) || !dependent_type_p (type)))\n     {\n-      error (\"bit-field %qD with non-integral type\", value);\n+      error_at (DECL_SOURCE_LOCATION (value),\n+\t\t\"bit-field %qD with non-integral type %qT\",\n+\t\tvalue, type);\n       return error_mark_node;\n     }\n \n@@ -1048,7 +1051,7 @@ grokbitfield (const cp_declarator *declarator,\n       return NULL_TREE;\n     }\n \n-  if (width && TYPE_WARN_IF_NOT_ALIGN (TREE_TYPE (value)))\n+  if (width && TYPE_WARN_IF_NOT_ALIGN (type))\n     {\n       error (\"cannot declare bit-field %qD with %<warn_if_not_aligned%> type\",\n \t     DECL_NAME (value));"}, {"sha": "922cc52a0a75082dc7b564606623089970d77524", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=34b1a7d63d96b0c39734c0b6dfee76715506efcf", "patch": "@@ -1,3 +1,8 @@\n+2018-12-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/parse/bitfield6b.C: New.\n+\t* g++.dg/parse/bitfield3.C: Test location and type.\n+\n 2018-12-06  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* lib/c-compat.exp (compat-use-alt-compiler):"}, {"sha": "efff2ec993e1180506e40ee2a8b07611a77037d4", "filename": "gcc/testsuite/g++.dg/parse/bitfield3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield3.C?ref=34b1a7d63d96b0c39734c0b6dfee76715506efcf", "patch": "@@ -5,5 +5,5 @@ typedef void (func_type)();\n \n struct A\n {\n-  friend func_type f : 2; /* { dg-error \"with non-integral type\" } */\n+  friend func_type f : 2; /* { dg-error \"20:bit-field .void f\\\\(\\\\). with non-integral type .func_type.\" } */\n };"}, {"sha": "1cd99a5996e3027115db1fbb60027b15bdff8440", "filename": "gcc/testsuite/g++.dg/parse/bitfield6b.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield6b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34b1a7d63d96b0c39734c0b6dfee76715506efcf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield6b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield6b.C?ref=34b1a7d63d96b0c39734c0b6dfee76715506efcf", "patch": "@@ -0,0 +1,4 @@\n+typedef void a();\n+struct A {\n+a a1: 1;  // { dg-error \"3:bit-field .void A::a1\\\\(\\\\). with non-integral type .void \\\\(A::\\\\)\\\\(\\\\).\" }\n+};"}]}