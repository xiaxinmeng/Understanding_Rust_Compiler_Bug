{"sha": "c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRlN2UxYjlmNzRiYjY2ODhiYzllOWYzNDU0YmM0NWI4OTBkNGE5ZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-11-08T08:50:49Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-11-08T08:50:49Z"}, "message": "Change wording of __builtin_expect_with_probability errors.\n\n2018-11-08  Martin Liska  <mliska@suse.cz>\n\n\t* doc/extend.texi: Reword.\n\t* predict.c (expr_expected_value_1): Likewise.\n2018-11-08  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/pr87811.c: Update scanned pattern.\n\t* gcc.dg/pr87811-2.c: Likewise.\n\nFrom-SVN: r265911", "tree": {"sha": "69556025951066d57b438778d4ad80bf74df567f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69556025951066d57b438778d4ad80bf74df567f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1f5b884c8d7a3360e0c46a9cb3c383af1d7b883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f5b884c8d7a3360e0c46a9cb3c383af1d7b883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1f5b884c8d7a3360e0c46a9cb3c383af1d7b883"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "145195c21bcd1e2029906e363a35ddb949407eb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "patch": "@@ -1,3 +1,8 @@\n+2018-11-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/extend.texi: Reword.\n+\t* predict.c (expr_expected_value_1): Likewise.\n+\n 2018-11-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87913"}, {"sha": "dc8fc6e2c4acf473c9b61984f59b72e3b03d16c9", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "patch": "@@ -12047,7 +12047,7 @@ This function has the same semantics as @code{__builtin_expect},\n but the caller provides the expected probability that @var{exp} == @var{c}.\n The last argument, @var{probability}, is a floating-point value in the\n range 0.0 to 1.0, inclusive.  The @var{probability} argument must be\n-a compiler time constant.\n+constant floating-point expression.\n @end deftypefn\n \n @deftypefn {Built-in Function} void __builtin_trap (void)"}, {"sha": "8482737ab2722dcbda186146d7209def3dc0ae2c", "filename": "gcc/predict.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "patch": "@@ -2470,8 +2470,8 @@ expr_expected_value_1 (tree type, tree op0, enum tree_code code,\n \t\t  if (TREE_CODE (r) != REAL_CST)\n \t\t    {\n \t\t      error_at (gimple_location (def),\n-\t\t\t\t\"probability argument %qE must be a compile \"\n-\t\t\t\t\"time constant\", prob);\n+\t\t\t\t\"probability %qE must be \"\n+\t\t\t\t\"constant floating-point expression\", prob);\n \t\t      return NULL;\n \t\t    }\n \t\t  HOST_WIDE_INT probi\n@@ -2483,8 +2483,8 @@ expr_expected_value_1 (tree type, tree op0, enum tree_code code,\n \t\t    }\n \t\t  else\n \t\t    error_at (gimple_location (def),\n-\t\t\t      \"probability argument %qE must be a in the \"\n-\t\t\t      \"range 0.0 to 1.0\", prob);\n+\t\t\t      \"probability %qE is outside \"\n+\t\t\t      \"the range [0.0, 1.0]\", prob);\n \n \t\t  return gimple_call_arg (def, 1);\n \t\t}"}, {"sha": "773fcce06e77b166f67ec90accb38fc280a23077", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "patch": "@@ -1,3 +1,8 @@\n+2018-11-08  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/pr87811.c: Update scanned pattern.\n+\t* gcc.dg/pr87811-2.c: Likewise.\n+\n 2018-11-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* g++.dg/lto/pr87906_0.C: Use moon instead of possibly predefined"}, {"sha": "8b0818756e2476ee7780abfa89c1f48686b22ea8", "filename": "gcc/testsuite/gcc.dg/pr87811-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-2.c?ref=c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "patch": "@@ -6,7 +6,7 @@ void bar (void);\n void\n foo (int i)\n {\n-  if (__builtin_expect_with_probability (i, 0, 2.0f)) /* { dg-error \"probability argument .* must be a in the range 0\\\\\\.0 to 1\\\\\\.0\" } */\n+  if (__builtin_expect_with_probability (i, 0, 2.0f)) /* { dg-error \"probability .* is outside the range \\\\\\[0\\\\\\.0, 1\\\\\\.0\\\\\\]\" } */\n     bar ();\n }\n "}, {"sha": "110b38359751c1aeb95e47eb953d17c09870094b", "filename": "gcc/testsuite/gcc.dg/pr87811.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811.c?ref=c4e7e1b9f74bb6688bc9e9f3454bc45b890d4a9d", "patch": "@@ -6,7 +6,7 @@ void bar (void);\n void\n foo (int i, double d)\n {\n-  if (__builtin_expect_with_probability (i, 0, d)) /* { dg-error \"probability argument .d. must be a compile time constant\" } */\n+  if (__builtin_expect_with_probability (i, 0, d)) /* { dg-error \"probability .d. must be constant floating-point expression\" } */\n     bar ();\n }\n "}]}