{"sha": "b1edcad11f8688df33e136de11c63e61aea7a182", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFlZGNhZDExZjg2ODhkZjMzZTEzNmRlMTFjNjNlNjFhZWE3YTE4Mg==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2014-11-25T22:30:58Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2014-11-25T22:30:58Z"}, "message": "enum6.C: Use arm_eabi for dg-options.\n\n2014-11-26  Andreas Tobler  <andreast@gcc.gnu.org>\n\n        * g++.old-deja/g++.jason/enum6.C: Use arm_eabi for dg-options.\n\tUpdate comment.\n\t* g++.old-deja/g++.law/enum9.C: Likewise.\n\t* g++.old-deja/g++.other/enum4.C: Likewise.\n\nFrom-SVN: r218065", "tree": {"sha": "ab0b10a90a365bdebb85f3c9697a164ce3a6ce7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab0b10a90a365bdebb85f3c9697a164ce3a6ce7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1edcad11f8688df33e136de11c63e61aea7a182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1edcad11f8688df33e136de11c63e61aea7a182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1edcad11f8688df33e136de11c63e61aea7a182", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1edcad11f8688df33e136de11c63e61aea7a182/comments", "author": null, "committer": null, "parents": [{"sha": "61001a358539747f4cf2789a405c9b127aebd552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61001a358539747f4cf2789a405c9b127aebd552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61001a358539747f4cf2789a405c9b127aebd552"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "11c7de2ecf6fb1c4b031284d20b19af8ee9d0506", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1edcad11f8688df33e136de11c63e61aea7a182/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1edcad11f8688df33e136de11c63e61aea7a182/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1edcad11f8688df33e136de11c63e61aea7a182", "patch": "@@ -1,3 +1,10 @@\n+2014-11-26  Andreas Tobler  <andreast@gcc.gnu.org>\n+\n+        * g++.old-deja/g++.jason/enum6.C: Use arm_eabi for dg-options.\n+        Update comment.\n+        * g++.old-deja/g++.law/enum9.C: Likewise.\n+        * g++.old-deja/g++.other/enum4.C: Likewise.\n+\n 2014-11-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/63534"}, {"sha": "c5bcec9ad7a5bb4cd0c992f8092f0cbc11328e81", "filename": "gcc/testsuite/g++.old-deja/g++.jason/enum6.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1edcad11f8688df33e136de11c63e61aea7a182/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fenum6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1edcad11f8688df33e136de11c63e61aea7a182/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fenum6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fenum6.C?ref=b1edcad11f8688df33e136de11c63e61aea7a182", "patch": "@@ -7,10 +7,8 @@\n // enum-size attributes should only be emitted if there are values of\n // enum type that can escape the compilation unit, gcc cannot currently\n // detect this; if this facility is added then this linker option should\n-// not be needed.  arm-*-linux* should be a good approximation to\n-// those platforms where the EABI supplement defines enum values to be\n-// 32 bits wide.\n-// { dg-options \"-fshort-enums -Wl,--no-enum-size-warning\" { target arm*-*-linux* } }\n+// not be needed.\n+// { dg-options \"-fshort-enums -Wl,--no-enum-size-warning\" { target arm_eabi } }\n \n #include <limits.h>\n "}, {"sha": "a1a551d6e551ae60f352c5e8a3e5c8c960611606", "filename": "gcc/testsuite/g++.old-deja/g++.law/enum9.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1edcad11f8688df33e136de11c63e61aea7a182/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1edcad11f8688df33e136de11c63e61aea7a182/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum9.C?ref=b1edcad11f8688df33e136de11c63e61aea7a182", "patch": "@@ -7,10 +7,8 @@\n // enum-size attributes should only be emitted if there are values of\n // enum type that can escape the compilation unit, gcc cannot currently\n // detect this; if this facility is added then this linker option should\n-// not be needed.  arm-*-linux* should be a good approximation to\n-// those platforms where the EABI supplement defines enum values to be\n-// 32 bits wide.\n-// { dg-options \"-fshort-enums -Wl,--no-enum-size-warning\" { target arm*-*-linux* } }\n+// not be needed.\n+// { dg-options \"-fshort-enums -Wl,--no-enum-size-warning\" { target arm_eabi } }\n \n // GROUPS passed enums\n   extern \"C\" int printf (const char *, ...);"}, {"sha": "3cda57ca2f3bb3c0762a08ef7456465dde92d08f", "filename": "gcc/testsuite/g++.old-deja/g++.other/enum4.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1edcad11f8688df33e136de11c63e61aea7a182/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1edcad11f8688df33e136de11c63e61aea7a182/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum4.C?ref=b1edcad11f8688df33e136de11c63e61aea7a182", "patch": "@@ -9,10 +9,8 @@\n // enum-size attributes should only be emitted if there are values of\n // enum type that can escape the compilation unit, gcc cannot currently\n // detect this; if this facility is added then this linker option should\n-// not be needed.  arm-*-linux* should be a good approximation to\n-// those platforms where the EABI supplement defines enum values to be\n-// 32 bits wide.\n-// { dg-options \"-fshort-enums -Wl,--no-enum-size-warning\" { target arm*-*-linux* } }\n+// not be needed.\n+// { dg-options \"-fshort-enums -Wl,--no-enum-size-warning\" { target arm_eabi } }\n \n enum E { \n   a = -312"}]}