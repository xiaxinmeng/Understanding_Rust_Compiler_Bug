{"sha": "ded419a70c26f628e0c5b3dd7723b6f2bfc00145", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVkNDE5YTcwYzI2ZjYyOGUwYzViM2RkNzcyM2I2ZjJiZmMwMDE0NQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-05-27T05:55:29Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-05-27T05:55:29Z"}, "message": "* testsuite/gcc.dg/cpp/if-3.c: Forgot to remove.\n\nFrom-SVN: r53912", "tree": {"sha": "45156f4405b8bc2423efb802e7c7f0a942d4e9e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45156f4405b8bc2423efb802e7c7f0a942d4e9e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ded419a70c26f628e0c5b3dd7723b6f2bfc00145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded419a70c26f628e0c5b3dd7723b6f2bfc00145", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ded419a70c26f628e0c5b3dd7723b6f2bfc00145", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded419a70c26f628e0c5b3dd7723b6f2bfc00145/comments", "author": null, "committer": null, "parents": [{"sha": "c9220e3a83aecc4d5fa5ecfad4d203f086e0c061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9220e3a83aecc4d5fa5ecfad4d203f086e0c061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9220e3a83aecc4d5fa5ecfad4d203f086e0c061"}], "stats": {"total": 25, "additions": 0, "deletions": 25}, "files": [{"sha": "674b91b949388fea656c3eceb40d589a20c084fd", "filename": "gcc/testsuite/gcc.dg/cpp/if-3.c", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9220e3a83aecc4d5fa5ecfad4d203f086e0c061/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9220e3a83aecc4d5fa5ecfad4d203f086e0c061/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fif-3.c?ref=c9220e3a83aecc4d5fa5ecfad4d203f086e0c061", "patch": "@@ -1,25 +0,0 @@\n-/* Test that the preprocessor is capable of 64-bit arithmetic.\n-   (Must turn off -pedantic, since `LL' constants are only in C99.)  */\n-/* { dg-do preprocess } */\n-/* { dg-options \"\" } */\n-\n-#define U_MAX 4294967295U\n-#define ULL_MAX 18446744073709551615ULL\n-#define LL_MAX 9223372036854775807LL\n-#define LL_MIN (-LL_MAX-1)\n-\n-/* Check simple truncation. */\n-#if U_MAX == ULL_MAX || LL_MIN == 0 || LL_MAX == -1\n-#error \"simple truncation\"  /* { dg-bogus \"trunc\" \"simple truncation\" } */\n-#endif\n-\n-/* Check left/right shifting with all bits set and with one bit set. */\n-#if !(~0ULL >> 63) || !(~0ULL << 63) || !(~0LL >> 63) || !(~0LL << 63) || \\\n-  !(LL_MIN >> 63) || !(1LL << 62) || !(ULL_MAX >> 63) || !(1ULL << 63)\n-#error \"bit shift truncation\" /* { dg-bogus \"trunc\" \"bit shift truncation\" } */\n-#endif\n-\n-/* Check math expressions. */\n-#if (2ULL * U_MAX < U_MAX) || (1ULL + U_MAX < U_MAX)\n-#error \"math truncation\"  /* { dg-bogus \"trunc\" \"math truncation\" } */\n-#endif"}]}