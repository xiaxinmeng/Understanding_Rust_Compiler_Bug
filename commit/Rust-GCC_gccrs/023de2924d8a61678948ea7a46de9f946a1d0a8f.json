{"sha": "023de2924d8a61678948ea7a46de9f946a1d0a8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIzZGUyOTI0ZDhhNjE2Nzg5NDhlYTdhNDZkZTlmOTQ2YTFkMGE4Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-07T06:08:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-07T06:08:44Z"}, "message": "(grokparms): Copy arg type list to savable obstack if nec.\n\nFrom-SVN: r2071", "tree": {"sha": "aae42aff2b57cae2a8be51fea687e032e646d366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aae42aff2b57cae2a8be51fea687e032e646d366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/023de2924d8a61678948ea7a46de9f946a1d0a8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023de2924d8a61678948ea7a46de9f946a1d0a8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/023de2924d8a61678948ea7a46de9f946a1d0a8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023de2924d8a61678948ea7a46de9f946a1d0a8f/comments", "author": null, "committer": null, "parents": [{"sha": "bc690db148f86489ae3ffd105ddde3f0638a6ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc690db148f86489ae3ffd105ddde3f0638a6ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc690db148f86489ae3ffd105ddde3f0638a6ba5"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "fb925045921b1ef032c1e4672d1f92f395b5bdc6", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/023de2924d8a61678948ea7a46de9f946a1d0a8f/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/023de2924d8a61678948ea7a46de9f946a1d0a8f/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=023de2924d8a61678948ea7a46de9f946a1d0a8f", "patch": "@@ -4438,7 +4438,20 @@ grokparms (parms_info, funcdef_flag)\n \t      typelt = TREE_CHAIN (typelt);\n \t    }\n \n-      return first_parm;\n+      /* Allocate the list of types the way we allocate a type.  */\n+      if (allocation_temporary_p ())\n+\t{\n+\t  /* Construct a copy of the list of types\n+\t     on the saveable obstack.  */\n+\t  tree result = NULL;\n+\t  for (typelt = first_parm; typelt; typelt = TREE_CHAIN (typelt))\n+\t    result = saveable_tree_cons (NULL_TREE, TREE_VALUE (typelt),\n+\t\t\t\t\t result);\n+\t  return nreverse (result);\n+\t}\n+      else\n+\t/* The list we have is permanent already.  */\n+\treturn first_parm;\n     }\n }\n "}]}