{"sha": "b4ae520152976c22948e7c90360dcd93aacf2f88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRhZTUyMDE1Mjk3NmMyMjk0OGU3YzkwMzYwZGNkOTNhYWNmMmY4OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-01-01T00:27:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-01-01T00:27:11Z"}, "message": "dwarf2out.c (loc_descriptor_from_tree, [...]): New.\n\n\t* dwarf2out.c (loc_descriptor_from_tree, case WITH_RECORD_EXPR): New.\n\t(loc_descriptor_from_tree, case SAVE_EXPR): New.\n\nFrom-SVN: r38579", "tree": {"sha": "13b6b4460c328d18d295a24b21c835836adcbb42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13b6b4460c328d18d295a24b21c835836adcbb42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4ae520152976c22948e7c90360dcd93aacf2f88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ae520152976c22948e7c90360dcd93aacf2f88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ae520152976c22948e7c90360dcd93aacf2f88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ae520152976c22948e7c90360dcd93aacf2f88/comments", "author": null, "committer": null, "parents": [{"sha": "e304a8e61a5970791a71e4a4f35509e9574202b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e304a8e61a5970791a71e4a4f35509e9574202b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e304a8e61a5970791a71e4a4f35509e9574202b7"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "57a5f174bf99f1bd3360083a99584dc6a69606c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ae520152976c22948e7c90360dcd93aacf2f88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ae520152976c22948e7c90360dcd93aacf2f88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4ae520152976c22948e7c90360dcd93aacf2f88", "patch": "@@ -1,3 +1,8 @@\n+Sun Dec 31 19:20:51 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* dwarf2out.c (loc_descriptor_from_tree, case WITH_RECORD_EXPR): New.\n+\t(loc_descriptor_from_tree, case SAVE_EXPR): New.\n+\n 2001-01-01  Michael Hayes  <mhayes@redhat.com>\n \n \t* loop.c (loop_giv_reduce_benefit): Break out from strength_reduce.\n@@ -6,26 +11,18 @@\n \t* loop.h (struct_iv_class): Add `final_value' and `all_reduced'.\n \t(struct loop_info): Add `pre_header_has_call'.\n \t\n-2001-01-01  Michael Hayes  <mhayes@redhat.com>\n-\n \t* loop.c (loop_bivs_find): Break out from strength_reduce.\n \t(loop_bivs_init_find, loop_bivs_check, loop_givs_find): Likewise.\n \t(loop_givs_check, loop_biv_eliminable_p): Likewise.\n \t\n-2001-01-01  Michael Hayes  <mhayes@redhat.com>\t\n-\n \t* loop.c (LOOP_REG_LIFETIME, LOOP_REG_GLOBAL_P): Define.\n \t(scan_loop, record_giv): Use LOOP_REG_LIFETIME and LOOP_REG_GLOBAL_P.\n \t\n-2001-01-01  Michael Hayes  <mhayes@redhat.com>\t\n-\n \t* loop.h (REGNO_FIRST_LUID, REGNO_LAST_LUID): Define.\n \t* loop.c (REGNO_FIRST_LUID, REGNO_LAST_LUID): Use in place of\n \tdirect access to uid_luid array.\n \t* unroll.c (REGNO_FIRST_LUID, REGNO_LAST_LUID): Likewise.\n \n-2001-01-01  Michael Hayes  <mhayes@redhat.com>\t\n-\n \t* loop.h (struct loop_movables): New.\n \t(LOOP_MOVABLES): New.\n \t(struct loop_info): Add movables field.\n@@ -37,7 +34,6 @@\n \t(scan_loop): Use xmalloc instead of alloca for movables.\n \tCall loop_movables_free.\n \t\n-2001-01-01  Michael Hayes  <mhayes@redhat.com>\t\n \n \t* loop.c (debug_loops): New.\n "}, {"sha": "ec47c36352a14bb2fbacdad79764674257dc549b", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ae520152976c22948e7c90360dcd93aacf2f88/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ae520152976c22948e7c90360dcd93aacf2f88/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b4ae520152976c22948e7c90360dcd93aacf2f88", "patch": "@@ -7793,6 +7793,13 @@ loc_descriptor_from_tree (loc, addressp)\n     case ERROR_MARK:\n       break;\n \n+    case WITH_RECORD_EXPR:\n+      /* This case involves extracting fields from an object to determine the\n+\t position of other fields.  We don't try to encode this here.  The\n+\t only user of this is Ada, which encodes the needed information using\n+\t the names of types.  */\n+      return ret;\n+\n     case VAR_DECL:\n     case PARM_DECL:\n       {\n@@ -7828,6 +7835,7 @@ loc_descriptor_from_tree (loc, addressp)\n     case NOP_EXPR:\n     case CONVERT_EXPR:\n     case NON_LVALUE_EXPR:\n+    case SAVE_EXPR:\n       return loc_descriptor_from_tree (TREE_OPERAND (loc, 0), addressp);\n       \n     case COMPONENT_REF:"}]}