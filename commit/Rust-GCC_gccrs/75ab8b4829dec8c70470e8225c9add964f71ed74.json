{"sha": "75ab8b4829dec8c70470e8225c9add964f71ed74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVhYjhiNDgyOWRlYzhjNzA0NzBlODIyNWM5YWRkOTY0ZjcxZWQ3NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-05-19T21:33:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-05-20T03:10:53Z"}, "message": "c++: _Complex template parameter [PR100634]\n\nWe were crashing because invalid_nontype_parm_type_p allowed _Complex\ntemplate parms, but convert_nontype_argument didn't know what to do for\nthem.  Let's just disallow it, people can and should use std::complex\ninstead.\n\n\tPR c++/100634\n\ngcc/cp/ChangeLog:\n\n\t* pt.c (invalid_nontype_parm_type_p): Return true for COMPLEX_TYPE.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp2a/nontype-complex1.C: New test.", "tree": {"sha": "c2ac53dfd730fda91342526f474a3243cd98a09f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2ac53dfd730fda91342526f474a3243cd98a09f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75ab8b4829dec8c70470e8225c9add964f71ed74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ab8b4829dec8c70470e8225c9add964f71ed74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ab8b4829dec8c70470e8225c9add964f71ed74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ab8b4829dec8c70470e8225c9add964f71ed74/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe9a6614a16b5ea7f12141c50b6b7de984390ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe9a6614a16b5ea7f12141c50b6b7de984390ed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe9a6614a16b5ea7f12141c50b6b7de984390ed8"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "cbd2f3dc338364792bdfa08b289704758c724f78", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ab8b4829dec8c70470e8225c9add964f71ed74/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ab8b4829dec8c70470e8225c9add964f71ed74/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=75ab8b4829dec8c70470e8225c9add964f71ed74", "patch": "@@ -26563,6 +26563,8 @@ invalid_nontype_parm_type_p (tree type, tsubst_flags_t complain)\n   else if (cxx_dialect >= cxx11\n \t   && TREE_CODE (type) == BOUND_TEMPLATE_TEMPLATE_PARM)\n     return false;\n+  else if (TREE_CODE (type) == COMPLEX_TYPE)\n+    /* Fall through.  */;\n   else if (VOID_TYPE_P (type))\n     /* Fall through.  */;\n   else if (cxx_dialect >= cxx20)"}, {"sha": "4de2168ef60d11b8a8d65756bdce4911c06da11f", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-complex1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ab8b4829dec8c70470e8225c9add964f71ed74/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-complex1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ab8b4829dec8c70470e8225c9add964f71ed74/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-complex1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-complex1.C?ref=75ab8b4829dec8c70470e8225c9add964f71ed74", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/100634\n+// { dg-do compile { target c++20 } }\n+// { dg-options \"\" }\n+\n+// We could support _Complex template arguments, but better I think to make\n+// people use a standard type instead.\n+template<_Complex int> struct ComplexInt {}; // { dg-error \"not a valid type\" }\n+using CI = ComplexInt<1 + 3i>;"}]}