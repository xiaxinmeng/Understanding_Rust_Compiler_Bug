{"sha": "1fc1b66d4a7668e4a9640edac9c6d6bd5105284d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZjMWI2NmQ0YTc2NjhlNGE5NjQwZWRhYzljNmQ2YmQ1MTA1Mjg0ZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-05-06T14:21:16Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-05-06T14:21:16Z"}, "message": "re PR target/48900 (unnecessary duplicate __tls_get_addr calls)\n\n\tPR target/48900\n\t* config/rs6000/rs6000.c (rs6000_legitimize_tls_address): Use\n\tconst0_rtx as the arg to the dummy __tls_get_addr libcall.\n\nFrom-SVN: r173488", "tree": {"sha": "31f2438f22ec42f0638f367c2653e6ffcb9d5cc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31f2438f22ec42f0638f367c2653e6ffcb9d5cc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fc1b66d4a7668e4a9640edac9c6d6bd5105284d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc1b66d4a7668e4a9640edac9c6d6bd5105284d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fc1b66d4a7668e4a9640edac9c6d6bd5105284d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc1b66d4a7668e4a9640edac9c6d6bd5105284d/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e194de64ac17fe46c2b939bf16b2d213dbe79ebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e194de64ac17fe46c2b939bf16b2d213dbe79ebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e194de64ac17fe46c2b939bf16b2d213dbe79ebc"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "acd049f46038916ac552d600b84da639f90df1cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fc1b66d4a7668e4a9640edac9c6d6bd5105284d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fc1b66d4a7668e4a9640edac9c6d6bd5105284d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1fc1b66d4a7668e4a9640edac9c6d6bd5105284d", "patch": "@@ -1,3 +1,9 @@\n+2011-05-06  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/48900\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_tls_address): Use\n+\tconst0_rtx as the arg to the dummy __tls_get_addr libcall.\n+\n 2011-05-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*movdf_internal_nointeger): Apply \"*\""}, {"sha": "d4851ad4d27b423f158fd4e4c4b19cc60fd4de06", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fc1b66d4a7668e4a9640edac9c6d6bd5105284d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fc1b66d4a7668e4a9640edac9c6d6bd5105284d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=1fc1b66d4a7668e4a9640edac9c6d6bd5105284d", "patch": "@@ -6407,10 +6407,11 @@ rs6000_legitimize_tls_address (rtx addr, enum tls_model model)\n \n       if (model == TLS_MODEL_GLOBAL_DYNAMIC)\n \t{\n-\t  r3 = gen_rtx_REG (Pmode, 3);\n \t  tga = rs6000_tls_get_addr ();\n-\t  emit_library_call_value (tga, dest, LCT_CONST, Pmode, 1, r3, Pmode);\n+\t  emit_library_call_value (tga, dest, LCT_CONST, Pmode,\n+\t\t\t\t   1, const0_rtx, Pmode);\n \n+\t  r3 = gen_rtx_REG (Pmode, 3);\n \t  if (DEFAULT_ABI == ABI_AIX && TARGET_64BIT)\n \t    insn = gen_tls_gd_aix64 (r3, got, addr, tga, const0_rtx);\n \t  else if (DEFAULT_ABI == ABI_AIX && !TARGET_64BIT)\n@@ -6427,11 +6428,12 @@ rs6000_legitimize_tls_address (rtx addr, enum tls_model model)\n \t}\n       else if (model == TLS_MODEL_LOCAL_DYNAMIC)\n \t{\n-\t  r3 = gen_rtx_REG (Pmode, 3);\n \t  tga = rs6000_tls_get_addr ();\n \t  tmp1 = gen_reg_rtx (Pmode);\n-\t  emit_library_call_value (tga, tmp1, LCT_CONST, Pmode, 1, r3, Pmode);\n+\t  emit_library_call_value (tga, tmp1, LCT_CONST, Pmode,\n+\t\t\t\t   1, const0_rtx, Pmode);\n \n+\t  r3 = gen_rtx_REG (Pmode, 3);\n \t  if (DEFAULT_ABI == ABI_AIX && TARGET_64BIT)\n \t    insn = gen_tls_ld_aix64 (r3, got, tga, const0_rtx);\n \t  else if (DEFAULT_ABI == ABI_AIX && !TARGET_64BIT)"}]}