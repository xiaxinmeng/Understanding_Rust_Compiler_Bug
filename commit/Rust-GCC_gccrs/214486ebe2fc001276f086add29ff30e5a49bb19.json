{"sha": "214486ebe2fc001276f086add29ff30e5a49bb19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE0NDg2ZWJlMmZjMDAxMjc2ZjA4NmFkZDI5ZmYzMGU1YTQ5YmIxOQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2018-06-25T18:59:55Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2018-06-25T18:59:55Z"}, "message": "config.gcc (powerpc64le*): Revert January 16th...\n\n2018-06-25  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* config.gcc (powerpc64le*): Revert January 16th, 2018 patch that\n\tadded IEEE/IBM long double multilib support on PowerPC little\n\tendian Linux systems.\n\t* config/rs6000/linux64.h (MULTILIB_DEFAULTS_IEEE): Likewise.\n\t(MULTILIB_DEFAULTS): Likewise.\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n\tLikewise.\n\t* config/rs6000/rs6000.h (TARGET_IEEEQUAD_MULTILIB): Likewise.\n\t* config/rs6000/t-ldouble-linux64le-ibm: Delete, no longer used.\n\t* config/rs6000/t-ldouble-linux64le-ieee: Delete, no longer used.\n\nFrom-SVN: r262105", "tree": {"sha": "974fde6b421d1c286f8f61bc47142afa87a4979a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/974fde6b421d1c286f8f61bc47142afa87a4979a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/214486ebe2fc001276f086add29ff30e5a49bb19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/214486ebe2fc001276f086add29ff30e5a49bb19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/214486ebe2fc001276f086add29ff30e5a49bb19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/214486ebe2fc001276f086add29ff30e5a49bb19/comments", "author": null, "committer": null, "parents": [{"sha": "d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf"}], "stats": {"total": 102, "additions": 18, "deletions": 84}, "files": [{"sha": "b5558a0f93c3c71eb6dddaede04f622374c10e55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=214486ebe2fc001276f086add29ff30e5a49bb19", "patch": "@@ -1,3 +1,16 @@\n+2018-06-25  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* config.gcc (powerpc64le*): Revert January 16th, 2018 patch that\n+\tadded IEEE/IBM long double multilib support on PowerPC little\n+\tendian Linux systems.\n+\t* config/rs6000/linux64.h (MULTILIB_DEFAULTS_IEEE): Likewise.\n+\t(MULTILIB_DEFAULTS): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n+\tLikewise.\n+\t* config/rs6000/rs6000.h (TARGET_IEEEQUAD_MULTILIB): Likewise.\n+\t* config/rs6000/t-ldouble-linux64le-ibm: Delete, no longer used.\n+\t* config/rs6000/t-ldouble-linux64le-ieee: Delete, no longer used.\n+\n 2018-06-25  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR middle-end/86311"}, {"sha": "63162aab676b621b061b02c9fc7238f6d82023b9", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=214486ebe2fc001276f086add29ff30e5a49bb19", "patch": "@@ -4566,16 +4566,6 @@ case \"${target}\" in\n \t\telif test x$with_long_double_format = xibm; then\n \t\t    tm_defines=\"${tm_defines} TARGET_IEEEQUAD_DEFAULT=0\"\n \t\tfi\n-\n-\t\tcase \"${target}:${enable_multilib}:${with_long_double_format}\" in\n-\t\t    powerpc64le*:yes:ieee | powerpc64le*:yes:ibm)\n-\t\t\ttm_defines=\"${tm_defines} TARGET_IEEEQUAD_MULTILIB=1\"\n-\t\t\ttmake_file=\"${tmake_file} rs6000/t-ldouble-linux64le-${with_long_double_format}\"\n-\t\t\t;;\n-\t\t    *)\n-\t\t\t:\n-\t\t\t;;\n-\t\tesac\n \t\t;;\n \n \ts390*-*-*)"}, {"sha": "44eab40a2349df5831d5abaf7e510a066edfd75f", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=214486ebe2fc001276f086add29ff30e5a49bb19", "patch": "@@ -245,18 +245,11 @@ extern int dot_symbols;\n #define DYNAMIC_LINKER_PREFIX\t\"\"\n #endif\n \n-#if TARGET_IEEEQUAD_DEFAULT\n-#define MULTILIB_DEFAULTS_IEEE \"mabi=ieeelongdouble\"\n-\n-#else  /* TARGET_IEEEQUAD_DEFAULT.  */\n-#define MULTILIB_DEFAULTS_IEEE \"mabi=ibmlongdouble\"\n-#endif /* TARGET_IEEEQUAD_DEFAULT.  */\n-\n-#undef MULTILIB_DEFAULTS\n+#undef\tMULTILIB_DEFAULTS\n #if DEFAULT_ARCH64_P\n-#define MULTILIB_DEFAULTS { \"m64\", MULTILIB_DEFAULTS_IEEE }\n+#define MULTILIB_DEFAULTS { \"m64\" }\n #else\n-#define MULTILIB_DEFAULTS { \"m32\", MULTILIB_DEFAULTS_IEEE }\n+#define MULTILIB_DEFAULTS { \"m32\" }\n #endif\n \n /* Split stack is only supported for 64 bit, and requires glibc >= 2.18.  */"}, {"sha": "d6d324b7cee2891c4dd89f68913171f8ef67f33b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=214486ebe2fc001276f086add29ff30e5a49bb19", "patch": "@@ -4582,15 +4582,11 @@ rs6000_option_override_internal (bool global_init_p)\n      systems will also set long double to be IEEE 128-bit.  AIX and Darwin\n      explicitly redefine TARGET_IEEEQUAD and TARGET_IEEEQUAD_DEFAULT to 0, so\n      those systems will not pick up this default.  Warn if the user changes the\n-     default unless either the user used the -Wno-psabi option, or the compiler\n-     was built to enable multilibs to switch between the two long double\n-     types.  */\n+     default unless -Wno-psabi.  */\n   if (!global_options_set.x_rs6000_ieeequad)\n     rs6000_ieeequad = TARGET_IEEEQUAD_DEFAULT;\n \n-  else if (!TARGET_IEEEQUAD_MULTILIB\n-\t   && rs6000_ieeequad != TARGET_IEEEQUAD_DEFAULT\n-\t   && TARGET_LONG_DOUBLE_128)\n+  else if (rs6000_ieeequad != TARGET_IEEEQUAD_DEFAULT && TARGET_LONG_DOUBLE_128)\n     {\n       static bool warned_change_long_double;\n       if (!warned_change_long_double)"}, {"sha": "f44336ee90ab1b144d006d26985e3c69153e085f", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/214486ebe2fc001276f086add29ff30e5a49bb19/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=214486ebe2fc001276f086add29ff30e5a49bb19", "patch": "@@ -551,12 +551,6 @@ extern int rs6000_vector_align[];\n #define TARGET_ALTIVEC_ABI rs6000_altivec_abi\n #define TARGET_LDBRX (TARGET_POPCNTD || rs6000_cpu == PROCESSOR_CELL)\n \n-/* Define as 1 if we support multilibs for switching long double between IEEE\n-   128-bit floating point and IBM extended double.  */\n-#ifndef TARGET_IEEEQUAD_MULTILIB\n-#define TARGET_IEEEQUAD_MULTILIB 0\n-#endif\n-\n /* ISA 2.01 allowed FCFID to be done in 32-bit, previously it was 64-bit only.\n    Enable 32-bit fcfid's on any of the switches for newer ISA machines.  */\n #define TARGET_FCFID\t(TARGET_POWERPC64\t\t\t\t\\"}, {"sha": "4b209e8b907240b6eafe7b8cff13af72174962ab", "filename": "gcc/config/rs6000/t-ldouble-linux64le-ibm", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf/gcc%2Fconfig%2Frs6000%2Ft-ldouble-linux64le-ibm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf/gcc%2Fconfig%2Frs6000%2Ft-ldouble-linux64le-ibm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ldouble-linux64le-ibm?ref=d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf", "patch": "@@ -1,26 +0,0 @@\n-# Long double multilib libraries for PowerPC 64-bit little endian systems using\n-# IBM extended double as the long double type.\n-#\n-# Copyright (C) 2018 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-MULTILIB_OPTIONS\t+= mabi=ieeelongdouble/mabi=ibmlongdouble\n-MULTILIB_DIRNAMES\t+= ieee128 ibm128\n-MULTILIB_OSDIRNAMES\t+= mabi.ibmlongdouble=../lib64$(call if_multiarch,:powerpc64-linux-gnu) \\\n-\t\t\t   mabi.ieeelongdouble=../lib64/ieee128$(call if_multiarch,:powerpc64-linux-gnu) \\\n-\t\t\t   ../lib64$(call if_multiarch,:powerpc64-linux-gnu)"}, {"sha": "7d47953c9083bba206fa9e47b18b7c4af7fbf0d7", "filename": "gcc/config/rs6000/t-ldouble-linux64le-ieee", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf/gcc%2Fconfig%2Frs6000%2Ft-ldouble-linux64le-ieee", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf/gcc%2Fconfig%2Frs6000%2Ft-ldouble-linux64le-ieee", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ldouble-linux64le-ieee?ref=d66a58d333eadd07eeb3e86bb8fc06a4ee3158bf", "patch": "@@ -1,26 +0,0 @@\n-# Long double multilib libraries for PowerPC 64-bit little endian systems using\n-# IEEE 128-bit floating point as the long double type.\n-#\n-# Copyright (C) 2018 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-MULTILIB_OPTIONS\t+= mabi=ieeelongdouble/mabi=ibmlongdouble\n-MULTILIB_DIRNAMES\t+= ieee128 ibm128\n-MULTILIB_OSDIRNAMES\t+= mabi.ibmlongdouble=../lib64/ibm128$(call if_multiarch,:powerpc64-linux-gnu) \\\n-\t\t\t   mabi.ieeelongdouble=../lib64$(call if_multiarch,:powerpc64-linux-gnu) \\\n-\t\t\t   ../lib64$(call if_multiarch,:powerpc64-linux-gnu)"}]}