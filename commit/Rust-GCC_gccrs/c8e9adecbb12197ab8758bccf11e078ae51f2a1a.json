{"sha": "c8e9adecbb12197ab8758bccf11e078ae51f2a1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhlOWFkZWNiYjEyMTk3YWI4NzU4YmNjZjExZTA3OGFlNTFmMmExYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-28T14:37:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-28T14:37:45Z"}, "message": "(alpha_emit_set_const): Add declaration.\n\nFrom-SVN: r9532", "tree": {"sha": "7fc575ada08e28eb7b595a18f99987c3d1bd2c7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fc575ada08e28eb7b595a18f99987c3d1bd2c7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8e9adecbb12197ab8758bccf11e078ae51f2a1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e9adecbb12197ab8758bccf11e078ae51f2a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8e9adecbb12197ab8758bccf11e078ae51f2a1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e9adecbb12197ab8758bccf11e078ae51f2a1a/comments", "author": null, "committer": null, "parents": [{"sha": "fd94addf1d4edec67c2540454237f7ffd534933a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd94addf1d4edec67c2540454237f7ffd534933a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd94addf1d4edec67c2540454237f7ffd534933a"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "ef0f3e146a35c63da804fac858eaa386185da1f9", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8e9adecbb12197ab8758bccf11e078ae51f2a1a/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8e9adecbb12197ab8758bccf11e078ae51f2a1a/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=c8e9adecbb12197ab8758bccf11e078ae51f2a1a", "patch": "@@ -901,6 +901,13 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n+/* Try to output insns to set TARGET equal to the constant C if it can be\n+   done in less than N insns.  Do all computations in MODE.  Returns the place\n+   where the output has been placed if it can be done and the insns have been\n+   emitted.  If it would take more than N insns, zero is returned and no\n+   insns and emitted.  */\n+extern struct rtx_def *alpha_emit_set_const ();\n+\n /* Generate necessary RTL for __builtin_saveregs().\n    ARGLIST is the argument list; see expr.c.  */\n extern struct rtx_def *alpha_builtin_saveregs ();"}]}