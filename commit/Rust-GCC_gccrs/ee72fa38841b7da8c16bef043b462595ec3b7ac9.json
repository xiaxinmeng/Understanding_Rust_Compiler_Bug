{"sha": "ee72fa38841b7da8c16bef043b462595ec3b7ac9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3MmZhMzg4NDFiN2RhOGMxNmJlZjA0M2I0NjI1OTVlYzNiN2FjOQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2007-05-09T00:46:11Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-05-09T00:46:11Z"}, "message": "typeck.c (build_unary_op): Remove code that used to handle non lvalue increments/decrements.\n\n2007-05-07  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        * typeck.c (build_unary_op): Remove code that used to\n        handle non lvalue increments/decrements.\n\nFrom-SVN: r124564", "tree": {"sha": "0ff299e37d46040085280897ace784e290b27479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ff299e37d46040085280897ace784e290b27479"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee72fa38841b7da8c16bef043b462595ec3b7ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee72fa38841b7da8c16bef043b462595ec3b7ac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee72fa38841b7da8c16bef043b462595ec3b7ac9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee72fa38841b7da8c16bef043b462595ec3b7ac9/comments", "author": null, "committer": null, "parents": [{"sha": "8e34b5db9ed5a30ce1855d95195a301463ef4f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e34b5db9ed5a30ce1855d95195a301463ef4f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e34b5db9ed5a30ce1855d95195a301463ef4f6f"}], "stats": {"total": 40, "additions": 5, "deletions": 35}, "files": [{"sha": "708da19eeef37ecabaad9658d81bbc4f82819421", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee72fa38841b7da8c16bef043b462595ec3b7ac9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee72fa38841b7da8c16bef043b462595ec3b7ac9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ee72fa38841b7da8c16bef043b462595ec3b7ac9", "patch": "@@ -1,3 +1,8 @@\n+2007-05-07  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\t* typeck.c (build_unary_op): Remove code that used to\n+\thandle non lvalue increments/decrements.\n+\n 2007-05-07  Mike Stump  <mrs@apple.com>\n \n \t* parser.c (check_empty_body): Add."}, {"sha": "08b5b7e0c4b8adc593dc09c1eeac202fedd469de", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee72fa38841b7da8c16bef043b462595ec3b7ac9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee72fa38841b7da8c16bef043b462595ec3b7ac9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ee72fa38841b7da8c16bef043b462595ec3b7ac9", "patch": "@@ -4278,41 +4278,6 @@ build_unary_op (enum tree_code code, tree xarg, int noconvert)\n \n \tinc = cp_convert (argtype, inc);\n \n-\t/* Handle incrementing a cast-expression.  */\n-\n-\tswitch (TREE_CODE (arg))\n-\t  {\n-\t  case NOP_EXPR:\n-\t  case CONVERT_EXPR:\n-\t  case FLOAT_EXPR:\n-\t  case FIX_TRUNC_EXPR:\n-\t    {\n-\t      tree incremented, modify, value, compound;\n-\t      if (! lvalue_p (arg) && pedantic)\n-\t\tpedwarn (\"cast to non-reference type used as lvalue\");\n-\t      arg = stabilize_reference (arg);\n-\t      if (code == PREINCREMENT_EXPR || code == PREDECREMENT_EXPR)\n-\t\tvalue = arg;\n-\t      else\n-\t\tvalue = save_expr (arg);\n-\t      incremented = build2 (((code == PREINCREMENT_EXPR\n-\t\t\t\t      || code == POSTINCREMENT_EXPR)\n-\t\t\t\t     ? PLUS_EXPR : MINUS_EXPR),\n-\t\t\t\t    argtype, value, inc);\n-\n-\t      modify = build_modify_expr (arg, NOP_EXPR, incremented);\n-\t      compound = build2 (COMPOUND_EXPR, TREE_TYPE (arg),\n-\t\t\t\t modify, value);\n-\n-\t      /* Eliminate warning about unused result of + or -.  */\n-\t      TREE_NO_WARNING (compound) = 1;\n-\t      return compound;\n-\t    }\n-\n-\t  default:\n-\t    break;\n-\t  }\n-\n \t/* Complain about anything else that is not a true lvalue.  */\n \tif (!lvalue_or_else (arg, ((code == PREINCREMENT_EXPR\n \t\t\t\t    || code == POSTINCREMENT_EXPR)"}]}