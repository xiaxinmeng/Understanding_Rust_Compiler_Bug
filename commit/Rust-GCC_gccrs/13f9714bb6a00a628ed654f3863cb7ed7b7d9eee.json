{"sha": "13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNmOTcxNGJiNmEwMGE2MjhlZDY1NGYzODYzY2I3ZWQ3YjdkOWVlZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-12-01T11:52:33Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-12-01T11:52:33Z"}, "message": "call.c (standard_conversion): Reject pointer to member conversions from ambiguous, inaccessible or virtual bases.\n\ncp:\n\t* call.c (standard_conversion): Reject pointer to member\n\tconversions from ambiguous, inaccessible or virtual bases.\n\t* typeck.c (build_static_cast): Don't check pointers to members\n\tspecially.\ntestsuite:\n\t* g++.old-deja/g++.other/cast6.C: New test.\n\nFrom-SVN: r37914", "tree": {"sha": "f80d9f0fedea5248099a5177e8a9fea9a12d0a08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f80d9f0fedea5248099a5177e8a9fea9a12d0a08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/comments", "author": null, "committer": null, "parents": [{"sha": "89f99caaab615ca3e4566a5fe4db97a88fb1e0f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89f99caaab615ca3e4566a5fe4db97a88fb1e0f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89f99caaab615ca3e4566a5fe4db97a88fb1e0f4"}], "stats": {"total": 97, "additions": 81, "deletions": 16}, "files": [{"sha": "8654377980d804a9ac0cc03f2409fbef39ec9bef", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "patch": "@@ -1,3 +1,10 @@\n+2000-12-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* call.c (standard_conversion): Reject pointer to member\n+\tconversions from ambiguous, inaccessible or virtual bases.\n+\t* typeck.c (build_static_cast): Don't check pointers to members\n+\tspecially.\n+\n 2000-11-30  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* method.c (do_build_copy_constructor): Preserve cv"}, {"sha": "fd5f904638215c1214b8dcaf8f0f9d07555d34d9", "filename": "gcc/cp/call.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "patch": "@@ -736,8 +736,9 @@ standard_conversion (to, from, expr)\n \t{\n \t  tree fbase = TYPE_OFFSET_BASETYPE (TREE_TYPE (from));\n \t  tree tbase = TYPE_OFFSET_BASETYPE (TREE_TYPE (to));\n+\t  tree binfo = get_binfo (fbase, tbase, 1);\n \n-\t  if (DERIVED_FROM_P (fbase, tbase)\n+\t  if (binfo && !binfo_from_vbase (binfo)\n \t      && (same_type_ignoring_top_level_qualifiers_p\n \t\t  (TREE_TYPE (TREE_TYPE (from)),\n \t\t   TREE_TYPE (TREE_TYPE (to)))))\n@@ -783,11 +784,12 @@ standard_conversion (to, from, expr)\n       tree tofn = TREE_TYPE (TYPE_PTRMEMFUNC_FN_TYPE (to));\n       tree fbase = TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (fromfn)));\n       tree tbase = TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (tofn)));\n+      tree binfo = get_binfo (fbase, tbase, 1);\n \n-      if (! DERIVED_FROM_P (fbase, tbase)\n-\t  || ! same_type_p (TREE_TYPE (fromfn), TREE_TYPE (tofn))\n-\t  || ! compparms (TREE_CHAIN (TYPE_ARG_TYPES (fromfn)),\n-\t\t\t  TREE_CHAIN (TYPE_ARG_TYPES (tofn)))\n+      if (!binfo || binfo_from_vbase (binfo)\n+\t  || !same_type_p (TREE_TYPE (fromfn), TREE_TYPE (tofn))\n+\t  || !compparms (TREE_CHAIN (TYPE_ARG_TYPES (fromfn)),\n+\t\t\t TREE_CHAIN (TYPE_ARG_TYPES (tofn)))\n \t  || CP_TYPE_QUALS (fbase) != CP_TYPE_QUALS (tbase))\n \treturn 0;\n "}, {"sha": "6f99a5fb6770e51137b3bfd424d791d705081fbe", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "patch": "@@ -5095,23 +5095,18 @@ build_static_cast (type, expr)\n       ? can_convert_arg (type, intype, expr)\n       : can_convert_arg (strip_all_pointer_quals (type),\n                          strip_all_pointer_quals (intype), expr))\n+    /* This is a standard conversion. */\n     ok = 1;\n   else if (TYPE_PTROB_P (type) && TYPE_PTROB_P (intype))\n     {\n+      /* They're pointers to objects. They must be aggregates that\n+         are related non-virtually. */\n+      \n       tree binfo;\n+      \n       if (IS_AGGR_TYPE (TREE_TYPE (type)) && IS_AGGR_TYPE (TREE_TYPE (intype))\n \t  && (binfo = get_binfo (TREE_TYPE (intype), TREE_TYPE (type), 0))\n-\t  && ! TREE_VIA_VIRTUAL (binfo))\n-\tok = 1;\n-    }\n-  else if (TYPE_PTRMEM_P (type) && TYPE_PTRMEM_P (intype))\n-    {\n-      if (same_type_ignoring_top_level_qualifiers_p\n-\t  (TREE_TYPE (TREE_TYPE (type)),\n-\t   TREE_TYPE (TREE_TYPE (intype)))\n-\t  && (binfo = get_binfo (TYPE_OFFSET_BASETYPE (TREE_TYPE (type)),\n-\t\t\t\t TYPE_OFFSET_BASETYPE (TREE_TYPE (intype)), 0))\n-\t  && ! TREE_VIA_VIRTUAL (binfo))\n+\t  && !binfo_from_vbase (binfo))\n \tok = 1;\n     }\n   else if (TREE_CODE (intype) != BOOLEAN_TYPE"}, {"sha": "aae082d791f1b90111a6d0f6cc4d51efc74dfc75", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "patch": "@@ -1,3 +1,7 @@\n+2000-12-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/cast6.C: New test.\n+\n 2000-11-30  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* gcc.c-torture/execute/20001130-2.c: New testcase."}, {"sha": "23f63e7797b1f49995d2e9023a88aec2737ce917", "filename": "gcc/testsuite/g++.old-deja/g++.other/cast6.C", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcast6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f9714bb6a00a628ed654f3863cb7ed7b7d9eee/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcast6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcast6.C?ref=13f9714bb6a00a628ed654f3863cb7ed7b7d9eee", "patch": "@@ -0,0 +1,57 @@\n+// Build don't link:\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 28 Nov 2000 <nathan@codesourcery.com>\n+\n+// We failed to reject static_cast and implicit conversions of pointers to\n+// member that traversed a virtual base.\n+\n+struct bar\n+{\n+  int barm;\n+    static void a();\n+};\n+struct filler1 {int fm;};\n+struct filler2 {int fm;};\n+struct filler3 {int fm;};\n+struct filler4 {int fm;};\n+\n+struct baz : filler1, bar, filler2\n+{\n+  int bazm;\n+};\n+\n+struct foo : filler3, virtual baz, filler4\n+{\n+    static void a();\n+    void b() {};\n+    int m;\n+};\n+\n+typedef void (bar::*barfPtr)();\n+typedef void (foo::*foofPtr)();\n+typedef int bar::*barmPtr;\n+typedef int foo::*foomPtr;\n+\n+struct X;\n+typedef void (X::*xfPtr) ();\n+typedef int X::*xmPtr;\n+\n+int main ()\n+{\n+  {\n+    foofPtr fp = &foo::b;\n+    barfPtr bp = static_cast <barfPtr> (fp);    // ERROR - invalid static_cast\n+    foofPtr fp2 = static_cast <foofPtr> (bp);   // ERROR - invalid static_cast\n+    foofPtr fp3 = bp;                           // ERROR - cannot convert\n+    fp3 = (foofPtr)bp;                          // WARNING - via virtual base\n+    \n+    foomPtr fmp = &foo::m;\n+    barmPtr bmp = static_cast <barmPtr> (fmp);  // ERROR - invalid static_cast\n+    foomPtr fmp2 = static_cast <foomPtr> (bmp); // ERROR - invalid static_cast\n+    foomPtr fmp3 = bmp;                         // ERROR - cannot convert\n+    fmp3 = (foomPtr)bmp;                        // WARNING - via virtual base\n+  }\n+  \n+  return 0;\n+}"}]}