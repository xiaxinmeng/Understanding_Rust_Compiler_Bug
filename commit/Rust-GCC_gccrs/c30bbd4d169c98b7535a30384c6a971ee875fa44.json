{"sha": "c30bbd4d169c98b7535a30384c6a971ee875fa44", "node_id": "C_kwDOANBUbNoAKGMzMGJiZDRkMTY5Yzk4Yjc1MzVhMzAzODRjNmE5NzFlZTg3NWZhNDQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-02T06:37:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-02T06:40:30Z"}, "message": "tree-optimization/106498 - reduce SSA updates in autopar\n\nThe following reduces the number of SSA updates done during autopar\nOMP expansion, specifically avoiding the cases that just add virtual\noperands (where maybe none have been before) in dead regions of the CFG.\n\nInstead virtual SSA update is delayed until after the pass.  There's\nmuch more TLC needed here, but test coverage makes it really difficult.\n\n\tPR tree-optimization/106498\n\t* omp-expand.cc (expand_omp_taskreg): Do not perform virtual\n\tSSA update here.\n\t(expand_omp_for): Or here.\n\t(execute_expand_omp): Instead schedule it here together\n\twith CFG cleanup via TODO.", "tree": {"sha": "8e4f9d52b34fcf3c707a59adecdafe59e7efa2b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4f9d52b34fcf3c707a59adecdafe59e7efa2b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c30bbd4d169c98b7535a30384c6a971ee875fa44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30bbd4d169c98b7535a30384c6a971ee875fa44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c30bbd4d169c98b7535a30384c6a971ee875fa44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30bbd4d169c98b7535a30384c6a971ee875fa44/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc7526f6fca0e6ac3bd462ae54170fa464539148", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7526f6fca0e6ac3bd462ae54170fa464539148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc7526f6fca0e6ac3bd462ae54170fa464539148"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "64e6308fc7b83a14c2dd7580071a0b020e9f4211", "filename": "gcc/omp-expand.cc", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30bbd4d169c98b7535a30384c6a971ee875fa44/gcc%2Fomp-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30bbd4d169c98b7535a30384c6a971ee875fa44/gcc%2Fomp-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.cc?ref=c30bbd4d169c98b7535a30384c6a971ee875fa44", "patch": "@@ -1530,8 +1530,6 @@ expand_omp_taskreg (struct omp_region *region)\n     expand_teams_call (new_bb, as_a <gomp_teams *> (entry_stmt));\n   else\n     expand_task_call (region, new_bb, as_a <gomp_task *> (entry_stmt));\n-  if (gimple_in_ssa_p (cfun))\n-    update_ssa (TODO_update_ssa_only_virtuals);\n }\n \n /* Information about members of an OpenACC collapsed loop nest.  */\n@@ -8191,9 +8189,6 @@ expand_omp_for (struct omp_region *region, gimple *inner_stmt)\n \t\t\t      (enum built_in_function) next_ix, sched_arg,\n \t\t\t      inner_stmt);\n     }\n-\n-  if (gimple_in_ssa_p (cfun))\n-    update_ssa (TODO_update_ssa_only_virtuals);\n }\n \n /* Expand code for an OpenMP sections directive.  In pseudo code, we generate\n@@ -10591,13 +10586,10 @@ execute_expand_omp (void)\n \n   expand_omp (root_omp_region);\n \n-  if (flag_checking && !loops_state_satisfies_p (LOOPS_NEED_FIXUP))\n-    verify_loop_structure ();\n-  cleanup_tree_cfg ();\n-\n   omp_free_regions ();\n \n-  return 0;\n+  return (TODO_cleanup_cfg\n+\t  | (gimple_in_ssa_p (cfun) ? TODO_update_ssa_only_virtuals : 0));\n }\n \n /* OMP expansion -- the default pass, run before creation of SSA form.  */"}]}