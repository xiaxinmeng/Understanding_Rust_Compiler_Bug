{"sha": "bdb8217782c443af90a47a1b47bde9a9d305fe47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRiODIxNzc4MmM0NDNhZjkwYTQ3YTFiNDdiZGU5YTlkMzA1ZmU0Nw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-05-26T08:15:31Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-05-26T08:15:31Z"}, "message": "simplify-rtx.c (avoid_constant_pool_reference): Support offsetted addresses in the constant pool.\n\n2005-05-26  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* simplify-rtx.c (avoid_constant_pool_reference): Support\n\toffsetted addresses in the constant pool.\n\nFrom-SVN: r100198", "tree": {"sha": "7315b2174bd1d4722dd1d562258301db648721d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7315b2174bd1d4722dd1d562258301db648721d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdb8217782c443af90a47a1b47bde9a9d305fe47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdb8217782c443af90a47a1b47bde9a9d305fe47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdb8217782c443af90a47a1b47bde9a9d305fe47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdb8217782c443af90a47a1b47bde9a9d305fe47/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57a95bc48d07fcd237553acf979f2e340590ed48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57a95bc48d07fcd237553acf979f2e340590ed48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57a95bc48d07fcd237553acf979f2e340590ed48"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "ffd7b7f0bed912c24e50e94b5022999e2134711a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdb8217782c443af90a47a1b47bde9a9d305fe47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdb8217782c443af90a47a1b47bde9a9d305fe47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdb8217782c443af90a47a1b47bde9a9d305fe47", "patch": "@@ -1,3 +1,8 @@\n+2005-05-26  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* simplify-rtx.c (avoid_constant_pool_reference): Support\n+\toffsetted addresses in the constant pool.\n+\n 2005-05-26  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* df.h (DF_SUBREGS, df_local_def_available_p, df_insn_modified_p): New."}, {"sha": "338978992df8b1e8b6f41d5d76447ad26608c063", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdb8217782c443af90a47a1b47bde9a9d305fe47/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdb8217782c443af90a47a1b47bde9a9d305fe47/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=bdb8217782c443af90a47a1b47bde9a9d305fe47", "patch": "@@ -145,6 +145,7 @@ avoid_constant_pool_reference (rtx x)\n {\n   rtx c, tmp, addr;\n   enum machine_mode cmode;\n+  HOST_WIDE_INT offset = 0;\n \n   switch (GET_CODE (x))\n     {\n@@ -173,26 +174,40 @@ avoid_constant_pool_reference (rtx x)\n   /* Call target hook to avoid the effects of -fpic etc....  */\n   addr = targetm.delegitimize_address (addr);\n \n+  /* Split the address into a base and integer offset.  */\n+  if (GET_CODE (addr) == CONST\n+      && GET_CODE (XEXP (addr, 0)) == PLUS\n+      && GET_CODE (XEXP (XEXP (addr, 0), 1)) == CONST_INT)\n+    {\n+      offset = INTVAL (XEXP (XEXP (addr, 0), 1));\n+      addr = XEXP (XEXP (addr, 0), 0);\n+    }\n+\n   if (GET_CODE (addr) == LO_SUM)\n     addr = XEXP (addr, 1);\n \n-  if (GET_CODE (addr) != SYMBOL_REF\n-      || ! CONSTANT_POOL_ADDRESS_P (addr))\n-    return x;\n-\n-  c = get_pool_constant (addr);\n-  cmode = get_pool_mode (addr);\n-\n-  /* If we're accessing the constant in a different mode than it was\n-     originally stored, attempt to fix that up via subreg simplifications.\n-     If that fails we have no choice but to return the original memory.  */\n-  if (cmode != GET_MODE (x))\n+  /* If this is a constant pool reference, we can turn it into its\n+     constant and hope that simplifications happen.  */\n+  if (GET_CODE (addr) == SYMBOL_REF\n+      && CONSTANT_POOL_ADDRESS_P (addr))\n     {\n-      c = simplify_subreg (GET_MODE (x), c, cmode, 0);\n-      return c ? c : x;\n+      c = get_pool_constant (addr);\n+      cmode = get_pool_mode (addr);\n+\n+      /* If we're accessing the constant in a different mode than it was\n+         originally stored, attempt to fix that up via subreg simplifications.\n+         If that fails we have no choice but to return the original memory.  */\n+      if (offset != 0 || cmode != GET_MODE (x))\n+        {\n+          rtx tem = simplify_subreg (GET_MODE (x), c, cmode, offset);\n+          if (tem && CONSTANT_P (tem))\n+            return tem;\n+        }\n+      else\n+        return c;\n     }\n \n-  return c;\n+  return x;\n }\n \f\n /* Make a unary operation by first seeing if it folds and otherwise making"}]}