{"sha": "016030fea6d929c69ce92ec45b797da303c09ab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE2MDMwZmVhNmQ5MjljNjljZTkyZWM0NWI3OTdkYTMwM2MwOWFiNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-02-24T02:22:07Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-02-24T02:22:07Z"}, "message": "function.c (epilogue_done): Be ready for first basic block not containing PROLOGUE_END note.\n\n\t* function.c (epilogue_done): Be ready for first basic block not\n\tcontaining PROLOGUE_END note.\n\t(reposition_prologue_and_epilogue_notes): Avoid placing\n\tPROLOGUE_END note between BASIC_BLOCK.\n\nFrom-SVN: r40020", "tree": {"sha": "568578ca5083b7991e0c10b6fba808e37b087289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/568578ca5083b7991e0c10b6fba808e37b087289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/016030fea6d929c69ce92ec45b797da303c09ab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/016030fea6d929c69ce92ec45b797da303c09ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/016030fea6d929c69ce92ec45b797da303c09ab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/016030fea6d929c69ce92ec45b797da303c09ab6/comments", "author": null, "committer": null, "parents": [{"sha": "c9212f333ae38c52c16184bb00e8af622d88901b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9212f333ae38c52c16184bb00e8af622d88901b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9212f333ae38c52c16184bb00e8af622d88901b"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "e0359670eb3e81905e271f7615621fa6bebbfa80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/016030fea6d929c69ce92ec45b797da303c09ab6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/016030fea6d929c69ce92ec45b797da303c09ab6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=016030fea6d929c69ce92ec45b797da303c09ab6", "patch": "@@ -1,3 +1,10 @@\n+Sat Feb 24 03:19:42 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* function.c (epilogue_done): Be ready for first basic block not\n+\tcontaining PROLOGUE_END note.\n+\t(reposition_prologue_and_epilogue_notes): Avoid placing\n+\tPROLOGUE_END note between BASIC_BLOCK.\n+\n Sat Feb 24 03:17:09 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* loop.c (canonicalize_condition): Move to reversed_comparison_code."}, {"sha": "a1c2d3389d0e59b11f78b379a41d2d5f4e4b25e5", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/016030fea6d929c69ce92ec45b797da303c09ab6/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/016030fea6d929c69ce92ec45b797da303c09ab6/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=016030fea6d929c69ce92ec45b797da303c09ab6", "patch": "@@ -7384,7 +7384,13 @@ thread_prologue_and_epilogue_insns (f)\n \t there are line number notes before where we inserted the\n \t prologue we should move them, and (2) we should generate a\n \t note before the end of the first basic block, if there isn't\n-\t one already there.  */\n+\t one already there.\n+\n+\t ??? This behaviour is completely broken when dealing with\n+\t multiple entry functions.  We simply place the note always\n+\t into first basic block and let alternate entry points\n+\t to be missed.\n+       */\n \n       for (insn = prologue_end; insn; insn = prev)\n \t{\n@@ -7402,7 +7408,7 @@ thread_prologue_and_epilogue_insns (f)\n \n       /* Find the last line number note in the first block.  */\n       for (insn = BASIC_BLOCK (0)->end;\n-\t   insn != prologue_end;\n+\t   insn != prologue_end && insn;\n \t   insn = PREV_INSN (insn))\n \tif (GET_CODE (insn) == NOTE && NOTE_LINE_NUMBER (insn) > 0)\n \t  break;\n@@ -7487,6 +7493,9 @@ reposition_prologue_and_epilogue_notes (f)\n \t\tBLOCK_HEAD (0) = next;\n \n \t      remove_insn (note);\n+\t      /* Avoid placing note between CODE_LABEL and BASIC_BLOCK note.  */\n+\t      if (GET_CODE (insn) == CODE_LABEL)\n+\t\tinsn = NEXT_INSN (insn);\n \t      add_insn_after (note, insn);\n \t    }\n \t}"}]}