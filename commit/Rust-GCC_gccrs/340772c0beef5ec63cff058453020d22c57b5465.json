{"sha": "340772c0beef5ec63cff058453020d22c57b5465", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQwNzcyYzBiZWVmNWVjNjNjZmYwNTg0NTMwMjBkMjJjNTdiNTQ2NQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-04-12T12:44:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T12:44:46Z"}, "message": "gnat1drv.adb (Gnat1drv): Test Target_Dependent_Info_Write_Name.\n\n2013-04-12  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat1drv.adb (Gnat1drv): Test Target_Dependent_Info_Write_Name.\n\t* opt.ads (Target_Dependent_Info_Read): Add _Name, now an access\n\ttype (Target_Dependent_Info_Write): Add _Name, now an access type.\n\t* set_targ.adb (Write_Target_Dependent_Values): Use name\n\tfrom -gnatet switch stored in Target_Dependent_Info_Write_Name\n\t(Read_Target_Dependent_Values): Use name from -gnateT switch\n\tstored in Target_Dependent_Info_Read_Name.\n\t* switch-c.adb: New form of -gnatet and -gnateT switches.\n\t* usage.adb: New form of -gnatet and -gnateT switches with\n\tfile name.\n\nFrom-SVN: r197898", "tree": {"sha": "69a350ea09318ce3eb5442786f940b6810e4098e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69a350ea09318ce3eb5442786f940b6810e4098e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/340772c0beef5ec63cff058453020d22c57b5465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340772c0beef5ec63cff058453020d22c57b5465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/340772c0beef5ec63cff058453020d22c57b5465", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340772c0beef5ec63cff058453020d22c57b5465/comments", "author": null, "committer": null, "parents": [{"sha": "d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee"}], "stats": {"total": 144, "additions": 97, "deletions": 47}, "files": [{"sha": "e71c87783cdbe57fcaac9f1b6eae993023deab26", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=340772c0beef5ec63cff058453020d22c57b5465", "patch": "@@ -1,3 +1,16 @@\n+2013-04-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat1drv.adb (Gnat1drv): Test Target_Dependent_Info_Write_Name.\n+\t* opt.ads (Target_Dependent_Info_Read): Add _Name, now an access\n+\ttype (Target_Dependent_Info_Write): Add _Name, now an access type.\n+\t* set_targ.adb (Write_Target_Dependent_Values): Use name\n+\tfrom -gnatet switch stored in Target_Dependent_Info_Write_Name\n+\t(Read_Target_Dependent_Values): Use name from -gnateT switch\n+\tstored in Target_Dependent_Info_Read_Name.\n+\t* switch-c.adb: New form of -gnatet and -gnateT switches.\n+\t* usage.adb: New form of -gnatet and -gnateT switches with\n+\tfile name.\n+\n 2013-04-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n         * gcc-interface/decl.c (elaborate_expression_1): Skip only constant"}, {"sha": "47337aa0724f07467622e274c14f0fcd2b8c56b8", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=340772c0beef5ec63cff058453020d22c57b5465", "patch": "@@ -881,7 +881,7 @@ begin\n \n       --  Generate target dependent output file if requested\n \n-      if Target_Dependent_Info_Write then\n+      if Target_Dependent_Info_Write_Name /= null then\n          Set_Targ.Write_Target_Dependent_Values;\n       end if;\n "}, {"sha": "68429a81feacb4e094bd01ce58dc7d383c400f98", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=340772c0beef5ec63cff058453020d22c57b5465", "patch": "@@ -1331,18 +1331,19 @@ package Opt is\n    --  types and dispatching calls, assuming the underlying target supports\n    --  it (e.g. in the JVM case).\n \n-   Target_Dependent_Info_Read : Boolean := False;\n+   Target_Dependent_Info_Read_Name : String_Ptr := null;\n    --  GNAT\n-   --  Set True to override the normal processing in Get_Targ and set the\n-   --  necessary information by reading the target dependent information\n-   --  file (see packages Get_Targ and Set_Targ for full details). Set True\n-   --  by use of the -gnateT switch.\n+   --  Set non-null to override the normal processing in Get_Targ and set the\n+   --  necessary information by reading the target dependent information file\n+   --  whose name is given here (see packages Get_Targ and Set_Targ for full\n+   --  details). Set to non-null file name by use of the -gnateT switch.\n \n-   Target_Dependent_Info_Write : Boolean := False;\n+   Target_Dependent_Info_Write_Name : String_Ptr := null;\n    --  GNAT\n-   --  Set True to enable a call to Set_Targ.Write_Target_Dependent_Info which\n-   --  writes a target independent information file (see packages Get_Targ and\n-   --  Set_Targ for full details). Set True by use of the -gnatet switch.\n+   --  Set non-null to enable a call to Set_Targ.Write_Target_Dependent_Info\n+   --  which writes a target independent information file (see packages\n+   --  Get_Targ and Set_Targ for full details) using the name given by\n+   --  this switch. Set to non-null file name by use of the -gnatet switch.\n \n    Task_Dispatching_Policy : Character := ' ';\n    --  GNAT, GNATBIND"}, {"sha": "6699b418328ae85c818f7ae498ac74df047017b3", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 37, "deletions": 30, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=340772c0beef5ec63cff058453020d22c57b5465", "patch": "@@ -35,12 +35,9 @@ with Unchecked_Conversion;\n \n package body Set_Targ is\n \n-   ---------------------------------------------\n-   -- Data Used to Read/Write target.atp File --\n-   ---------------------------------------------\n-\n-   File_Name : aliased constant String := \"target.atp\";\n-   --  Name of file to read/write\n+   --------------------------------------------------------\n+   -- Data Used to Read/Write Target Dependent Info File --\n+   --------------------------------------------------------\n \n    --  Table of string names written to file\n \n@@ -369,8 +366,9 @@ package body Set_Targ is\n          AddC (ASCII.LF);\n \n          if Buflen /= Write (Fdesc, Buffer'Address, Buflen) then\n-            Delete_File (File_Name'Address, OK);\n-            Fail (\"disk full writing target.atp\");\n+            Delete_File (Target_Dependent_Info_Write_Name'Address, OK);\n+            Fail (\"disk full writing file \"\n+                  & Target_Dependent_Info_Write_Name.all);\n          end if;\n \n          Buflen := 0;\n@@ -379,10 +377,11 @@ package body Set_Targ is\n    --  Start of processing for Write_Target_Dependent_Values\n \n    begin\n-      Fdesc := Create_File (File_Name'Address, Text);\n+      Fdesc :=\n+        Create_File (Target_Dependent_Info_Write_Name.all'Address, Text);\n \n       if Fdesc = Invalid_FD then\n-         Fail (\"cannot create target.atp\");\n+         Fail (\"cannot create file \" & Target_Dependent_Info_Write_Name.all);\n       end if;\n \n       --  Loop through values\n@@ -459,7 +458,8 @@ package body Set_Targ is\n       Close (Fdesc, OK);\n \n       if not OK then\n-         Fail (\"disk full writing target.atp\");\n+         Fail (\"disk full writing file \"\n+               & Target_Dependent_Info_Write_Name.all);\n       end if;\n    end Write_Target_Dependent_Values;\n \n@@ -471,7 +471,7 @@ begin\n    --  First step: see if the -gnateT switch is present. As we have noted,\n    --  this has to be done very early, so can not depend on the normal circuit\n    --  for reading switches and setting switches in Opt. The following code\n-   --  will set Opt.Target_Dependent_Info_Read if an option starting -gnateT\n+   --  will set Opt.Target_Dependent_Info_Read_Name if the switch -gnateT=name\n    --  is present in the options string.\n \n    declare\n@@ -513,11 +513,14 @@ begin\n          declare\n             Argv_Ptr : constant Big_String_Ptr := save_argv (Arg);\n             Argv_Len : constant Nat            := Len_Arg (Arg);\n+\n          begin\n-            if Argv_Len = 7\n-              and then Argv_Ptr (1 .. 7) = \"-gnateT\"\n+            if Argv_Len > 8\n+              and then Argv_Ptr (1 .. 8) = \"-gnateT=\"\n             then\n-               Opt.Target_Dependent_Info_Read := True;\n+               Opt.Target_Dependent_Info_Read_Name :=\n+                 new String'(Argv_Ptr (9 .. Natural (Argv_Len)));\n+\n             elsif Argv_Len >= 8\n               and then Argv_Ptr (1 .. 8) = \"-gnatd.b\"\n             then\n@@ -529,7 +532,7 @@ begin\n \n    --  If the switch is not set, we get all values from the back end\n \n-   if not Opt.Target_Dependent_Info_Read then\n+   if Opt.Target_Dependent_Info_Read_Name = null then\n \n       --  Set values by direct calls to the back end\n \n@@ -560,7 +563,7 @@ begin\n \n       Register_Back_End_Types (Register_Float_Type'Access);\n \n-   --  Case of reading the target dependent values from target.atp\n+   --  Case of reading the target dependent values from file\n \n    --  This is bit more complex than might be expected, because it has to be\n    --  done very early. All kinds of packages depend on these values, and we\n@@ -569,7 +572,7 @@ begin\n    --  too early to be using Osint directly.\n \n    else\n-      Read_File : declare\n+      Read_Target_Dependent_Values : declare\n          File_Desc : File_Descriptor;\n          N         : Natural;\n \n@@ -592,9 +595,9 @@ begin\n          --  Checks that we have one or more spaces and skips them\n \n          procedure FailN (S : String);\n-         --  Calls Fail prefixing \"target.atp: \" to the start of the given\n-         --  string, and \" name\" to the end where name is the currently\n-         --  gathered name in Nam_Buf, surrounded by quotes.\n+         --  Calls Fail adding \" name in file xxx\", where name is the currently\n+         --  gathered name in Nam_Buf, surrounded by quotes, and xxx is the\n+         --  name of the file.\n \n          procedure Get_Name;\n          --  Scan out name, leaving it in Nam_Buf with Nam_Len set. Calls\n@@ -628,7 +631,8 @@ begin\n \n          procedure FailN (S : String) is\n          begin\n-            Fail (\"target.atp: \" & S & \" \"\"\" & Nam_Buf (1 .. Nam_Len) & '\"');\n+            Fail (S & \" \"\"\" & Nam_Buf (1 .. Nam_Len) & \"\"\" in file \"\n+                  & Target_Dependent_Info_Read_Name.all);\n          end FailN;\n \n          --------------\n@@ -700,19 +704,19 @@ begin\n             end loop;\n          end Skip_Spaces;\n \n-      --  Start of processing for Read_File\n+      --  Start of processing for Read_Target_Dependent_Values\n \n       begin\n-         File_Desc := Open_Read (\"target.atp\", Text);\n+         File_Desc := Open_Read (Target_Dependent_Info_Read_Name.all, Text);\n \n          if File_Desc = Invalid_FD then\n-            Fail (\"cannot read target.atp file\");\n+            Fail (\"cannot read file \" & Target_Dependent_Info_Read_Name.all);\n          end if;\n \n          Buflen := Read (File_Desc, Buffer'Address, Buffer'Length);\n \n          if Buflen = Buffer'Length then\n-            Fail (\"target.atp file is too long\");\n+            Fail (\"file is too long: \" & Target_Dependent_Info_Read_Name.all);\n          end if;\n \n          --  Scan through file for properly formatted entries in first section\n@@ -753,20 +757,23 @@ begin\n \n          for J in DTR'Range loop\n             if not DTR (J) then\n-               Fail (\"missing entry in target.atp for \" & DTN (J).all);\n+               Fail (\"missing entry for \" & DTN (J).all & \" in file \"\n+                     & Target_Dependent_Info_Read_Name.all);\n             end if;\n          end loop;\n \n          --  Now acquire FPT entries\n \n          if N >= Buflen then\n-            Fail (\"target.atp is missing entries for FPT modes\");\n+            Fail (\"missing entries for FPT modes in file \"\n+                  & Target_Dependent_Info_Read_Name.all);\n          end if;\n \n          if Buffer (N) = ASCII.LF then\n             N := N + 1;\n          else\n-            Fail (\"target.atp is missing blank line\");\n+            Fail (\"missing blank line in file \"\n+                  & Target_Dependent_Info_Read_Name.all);\n          end if;\n \n          Num_FPT_Modes := 0;\n@@ -810,6 +817,6 @@ begin\n                N := N + 1;\n             end;\n          end loop;\n-      end Read_File;\n+      end Read_Target_Dependent_Values;\n    end if;\n end Set_Targ;"}, {"sha": "9102507230ab8bb70d699bcfb730fddfc8e7d0b8", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=340772c0beef5ec63cff058453020d22c57b5465", "patch": "@@ -597,7 +597,6 @@ package body Switch.C is\n \n                      if Ptr >= Max or else Switch_Chars (Ptr) /= '=' then\n                         Bad_Switch (\"-gnateO\");\n-\n                      else\n                         Object_Path_File_Name :=\n                           new String'(Switch_Chars (Ptr + 1 .. Max));\n@@ -651,9 +650,25 @@ package body Switch.C is\n                   --  -gnatet (write target dependent information)\n \n                   when 't' =>\n-                     Target_Dependent_Info_Write := True;\n+                     if not First_Switch then\n+                        Osint.Fail\n+                          (\"-gnatet must be first if combined with \"\n+                           & \"other switches\");\n+                     end if;\n+\n+                     --  Check for '='\n+\n                      Ptr := Ptr + 1;\n \n+                     if Ptr >= Max or else Switch_Chars (Ptr) /= '=' then\n+                        Bad_Switch (\"-gnatet\");\n+                     else\n+                        Target_Dependent_Info_Write_Name :=\n+                          new String'(Switch_Chars (Ptr + 1 .. Max));\n+                     end if;\n+\n+                     return;\n+\n                   --  -gnateT (read target dependent information)\n \n                   when 'T' =>\n@@ -663,9 +678,23 @@ package body Switch.C is\n                            & \"other switches\");\n                      end if;\n \n-                     Target_Dependent_Info_Read := True;\n+                     --  Check for '='\n+\n                      Ptr := Ptr + 1;\n \n+                     if Ptr >= Max or else Switch_Chars (Ptr) /= '=' then\n+                        Bad_Switch (\"-gnateT\");\n+                     else\n+                        --  This parameter was stored by Set_Targ earlier\n+\n+                        pragma Assert\n+                          (Target_Dependent_Info_Read_Name.all =\n+                             Switch_Chars (Ptr + 1 .. Max));\n+                        null;\n+                     end if;\n+\n+                     return;\n+\n                   --  -gnateV (validity checks on parameters)\n \n                   when 'V' =>"}, {"sha": "dd0f2af33e4fef2b532ee8d62a0a62944682cb96", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340772c0beef5ec63cff058453020d22c57b5465/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=340772c0beef5ec63cff058453020d22c57b5465", "patch": "@@ -243,13 +243,13 @@ begin\n \n    --  Line for -gnatet switch\n \n-   Write_Switch_Char (\"et\");\n-   Write_Line (\"Write target dependent information file\");\n+   Write_Switch_Char (\"et=?\");\n+   Write_Line (\"Write target dependent information file ?, e.g. gnatet=tdf\");\n \n    --  Line for -gnateT switch\n \n-   Write_Switch_Char (\"eT\");\n-   Write_Line (\"Read target dependent information file\");\n+   Write_Switch_Char (\"eT=?\");\n+   Write_Line (\"Read target dependent information file ?, e.g. gnateT=tdf\");\n \n    --  Line for -gnateV switch\n "}]}