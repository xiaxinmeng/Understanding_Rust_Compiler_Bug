{"sha": "0078f46235ecf1097513fa0faad3e841a30ae1c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA3OGY0NjIzNWVjZjEwOTc1MTNmYTBmYWFkM2U4NDFhMzBhZTFjNw==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "basile@starynkevitch.net", "date": "2013-09-20T15:50:56Z"}, "committer": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2013-09-20T15:50:56Z"}, "message": "gengtype.c (file_rules): Added rule for *.cc files.\n\n2013-09-20  Basile Starynkevitch  <basile@starynkevitch.net>\n\n       * gengtype.c (file_rules): Added rule for *.cc files.\n       (get_output_file_with_visibility): Give fatal message when no\n       rules found.\n\nFrom-SVN: r202782", "tree": {"sha": "33819c84a094993ab7211363b0d1e1037aad42df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33819c84a094993ab7211363b0d1e1037aad42df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0078f46235ecf1097513fa0faad3e841a30ae1c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0078f46235ecf1097513fa0faad3e841a30ae1c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0078f46235ecf1097513fa0faad3e841a30ae1c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0078f46235ecf1097513fa0faad3e841a30ae1c7/comments", "author": {"login": "bstarynk", "id": 90412, "node_id": "MDQ6VXNlcjkwNDEy", "avatar_url": "https://avatars.githubusercontent.com/u/90412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstarynk", "html_url": "https://github.com/bstarynk", "followers_url": "https://api.github.com/users/bstarynk/followers", "following_url": "https://api.github.com/users/bstarynk/following{/other_user}", "gists_url": "https://api.github.com/users/bstarynk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstarynk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstarynk/subscriptions", "organizations_url": "https://api.github.com/users/bstarynk/orgs", "repos_url": "https://api.github.com/users/bstarynk/repos", "events_url": "https://api.github.com/users/bstarynk/events{/privacy}", "received_events_url": "https://api.github.com/users/bstarynk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d15ac9d9a3d9cdbc655115803d6fb5ad38e9adc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15ac9d9a3d9cdbc655115803d6fb5ad38e9adc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d15ac9d9a3d9cdbc655115803d6fb5ad38e9adc8"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "70ae7f207d699c92c7c379d50e809af5ab003e4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0078f46235ecf1097513fa0faad3e841a30ae1c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0078f46235ecf1097513fa0faad3e841a30ae1c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0078f46235ecf1097513fa0faad3e841a30ae1c7", "patch": "@@ -1,3 +1,9 @@\n+2013-09-20  Basile Starynkevitch  <basile@starynkevitch.net>\n+\n+       * gengtype.c (file_rules): Added rule for *.cc files.\n+       (get_output_file_with_visibility): Give fatal message when no\n+       rules found.\n+\n 2013-09-20  Renlin Li  <renlin.li@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_expand_prologue): Use plus_constant."}, {"sha": "ce60c788012406104fb1615bb419bcd22b334158", "filename": "gcc/gengtype.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0078f46235ecf1097513fa0faad3e841a30ae1c7/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0078f46235ecf1097513fa0faad3e841a30ae1c7/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=0078f46235ecf1097513fa0faad3e841a30ae1c7", "patch": "@@ -2004,14 +2004,21 @@ struct file_rule_st files_rules[] = {\n     REG_EXTENDED, NULL_REGEX,\n     \"gt-objc-objc-map.h\", \"objc/objc-map.c\", NULL_FRULACT },\n \n-  /* General cases.  For header *.h and source *.c files, we need\n-   * special actions to handle the language.  */\n+  /* General cases.  For header *.h and source *.c or *.cc files, we\n+   * need special actions to handle the language.  */\n \n   /* Source *.c files are using get_file_gtfilename to compute their\n      output_name and get_file_basename to compute their for_name\n      through the source_dot_c_frul action.  */\n   { DIR_PREFIX_REGEX \"([[:alnum:]_-]*)\\\\.c$\",\n     REG_EXTENDED, NULL_REGEX, \"gt-$3.h\", \"$3.c\", source_dot_c_frul},\n+\n+  /* Source *.cc files are using get_file_gtfilename to compute their\n+     output_name and get_file_basename to compute their for_name\n+     through the source_dot_c_frul action.  */\n+  { DIR_PREFIX_REGEX \"([[:alnum:]_-]*)\\\\.cc$\",\n+    REG_EXTENDED, NULL_REGEX, \"gt-$3.h\", \"$3.cc\", source_dot_c_frul},\n+\n   /* Common header files get \"gtype-desc.c\" as their output_name,\n    * while language specific header files are handled specially.  So\n    * we need the header_dot_h_frul action.  */\n@@ -2269,9 +2276,9 @@ get_output_file_with_visibility (input_file *inpf)\n   }\n   if (!output_name || !for_name)\n     {\n-      /* This is impossible, and could only happen if the files_rules is\n-\t incomplete or buggy.  */\n-      gcc_unreachable ();\n+      /* This should not be possible, and could only happen if the\n+\t files_rules is incomplete or buggy.  */\n+      fatal (\"failed to compute output name for %s\", inpfname);\n     }\n \n   /* Look through to see if we've ever seen this output filename"}]}