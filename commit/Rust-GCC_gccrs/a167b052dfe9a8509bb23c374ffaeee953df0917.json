{"sha": "a167b052dfe9a8509bb23c374ffaeee953df0917", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE2N2IwNTJkZmU5YTg1MDliYjIzYzM3NGZmYWVlZTk1M2RmMDkxNw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2013-07-31T00:48:03Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2013-07-31T00:48:03Z"}, "message": "Introduce gen-pass-instances.awk and pass-instances.def\n\nIntroduce a new gen-pass-instances.awk script, and use it at build time\nto make a pass-instances.def from passes.def.\n\ngcc/\n\n\t* Makefile.in (pass-instances.def): New.\n\t(passes.o): Replace dependency on passes.def with one on\n\tpass-instances.def\n\n\t* gen-pass-instances.awk: New.\n\n\t* passes.c (pass_manager::pass_manager): Use pass-instances.def\n\trather than passes.def, updating local definition of NEXT_PASS\n\tmacro to add an extra NUM parameter (currently unused).\n\nFrom-SVN: r201359", "tree": {"sha": "fd69d628e5fda1a2454b09e4278c6a6dcf98db83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd69d628e5fda1a2454b09e4278c6a6dcf98db83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a167b052dfe9a8509bb23c374ffaeee953df0917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a167b052dfe9a8509bb23c374ffaeee953df0917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a167b052dfe9a8509bb23c374ffaeee953df0917", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a167b052dfe9a8509bb23c374ffaeee953df0917/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "abf1719efeb6782e8a596ecbc36557890c688582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf1719efeb6782e8a596ecbc36557890c688582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf1719efeb6782e8a596ecbc36557890c688582"}], "stats": {"total": 88, "additions": 85, "deletions": 3}, "files": [{"sha": "d8bc3c88618062adf6cd6350fc1b9e66de2e6148", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a167b052dfe9a8509bb23c374ffaeee953df0917/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a167b052dfe9a8509bb23c374ffaeee953df0917/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a167b052dfe9a8509bb23c374ffaeee953df0917", "patch": "@@ -1,3 +1,15 @@\n+2013-07-31  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* Makefile.in (pass-instances.def): New.\n+\t(passes.o): Replace dependency on passes.def with one on\n+\tpass-instances.def\n+\n+\t* gen-pass-instances.awk: New.\n+\n+\t* passes.c (pass_manager::pass_manager): Use pass-instances.def\n+\trather than passes.def, updating local definition of NEXT_PASS\n+\tmacro to add an extra NUM parameter (currently unused).\n+\n 2013-07-30  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Makefile.in (PASS_MANAGER_H): New."}, {"sha": "40ad19da085feb579356dfcb6388bfa7b38e3f27", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a167b052dfe9a8509bb23c374ffaeee953df0917/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a167b052dfe9a8509bb23c374ffaeee953df0917/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a167b052dfe9a8509bb23c374ffaeee953df0917", "patch": "@@ -2737,6 +2737,10 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \n hwint.o : hwint.c $(CONFIG_H) $(SYSTEM_H) $(DIAGNOSTIC_CORE_H)\n \n+pass-instances.def: $(srcdir)/passes.def $(srcdir)/gen-pass-instances.awk\n+\t$(AWK) -f $(srcdir)/gen-pass-instances.awk \\\n+\t  $(srcdir)/passes.def > pass-instances.def\n+\n passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FUNCTION_H) $(FLAGS_H) $(INPUT_H) $(INSN_ATTR_H) output.h \\\n    $(DIAGNOSTIC_CORE_H) debug.h insn-config.h intl.h $(RECOG_H) toplev.h \\\n@@ -2747,7 +2751,7 @@ passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    hosthooks.h $(CGRAPH_H) $(COVERAGE_H) $(TREE_PASS_H) $(TREE_DUMP_H) \\\n    $(GGC_H) $(OPTS_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n    gt-passes.h $(DF_H) $(PREDICT_H) $(LTO_STREAMER_H) \\\n-   $(PLUGIN_H) $(IPA_UTILS_H) passes.def \\\n+   $(PLUGIN_H) $(IPA_UTILS_H) pass-instances.def \\\n    $(CONTEXT_H) $(PASS_MANAGER_H)\n \n plugin.o : plugin.c $(PLUGIN_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\"}, {"sha": "41b5e75f781e5c6f1fd96691a9700b43063efcff", "filename": "gcc/gen-pass-instances.awk", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a167b052dfe9a8509bb23c374ffaeee953df0917/gcc%2Fgen-pass-instances.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a167b052dfe9a8509bb23c374ffaeee953df0917/gcc%2Fgen-pass-instances.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgen-pass-instances.awk?ref=a167b052dfe9a8509bb23c374ffaeee953df0917", "patch": "@@ -0,0 +1,66 @@\n+#  Copyright (C) 2013 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by the\n+# Free Software Foundation; either version 3, or (at your option) any\n+# later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This Awk script takes passes.def and writes pass-instances.def,\n+# counting the instances of each kind of pass, adding an instance number\n+# to everywhere that NEXT_PASS is used.\n+#\n+# For example, the single-instanced pass:\n+#     NEXT_PASS (pass_warn_unused_result);\n+# becomes this in the output:\n+#     NEXT_PASS (pass_warn_unused_result, 1);\n+#\n+# The various instances of\n+#   NEXT_PASS (pass_copy_prop);\n+# become:\n+#   NEXT_PASS (pass_copy_prop, 1);\n+# through:\n+#   NEXT_PASS (pass_copy_prop, 8);\n+# (currently there are 8 instances of that pass)\n+\n+# Usage: awk -f gen-pass-instances.awk passes.def\n+\n+BEGIN {\n+\tprint \"/* This file is auto-generated by gen-pass-instances.awk\";\n+\tprint \"   from passes.def.  */\";\n+}\n+\n+function handle_line()\n+{\n+\tline = $0;\n+\twhere = match(line, /NEXT_PASS \\((.+)\\)/)\n+\tif (where != 0)\n+\t{\n+\t\tlen_of_start = length(\"NEXT_PASS (\")\n+\t\tlen_of_end = length(\")\")\n+\t\tlen_of_pass_name = RLENGTH - (len_of_start + len_of_end)\n+\t\tline_length = length(line)\n+\t\tpass_starts_at = where + len_of_start\n+\t\tpass_name = substr(line, pass_starts_at, len_of_pass_name)\n+\t\tif (pass_name in pass_counts)\n+\t\t\tpass_counts[pass_name]++;\n+\t\telse\n+\t\t\tpass_counts[pass_name] = 1;\n+\t\tprintf \"%s, %s%s\\n\",\n+\t\t\tsubstr(line, 0, pass_starts_at + len_of_pass_name - 1),\n+\t\t\tpass_counts[pass_name],\n+\t\t\tsubstr(line, pass_starts_at + len_of_pass_name);\n+\t} else {\n+\t\tprint line;\n+\t}\n+}\n+\n+{ handle_line() }"}, {"sha": "a43a58809af38fc35ca641197b7b6509a8aee037", "filename": "gcc/passes.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a167b052dfe9a8509bb23c374ffaeee953df0917/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a167b052dfe9a8509bb23c374ffaeee953df0917/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=a167b052dfe9a8509bb23c374ffaeee953df0917", "patch": "@@ -1315,12 +1315,12 @@ pass_manager::pass_manager (context *ctxt)\n #define POP_INSERT_PASSES() \\\n   }\n \n-#define NEXT_PASS(PASS)  (p = next_pass_1 (p, &((PASS).pass)))\n+#define NEXT_PASS(PASS, NUM)  (p = next_pass_1 (p, &((PASS).pass)))\n \n #define TERMINATE_PASS_LIST() \\\n   *p = NULL;\n \n-#include \"passes.def\"\n+#include \"pass-instances.def\"\n \n #undef INSERT_PASSES_AFTER\n #undef PUSH_INSERT_PASSES_WITHIN"}]}