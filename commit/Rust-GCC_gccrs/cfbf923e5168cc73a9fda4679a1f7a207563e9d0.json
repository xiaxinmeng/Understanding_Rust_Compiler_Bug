{"sha": "cfbf923e5168cc73a9fda4679a1f7a207563e9d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZiZjkyM2U1MTY4Y2M3M2E5ZmRhNDY3OWExZjdhMjA3NTYzZTlkMA==", "commit": {"author": {"name": "Matthew Gretton-Dann", "email": "mgretton@gcc.gnu.org", "date": "2012-02-28T16:17:36Z"}, "committer": {"name": "Matthew Gretton-Dann", "email": "mgretton@gcc.gnu.org", "date": "2012-02-28T16:17:36Z"}, "message": "re PR target/51534 (Bad code gen for vcgtq_u32 NEON intrinsic)\n\n\tPR target/51534\n\tAdd testcase forgotten in last commit, ChangeLog entry already present.\n\nFrom-SVN: r184630", "tree": {"sha": "de15dd705e781e184c973a590612fd81c6b81485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de15dd705e781e184c973a590612fd81c6b81485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfbf923e5168cc73a9fda4679a1f7a207563e9d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfbf923e5168cc73a9fda4679a1f7a207563e9d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfbf923e5168cc73a9fda4679a1f7a207563e9d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfbf923e5168cc73a9fda4679a1f7a207563e9d0/comments", "author": null, "committer": null, "parents": [{"sha": "fd92bb80a81651c7eb2159da03b39ba098890bc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd92bb80a81651c7eb2159da03b39ba098890bc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd92bb80a81651c7eb2159da03b39ba098890bc1"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "71cbb055f1667df57e9092433b535b3a567e0fa2", "filename": "gcc/testsuite/gcc.target/arm/neon/pr51534.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfbf923e5168cc73a9fda4679a1f7a207563e9d0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fpr51534.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfbf923e5168cc73a9fda4679a1f7a207563e9d0/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fpr51534.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fpr51534.c?ref=cfbf923e5168cc73a9fda4679a1f7a207563e9d0", "patch": "@@ -0,0 +1,84 @@\n+/* Test the vector comparison intrinsics when comparing to immediate zero.\n+   */\n+\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -mfloat-abi=hard -O3\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include <arm_neon.h>\n+\n+#define GEN_TEST(T, D, C, R) \\\n+  R test_##C##_##T (T a) { return C (a, D (0)); }\n+\n+#define GEN_DOUBLE_TESTS(S, T, C) \\\n+  GEN_TEST (T, vdup_n_s##S, C##_s##S, u##T) \\\n+  GEN_TEST (u##T, vdup_n_u##S, C##_u##S, u##T) \n+\n+#define GEN_QUAD_TESTS(S, T, C) \\\n+  GEN_TEST (T, vdupq_n_s##S, C##q_s##S, u##T) \\\n+  GEN_TEST (u##T, vdupq_n_u##S, C##q_u##S, u##T) \n+\n+#define GEN_COND_TESTS(C) \\\n+  GEN_DOUBLE_TESTS (8, int8x8_t, C) \\\n+  GEN_DOUBLE_TESTS (16, int16x4_t, C) \\\n+  GEN_DOUBLE_TESTS (32, int32x2_t, C) \\\n+  GEN_QUAD_TESTS (8, int8x16_t, C) \\\n+  GEN_QUAD_TESTS (16, int16x8_t, C) \\\n+  GEN_QUAD_TESTS (32, int32x4_t, C)\n+\n+GEN_COND_TESTS(vcgt)\n+GEN_COND_TESTS(vcge)\n+GEN_COND_TESTS(vclt)\n+GEN_COND_TESTS(vcle)\n+GEN_COND_TESTS(vceq)\n+\n+/* Scan for expected outputs.  */\n+/* { dg-final { scan-assembler \"vcgt\\.s8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcgt\\.u8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcgt\\.u16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcgt\\.u32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcgt\\.u8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcgt\\.u16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcgt\\.u32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcge\\.s8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcge\\.u8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcge\\.s16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcge\\.u16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcge\\.s32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcge\\.u32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcge\\.s8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcge\\.u8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcge\\.s16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcge\\.u16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcge\\.s32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" } } */\n+/* { dg-final { scan-assembler-times \"vcge\\.u32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcgt\\.s32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcge\\.s8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcge\\.s16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcge\\.s32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcge\\.s8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcge\\.s16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler \"vcge\\.s32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i8\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i16\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i32\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #0\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i8\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i16\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i32\\[ \t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #0\" 2 } } */\n+\n+/* And ensure we don't have unexpected output too.  */\n+/* { dg-final { scan-assembler-not \"vc\\[gl\\]\\[te\\]\\.u\\[0-9\\]+\\[ \t\\]+\\[qQdD\\]\\[0-9\\]+, \\[qQdD\\]\\[0-9\\]+, #0\" } } */\n+\n+/* Tidy up.  */\n+/* { dg-final { cleanup-saved-temps } } */"}]}