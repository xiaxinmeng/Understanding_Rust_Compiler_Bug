{"sha": "dc764d10fa02c67d5a8748ce5f4c14096224ff89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM3NjRkMTBmYTAyYzY3ZDVhODc0OGNlNWY0YzE0MDk2MjI0ZmY4OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-05-13T20:02:42Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-05-13T20:02:42Z"}, "message": "cfgrtl.c (cfg_layout_redirect_edge_and_branch): Adjust dump message.\n\n\t* cfgrtl.c (cfg_layout_redirect_edge_and_branch): Adjust dump message.\n\t* regcprop.c (copyprop_hardreg_forward): Test MAY_HAVE_DEBUG_INSNS in\n\tlieu of MAY_HAVE_DEBUG_STMTS.\n\t* tree-cfgcleanup.c (remove_forwarder_block): Do not attempt to move\n\tdebug statements if !MAY_HAVE_DEBUG_STMTS.\n\nFrom-SVN: r173737", "tree": {"sha": "6cc3d5af3a75d2926126cff2aad2414c5b228316", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cc3d5af3a75d2926126cff2aad2414c5b228316"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc764d10fa02c67d5a8748ce5f4c14096224ff89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc764d10fa02c67d5a8748ce5f4c14096224ff89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc764d10fa02c67d5a8748ce5f4c14096224ff89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc764d10fa02c67d5a8748ce5f4c14096224ff89/comments", "author": null, "committer": null, "parents": [{"sha": "75933b07b7a2b35b731e4f66e69eb800a824595e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75933b07b7a2b35b731e4f66e69eb800a824595e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75933b07b7a2b35b731e4f66e69eb800a824595e"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "d1a0b673c38ce76052683ecc0c1a8975fdf23519", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc764d10fa02c67d5a8748ce5f4c14096224ff89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc764d10fa02c67d5a8748ce5f4c14096224ff89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc764d10fa02c67d5a8748ce5f4c14096224ff89", "patch": "@@ -1,3 +1,11 @@\n+2011-05-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cfgrtl.c (cfg_layout_redirect_edge_and_branch): Adjust dump message.\n+\t* regcprop.c (copyprop_hardreg_forward): Test MAY_HAVE_DEBUG_INSNS in\n+\tlieu of MAY_HAVE_DEBUG_STMTS.\n+\t* tree-cfgcleanup.c (remove_forwarder_block): Do not attempt to move\n+\tdebug statements if !MAY_HAVE_DEBUG_STMTS.\n+\n 2011-05-13  Martin Thuresson  <martint@google.com>\n \n \tPR gcov-profile/47793\n@@ -23,8 +31,7 @@\n \n 2011-05-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* config/i386/i386.c (ix86_save_reg): Change return type to\n-\tbool.\n+\t* config/i386/i386.c (ix86_save_reg): Change return type to bool.\n \t(ix86_hard_regno_mode_ok): Change return value to bool.  Use\n \tcan_create_pseudo_p ().\n "}, {"sha": "482568c921ec9f778868eb061551b9df6aa8c478", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc764d10fa02c67d5a8748ce5f4c14096224ff89/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc764d10fa02c67d5a8748ce5f4c14096224ff89/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=dc764d10fa02c67d5a8748ce5f4c14096224ff89", "patch": "@@ -2608,7 +2608,7 @@ cfg_layout_redirect_edge_and_branch (edge e, basic_block dest)\n \t    delete_insn (BB_END (src));\n \t}\n       if (dump_file)\n-\tfprintf (dump_file, \"Fallthru edge %i->%i redirected to %i\\n\",\n+\tfprintf (dump_file, \"Redirecting fallthru edge %i->%i to %i\\n\",\n \t\t e->src->index, e->dest->index, dest->index);\n       ret = redirect_edge_succ_nodup (e, dest);\n     }"}, {"sha": "bf34115f1dc64023b79b3364896ec2263a756603", "filename": "gcc/regcprop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc764d10fa02c67d5a8748ce5f4c14096224ff89/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc764d10fa02c67d5a8748ce5f4c14096224ff89/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=dc764d10fa02c67d5a8748ce5f4c14096224ff89", "patch": "@@ -990,7 +990,7 @@ copyprop_hardreg_forward (void)\n   visited = sbitmap_alloc (last_basic_block);\n   sbitmap_zero (visited);\n \n-  if (MAY_HAVE_DEBUG_STMTS)\n+  if (MAY_HAVE_DEBUG_INSNS)\n     debug_insn_changes_pool\n       = create_alloc_pool (\"debug insn changes pool\",\n \t\t\t   sizeof (struct queued_debug_insn_change), 256);\n@@ -1029,7 +1029,7 @@ copyprop_hardreg_forward (void)\n       copyprop_hardreg_forward_1 (bb, all_vd + bb->index);\n     }\n \n-  if (MAY_HAVE_DEBUG_STMTS)\n+  if (MAY_HAVE_DEBUG_INSNS)\n     {\n       FOR_EACH_BB (bb)\n \tif (TEST_BIT (visited, bb->index)"}, {"sha": "ad8e4777a0578bea20786fcc4ef0f6b75f9e3e82", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc764d10fa02c67d5a8748ce5f4c14096224ff89/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc764d10fa02c67d5a8748ce5f4c14096224ff89/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=dc764d10fa02c67d5a8748ce5f4c14096224ff89", "patch": "@@ -420,7 +420,7 @@ remove_forwarder_block (basic_block bb)\n \t}\n     }\n \n-  can_move_debug_stmts = single_pred_p (dest);\n+  can_move_debug_stmts = MAY_HAVE_DEBUG_STMTS && single_pred_p (dest);\n \n   /* Redirect the edges.  */\n   for (ei = ei_start (bb->preds); (e = ei_safe_edge (ei)); )\n@@ -476,8 +476,7 @@ remove_forwarder_block (basic_block bb)\n \tgsi_next (&gsi);\n     }\n \n-  /* Move debug statements if the destination has just a single\n-     predecessor.  */\n+  /* Move debug statements if the destination has a single predecessor.  */\n   if (can_move_debug_stmts)\n     {\n       gsi_to = gsi_after_labels (dest);"}]}