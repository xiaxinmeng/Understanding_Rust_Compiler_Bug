{"sha": "ced2ec3b26ff0a64c3bbfdc1d0e47db1bc90d3a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VkMmVjM2IyNmZmMGE2NGMzYmJmZGMxZDBlNDdkYjFiYzkwZDNhMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-11T06:34:57Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-11T06:34:57Z"}, "message": "Don't get confused using type of erronous binary expression.\n\nFrom-SVN: r170043", "tree": {"sha": "0570bc9b010648b8cec52d7e17b413f268965819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0570bc9b010648b8cec52d7e17b413f268965819"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ced2ec3b26ff0a64c3bbfdc1d0e47db1bc90d3a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ced2ec3b26ff0a64c3bbfdc1d0e47db1bc90d3a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ced2ec3b26ff0a64c3bbfdc1d0e47db1bc90d3a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ced2ec3b26ff0a64c3bbfdc1d0e47db1bc90d3a3/comments", "author": null, "committer": null, "parents": [{"sha": "4a087ccf224d8cc2ba2e06571cd90a18408be4be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a087ccf224d8cc2ba2e06571cd90a18408be4be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a087ccf224d8cc2ba2e06571cd90a18408be4be"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "96636c1b2331750ae71a89140d024a25c9e16d12", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ced2ec3b26ff0a64c3bbfdc1d0e47db1bc90d3a3/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ced2ec3b26ff0a64c3bbfdc1d0e47db1bc90d3a3/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=ced2ec3b26ff0a64c3bbfdc1d0e47db1bc90d3a3", "patch": "@@ -5412,6 +5412,9 @@ Binary_expression::do_discarding_value()\n Type*\n Binary_expression::do_type()\n {\n+  if (this->classification() == EXPRESSION_ERROR)\n+    return Type::make_error_type();\n+\n   switch (this->op_)\n     {\n     case OPERATOR_OROR:\n@@ -5440,6 +5443,11 @@ Binary_expression::do_type()\n \t  return left_type;\n \telse if (right_type->is_error_type())\n \t  return right_type;\n+\telse if (!Type::are_compatible_for_binop(left_type, right_type))\n+\t  {\n+\t    this->report_error(_(\"incompatible types in binary expression\"));\n+\t    return Type::make_error_type();\n+\t  }\n \telse if (!left_type->is_abstract() && left_type->named_type() != NULL)\n \t  return left_type;\n \telse if (!right_type->is_abstract() && right_type->named_type() != NULL)\n@@ -5667,6 +5675,9 @@ Binary_expression::check_operator_type(Operator op, Type* type,\n void\n Binary_expression::do_check_types(Gogo*)\n {\n+  if (this->classification() == EXPRESSION_ERROR)\n+    return;\n+\n   Type* left_type = this->left_->type();\n   Type* right_type = this->right_->type();\n   if (left_type->is_error_type() || right_type->is_error_type())"}]}