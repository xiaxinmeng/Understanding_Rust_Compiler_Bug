{"sha": "aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVlNjkxNTZkYWVlMmU5Y2E4ZTlmODBlY2QxYzViOGM4MDg5NDZmNQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2016-10-31T16:52:23Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2016-10-31T16:52:23Z"}, "message": "Add tests for a const member and a reference member for launder.\n\n* g++.dg/cpp1z/launder3.C: New.\n* g++.dg/cpp1z/launder4.C: Likewise.\n* g++.dg/cpp1z/launder5.C: Likewise.\n* g++.dg/cpp1z/launder5.cc: Likewise.\n* g++.dg/cpp1z/launder5.h: Likewise.\n* g++.dg/cpp1z/launder6.C: Likewise.\n* g++.dg/cpp1z/launder6.cc: Likewise.\n* g++.dg/cpp1z/launder6.h: Likewise.\n\nFrom-SVN: r241708", "tree": {"sha": "e43e3b313a49657f2e95b3e41be2de5b6a8966dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e43e3b313a49657f2e95b3e41be2de5b6a8966dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcb466eca3741d1cb06acb44a4009657cd475781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb466eca3741d1cb06acb44a4009657cd475781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb466eca3741d1cb06acb44a4009657cd475781"}], "stats": {"total": 197, "additions": 197, "deletions": 0}, "files": [{"sha": "58d5ce2b80e9ca59c1666411a41f722ae2049d9c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -1,3 +1,15 @@\n+2016-10-31  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tAdd tests for a const member and a reference member for launder.\n+\t* g++.dg/cpp1z/launder3.C: New.\n+\t* g++.dg/cpp1z/launder4.C: Likewise.\n+\t* g++.dg/cpp1z/launder5.C: Likewise.\n+\t* g++.dg/cpp1z/launder5.cc: Likewise.\n+\t* g++.dg/cpp1z/launder5.h: Likewise.\n+\t* g++.dg/cpp1z/launder6.C: Likewise.\n+\t* g++.dg/cpp1z/launder6.cc: Likewise.\n+\t* g++.dg/cpp1z/launder6.h: Likewise.\n+\n 2016-10-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/77948"}, {"sha": "2a2afc5cad1e4cc216a234f945c89b2044c6302c", "filename": "gcc/testsuite/g++.dg/cpp1z/launder3.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder3.C?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -0,0 +1,38 @@\n+// { dg-do run { target c++11 } }\n+// { dg-additional-options \"-O2\" }\n+\n+#include <cassert>\n+\n+void *\n+operator new (decltype (sizeof (0)), void *p)\n+{\n+  return p;\n+}\n+\n+namespace std\n+{\n+  template <typename T>\n+  T *\n+  launder (T *p)\n+  {\n+    return __builtin_launder (p);\n+  }\n+}\n+\n+struct A\n+{\n+  const int x;\n+};\n+\n+struct B\n+{\n+  A a;\n+};\n+\n+int\n+main ()\n+{\n+  B b{{42}};\n+  new (&b.a) A{666};\n+  assert(std::launder(&b.a)->x == 666);\n+}"}, {"sha": "3a65eb27f2e86958afca4265f683a11d215e21be", "filename": "gcc/testsuite/g++.dg/cpp1z/launder4.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder4.C?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -0,0 +1,40 @@\n+// { dg-do run { target c++11 } }\n+// { dg-additional-options \"-O2\" }\n+\n+#include <cassert>\n+\n+void *\n+operator new (decltype (sizeof (0)), void *p)\n+{\n+  return p;\n+}\n+\n+namespace std\n+{\n+  template <typename T>\n+  T *\n+  launder (T *p)\n+  {\n+    return __builtin_launder (p);\n+  }\n+}\n+\n+struct A\n+{\n+  int& x;\n+};\n+\n+struct B\n+{\n+  A a;\n+};\n+\n+int\n+main ()\n+{\n+  int x = 42;\n+  B b{{x}};\n+  int y = 666;\n+  new (&b.a) A{y};\n+  assert(std::launder(&b.a)->x == 666);\n+}"}, {"sha": "483d6f29297753b0f5b410add80e26fcea1de3e5", "filename": "gcc/testsuite/g++.dg/cpp1z/launder5.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.C?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do run { target c++11 } }\n+// { dg-additional-options \"-O2\" }\n+// { dg-additional-sources \"launder5.cc\" }\n+\n+#include <cassert>\n+#include \"launder5.h\"\n+\n+namespace std\n+{\n+  template <typename T>\n+  T *\n+  launder (T *p)\n+  {\n+    return __builtin_launder (p);\n+  }\n+}\n+\n+\n+int\n+main ()\n+{\n+  B b{{42}};\n+  f(b);\n+  assert(std::launder(&b.a)->x == 666);\n+}"}, {"sha": "f9d867db332a9d3cc763409754d6f18e00f395ef", "filename": "gcc/testsuite/g++.dg/cpp1z/launder5.cc", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.cc?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -0,0 +1,12 @@\n+#include \"launder5.h\"\n+\n+void *\n+operator new (decltype (sizeof (0)), void *p)\n+{\n+  return p;\n+}\n+\n+void f(B& b)\n+{\n+  new (&b.a) A{666};\n+}"}, {"sha": "b66103aefbacc2a267af59be55b656e80b71011f", "filename": "gcc/testsuite/g++.dg/cpp1z/launder5.h", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder5.h?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -0,0 +1,16 @@\n+#ifndef GCC_TEST_LAUNDER5_H\n+#define GCC_TEST_LAUNDER5_H\n+\n+struct A\n+{\n+  const int x;\n+};\n+\n+struct B\n+{\n+  A a;\n+};\n+\n+void f(B& b);\n+\n+#endif"}, {"sha": "babc4b433ad78847f460a5145a2dfa38cc5db2a5", "filename": "gcc/testsuite/g++.dg/cpp1z/launder6.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.C?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -0,0 +1,24 @@\n+// { dg-do run { target c++11 } }\n+// { dg-additional-options \"-O2\" }\n+// { dg-additional-sources \"launder6.cc\" }\n+#include <cassert>\n+#include \"launder6.h\"\n+\n+namespace std\n+{\n+  template <typename T>\n+  T *\n+  launder (T *p)\n+  {\n+    return __builtin_launder (p);\n+  }\n+}\n+\n+int\n+main ()\n+{\n+  int x = 42;\n+  B b{{x}};\n+  f(b);\n+  assert(std::launder(&b.a)->x == 666);\n+}"}, {"sha": "1822891a0a07697f8313e71a3796ac5f625ceb76", "filename": "gcc/testsuite/g++.dg/cpp1z/launder6.cc", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.cc?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -0,0 +1,14 @@\n+#include \"launder6.h\"\n+\n+void *\n+operator new (decltype (sizeof (0)), void *p)\n+{\n+  return p;\n+}\n+\n+int y = 666;\n+\n+void f(B& b)\n+{\n+  new (&b.a) A{y};\n+}"}, {"sha": "eca2ad46f18648637e2b8b41dd46ccc9428ad739", "filename": "gcc/testsuite/g++.dg/cpp1z/launder6.h", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee69156daee2e9ca8e9f80ecd1c5b8c808946f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flaunder6.h?ref=aee69156daee2e9ca8e9f80ecd1c5b8c808946f5", "patch": "@@ -0,0 +1,16 @@\n+#ifndef GCC_TEST_LAUNDER6_H\n+#define GCC_TEST_LAUNDER6_H\n+\n+struct A\n+{\n+  int& x;\n+};\n+\n+struct B\n+{\n+  A a;\n+};\n+\n+void f(B& b);\n+\n+#endif"}]}