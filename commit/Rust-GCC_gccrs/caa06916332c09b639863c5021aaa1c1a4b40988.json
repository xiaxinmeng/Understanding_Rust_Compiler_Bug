{"sha": "caa06916332c09b639863c5021aaa1c1a4b40988", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FhMDY5MTYzMzJjMDliNjM5ODYzYzUwMjFhYWExYzFhNGI0MDk4OA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-09-26T20:21:19Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-09-26T20:21:19Z"}, "message": "Fix sparc %gsr write elimination and add a testcase.\n\ngcc/\n\n\t* config/sparc/sparc.c (sparc_conditional_register_usage): When VIS\n\tis enabled, mark %gsr as global.\n\t* config/sparc/sparc.md (UNSPEC_WRGSR): Delete.\n\t(wrgsr_vis, *wrgsr_sp64, wrgsr_v8plus): Don't wrap in an unspec.\n\ngcc/testsuite/\n\n\t* gcc.target/sparc/wrgsr.c: New test.\n\nFrom-SVN: r179214", "tree": {"sha": "f1a2d8655f444bedd16919923de7767bf94e1f5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1a2d8655f444bedd16919923de7767bf94e1f5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caa06916332c09b639863c5021aaa1c1a4b40988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caa06916332c09b639863c5021aaa1c1a4b40988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caa06916332c09b639863c5021aaa1c1a4b40988", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caa06916332c09b639863c5021aaa1c1a4b40988/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef71fdd925864fd461bd18cd52218495b457b29b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef71fdd925864fd461bd18cd52218495b457b29b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef71fdd925864fd461bd18cd52218495b457b29b"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "53afbd97fc72443999eeba05e29f3eed69480e48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=caa06916332c09b639863c5021aaa1c1a4b40988", "patch": "@@ -1,5 +1,10 @@\n 2011-09-26  David S. Miller  <davem@davemloft.net>\n \n+\t* config/sparc/sparc.c (sparc_conditional_register_usage): When VIS\n+\tis enabled, mark %gsr as global.\n+\t* config/sparc/sparc.md (UNSPEC_WRGSR): Delete.\n+\t(wrgsr_vis, *wrgsr_sp64, wrgsr_v8plus): Don't wrap in an unspec.\n+\n \t* config/sparc/sparc-c.c: New file implementing sparc_target_macros,\n \twhich will now define __VIS and __VIS__ when -mvis is enabled.\n \t* config/sparc/t-sparc: Likewise."}, {"sha": "a395321dd3e9ecda6265d0c429e53a5d0954ff37", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=caa06916332c09b639863c5021aaa1c1a4b40988", "patch": "@@ -10426,6 +10426,8 @@ sparc_conditional_register_usage (void)\n       for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n \tleaf_reg_remap [regno] = regno;\n     }\n+  if (TARGET_VIS)\n+    global_regs[SPARC_GSR_REG] = 1;\n }\n \n /* Implement TARGET_PREFERRED_RELOAD_CLASS"}, {"sha": "e79e842eadec9c379d0f90544b9e42f74ff44d53", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=caa06916332c09b639863c5021aaa1c1a4b40988", "patch": "@@ -58,7 +58,7 @@\n    (UNSPEC_MUL8UL\t\t46)\n    (UNSPEC_MULDUL\t\t47)\n    (UNSPEC_ALIGNDATA\t\t48)\n-   (UNSPEC_WRGSR                49)\n+\n    (UNSPEC_PDIST\t\t50)\n    (UNSPEC_EDGE8\t\t51)\n    (UNSPEC_EDGE8L\t\t52)\n@@ -7953,8 +7953,7 @@\n    (set_attr \"fptype\" \"double\")])\n \n (define_expand \"wrgsr_vis\"\n-  [(set (reg:DI GSR_REG) (unspec:DI [(match_operand:DI 0 \"arith_operand\" \"\")]\n-                                    UNSPEC_WRGSR))]\n+  [(set (reg:DI GSR_REG) (match_operand:DI 0 \"arith_operand\" \"\"))]\n   \"TARGET_VIS\"\n {\n   if (! TARGET_ARCH64)\n@@ -7965,15 +7964,13 @@\n })\n \n (define_insn \"*wrgsr_sp64\"\n-  [(set (reg:DI GSR_REG) (unspec:DI [(match_operand:DI 0 \"arith_operand\" \"rI\")]\n-                                    UNSPEC_WRGSR))]\n+  [(set (reg:DI GSR_REG) (match_operand:DI 0 \"arith_operand\" \"rI\"))]\n   \"TARGET_VIS && TARGET_ARCH64\"\n   \"wr\\t%%g0, %0, %%gsr\"\n   [(set_attr \"type\" \"gsr\")])\n \n (define_insn \"wrgsr_v8plus\"\n-  [(set (reg:DI GSR_REG) (unspec:DI [(match_operand:DI 0 \"arith_operand\" \"I,r\")]\n-                                    UNSPEC_WRGSR))\n+  [(set (reg:DI GSR_REG) (match_operand:DI 0 \"arith_operand\" \"I,r\"))\n    (clobber (match_scratch:SI 1 \"=X,&h\"))]\n   \"TARGET_VIS && ! TARGET_ARCH64\"\n {"}, {"sha": "c8619b89f4729a7e87c9de2ef03785082c1066ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=caa06916332c09b639863c5021aaa1c1a4b40988", "patch": "@@ -1,3 +1,7 @@\n+2011-09-26  David S. Miller  <davem@davemloft.net>\n+\n+\t* gcc.target/sparc/wrgsr.c: New test.\n+\n 2011-09-26  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/50515"}, {"sha": "6cfa0603a2a04dbeddc279d73efc0a6fdbc4b983", "filename": "gcc/testsuite/gcc.target/sparc/wrgsr.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fwrgsr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caa06916332c09b639863c5021aaa1c1a4b40988/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fwrgsr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fwrgsr.c?ref=caa06916332c09b639863c5021aaa1c1a4b40988", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=ultrasparc -mvis\" } */\n+\n+void set_gsr (void)\n+{\n+\t__builtin_vis_write_gsr (2 << 3);\n+}\n+\n+void set_gsr2 (long x)\n+{\n+\t__builtin_vis_write_gsr (x);\n+}\n+\n+/* { dg-final { scan-assembler \"wr\\t%g0, 16, %gsr\" } } */\n+/* { dg-final { scan-assembler \"wr\\t%g0, %\" } } */"}]}