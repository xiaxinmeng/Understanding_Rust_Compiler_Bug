{"sha": "60c7a11a30c307068de2d0e2881c5c7465ba44b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBjN2ExMWEzMGMzMDcwNjhkZTJkMGUyODgxYzVjNzQ2NWJhNDRiNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-05-30T17:48:10Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-05-30T17:48:10Z"}, "message": "re PR java/32098 (New libtool doesn't support libjava)\n\n2007-05-30  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR libjava/32098\n\t* libtool.m4 (_LT_LANG_GCJ_CONFIG): Use gcc to test gcj features.\n\nFrom-SVN: r125193", "tree": {"sha": "adfa6d442f0557fe79b4eb9707c0333d7d6025d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adfa6d442f0557fe79b4eb9707c0333d7d6025d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60c7a11a30c307068de2d0e2881c5c7465ba44b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c7a11a30c307068de2d0e2881c5c7465ba44b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60c7a11a30c307068de2d0e2881c5c7465ba44b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c7a11a30c307068de2d0e2881c5c7465ba44b7/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5abc5de9717ff675b52a8c1453ac83ef65ec5eb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5abc5de9717ff675b52a8c1453ac83ef65ec5eb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5abc5de9717ff675b52a8c1453ac83ef65ec5eb9"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "f7783322ca6290b7505644b8bf466b3373d9ccd7", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c7a11a30c307068de2d0e2881c5c7465ba44b7/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c7a11a30c307068de2d0e2881c5c7465ba44b7/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=60c7a11a30c307068de2d0e2881c5c7465ba44b7", "patch": "@@ -1,3 +1,8 @@\n+2007-05-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libjava/32098\n+\t* libtool.m4 (_LT_LANG_GCJ_CONFIG): Use gcc to test gcj features.\n+\n 2007-05-30  Richard Guenther  <rguenther@suse.de>\n \n \t* MAINTAINERS (Various Maintainers): Add myself as"}, {"sha": "e4986cadf79e7c60d86a3bcdb90c884af3e19a14", "filename": "libtool.m4", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c7a11a30c307068de2d0e2881c5c7465ba44b7/libtool.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c7a11a30c307068de2d0e2881c5c7465ba44b7/libtool.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libtool.m4?ref=60c7a11a30c307068de2d0e2881c5c7465ba44b7", "patch": "@@ -6757,9 +6757,14 @@ _LT_TAG_COMPILER\n _LT_COMPILER_BOILERPLATE\n _LT_LINKER_BOILERPLATE\n \n+# We can't call gcj to test gcj features when building libjava in gcc\n+# since gcj may depend on ecj1 which may not be available yet.  We use\n+# gcc to test gcj features.\n+ac_ext=c\n+lt_simple_compile_test_code=\"int some_variable = 0;\"\n+lt_simple_link_test_code='int main(){return(0);}'\n+\n # Allow CC to be a program name with arguments.\n-lt_save_CC=\"$CC\"\n-CC=${GCJ-\"gcj\"}\n compiler=$CC\n _LT_TAGVAR(compiler, $1)=$CC\n _LT_CC_BASENAME([$compiler])\n@@ -6786,7 +6791,6 @@ if test -n \"$compiler\"; then\n fi\n \n AC_LANG_RESTORE\n-CC=\"$lt_save_CC\"\n ])# _LT_LANG_GCJ_CONFIG\n \n "}]}