{"sha": "35a414df38bfe8df947d399720eef481309540a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVhNDE0ZGYzOGJmZThkZjk0N2QzOTk3MjBlZWY0ODEzMDk1NDBhOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-12-08T11:47:38Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-12-08T11:47:38Z"}, "message": "alpha.c (secondary_reload_class): For !BWX, sub-simode outputs require a register.\n\n        * alpha.c (secondary_reload_class): For !BWX, sub-simode\n        outputs require a register.\n\nFrom-SVN: r30829", "tree": {"sha": "569942f692fcc5dfa864cb67b502cb2da372f199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/569942f692fcc5dfa864cb67b502cb2da372f199"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35a414df38bfe8df947d399720eef481309540a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a414df38bfe8df947d399720eef481309540a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a414df38bfe8df947d399720eef481309540a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a414df38bfe8df947d399720eef481309540a9/comments", "author": null, "committer": null, "parents": [{"sha": "8dcd865f3b58166136cdd1e0447e410e042e8a23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dcd865f3b58166136cdd1e0447e410e042e8a23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dcd865f3b58166136cdd1e0447e410e042e8a23"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "2e284ab912d58eecaf0443f52f4bb03fff36f193", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a414df38bfe8df947d399720eef481309540a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a414df38bfe8df947d399720eef481309540a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35a414df38bfe8df947d399720eef481309540a9", "patch": "@@ -1,3 +1,8 @@\n+Wed Dec  8 03:45:40 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.c (secondary_reload_class): For !BWX, sub-simode\n+\toutputs require a register.\n+\n 1999-12-08  Brendan Kehoe  <brendan@cygnus.com>\n \n \t* Makefile.in (FPBIT_FUNCS, DPBIT_FUNCS): Add _sf_to_usi"}, {"sha": "e790fc0d9d7c96226bce2a8da19473015b5a2fb1", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35a414df38bfe8df947d399720eef481309540a9/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35a414df38bfe8df947d399720eef481309540a9/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=35a414df38bfe8df947d399720eef481309540a9", "patch": "@@ -1065,17 +1065,21 @@ secondary_reload_class (class, mode, x, in)\n      rtx x;\n      int in;\n {\n-  if ((GET_CODE (x) == MEM\n-       || (GET_CODE (x) == REG && REGNO (x) >= FIRST_PSEUDO_REGISTER)\n-       || (GET_CODE (x) == SUBREG\n-\t   && (GET_CODE (SUBREG_REG (x)) == MEM\n-\t       || (GET_CODE (SUBREG_REG (x)) == REG\n-\t\t   && REGNO (SUBREG_REG (x)) >= FIRST_PSEUDO_REGISTER))))\n-      && ((class == FLOAT_REGS\n-\t   && (mode == SImode || mode == HImode || mode == QImode))\n-\t  || ((mode == QImode || mode == HImode)\n-\t      && ! TARGET_BWX && ! aligned_memory_operand (x, mode))))\n-    return GENERAL_REGS;\n+  if (GET_CODE (x) == MEM\n+      || (GET_CODE (x) == REG && REGNO (x) >= FIRST_PSEUDO_REGISTER)\n+      || (GET_CODE (x) == SUBREG\n+\t  && (GET_CODE (SUBREG_REG (x)) == MEM\n+\t      || (GET_CODE (SUBREG_REG (x)) == REG\n+\t\t  && REGNO (SUBREG_REG (x)) >= FIRST_PSEUDO_REGISTER))))\n+    {\n+      if (class == FLOAT_REGS && mode != DImode)\n+\treturn GENERAL_REGS;\n+      if ((mode == QImode || mode == HImode) && ! TARGET_BWX)\n+\t{\n+\t  if (!in || !aligned_memory_operand(x, mode))\n+\t    return GENERAL_REGS;\n+\t}\n+    }\n \n   if (class == FLOAT_REGS)\n     {"}]}