{"sha": "b9a0baa9f941537de5ea2c431830a8da33692d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlhMGJhYTlmOTQxNTM3ZGU1ZWEyYzQzMTgzMGE4ZGEzMzY5MmQ4OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2018-08-29T17:07:35Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-08-29T17:07:35Z"}, "message": "tree-streamer-in.c (lto_input_ts_function_decl_tree_pointers): Do not stream DECL_VINDEX.\n\n\n\t* tree-streamer-in.c (lto_input_ts_function_decl_tree_pointers):\n\tDo not stream DECL_VINDEX.\n\t* tree-streamer-out.c (write_ts_function_decl_tree_pointers): Likewise.\n\t* tree.c (free_lang_data_in_decl): Clear DECL_VINDEX.\n\t(decl_function_context): Use DECL_VIRTUAL_P rather than DECL_VINDEX.\n\nFrom-SVN: r263962", "tree": {"sha": "25887dd9b3314ef17b07e5bd3abee62451db85a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25887dd9b3314ef17b07e5bd3abee62451db85a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9a0baa9f941537de5ea2c431830a8da33692d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a0baa9f941537de5ea2c431830a8da33692d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9a0baa9f941537de5ea2c431830a8da33692d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a0baa9f941537de5ea2c431830a8da33692d88/comments", "author": null, "committer": null, "parents": [{"sha": "d176b500dcd39c8158ffd445e2aa5de09e06bac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d176b500dcd39c8158ffd445e2aa5de09e06bac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d176b500dcd39c8158ffd445e2aa5de09e06bac1"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "00d6f3067444f6a31e883ca8064d7ebacde9fec6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9a0baa9f941537de5ea2c431830a8da33692d88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9a0baa9f941537de5ea2c431830a8da33692d88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9a0baa9f941537de5ea2c431830a8da33692d88", "patch": "@@ -1,3 +1,11 @@\n+2018-08-29  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-streamer-in.c (lto_input_ts_function_decl_tree_pointers):\n+\tDo not stream DECL_VINDEX.\n+\t* tree-streamer-out.c (write_ts_function_decl_tree_pointers): Likewise.\n+\t* tree.c (free_lang_data_in_decl): Clear DECL_VINDEX.\n+\t(decl_function_context): Use DECL_VIRTUAL_P rather than DECL_VINDEX.\n+\n 2018-08-29  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (vuse_ssa_val): Return NULL for unvisited"}, {"sha": "34cbb193b8bd447b9b9c2850e1581ee307b01cb4", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9a0baa9f941537de5ea2c431830a8da33692d88/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9a0baa9f941537de5ea2c431830a8da33692d88/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=b9a0baa9f941537de5ea2c431830a8da33692d88", "patch": "@@ -769,7 +769,6 @@ static void\n lto_input_ts_function_decl_tree_pointers (struct lto_input_block *ib,\n \t\t\t\t\t  struct data_in *data_in, tree expr)\n {\n-  DECL_VINDEX (expr) = stream_read_tree (ib, data_in);\n   /* DECL_STRUCT_FUNCTION is loaded on demand by cgraph_get_body.  */\n   DECL_FUNCTION_PERSONALITY (expr) = stream_read_tree (ib, data_in);\n #ifndef ACCEL_COMPILER"}, {"sha": "d86f3524e3a18f4743f92fcde7a8b24792952a33", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9a0baa9f941537de5ea2c431830a8da33692d88/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9a0baa9f941537de5ea2c431830a8da33692d88/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=b9a0baa9f941537de5ea2c431830a8da33692d88", "patch": "@@ -657,7 +657,6 @@ static void\n write_ts_function_decl_tree_pointers (struct output_block *ob, tree expr,\n \t\t\t\t      bool ref_p)\n {\n-  stream_write_tree (ob, DECL_VINDEX (expr), ref_p);\n   /* DECL_STRUCT_FUNCTION is handled by lto_output_function.  */\n   stream_write_tree (ob, DECL_FUNCTION_PERSONALITY (expr), ref_p);\n   /* Don't stream these when passing things to a different target.  */"}, {"sha": "d1e1b3048d4bbb300c0f9e23b849bd307a07a8c6", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9a0baa9f941537de5ea2c431830a8da33692d88/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9a0baa9f941537de5ea2c431830a8da33692d88/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b9a0baa9f941537de5ea2c431830a8da33692d88", "patch": "@@ -5339,12 +5339,7 @@ free_lang_data_in_decl (tree decl)\n \t       (DECL_CONTEXT (DECL_ABSTRACT_ORIGIN (decl))))\n \tDECL_ABSTRACT_ORIGIN (decl) = NULL_TREE;\n \n-      /* Sometimes the C++ frontend doesn't manage to transform a temporary\n-         DECL_VINDEX referring to itself into a vtable slot number as it\n-\t should.  Happens with functions that are copied and then forgotten\n-\t about.  Just clear it, it won't matter anymore.  */\n-      if (DECL_VINDEX (decl) && !tree_fits_shwi_p (DECL_VINDEX (decl)))\n-\tDECL_VINDEX (decl) = NULL_TREE;\n+      DECL_VINDEX (decl) = NULL_TREE;\n     }\n   else if (VAR_P (decl))\n     {\n@@ -8989,7 +8984,7 @@ decl_function_context (const_tree decl)\n \n      C++ should really be fixed to use DECL_CONTEXT for the real context,\n      and use something else for the \"virtual context\".  */\n-  else if (TREE_CODE (decl) == FUNCTION_DECL && DECL_VINDEX (decl))\n+  else if (TREE_CODE (decl) == FUNCTION_DECL && DECL_VIRTUAL_P (decl))\n     context\n       = TYPE_MAIN_VARIANT\n \t(TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (decl)))));"}]}