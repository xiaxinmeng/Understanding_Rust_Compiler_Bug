{"sha": "6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNmNGQxYmNhMDQ3N2JkMjIzYzhhMzY4YmE0YjE0ZDU4MGVmMTMyNA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-07-23T18:44:43Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-07-23T18:44:43Z"}, "message": "re PR c++/11517 (g++ fails to properly convert pointer expressions in conditional expressions.)\n\n\tPR c++/11517\n\t* call.c (build_conditional_expr): Use perform_implicit_conversion\n\tand error_operand_p.  Robustify.\n\t* typeck.c (build_unary_op): Use perform_implicit_conversion.\n\n\tPR c++/11517\n\t* g++.dg/expr/cond2.C: New test.\n\nFrom-SVN: r69715", "tree": {"sha": "2aedf10c630310f865c13f931beff5398ead1c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2aedf10c630310f865c13f931beff5398ead1c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/comments", "author": null, "committer": null, "parents": [{"sha": "a08cb3a3740bf876e2590907900a875ea7e81986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a08cb3a3740bf876e2590907900a875ea7e81986", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a08cb3a3740bf876e2590907900a875ea7e81986"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "1ef39bff24801fb1a71ee68dece3a9052b15d53a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "patch": "@@ -1,3 +1,10 @@\n+2003-07-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/11517\n+\t* call.c (build_conditional_expr): Use perform_implicit_conversion\n+\tand error_operand_p.  Robustify.\n+\t* typeck.c (build_unary_op): Use perform_implicit_conversion.\n+\n 2003-07-23  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/10953"}, {"sha": "dddd7b80866a823d0447cd4e470988acfd9859ce", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "patch": "@@ -3072,16 +3072,13 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3)\n   \n      The first expr ession is implicitly converted to bool (clause\n      _conv_).  */\n-  arg1 = cp_convert (boolean_type_node, arg1);\n+  arg1 = perform_implicit_conversion (boolean_type_node, arg1);\n \n   /* If something has already gone wrong, just pass that fact up the\n      tree.  */\n-  if (arg1 == error_mark_node \n-      || arg2 == error_mark_node \n-      || arg3 == error_mark_node \n-      || TREE_TYPE (arg1) == error_mark_node\n-      || TREE_TYPE (arg2) == error_mark_node\n-      || TREE_TYPE (arg3) == error_mark_node)\n+  if (error_operand_p (arg1)\n+      || error_operand_p (arg2)\n+      || error_operand_p (arg3))\n     return error_mark_node;\n \n   /* [expr.cond]\n@@ -3333,6 +3330,8 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3)\n     {\n       result_type = composite_pointer_type (arg2_type, arg3_type, arg2,\n \t\t\t\t\t    arg3, \"conditional expression\");\n+      if (result_type == error_mark_node)\n+\treturn error_mark_node;\n       arg2 = perform_implicit_conversion (result_type, arg2);\n       arg3 = perform_implicit_conversion (result_type, arg3);\n     }"}, {"sha": "eb04f882030afd10825b9d2aa0cdbeee269c85b5", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "patch": "@@ -3663,7 +3663,7 @@ build_unary_op (enum tree_code code, tree xarg, int noconvert)\n       break;\n \n     case TRUTH_NOT_EXPR:\n-      arg = cp_convert (boolean_type_node, arg);\n+      arg = perform_implicit_conversion (boolean_type_node, arg);\n       val = invert_truthvalue (arg);\n       if (arg != error_mark_node)\n \treturn val;"}, {"sha": "354fa81af2e77f431d9c6198fbeee7192a47c089", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "patch": "@@ -1,5 +1,8 @@\n 2003-07-23  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/11517\n+\t* g++.dg/expr/cond2.C: New test.\n+\t\n \tPR optimization/10679\n \t* g++.dg/opt/inline4.C: New test.\n "}, {"sha": "d9c2e7031f6a4965fd6cf46793611ee5c7d87964", "filename": "gcc/testsuite/g++.dg/expr/cond2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf4d1bca0477bd223c8a368ba4b14d580ef1324/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond2.C?ref=6cf4d1bca0477bd223c8a368ba4b14d580ef1324", "patch": "@@ -0,0 +1,12 @@\n+struct Term { };\n+struct Boolean : Term {\n+  explicit Boolean(bool);\n+};\n+struct IsZero : Term {\n+  Term *eval();\n+};\n+Term*\n+IsZero::eval()\n+{\n+  return true ? new Boolean(false) : this; // { dg-error \"\" }\n+}"}]}