{"sha": "d6bc9793de3e1b429e68fe2166ed01206e9c57db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZiYzk3OTNkZTNlMWI0MjllNjhmZTIxNjZlZDAxMjA2ZTljNTdkYg==", "commit": {"author": {"name": "Mohan Embar", "email": "gnustuff@thisiscool.com", "date": "2003-10-31T03:36:38Z"}, "committer": {"name": "Mohan Embar", "email": "membar@gcc.gnu.org", "date": "2003-10-31T03:36:38Z"}, "message": "re PR libgcj/12647 ([win32] wait() does not release monitor correctly)\n\n\tPR libgcj/12647:\n\t* win32-threads.cc (_Jv_CondWait): Respect mutex's\n\trefcount when releasing and reacquiring it.\n\nFrom-SVN: r73118", "tree": {"sha": "ab5178c3a445c4eabae09bbe11ede4c98ba1445d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab5178c3a445c4eabae09bbe11ede4c98ba1445d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6bc9793de3e1b429e68fe2166ed01206e9c57db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6bc9793de3e1b429e68fe2166ed01206e9c57db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6bc9793de3e1b429e68fe2166ed01206e9c57db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6bc9793de3e1b429e68fe2166ed01206e9c57db/comments", "author": null, "committer": null, "parents": [{"sha": "748e241eab69462ae57751a8b8ce58bba4ceb520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748e241eab69462ae57751a8b8ce58bba4ceb520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/748e241eab69462ae57751a8b8ce58bba4ceb520"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "799b490bf00df146edaf16d5f9511f755df61982", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6bc9793de3e1b429e68fe2166ed01206e9c57db/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6bc9793de3e1b429e68fe2166ed01206e9c57db/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d6bc9793de3e1b429e68fe2166ed01206e9c57db", "patch": "@@ -1,3 +1,9 @@\n+2003-10-30  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\tPR libgcj/12647:\n+\t* win32-threads.cc (_Jv_CondWait): Respect mutex's\n+\trefcount when releasing and reacquiring it.\n+\n 2003-10-30  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* win32.cc: (dirExists) Internal helper function to"}, {"sha": "9e3981db3ddcf316e08ed3ad1d9fafbd56f5c7cf", "filename": "libjava/win32-threads.cc", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6bc9793de3e1b429e68fe2166ed01206e9c57db/libjava%2Fwin32-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6bc9793de3e1b429e68fe2166ed01206e9c57db/libjava%2Fwin32-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32-threads.cc?ref=d6bc9793de3e1b429e68fe2166ed01206e9c57db", "patch": "@@ -126,7 +126,18 @@ _Jv_CondWait(_Jv_ConditionVariable_t *cv, _Jv_Mutex_t *mu, jlong millis, jint na\n   else if (millis == 0) time = INFINITE;\n   else time = millis;\n \n-  _Jv_MutexUnlock (mu);\n+  // Record the current lock depth, so it can be restored\n+  // when we reacquire it.\n+  int count = mu->refcount;\n+  int curcount = count;\n+\n+  // Call _Jv_MutexUnlock repeatedly until this thread\n+  // has completely released the monitor.\n+  while (curcount > 0)\n+    {  \n+      _Jv_MutexUnlock (mu);\n+      --curcount;\n+    }\n \n   // Set up our array of three events:\n   // - the auto-reset event (for notify())\n@@ -164,7 +175,13 @@ _Jv_CondWait(_Jv_ConditionVariable_t *cv, _Jv_Mutex_t *mu, jlong millis, jint na\n   if (last_waiter)\n     ResetEvent (cv->ev[1]);\n \n-  _Jv_MutexLock (mu);\n+  // Call _Jv_MutexLock repeatedly until the mutex's refcount is the\n+  // same as before we originally released it.\n+  while (curcount < count)\n+    {  \n+      _Jv_MutexLock (mu);\n+      ++curcount;\n+    }\n   \n   return interrupted ? _JV_INTERRUPTED : 0;\n }"}]}