{"sha": "e25a366f6fbfec00094d243a41b0d9dacdd66575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI1YTM2NmY2ZmJmZWMwMDA5NGQyNDNhNDFiMGQ5ZGFjZGQ2NjU3NQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2016-10-18T15:42:21Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2016-10-18T15:42:21Z"}, "message": "re PR middle-end/65950 (exit in main is causing the path to it to become unlikely.)\n\n2016-10-18  Andrew Pinski  <apinski@cavium.com>\n\n        PR tree-opt/65950\n        * predict.c (is_exit_with_zero_arg): New function.\n        (tree_bb_level_predictions): Don't consider paths leading to exit(0)\n        as nottaken.\n\nFrom-SVN: r241309", "tree": {"sha": "70307918b5e308ff62590061ea8e9064e63d6288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70307918b5e308ff62590061ea8e9064e63d6288"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e25a366f6fbfec00094d243a41b0d9dacdd66575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25a366f6fbfec00094d243a41b0d9dacdd66575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e25a366f6fbfec00094d243a41b0d9dacdd66575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25a366f6fbfec00094d243a41b0d9dacdd66575/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5cb96b6a87ec58038803fd093974e383483ed76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb96b6a87ec58038803fd093974e383483ed76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb96b6a87ec58038803fd093974e383483ed76e"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "0b08748b9c1d00f4e3d5428bb2d12e422dcc5c68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25a366f6fbfec00094d243a41b0d9dacdd66575/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25a366f6fbfec00094d243a41b0d9dacdd66575/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e25a366f6fbfec00094d243a41b0d9dacdd66575", "patch": "@@ -1,3 +1,10 @@\n+2016-10-18  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR tree-opt/65950\n+\t* predict.c (is_exit_with_zero_arg): New function.\n+\t(tree_bb_level_predictions): Don't consider paths leading to exit(0)\n+\tas nottaken.\n+\n 2016-10-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/77991"}, {"sha": "1bf04d18c1c70848b58febff517ba28aa5916be5", "filename": "gcc/predict.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25a366f6fbfec00094d243a41b0d9dacdd66575/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25a366f6fbfec00094d243a41b0d9dacdd66575/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=e25a366f6fbfec00094d243a41b0d9dacdd66575", "patch": "@@ -2512,6 +2512,21 @@ tree_predict_by_opcode (basic_block bb)\n       }\n }\n \n+/* Returns TRUE if the STMT is exit(0) like statement. */\n+\n+static bool\n+is_exit_with_zero_arg (const gimple *stmt)\n+{\n+  /* This is not exit, _exit or _Exit. */\n+  if (!gimple_call_builtin_p (stmt, BUILT_IN_EXIT)\n+      && !gimple_call_builtin_p (stmt, BUILT_IN__EXIT)\n+      && !gimple_call_builtin_p (stmt, BUILT_IN__EXIT2))\n+    return false;\n+\n+  /* Argument is an interger zero. */\n+  return integer_zerop (gimple_call_arg (stmt, 0));\n+}\n+\n /* Try to guess whether the value of return means error code.  */\n \n static enum br_predictor\n@@ -2638,7 +2653,9 @@ tree_bb_level_predictions (void)\n \n \t  if (is_gimple_call (stmt))\n \t    {\n-\t      if (gimple_call_noreturn_p (stmt) && has_return_edges)\n+\t      if (gimple_call_noreturn_p (stmt)\n+\t\t  && has_return_edges\n+\t\t  && !is_exit_with_zero_arg (stmt))\n \t\tpredict_paths_leading_to (bb, PRED_NORETURN,\n \t\t\t\t\t  NOT_TAKEN);\n \t      decl = gimple_call_fndecl (stmt);"}]}