{"sha": "fae67e1dc40c1ffa336ef06299844a6622566ccd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFlNjdlMWRjNDBjMWZmYTMzNmVmMDYyOTk4NDRhNjYyMjU2NmNjZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-12-05T19:24:53Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-12-05T19:24:53Z"}, "message": "optabs.c (maybe_emit_sync_lock_test_and_set): Pass a null target to emit_library_call_value.\n\ngcc/\n\t* optabs.c (maybe_emit_sync_lock_test_and_set): Pass a null target\n\tto emit_library_call_value.\n\t(expand_atomic_compare_and_swap): Likewise.\n\nFrom-SVN: r182021", "tree": {"sha": "6989a520c1f82acc4251f3668e48ea8b7d610e87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6989a520c1f82acc4251f3668e48ea8b7d610e87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fae67e1dc40c1ffa336ef06299844a6622566ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae67e1dc40c1ffa336ef06299844a6622566ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fae67e1dc40c1ffa336ef06299844a6622566ccd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae67e1dc40c1ffa336ef06299844a6622566ccd/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b808bd9a89f496601671715d63bd169facf5851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b808bd9a89f496601671715d63bd169facf5851", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b808bd9a89f496601671715d63bd169facf5851"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "762c57f9b3ad419c649d19a810361e88a9d9fab5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fae67e1dc40c1ffa336ef06299844a6622566ccd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fae67e1dc40c1ffa336ef06299844a6622566ccd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fae67e1dc40c1ffa336ef06299844a6622566ccd", "patch": "@@ -1,3 +1,9 @@\n+2011-12-05  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* optabs.c (maybe_emit_sync_lock_test_and_set): Pass a null target\n+\tto emit_library_call_value.\n+\t(expand_atomic_compare_and_swap): Likewise.\n+\n 2011-12-05  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR other/50775"}, {"sha": "55cfe8c98874326915a8721a50538f377f0e3042", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fae67e1dc40c1ffa336ef06299844a6622566ccd/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fae67e1dc40c1ffa336ef06299844a6622566ccd/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=fae67e1dc40c1ffa336ef06299844a6622566ccd", "patch": "@@ -7400,7 +7400,7 @@ maybe_emit_sync_lock_test_and_set (rtx target, rtx mem, rtx val,\n \t  rtx addr;\n \n \t  addr = convert_memory_address (ptr_mode, XEXP (mem, 0));\n-\t  return emit_library_call_value (libfunc, target, LCT_NORMAL,\n+\t  return emit_library_call_value (libfunc, NULL_RTX, LCT_NORMAL,\n \t\t\t\t\t  mode, 2, addr, ptr_mode,\n \t\t\t\t\t  val, mode);\n \t}\n@@ -7637,7 +7637,7 @@ expand_atomic_compare_and_swap (rtx *ptarget_bool, rtx *ptarget_oval,\n   if (libfunc != NULL)\n     {\n       rtx addr = convert_memory_address (ptr_mode, XEXP (mem, 0));\n-      target_oval = emit_library_call_value (libfunc, target_oval, LCT_NORMAL,\n+      target_oval = emit_library_call_value (libfunc, NULL_RTX, LCT_NORMAL,\n \t\t\t\t\t     mode, 3, addr, ptr_mode,\n \t\t\t\t\t     expected, mode, desired, mode);\n "}]}