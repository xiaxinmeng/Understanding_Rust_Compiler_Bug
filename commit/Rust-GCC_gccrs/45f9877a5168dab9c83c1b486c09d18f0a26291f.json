{"sha": "45f9877a5168dab9c83c1b486c09d18f0a26291f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVmOTg3N2E1MTY4ZGFiOWM4M2MxYjQ4NmMwOWQxOGYwYTI2MjkxZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-02-14T14:43:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-02-14T14:43:21Z"}, "message": "loop.c (check_dbra_loop): Use gen_int_mode instead of GEN_INT for start_value when...\n\n\t* loop.c (check_dbra_loop): Use gen_int_mode instead of GEN_INT\n\tfor start_value when it is directly moved into reg, and factorize\n\tthe retrieval of GET_MODE (reg).\n\nFrom-SVN: r77803", "tree": {"sha": "36aea4c894ba608bfe3c5b77f9b4f4e893970a25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36aea4c894ba608bfe3c5b77f9b4f4e893970a25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45f9877a5168dab9c83c1b486c09d18f0a26291f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f9877a5168dab9c83c1b486c09d18f0a26291f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45f9877a5168dab9c83c1b486c09d18f0a26291f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f9877a5168dab9c83c1b486c09d18f0a26291f/comments", "author": null, "committer": null, "parents": [{"sha": "544142d816f321328d392eac4ddec58c5348de40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544142d816f321328d392eac4ddec58c5348de40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/544142d816f321328d392eac4ddec58c5348de40"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "ab5ed59029418606f948f687078101537f2ffeb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f9877a5168dab9c83c1b486c09d18f0a26291f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f9877a5168dab9c83c1b486c09d18f0a26291f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45f9877a5168dab9c83c1b486c09d18f0a26291f", "patch": "@@ -1,3 +1,9 @@\n+2004-02-14  Olivier Hainque  <hainque@act-europe.fr>\n+\n+\t* loop.c (check_dbra_loop): Use gen_int_mode instead of GEN_INT\n+\tfor start_value when it is directly moved into reg, and factorize\n+\tthe retrieval of GET_MODE (reg).\n+\n 2004-02-14  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips-protos.h (mips_load_got_page): Delete."}, {"sha": "b09708d19610ad7e78880bfa67d7ee629d75d571", "filename": "gcc/loop.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f9877a5168dab9c83c1b486c09d18f0a26291f/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f9877a5168dab9c83c1b486c09d18f0a26291f/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=45f9877a5168dab9c83c1b486c09d18f0a26291f", "patch": "@@ -8015,6 +8015,7 @@ check_dbra_loop (struct loop *loop, int insn_count)\n   struct loop_ivs *ivs = LOOP_IVS (loop);\n   struct iv_class *bl;\n   rtx reg;\n+  enum machine_mode mode;\n   rtx jump_label;\n   rtx final_value;\n   rtx start_value;\n@@ -8435,6 +8436,7 @@ check_dbra_loop (struct loop *loop, int insn_count)\n \n \t      /* Save some info needed to produce the new insns.  */\n \t      reg = bl->biv->dest_reg;\n+\t      mode = GET_MODE (reg);\n \t      jump_label = condjump_label (PREV_INSN (loop_end));\n \t      new_add_val = GEN_INT (-INTVAL (bl->biv->add_val));\n \n@@ -8446,12 +8448,12 @@ check_dbra_loop (struct loop *loop, int insn_count)\n \t      if (initial_value == const0_rtx\n \t\t  && GET_CODE (comparison_value) == CONST_INT)\n \t\t{\n-\t\t  start_value = GEN_INT (comparison_val - add_adjust);\n+\t\t  start_value\n+\t\t    = gen_int_mode (comparison_val - add_adjust, mode);\n \t\t  loop_insn_hoist (loop, gen_move_insn (reg, start_value));\n \t\t}\n \t      else if (GET_CODE (initial_value) == CONST_INT)\n \t\t{\n-\t\t  enum machine_mode mode = GET_MODE (reg);\n \t\t  rtx offset = GEN_INT (-INTVAL (initial_value) - add_adjust);\n \t\t  rtx add_insn = gen_add3_insn (reg, comparison_value, offset);\n \n@@ -8467,7 +8469,6 @@ check_dbra_loop (struct loop *loop, int insn_count)\n \t\t}\n \t      else if (! add_adjust)\n \t\t{\n-\t\t  enum machine_mode mode = GET_MODE (reg);\n \t\t  rtx sub_insn = gen_sub3_insn (reg, comparison_value,\n \t\t\t\t\t\tinitial_value);\n \n@@ -8525,7 +8526,7 @@ check_dbra_loop (struct loop *loop, int insn_count)\n \t      /* Add new compare/branch insn at end of loop.  */\n \t      start_sequence ();\n \t      emit_cmp_and_jump_insns (reg, const0_rtx, cmp_code, NULL_RTX,\n-\t\t\t\t       GET_MODE (reg), 0,\n+\t\t\t\t       mode, 0,\n \t\t\t\t       XEXP (jump_label, 0));\n \t      tem = get_insns ();\n \t      end_sequence ();"}, {"sha": "7d293d36e4d70bcd9789786b1cfe2f7c6198cc11", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f9877a5168dab9c83c1b486c09d18f0a26291f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f9877a5168dab9c83c1b486c09d18f0a26291f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45f9877a5168dab9c83c1b486c09d18f0a26291f", "patch": "@@ -1,3 +1,7 @@\n+2004-02-14  Eric Botcazou  <ebotcazou@act-europe.fr>\n+\n+\t* gcc.c-torture/compile/20040214-1.c: New test.\n+\n 2004-02-14  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/13635\n@@ -20794,3 +20798,4 @@ rlsruhe.de>\n \n \t* New file.\n \n+"}, {"sha": "90b09dcdbabfe288ce4b7eed9e16f10a75e10400", "filename": "gcc/testsuite/gcc.c-torture/compile/20040214-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f9877a5168dab9c83c1b486c09d18f0a26291f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040214-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f9877a5168dab9c83c1b486c09d18f0a26291f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040214-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040214-1.c?ref=45f9877a5168dab9c83c1b486c09d18f0a26291f", "patch": "@@ -0,0 +1,7 @@\n+void foo(void)\n+{\n+  char c;\n+\n+  for (c = -75; c <= 75; c++)\n+    ;\n+}"}]}