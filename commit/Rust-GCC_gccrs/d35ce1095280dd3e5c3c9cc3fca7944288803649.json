{"sha": "d35ce1095280dd3e5c3c9cc3fca7944288803649", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1Y2UxMDk1MjgwZGQzZTVjM2M5Y2MzZmNhNzk0NDI4ODgwMzY0OQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-10-19T12:30:35Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2010-10-19T12:30:35Z"}, "message": "re PR fortran/43414 (DWARF4: Use DW_AT_main_subprogram for MAIN__)\n\n\tPR fortran/43414\n\t* dwarf2out.c (add_calling_convention_attribute): Flag main\n\tFortran subroutine with DW_AT_main_subprogram.\n\nFrom-SVN: r165699", "tree": {"sha": "02f60c07524ec76d2cd1aaa762d3f68c4b17464d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02f60c07524ec76d2cd1aaa762d3f68c4b17464d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d35ce1095280dd3e5c3c9cc3fca7944288803649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35ce1095280dd3e5c3c9cc3fca7944288803649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d35ce1095280dd3e5c3c9cc3fca7944288803649", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d35ce1095280dd3e5c3c9cc3fca7944288803649/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a961aa79587ca417a9920cd2ba4df4d3144fd26d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a961aa79587ca417a9920cd2ba4df4d3144fd26d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a961aa79587ca417a9920cd2ba4df4d3144fd26d"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "38d07c7cb353cbb659330885125d4e25b3f81676", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35ce1095280dd3e5c3c9cc3fca7944288803649/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35ce1095280dd3e5c3c9cc3fca7944288803649/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d35ce1095280dd3e5c3c9cc3fca7944288803649", "patch": "@@ -1,3 +1,9 @@\n+2010-10-19  Francois-Xavier Coudert<fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/43414\n+\t* dwarf2out.c (add_calling_convention_attribute): Flag main\n+\tFortran subroutine with DW_AT_main_subprogram.\n+\n 2010-10-19  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rx/rx.c (rx_function_value): Small integer types are"}, {"sha": "d19a5cde95ce3b27ac8455263238ca8cf1c486b8", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d35ce1095280dd3e5c3c9cc3fca7944288803649/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d35ce1095280dd3e5c3c9cc3fca7944288803649/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d35ce1095280dd3e5c3c9cc3fca7944288803649", "patch": "@@ -17848,14 +17848,21 @@ add_calling_convention_attribute (dw_die_ref subr_die, tree decl)\n   value = ((enum dwarf_calling_convention)\n \t   targetm.dwarf_calling_convention (TREE_TYPE (decl)));\n \n-  /* DWARF doesn't provide a way to identify a program's source-level\n-     entry point.  DW_AT_calling_convention attributes are only meant\n-     to describe functions' calling conventions.  However, lacking a\n-     better way to signal the Fortran main program, we use this for the\n-     time being, following existing custom.  */\n   if (is_fortran ()\n       && !strcmp (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)), \"MAIN__\"))\n-    value = DW_CC_program;\n+    {\n+      /* DWARF 2 doesn't provide a way to identify a program's source-level\n+\tentry point.  DW_AT_calling_convention attributes are only meant\n+\tto describe functions' calling conventions.  However, lacking a\n+\tbetter way to signal the Fortran main program, we used this for \n+\ta long time, following existing custom.  Now, DWARF 4 has \n+\tDW_AT_main_subprogram, which we add below, but some tools still\n+\trely on the old way, which we thus keep.  */\n+      value = DW_CC_program;\n+\n+      if (dwarf_version >= 4 || !dwarf_strict)\n+\tadd_AT_flag (subr_die, DW_AT_main_subprogram, 1);\n+    }\n \n   /* Only add the attribute if the backend requests it, and\n      is not DW_CC_normal.  */"}]}