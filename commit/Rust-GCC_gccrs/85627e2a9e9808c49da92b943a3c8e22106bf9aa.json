{"sha": "85627e2a9e9808c49da92b943a3c8e22106bf9aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU2MjdlMmE5ZTk4MDhjNDlkYTkyYjk0M2EzYzhlMjIxMDZiZjlhYQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2019-02-23T18:07:10Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2019-02-23T18:07:10Z"}, "message": "re PR fortran/84387 (Defined output does not work for a derived type that has no components)\n\n2019-02-23  Jerry DeLisle <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/84387\n\t* trans-io.c (transfer_expr): Do not return if there are no\n\tcomponents to the derived type or class.\n\n\t* gfortran.dg/dtio_34.f90: New test.\n\nFrom-SVN: r269161", "tree": {"sha": "18d0a7d2159470566c6f45a2d80d1b695f4a4f0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18d0a7d2159470566c6f45a2d80d1b695f4a4f0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85627e2a9e9808c49da92b943a3c8e22106bf9aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85627e2a9e9808c49da92b943a3c8e22106bf9aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85627e2a9e9808c49da92b943a3c8e22106bf9aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85627e2a9e9808c49da92b943a3c8e22106bf9aa/comments", "author": null, "committer": null, "parents": [{"sha": "3aab3d374adf1b333661a6948c586c8d665a0807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aab3d374adf1b333661a6948c586c8d665a0807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aab3d374adf1b333661a6948c586c8d665a0807"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "580d4b7fb7a63da5a3506b92b1d89e0f913db1eb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85627e2a9e9808c49da92b943a3c8e22106bf9aa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85627e2a9e9808c49da92b943a3c8e22106bf9aa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=85627e2a9e9808c49da92b943a3c8e22106bf9aa", "patch": "@@ -1,3 +1,9 @@\n+2019-02-23  Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/84387\n+\t* trans-io.c (transfer_expr): Do not return if there are no\n+\tcomponents to the derived type or class.\n+\n 2019-02-23  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/88117"}, {"sha": "9e7071dc12164f82f78e71e439e05caeb6addf56", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85627e2a9e9808c49da92b943a3c8e22106bf9aa/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85627e2a9e9808c49da92b943a3c8e22106bf9aa/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=85627e2a9e9808c49da92b943a3c8e22106bf9aa", "patch": "@@ -2407,8 +2407,6 @@ transfer_expr (gfc_se * se, gfc_typespec * ts, tree addr_expr,\n \n     case_bt_struct:\n     case BT_CLASS:\n-      if (ts->u.derived->components == NULL)\n-\treturn;\n       if (gfc_bt_struct (ts->type) || ts->type == BT_CLASS)\n \t{\n \t  gfc_symbol *derived;"}, {"sha": "958564ac8b002e98cb27c33207928346f5277b42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85627e2a9e9808c49da92b943a3c8e22106bf9aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85627e2a9e9808c49da92b943a3c8e22106bf9aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85627e2a9e9808c49da92b943a3c8e22106bf9aa", "patch": "@@ -1,3 +1,8 @@\n+2019-02-23  Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/84387\n+\t* gfortran.dg/dtio_34.f90: New test.\n+\n 2019-02-23  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/88294 - ICE with non-constant noexcept-specifier."}, {"sha": "7cecc8b9141ba1940659f17a0ae802213cde9a48", "filename": "gcc/testsuite/gfortran.dg/dtio_34.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85627e2a9e9808c49da92b943a3c8e22106bf9aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_34.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85627e2a9e9808c49da92b943a3c8e22106bf9aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_34.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_34.f90?ref=85627e2a9e9808c49da92b943a3c8e22106bf9aa", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do run }\n+! PR84387 Defined output does not work for a derived type that\n+! has no components \n+module m\n+   type :: t\n+      private\n+      !integer :: m_i = 0  !<-- ***\n+   contains\n+      private\n+      procedure, pass(this) :: write_t\n+      generic, public :: write(formatted) => write_t\n+   end type\n+contains\n+   subroutine write_t(this, lun, iotype, vlist, istat, imsg)\n+      ! argument definitions\n+      class(t), intent(in)            :: this\n+      integer, intent(in)             :: lun\n+      character(len=*), intent(in)    :: iotype\n+      integer, intent(in)             :: vlist(:)\n+      integer, intent(out)            :: istat\n+      character(len=*), intent(inout) :: imsg\n+      write(lun, fmt=*, iostat=istat, iomsg=imsg) \"Hello World!\"\n+      return\n+   end subroutine write_t\n+\n+end module\n+\n+program p\n+   use m, only : t\n+   type(t) :: foo\n+   print \"(dt)\", foo ! { dg-output \" Hello World!\" }\n+end program"}]}