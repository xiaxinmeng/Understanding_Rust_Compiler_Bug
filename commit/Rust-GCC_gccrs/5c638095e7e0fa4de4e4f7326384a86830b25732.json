{"sha": "5c638095e7e0fa4de4e4f7326384a86830b25732", "node_id": "C_kwDOANBUbNoAKDVjNjM4MDk1ZTdlMGZhNGRlNGU0ZjczMjYzODRhODY4MzBiMjU3MzI", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2023-02-25T20:37:46Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2023-02-25T20:37:46Z"}, "message": "fortran: Reuse associated_dummy memory if previously allocated [PR108923]\n\nThis avoids making the associted_dummy field point to a new memory chunk\nif it's already pointing somewhere, in which case doing so would leak the\npreviously allocated chunk.\n\n\tPR fortran/108923\n\ngcc/fortran/ChangeLog:\n\n\t* intrinsic.cc (get_intrinsic_dummy_arg,\n\tset_intrinsic_dummy_arg): Rename the former to the latter.\n\tRemove the return value, add a reference to the lhs as argument,\n\tand do the pointer assignment inside the function.  Don't do\n\tit if the pointer is already non-NULL.\n\t(sort_actual): Update caller.", "tree": {"sha": "b7e38b5618004a11affd5490b2e7056735138b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7e38b5618004a11affd5490b2e7056735138b00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c638095e7e0fa4de4e4f7326384a86830b25732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c638095e7e0fa4de4e4f7326384a86830b25732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c638095e7e0fa4de4e4f7326384a86830b25732", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c638095e7e0fa4de4e4f7326384a86830b25732/comments", "author": null, "committer": null, "parents": [{"sha": "a24b2720de5d888a936c350378ae864b81f1a022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24b2720de5d888a936c350378ae864b81f1a022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24b2720de5d888a936c350378ae864b81f1a022"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "64821c84543df70d793a8f63d713d9416911885f", "filename": "gcc/fortran/intrinsic.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c638095e7e0fa4de4e4f7326384a86830b25732/gcc%2Ffortran%2Fintrinsic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c638095e7e0fa4de4e4f7326384a86830b25732/gcc%2Ffortran%2Fintrinsic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.cc?ref=5c638095e7e0fa4de4e4f7326384a86830b25732", "patch": "@@ -4259,15 +4259,15 @@ remove_nullargs (gfc_actual_arglist **ap)\n }\n \n \n-static gfc_dummy_arg *\n-get_intrinsic_dummy_arg (gfc_intrinsic_arg *intrinsic)\n+static void\n+set_intrinsic_dummy_arg (gfc_dummy_arg *&dummy_arg,\n+\t\t\t gfc_intrinsic_arg *intrinsic)\n {\n-  gfc_dummy_arg * const dummy_arg = gfc_get_dummy_arg ();\n+  if (dummy_arg == NULL)\n+    dummy_arg = gfc_get_dummy_arg ();\n \n   dummy_arg->intrinsicness = GFC_INTRINSIC_DUMMY_ARG;\n   dummy_arg->u.intrinsic = intrinsic;\n-\n-  return dummy_arg;\n }\n \n \n@@ -4430,7 +4430,7 @@ sort_actual (const char *name, gfc_actual_arglist **ap,\n       if (a == NULL)\n \ta = gfc_get_actual_arglist ();\n \n-      a->associated_dummy = get_intrinsic_dummy_arg (f);\n+      set_intrinsic_dummy_arg (a->associated_dummy, f);\n \n       if (actual == NULL)\n \t*ap = a;"}]}