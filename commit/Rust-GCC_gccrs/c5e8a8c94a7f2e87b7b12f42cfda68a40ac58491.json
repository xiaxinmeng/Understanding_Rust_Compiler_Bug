{"sha": "c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVlOGE4Yzk0YTdmMmU4N2I3YjEyZjQyY2ZkYTY4YTQwYWM1ODQ5MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-11-17T09:06:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-11-17T09:06:54Z"}, "message": "tree-ssa-pre.c (phi_translate_1): Remove redundant constant folding of references.\n\n2017-11-17  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-pre.c (phi_translate_1): Remove redundant constant\n\tfolding of references.\n\nFrom-SVN: r254858", "tree": {"sha": "fb4204862871accb3c983453814e3bfcf1c5c7a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb4204862871accb3c983453814e3bfcf1c5c7a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491/comments", "author": null, "committer": null, "parents": [{"sha": "fa30ba9949962eda041475d98c74675e84538eae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa30ba9949962eda041475d98c74675e84538eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa30ba9949962eda041475d98c74675e84538eae"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "e07b3e6d175944142d12c602ff4eed666c7a77df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491", "patch": "@@ -1,4 +1,9 @@\n-2017-11-15  Qing Zhao  <qing.zhao@oracle.com>\n+2017-11-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-pre.c (phi_translate_1): Remove redundant constant\n+\tfolding of references.\n+\n+2017-11-17  Qing Zhao  <qing.zhao@oracle.com>\n \n \tPR middle-end/78809\n \t* gimple-fold.c (gimple_fold_builtin_string_compare): Add handling"}, {"sha": "ecc348436ff31d0296854fd7379c32fbbf391c96", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=c5e8a8c94a7f2e87b7b12f42cfda68a40ac58491", "patch": "@@ -1566,7 +1566,6 @@ phi_translate_1 (pre_expr expr, bitmap_set_t set1, bitmap_set_t set2,\n \tif (changed || newvuse != vuse)\n \t  {\n \t    unsigned int new_val_id;\n-\t    pre_expr constant;\n \n \t    tree result = vn_reference_lookup_pieces (newvuse, ref->set,\n \t\t\t\t\t\t      ref->type,\n@@ -1611,15 +1610,7 @@ phi_translate_1 (pre_expr expr, bitmap_set_t set1, bitmap_set_t set2,\n \t    expr->id = 0;\n \n \t    if (newref)\n-\t      {\n-\t\tPRE_EXPR_REFERENCE (expr) = newref;\n-\t\tconstant = fully_constant_expression (expr);\n-\t\tif (constant != expr)\n-\t\t  return constant;\n-\n-\t\tnew_val_id = newref->value_id;\n-\t\tget_or_alloc_expression_id (expr);\n-\t      }\n+\t      new_val_id = newref->value_id;\n \t    else\n \t      {\n \t\tif (changed || !same_valid)\n@@ -1637,12 +1628,9 @@ phi_translate_1 (pre_expr expr, bitmap_set_t set1, bitmap_set_t set2,\n \t\t\t\t\t\t     newoperands,\n \t\t\t\t\t\t     result, new_val_id);\n \t\tnewoperands = vNULL;\n-\t\tPRE_EXPR_REFERENCE (expr) = newref;\n-\t\tconstant = fully_constant_expression (expr);\n-\t\tif (constant != expr)\n-\t\t  return constant;\n-\t\tget_or_alloc_expression_id (expr);\n \t      }\n+\t    PRE_EXPR_REFERENCE (expr) = newref;\n+\t    get_or_alloc_expression_id (expr);\n \t    add_to_value (new_val_id, expr);\n \t  }\n \tnewoperands.release ();"}]}