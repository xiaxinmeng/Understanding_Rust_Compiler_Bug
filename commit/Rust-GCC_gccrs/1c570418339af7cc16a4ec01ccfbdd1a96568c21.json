{"sha": "1c570418339af7cc16a4ec01ccfbdd1a96568c21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM1NzA0MTgzMzlhZjdjYzE2YTRlYzAxY2NmYmRkMWE5NjU2OGMyMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-01-05T10:52:54Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-01-05T10:52:54Z"}, "message": "* cfgcleanup.c (try_forward_edges): Allow multiple jump threading.\n\nFrom-SVN: r48563", "tree": {"sha": "6a84e86141d2845d366c1de5768f3abe563fff5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a84e86141d2845d366c1de5768f3abe563fff5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c570418339af7cc16a4ec01ccfbdd1a96568c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c570418339af7cc16a4ec01ccfbdd1a96568c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c570418339af7cc16a4ec01ccfbdd1a96568c21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c570418339af7cc16a4ec01ccfbdd1a96568c21/comments", "author": null, "committer": null, "parents": [{"sha": "d83bb9f778da2a861a6aebd527b61ec6c495d494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d83bb9f778da2a861a6aebd527b61ec6c495d494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d83bb9f778da2a861a6aebd527b61ec6c495d494"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "2ada63479fe365dcd2f1e8f906c0886251c6c98e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c570418339af7cc16a4ec01ccfbdd1a96568c21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c570418339af7cc16a4ec01ccfbdd1a96568c21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c570418339af7cc16a4ec01ccfbdd1a96568c21", "patch": "@@ -1,3 +1,7 @@\n+Sat Jan  5 11:52:05 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfgcleanup.c (try_forward_edges): Allow multiple jump threading.\n+\n 2002-01-05  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* doc/cppinternals.texi: Update."}, {"sha": "96dee62519ec5d7b4dc41d16dab3051c30443bbf", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c570418339af7cc16a4ec01ccfbdd1a96568c21/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c570418339af7cc16a4ec01ccfbdd1a96568c21/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=1c570418339af7cc16a4ec01ccfbdd1a96568c21", "patch": "@@ -369,7 +369,8 @@ try_forward_edges (mode, b)\n      int mode;\n {\n   bool changed = false;\n-  edge e, next, threaded_edge;\n+  edge e, next, *threaded_edges = NULL;\n+  int nthreaded_edges = 0;\n \n   for (e = b->succ; e; e = next)\n     {\n@@ -406,13 +407,17 @@ try_forward_edges (mode, b)\n \n \t  /* Allow to thread only over one edge at time to simplify updating\n \t     of probabilities.  */\n-\t  else if ((mode & CLEANUP_THREADING) && !threaded)\n+\t  else if (mode & CLEANUP_THREADING)\n \t    {\n-\t      threaded_edge = thread_jump (mode, e, target);\n-\t      if (threaded_edge)\n+\t      edge t = thread_jump (mode, e, target);\n+\t      if (t)\n \t\t{\n-\t\t  new_target = threaded_edge->dest;\n+\t\t  new_target = t->dest;\n \t\t  new_target_threaded = true;\n+\t\t  if (!nthreaded_edges)\n+\t\t    threaded_edges = xmalloc (sizeof (*threaded_edges)\n+\t\t\t\t\t      * n_basic_blocks);\n+\t\t  threaded_edges[nthreaded_edges++] = t;\n \t\t}\n \t    }\n \n@@ -462,6 +467,7 @@ try_forward_edges (mode, b)\n \t  gcov_type edge_count = e->count;\n \t  int edge_probability = e->probability;\n \t  int edge_frequency;\n+\t  int n = 0;\n \n \t  /* Don't force if target is exit block.  */\n \t  if (threaded && target != EXIT_BLOCK_PTR)\n@@ -498,7 +504,7 @@ try_forward_edges (mode, b)\n \t      first->succ->count -= edge_count;\n \t      first->frequency -= edge_frequency;\n \t      if (first->succ->succ_next)\n-\t\tt = threaded_edge;\n+\t\tt = threaded_edges [n++];\n \t      else\n \t\tt = first->succ;\n \n@@ -510,6 +516,8 @@ try_forward_edges (mode, b)\n \t}\n     }\n \n+  if (threaded_edges)\n+    free (threaded_edges);\n   return changed;\n }\n \f"}]}