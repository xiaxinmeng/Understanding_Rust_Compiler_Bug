{"sha": "c7a61831d6ecec501acf0da0a227bd954e1d8922", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdhNjE4MzFkNmVjZWM1MDFhY2YwZGEwYTIyN2JkOTU0ZTFkODkyMg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-01-11T20:44:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-01-11T20:44:46Z"}, "message": "i386: Align stack frame if argument is passed on stack\n\nWhen a function call is removed, it may become a leaf function.  But if\nargument may be passed on stack, we need to align the stack frame when\nthere is no tail call.\n\nTested on Linux/i686 and Linux/x86-64.\n\ngcc/\n\n\tPR target/83330\n\t* config/i386/i386.c (ix86_compute_frame_layout): Align stack\n\tframe if argument is passed on stack.\n\ngcc/testsuite/\n\n\tPR target/83330\n\t* gcc.target/i386/pr83330.c: New test.\n\nFrom-SVN: r256555", "tree": {"sha": "5ad9cd96eee55b9a06e104696bd1e13e64b07498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ad9cd96eee55b9a06e104696bd1e13e64b07498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7a61831d6ecec501acf0da0a227bd954e1d8922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a61831d6ecec501acf0da0a227bd954e1d8922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7a61831d6ecec501acf0da0a227bd954e1d8922", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a61831d6ecec501acf0da0a227bd954e1d8922/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/278e902c24fd2ccbfe7c1ac2b0c4ef62a55696fc"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "2b939fb10f90c4768e85ec3cc71bbdf4b9886130", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a61831d6ecec501acf0da0a227bd954e1d8922/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a61831d6ecec501acf0da0a227bd954e1d8922/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7a61831d6ecec501acf0da0a227bd954e1d8922", "patch": "@@ -1,3 +1,9 @@\n+2018-01-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/83330\n+\t* config/i386/i386.c (ix86_compute_frame_layout): Align stack\n+\tframe if argument is passed on stack.\n+\n 2018-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82682"}, {"sha": "d6ff096d466c09e799e9f7a8a281548e679e38b8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a61831d6ecec501acf0da0a227bd954e1d8922/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a61831d6ecec501acf0da0a227bd954e1d8922/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c7a61831d6ecec501acf0da0a227bd954e1d8922", "patch": "@@ -11339,11 +11339,16 @@ ix86_compute_frame_layout (void)\n       offset += frame->va_arg_size;\n     }\n \n-  /* Align start of frame for local function.  */\n+  /* Align start of frame for local function.  When a function call\n+     is removed, it may become a leaf function.  But if argument may\n+     be passed on stack, we need to align the stack when there is no\n+     tail call.  */\n   if (m->call_ms2sysv\n       || frame->va_arg_size != 0\n       || size != 0\n       || !crtl->is_leaf\n+      || (!crtl->tail_call_emit\n+\t  && cfun->machine->outgoing_args_on_stack)\n       || cfun->calls_alloca\n       || ix86_current_function_calls_tls_descriptor)\n     offset = ROUND_UP (offset, stack_alignment_needed);"}, {"sha": "31ed14c16bd50e7316729d6e55008fe7c4650571", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a61831d6ecec501acf0da0a227bd954e1d8922/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a61831d6ecec501acf0da0a227bd954e1d8922/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7a61831d6ecec501acf0da0a227bd954e1d8922", "patch": "@@ -1,3 +1,8 @@\n+2018-01-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/83330\n+\t* gcc.target/i386/pr83330.c: New test.\n+\n 2018-01-11  Steven G. Kargl <kargl@gcc.gnu.org>\n \n \tPR fortran/79383"}, {"sha": "8a63fbd5d0998c690ed5cf5f3b14e868671a9b91", "filename": "gcc/testsuite/gcc.target/i386/pr83330.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a61831d6ecec501acf0da0a227bd954e1d8922/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83330.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a61831d6ecec501acf0da0a227bd954e1d8922/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83330.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83330.c?ref=c7a61831d6ecec501acf0da0a227bd954e1d8922", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"-O2 -fno-tree-dce -mno-push-args\" } */\n+\n+typedef unsigned long long u64;\n+typedef unsigned __int128 u128;\n+\n+u64 v;\n+u64 g;\n+\n+u64 __attribute__ ((noinline, noclone))\n+bar (u128 d, u64 e, u64 f, u64 g, u128 h)\n+{\n+  (void)d, (void)e, (void)f, (void)g, (void)h;\n+  return 0;\n+}\n+\n+static u64 __attribute__ ((noipa))\n+foo (void)\n+{\n+  (void)(v - bar (0, 0, 0, 0, 0));\n+  return g;\n+}\n+\n+int\n+main (void)\n+{\n+  (void)foo ();\n+  return 0;\n+}"}]}