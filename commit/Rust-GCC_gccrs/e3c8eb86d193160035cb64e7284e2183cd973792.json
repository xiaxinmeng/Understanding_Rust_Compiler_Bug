{"sha": "e3c8eb86d193160035cb64e7284e2183cd973792", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNjOGViODZkMTkzMTYwMDM1Y2I2NGU3Mjg0ZTIxODNjZDk3Mzc5Mg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2002-06-18T16:18:23Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2002-06-18T16:18:23Z"}, "message": "rtl.def (DEFINE_AUTOMATON): Add description of new options `time' and `v'.\n\n2002-06-18  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* rtl.def (DEFINE_AUTOMATON): Add description of new options\n\t`time' and `v'.  Fix incorrect description of option `w'.\n\n\t* doc/md.texi: Ditto.\n\n\t* genautomata.c (TIME_OPTION, V_OPTION): New macros.\n\t(gen_automata_option): Process the new options.\n\t(transform_2, transform_3): Initialize some variables.\n\t(initiate_automaton_gen): Use the new macros.\n\nFrom-SVN: r54748", "tree": {"sha": "4a3c915c2ddeb4d69269d349a7cbf16b63b386d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a3c915c2ddeb4d69269d349a7cbf16b63b386d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3c8eb86d193160035cb64e7284e2183cd973792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c8eb86d193160035cb64e7284e2183cd973792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3c8eb86d193160035cb64e7284e2183cd973792", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c8eb86d193160035cb64e7284e2183cd973792/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83b14b884703a989f1ac97df97588fddbc979c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b14b884703a989f1ac97df97588fddbc979c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83b14b884703a989f1ac97df97588fddbc979c5a"}], "stats": {"total": 70, "additions": 53, "deletions": 17}, "files": [{"sha": "ed371f7517149b7aade555133b7d89080513630b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c8eb86d193160035cb64e7284e2183cd973792/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c8eb86d193160035cb64e7284e2183cd973792/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3c8eb86d193160035cb64e7284e2183cd973792", "patch": "@@ -1,3 +1,15 @@\n+2002-06-18  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* rtl.def (DEFINE_AUTOMATON): Add description of new options\n+\t`time' and `v'.  Fix incorrect description of option `w'.\n+\n+\t* doc/md.texi: Ditto.\n+\n+\t* genautomata.c (TIME_OPTION, V_OPTION): New macros.\n+\t(gen_automata_option): Process the new options.\n+\t(transform_2, transform_3): Initialize some variables.\n+\t(initiate_automaton_gen): Use the new macros.\n+\t\n 2002-06-18  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips-protos.h (mips_initial_elimination_offset): Declare."}, {"sha": "a346a2b197217c2afe3294f55dc466264226e17c", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c8eb86d193160035cb64e7284e2183cd973792/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c8eb86d193160035cb64e7284e2183cd973792/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=e3c8eb86d193160035cb64e7284e2183cd973792", "patch": "@@ -5596,8 +5596,17 @@ only worth to do when we are going to query CPU functional unit\n reservations in an automaton state.\n \n @item\n-@dfn{w} means a generation of the file describing the result\n-automaton.  The file can be used to verify the description.\n+@dfn{time} means printing additional time statistics about\n+generation of automata.\n+\n+@item\n+@dfn{v} means a generation of the file describing the result automata.\n+The file has suffix @samp{.dfa} and can be used for the description\n+verification and debugging.\n+\n+@item\n+@dfn{w} means a generation of warning instead of error for\n+non-critical errors.\n \n @item\n @dfn{ndfa} makes nondeterministic finite state automata.  This affects"}, {"sha": "d32621a03a8187c2ff3a2024ec5790826526f45b", "filename": "gcc/genautomata.c", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c8eb86d193160035cb64e7284e2183cd973792/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c8eb86d193160035cb64e7284e2183cd973792/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=e3c8eb86d193160035cb64e7284e2183cd973792", "patch": "@@ -638,6 +638,10 @@ static struct obstack irp;\n \n #define NO_MINIMIZATION_OPTION \"-no-minimization\"\n \n+#define TIME_OPTION \"-time\"\n+\n+#define V_OPTION \"-v\"\n+\n #define W_OPTION \"-w\"\n \n #define NDFA_OPTION \"-ndfa\"\n@@ -1639,6 +1643,10 @@ gen_automata_option (def)\n {\n   if (strcmp ((char *) XSTR (def, 0), NO_MINIMIZATION_OPTION + 1) == 0)\n     no_minimization_flag = 1;\n+  else if (strcmp ((char *) XSTR (def, 0), TIME_OPTION + 1) == 0)\n+    time_flag = 1;\n+  else if (strcmp ((char *) XSTR (def, 0), V_OPTION + 1) == 0)\n+    v_flag = 1;\n   else if (strcmp ((char *) XSTR (def, 0), W_OPTION + 1) == 0)\n     w_flag = 1;\n   else if (strcmp ((char *) XSTR (def, 0), NDFA_OPTION + 1) == 0)\n@@ -4507,9 +4515,9 @@ transform_2 (regexp)\n {\n   if (regexp->mode == rm_sequence)\n     {\n-      regexp_t sequence;\n+      regexp_t sequence = NULL;\n       regexp_t result;\n-      int sequence_index;\n+      int sequence_index = 0;\n       int i, j;\n \n       for (i = 0; i < regexp->regexp.sequence.regexps_num; i++)\n@@ -4552,9 +4560,9 @@ transform_2 (regexp)\n     }\n   else if (regexp->mode == rm_allof)\n     {\n-      regexp_t allof;\n+      regexp_t allof = NULL;\n       regexp_t result;\n-      int allof_index;\n+      int allof_index = 0;\n       int i, j;\n \n       for (i = 0; i < regexp->regexp.allof.regexps_num; i++)\n@@ -4596,9 +4604,9 @@ transform_2 (regexp)\n     }\n   else if (regexp->mode == rm_oneof)\n     {\n-      regexp_t oneof;\n+      regexp_t oneof = NULL;\n       regexp_t result;\n-      int oneof_index;\n+      int oneof_index = 0;\n       int i, j;\n \n       for (i = 0; i < regexp->regexp.oneof.regexps_num; i++)\n@@ -4652,8 +4660,8 @@ transform_3 (regexp)\n {\n   if (regexp->mode == rm_sequence)\n     {\n-      regexp_t oneof;\n-      int oneof_index;\n+      regexp_t oneof = NULL;\n+      int oneof_index = 0;\n       regexp_t result;\n       regexp_t sequence;\n       int i, j;\n@@ -4701,10 +4709,10 @@ transform_3 (regexp)\n     }\n   else if (regexp->mode == rm_allof)\n     {\n-      regexp_t oneof, seq;\n-      int oneof_index, max_seq_length, allof_length;\n+      regexp_t oneof = NULL, seq;\n+      int oneof_index = 0, max_seq_length, allof_length;\n       regexp_t result;\n-      regexp_t allof, allof_op;\n+      regexp_t allof = NULL, allof_op;\n       int i, j;\n \n       for (i = 0; i < regexp->regexp.allof.regexps_num; i++)\n@@ -9157,9 +9165,9 @@ initiate_automaton_gen (argc, argv)\n   for (i = 2; i < argc; i++)\n     if (strcmp (argv [i], NO_MINIMIZATION_OPTION) == 0)\n       no_minimization_flag = 1;\n-    else if (strcmp (argv [i], \"-time\") == 0)\n+    else if (strcmp (argv [i], TIME_OPTION) == 0)\n       time_flag = 1;\n-    else if (strcmp (argv [i], \"-v\") == 0)\n+    else if (strcmp (argv [i], V_OPTION) == 0)\n       v_flag = 1;\n     else if (strcmp (argv [i], W_OPTION) == 0)\n       w_flag = 1;"}, {"sha": "1acbf983589ae9dab2f26cf4d785134b8e13e55f", "filename": "gcc/rtl.def", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c8eb86d193160035cb64e7284e2183cd973792/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c8eb86d193160035cb64e7284e2183cd973792/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=e3c8eb86d193160035cb64e7284e2183cd973792", "patch": "@@ -419,8 +419,15 @@ DEF_RTL_EXPR(DEFINE_AUTOMATON, \"define_automaton\", \"s\", 'x')\n      is only worth to do when we are going to query CPU functional\n      unit reservations in an automaton state.\n \n-   o \"w\" which means generation of file describing the result\n-     automaton.  The file can be used for the description verification.\n+   o \"time\" which means printing additional time statistics about\n+      generation of automata.\n+  \n+   o \"v\" which means generation of file describing the result\n+     automata.  The file has suffix `.dfa' and can be used for the\n+     description verification and debugging.\n+\n+   o \"w\" which means generation of warning instead of error for\n+     non-critical errors.\n \n    o \"ndfa\" which makes nondeterministic finite state automata.  */\n DEF_RTL_EXPR(AUTOMATA_OPTION, \"automata_option\", \"s\", 'x')"}]}