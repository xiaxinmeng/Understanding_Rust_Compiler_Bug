{"sha": "0c6b087cc13517cbf9f52786e2727b6fc774d9da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2YjA4N2NjMTM1MTdjYmY5ZjUyNzg2ZTI3MjdiNmZjNzc0ZDlkYQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2013-11-28T14:11:12Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2013-11-28T14:11:12Z"}, "message": "tree-ssa-propagate.c (valid_gimple_call_p): Pass TREE_TYPE to is_gimple_reg_type.\n\n\n2013-11-28  Andrew MacLeod  <amacleod@redhat.com>\n\n\t* tree-ssa-propagate.c (valid_gimple_call_p): Pass TREE_TYPE to\n\tis_gimple_reg_type.\n\t* ipa-prop.c (determine_known_aggregate_parts): Likewise.\n\nFrom-SVN: r205485", "tree": {"sha": "2ac42e97013d52641bcf466a25422d9c930d35b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ac42e97013d52641bcf466a25422d9c930d35b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c6b087cc13517cbf9f52786e2727b6fc774d9da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6b087cc13517cbf9f52786e2727b6fc774d9da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6b087cc13517cbf9f52786e2727b6fc774d9da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6b087cc13517cbf9f52786e2727b6fc774d9da/comments", "author": null, "committer": null, "parents": [{"sha": "2f3be698124b5c25f47f579b9bcda2d5f16db54b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3be698124b5c25f47f579b9bcda2d5f16db54b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3be698124b5c25f47f579b9bcda2d5f16db54b"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "507f8627315517b946c69c24f07940bac301a55f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6b087cc13517cbf9f52786e2727b6fc774d9da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6b087cc13517cbf9f52786e2727b6fc774d9da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c6b087cc13517cbf9f52786e2727b6fc774d9da", "patch": "@@ -1,3 +1,9 @@\n+2013-11-28  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* tree-ssa-propagate.c (valid_gimple_call_p): Pass TREE_TYPE to\n+\tis_gimple_reg_type.\n+\t* ipa-prop.c (determine_known_aggregate_parts): Likewise.\n+\n 2013-11-28  Terry Guo  <terry.guo@arm.com>\n \n \t* config/arm/arm.c (v7m_extra_costs): New table."}, {"sha": "712dab76c50db69aa437745772a5fd7b35d61204", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6b087cc13517cbf9f52786e2727b6fc774d9da/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6b087cc13517cbf9f52786e2727b6fc774d9da/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=0c6b087cc13517cbf9f52786e2727b6fc774d9da", "patch": "@@ -1424,7 +1424,7 @@ determine_known_aggregate_parts (gimple call, tree arg,\n \n       lhs = gimple_assign_lhs (stmt);\n       rhs = gimple_assign_rhs1 (stmt);\n-      if (!is_gimple_reg_type (rhs)\n+      if (!is_gimple_reg_type (TREE_TYPE (rhs))\n \t  || TREE_CODE (lhs) == BIT_FIELD_REF\n \t  || contains_bitfld_component_ref_p (lhs))\n \tbreak;"}, {"sha": "783b6513e30d235598a8bceaa92fc85497efc1aa", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6b087cc13517cbf9f52786e2727b6fc774d9da/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6b087cc13517cbf9f52786e2727b6fc774d9da/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=0c6b087cc13517cbf9f52786e2727b6fc774d9da", "patch": "@@ -667,7 +667,7 @@ valid_gimple_call_p (tree expr)\n   for (i = 0; i < nargs; i++)\n     {\n       tree arg = CALL_EXPR_ARG (expr, i);\n-      if (is_gimple_reg_type (arg))\n+      if (is_gimple_reg_type (TREE_TYPE (arg)))\n \t{\n \t  if (!is_gimple_val (arg))\n \t    return false;"}]}