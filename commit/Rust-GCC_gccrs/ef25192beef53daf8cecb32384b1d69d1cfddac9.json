{"sha": "ef25192beef53daf8cecb32384b1d69d1cfddac9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyNTE5MmJlZWY1M2RhZjhjZWNiMzIzODRiMWQ2OWQxY2ZkZGFjOQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2016-05-02T09:50:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T09:50:45Z"}, "message": "a-tigeli.adb (Get_Line): Always set Last prior to returning.\n\n2016-05-02  Yannick Moy  <moy@adacore.com>\n\n\t* a-tigeli.adb (Get_Line): Always set Last prior to returning.\n\n2016-05-02  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref.adb: Minor style fix in whitespace of declarations.\n\t* put_spark_xrefs.adb (Put_SPARK_Xrefs): printing of strings\n\trefactored without loops.\n\t* put_spark_xrefs.ads (Write_Info_Str): new formal argument of\n\tgeneric procedure.\n\t* spark_xrefs.adb (Write_Info_Str): new actual in instantiation\n\tof generic procedure.\n\nFrom-SVN: r235728", "tree": {"sha": "0c4f8091760e29293c1b82c6c11da42360a8fea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c4f8091760e29293c1b82c6c11da42360a8fea7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef25192beef53daf8cecb32384b1d69d1cfddac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef25192beef53daf8cecb32384b1d69d1cfddac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef25192beef53daf8cecb32384b1d69d1cfddac9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef25192beef53daf8cecb32384b1d69d1cfddac9/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ebae28e91ba5a5df5b59e2b114deeb080ec82b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebae28e91ba5a5df5b59e2b114deeb080ec82b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebae28e91ba5a5df5b59e2b114deeb080ec82b27"}], "stats": {"total": 263, "additions": 118, "deletions": 145}, "files": [{"sha": "fe60f30bf85af5d651372b772f219028379e0ebd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef25192beef53daf8cecb32384b1d69d1cfddac9", "patch": "@@ -1,3 +1,17 @@\n+2016-05-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* a-tigeli.adb (Get_Line): Always set Last prior to returning.\n+\n+2016-05-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref.adb: Minor style fix in whitespace of declarations.\n+\t* put_spark_xrefs.adb (Put_SPARK_Xrefs): printing of strings\n+\trefactored without loops.\n+\t* put_spark_xrefs.ads (Write_Info_Str): new formal argument of\n+\tgeneric procedure.\n+\t* spark_xrefs.adb (Write_Info_Str): new actual in instantiation\n+\tof generic procedure.\n+\n 2016-05-02  Arnaud Charlet  <charlet@adacore.com>\n \n \t* lib-xref-spark_specific.adb (Add_SPARK_Scope): add task type scope."}, {"sha": "f7cb533275212cbb3fbd9d56514aad75adc096f7", "filename": "gcc/ada/a-tigeli.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Fa-tigeli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Fa-tigeli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tigeli.adb?ref=ef25192beef53daf8cecb32384b1d69d1cfddac9", "patch": "@@ -150,6 +150,12 @@ is\n begin\n    FIO.Check_Read_Status (AP (File));\n \n+   --  Set Last to Item'First - 1 when no characters are read, as mandated by\n+   --  Ada RM. In the case where Item'First is negative or null, this results\n+   --  in Constraint_Error being raised.\n+\n+   Last := Item'First - 1;\n+\n    --  Immediate exit for null string, this is a case in which we do not\n    --  need to test for end of file and we do not skip a line mark under\n    --  any circumstances.\n@@ -160,8 +166,6 @@ begin\n \n    N := Item'Last - Item'First + 1;\n \n-   Last := Item'First - 1;\n-\n    --  Here we have at least one character, if we are immediately before\n    --  a line mark, then we will just skip past it storing no characters.\n "}, {"sha": "ef4acb5d43f04b6bc7a129447b529ccb758b04e8", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=ef25192beef53daf8cecb32384b1d69d1cfddac9", "patch": "@@ -191,8 +191,7 @@ package body Lib.Xref is\n \n          Set_Has_Xref_Entry (Key.Ent);\n \n-      --  It was already in Xref_Set, so throw away the tentatively-added\n-      --  entry.\n+      --  It was already in Xref_Set, so throw away the tentatively-added entry\n \n       else\n          Xrefs.Decrement_Last;\n@@ -373,16 +372,16 @@ package body Lib.Xref is\n       Set_Ref : Boolean   := True;\n       Force   : Boolean   := False)\n    is\n-      Actual_Typ     : Character := Typ;\n-      Call           : Node_Id;\n-      Def            : Source_Ptr;\n-      Ent            : Entity_Id;\n-      Ent_Scope      : Entity_Id;\n-      Formal         : Entity_Id;\n-      Kind           : Entity_Kind;\n-      Nod            : Node_Id;\n-      Ref            : Source_Ptr;\n-      Ref_Scope      : Entity_Id;\n+      Actual_Typ : Character := Typ;\n+      Call       : Node_Id;\n+      Def        : Source_Ptr;\n+      Ent        : Entity_Id;\n+      Ent_Scope  : Entity_Id;\n+      Formal     : Entity_Id;\n+      Kind       : Entity_Kind;\n+      Nod        : Node_Id;\n+      Ref        : Source_Ptr;\n+      Ref_Scope  : Entity_Id;\n \n       function Get_Through_Renamings (E : Entity_Id) return Entity_Id;\n       --  Get the enclosing entity through renamings, which may come from"}, {"sha": "0c6ba2f8065e5d06ceae9a59c2a7d6e44726e4af", "filename": "gcc/ada/put_spark_xrefs.adb", "status": "modified", "additions": 78, "deletions": 128, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Fput_spark_xrefs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Fput_spark_xrefs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_spark_xrefs.adb?ref=ef25192beef53daf8cecb32384b1d69d1cfddac9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,47 +31,30 @@ begin\n \n    for J in 1 .. SPARK_File_Table.Last loop\n       declare\n-         F     : SPARK_File_Record renames SPARK_File_Table.Table (J);\n-         Start : Scope_Index;\n-         Stop  : Scope_Index;\n+         F : SPARK_File_Record renames SPARK_File_Table.Table (J);\n \n       begin\n-         Start := F.From_Scope;\n-         Stop  := F.To_Scope;\n-\n          Write_Info_Initiate ('F');\n          Write_Info_Char ('D');\n          Write_Info_Char (' ');\n          Write_Info_Nat (F.File_Num);\n          Write_Info_Char (' ');\n \n-         for N in F.File_Name'Range loop\n-            Write_Info_Char (F.File_Name (N));\n-         end loop;\n+         Write_Info_Str (F.File_Name.all);\n \n          --  If file is a subunit, print the file name for the unit\n \n          if F.Unit_File_Name /= null then\n-            Write_Info_Char (' ');\n-            Write_Info_Char ('-');\n-            Write_Info_Char ('>');\n-            Write_Info_Char (' ');\n-\n-            for N in F.Unit_File_Name'Range loop\n-               Write_Info_Char (F.Unit_File_Name (N));\n-            end loop;\n+            Write_Info_Str (\" -> \" & F.Unit_File_Name.all);\n          end if;\n \n          Write_Info_Terminate;\n \n          --  Loop through scope entries for this file\n \n-         loop\n-            exit when Start = Stop + 1;\n-            pragma Assert (Start <= Stop);\n-\n+         for J in F.From_Scope .. F.To_Scope loop\n             declare\n-               S : SPARK_Scope_Record renames SPARK_Scope_Table.Table (Start);\n+               S : SPARK_Scope_Record renames SPARK_Scope_Table.Table (J);\n \n             begin\n                Write_Info_Initiate ('F');\n@@ -87,24 +70,17 @@ begin\n \n                pragma Assert (S.Scope_Name.all /= \"\");\n \n-               for N in S.Scope_Name'Range loop\n-                  Write_Info_Char (S.Scope_Name (N));\n-               end loop;\n+               Write_Info_Str (S.Scope_Name.all);\n \n                if S.Spec_File_Num /= 0 then\n-                  Write_Info_Char (' ');\n-                  Write_Info_Char ('-');\n-                  Write_Info_Char ('>');\n-                  Write_Info_Char (' ');\n+                  Write_Info_Str (\" -> \");\n                   Write_Info_Nat (S.Spec_File_Num);\n                   Write_Info_Char ('.');\n                   Write_Info_Nat (S.Spec_Scope_Num);\n                end if;\n \n                Write_Info_Terminate;\n             end;\n-\n-            Start := Start + 1;\n          end loop;\n       end;\n    end loop;\n@@ -114,129 +90,103 @@ begin\n    for J in 1 .. SPARK_File_Table.Last loop\n       declare\n          F           : SPARK_File_Record renames SPARK_File_Table.Table (J);\n-         Start       : Scope_Index;\n-         Stop        : Scope_Index;\n          File        : Nat;\n          Scope       : Nat;\n          Entity_Line : Nat;\n          Entity_Col  : Nat;\n \n       begin\n-         Start := F.From_Scope;\n-         Stop  := F.To_Scope;\n-\n          --  Loop through scope entries for this file\n \n-         loop\n-            exit when Start = Stop + 1;\n-            pragma Assert (Start <= Stop);\n-\n+         for K in F.From_Scope .. F.To_Scope loop\n             Output_One_Scope : declare\n-               S : SPARK_Scope_Record renames SPARK_Scope_Table.Table (Start);\n-\n-               XStart : Xref_Index;\n-               XStop  : Xref_Index;\n+               S : SPARK_Scope_Record renames SPARK_Scope_Table.Table (K);\n \n             begin\n-               XStart := S.From_Xref;\n-               XStop  := S.To_Xref;\n+               --  Write only non-empty tables\n+               if S.From_Xref <= S.To_Xref then\n \n-               if XStart > XStop then\n-                  goto Continue;\n-               end if;\n+                  Write_Info_Initiate ('F');\n+                  Write_Info_Char ('X');\n+                  Write_Info_Char (' ');\n+                  Write_Info_Nat (F.File_Num);\n+                  Write_Info_Char (' ');\n \n-               Write_Info_Initiate ('F');\n-               Write_Info_Char ('X');\n-               Write_Info_Char (' ');\n-               Write_Info_Nat (F.File_Num);\n-               Write_Info_Char (' ');\n+                  Write_Info_Str (F.File_Name.all);\n+\n+                  Write_Info_Char (' ');\n+                  Write_Info_Char ('.');\n+                  Write_Info_Nat (S.Scope_Num);\n+                  Write_Info_Char (' ');\n \n-               for N in F.File_Name'Range loop\n-                  Write_Info_Char (F.File_Name (N));\n-               end loop;\n+                  Write_Info_Str (S.Scope_Name.all);\n \n-               Write_Info_Char (' ');\n-               Write_Info_Char ('.');\n-               Write_Info_Nat (S.Scope_Num);\n-               Write_Info_Char (' ');\n+                  --  Default value of (0,0) is used for the special __HEAP\n+                  --  variable so use another default value.\n \n-               for N in S.Scope_Name'Range loop\n-                  Write_Info_Char (S.Scope_Name (N));\n-               end loop;\n+                  Entity_Line := 0;\n+                  Entity_Col  := 1;\n \n-               --  Default value of (0,0) is used for the special __HEAP\n-               --  variable so use another default value.\n+                  --  Loop through cross reference entries for this scope\n \n-               Entity_Line := 0;\n-               Entity_Col  := 1;\n+                  for X in S.From_Xref .. S.To_Xref loop\n \n-               --  Loop through cross reference entries for this scope\n+                     Output_One_Xref : declare\n+                        R : SPARK_Xref_Record renames\n+                          SPARK_Xref_Table.Table (X);\n \n-               loop\n-                  exit when XStart = XStop + 1;\n-                  pragma Assert (XStart <= XStop);\n+                     begin\n+                        if R.Entity_Line /= Entity_Line\n+                          or else R.Entity_Col /= Entity_Col\n+                        then\n+                           Write_Info_Terminate;\n \n-                  Output_One_Xref : declare\n-                     R : SPARK_Xref_Record renames\n-                           SPARK_Xref_Table.Table (XStart);\n+                           Write_Info_Initiate ('F');\n+                           Write_Info_Char (' ');\n+                           Write_Info_Nat (R.Entity_Line);\n+                           Write_Info_Char (R.Etype);\n+                           Write_Info_Nat (R.Entity_Col);\n+                           Write_Info_Char (' ');\n \n-                  begin\n-                     if R.Entity_Line /= Entity_Line\n-                       or else R.Entity_Col /= Entity_Col\n-                     then\n-                        Write_Info_Terminate;\n+                           Write_Info_Str (R.Entity_Name.all);\n+\n+                           Entity_Line := R.Entity_Line;\n+                           Entity_Col  := R.Entity_Col;\n+                           File        := F.File_Num;\n+                           Scope       := S.Scope_Num;\n+                        end if;\n+\n+                        if Write_Info_Col > 72 then\n+                           Write_Info_Terminate;\n+                           Write_Info_Initiate ('.');\n+                        end if;\n \n-                        Write_Info_Initiate ('F');\n-                        Write_Info_Char (' ');\n-                        Write_Info_Nat (R.Entity_Line);\n-                        Write_Info_Char (R.Etype);\n-                        Write_Info_Nat (R.Entity_Col);\n                         Write_Info_Char (' ');\n \n-                        for N in R.Entity_Name'Range loop\n-                           Write_Info_Char (R.Entity_Name (N));\n-                        end loop;\n-\n-                        Entity_Line := R.Entity_Line;\n-                        Entity_Col  := R.Entity_Col;\n-                        File        := F.File_Num;\n-                        Scope       := S.Scope_Num;\n-                     end if;\n-\n-                     if Write_Info_Col > 72 then\n-                        Write_Info_Terminate;\n-                        Write_Info_Initiate ('.');\n-                     end if;\n-\n-                     Write_Info_Char (' ');\n-\n-                     if R.File_Num /= File then\n-                        Write_Info_Nat (R.File_Num);\n-                        Write_Info_Char ('|');\n-                        File  := R.File_Num;\n-                        Scope := 0;\n-                     end if;\n-\n-                     if R.Scope_Num /= Scope then\n-                        Write_Info_Char ('.');\n-                        Write_Info_Nat (R.Scope_Num);\n-                        Write_Info_Char (':');\n-                        Scope := R.Scope_Num;\n-                     end if;\n-\n-                     Write_Info_Nat (R.Line);\n-                     Write_Info_Char (R.Rtype);\n-                     Write_Info_Nat (R.Col);\n-                  end Output_One_Xref;\n-\n-                  XStart := XStart + 1;\n-               end loop;\n+                        if R.File_Num /= File then\n+                           Write_Info_Nat (R.File_Num);\n+                           Write_Info_Char ('|');\n+                           File  := R.File_Num;\n+                           Scope := 0;\n+                        end if;\n \n-               Write_Info_Terminate;\n-            end Output_One_Scope;\n+                        if R.Scope_Num /= Scope then\n+                           Write_Info_Char ('.');\n+                           Write_Info_Nat (R.Scope_Num);\n+                           Write_Info_Char (':');\n+                           Scope := R.Scope_Num;\n+                        end if;\n \n-         <<Continue>>\n-            Start := Start + 1;\n+                        Write_Info_Nat (R.Line);\n+                        Write_Info_Char (R.Rtype);\n+                        Write_Info_Nat (R.Col);\n+                     end Output_One_Xref;\n+\n+                  end loop;\n+\n+                  Write_Info_Terminate;\n+               end if;\n+            end Output_One_Scope;\n          end loop;\n       end;\n    end loop;"}, {"sha": "fa4a4bc04e0cb2052dd9a81af2e8f81720f772cb", "filename": "gcc/ada/put_spark_xrefs.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Fput_spark_xrefs.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Fput_spark_xrefs.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_spark_xrefs.ads?ref=ef25192beef53daf8cecb32384b1d69d1cfddac9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,6 +43,9 @@ generic\n    with procedure Write_Info_Char (C : Character) is <>;\n    --  Output one character\n \n+   with procedure Write_Info_Str (Val : String) is <>;\n+   --  Output string stored in string pointer\n+\n    with procedure Write_Info_Initiate (Key : Character) is <>;\n    --  Initiate write of new line to output file, the parameter is the\n    --  keyword character for the line."}, {"sha": "8fab555ac20f834b31a04d5e98b5259090155b0d", "filename": "gcc/ada/spark_xrefs.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Fspark_xrefs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef25192beef53daf8cecb32384b1d69d1cfddac9/gcc%2Fada%2Fspark_xrefs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fspark_xrefs.adb?ref=ef25192beef53daf8cecb32384b1d69d1cfddac9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -160,7 +160,10 @@ package body SPARK_Xrefs is\n    procedure pspark is\n \n       procedure Write_Info_Char (C : Character) renames Write_Char;\n-      --  Write one character;\n+      --  Write one character\n+\n+      procedure Write_Info_Str (Val : String) renames Write_Str;\n+      --  Write string\n \n       function Write_Info_Col return Positive;\n       --  Return next column for writing"}]}