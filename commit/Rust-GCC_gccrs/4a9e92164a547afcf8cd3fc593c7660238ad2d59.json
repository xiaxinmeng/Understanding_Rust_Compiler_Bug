{"sha": "4a9e92164a547afcf8cd3fc593c7660238ad2d59", "node_id": "C_kwDOANBUbNoAKDRhOWU5MjE2NGE1NDdhZmNmOGNkM2ZjNTkzYzc2NjAyMzhhZDJkNTk", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-23T09:29:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-23T09:29:37Z"}, "message": "testsuite: Fix up sse2-v1ti-shift-3.c test [PR102986]\n\nThis test is dg-do run and invokes UB when these rotate functions\nare called with 0 as second argument.  There are some other tests\nthat do this but they are dg-do compile only and not even call those\nfunctions at all, so it IMHO doesn't matter that they are only well\ndefined for [1,127] and not [0,127].\n\nThe following patch fixes it, we pattern recognize both forms as rotates\nand we emit identical assembly.\n\n2022-03-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/102986\n\t* gcc.target/i386/sse2-v1ti-shift-3.c (rotr_v1ti, rotl_v1ti, rotr_ti,\n\trotl_ti): Use -i&127 instead of 128-i to avoid UB on i == 0.", "tree": {"sha": "6903a24b602e7dac85bef0f590fffb7e89ed89a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6903a24b602e7dac85bef0f590fffb7e89ed89a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a9e92164a547afcf8cd3fc593c7660238ad2d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9e92164a547afcf8cd3fc593c7660238ad2d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a9e92164a547afcf8cd3fc593c7660238ad2d59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9e92164a547afcf8cd3fc593c7660238ad2d59/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1002a7ace111d746249fdea71af9b8e039cea0eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1002a7ace111d746249fdea71af9b8e039cea0eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1002a7ace111d746249fdea71af9b8e039cea0eb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b4739d30da9088b22c68e73727d83cc787314631", "filename": "gcc/testsuite/gcc.target/i386/sse2-v1ti-shift-3.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9e92164a547afcf8cd3fc593c7660238ad2d59/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-v1ti-shift-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9e92164a547afcf8cd3fc593c7660238ad2d59/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-v1ti-shift-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-v1ti-shift-3.c?ref=4a9e92164a547afcf8cd3fc593c7660238ad2d59", "patch": "@@ -14,14 +14,14 @@ typedef __int128 ti;\n uv1ti ashl_v1ti(uv1ti x, unsigned int i) { return x << i; }\n uv1ti lshr_v1ti(uv1ti x, unsigned int i) { return x >> i; }\n sv1ti ashr_v1ti(sv1ti x, unsigned int i) { return x >> i; }\n-uv1ti rotr_v1ti(uv1ti x, unsigned int i) { return (x >> i) | (x << (128-i)); }\n-uv1ti rotl_v1ti(uv1ti x, unsigned int i) { return (x << i) | (x >> (128-i)); }\n+uv1ti rotr_v1ti(uv1ti x, unsigned int i) { return (x >> i) | (x << (-i&127)); }\n+uv1ti rotl_v1ti(uv1ti x, unsigned int i) { return (x << i) | (x >> (-i&127)); }\n \n uti ashl_ti(uti x, unsigned int i) { return x << i; }\n uti lshr_ti(uti x, unsigned int i) { return x >> i; }\n sti ashr_ti(sti x, unsigned int i) { return x >> i; }\n-uti rotr_ti(uti x, unsigned int i) { return (x >> i) | (x << (128-i)); }\n-uti rotl_ti(uti x, unsigned int i) { return (x << i) | (x >> (128-i)); }\n+uti rotr_ti(uti x, unsigned int i) { return (x >> i) | (x << (-i&127)); }\n+uti rotl_ti(uti x, unsigned int i) { return (x << i) | (x >> (-i&127)); }\n \n void test(ti x)\n {"}]}