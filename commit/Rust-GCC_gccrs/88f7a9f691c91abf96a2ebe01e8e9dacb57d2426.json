{"sha": "88f7a9f691c91abf96a2ebe01e8e9dacb57d2426", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhmN2E5ZjY5MWM5MWFiZjk2YTJlYmUwMWU4ZTlkYWNiNTdkMjQyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-02-08T09:52:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-02-08T09:52:19Z"}, "message": "re PR c++/51675 ([C++11][4.7 Regression] Cannot create constexpr unions)\n\n\tPR c++/51675\n\t* semantics.c (cx_check_missing_mem_inits): Handle unions.\n\tFix constexpr default constructor logic.\n\nFrom-SVN: r184001", "tree": {"sha": "1effa9fa3ac6b2ec9153c656ca5818fd538b0542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1effa9fa3ac6b2ec9153c656ca5818fd538b0542"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84d594c6487e4502beb72786cdd82c234b549a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84d594c6487e4502beb72786cdd82c234b549a98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84d594c6487e4502beb72786cdd82c234b549a98"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "f9246e56b74be59d76b8bbe6367035b06b3e8459", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=88f7a9f691c91abf96a2ebe01e8e9dacb57d2426", "patch": "@@ -1,5 +1,9 @@\n 2012-02-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51675\n+\t* semantics.c (cx_check_missing_mem_inits): Handle unions.\n+\tFix constexpr default constructor logic.\n+\n \tPR c++/52035\n \t* pt.c (tsubst): Strip uninstantiated typedef.\n "}, {"sha": "5646fa7471734638471dcf86b528133147339a0e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=88f7a9f691c91abf96a2ebe01e8e9dacb57d2426", "patch": "@@ -6025,13 +6025,28 @@ cx_check_missing_mem_inits (tree fun, tree body, bool complain)\n   bool bad;\n   tree field;\n   unsigned i, nelts;\n+  tree ctype;\n \n   if (TREE_CODE (body) != CONSTRUCTOR)\n     return false;\n \n-  bad = false;\n   nelts = CONSTRUCTOR_NELTS (body);\n-  field = TYPE_FIELDS (DECL_CONTEXT (fun));\n+  ctype = DECL_CONTEXT (fun);\n+  field = TYPE_FIELDS (ctype);\n+\n+  if (TREE_CODE (ctype) == UNION_TYPE)\n+    {\n+      if (nelts == 0 && next_initializable_field (field))\n+\t{\n+\t  if (complain)\n+\t    error (\"%<constexpr%> constructor for union %qT must \"\n+\t\t   \"initialize exactly one non-static data member\", ctype);\n+\t  return true;\n+\t}\n+      return false;\n+    }\n+\n+  bad = false;\n   for (i = 0; i <= nelts; ++i)\n     {\n       tree index;\n@@ -6050,8 +6065,6 @@ cx_check_missing_mem_inits (tree fun, tree body, bool complain)\n \t  if (TREE_CODE (field) != FIELD_DECL\n \t      || (DECL_C_BIT_FIELD (field) && !DECL_NAME (field)))\n \t    continue;\n-\t  if (!complain)\n-\t    return true;\n \t  ftype = strip_array_types (TREE_TYPE (field));\n \t  if (type_has_constexpr_default_constructor (ftype))\n \t    {\n@@ -6062,6 +6075,8 @@ cx_check_missing_mem_inits (tree fun, tree body, bool complain)\n \t\t\t\t   || errorcount != 0);\n \t      continue;\n \t    }\n+\t  if (!complain)\n+\t    return true;\n \t  error (\"uninitialized member %qD in %<constexpr%> constructor\",\n \t\t field);\n \t  bad = true;"}, {"sha": "482b4899dd13ffa07648cf3ef76e08a434711ffd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88f7a9f691c91abf96a2ebe01e8e9dacb57d2426", "patch": "@@ -1,5 +1,8 @@\n 2012-02-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51675\n+\t* g++.dg/cpp0x/constexpr-union3.C: New.\n+\n \tPR c++/52035\n \t* g++.dg/lto/pr52035_0.C: New.\n "}, {"sha": "bac9cabfe532c5417422993de85bf80232ec190b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-union3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f7a9f691c91abf96a2ebe01e8e9dacb57d2426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-union3.C?ref=88f7a9f691c91abf96a2ebe01e8e9dacb57d2426", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/51675\n+// { dg-options -std=c++11 }\n+\n+union foo\n+{\n+  int x;\n+  short y;\n+\n+  constexpr foo(): x(0) { }\n+};\n+\n+constexpr foo f;"}]}