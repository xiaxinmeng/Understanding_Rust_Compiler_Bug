{"sha": "66c48be23e0fa5ee7474b4b078e013f901c71eed", "node_id": "C_kwDOANBUbNoAKDY2YzQ4YmUyM2UwZmE1ZWU3NDc0YjRiMDc4ZTAxM2Y5MDFjNzFlZWQ", "commit": {"author": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2022-08-02T10:57:18Z"}, "committer": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2022-10-09T06:39:04Z"}, "message": "MIPS: improve -march=native arch detection\n\nIf we cannot get info from options and cpuinfo, we try to get from:\n  1. getauxval(AT_BASE_PLATFORM), introduced since Linux 5.7\n  2. _MIPS_ARCH from host compiler.\n\nmnan=2008 option is also used if __mips_nan2008__ is used.\nThis can fix the wrong loader usage on r5/r6 platform with\n -march=native.\n\ngcc/ChangeLog:\n\t* config.gcc: set with_arch to default_mips_arch if no defined.\n\t* config/mips/driver-native.cc (host_detect_local_cpu):\n\t  try getauxval(AT_BASE_PLATFORM) and _MIPS_ARCH, too.\n\t  pass -mnan=2008 if __mips_nan2008__ is defined.\n\t* config.in: define HAVE_SYS_AUXV_H and HAVE_GETAUXVAL.\n\t* configure.ac: detect sys/auxv.h and getauxval.\n\t* configure: regenerated.", "tree": {"sha": "d8e437b2fb99d5820c2f84a8bbc01e4a1848f1ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8e437b2fb99d5820c2f84a8bbc01e4a1848f1ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66c48be23e0fa5ee7474b4b078e013f901c71eed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c48be23e0fa5ee7474b4b078e013f901c71eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c48be23e0fa5ee7474b4b078e013f901c71eed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c48be23e0fa5ee7474b4b078e013f901c71eed/comments", "author": null, "committer": null, "parents": [{"sha": "d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "eec544ff1baca7fd1d2cd1fc03b2f8c9145bc47b", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=66c48be23e0fa5ee7474b4b078e013f901c71eed", "patch": "@@ -5608,6 +5608,8 @@ case ${target} in\n \t\tesac\n \t\tif test x$with_arch != x; then\n \t\t\tdefault_mips_arch=$with_arch\n+\t\telse\n+\t\t\twith_arch=$default_mips_arch\n \t\tfi\n \t\tif test x$with_abi != x; then\n \t\t\tdefault_mips_abi=$with_abi"}, {"sha": "cc217b94e0cbded4c86a05adba803341d9bdd7eb", "filename": "gcc/config.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=66c48be23e0fa5ee7474b4b078e013f901c71eed", "patch": "@@ -1939,6 +1939,12 @@\n #endif\n \n \n+/* Define to 1 if you have the <sys/auxv.h> header file. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_SYS_AUXV_H\n+#endif\n+\n+\n /* Define to 1 if you have the <sys/file.h> header file. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_SYS_FILE_H\n@@ -2672,3 +2678,7 @@\n #undef vfork\n #endif\n \n+/* Define to 1 if you have the `getauxval' function. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GETAUXVAL\n+#endif"}, {"sha": "327ad255c3e7e22e59775b8aa2196171b1e47092", "filename": "gcc/config/mips/driver-native.cc", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfig%2Fmips%2Fdriver-native.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfig%2Fmips%2Fdriver-native.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fdriver-native.cc?ref=66c48be23e0fa5ee7474b4b078e013f901c71eed", "patch": "@@ -23,6 +23,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#ifdef HAVE_SYS_AUXV_H\n+#include <sys/auxv.h>\n+#endif\n \n /* This will be called by the spec parser in gcc.cc when it sees\n    a %:local_cpu_detect(args) construct.  Currently it will be called\n@@ -41,6 +44,7 @@ const char *\n host_detect_local_cpu (int argc, const char **argv)\n {\n   const char *cpu = NULL;\n+  char *ret = NULL;\n   char buf[128];\n   FILE *f;\n   bool arch;\n@@ -54,7 +58,7 @@ host_detect_local_cpu (int argc, const char **argv)\n \n   f = fopen (\"/proc/cpuinfo\", \"r\");\n   if (f == NULL)\n-    return NULL;\n+    goto fallback_cpu;\n \n   while (fgets (buf, sizeof (buf), f) != NULL)\n     if (startswith (buf, \"cpu model\"))\n@@ -84,8 +88,23 @@ host_detect_local_cpu (int argc, const char **argv)\n \n   fclose (f);\n \n+fallback_cpu:\n+#if defined (__mips_nan2008)\n+  ret = reconcat (ret, \" -mnan=2008 \", NULL);\n+#endif\n+\n+#ifdef HAVE_GETAUXVAL\n   if (cpu == NULL)\n-    return NULL;\n+    cpu = (const char *) getauxval (AT_BASE_PLATFORM);\n+#endif\n+\n+#if defined (_MIPS_ARCH)\n+  if (cpu == NULL)\n+    cpu = _MIPS_ARCH;\n+#endif\n+\n+  if (cpu)\n+    ret = reconcat (ret, ret, \"-m\", argv[0], \"=\", cpu, NULL);\n \n-  return concat (\"-m\", argv[0], \"=\", cpu, NULL);\n+  return ret;\n }"}, {"sha": "b512580414a6233f2ee9a55bd3d2e6708d799e22", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=66c48be23e0fa5ee7474b4b078e013f901c71eed", "patch": "@@ -9327,7 +9327,7 @@ $as_echo \"#define GWINSZ_IN_SYS_IOCTL 1\" >>confdefs.h\n fi\n \n for ac_header in limits.h stddef.h string.h strings.h stdlib.h time.h iconv.h \\\n-\t\t fcntl.h ftw.h unistd.h sys/file.h sys/time.h sys/mman.h \\\n+\t\t fcntl.h ftw.h unistd.h sys/auxv.h sys/file.h sys/time.h sys/mman.h \\\n \t\t sys/resource.h sys/param.h sys/times.h sys/stat.h sys/locking.h \\\n \t\t direct.h malloc.h langinfo.h ldfcn.h locale.h wchar.h\n do :\n@@ -10622,7 +10622,7 @@ fi\n for ac_func in times clock kill getrlimit setrlimit atoq \\\n \tpopen sysconf strsignal getrusage nl_langinfo \\\n \tgettimeofday mbstowcs wcswidth mmap posix_fallocate setlocale \\\n-\tclearerr_unlocked feof_unlocked   ferror_unlocked fflush_unlocked fgetc_unlocked fgets_unlocked   fileno_unlocked fprintf_unlocked fputc_unlocked fputs_unlocked   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked   putchar_unlocked putc_unlocked madvise mallinfo mallinfo2 fstatat\n+\tclearerr_unlocked feof_unlocked   ferror_unlocked fflush_unlocked fgetc_unlocked fgets_unlocked   fileno_unlocked fprintf_unlocked fputc_unlocked fputs_unlocked   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked   putchar_unlocked putc_unlocked madvise mallinfo mallinfo2 fstatat getauxval\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_cxx_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\""}, {"sha": "e48fcbfe18ea827ad017a6210c51514c29316764", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c48be23e0fa5ee7474b4b078e013f901c71eed/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=66c48be23e0fa5ee7474b4b078e013f901c71eed", "patch": "@@ -1307,7 +1307,7 @@ ACX_HEADER_STRING\n AC_HEADER_SYS_WAIT\n AC_HEADER_TIOCGWINSZ\n AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h iconv.h \\\n-\t\t fcntl.h ftw.h unistd.h sys/file.h sys/time.h sys/mman.h \\\n+\t\t fcntl.h ftw.h unistd.h sys/auxv.h sys/file.h sys/time.h sys/mman.h \\\n \t\t sys/resource.h sys/param.h sys/times.h sys/stat.h sys/locking.h \\\n \t\t direct.h malloc.h langinfo.h ldfcn.h locale.h wchar.h)\n \n@@ -1525,7 +1525,7 @@ define(gcc_UNLOCKED_FUNCS, clearerr_unlocked feof_unlocked dnl\n AC_CHECK_FUNCS(times clock kill getrlimit setrlimit atoq \\\n \tpopen sysconf strsignal getrusage nl_langinfo \\\n \tgettimeofday mbstowcs wcswidth mmap posix_fallocate setlocale \\\n-\tgcc_UNLOCKED_FUNCS madvise mallinfo mallinfo2 fstatat)\n+\tgcc_UNLOCKED_FUNCS madvise mallinfo mallinfo2 fstatat getauxval)\n \n if test x$ac_cv_func_mbstowcs = xyes; then\n   AC_CACHE_CHECK(whether mbstowcs works, gcc_cv_func_mbstowcs_works,"}]}