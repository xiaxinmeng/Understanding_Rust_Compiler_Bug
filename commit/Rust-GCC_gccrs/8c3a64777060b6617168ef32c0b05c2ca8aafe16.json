{"sha": "8c3a64777060b6617168ef32c0b05c2ca8aafe16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMzYTY0Nzc3MDYwYjY2MTcxNjhlZjMyYzBiMDVjMmNhOGFhZmUxNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-24T21:46:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-24T21:46:59Z"}, "message": "(decl_constant_value): Test for const and not iterator.\n\n(default_conversion, digest_init): Remove redundant checks before calling\ndecl_constant_value.\n(convert_for_assignment): See if RHS has a constant value.\n\nFrom-SVN: r7565", "tree": {"sha": "fd02611fe7af342460422f43db0541ae37801c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd02611fe7af342460422f43db0541ae37801c30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c3a64777060b6617168ef32c0b05c2ca8aafe16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3a64777060b6617168ef32c0b05c2ca8aafe16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c3a64777060b6617168ef32c0b05c2ca8aafe16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c3a64777060b6617168ef32c0b05c2ca8aafe16/comments", "author": null, "committer": null, "parents": [{"sha": "289871f06fe076aec1257cb1f13d33a0a30dcaa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/289871f06fe076aec1257cb1f13d33a0a30dcaa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/289871f06fe076aec1257cb1f13d33a0a30dcaa7"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "96a0a0a8cf146e8336e221d82c8deb6cec4ad6b0", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c3a64777060b6617168ef32c0b05c2ca8aafe16/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c3a64777060b6617168ef32c0b05c2ca8aafe16/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=8c3a64777060b6617168ef32c0b05c2ca8aafe16", "patch": "@@ -961,6 +961,7 @@ decl_constant_value (decl)\n       && current_function_decl != 0\n       && ! pedantic\n       && ! TREE_THIS_VOLATILE (decl)\n+      && TREE_READONLY (decl) && ! ITERATOR_P (decl)\n       && DECL_INITIAL (decl) != 0\n       && TREE_CODE (DECL_INITIAL (decl)) != ERROR_MARK\n       /* This is invalid if initial value is not constant.\n@@ -990,12 +991,7 @@ default_conversion (exp)\n   if (TREE_CODE (exp) == CONST_DECL)\n     exp = DECL_INITIAL (exp);\n   /* Replace a nonvolatile const static variable with its value.  */\n-  else if (optimize\n-\t   && TREE_CODE (exp) == VAR_DECL\n-\t   && TREE_READONLY (exp)\n-\t   /* But not for iterators!  */\n-\t   && !ITERATOR_P (exp)\n-\t   && DECL_MODE (exp) != BLKmode)\n+  else if (optimize && TREE_CODE (exp) == VAR_DECL)\n     {\n       exp = decl_constant_value (exp);\n       type = TREE_TYPE (exp);\n@@ -3846,6 +3842,8 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n   if (TREE_CODE (TREE_TYPE (rhs)) == ARRAY_TYPE\n       || TREE_CODE (TREE_TYPE (rhs)) == FUNCTION_TYPE)\n     rhs = default_conversion (rhs);\n+  else if (optimize && TREE_CODE (rhs) == VAR_DECL)\n+    rhs = decl_constant_value (rhs);\n \n   rhstype = TREE_TYPE (rhs);\n   coder = TREE_CODE (rhstype);\n@@ -4664,8 +4662,7 @@ digest_init (type, init, require_constant, constructor_constant)\n \t  return error_mark_node;\n \t}\n \n-      if (optimize && TREE_READONLY (inside_init)\n-\t  && TREE_CODE (inside_init) == VAR_DECL)\n+      if (optimize && TREE_CODE (inside_init) == VAR_DECL)\n \tinside_init = decl_constant_value (inside_init);\n \n       /* Compound expressions can only occur here if -pedantic or"}]}