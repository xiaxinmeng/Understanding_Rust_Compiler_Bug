{"sha": "81db9d770d61ae347a11c79a1f60c134fe729c85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFkYjlkNzcwZDYxYWUzNDdhMTFjNzlhMWY2MGMxMzRmZTcyOWM4NQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2007-10-15T13:57:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:57:06Z"}, "message": "sem_ch6.adb (Find_Corresponding_Spec): If the previous entity is a body generated for a function with a controlling...\n\n2007-10-15  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Find_Corresponding_Spec): If the previous entity is a\n\tbody generated for a function with a controlling result that is a null\n\textension, discard the generated body in favor of the current explicit\n\tone.\n\nFrom-SVN: r129336", "tree": {"sha": "d8342abd37ef48a2c1884abc9f6a9d712aa4a955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8342abd37ef48a2c1884abc9f6a9d712aa4a955"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81db9d770d61ae347a11c79a1f60c134fe729c85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81db9d770d61ae347a11c79a1f60c134fe729c85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81db9d770d61ae347a11c79a1f60c134fe729c85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81db9d770d61ae347a11c79a1f60c134fe729c85/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78ee282c500aff850dcc54b06d5f9ded6ccaab44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78ee282c500aff850dcc54b06d5f9ded6ccaab44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78ee282c500aff850dcc54b06d5f9ded6ccaab44"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "69064c28a80e5f5d7bd84987bbc1417fcf0c581b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81db9d770d61ae347a11c79a1f60c134fe729c85/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81db9d770d61ae347a11c79a1f60c134fe729c85/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=81db9d770d61ae347a11c79a1f60c134fe729c85", "patch": "@@ -96,8 +96,8 @@ package body Sem_Ch6 is\n    --  Common processing for simple_ and extended_return_statements\n \n    procedure Analyze_Function_Return (N : Node_Id);\n-   --  Subsidiary to Analyze_Return_Statement.\n-   --  Called when the return statement applies to a [generic] function.\n+   --  Subsidiary to Analyze_Return_Statement. Called when the return statement\n+   --  applies to a [generic] function.\n \n    procedure Analyze_Return_Type (N : Node_Id);\n    --  Subsidiary to Process_Formals: analyze subtype mark in function\n@@ -335,6 +335,7 @@ package body Sem_Ch6 is\n          End_Scope;\n       end if;\n \n+      Kill_Current_Values (Last_Assignment_Only => True);\n       Check_Unreachable_Code (N);\n    end Analyze_Return_Statement;\n \n@@ -1979,7 +1980,6 @@ package body Sem_Ch6 is\n                                 Protected_Body_Subprogram (Spec_Id);\n             Prot_Ext_Formal : Entity_Id := Extra_Formals (Spec_Id);\n             Impl_Ext_Formal : Entity_Id := Extra_Formals (Impl_Subp);\n-\n          begin\n             while Present (Prot_Ext_Formal) loop\n                pragma Assert (Present (Impl_Ext_Formal));\n@@ -3780,6 +3780,7 @@ package body Sem_Ch6 is\n       Err_Loc : Node_Id := Empty)\n    is\n       Result : Boolean;\n+      pragma Warnings (Off, Result);\n    begin\n       Check_Conformance\n         (New_Id, Old_Id, Fully_Conformant, True, Result, Err_Loc);\n@@ -3796,7 +3797,7 @@ package body Sem_Ch6 is\n       Get_Inst : Boolean := False)\n    is\n       Result : Boolean;\n-\n+      pragma Warnings (Off, Result);\n    begin\n       Check_Conformance\n         (New_Id, Old_Id, Mode_Conformant, True, Result, Err_Loc, Get_Inst);\n@@ -4385,6 +4386,7 @@ package body Sem_Ch6 is\n       Err_Loc : Node_Id := Empty)\n    is\n       Result : Boolean;\n+      pragma Warnings (Off, Result);\n    begin\n       Check_Conformance\n         (New_Id, Old_Id, Subtype_Conformant, True, Result, Err_Loc);\n@@ -4400,6 +4402,7 @@ package body Sem_Ch6 is\n       Err_Loc : Node_Id := Empty)\n    is\n       Result : Boolean;\n+      pragma Warnings (Off, Result);\n    begin\n       Check_Conformance\n         (New_Id, Old_Id, Type_Conformant, True, Result, Err_Loc);\n@@ -5123,6 +5126,36 @@ package body Sem_Ch6 is\n \n                   return E;\n \n+               --  If E is an internal function with a controlling result\n+               --  that was created for an operation inherited by a null\n+               --  extension, it may be overridden by a body without a previous\n+               --  spec (one more reason why these should be shunned). In that\n+               --  case remove the generated body, because the current one is\n+               --  the explicit overriding.\n+\n+               elsif Ekind (E) = E_Function\n+                 and then Ada_Version >= Ada_05\n+                 and then not Comes_From_Source (E)\n+                 and then Has_Controlling_Result (E)\n+                 and then Is_Null_Extension (Etype (E))\n+                 and then Comes_From_Source (Spec)\n+               then\n+                  Set_Has_Completion (E, False);\n+\n+                  if Expander_Active then\n+                     Remove\n+                       (Unit_Declaration_Node\n+                         (Corresponding_Body (Unit_Declaration_Node (E))));\n+                     return E;\n+\n+                  --  If expansion is disabled, the wrapper function has not\n+                  --  been generated, and this is the standard case of a late\n+                  --  body overriding an inherited operation.\n+\n+                  else\n+                     return Empty;\n+                  end if;\n+\n                --  If body already exists, this is an error unless the\n                --  previous declaration is the implicit declaration of\n                --  a derived subprogram, or this is a spurious overloading\n@@ -7032,7 +7065,6 @@ package body Sem_Ch6 is\n \n          Next (Param_Spec);\n       end loop;\n-\n    end Process_Formals;\n \n    ----------------------------"}]}