{"sha": "41b9329e73772a9b50806a40f2b06159e0549fc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiOTMyOWU3Mzc3MmE5YjUwODA2YTQwZjJiMDYxNTllMDU0OWZjNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-23T21:58:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-23T21:58:41Z"}, "message": "re PR debug/63623 (Lots of functions get -fvar-tracking silently turned off unnecessarily)\n\n\tPR debug/63623\n\t* var-tracking.c (stack_adjust_offset_pre_post_cb): New function.\n\t(stack_adjust_offset_pre_post): Use it through for_each_inc_dec,\n\tinstead of only handling autoinc in dest if it is a MEM.\n\t(vt_stack_adjustments): Fix up formatting.\n\nFrom-SVN: r216600", "tree": {"sha": "d76133c53155afcd4f8c4b9f13b0ee2c4f032c8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d76133c53155afcd4f8c4b9f13b0ee2c4f032c8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41b9329e73772a9b50806a40f2b06159e0549fc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b9329e73772a9b50806a40f2b06159e0549fc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b9329e73772a9b50806a40f2b06159e0549fc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b9329e73772a9b50806a40f2b06159e0549fc6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53b0f7471aadaff6b3762039413d6265c06ef3b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b0f7471aadaff6b3762039413d6265c06ef3b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b0f7471aadaff6b3762039413d6265c06ef3b2"}], "stats": {"total": 115, "additions": 50, "deletions": 65}, "files": [{"sha": "a2bc25cdac0d868c9fbd0384d6f9648bdbf30722", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b9329e73772a9b50806a40f2b06159e0549fc6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b9329e73772a9b50806a40f2b06159e0549fc6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41b9329e73772a9b50806a40f2b06159e0549fc6", "patch": "@@ -1,3 +1,11 @@\n+2014-10-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/63623\n+\t* var-tracking.c (stack_adjust_offset_pre_post_cb): New function.\n+\t(stack_adjust_offset_pre_post): Use it through for_each_inc_dec,\n+\tinstead of only handling autoinc in dest if it is a MEM.\n+\t(vt_stack_adjustments): Fix up formatting.\n+\n 2014-10-23  DJ Delorie  <dj@redhat.com>\n \n \t* config/msp430/msp430.c (msp430_print_operand): 'x' modifier is"}, {"sha": "4c5ae41b248e6dd4d67377f269bdc7c5c5bfa1c4", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 42, "deletions": 65, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b9329e73772a9b50806a40f2b06159e0549fc6/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b9329e73772a9b50806a40f2b06159e0549fc6/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=41b9329e73772a9b50806a40f2b06159e0549fc6", "patch": "@@ -700,6 +700,39 @@ static void vt_add_function_parameters (void);\n static bool vt_initialize (void);\n static void vt_finalize (void);\n \n+/* Callback for stack_adjust_offset_pre_post, called via for_each_inc_dec.  */\n+\n+static int\n+stack_adjust_offset_pre_post_cb (rtx, rtx op, rtx dest, rtx src, rtx srcoff,\n+\t\t\t\t void *arg)\n+{\n+  if (dest != stack_pointer_rtx)\n+    return 0;\n+\n+  switch (GET_CODE (op))\n+    {\n+    case PRE_INC:\n+    case PRE_DEC:\n+      ((HOST_WIDE_INT *)arg)[0] -= INTVAL (srcoff);\n+      return 0;\n+    case POST_INC:\n+    case POST_DEC:\n+      ((HOST_WIDE_INT *)arg)[1] -= INTVAL (srcoff);\n+      return 0;\n+    case PRE_MODIFY:\n+    case POST_MODIFY:\n+      /* We handle only adjustments by constant amount.  */\n+      gcc_assert (GET_CODE (src) == PLUS\n+\t\t  && CONST_INT_P (XEXP (src, 1))\n+\t\t  && XEXP (src, 0) == stack_pointer_rtx);\n+      ((HOST_WIDE_INT *)arg)[GET_CODE (op) == POST_MODIFY]\n+\t-= INTVAL (XEXP (src, 1));\n+      return 0;\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+\n /* Given a SET, calculate the amount of stack adjustment it contains\n    PRE- and POST-modifying stack pointer.\n    This function is similar to stack_adjust_offset.  */\n@@ -725,68 +758,12 @@ stack_adjust_offset_pre_post (rtx pattern, HOST_WIDE_INT *pre,\n \t*post += INTVAL (XEXP (src, 1));\n       else\n \t*post -= INTVAL (XEXP (src, 1));\n+      return;\t\n     }\n-  else if (MEM_P (dest))\n-    {\n-      /* (set (mem (pre_dec (reg sp))) (foo)) */\n-      src = XEXP (dest, 0);\n-      code = GET_CODE (src);\n-\n-      switch (code)\n-\t{\n-\tcase PRE_MODIFY:\n-\tcase POST_MODIFY:\n-\t  if (XEXP (src, 0) == stack_pointer_rtx)\n-\t    {\n-\t      rtx val = XEXP (XEXP (src, 1), 1);\n-\t      /* We handle only adjustments by constant amount.  */\n-\t      gcc_assert (GET_CODE (XEXP (src, 1)) == PLUS &&\n-\t\t\t  CONST_INT_P (val));\n-\n-\t      if (code == PRE_MODIFY)\n-\t\t*pre -= INTVAL (val);\n-\t      else\n-\t\t*post -= INTVAL (val);\n-\t      break;\n-\t    }\n-\t  return;\n-\n-\tcase PRE_DEC:\n-\t  if (XEXP (src, 0) == stack_pointer_rtx)\n-\t    {\n-\t      *pre += GET_MODE_SIZE (GET_MODE (dest));\n-\t      break;\n-\t    }\n-\t  return;\n-\n-\tcase POST_DEC:\n-\t  if (XEXP (src, 0) == stack_pointer_rtx)\n-\t    {\n-\t      *post += GET_MODE_SIZE (GET_MODE (dest));\n-\t      break;\n-\t    }\n-\t  return;\n-\n-\tcase PRE_INC:\n-\t  if (XEXP (src, 0) == stack_pointer_rtx)\n-\t    {\n-\t      *pre -= GET_MODE_SIZE (GET_MODE (dest));\n-\t      break;\n-\t    }\n-\t  return;\n-\n-\tcase POST_INC:\n-\t  if (XEXP (src, 0) == stack_pointer_rtx)\n-\t    {\n-\t      *post -= GET_MODE_SIZE (GET_MODE (dest));\n-\t      break;\n-\t    }\n-\t  return;\n-\n-\tdefault:\n-\t  return;\n-\t}\n-    }\n+  HOST_WIDE_INT res[2] = { 0, 0 };\n+  for_each_inc_dec (pattern, stack_adjust_offset_pre_post_cb, res);\n+  *pre += res[0];\n+  *post += res[1];\n }\n \n /* Given an INSN, calculate the amount of stack adjustment it contains\n@@ -836,10 +813,10 @@ vt_stack_adjustments (void)\n \n   /* Initialize entry block.  */\n   VTI (ENTRY_BLOCK_PTR_FOR_FN (cfun))->visited = true;\n-  VTI (ENTRY_BLOCK_PTR_FOR_FN (cfun))->in.stack_adjust =\n- INCOMING_FRAME_SP_OFFSET;\n-  VTI (ENTRY_BLOCK_PTR_FOR_FN (cfun))->out.stack_adjust =\n- INCOMING_FRAME_SP_OFFSET;\n+  VTI (ENTRY_BLOCK_PTR_FOR_FN (cfun))->in.stack_adjust\n+    = INCOMING_FRAME_SP_OFFSET;\n+  VTI (ENTRY_BLOCK_PTR_FOR_FN (cfun))->out.stack_adjust\n+    = INCOMING_FRAME_SP_OFFSET;\n \n   /* Allocate stack for back-tracking up CFG.  */\n   stack = XNEWVEC (edge_iterator, n_basic_blocks_for_fn (cfun) + 1);"}]}