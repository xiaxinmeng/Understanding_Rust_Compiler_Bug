{"sha": "b0f8196667a9200696f787820178cf7cf2ab5abe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBmODE5NjY2N2E5MjAwNjk2Zjc4NzgyMDE3OGNmN2NmMmFiNWFiZQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2005-04-15T16:40:51Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2005-04-15T16:40:51Z"}, "message": "tree-vect-analyze.c (vect_stmt_relevant_p): Process immediate uses of non-virtual PHI nodes like we use to.\n\n\n\n2005-04-15  Andrew MacLeod  <amacleod@redhat.com>\n\n\t* tree-vect-analyze.c (vect_stmt_relevant_p): Process immediate uses\n\tof non-virtual PHI nodes like we use to.\n\nFrom-SVN: r98192", "tree": {"sha": "8619856384988095990f5fb0f012c795edc30373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8619856384988095990f5fb0f012c795edc30373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0f8196667a9200696f787820178cf7cf2ab5abe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f8196667a9200696f787820178cf7cf2ab5abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0f8196667a9200696f787820178cf7cf2ab5abe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f8196667a9200696f787820178cf7cf2ab5abe/comments", "author": null, "committer": null, "parents": [{"sha": "0ad420fe6c4d9f1fa3dbbbca2c62103d18ecfda1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ad420fe6c4d9f1fa3dbbbca2c62103d18ecfda1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ad420fe6c4d9f1fa3dbbbca2c62103d18ecfda1"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "031ab57bc5ea8a325e4320aef7c4e6d658bb5a5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f8196667a9200696f787820178cf7cf2ab5abe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f8196667a9200696f787820178cf7cf2ab5abe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0f8196667a9200696f787820178cf7cf2ab5abe", "patch": "@@ -1,3 +1,8 @@\n+2005-04-15  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* tree-vect-analyze.c (vect_stmt_relevant_p): Process immediate uses \n+\tof non-virtual PHI nodes like we use to.\n+\n 2005-05-15  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* genattrtab.c (ATTR_EQ_ATTR_P): Remove."}, {"sha": "46d76731f44695430c4be949303217a1306337fe", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f8196667a9200696f787820178cf7cf2ab5abe/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f8196667a9200696f787820178cf7cf2ab5abe/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=b0f8196667a9200696f787820178cf7cf2ab5abe", "patch": "@@ -2126,16 +2126,30 @@ vect_stmt_relevant_p (tree stmt, loop_vec_info loop_vinfo)\n     return true;\n \n   /* changing memory.  */\n-  if (TREE_CODE (stmt) != PHI_NODE)\n+  if (TREE_CODE (stmt) == PHI_NODE)\n     {\n-      v_may_defs = STMT_V_MAY_DEF_OPS (stmt);\n-      v_must_defs = STMT_V_MUST_DEF_OPS (stmt);\n-      if (v_may_defs || v_must_defs)\n+      if (!is_gimple_reg (PHI_RESULT (stmt)))\n+        return false;\n+      FOR_EACH_IMM_USE_FAST (use_p, imm_iter, PHI_RESULT (stmt))\n \t{\n-\t  if (vect_print_dump_info (REPORT_DETAILS, UNKNOWN_LOC))\n-\t    fprintf (vect_dump, \"vec_stmt_relevant_p: stmt has vdefs.\");\n-\t  return true;\n+\t  basic_block bb = bb_for_stmt (USE_STMT (use_p));\n+\t  if (!flow_bb_inside_loop_p (loop, bb))\n+\t    {\n+\t      if (vect_print_dump_info (REPORT_DETAILS, UNKNOWN_LOC))\n+\t\tfprintf (vect_dump, \"vec_stmt_relevant_p: used out of loop.\");\n+\t      return true;\n+\t    }\n \t}\n+      return false;\n+    }\n+\n+  v_may_defs = STMT_V_MAY_DEF_OPS (stmt);\n+  v_must_defs = STMT_V_MUST_DEF_OPS (stmt);\n+  if (v_may_defs || v_must_defs)\n+    {\n+      if (vect_print_dump_info (REPORT_DETAILS, UNKNOWN_LOC))\n+\tfprintf (vect_dump, \"vec_stmt_relevant_p: stmt has vdefs.\");\n+      return true;\n     }\n \n   /* uses outside the loop.  */"}]}