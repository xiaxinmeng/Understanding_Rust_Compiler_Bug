{"sha": "ac088ba1f0efb35aa2b3d63021c0bafdb8328883", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMwODhiYTFmMGVmYjM1YWEyYjNkNjMwMjFjMGJhZmRiODMyODg4Mw==", "commit": {"author": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2013-11-08T10:18:27Z"}, "committer": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2013-11-08T10:18:27Z"}, "message": "libgcc: check for fenv.h in dfp configure check\n\nuClibc can be built without fenv support, extend the configure check for\ndecimal floating point to probe the existance of fenv.h, too.\n\nlibgcc/ChangeLog:\n\n2013-03-24  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n\n\t* configure.ac (libgcc_cv_dfp): Extend check to probe fenv.h\n\tavailability.\n\t* configure: Regenerate\n\nFrom-SVN: r204562", "tree": {"sha": "7c9baba80079caf37b75ebbeacccd1a68a597dcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c9baba80079caf37b75ebbeacccd1a68a597dcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac088ba1f0efb35aa2b3d63021c0bafdb8328883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac088ba1f0efb35aa2b3d63021c0bafdb8328883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac088ba1f0efb35aa2b3d63021c0bafdb8328883", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac088ba1f0efb35aa2b3d63021c0bafdb8328883/comments", "author": null, "committer": null, "parents": [{"sha": "2cf19e2664161d6cb1d30c937eaa0c041d955faf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf19e2664161d6cb1d30c937eaa0c041d955faf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cf19e2664161d6cb1d30c937eaa0c041d955faf"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "0bfba640e21fa8317057566577980e72d8f7db63", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac088ba1f0efb35aa2b3d63021c0bafdb8328883/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac088ba1f0efb35aa2b3d63021c0bafdb8328883/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ac088ba1f0efb35aa2b3d63021c0bafdb8328883", "patch": "@@ -1,3 +1,9 @@\n+2013-11-08  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* configure.ac (libgcc_cv_dfp): Extend check to probe fenv.h\n+\tavailability.\n+\t* configure: Regenerate\n+\n 2013-11-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sfp-exceptions.c (__sfp_handle_exceptions): Handle"}, {"sha": "2bb1fb2d94fc7780f28fe36c5e4f26323d142333", "filename": "libgcc/configure", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac088ba1f0efb35aa2b3d63021c0bafdb8328883/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac088ba1f0efb35aa2b3d63021c0bafdb8328883/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=ac088ba1f0efb35aa2b3d63021c0bafdb8328883", "patch": "@@ -4066,7 +4066,20 @@ if test \"${libgcc_cv_dfp+set}\" = set; then :\n else\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n+\n+#include <fenv.h>\n+\n+int\n+main ()\n+{\n+\n _Decimal32 x;\n+int fe_except =\n+  FE_INVALID|FE_DIVBYZERO|FE_OVERFLOW|FE_UNDERFLOW|FE_INEXACT;\n+\n+  ;\n+  return 0;\n+}\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   libgcc_cv_dfp=yes"}, {"sha": "560e988e048d33f07242f9ce4eb4f747e86fde7a", "filename": "libgcc/configure.ac", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac088ba1f0efb35aa2b3d63021c0bafdb8328883/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac088ba1f0efb35aa2b3d63021c0bafdb8328883/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=ac088ba1f0efb35aa2b3d63021c0bafdb8328883", "patch": "@@ -182,7 +182,14 @@ AC_SUBST(long_double_type_size)\n \n # Check for decimal float support.\n AC_CACHE_CHECK([whether decimal floating point is supported], [libgcc_cv_dfp],\n-\t       [AC_COMPILE_IFELSE([_Decimal32 x;], [libgcc_cv_dfp=yes],\n+\t       [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+#include <fenv.h>\n+]], [[\n+_Decimal32 x;\n+int fe_except =\n+  FE_INVALID|FE_DIVBYZERO|FE_OVERFLOW|FE_UNDERFLOW|FE_INEXACT;\n+]])],\n+\t\t\t\t  [libgcc_cv_dfp=yes],\n \t\t\t\t  [libgcc_cv_dfp=no])])\n decimal_float=$libgcc_cv_dfp\n AC_SUBST(decimal_float)"}]}