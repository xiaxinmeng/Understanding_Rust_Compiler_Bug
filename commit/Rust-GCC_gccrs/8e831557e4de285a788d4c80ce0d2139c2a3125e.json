{"sha": "8e831557e4de285a788d4c80ce0d2139c2a3125e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU4MzE1NTdlNGRlMjg1YTc4OGQ0YzgwY2UwZDIxMzljMmEzMTI1ZQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2002-06-14T09:49:18Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2002-06-14T09:49:18Z"}, "message": "sh.md (jump): Emit jump insn.\n\n\t* config/sh/sh.md (jump): Emit jump insn.\n\t(call_pcrel): Get pattern of the result of gen_call_site.\n\t(call_value_pcrel, sibcall_pcrel, GOTaddr2picreg): Likewise.\n\nFrom-SVN: r54611", "tree": {"sha": "ec3f0428aa134a1c1483682d2432e25ddebd9d03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec3f0428aa134a1c1483682d2432e25ddebd9d03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e831557e4de285a788d4c80ce0d2139c2a3125e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e831557e4de285a788d4c80ce0d2139c2a3125e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e831557e4de285a788d4c80ce0d2139c2a3125e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e831557e4de285a788d4c80ce0d2139c2a3125e/comments", "author": null, "committer": null, "parents": [{"sha": "c413fdc4d2c73af3ff527a2dbe198e2e9736b0d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c413fdc4d2c73af3ff527a2dbe198e2e9736b0d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c413fdc4d2c73af3ff527a2dbe198e2e9736b0d6"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "6176f6898562e58a42da41469a17e1e89beb4bd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e831557e4de285a788d4c80ce0d2139c2a3125e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e831557e4de285a788d4c80ce0d2139c2a3125e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e831557e4de285a788d4c80ce0d2139c2a3125e", "patch": "@@ -1,3 +1,9 @@\n+2002-06-14  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.md (jump): Emit jump insn.\n+\t(call_pcrel): Get pattern of the result of gen_call_site.\n+\t(call_value_pcrel, sibcall_pcrel, GOTaddr2picreg): Likewise.\n+\n 2002-06-14  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpphash.h (struct cpp_buffer): Remove saved_line_base."}, {"sha": "6b92bdc6ec1dcbc598088cb116bb9c28ae0fdecd", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e831557e4de285a788d4c80ce0d2139c2a3125e/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e831557e4de285a788d4c80ce0d2139c2a3125e/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=8e831557e4de285a788d4c80ce0d2139c2a3125e", "patch": "@@ -5067,12 +5067,13 @@\n   \"\n {\n   if (TARGET_SH1)\n-    emit_insn (gen_jump_compact (operands[0]));\n+    emit_jump_insn (gen_jump_compact (operands[0]));\n   else if (TARGET_SHMEDIA)\n     {\n       if (reload_in_progress || reload_completed)\n \tFAIL;\n-      emit_insn (gen_jump_media (gen_rtx_LABEL_REF (DImode, operands[0])));\n+      emit_jump_insn (gen_jump_media (gen_rtx_LABEL_REF (DImode,\n+\t\t\t\t\t\t\t operands[0])));\n     }\n   DONE;\n }\")\n@@ -5129,7 +5130,7 @@\n   [(const_int 0)]\n   \"\n {\n-  rtx lab = gen_call_site ();\n+  rtx lab = PATTERN (gen_call_site ());\n \n   if (SYMBOL_REF_FLAG (operands[0]))\n     emit_insn (gen_sym_label2reg (operands[2], operands[0], lab));\n@@ -5228,7 +5229,7 @@\n   [(const_int 0)]\n   \"\n {\n-  rtx lab = gen_call_site ();\n+  rtx lab = PATTERN (gen_call_site ());\n \n   if (SYMBOL_REF_FLAG (operands[1]))\n     emit_insn (gen_sym_label2reg (operands[3], operands[1], lab));\n@@ -5676,7 +5677,7 @@\n   [(const_int 0)]\n   \"\n {\n-  rtx lab = gen_call_site ();\n+  rtx lab = PATTERN (gen_call_site ());\n   rtx call_insn;\n \n   emit_insn (gen_sym_label2reg (operands[2], operands[0], lab));\n@@ -6149,7 +6150,7 @@\n     {\n       rtx tr = gen_rtx_REG (DImode, TR0_REG);\n       rtx dipic = operands[0];\n-      rtx lab = gen_call_site ();\n+      rtx lab = PATTERN (gen_call_site ());\n       rtx insn, equiv;\n \n       equiv = operands[1];"}]}