{"sha": "719e72fb6f663ba626875c8333b6bfe289c5140e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE5ZTcyZmI2ZjY2M2JhNjI2ODc1YzgzMzNiNmJmZTI4OWM1MTQwZQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-12T21:21:08Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-12T21:21:08Z"}, "message": "re PR fortran/29600 ([F03] MINLOC and MAXLOC take an optional KIND argument)\n\n\tPR fortran/29600\n\n\t* intrinsic.c (add_functions): Add optional KIND argument to ACHAR.\n\t* iresolve.c (gfc_resolve_achar): Handle the KIND argument.\n\t* check.c (gfc_check_achar): Check for the optional KIND argument.\n\t* simplify.c (gfc_simplify_achar): Use KIND argument.\n\t* intrinsic.h (gfc_check_achar, gfc_simplify_achar,\n\tgfc_resolve_achar): Adjust prototypes.\n\n\t* gfortran.dg/intrinsics_kind_argument_1.f90: Add test for ACHAR\n\tintrinsic.\n\nFrom-SVN: r127385", "tree": {"sha": "a2bdf7d08832c0e14a6d1fee214ec771d5c64b09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2bdf7d08832c0e14a6d1fee214ec771d5c64b09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/719e72fb6f663ba626875c8333b6bfe289c5140e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/719e72fb6f663ba626875c8333b6bfe289c5140e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/719e72fb6f663ba626875c8333b6bfe289c5140e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/719e72fb6f663ba626875c8333b6bfe289c5140e/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34b4bc5c61e6d0d43683a38f696afedf6d1770f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b4bc5c61e6d0d43683a38f696afedf6d1770f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34b4bc5c61e6d0d43683a38f696afedf6d1770f3"}], "stats": {"total": 55, "additions": 40, "deletions": 15}, "files": [{"sha": "7ea4735fbeaacb2f17e8b8c723b4e5b35bfaf6d9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=719e72fb6f663ba626875c8333b6bfe289c5140e", "patch": "@@ -1,3 +1,13 @@\n+2007-08-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/29600\n+\t* intrinsic.c (add_functions): Add optional KIND argument to ACHAR.\n+\t* iresolve.c (gfc_resolve_achar): Handle the KIND argument.\n+\t* check.c (gfc_check_achar): Check for the optional KIND argument.\n+\t* simplify.c (gfc_simplify_achar): Use KIND argument.\n+\t* intrinsic.h (gfc_check_achar, gfc_simplify_achar,\n+\tgfc_resolve_achar): Adjust prototypes.\n+\n 2007-08-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/30964"}, {"sha": "634d6b4f05b9f60ab6f64c26b67a05cf0a02f774", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=719e72fb6f663ba626875c8333b6bfe289c5140e", "patch": "@@ -443,10 +443,12 @@ gfc_check_abs (gfc_expr *a)\n \n \n try\n-gfc_check_achar (gfc_expr *a)\n+gfc_check_achar (gfc_expr *a, gfc_expr *kind)\n {\n   if (type_check (a, 0, BT_INTEGER) == FAILURE)\n     return FAILURE;\n+  if (kind_check (kind, 1, BT_CHARACTER) == FAILURE)\n+    return FAILURE;\n \n   return SUCCESS;\n }"}, {"sha": "3f999b4210c8a30c6b12e2fcbb77562ba7c81a69", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=719e72fb6f663ba626875c8333b6bfe289c5140e", "patch": "@@ -946,9 +946,10 @@ add_functions (void)\n \n   make_generic (\"access\", GFC_ISYM_ACCESS, GFC_STD_GNU);\n \n-  add_sym_1 (\"achar\", GFC_ISYM_ACHAR, CLASS_ELEMENTAL, ACTUAL_NO, BT_CHARACTER, dc, GFC_STD_F95,\n+  add_sym_2 (\"achar\", GFC_ISYM_ACHAR, CLASS_ELEMENTAL, ACTUAL_NO,\n+\t     BT_CHARACTER, dc, GFC_STD_F95,\n \t     gfc_check_achar, gfc_simplify_achar, gfc_resolve_achar,\n-\t     i, BT_INTEGER, di, REQUIRED);\n+\t     i, BT_INTEGER, di, REQUIRED, kind, BT_INTEGER, di, OPTIONAL);\n \n   make_generic (\"achar\", GFC_ISYM_ACHAR, GFC_STD_F95);\n "}, {"sha": "cf242b8995dad2e66b854b876288529407e9cc3c", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=719e72fb6f663ba626875c8333b6bfe289c5140e", "patch": "@@ -32,7 +32,7 @@ try gfc_check_a_p (gfc_expr *, gfc_expr *);\n \n try gfc_check_abs (gfc_expr *);\n try gfc_check_access_func (gfc_expr *, gfc_expr *);\n-try gfc_check_achar (gfc_expr *);\n+try gfc_check_achar (gfc_expr *, gfc_expr *);\n try gfc_check_all_any (gfc_expr *, gfc_expr *);\n try gfc_check_allocated (gfc_expr *);\n try gfc_check_associated (gfc_expr *, gfc_expr *);\n@@ -185,7 +185,7 @@ try gfc_check_unlink_sub (gfc_expr *, gfc_expr *);\n \n /* Simplification functions.  */\n gfc_expr *gfc_simplify_abs (gfc_expr *);\n-gfc_expr *gfc_simplify_achar (gfc_expr *);\n+gfc_expr *gfc_simplify_achar (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_acos (gfc_expr *);\n gfc_expr *gfc_simplify_acosh (gfc_expr *);\n gfc_expr *gfc_simplify_adjustl (gfc_expr *);\n@@ -303,7 +303,7 @@ gfc_expr *gfc_convert_constant (gfc_expr *, bt, int);\n /* Resolution functions.  */\n void gfc_resolve_abs (gfc_expr *, gfc_expr *);\n void gfc_resolve_access (gfc_expr *, gfc_expr *, gfc_expr *);\n-void gfc_resolve_achar (gfc_expr *, gfc_expr *);\n+void gfc_resolve_achar (gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_acos (gfc_expr *, gfc_expr *);\n void gfc_resolve_acosh (gfc_expr *, gfc_expr *);\n void gfc_resolve_aimag (gfc_expr *, gfc_expr *);"}, {"sha": "c030898a43b546e3bf97bfb3d15834328bbe3fa0", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=719e72fb6f663ba626875c8333b6bfe289c5140e", "patch": "@@ -133,18 +133,19 @@ gfc_resolve_access (gfc_expr *f, gfc_expr *name ATTRIBUTE_UNUSED,\n \n \n void\n-gfc_resolve_achar (gfc_expr *f, gfc_expr *x)\n+gfc_resolve_achar (gfc_expr *f, gfc_expr *x, gfc_expr *kind)\n {\n-  \n   f->ts.type = BT_CHARACTER;\n-  f->ts.kind = gfc_default_character_kind;\n+  f->ts.kind = (kind == NULL)\n+\t     ? gfc_default_character_kind : mpz_get_si (kind->value.integer);\n   f->ts.cl = gfc_get_charlen ();\n   f->ts.cl->next = gfc_current_ns->cl_list;\n   gfc_current_ns->cl_list = f->ts.cl;\n   f->ts.cl->length = gfc_int_expr (1);\n \n-  f->value.function.name\n-    = gfc_get_string (\"__achar_%c%d\", gfc_type_letter (x->ts.type), x->ts.kind);\n+  f->value.function.name = gfc_get_string (\"__achar_%d_%c%d\", f->ts.kind,\n+\t\t\t\t\t   gfc_type_letter (x->ts.type),\n+\t\t\t\t\t   x->ts.kind);\n }\n \n "}, {"sha": "a395b04a5991b22c8d40d49283c9a24f75250380", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=719e72fb6f663ba626875c8333b6bfe289c5140e", "patch": "@@ -257,15 +257,19 @@ gfc_simplify_abs (gfc_expr *e)\n    systems that gfortran currently works on are ASCII.  */\n \n gfc_expr *\n-gfc_simplify_achar (gfc_expr *e)\n+gfc_simplify_achar (gfc_expr *e, gfc_expr *k)\n {\n   gfc_expr *result;\n-  int c;\n+  int c, kind;\n   const char *ch;\n \n   if (e->expr_type != EXPR_CONSTANT)\n     return NULL;\n \n+  kind = get_kind (BT_CHARACTER, k, \"ACHAR\", gfc_default_character_kind);\n+  if (kind == -1)\n+    return &gfc_bad_expr;\n+\n   ch = gfc_extract_int (e, &c);\n \n   if (ch != NULL)\n@@ -275,8 +279,7 @@ gfc_simplify_achar (gfc_expr *e)\n     gfc_warning (\"Argument of ACHAR function at %L outside of range [0,127]\",\n \t\t &e->where);\n \n-  result = gfc_constant_result (BT_CHARACTER, gfc_default_character_kind,\n-\t\t\t\t&e->where);\n+  result = gfc_constant_result (BT_CHARACTER, kind, &e->where);\n \n   result->value.character.string = gfc_getmem (2);\n "}, {"sha": "b039444e0f95f97ef564f4e238684a51b9665114", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=719e72fb6f663ba626875c8333b6bfe289c5140e", "patch": "@@ -1,3 +1,9 @@\n+2007-08-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/29600\n+\t* gfortran.dg/intrinsics_kind_argument_1.f90: Add test for ACHAR\n+\tintrinsic.\n+\n 2007-08-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/30964"}, {"sha": "0a3ca0791272f5184853c933eaaac45809f7627a", "filename": "gcc/testsuite/gfortran.dg/intrinsics_kind_argument_1.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsics_kind_argument_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/719e72fb6f663ba626875c8333b6bfe289c5140e/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsics_kind_argument_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintrinsics_kind_argument_1.f90?ref=719e72fb6f663ba626875c8333b6bfe289c5140e", "patch": "@@ -21,6 +21,8 @@ program test\n   call check (ichar (s, k), 117)\n   call check (ichar (s, kind=k), 117)\n \n+  if (achar(107) /= achar(107,1)) call abort\n+\n   call check (index (t, s, .true., k), 7)\n   call check (index (t, s, kind=k, back=.false.), 5)\n "}]}