{"sha": "8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5MTQyMjc2YjFmMWNiZTI3YmRiZDc5ZDc5YTBkMWI5ZTJiMWZiNA==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2016-07-31T14:52:53Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2016-07-31T14:52:53Z"}, "message": "Add missing variable traits, fix testsuite failures.\n\n\t* include/bits/uses_allocator.h (uses_allocator_v): New.\n\t* include/std/functional (is_bind_expression_v, is_placeholder_v):\n\tLikewise.\n\t* testsuite/20_util/bind/is_placeholder_v.cc: Likewise.\n\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust.\n\t* testsuite/20_util/duration/literals/range.cc: Likewise.\n\t* testsuite/20_util/duration/requirements/typedefs_neg1.cc: Likewise.\n\t* testsuite/20_util/duration/requirements/typedefs_neg2.cc: Likewise.\n\t* testsuite/20_util/duration/requirements/typedefs_neg3.cc: Likewise.\n\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Likewise.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n\tLikewise.\n\t* testsuite/20_util/ratio/operations/ops_overflow_neg.cc: Likewise.\n\t* testsuite/20_util/uses_allocator/requirements/uses_allocator_v.cc:\n\tNew.\n\nFrom-SVN: r238921", "tree": {"sha": "5def6bc806bf9bd544acb2971f8520cdd680f7a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5def6bc806bf9bd544acb2971f8520cdd680f7a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "589584612f436a3836ed507c16664f1d74fc4c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/589584612f436a3836ed507c16664f1d74fc4c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/589584612f436a3836ed507c16664f1d74fc4c84"}], "stats": {"total": 114, "additions": 105, "deletions": 9}, "files": [{"sha": "693aeee66c3f2464f3a80eed1c46848e61bc0868", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -1,3 +1,22 @@\n+2016-07-31  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tAdd missing variable traits, fix testsuite failures.\n+\t* include/bits/uses_allocator.h (uses_allocator_v): New.\n+\t* include/std/functional (is_bind_expression_v, is_placeholder_v):\n+\tLikewise.\n+\t* testsuite/20_util/bind/is_placeholder_v.cc: Likewise.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust.\n+\t* testsuite/20_util/duration/literals/range.cc: Likewise.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg1.cc: Likewise.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg2.cc: Likewise.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg3.cc: Likewise.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Likewise.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/ratio/operations/ops_overflow_neg.cc: Likewise.\n+\t* testsuite/20_util/uses_allocator/requirements/uses_allocator_v.cc:\n+\tNew.\n+\n 2016-07-31  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/18_support/numeric_limits/40856.cc [__STRICT_ANSI__]: Do"}, {"sha": "46aea1327a689bd4d47d34899465445cef34f272", "filename": "libstdc++-v3/include/bits/uses_allocator.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -108,6 +108,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __ret._M_a = std::__addressof(__a);\n       return __ret;\n     }\n+#if __cplusplus > 201402L\n+  template <typename _Tp, typename _Alloc>\n+    constexpr bool uses_allocator_v = uses_allocator<_Tp, _Alloc>::value;\n+#endif // C++17\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std"}, {"sha": "97745aeb33bd3ad3d93a81cc78337588b6ba920b", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -682,6 +682,13 @@ _GLIBCXX_MEM_FN_TRAITS(&&, false_type, true_type)\n     : public integral_constant<int, 0>\n     { };\n \n+#if __cplusplus > 201402L\n+  template <typename _Tp> constexpr bool is_bind_expression_v\n+    = is_bind_expression<_Tp>::value;\n+  template <typename _Tp> constexpr int is_placeholder_v\n+    = is_placeholder<_Tp>::value;\n+#endif // C++17\n+\n   /** @brief The type of placeholder objects defined by libstdc++.\n    *  @ingroup binders\n    */"}, {"sha": "0499d520591767e4eb89af892a6da2b99ee8ba58", "filename": "libstdc++-v3/testsuite/20_util/bind/is_placeholder_v.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fis_placeholder_v.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fis_placeholder_v.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fis_placeholder_v.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -0,0 +1,37 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a moved_to of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <functional>\n+\n+struct X\n+{\n+  int operator()() const { return 0; }\n+  int operator()() volatile { return 1; }\n+  int operator()() const volatile { return 2; }\n+  void operator()() { };\n+};\n+\n+static_assert( std::is_placeholder<decltype(std::placeholders::_1)>::value\n+\t       == std::is_placeholder_v<decltype(std::placeholders::_1)>);\n+\n+const auto b0 = std::bind(X());\n+static_assert( std::is_bind_expression<decltype(b0)>::value\n+\t       == std::is_bind_expression_v<decltype(b0)>);\n+"}, {"sha": "558b8c6a2f315b400720c3f5012870533242bd1c", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 2259 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 2272 }\n \n #include <utility>\n "}, {"sha": "6fe4bdea2ab18a197a10d93c3d37a0218e55fb6c", "filename": "libstdc++-v3/testsuite/20_util/duration/literals/range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -27,5 +27,5 @@ test01()\n \n   // std::numeric_limits<int64_t>::max() == 9223372036854775807;\n   auto h = 9223372036854775808h;\n-  // { dg-error \"cannot be represented\" \"\" { target *-*-* } 796 }\n+  // { dg-error \"cannot be represented\" \"\" { target *-*-* } 800 }\n }"}, {"sha": "731a4a7092b19cc3732d667d11e98f722cfa601a", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -31,5 +31,5 @@ void test01()\n   test_type d;\n }\n \n-// { dg-error \"rep cannot be a duration\" \"\" { target *-*-* } 246 }\n+// { dg-error \"rep cannot be a duration\" \"\" { target *-*-* } 250 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 31 }"}, {"sha": "c32b8852dfa59285eb7fd58da6ee479ae055a319", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg2.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -32,5 +32,5 @@ void test01()\n   test_type d;\t\t\t// { dg-error \"required from here\" }\n }\n \n-// { dg-error \"must be a specialization of ratio\" \"\" { target *-*-* } 247 }\n+// { dg-error \"must be a specialization of ratio\" \"\" { target *-*-* } 251 }\n // { dg-prune-output \"not a member\" }"}, {"sha": "2369440b3d50d0748395deda652180b0ed63f730", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -33,5 +33,5 @@ void test01()\n   test_type d;\n }\n \n-// { dg-error \"period must be positive\" \"\" { target *-*-* } 249 }\n+// { dg-error \"period must be positive\" \"\" { target *-*-* } 253 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 33 }"}, {"sha": "5e8fc47b94dd4022879aaa0f1e7f2f6baf32c22f", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -48,4 +48,4 @@ void test01()\n // { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1924 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1937 }"}, {"sha": "52f89f39e6e9df2a23a61464b058f92fbf109763", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1820 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1777 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1833 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1790 }"}, {"sha": "1a6bc52d7e0d7d0db7e15aa36a1344207b1a6ba8", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops_overflow_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -42,7 +42,7 @@ test02()\n // { dg-error \"required from here\" \"\" { target *-*-* } 29 }\n // { dg-error \"expected initializer\" \"\" { target *-*-* } 36 }\n // { dg-error \"expected initializer\" \"\" { target *-*-* } 38 }\n-// { dg-error \"overflow in addition\" \"\" { target *-*-* } 435 }\n+// { dg-error \"overflow in addition\" \"\" { target *-*-* } 451 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 97 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 99 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 101 }"}, {"sha": "cc6e790895f6f6d8eca12bb49840b5b43da56a00", "filename": "libstdc++-v3/testsuite/20_util/uses_allocator/requirements/uses_allocator_v.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Frequirements%2Fuses_allocator_v.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Frequirements%2Fuses_allocator_v.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fuses_allocator%2Frequirements%2Fuses_allocator_v.cc?ref=8c9142276b1f1cbe27bdbd79d79a0d1b9e2b1fb4", "patch": "@@ -0,0 +1,29 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a moved_to of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <memory>\n+#include <string>\n+\n+using namespace std;\n+\n+static_assert(uses_allocator<int, allocator<int>>::value\n+\t      == uses_allocator_v<int, allocator<int>>);\n+static_assert(uses_allocator<string, allocator<string>>::value\n+\t      == uses_allocator_v<string, allocator<string>>);"}]}