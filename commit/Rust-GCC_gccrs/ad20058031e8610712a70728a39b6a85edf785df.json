{"sha": "ad20058031e8610712a70728a39b6a85edf785df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyMDA1ODAzMWU4NjEwNzEyYTcwNzI4YTM5YjZhODVlZGY3ODVkZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-08-08T19:45:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-08-08T19:45:53Z"}, "message": "re PR middle-end/68762 (link error for inline function decorated with OpenMP declare simd)\n\n\tPR middle-end/68762\n\t* omp-simd-clone.c: Include varasm.h.\n\t(simd_clone_create): Copy over DECL_COMDAT, DECL_WEAK, DECL_EXTERNAL,\n\tDECL_VISIBILITY, DECL_VISIBILITY_SPECIFIED, DECL_DLLIMPORT_P and for\n\tDECL_ONE_ONLY call make_decl_one_only.  Fix up spelling in comment and\n\tupdate function name.\n\n\t* g++.dg/vect/pr68762-1.cc: New test.\n\t* g++.dg/vect/pr68762-2.cc: New test.\n\t* g++.dg/vect/pr68762.h: New file.\n\nFrom-SVN: r239248", "tree": {"sha": "6fb7a102c5418f845c78547f745f742f9cba52bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fb7a102c5418f845c78547f745f742f9cba52bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad20058031e8610712a70728a39b6a85edf785df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad20058031e8610712a70728a39b6a85edf785df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad20058031e8610712a70728a39b6a85edf785df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad20058031e8610712a70728a39b6a85edf785df/comments", "author": null, "committer": null, "parents": [{"sha": "1c4d457e82695db889b52f62e4d45dec83e1d7f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4d457e82695db889b52f62e4d45dec83e1d7f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c4d457e82695db889b52f62e4d45dec83e1d7f1"}], "stats": {"total": 88, "additions": 84, "deletions": 4}, "files": [{"sha": "e6f076194df95eef153dacc0152e39f0d0b5145f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad20058031e8610712a70728a39b6a85edf785df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad20058031e8610712a70728a39b6a85edf785df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad20058031e8610712a70728a39b6a85edf785df", "patch": "@@ -1,4 +1,13 @@\n-2016-07-29  Pitchumani Sivanupandi <pitchumani.s@atmel.com>\n+2016-08-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/68762\n+\t* omp-simd-clone.c: Include varasm.h.\n+\t(simd_clone_create): Copy over DECL_COMDAT, DECL_WEAK, DECL_EXTERNAL,\n+\tDECL_VISIBILITY, DECL_VISIBILITY_SPECIFIED, DECL_DLLIMPORT_P and for\n+\tDECL_ONE_ONLY call make_decl_one_only.  Fix up spelling in comment and\n+\tupdate function name.\n+\n+2016-07-29  Pitchumani Sivanupandi  <pitchumani.s@atmel.com>\n \n \t* config/avr/driver-avr.c (specfiles_doc_url): Remove.\n \t(avr_diagnose_devicespecs_error): Remove."}, {"sha": "467d8725225750e5bbc1609aa0bcc3b224e8fda8", "filename": "gcc/omp-simd-clone.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Fomp-simd-clone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Fomp-simd-clone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-simd-clone.c?ref=ad20058031e8610712a70728a39b6a85edf785df", "patch": "@@ -47,6 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"symbol-summary.h\"\n #include \"ipa-prop.h\"\n #include \"tree-eh.h\"\n+#include \"varasm.h\"\n \n \n /* Allocate a fresh `simd_clone' and return it.  NARGS is the number\n@@ -435,9 +436,18 @@ simd_clone_create (struct cgraph_node *old_node)\n     return new_node;\n \n   TREE_PUBLIC (new_node->decl) = TREE_PUBLIC (old_node->decl);\n-\n-  /* The function cgraph_function_versioning () will force the new\n-     symbol local.  Undo this, and inherit external visability from\n+  DECL_COMDAT (new_node->decl) = DECL_COMDAT (old_node->decl);\n+  DECL_WEAK (new_node->decl) = DECL_WEAK (old_node->decl);\n+  DECL_EXTERNAL (new_node->decl) = DECL_EXTERNAL (old_node->decl);\n+  DECL_VISIBILITY_SPECIFIED (new_node->decl)\n+    = DECL_VISIBILITY_SPECIFIED (old_node->decl);\n+  DECL_VISIBILITY (new_node->decl) = DECL_VISIBILITY (old_node->decl);\n+  DECL_DLLIMPORT_P (new_node->decl) = DECL_DLLIMPORT_P (old_node->decl);\n+  if (DECL_ONE_ONLY (old_node->decl))\n+    make_decl_one_only (new_node->decl, DECL_ASSEMBLER_NAME (new_node->decl));\n+\n+  /* The method cgraph_version_clone_with_body () will force the new\n+     symbol local.  Undo this, and inherit external visibility from\n      the old node.  */\n   new_node->local.local = old_node->local.local;\n   new_node->externally_visible = old_node->externally_visible;"}, {"sha": "0822a8af2fa376f23d431b1f89ed50c9bbaa4d91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad20058031e8610712a70728a39b6a85edf785df", "patch": "@@ -1,3 +1,10 @@\n+2016-08-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/68762\n+\t* g++.dg/vect/pr68762-1.cc: New test.\n+\t* g++.dg/vect/pr68762-2.cc: New test.\n+\t* g++.dg/vect/pr68762.h: New file.\n+\n 2016-08-08  Martin Sebor  <msebor@redhat.com>\n \n \tPR testsuite/72838"}, {"sha": "118a301ab90d5f22cf52d537905a7945b43073dc", "filename": "gcc/testsuite/g++.dg/vect/pr68762-1.cc", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762-1.cc?ref=ad20058031e8610712a70728a39b6a85edf785df", "patch": "@@ -0,0 +1,26 @@\n+// PR middle-end/68762\n+// { dg-require-effective-target vect_simd_clones }\n+// { dg-additional-options \"-fopenmp-simd -fno-inline\" }\n+// { dg-additional-options \"-mavx\" { target avx_runtime } }\n+// { dg-additional-sources \"pr68762-2.cc\" }\n+\n+#include \"pr68762.h\"\n+\n+double v[64];\n+\n+double\n+bar ()\n+{\n+  double sum = 0.0;\n+  #pragma omp simd reduction (+: sum)\n+  for (int i = 0; i < 64; i++)\n+    sum += foo (v[i]);\n+  return sum;\n+}\n+\n+int\n+main ()\n+{\n+  if (bar () != 0.0)\n+    __builtin_abort ();\n+}"}, {"sha": "38d624e33e0f04dd2b1521bcfc93fdd211a9d928", "filename": "gcc/testsuite/g++.dg/vect/pr68762-2.cc", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762-2.cc?ref=ad20058031e8610712a70728a39b6a85edf785df", "patch": "@@ -0,0 +1,17 @@\n+// PR middle-end/68762\n+// { dg-do compile }\n+\n+#include \"pr68762.h\"\n+\n+#pragma omp declare simd\n+double\n+baz (double x)\n+{\n+  return x;\n+}\n+\n+double\n+fn (double x)\n+{\n+  return foo (x);\n+}"}, {"sha": "8c34592e1562611ba6ba5b34cd281d84e448b16e", "filename": "gcc/testsuite/g++.dg/vect/pr68762.h", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad20058031e8610712a70728a39b6a85edf785df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr68762.h?ref=ad20058031e8610712a70728a39b6a85edf785df", "patch": "@@ -0,0 +1,11 @@\n+// PR middle-end/68762\n+\n+#pragma omp declare simd\n+double baz (double x);\n+\n+#pragma omp declare simd\n+inline double\n+foo (double d)\n+{\n+  return baz (d);\n+}"}]}