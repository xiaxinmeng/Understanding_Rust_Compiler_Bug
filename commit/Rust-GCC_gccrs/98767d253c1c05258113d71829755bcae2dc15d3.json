{"sha": "98767d253c1c05258113d71829755bcae2dc15d3", "node_id": "C_kwDOANBUbNoAKDk4NzY3ZDI1M2MxYzA1MjU4MTEzZDcxODI5NzU1YmNhZTJkYzE1ZDM", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-07T06:49:13Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T05:58:44Z"}, "message": "RISC-V: Add vwcvt C++ api test\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vwcvt_x-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvt_x_tumu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vwcvtu_x_tumu-3.C: New test.", "tree": {"sha": "bad6c13a2b801caf6a16a367a20a0b27ada579bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bad6c13a2b801caf6a16a367a20a0b27ada579bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98767d253c1c05258113d71829755bcae2dc15d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98767d253c1c05258113d71829755bcae2dc15d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98767d253c1c05258113d71829755bcae2dc15d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98767d253c1c05258113d71829755bcae2dc15d3/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d010731e8bd5c4346b939a313a3ec68956130b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d010731e8bd5c4346b939a313a3ec68956130b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d010731e8bd5c4346b939a313a3ec68956130b7"}], "stats": {"total": 3960, "additions": 3960, "deletions": 0}, "files": [{"sha": "4898fb360a349a29aa13318b5087140ec1513606", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x-1.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x(vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x(vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x(vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x(vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x(vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x(vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vwcvt_x(vbool64_t mask,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x(vbool32_t mask,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x(vbool16_t mask,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x(vbool8_t mask,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x(vbool4_t mask,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x(vbool2_t mask,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "0f7cbed555a093723263975e95b3e6b5d3f743b9", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x-2.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x(vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x(vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x(vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x(vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x(vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x(vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vwcvt_x(vbool64_t mask,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x(vbool32_t mask,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x(vbool16_t mask,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x(vbool8_t mask,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x(vbool4_t mask,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x(vbool2_t mask,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "f3a3b49f48ce332f748fbc99afcc8378db8bfe87", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x-3.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x(vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x(vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x(vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x(vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x(vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x(vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x(vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x(vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x(vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x(vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x(vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x(vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x(vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x(vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x(vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vwcvt_x(vbool64_t mask,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x(vbool32_t mask,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x(vbool16_t mask,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x(vbool8_t mask,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x(vbool4_t mask,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x(vbool2_t mask,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x(vbool64_t mask,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x(vbool32_t mask,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x(vbool16_t mask,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x(vbool8_t mask,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x(vbool4_t mask,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x(vbool64_t mask,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x(vbool32_t mask,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x(vbool16_t mask,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x(vbool8_t mask,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x(mask,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "9d37ff264c3f4ff45261a5f0e5dbc8ec88382bce", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_mu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d74dbf610714871c6aeee039b05bd90b041f2c9c", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_mu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "ae138cc6f77033484548654b9be61d0a2896955d", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_mu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_mu-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_mu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "75624c488e13105b90654024682a3d98fcc4c3c8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tu(vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tu(vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tu(vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tu(vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tu(vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tu(vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tu(vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tu(vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tu(vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tu(vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tu(vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tu(vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tu(vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tu(vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tu(vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "cd155b74349c5d7c9e7d20f354ad21bbd2818e46", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tu(vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tu(vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tu(vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tu(vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tu(vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tu(vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tu(vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tu(vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tu(vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tu(vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tu(vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tu(vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tu(vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tu(vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tu(vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "163a7536e94b3abad85fdd85740cdd61a86abd01", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tu-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tu(vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tu(vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tu(vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tu(vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tu(vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tu(vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tu(vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tu(vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tu(vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tu(vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tu(vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tu(vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tu(vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tu(vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tu(vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tu(merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "f296905163a43ef2565a0eb25f44b98c10351778", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tum-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "1db6f4f51b267bc617ee9fab7feb9e895ebc9cbe", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tum-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "9a24b9230b225e9f59c1aa8bf19206464edf4363", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tum-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tum-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tum(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d413b38b0395ae373c5ecf63fd29c58e0cbde1c3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tumu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "05db04b499b69c7a4db5d2f4b18d0e4fd5eb60e0", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tumu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d51dcef3cb0d033629a78f8a427648e356d89aef", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvt_x_tumu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvt_x_tumu-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwcvt_x_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwcvt_x_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwcvt_x_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwcvt_x_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwcvt_x_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwcvt_x_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwcvt_x_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvt_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvt\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "0f4b7c5029c2e7f3d781ab3799452a61552054ac", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x-1.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x(vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x(vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x(vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x(vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x(vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x(vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwcvtu_x(vbool64_t mask,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x(vbool32_t mask,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x(vbool16_t mask,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x(vbool8_t mask,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x(vbool4_t mask,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x(vbool2_t mask,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "3c9bca1a196db7e938ad2f150959ab3118119b22", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x-2.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x(vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x(vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x(vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x(vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x(vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x(vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwcvtu_x(vbool64_t mask,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x(vbool32_t mask,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x(vbool16_t mask,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x(vbool8_t mask,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x(vbool4_t mask,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x(vbool2_t mask,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "bf602d064f6d6fb39006cc4acf818868407a0791", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x-3.C", "status": "added", "additions": 216, "deletions": 0, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,216 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x(vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x(vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x(vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x(vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x(vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x(vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x(vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x(vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x(vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x(vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x(vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x(vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x(vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x(vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x(vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vwcvtu_x(vbool64_t mask,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x(vbool32_t mask,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x(vbool16_t mask,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x(vbool8_t mask,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x(vbool4_t mask,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x(vbool2_t mask,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x(vbool64_t mask,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x(vbool32_t mask,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x(vbool16_t mask,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x(vbool8_t mask,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x(vbool4_t mask,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x(vbool64_t mask,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x(vbool32_t mask,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x(vbool16_t mask,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x(vbool8_t mask,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x(mask,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "e4654827eb503e10c1d4d5d470a3eb7723b57f5b", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_mu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "d3eaf9ad700e0c96439f9a2fe66dcf1d5071f145", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_mu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "42bbb9143fcee1d6dd2a9b66995452302c8134ee", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_mu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_mu-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_mu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_mu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_mu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_mu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_mu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_mu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_mu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_mu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "da4d01def66e37f9093c009238bc723ff56da940", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tu(vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tu(vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tu(vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tu(vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tu(vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tu(vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tu(vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tu(vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tu(vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tu(vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tu(vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tu(vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tu(vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tu(vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tu(vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "d48589deb73b2bf5d47fe99b14c9951fd5215fd8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tu(vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tu(vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tu(vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tu(vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tu(vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tu(vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tu(vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tu(vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tu(vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tu(vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tu(vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tu(vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tu(vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tu(vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tu(vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "4c1aa07248c38f6445f9c31853489198fc2c34e7", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tu-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tu(vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tu(vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tu(vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tu(vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tu(vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tu(vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tu(vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tu(vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tu(vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tu(vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tu(vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tu(vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tu(vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tu(vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tu(vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tu(merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+\\s+} 1 } } */"}, {"sha": "48c7cba96a9427faee8626a7972c4a3eda2f0300", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tum-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "8f446af835b1878dd4c98cd3dcc14f6554e1c894", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tum-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "c1bce66c8eff77cb99d53a4a4bddfc92e5cad0f4", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tum-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tum-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tum(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tum(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tum(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tum(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tum(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tum(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tum(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tum(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "3ac26f97ababec53788582a0ecbaed883be20578", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tumu-1.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-1.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "352bc10fbce15ec8fc8a2b837d691130fb75fd05", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tumu-2.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-2.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}, {"sha": "c59aff5626108c77d9cc2968f765b8788dd284bf", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vwcvtu_x_tumu-3.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98767d253c1c05258113d71829755bcae2dc15d3/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvwcvtu_x_tumu-3.C?ref=98767d253c1c05258113d71829755bcae2dc15d3", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint16mf4_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint16mf4_t merge,vuint8mf8_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint16mf2_t merge,vuint8mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint16m1_t merge,vuint8mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint16m2_t merge,vuint8m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vwcvtu_x_tumu(vbool4_t mask,vuint16m4_t merge,vuint8m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vwcvtu_x_tumu(vbool2_t mask,vuint16m8_t merge,vuint8m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint32mf2_t merge,vuint16mf4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint32m1_t merge,vuint16mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint32m2_t merge,vuint16m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint32m4_t merge,vuint16m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vwcvtu_x_tumu(vbool4_t mask,vuint32m8_t merge,vuint16m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vwcvtu_x_tumu(vbool64_t mask,vuint64m1_t merge,vuint32mf2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vwcvtu_x_tumu(vbool32_t mask,vuint64m2_t merge,vuint32m1_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vwcvtu_x_tumu(vbool16_t mask,vuint64m4_t merge,vuint32m2_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vwcvtu_x_tumu(vbool8_t mask,vuint64m8_t merge,vuint32m4_t src,size_t vl)\n+{\n+    return __riscv_vwcvtu_x_tumu(mask,merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwcvtu\\.x\\.x\\.v\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 1 } } */"}]}