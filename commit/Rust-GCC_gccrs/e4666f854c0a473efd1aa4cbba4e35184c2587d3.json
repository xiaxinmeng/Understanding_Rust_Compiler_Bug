{"sha": "e4666f854c0a473efd1aa4cbba4e35184c2587d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ2NjZmODU0YzBhNDczZWZkMWFhNGNiYmE0ZTM1MTg0YzI1ODdkMw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2007-07-11T08:24:40Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2007-07-11T08:24:40Z"}, "message": "* config/m32r/m32r.h (INITIALIZE_TRAMPOLINE): Provide alternative version for 64-bit hosts.\n\nFrom-SVN: r126539", "tree": {"sha": "5efa1e344cae3b2147f6b7dea858c28b40ba7ed0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5efa1e344cae3b2147f6b7dea858c28b40ba7ed0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4666f854c0a473efd1aa4cbba4e35184c2587d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4666f854c0a473efd1aa4cbba4e35184c2587d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4666f854c0a473efd1aa4cbba4e35184c2587d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4666f854c0a473efd1aa4cbba4e35184c2587d3/comments", "author": null, "committer": null, "parents": [{"sha": "df770e044284fe071d8e64c82827393a2dab98fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df770e044284fe071d8e64c82827393a2dab98fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df770e044284fe071d8e64c82827393a2dab98fa"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "8bf1267ae0946f174d87b02f370143e41f4069c8", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4666f854c0a473efd1aa4cbba4e35184c2587d3/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4666f854c0a473efd1aa4cbba4e35184c2587d3/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=e4666f854c0a473efd1aa4cbba4e35184c2587d3", "patch": "@@ -1006,6 +1006,37 @@ L2:     .word STATIC\n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.  */\n+#if HOST_BITS_PER_WIDE_INT > 32\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\t\\\n+      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 0)),\t\t\\\n+\t\t      GEN_INT\t\t\t\t\t\t\t\\\n+\t\t      (TARGET_LITTLE_ENDIAN ? 0x017e8e17 : 0x178e7e01));\t\\\n+      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 4)),\t\t\\\n+\t\t      GEN_INT\t\t\t\t\t\t\t\\\n+\t\t      (TARGET_LITTLE_ENDIAN ? 0x0c00ae86 : 0xffffffff86ae000c));\\\n+      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 8)),\t\t\\\n+\t\t      GEN_INT\t\t\t\t\t\t\t\\\n+\t\t      (TARGET_LITTLE_ENDIAN ? 0xffffffffe627871e : 0x1e8727e6));\\\n+      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 12)),\t\t\\\n+\t\t      GEN_INT\t\t\t\t\t\t\t\\\n+\t\t      (TARGET_LITTLE_ENDIAN ? 0xffffffffc616c626 : 0x26c61fc6));\\\n+      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 16)),\t\t\\\n+\t\t      (CXT));\t\t\t\t\t\t\t\\\n+      emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 20)),\t\t\\\n+\t\t      (FNADDR));\t\t\t\t\t\t\\\n+      if (m32r_cache_flush_trap >= 0)\t\t\t\t\t\t\\\n+\temit_insn (gen_flush_icache (validize_mem (gen_rtx_MEM (SImode, TRAMP)),\\\n+\t\t\t\t     GEN_INT (m32r_cache_flush_trap) ));\t\\\n+      else if (m32r_cache_flush_func && m32r_cache_flush_func[0])\t\t\\\n+\temit_library_call (m32r_function_symbol (m32r_cache_flush_func), \t\\\n+\t\t\t   0, VOIDmode, 3, TRAMP, Pmode,\t\t\t\\\n+\t\t\t   GEN_INT (TRAMPOLINE_SIZE), SImode,\t\t\t\\\n+\t\t\t   GEN_INT (3), SImode);\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+#else\n #define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\t\\\n@@ -1035,6 +1066,7 @@ L2:     .word STATIC\n \t\t\t   GEN_INT (3), SImode);\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\t\\\n   while (0)\n+#endif\n \f\n #define RETURN_ADDR_RTX(COUNT, FRAME) m32r_return_addr (COUNT)\n "}]}