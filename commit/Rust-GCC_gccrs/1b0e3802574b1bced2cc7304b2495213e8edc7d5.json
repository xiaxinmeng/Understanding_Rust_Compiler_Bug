{"sha": "1b0e3802574b1bced2cc7304b2495213e8edc7d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIwZTM4MDI1NzRiMWJjZWQyY2M3MzA0YjI0OTUyMTNlOGVkYzdkNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-20T14:11:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-20T14:11:06Z"}, "message": "re PR lto/45667 (ICE: verify_stmts failed: type mismatch in address expression with -flto)\n\n2010-10-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/45667\n\t* lto-streamer-out.c (output_gimple_stmt): Fix typo.\n\t* tree-cfg.c (verify_gimple_call): Properly get the call fndecl.\n\t(verify_gimple_assign_single): Disable ADDR_EXPR type check\n\twhen in LTO.\n\n\t* g++.dg/lto/20101020-1_0.h: New testcase.\n\t* g++.dg/lto/20101020-1_0.C: Likewise.\n\t* g++.dg/lto/20101020-1_1.C: Likewise.\n\nFrom-SVN: r165725", "tree": {"sha": "eaf5024674c4d0ed963c89ed951911b20901e7c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaf5024674c4d0ed963c89ed951911b20901e7c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b0e3802574b1bced2cc7304b2495213e8edc7d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0e3802574b1bced2cc7304b2495213e8edc7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0e3802574b1bced2cc7304b2495213e8edc7d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0e3802574b1bced2cc7304b2495213e8edc7d5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "519345901bc8ee08de2ea9c450aa56594724f4e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/519345901bc8ee08de2ea9c450aa56594724f4e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/519345901bc8ee08de2ea9c450aa56594724f4e7"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "a10ba683fffc5f6f8177ca1d303d7509335ba637", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b0e3802574b1bced2cc7304b2495213e8edc7d5", "patch": "@@ -1,3 +1,11 @@\n+2010-10-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/45667\n+\t* lto-streamer-out.c (output_gimple_stmt): Fix typo.\n+\t* tree-cfg.c (verify_gimple_call): Properly get the call fndecl.\n+\t(verify_gimple_assign_single): Disable ADDR_EXPR type check\n+\twhen in LTO.\n+\n 2010-10-20  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR fortran/42169"}, {"sha": "03150b7d50bcacdc33689c82b3b069fd8233d014", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=1b0e3802574b1bced2cc7304b2495213e8edc7d5", "patch": "@@ -1763,7 +1763,7 @@ output_gimple_stmt (struct output_block *ob, gimple stmt)\n \t  if (op)\n \t    {\n \t      tree *basep = &op;\n-\t      if (handled_component_p (*basep))\n+\t      while (handled_component_p (*basep))\n \t\tbasep = &TREE_OPERAND (*basep, 0);\n \t      if (TREE_CODE (*basep) == VAR_DECL\n \t\t  && !auto_var_in_fn_p (*basep, current_function_decl))"}, {"sha": "519f7a7fb63f284a367bb475df48cf512ee0c168", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b0e3802574b1bced2cc7304b2495213e8edc7d5", "patch": "@@ -1,3 +1,10 @@\n+2010-10-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/45667\n+\t* g++.dg/lto/20101020-1_0.h: New testcase.\n+\t* g++.dg/lto/20101020-1_0.C: Likewise.\n+\t* g++.dg/lto/20101020-1_1.C: Likewise.\n+\n 2010-10-20  Dmitry Melnik  <dm@ispras.ru>\n \n \t* gcc.dg/20101013-1.c: New test."}, {"sha": "e92bcf8ace4e582ff7f2c62e73d804cb297a9053", "filename": "gcc/testsuite/g++.dg/lto/20101020-1_0.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_0.C?ref=1b0e3802574b1bced2cc7304b2495213e8edc7d5", "patch": "@@ -0,0 +1,8 @@\n+// { dg-lto-do link }\n+\n+#include \"20101020-1_0.h\"\n+A::A ()\n+{\n+  foo (&A::bar);\n+}\n+int main() { return 0; }"}, {"sha": "2de1d3c7682991c5f4442925753cdb61cf685d17", "filename": "gcc/testsuite/g++.dg/lto/20101020-1_0.h", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_0.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_0.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_0.h?ref=1b0e3802574b1bced2cc7304b2495213e8edc7d5", "patch": "@@ -0,0 +1,23 @@\n+struct A;\n+typedef void (A::*Am1) (void *);\n+typedef void (A::*Am2) ();\n+\n+struct B\n+{\n+  Am2 am2;\n+};\n+\n+struct A\n+{\n+  A ();\n+  struct B b;\n+  struct C *c;\n+  struct D *d;\n+  void foo (Am1);\n+  void bar (void *);\n+};\n+\n+struct C\n+{\n+};\n+"}, {"sha": "5c83fbfdb73663b37675488e743f594dcaf7279e", "filename": "gcc/testsuite/g++.dg/lto/20101020-1_1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101020-1_1.C?ref=1b0e3802574b1bced2cc7304b2495213e8edc7d5", "patch": "@@ -0,0 +1,11 @@\n+#include \"20101020-1_0.h\"\n+struct D\n+{\n+};\n+void A::bar (void *)\n+{\n+}\n+void A::foo (Am1)\n+{\n+}\n+"}, {"sha": "bffa67922ce91d9f4040820d72eaf805dc919ef6", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0e3802574b1bced2cc7304b2495213e8edc7d5/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=1b0e3802574b1bced2cc7304b2495213e8edc7d5", "patch": "@@ -3107,8 +3107,7 @@ verify_gimple_call (gimple stmt)\n      call, and the decl should have DECL_STATIC_CHAIN set.  */\n   if (gimple_call_chain (stmt))\n     {\n-      if (TREE_CODE (fn) != ADDR_EXPR\n-\t  || TREE_CODE (TREE_OPERAND (fn, 0)) != FUNCTION_DECL)\n+      if (!gimple_call_fndecl (stmt))\n \t{\n \t  error (\"static chain in indirect gimple call\");\n \t  return true;\n@@ -3698,7 +3697,13 @@ verify_gimple_assign_single (gimple stmt)\n \t    return true;\n \t  }\n \n-\tif (!types_compatible_p (TREE_TYPE (op), TREE_TYPE (TREE_TYPE (rhs1)))\n+\t/* Technically there is no longer a need for matching types, but\n+\t   gimple hygiene asks for this check.  In LTO we can end up\n+\t   combining incompatible units and thus end up with addresses\n+\t   of globals that change their type to a common one.  */\n+\tif (!in_lto_p\n+\t    && !types_compatible_p (TREE_TYPE (op),\n+\t\t\t\t    TREE_TYPE (TREE_TYPE (rhs1)))\n \t    && !one_pointer_to_useless_type_conversion_p (TREE_TYPE (rhs1),\n \t\t\t\t\t\t\t  TREE_TYPE (op)))\n \t  {"}]}