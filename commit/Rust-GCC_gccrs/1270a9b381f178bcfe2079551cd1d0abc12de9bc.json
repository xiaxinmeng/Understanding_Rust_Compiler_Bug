{"sha": "1270a9b381f178bcfe2079551cd1d0abc12de9bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI3MGE5YjM4MWYxNzhiY2ZlMjA3OTU1MWNkMWQwYWJjMTJkZTliYw==", "commit": {"author": {"name": "Laurynas Biveinis", "email": "lauras@softhome.net", "date": "2001-01-30T01:26:25Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-01-30T01:26:25Z"}, "message": "sdbout.c (sdbout_one_type): Skip types with indeterminate size.\n\n        * sdbout.c (sdbout_one_type): Skip types with indeterminate size.\n        (sdbout_field_types): Likwise.  Fix use of host_integerp.\n\nFrom-SVN: r39339", "tree": {"sha": "b536c1d141dc736729b2dea1eda6a82d877ada69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b536c1d141dc736729b2dea1eda6a82d877ada69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1270a9b381f178bcfe2079551cd1d0abc12de9bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1270a9b381f178bcfe2079551cd1d0abc12de9bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1270a9b381f178bcfe2079551cd1d0abc12de9bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1270a9b381f178bcfe2079551cd1d0abc12de9bc/comments", "author": null, "committer": null, "parents": [{"sha": "eb59e5478886955c2276cb63f607c661e85cbf87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb59e5478886955c2276cb63f607c661e85cbf87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb59e5478886955c2276cb63f607c661e85cbf87"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "9eb4d2c9f7bab9ea1c10f84eaa93a02e09c90da0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1270a9b381f178bcfe2079551cd1d0abc12de9bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1270a9b381f178bcfe2079551cd1d0abc12de9bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1270a9b381f178bcfe2079551cd1d0abc12de9bc", "patch": "@@ -1,3 +1,8 @@\n+2000-11-29  Laurynas Biveinis  <lauras@softhome.net>\n+\n+\t* sdbout.c (sdbout_one_type): Skip types with indeterminate size.\n+\t(sdbout_field_types): Likwise.  Fix use of host_integerp.\n+\n 2001-01-29  Thomas Pfaff  <tpfaff@gmx.net>\n \n \t* mingw32.h: Override STARTFILE_SPEC and LINK_SPEC declared in"}, {"sha": "944651f3dddf9e8f641657d5c35cc78a7199babd", "filename": "gcc/sdbout.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1270a9b381f178bcfe2079551cd1d0abc12de9bc/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1270a9b381f178bcfe2079551cd1d0abc12de9bc/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=1270a9b381f178bcfe2079551cd1d0abc12de9bc", "patch": "@@ -1053,12 +1053,13 @@ sdbout_field_types (type)\n   tree tail;\n \n   for (tail = TYPE_FIELDS (type); tail; tail = TREE_CHAIN (tail))\n-    /* This condition should match the one for emitting the actual members\n-       below.  */\n+    /* This condition should match the one for emitting the actual\n+       members below.  */\n     if (TREE_CODE (tail) == FIELD_DECL\n-\t&& DECL_NAME (tail) != 0\n-\t&& ! host_integerp (DECL_SIZE (tail), 1)\n-\t&& ! host_integerp (bit_position (tail), 0))\n+\t&& DECL_NAME (tail)\n+\t&& DECL_SIZE (tail)\n+\t&& host_integerp (DECL_SIZE (tail), 1)\n+\t&& host_integerp (bit_position (tail), 0))\n       {\n \tif (POINTER_TYPE_P (TREE_TYPE (tail)))\n \t  sdbout_one_type (TREE_TYPE (TREE_TYPE (tail)));\n@@ -1237,7 +1238,8 @@ sdbout_one_type (type)\n \t       Also omit fields with variable size or position.\n \t       Also omit non FIELD_DECL nodes that GNU C++ may put here.  */\n \t    if (TREE_CODE (tem) == FIELD_DECL\n-\t\t&& DECL_NAME (tem) != 0\n+\t\t&& DECL_NAME (tem)\n+\t\t&& DECL_SIZE (tem)\n \t\t&& host_integerp (DECL_SIZE (tem), 1)\n \t\t&& host_integerp (bit_position (tem), 0))\n \t      {"}]}