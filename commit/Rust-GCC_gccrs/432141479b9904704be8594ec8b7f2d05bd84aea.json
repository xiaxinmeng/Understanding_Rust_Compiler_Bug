{"sha": "432141479b9904704be8594ec8b7f2d05bd84aea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMyMTQxNDc5Yjk5MDQ3MDRiZTg1OTRlYzhiN2YyZDA1YmQ4NGFlYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-29T13:08:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-07-29T13:08:24Z"}, "message": "(cmpqi): Account for unsigned comparisons.\n\n(rotrqi3, rotrhi3): Reworked.\n\nFrom-SVN: r10192", "tree": {"sha": "9c14937281ff8171e40ed18117d921ca85824747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c14937281ff8171e40ed18117d921ca85824747"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/432141479b9904704be8594ec8b7f2d05bd84aea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432141479b9904704be8594ec8b7f2d05bd84aea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/432141479b9904704be8594ec8b7f2d05bd84aea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/432141479b9904704be8594ec8b7f2d05bd84aea/comments", "author": null, "committer": null, "parents": [{"sha": "2d1d245fcb4ebf209ac75b443b6e813eef9793d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1d245fcb4ebf209ac75b443b6e813eef9793d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d1d245fcb4ebf209ac75b443b6e813eef9793d6"}], "stats": {"total": 63, "additions": 41, "deletions": 22}, "files": [{"sha": "b50b35bb96dca93c6583c0d1449af5b423a0f27d", "filename": "gcc/config/1750a/1750a.md", "status": "modified", "additions": 41, "deletions": 22, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/432141479b9904704be8594ec8b7f2d05bd84aea/gcc%2Fconfig%2F1750a%2F1750a.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/432141479b9904704be8594ec8b7f2d05bd84aea/gcc%2Fconfig%2F1750a%2F1750a.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.md?ref=432141479b9904704be8594ec8b7f2d05bd84aea", "patch": "@@ -1,7 +1,7 @@\n ;;- Machine description for GNU compiler\n ;;- MIL-STD-1750A version.\n-;; Copyright (C) 1994 Free Software Foundation, Inc.\n-;; Contributed by O.M.Kellogg, DASA (okellogg@salyko.cube.net).\n+;; Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n+;; Contributed by O.M.Kellogg, DASA (kellogg@space.otn.dasa.de).\n \n ;; This file is part of GNU CC.\n \n@@ -193,12 +193,35 @@\n         (compare (match_operand:QI 0 \"register_operand\" \"r,r,r,r,r\")\n                  (match_operand:QI 1 \"general_operand\"  \"I,J,i,r,m\")))]\n   \"\"\n-  \"@\n-     cisp r%0,%1\n-     cisn r%0,%J1\n-     cim  r%0,%1\n-     cr   r%0,r%1\n-     c    r%0,%1 \")\n+  \"*\n+   {\n+     if (next_cc_user_is_unsigned (insn))\n+       switch (which_alternative)\n+\t {\n+\t case 0:\n+\t case 1:\n+\t case 2:\n+\t   return \\\"ucim.m %0,%1\\\";\n+\t case 3:\n+\t   return \\\"ucr.m %0,%1\\\";\n+\t case 4:\n+\t   return \\\"uc.m %0,%1\\\";\n+\t }\n+     else\n+       switch (which_alternative)\n+\t {\n+\t case 0:\n+\t   return \\\"cisp r%0,%1\\\";\n+\t case 1:\n+\t   return \\\"cisn r%0,%J1\\\";\n+\t case 2:\n+\t   return \\\"cim  r%0,%1\\\";\n+\t case 3:\n+\t   return \\\"cr   r%0,r%1\\\";\n+\t case 4:\n+\t   return \\\"c    r%0,%1\\\";\n+\t }\n+   } \")\n \n (define_insn \"cmphi\"\n   [(set (cc0)\n@@ -923,22 +946,18 @@\n     dscr r%0,r%2 \")\n \n (define_insn \"rotrqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=r,r\")\n-        (rotatert:QI (match_operand:QI 1 \"register_operand\" \"0,0\")\n-                     (match_operand:QI 2 \"general_operand\" \"I,r\")))]\n+  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n+        (rotatert:QI (match_operand:QI 1 \"register_operand\" \"0\")\n+                     (match_operand:QI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"@\n-    slc r%0,%2\n-    neg r%2,r%2\\;scr    r%0,r%2 \")\n+  \"neg r%2,r%2\\;scr r%0,r%2 \")\n \n (define_insn \"rotrhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n-        (rotatert:HI (match_operand:HI 1 \"register_operand\" \"0,0\")\n-                     (match_operand:QI 2 \"general_operand\" \"I,r\")))]\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+        (rotatert:HI (match_operand:HI 1 \"register_operand\" \"0\")\n+                     (match_operand:QI 2 \"general_operand\" \"r\")))]\n   \"\"\n-  \"@\n-    dslc r%0,%2\n-    neg  r%2,r%2\\;dscr   r%0,r%2 \")\n+  \"neg  r%2,r%2\\;dscr r%0,r%2 \")\n \n \n \n@@ -950,7 +969,7 @@\n ;********************\n \n ;; Bit field instructions, general cases.\n-;; \"o,d\" constraint causes a nonoffsettable memref to match the \"o\"\n+;; \"o,d\" constraint causes a nonoffsetable memref to match the \"o\"\n ;; so that its address is reloaded.\n \n ;; (define_insn \"extv\" ...\n@@ -1192,7 +1211,7 @@\n   [(set (pc)\n         (label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n-  \"jc uc,%0\")\n+  \"jc 15,%0\")\n \n ;; Call subroutine, returning value in operand 0\n ;; (which must be a hard register)."}]}