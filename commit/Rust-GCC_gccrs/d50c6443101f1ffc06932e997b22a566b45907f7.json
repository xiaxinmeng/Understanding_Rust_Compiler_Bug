{"sha": "d50c6443101f1ffc06932e997b22a566b45907f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUwYzY0NDMxMDFmMWZmYzA2OTMyZTk5N2IyMmE1NjZiNDU5MDdmNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-03-29T20:04:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-03-29T20:04:28Z"}, "message": "friend.c (is_friend): Local classes have the same access as the enclosing function.\n\n\t* friend.c (is_friend): Local classes have the same access as the\n\tenclosing function.\n\nFrom-SVN: r18904", "tree": {"sha": "f0d4f4a990921815c1a1fe6d79d25329e9e47388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0d4f4a990921815c1a1fe6d79d25329e9e47388"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d50c6443101f1ffc06932e997b22a566b45907f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d50c6443101f1ffc06932e997b22a566b45907f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d50c6443101f1ffc06932e997b22a566b45907f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d50c6443101f1ffc06932e997b22a566b45907f7/comments", "author": null, "committer": null, "parents": [{"sha": "77f484defc4e7853896db5885a2d4ff8781dc047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f484defc4e7853896db5885a2d4ff8781dc047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f484defc4e7853896db5885a2d4ff8781dc047"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "62780a4673719db424d9be9fcf8bdea62bbdf799", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d50c6443101f1ffc06932e997b22a566b45907f7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d50c6443101f1ffc06932e997b22a566b45907f7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d50c6443101f1ffc06932e997b22a566b45907f7", "patch": "@@ -1,3 +1,8 @@\n+Sun Mar 29 20:01:59 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* friend.c (is_friend): Local classes have the same access as the\n+\tenclosing function.\n+\n Sun Mar 29 00:47:32 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* typeck.c (expand_target_expr): Delete dead function."}, {"sha": "d0e6fefbff828cd93ef1d9cbfcbeb7f86fc6212b", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d50c6443101f1ffc06932e997b22a566b45907f7/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d50c6443101f1ffc06932e997b22a566b45907f7/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=d50c6443101f1ffc06932e997b22a566b45907f7", "patch": "@@ -41,12 +41,21 @@ is_friend (type, supplicant)\n {\n   int declp;\n   register tree list;\n+  tree context;\n \n   if (supplicant == NULL_TREE || type == NULL_TREE)\n     return 0;\n \n   declp = (TREE_CODE_CLASS (TREE_CODE (supplicant)) == 'd');\n \n+  /* Local classes have the same access as the enclosing function.  */\n+  context = hack_decl_function_context (supplicant);\n+  if (context)\n+    {\n+      supplicant = context;\n+      declp = 1;\n+    }\n+\n   if (declp)\n     /* It's a function decl.  */\n     {\n@@ -113,26 +122,14 @@ is_friend (type, supplicant)\n \t  return 1;\n     }      \n \n-  {\n-    tree context;\n-\n-    if (! declp)\n-      {\n-\t/* Are we a nested or local class?  If so, we aren't friends\n-           with the CONTEXT.  */\n-\tif (IS_AGGR_TYPE (supplicant))\n-\t  context = NULL_TREE;\n-\telse\n-\t  context = DECL_CONTEXT (TYPE_MAIN_DECL (supplicant));\n-      }\n-    else if (DECL_FUNCTION_MEMBER_P (supplicant))\n-      context = DECL_CLASS_CONTEXT (supplicant);\n-    else\n-      context = NULL_TREE;\n-\n-    if (context)\n-      return is_friend (type, context);\n-  }\n+  if (declp && DECL_FUNCTION_MEMBER_P (supplicant))\n+    context = DECL_CLASS_CONTEXT (supplicant);\n+  else\n+    /* Nested classes don't inherit the access of their enclosing class.  */\n+    context = NULL_TREE;\n+\n+  if (context)\n+    return is_friend (type, context);\n \n   return 0;\n }"}]}