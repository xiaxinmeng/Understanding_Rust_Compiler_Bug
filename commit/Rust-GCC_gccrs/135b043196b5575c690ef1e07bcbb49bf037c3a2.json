{"sha": "135b043196b5575c690ef1e07bcbb49bf037c3a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM1YjA0MzE5NmI1NTc1YzY5MGVmMWUwN2JjYmI0OWJmMDM3YzNhMg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-09-30T11:00:20Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-09-30T11:02:21Z"}, "message": "PR target/96313 AArch64: vqmovun* return types should be unsigned\n\nIn this PR we have the wrong return type for some intrinsics. It should\nbe unsigned, but we implement it as signed.\nFix this by adjusting the type qualifiers used when creating the\nbuiltins and fixing the type in the arm_neon.h intrinsic.\nWith the adjustment in qualifiers we now don't need to cast the result\nwhen returning.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/\n\tPR target/96313\n\t* config/aarch64/aarch64-simd-builtins.def (sqmovun): Use UNOPUS\n\tqualifiers.\n\t* config/aarch64/arm_neon.h (vqmovun_s16): Adjust builtin call.\n\tRemove unnecessary result cast.\n\t(vqmovun_s32): Likewise.\n\t(vqmovun_s64): Likewise.\n\t(vqmovunh_s16): Likewise.  Fix return type.\n\t(vqmovuns_s32): Likewise.\n\t(vqmovund_s64): Likewise.\n\ngcc/testsuite/\n\tPR target/96313\n\t* gcc.target/aarch64/pr96313.c: New test.\n\t* gcc.target/aarch64/scalar_intrinsics.c (test_vqmovunh_s16):\n\tAdjust return type.\n\t(test_vqmovuns_s32): Likewise.\n\t(test_vqmovund_s64): Likewise.", "tree": {"sha": "2d35a0caa69f043b43bd011fa772c3b14c409e41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d35a0caa69f043b43bd011fa772c3b14c409e41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/135b043196b5575c690ef1e07bcbb49bf037c3a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135b043196b5575c690ef1e07bcbb49bf037c3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/135b043196b5575c690ef1e07bcbb49bf037c3a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135b043196b5575c690ef1e07bcbb49bf037c3a2/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4f9e81976066e1d67c8dd5ddaf24ebe3b0695ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4f9e81976066e1d67c8dd5ddaf24ebe3b0695ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4f9e81976066e1d67c8dd5ddaf24ebe3b0695ed"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "3554fb0e0dca234e28195fe0e420b82eadb732b8", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/135b043196b5575c690ef1e07bcbb49bf037c3a2/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/135b043196b5575c690ef1e07bcbb49bf037c3a2/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=135b043196b5575c690ef1e07bcbb49bf037c3a2", "patch": "@@ -159,7 +159,7 @@\n   BUILTIN_VQN (TERNOP, raddhn2, 0, NONE)\n   BUILTIN_VQN (TERNOP, rsubhn2, 0, NONE)\n \n-  BUILTIN_VSQN_HSDI (UNOP, sqmovun, 0, ALL)\n+  BUILTIN_VSQN_HSDI (UNOPUS, sqmovun, 0, ALL)\n   /* Implemented by aarch64_<sur>qmovn<mode>.  */\n   BUILTIN_VSQN_HSDI (UNOP, sqmovn, 0, ALL)\n   BUILTIN_VSQN_HSDI (UNOP, uqmovn, 0, ALL)"}, {"sha": "6729fb5acac51dd6261dcd35e9c0267bdb075750", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/135b043196b5575c690ef1e07bcbb49bf037c3a2/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/135b043196b5575c690ef1e07bcbb49bf037c3a2/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=135b043196b5575c690ef1e07bcbb49bf037c3a2", "patch": "@@ -24046,42 +24046,42 @@ __extension__ extern __inline uint8x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vqmovun_s16 (int16x8_t __a)\n {\n-  return (uint8x8_t) __builtin_aarch64_sqmovunv8hi (__a);\n+  return __builtin_aarch64_sqmovunv8hi_us (__a);\n }\n \n __extension__ extern __inline uint16x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vqmovun_s32 (int32x4_t __a)\n {\n-  return (uint16x4_t) __builtin_aarch64_sqmovunv4si (__a);\n+  return __builtin_aarch64_sqmovunv4si_us (__a);\n }\n \n __extension__ extern __inline uint32x2_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vqmovun_s64 (int64x2_t __a)\n {\n-  return (uint32x2_t) __builtin_aarch64_sqmovunv2di (__a);\n+  return __builtin_aarch64_sqmovunv2di_us (__a);\n }\n \n-__extension__ extern __inline int8_t\n+__extension__ extern __inline uint8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vqmovunh_s16 (int16_t __a)\n {\n-  return (int8_t) __builtin_aarch64_sqmovunhi (__a);\n+  return __builtin_aarch64_sqmovunhi_us (__a);\n }\n \n-__extension__ extern __inline int16_t\n+__extension__ extern __inline uint16_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vqmovuns_s32 (int32_t __a)\n {\n-  return (int16_t) __builtin_aarch64_sqmovunsi (__a);\n+  return __builtin_aarch64_sqmovunsi_us (__a);\n }\n \n-__extension__ extern __inline int32_t\n+__extension__ extern __inline uint32_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vqmovund_s64 (int64_t __a)\n {\n-  return (int32_t) __builtin_aarch64_sqmovundi (__a);\n+  return __builtin_aarch64_sqmovundi_us (__a);\n }\n \n /* vqneg */"}, {"sha": "0bf7604092f394f0a5a0e00aa5f6c355b48c2356", "filename": "gcc/testsuite/gcc.target/aarch64/pr96313.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/135b043196b5575c690ef1e07bcbb49bf037c3a2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr96313.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/135b043196b5575c690ef1e07bcbb49bf037c3a2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr96313.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr96313.c?ref=135b043196b5575c690ef1e07bcbb49bf037c3a2", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+\n+#include <arm_neon.h>\n+\n+uint32_t (*fp3)(int64_t) = vqmovund_s64;\n+uint8_t (*fp4)(int16_t) = vqmovunh_s16;\n+uint16_t (*fp5)(int32_t) = vqmovuns_s32;\n+"}, {"sha": "c2e13b651e96fdc9c5abeaf154905dce177d9e2f", "filename": "gcc/testsuite/gcc.target/aarch64/scalar_intrinsics.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/135b043196b5575c690ef1e07bcbb49bf037c3a2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/135b043196b5575c690ef1e07bcbb49bf037c3a2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c?ref=135b043196b5575c690ef1e07bcbb49bf037c3a2", "patch": "@@ -661,23 +661,23 @@ test_vqnegs_s32 (int32_t a)\n \n /* { dg-final { scan-assembler-times \"\\\\tsqxtun\\\\tb\\[0-9\\]+\" 1 } } */\n \n-int8_t\n+uint8_t\n test_vqmovunh_s16 (int16_t a)\n {\n   return vqmovunh_s16 (a);\n }\n \n /* { dg-final { scan-assembler-times \"\\\\tsqxtun\\\\th\\[0-9\\]+\" 1 } } */\n \n-int16_t\n+uint16_t\n test_vqmovuns_s32 (int32_t a)\n {\n   return vqmovuns_s32 (a);\n }\n \n /* { dg-final { scan-assembler-times \"\\\\tsqxtun\\\\ts\\[0-9\\]+\" 1 } } */\n \n-int32_t\n+uint32_t\n test_vqmovund_s64 (int64_t a)\n {\n   return vqmovund_s64 (a);"}]}