{"sha": "0bc2433858abb64daa41ed85994668d66cbecd71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJjMjQzMzg1OGFiYjY0ZGFhNDFlZDg1OTk0NjY4ZDY2Y2JlY2Q3MQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2016-06-30T15:46:14Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2016-06-30T15:46:14Z"}, "message": "This patch sets the branch cost to the same most optimal setting for all Cortex cores...\n\nThis patch sets the branch cost to the same most optimal setting for all Cortex\ncores, reducing codesize and improving performance due to using more CSEL\ninstructions.  Set the autoprefetcher model in Cortex-A72 to weak like the\nothers.  Enable AES fusion in Cortex-A35.  As a result generated code is now\nmore similar as well as more optimal across Cortex cores.\n\n    gcc/\n\t* config/aarch64/aarch64.c (cortexa35_tunings):\n\tEnable AES fusion.  Use cortexa57_branch_cost.\n\t(cortexa53_tunings): Use cortexa57_branch_cost.\n\t(cortexa72_tunings): Use cortexa57_branch_cost.\n\tUse AUTOPREFETCHER_WEAK.\n\t(cortexa73_tunings): Use cortexa57_branch_cost.\n\nFrom-SVN: r237884", "tree": {"sha": "53adc8e6d919fc7273f9526f67922c9fd702595d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53adc8e6d919fc7273f9526f67922c9fd702595d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bc2433858abb64daa41ed85994668d66cbecd71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc2433858abb64daa41ed85994668d66cbecd71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bc2433858abb64daa41ed85994668d66cbecd71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc2433858abb64daa41ed85994668d66cbecd71/comments", "author": null, "committer": null, "parents": [{"sha": "3dfa80718b8ed4d46aaf89b1e8a410130945a793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dfa80718b8ed4d46aaf89b1e8a410130945a793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dfa80718b8ed4d46aaf89b1e8a410130945a793"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "88cab9847da939446a5fe883b4db2c6f463c115f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc2433858abb64daa41ed85994668d66cbecd71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc2433858abb64daa41ed85994668d66cbecd71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bc2433858abb64daa41ed85994668d66cbecd71", "patch": "@@ -1,3 +1,12 @@\n+2016-06-30  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.c (cortexa35_tunings):\n+\tEnable AES fusion.  Use cortexa57_branch_cost.\n+\t(cortexa53_tunings): Use cortexa57_branch_cost.\n+\t(cortexa72_tunings): Use cortexa57_branch_cost.\n+\tUse AUTOPREFETCHER_WEAK.\n+\t(cortexa73_tunings): Use cortexa57_branch_cost.\n+\n 2016-06-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n             James Greenhalgh  <james.greenhalgh@arm.com>\n "}, {"sha": "062899fbcc8840769cc09bef6194e546bc813e86", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc2433858abb64daa41ed85994668d66cbecd71/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc2433858abb64daa41ed85994668d66cbecd71/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=0bc2433858abb64daa41ed85994668d66cbecd71", "patch": "@@ -473,11 +473,11 @@ static const struct tune_params cortexa35_tunings =\n   &generic_addrcost_table,\n   &cortexa53_regmove_cost,\n   &generic_vector_cost,\n-  &generic_branch_cost,\n+  &cortexa57_branch_cost,\n   &generic_approx_modes,\n   4, /* memmov_cost  */\n   1, /* issue_rate  */\n-  (AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n+  (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n    | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n   16,\t/* function_align.  */\n   8,\t/* jump_align.  */\n@@ -499,7 +499,7 @@ static const struct tune_params cortexa53_tunings =\n   &generic_addrcost_table,\n   &cortexa53_regmove_cost,\n   &generic_vector_cost,\n-  &generic_branch_cost,\n+  &cortexa57_branch_cost,\n   &generic_approx_modes,\n   4, /* memmov_cost  */\n   2, /* issue_rate  */\n@@ -551,7 +551,7 @@ static const struct tune_params cortexa72_tunings =\n   &cortexa57_addrcost_table,\n   &cortexa57_regmove_cost,\n   &cortexa57_vector_cost,\n-  &generic_branch_cost,\n+  &cortexa57_branch_cost,\n   &generic_approx_modes,\n   4, /* memmov_cost  */\n   3, /* issue_rate  */\n@@ -567,7 +567,7 @@ static const struct tune_params cortexa72_tunings =\n   2,\t/* min_div_recip_mul_df.  */\n   0,\t/* max_case_values.  */\n   0,\t/* cache_line_size.  */\n-  tune_params::AUTOPREFETCHER_OFF,\t/* autoprefetcher_model.  */\n+  tune_params::AUTOPREFETCHER_WEAK,\t/* autoprefetcher_model.  */\n   (AARCH64_EXTRA_TUNE_NONE)\t/* tune_flags.  */\n };\n \n@@ -577,7 +577,7 @@ static const struct tune_params cortexa73_tunings =\n   &cortexa57_addrcost_table,\n   &cortexa57_regmove_cost,\n   &cortexa57_vector_cost,\n-  &generic_branch_cost,\n+  &cortexa57_branch_cost,\n   &generic_approx_modes,\n   4, /* memmov_cost.  */\n   2, /* issue_rate.  */"}]}