{"sha": "1e990f1366612be41209fb921d09be00355c117b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU5OTBmMTM2NjYxMmJlNDEyMDlmYjkyMWQwOWJlMDAzNTVjMTE3Yg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-03-26T07:36:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-03-26T07:36:48Z"}, "message": "a-ztexio.adb, [...]: Fix problem with Current_Output (introduce Self).\n\n2008-03-26  Robert Dewar  <dewar@adacore.com>\n\n\t* a-ztexio.adb, a-ztexio.ads, a-witeio.ads, a-witeio.adb: Fix problem\n\twith Current_Output (introduce Self).\n\nFrom-SVN: r133552", "tree": {"sha": "e77333513aa16dabd237767d69e16cef850bfb7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e77333513aa16dabd237767d69e16cef850bfb7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e990f1366612be41209fb921d09be00355c117b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e990f1366612be41209fb921d09be00355c117b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e990f1366612be41209fb921d09be00355c117b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e990f1366612be41209fb921d09be00355c117b/comments", "author": null, "committer": null, "parents": [{"sha": "162c52f32359c7f4c18f03d2ebc62ac59fa81c09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162c52f32359c7f4c18f03d2ebc62ac59fa81c09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/162c52f32359c7f4c18f03d2ebc62ac59fa81c09"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "b7d06ea873262ce54556039f5272f5f551876d6b", "filename": "gcc/ada/a-witeio.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e990f1366612be41209fb921d09be00355c117b/gcc%2Fada%2Fa-witeio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e990f1366612be41209fb921d09be00355c117b/gcc%2Fada%2Fa-witeio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.ads?ref=1e990f1366612be41209fb921d09be00355c117b", "patch": "@@ -350,6 +350,12 @@ private\n       Line_Length : Count := 0;\n       Page_Length : Count := 0;\n \n+      Self : aliased File_Type;\n+      --  Set to point to the containing Text_AFCB block. This is used to\n+      --  implement the Current_{Error,Input,Ouput} functions which return\n+      --  a File_Access, the file access value returned is a pointer to\n+      --  the Self field of the corresponding file.\n+\n       Before_LM : Boolean := False;\n       --  This flag is used to deal with the anomolies introduced by the\n       --  peculiar definition of End_Of_File and End_Of_Page in Ada. These"}, {"sha": "296202256e748b2d22c6c53ed6a32c5a2405e9f9", "filename": "gcc/ada/a-ztexio.adb", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e990f1366612be41209fb921d09be00355c117b/gcc%2Fada%2Fa-ztexio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e990f1366612be41209fb921d09be00355c117b/gcc%2Fada%2Fa-ztexio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.adb?ref=1e990f1366612be41209fb921d09be00355c117b", "patch": "@@ -180,6 +180,8 @@ package body Ada.Wide_Wide_Text_IO is\n                 Amethod   => 'W',\n                 Creat     => True,\n                 Text      => True);\n+\n+      File.Self := File;\n       Set_WCEM (File);\n    end Create;\n \n@@ -194,7 +196,7 @@ package body Ada.Wide_Wide_Text_IO is\n \n    function Current_Error return File_Access is\n    begin\n-      return Current_Err'Access;\n+      return Current_Err.Self'Access;\n    end Current_Error;\n \n    -------------------\n@@ -208,7 +210,7 @@ package body Ada.Wide_Wide_Text_IO is\n \n    function Current_Input return File_Access is\n    begin\n-      return Current_In'Access;\n+      return Current_In.Self'Access;\n    end Current_Input;\n \n    --------------------\n@@ -222,7 +224,7 @@ package body Ada.Wide_Wide_Text_IO is\n \n    function Current_Output return File_Access is\n    begin\n-      return Current_Out'Access;\n+      return Current_Out.Self'Access;\n    end Current_Output;\n \n    ------------\n@@ -754,6 +756,7 @@ package body Ada.Wide_Wide_Text_IO is\n    --  Start of processing for Get_Wide_Wide_Char\n \n    begin\n+      FIO.Check_Read_Status (AP (File));\n       return Wide_Wide_Character'Val (WC_In (C, File.WC_Method));\n    end Get_Wide_Wide_Char;\n \n@@ -788,6 +791,7 @@ package body Ada.Wide_Wide_Text_IO is\n    --  Start of processing for Get_Wide_Wide_Char_Immed\n \n    begin\n+      FIO.Check_Read_Status (AP (File));\n       return Wide_Wide_Character'Val (WC_In (C, File.WC_Method));\n    end Get_Wide_Wide_Char_Immed;\n \n@@ -1089,6 +1093,8 @@ package body Ada.Wide_Wide_Text_IO is\n                 Amethod   => 'W',\n                 Creat     => False,\n                 Text      => True);\n+\n+      File.Self := File;\n       Set_WCEM (File);\n    end Open;\n \n@@ -1151,6 +1157,7 @@ package body Ada.Wide_Wide_Text_IO is\n    --  Start of processing for Put\n \n    begin\n+      FIO.Check_Write_Status (AP (File));\n       WC_Out (Wide_Wide_Character'Pos (Item), File.WC_Method);\n       File.Col := File.Col + 1;\n    end Put;\n@@ -1869,18 +1876,20 @@ begin\n    Standard_Err.Is_System_File    := True;\n    Standard_Err.Is_Text_File      := True;\n    Standard_Err.Access_Method     := 'T';\n+   Standard_Err.Self              := Standard_Err;\n    Standard_Err.WC_Method         := Default_WCEM;\n \n-   Standard_In.Stream            := stdin;\n-   Standard_In.Name              := In_Name'Access;\n-   Standard_In.Form              := Null_Str'Unrestricted_Access;\n-   Standard_In.Mode              := FCB.In_File;\n-   Standard_In.Is_Regular_File   := is_regular_file (fileno (stdin)) /= 0;\n-   Standard_In.Is_Temporary_File := False;\n-   Standard_In.Is_System_File    := True;\n-   Standard_In.Is_Text_File      := True;\n-   Standard_In.Access_Method     := 'T';\n-   Standard_In.WC_Method         := Default_WCEM;\n+   Standard_In.Stream             := stdin;\n+   Standard_In.Name               := In_Name'Access;\n+   Standard_In.Form               := Null_Str'Unrestricted_Access;\n+   Standard_In.Mode               := FCB.In_File;\n+   Standard_In.Is_Regular_File    := is_regular_file (fileno (stdin)) /= 0;\n+   Standard_In.Is_Temporary_File  := False;\n+   Standard_In.Is_System_File     := True;\n+   Standard_In.Is_Text_File       := True;\n+   Standard_In.Access_Method      := 'T';\n+   Standard_In.Self               := Standard_In;\n+   Standard_In.WC_Method          := Default_WCEM;\n \n    Standard_Out.Stream            := stdout;\n    Standard_Out.Name              := Out_Name'Access;\n@@ -1891,6 +1900,7 @@ begin\n    Standard_Out.Is_System_File    := True;\n    Standard_Out.Is_Text_File      := True;\n    Standard_Out.Access_Method     := 'T';\n+   Standard_Out.Self              := Standard_Out;\n    Standard_Out.WC_Method         := Default_WCEM;\n \n    FIO.Chain_File (AP (Standard_In));"}, {"sha": "dd872dcfb1c01a879d34fea2221b9634d82da5cd", "filename": "gcc/ada/a-ztexio.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e990f1366612be41209fb921d09be00355c117b/gcc%2Fada%2Fa-ztexio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e990f1366612be41209fb921d09be00355c117b/gcc%2Fada%2Fa-ztexio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztexio.ads?ref=1e990f1366612be41209fb921d09be00355c117b", "patch": "@@ -350,6 +350,12 @@ private\n       Line_Length : Count := 0;\n       Page_Length : Count := 0;\n \n+      Self : aliased File_Type;\n+      --  Set to point to the containing Text_AFCB block. This is used to\n+      --  implement the Current_{Error,Input,Ouput} functions which return\n+      --  a File_Access, the file access value returned is a pointer to\n+      --  the Self field of the corresponding file.\n+\n       Before_LM : Boolean := False;\n       --  This flag is used to deal with the anomolies introduced by the\n       --  peculiar definition of End_Of_File and End_Of_Page in Ada. These"}]}