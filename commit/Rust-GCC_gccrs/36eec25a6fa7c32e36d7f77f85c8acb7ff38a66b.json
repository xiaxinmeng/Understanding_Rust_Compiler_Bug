{"sha": "36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZlZWMyNWE2ZmE3YzMyZTM2ZDdmNzdmODVjOGFjYjdmZjM4YTY2Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-15T16:47:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-15T16:47:55Z"}, "message": "Decorate string_view members with nonnull attribute\n\nThe C++ committee has confirmed that passing a null pointer to the\nunary basic_string_view constructor is undefined. This removes the check\nfrom our implementation, and adds the nonnull attribute to warn when the\ncompiler can detect undefined input.\n\n\t* include/std/string_view (basic_string_view(const CharT*)): Remove\n\tcheck for null pointer and add nonnull attribute.\n\t(compare(const CharT*), compare(size_type, size_type, const CharT*))\n\t(find(const CharT*, size_type), rfind(const CharT*, size_type))\n\t(find_first_of(const CharT*, size_type))\n\t(find_last_of(const CharT*, size_type))\n\t(find_first_not_of(const CharT*, size_type))\n\t(find_last_not_of(const CharT*, size_type)): Add nonnull attribute.\n\t* testsuite/21_strings/basic_string_view/cons/char/nonnull.cc: New.\n\t* testsuite/21_strings/basic_string_view/operations/compare/char/\n\tnonnull.cc: New.\n\t* testsuite/21_strings/basic_string_view/operations/find/char/\n\tnonnull.cc: New.\n\t* testsuite/21_strings/basic_string_view/operations/rfind/char/\n\tnonnull.cc: New.\n\nFrom-SVN: r261638", "tree": {"sha": "5141ae4527a55652b497904a61bf3dc2f23ff62a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5141ae4527a55652b497904a61bf3dc2f23ff62a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3438bf7b9f5ce1cfbb7e2419da25e72f109ea480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3438bf7b9f5ce1cfbb7e2419da25e72f109ea480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3438bf7b9f5ce1cfbb7e2419da25e72f109ea480"}], "stats": {"total": 189, "additions": 178, "deletions": 11}, "files": [{"sha": "b7cef6057b19c664ababfd35838f5a8b2a4fc299", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "patch": "@@ -1,5 +1,21 @@\n 2018-06-15  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/string_view (basic_string_view(const CharT*)): Remove\n+\tcheck for null pointer and add nonnull attribute.\n+\t(compare(const CharT*), compare(size_type, size_type, const CharT*))\n+\t(find(const CharT*, size_type), rfind(const CharT*, size_type))\n+\t(find_first_of(const CharT*, size_type))\n+\t(find_last_of(const CharT*, size_type))\n+\t(find_first_not_of(const CharT*, size_type))\n+\t(find_last_not_of(const CharT*, size_type)): Add nonnull attribute.\n+\t* testsuite/21_strings/basic_string_view/cons/char/nonnull.cc: New.\n+\t* testsuite/21_strings/basic_string_view/operations/compare/char/\n+\tnonnull.cc: New.\n+\t* testsuite/21_strings/basic_string_view/operations/find/char/\n+\tnonnull.cc: New.\n+\t* testsuite/21_strings/basic_string_view/operations/rfind/char/\n+\tnonnull.cc: New.\n+\n \tPR libstdc++/86168\n \t* include/bits/random.h (random_device(const string&)): Remove\n \tdefault argument."}, {"sha": "f84664ca286c29dece7ba2d05a942f7784f18e39", "filename": "libstdc++-v3/include/std/string_view", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view?ref=36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "patch": "@@ -96,8 +96,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       constexpr basic_string_view(const basic_string_view&) noexcept = default;\n \n-      constexpr basic_string_view(const _CharT* __str) noexcept\n-      : _M_len{__str == nullptr ? 0 : traits_type::length(__str)},\n+      __attribute__((__nonnull__)) constexpr\n+      basic_string_view(const _CharT* __str) noexcept\n+      : _M_len{traits_type::length(__str)},\n \t_M_str{__str}\n       { }\n \n@@ -270,11 +271,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn this->substr(__pos1, __n1).compare(__str.substr(__pos2, __n2));\n       }\n \n-      constexpr int\n+      __attribute__((__nonnull__)) constexpr int\n       compare(const _CharT* __str) const noexcept\n       { return this->compare(basic_string_view{__str}); }\n \n-      constexpr int\n+      __attribute__((__nonnull__)) constexpr int\n       compare(size_type __pos1, size_type __n1, const _CharT* __str) const\n       { return this->substr(__pos1, __n1).compare(basic_string_view{__str}); }\n \n@@ -296,7 +297,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr size_type\n       find(const _CharT* __str, size_type __pos, size_type __n) const noexcept;\n \n-      constexpr size_type\n+      __attribute__((__nonnull__)) constexpr size_type\n       find(const _CharT* __str, size_type __pos = 0) const noexcept\n       { return this->find(__str, __pos, traits_type::length(__str)); }\n \n@@ -310,7 +311,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr size_type\n       rfind(const _CharT* __str, size_type __pos, size_type __n) const noexcept;\n \n-      constexpr size_type\n+      __attribute__((__nonnull__)) constexpr size_type\n       rfind(const _CharT* __str, size_type __pos = npos) const noexcept\n       { return this->rfind(__str, __pos, traits_type::length(__str)); }\n \n@@ -323,9 +324,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return this->find(__c, __pos); }\n \n       constexpr size_type\n-      find_first_of(const _CharT* __str, size_type __pos, size_type __n) const noexcept;\n+      find_first_of(const _CharT* __str, size_type __pos,\n+\t\t    size_type __n) const noexcept;\n \n-      constexpr size_type\n+      __attribute__((__nonnull__)) constexpr size_type\n       find_first_of(const _CharT* __str, size_type __pos = 0) const noexcept\n       { return this->find_first_of(__str, __pos, traits_type::length(__str)); }\n \n@@ -342,7 +344,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       find_last_of(const _CharT* __str, size_type __pos,\n \t\t   size_type __n) const noexcept;\n \n-      constexpr size_type\n+      __attribute__((__nonnull__)) constexpr size_type\n       find_last_of(const _CharT* __str, size_type __pos = npos) const noexcept\n       { return this->find_last_of(__str, __pos, traits_type::length(__str)); }\n \n@@ -358,7 +360,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       find_first_not_of(const _CharT* __str,\n \t\t\tsize_type __pos, size_type __n) const noexcept;\n \n-      constexpr size_type\n+      __attribute__((__nonnull__)) constexpr size_type\n       find_first_not_of(const _CharT* __str, size_type __pos = 0) const noexcept\n       {\n \treturn this->find_first_not_of(__str, __pos,\n@@ -377,7 +379,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       find_last_not_of(const _CharT* __str,\n \t\t       size_type __pos, size_type __n) const noexcept;\n \n-      constexpr size_type\n+      __attribute__((__nonnull__)) constexpr size_type\n       find_last_not_of(const _CharT* __str,\n \t\t       size_type __pos = npos) const noexcept\n       {"}, {"sha": "463ece718bd1d99373e4ead4a8bcc702ab0188cf", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/cons/char/nonnull.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fchar%2Fnonnull.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fchar%2Fnonnull.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fchar%2Fnonnull.cc?ref=36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17 -Wnonnull\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <string_view>\n+\n+void\n+test01()\n+{\n+  std::string_view s((const char*)nullptr); // { dg-warning \"null arg\" }\n+  std::string_view t((char*)nullptr);\t    // { dg-warning \"null arg\" }\n+  std::string_view u(nullptr);\t\t    // { dg-warning \"null arg\" }\n+}"}, {"sha": "8df61427a4924aff125f4b38b31364536dc10abf", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/cons/wchar_t/nonnull.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fwchar_t%2Fnonnull.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fwchar_t%2Fnonnull.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Fcons%2Fwchar_t%2Fnonnull.cc?ref=36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17 -Wnonnull\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <string_view>\n+\n+void\n+test01()\n+{\n+  std::wstring_view s((const wchar_t*)nullptr);\t// { dg-warning \"null arg\" }\n+  std::wstring_view t((wchar_t*)nullptr);\t// { dg-warning \"null arg\" }\n+  std::wstring_view u(nullptr);\t\t\t// { dg-warning \"null arg\" }\n+}"}, {"sha": "1d12b700d889453a6c2621535e03d27c612f2354", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/compare/char/nonnull.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcompare%2Fchar%2Fnonnull.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcompare%2Fchar%2Fnonnull.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fcompare%2Fchar%2Fnonnull.cc?ref=36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17 -Wnonnull\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <string_view>\n+\n+int\n+test01()\n+{\n+  std::string_view s = \"abcd\";\n+  return s.compare((const char*)nullptr);\t// { dg-warning \"null arg\" }\n+  return s.compare(0, 2, (const char*)nullptr);\t// { dg-warning \"null arg\" }\n+}"}, {"sha": "69f1850d9dc59bb25915c8eaf3d8472959a755cc", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/find/char/nonnull.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Ffind%2Fchar%2Fnonnull.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Ffind%2Fchar%2Fnonnull.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Ffind%2Fchar%2Fnonnull.cc?ref=36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "patch": "@@ -0,0 +1,33 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17 -Wnonnull\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <string_view>\n+\n+int\n+test01()\n+{\n+  std::string_view s = \"abcd\";\n+  return s.find((const char*)nullptr);\t\t// { dg-warning \"null arg\" }\n+  return s.find((const char*)nullptr, 1);\t// { dg-warning \"null arg\" }\n+  return s.find_first_of((const char*)nullptr);\t// { dg-warning \"null arg\" }\n+  return s.find_first_of((const char*)nullptr, 1); // { dg-warning \"null arg\" }\n+  return s.find_first_not_of((const char*)nullptr); // { dg-warning \"null arg\" }\n+  return s.find_first_not_of((const char*)nullptr, 1); // { dg-warning \"null arg\" }\n+}"}, {"sha": "ca8527afa580276e4302a8e306d1b27f3774a105", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/rfind/char/nonnull.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Frfind%2Fchar%2Fnonnull.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Frfind%2Fchar%2Fnonnull.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Frfind%2Fchar%2Fnonnull.cc?ref=36eec25a6fa7c32e36d7f77f85c8acb7ff38a66b", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17 -Wnonnull\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <string_view>\n+\n+int\n+test01()\n+{\n+  std::string_view s = \"abcd\";\n+  return s.rfind((const char*)nullptr);\t\t// { dg-warning \"null arg\" }\n+  return s.rfind((const char*)nullptr, 1);\t// { dg-warning \"null arg\" }\n+}"}]}