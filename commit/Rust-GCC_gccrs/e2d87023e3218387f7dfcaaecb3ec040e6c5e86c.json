{"sha": "e2d87023e3218387f7dfcaaecb3ec040e6c5e86c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJkODcwMjNlMzIxODM4N2Y3ZGZjYWFlY2IzZWMwNDBlNmM1ZTg2Yw==", "commit": {"author": {"name": "Brad Lucier", "email": "lucier@math.purdue.edu", "date": "2009-05-16T22:42:15Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-05-16T22:42:15Z"}, "message": "re PR middle-end/39301 (ICE in register_overhead, at bitmap.c:115)\n\n2009-05-16  Brad Lucier  <lucier@math.purdue.edu>\n\n\tPR middle-end/39301\n\t* hwint.h: Add macro HOST_WIDEST_INT_PRINT.\n\t* bitmap.c (bitmap_descriptor): Make fields HOST_WIDEST_INT.\n\t(output_info): Make field HOST_WIDEST_INT.\n\t(print_statistics): Use HOST_WIDEST_INT_PRINT.\n\t(dump_bitmat_statistics): Same.\n\nFrom-SVN: r147624", "tree": {"sha": "e4e1240dbe0803302a485416e2632ff1505083e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4e1240dbe0803302a485416e2632ff1505083e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c/comments", "author": {"login": "gambiteer", "id": 1544698, "node_id": "MDQ6VXNlcjE1NDQ2OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1544698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gambiteer", "html_url": "https://github.com/gambiteer", "followers_url": "https://api.github.com/users/gambiteer/followers", "following_url": "https://api.github.com/users/gambiteer/following{/other_user}", "gists_url": "https://api.github.com/users/gambiteer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gambiteer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gambiteer/subscriptions", "organizations_url": "https://api.github.com/users/gambiteer/orgs", "repos_url": "https://api.github.com/users/gambiteer/repos", "events_url": "https://api.github.com/users/gambiteer/events{/privacy}", "received_events_url": "https://api.github.com/users/gambiteer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "428ddbf0550d70985f5ca5cab6470502c9c2d1f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428ddbf0550d70985f5ca5cab6470502c9c2d1f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428ddbf0550d70985f5ca5cab6470502c9c2d1f9"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "0d7b1acde0feb42556625d33fc6ea4012624add9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2d87023e3218387f7dfcaaecb3ec040e6c5e86c", "patch": "@@ -1,3 +1,12 @@\n+2009-05-16  Brad Lucier  <lucier@math.purdue.edu>\n+\n+\tPR middle-end/39301\n+\t* hwint.h: Add macro HOST_WIDEST_INT_PRINT.\n+\t* bitmap.c (bitmap_descriptor): Make fields HOST_WIDEST_INT.\n+\t(output_info): Make field HOST_WIDEST_INT.\n+\t(print_statistics): Use HOST_WIDEST_INT_PRINT.\n+\t(dump_bitmat_statistics): Same.\n+\n 2009-05-16  Francois-Xavier Coudert  <fxcoudert@gmail.com>\n \n \t* config.gcc (use_gcc_stdint):  Set to wrap."}, {"sha": "8e0a7241104233fc5ee46c828d46b6aa0ccd4311", "filename": "gcc/bitmap.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=e2d87023e3218387f7dfcaaecb3ec040e6c5e86c", "patch": "@@ -37,10 +37,10 @@ struct bitmap_descriptor\n   const char *function;\n   const char *file;\n   int line;\n-  int allocated;\n   int created;\n-  int peak;\n-  int current;\n+  HOST_WIDEST_INT allocated;\n+  HOST_WIDEST_INT peak;\n+  HOST_WIDEST_INT current;\n   int nsearches;\n };\n \n@@ -2013,8 +2013,8 @@ bitmap_print (FILE *file, const_bitmap head, const char *prefix, const char *suf\n /* Used to accumulate statistics about bitmap sizes.  */\n struct output_info\n {\n+  HOST_WIDEST_INT size;\n   int count;\n-  int size;\n };\n \n /* Called via htab_traverse.  Output bitmap descriptor pointed out by SLOT\n@@ -2034,8 +2034,9 @@ print_statistics (void **slot, void *b)\n \ts1 = s2 + 4;\n       sprintf (s, \"%s:%i (%s)\", s1, d->line, d->function);\n       s[41] = 0;\n-      fprintf (stderr, \"%-41s %6d %10d %10d %10d %10d\\n\", s,\n-\t       d->created, d->allocated, d->peak, d->current, d->nsearches);\n+      fprintf (stderr, \"%-41s %8d %15\"HOST_WIDEST_INT_PRINT\"d %15\"\n+\t       HOST_WIDEST_INT_PRINT\"d %15\"HOST_WIDEST_INT_PRINT\"d %10d\\n\",\n+\t       s, d->created, d->allocated, d->peak, d->current, d->nsearches);\n       i->size += d->allocated;\n       i->count += d->created;\n     }\n@@ -2053,14 +2054,14 @@ dump_bitmap_statistics (void)\n     return;\n \n   fprintf (stderr, \"\\nBitmap                                     Overall \"\n-\t\t   \"Allocated     Peak        Leak   searched \"\n+\t\t   \"   Allocated        Peak           Leak   searched \"\n \t\t   \"  per search\\n\");\n   fprintf (stderr, \"---------------------------------------------------------------------------------\\n\");\n   info.count = 0;\n   info.size = 0;\n   htab_traverse (bitmap_desc_hash, print_statistics, &info);\n   fprintf (stderr, \"---------------------------------------------------------------------------------\\n\");\n-  fprintf (stderr, \"%-40s %7d %10d\\n\",\n+  fprintf (stderr, \"%-40s %9d %15\"HOST_WIDEST_INT_PRINT\"d\\n\",\n \t   \"Total\", info.count, info.size);\n   fprintf (stderr, \"---------------------------------------------------------------------------------\\n\");\n #endif"}, {"sha": "18085156ac295b3425bd5020624fbd325aa13c89", "filename": "gcc/hwint.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c/gcc%2Fhwint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d87023e3218387f7dfcaaecb3ec040e6c5e86c/gcc%2Fhwint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.h?ref=e2d87023e3218387f7dfcaaecb3ec040e6c5e86c", "patch": "@@ -99,6 +99,7 @@ extern char sizeof_long_long_must_be_8[sizeof(long long) == 8 ? 1 : -1];\n     || (HOST_BITS_PER_LONGLONG < 64 && HOST_BITS_PER___INT64 < 64)\n # define HOST_WIDEST_INT\t\t      HOST_WIDE_INT\n # define HOST_BITS_PER_WIDEST_INT\t      HOST_BITS_PER_WIDE_INT\n+# define HOST_WIDEST_INT_PRINT                HOST_WIDE_INT_PRINT\n # define HOST_WIDEST_INT_PRINT_DEC\t      HOST_WIDE_INT_PRINT_DEC\n # define HOST_WIDEST_INT_PRINT_DEC_C\t      HOST_WIDE_INT_PRINT_DEC_C\n # define HOST_WIDEST_INT_PRINT_UNSIGNED\t      HOST_WIDE_INT_PRINT_UNSIGNED\n@@ -116,6 +117,7 @@ extern char sizeof_long_long_must_be_8[sizeof(long long) == 8 ? 1 : -1];\n     #error \"This line should be impossible to reach\"\n #  endif\n # endif\n+# define HOST_WIDEST_INT_PRINT                HOST_LONG_LONG_FORMAT\n # define HOST_WIDEST_INT_PRINT_DEC\t      \"%\" HOST_LONG_LONG_FORMAT \"d\"\n # define HOST_WIDEST_INT_PRINT_DEC_C\t      \"%\" HOST_LONG_LONG_FORMAT \"dLL\"\n # define HOST_WIDEST_INT_PRINT_UNSIGNED\t      \"%\" HOST_LONG_LONG_FORMAT \"u\""}]}