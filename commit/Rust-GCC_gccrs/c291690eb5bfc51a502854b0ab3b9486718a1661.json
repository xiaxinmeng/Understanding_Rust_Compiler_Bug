{"sha": "c291690eb5bfc51a502854b0ab3b9486718a1661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI5MTY5MGViNWJmYzUxYTUwMjg1NGIwYWIzYjk0ODY3MThhMTY2MQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-01-29T11:03:02Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-01-29T11:03:02Z"}, "message": "re PR middle-end/64805 (Specific use of __attribute ((always_inline)) breaks MPX functionality with -fcheck-pointer-bounds -mmpx)\n\ngcc/\n\n\tPR middle-end/64805\n\t* ipa-inline.c (early_inliner): Rebuild IPA_REF_CHKP reference\n\tto avoid error in cgraph node verification.\n\ngcc/testsuite/\n\n\tPR middle-end/64805\n\t* gcc.target/i386/pr64805.c: New.\n\nFrom-SVN: r220240", "tree": {"sha": "8d085c99ce016f7a300aee80759e8b6e0c48e514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d085c99ce016f7a300aee80759e8b6e0c48e514"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c291690eb5bfc51a502854b0ab3b9486718a1661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c291690eb5bfc51a502854b0ab3b9486718a1661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c291690eb5bfc51a502854b0ab3b9486718a1661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c291690eb5bfc51a502854b0ab3b9486718a1661/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b6969cd7f409441be66aafda0d2cc7f27ed310c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b6969cd7f409441be66aafda0d2cc7f27ed310c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b6969cd7f409441be66aafda0d2cc7f27ed310c"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "7afc30186bfd3cc5d726d4bbae34b201b62fb482", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291690eb5bfc51a502854b0ab3b9486718a1661/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291690eb5bfc51a502854b0ab3b9486718a1661/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c291690eb5bfc51a502854b0ab3b9486718a1661", "patch": "@@ -1,3 +1,9 @@\n+2015-01-29  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR middle-end/64805\n+\t* ipa-inline.c (early_inliner): Rebuild IPA_REF_CHKP reference\n+\tto avoid error in cgraph node verification.\n+\n 2015-01-29  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/standards.texi: Reflect that the default for C is gnu11."}, {"sha": "be2289074006da30424f179dcc78690b88d39bca", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291690eb5bfc51a502854b0ab3b9486718a1661/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291690eb5bfc51a502854b0ab3b9486718a1661/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=c291690eb5bfc51a502854b0ab3b9486718a1661", "patch": "@@ -2506,6 +2506,13 @@ early_inliner (function *fun)\n #endif\n   node->remove_all_references ();\n \n+  /* Rebuild this reference because it dosn't depend on\n+     function's body and it's required to pass cgraph_node\n+     verification.  */\n+  if (node->instrumented_version\n+      && !node->instrumentation_clone)\n+    node->create_reference (node->instrumented_version, IPA_REF_CHKP, NULL);\n+\n   /* Even when not optimizing or not inlining inline always-inline\n      functions.  */\n   inlined = inline_always_inline_functions (node);"}, {"sha": "df9f025cc029f4fd2956de1f84b2a65125181271", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291690eb5bfc51a502854b0ab3b9486718a1661/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291690eb5bfc51a502854b0ab3b9486718a1661/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c291690eb5bfc51a502854b0ab3b9486718a1661", "patch": "@@ -1,3 +1,8 @@\n+2015-01-29  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR middle-end/64805\n+\t* gcc.target/i386/pr64805.c: New.\n+\n 2015-01-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/guality/guality.h (main): Add argv[0] to"}, {"sha": "8ba0a97220863079f5b149d2f5ebbd2bde1296dc", "filename": "gcc/testsuite/gcc.target/i386/pr64805.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291690eb5bfc51a502854b0ab3b9486718a1661/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64805.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291690eb5bfc51a502854b0ab3b9486718a1661/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64805.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64805.c?ref=c291690eb5bfc51a502854b0ab3b9486718a1661", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target mpx } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+#include <stdio.h>\n+\n+static inline void __attribute ((always_inline)) functionA(void)\n+{\n+  return;\n+}\n+\n+static inline void __attribute ((always_inline)) functionB(void)\n+{\n+  functionA();\n+}\n+\n+int test(void)\n+{\n+  functionB();\n+\n+  return 0;\n+}"}]}