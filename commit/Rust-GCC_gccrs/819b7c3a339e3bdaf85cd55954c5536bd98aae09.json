{"sha": "819b7c3a339e3bdaf85cd55954c5536bd98aae09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5YjdjM2EzMzllM2JkYWY4NWNkNTU5NTRjNTUzNmJkOThhYWUwOQ==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-04T08:39:31Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-24T01:27:53Z"}, "message": "Disable slp in loop vectorizer when cost model is very-cheap.\n\nPerformance impact for the commit with option:\n-march=x86-64 -O2 -ftree-vectorize -fvect-cost-model=very-cheap\n\nSPEC2017 fprate\n503.bwaves_r        BuildSame\n507.cactuBSSN_r         -0.04\n508.namd_r               0.14\n510.parest_r            -0.54\n511.povray_r             0.10\n519.lbm_r           BuildSame\n521.wrf_r                0.64\n526.blender_r           -0.32\n527.cam4_r               0.17\n538.imagick_r            0.09\n544.nab_r           BuildSame\n549.fotonik3d_r     BuildSame\n554.roms_r          BuildSame\n997.specrand_fr         -0.09\nGeometric mean:  0.02\n\nSPEC2017 intrate\n500.perlbench_r          0.26\n502.gcc_r                0.21\n505.mcf_r               -0.09\n520.omnetpp_r       BuildSame\n523.xalancbmk_r     BuildSame\n525.x264_r              -0.41\n531.deepsjeng_r     BuildSame\n541.leela_r              0.13\n548.exchange2_r     BuildSame\n557.xz_r            BuildSame\n999.specrand_ir     BuildSame\nGeometric mean:  0.02\n\nEEMBC: no regression, only improvement or build the same, the below is\nimproved benchmarks.\n\nmp2decoddata1       7.59\nmp2decoddata2       31.80\nmp2decoddata3       12.15\nmp2decoddata4       11.16\nmp2decoddata5       11.19\nmp2decoddata1       7.06\nmp2decoddata2       24.12\nmp2decoddata3       10.83\nmp2decoddata4       10.04\nmp2decoddata5       10.07\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/100089\n\t* tree-vectorizer.c (try_vectorize_loop_1): Disable slp in\n\tloop vectorizer when cost model is very-cheap.", "tree": {"sha": "e12e3c6109ce0a7f55df0b32e87a4b12520d08d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e12e3c6109ce0a7f55df0b32e87a4b12520d08d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/819b7c3a339e3bdaf85cd55954c5536bd98aae09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819b7c3a339e3bdaf85cd55954c5536bd98aae09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819b7c3a339e3bdaf85cd55954c5536bd98aae09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819b7c3a339e3bdaf85cd55954c5536bd98aae09/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38b19c5b0805f9acfcf52430cebca025fc3cdea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b19c5b0805f9acfcf52430cebca025fc3cdea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38b19c5b0805f9acfcf52430cebca025fc3cdea6"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "813f4683d1efff6f654062e0c0bde74805bc1f85", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819b7c3a339e3bdaf85cd55954c5536bd98aae09/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819b7c3a339e3bdaf85cd55954c5536bd98aae09/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=819b7c3a339e3bdaf85cd55954c5536bd98aae09", "patch": "@@ -1033,7 +1033,10 @@ try_vectorize_loop_1 (hash_table<simduid_to_vf> *&simduid_to_vf_htab,\n \t only non-if-converted parts took part in BB vectorization.  */\n       if (flag_tree_slp_vectorize != 0\n \t  && loop_vectorized_call\n-\t  && ! loop->inner)\n+\t  && ! loop->inner\n+\t  /* This would purely be a workaround and should be removed\n+\t     once PR100089 is fixed.  */\n+\t  && flag_vect_cost_model != VECT_COST_MODEL_VERY_CHEAP)\n \t{\n \t  basic_block bb = loop->header;\n \t  bool require_loop_vectorize = false;"}]}