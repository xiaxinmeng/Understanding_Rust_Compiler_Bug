{"sha": "3346b668cadabd4e0f1679d390c999e2532a53f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0NmI2NjhjYWRhYmQ0ZTBmMTY3OWQzOTBjOTk5ZTI1MzJhNTNmNA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-06-22T12:55:44Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-22T12:55:44Z"}, "message": "* c-lang.c: Convert to ISO C90.\n\nFrom-SVN: r68326", "tree": {"sha": "1c82a24bbe08b8bf9653396b534b35d34b3a9e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c82a24bbe08b8bf9653396b534b35d34b3a9e42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3346b668cadabd4e0f1679d390c999e2532a53f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3346b668cadabd4e0f1679d390c999e2532a53f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3346b668cadabd4e0f1679d390c999e2532a53f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3346b668cadabd4e0f1679d390c999e2532a53f4/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cd23ed2b48322e8e8a59f20c83e71500afe7b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd23ed2b48322e8e8a59f20c83e71500afe7b00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd23ed2b48322e8e8a59f20c83e71500afe7b00"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "e27c7db6d6c004a46abcb179716b0e3fee8e5112", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3346b668cadabd4e0f1679d390c999e2532a53f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3346b668cadabd4e0f1679d390c999e2532a53f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3346b668cadabd4e0f1679d390c999e2532a53f4", "patch": "@@ -1,3 +1,7 @@\n+2003-06-22  Andreas Jaeger  <aj@suse.de>\n+\n+\t* c-lang.c: Convert to ISO C90.\n+\n 2003-06-22  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* opts.c (find_opt): Fix to always guarantee a find of a"}, {"sha": "1b4a4ea8861c850058541c63597e68e3419c8859", "filename": "gcc/c-lang.c", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3346b668cadabd4e0f1679d390c999e2532a53f4/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3346b668cadabd4e0f1679d390c999e2532a53f4/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=3346b668cadabd4e0f1679d390c999e2532a53f4", "patch": "@@ -1,6 +1,6 @@\n /* Language-specific hook definitions for C front end.\n    Copyright (C) 1991, 1995, 1997, 1998,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -31,7 +31,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n \n-static int c_init_options PARAMS ((void));\n+static int c_init_options (void);\n \n /* ### When changing hooks, consider if ObjC needs changing too!! ### */\n \n@@ -158,66 +158,59 @@ const char *const tree_code_name[] = {\n #undef DEFTREECODE\n \n static int\n-c_init_options ()\n+c_init_options (void)\n {\n   return c_common_init_options (clk_c);\n }\n \n /* Used by c-lex.c, but only for objc.  */\n \n tree\n-lookup_interface (arg)\n-     tree arg ATTRIBUTE_UNUSED;\n+lookup_interface (tree arg ATTRIBUTE_UNUSED)\n {\n   return 0;\n }\n \n tree\n-is_class_name (arg)\n-    tree arg ATTRIBUTE_UNUSED;\n+is_class_name (tree arg ATTRIBUTE_UNUSED)\n {\n   return 0;\n }\n \n tree\n-objc_is_id (arg)\n-    tree arg ATTRIBUTE_UNUSED;\n+objc_is_id (tree arg ATTRIBUTE_UNUSED)\n {\n   return 0;\n }\n \n void\n-objc_check_decl (decl)\n-     tree decl ATTRIBUTE_UNUSED;\n+objc_check_decl (tree decl ATTRIBUTE_UNUSED)\n {\n }\n \n int\n-objc_comptypes (lhs, rhs, reflexive)\n-     tree lhs ATTRIBUTE_UNUSED;\n-     tree rhs ATTRIBUTE_UNUSED;\n-     int reflexive ATTRIBUTE_UNUSED;\n+objc_comptypes (tree lhs ATTRIBUTE_UNUSED, tree rhs ATTRIBUTE_UNUSED,\n+\t\tint reflexive ATTRIBUTE_UNUSED)\n {\n   return -1;\n }\n \n tree\n-objc_message_selector ()\n+objc_message_selector (void)\n {\n   return 0;\n }\n \n /* Used by c-typeck.c (build_external_ref), but only for objc.  */\n \n tree\n-lookup_objc_ivar (id)\n-     tree id ATTRIBUTE_UNUSED;\n+lookup_objc_ivar (tree id ATTRIBUTE_UNUSED)\n {\n   return 0;\n }\n \n void\n-finish_file ()\n+finish_file (void)\n {\n   c_objc_common_finish_file ();\n }"}]}