{"sha": "9d24eb542cfde81c37ad94029f3d51375785b251", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQyNGViNTQyY2ZkZTgxYzM3YWQ5NDAyOWYzZDUxMzc1Nzg1YjI1MQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-07-21T19:33:45Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-07-21T19:33:45Z"}, "message": "re PR tree-optimization/19055 (Minor bit optimization with or and xor)\n\n2005-07-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/19055\n        * gcc.dg/tree-ssa/pr19055.c: New test.\n        * gcc.dg/tree-ssa/pr19055-2.c: New test.\n\n2005-07-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/19055\n        * fold-const.c (fold_binary): Transform \"(X | Y) ^ X\" to \"Y & ~ X\".\n\nFrom-SVN: r102243", "tree": {"sha": "f83d95ac14a5aafcb09fd2420e89f60afb9ba7b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f83d95ac14a5aafcb09fd2420e89f60afb9ba7b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d24eb542cfde81c37ad94029f3d51375785b251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d24eb542cfde81c37ad94029f3d51375785b251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d24eb542cfde81c37ad94029f3d51375785b251", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d24eb542cfde81c37ad94029f3d51375785b251/comments", "author": null, "committer": null, "parents": [{"sha": "35f5a23f7bc7c0a21bbaf8a0ca8c4be551b99c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f5a23f7bc7c0a21bbaf8a0ca8c4be551b99c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f5a23f7bc7c0a21bbaf8a0ca8c4be551b99c88"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "a8f5b466e6059f47da0762a52be960a47d9ea915", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d24eb542cfde81c37ad94029f3d51375785b251/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d24eb542cfde81c37ad94029f3d51375785b251/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d24eb542cfde81c37ad94029f3d51375785b251", "patch": "@@ -1,3 +1,8 @@\n+2005-07-21  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/19055\n+\t* fold-const.c (fold_binary): Transform \"(X | Y) ^ X\" to \"Y & ~ X\".\n+\n 2005-07-21  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* common.opt (-fforward-propagate): Committed by mistake,"}, {"sha": "acafd6a4655cbfa53688ed2e342d5b7292beaadd", "filename": "gcc/fold-const.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d24eb542cfde81c37ad94029f3d51375785b251/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d24eb542cfde81c37ad94029f3d51375785b251/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9d24eb542cfde81c37ad94029f3d51375785b251", "patch": "@@ -8059,6 +8059,54 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t  goto bit_ior;\n \t}\n \n+      /* (X | Y) ^ X -> Y & ~ X*/\n+      if (TREE_CODE (arg0) == BIT_IOR_EXPR\n+          && operand_equal_p (TREE_OPERAND (arg0, 0), arg1, 0))\n+        {\n+\t  tree t2 = TREE_OPERAND (arg0, 1);\n+\t  t1 = fold_build1 (BIT_NOT_EXPR, TREE_TYPE (arg1),\n+\t\t\t    arg1);\n+\t  t1 = fold_build2 (BIT_AND_EXPR, type, fold_convert (type, t2),\n+\t\t\t    fold_convert (type, t1));\n+\t  return t1;\n+\t}\n+\n+      /* (Y | X) ^ X -> Y & ~ X*/\n+      if (TREE_CODE (arg0) == BIT_IOR_EXPR\n+          && operand_equal_p (TREE_OPERAND (arg0, 1), arg1, 0))\n+        {\n+\t  tree t2 = TREE_OPERAND (arg0, 0);\n+\t  t1 = fold_build1 (BIT_NOT_EXPR, TREE_TYPE (arg1),\n+\t\t\t    arg1);\n+\t  t1 = fold_build2 (BIT_AND_EXPR, type, fold_convert (type, t2),\n+\t\t\t    fold_convert (type, t1));\n+\t  return t1;\n+\t}\n+\n+      /* X ^ (X | Y) -> Y & ~ X*/\n+      if (TREE_CODE (arg1) == BIT_IOR_EXPR\n+          && operand_equal_p (TREE_OPERAND (arg1, 0), arg0, 0))\n+        {\n+\t  tree t2 = TREE_OPERAND (arg1, 1);\n+\t  t1 = fold_build1 (BIT_NOT_EXPR, TREE_TYPE (arg0),\n+\t\t\t    arg0);\n+\t  t1 = fold_build2 (BIT_AND_EXPR, type, fold_convert (type, t2),\n+\t\t\t    fold_convert (type, t1));\n+\t  return t1;\n+\t}\n+\n+      /* X ^ (Y | X) -> Y & ~ X*/\n+      if (TREE_CODE (arg1) == BIT_IOR_EXPR\n+          && operand_equal_p (TREE_OPERAND (arg1, 1), arg0, 0))\n+        {\n+\t  tree t2 = TREE_OPERAND (arg1, 0);\n+\t  t1 = fold_build1 (BIT_NOT_EXPR, TREE_TYPE (arg0),\n+\t\t\t    arg0);\n+\t  t1 = fold_build2 (BIT_AND_EXPR, type, fold_convert (type, t2),\n+\t\t\t    fold_convert (type, t1));\n+\t  return t1;\n+\t}\n+\t\n       /* Convert ~X ^ ~Y to X ^ Y.  */\n       if (TREE_CODE (arg0) == BIT_NOT_EXPR\n \t  && TREE_CODE (arg1) == BIT_NOT_EXPR)"}, {"sha": "f5497d168301c3e9da823ed0095e79b6c8831b9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d24eb542cfde81c37ad94029f3d51375785b251/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d24eb542cfde81c37ad94029f3d51375785b251/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d24eb542cfde81c37ad94029f3d51375785b251", "patch": "@@ -1,3 +1,9 @@\n+2005-07-21  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/19055\n+\t* gcc.dg/tree-ssa/pr19055.c: New test.\n+\t* gcc.dg/tree-ssa/pr19055-2.c: New test.\n+\n 2005-07-21  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR C++/22358"}]}