{"sha": "c51f5910f32421583d6b64d9681bba4c1b7d9a62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUxZjU5MTBmMzI0MjE1ODNkNmI2NGQ5NjgxYmJhNGMxYjdkOWE2Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T16:22:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T16:22:02Z"}, "message": "[multiple changes]\n\n2014-01-24  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* set_targ.adb: Set Short_Enums.\n\t* gcc-interface/lang.opt (fshort-enums): New option.\n\t* gcc-interface/misc.c (gnat_handle_option): Handle it.\n\t(gnat_post_options): Do not modify the global settings.\n\n2014-01-24  Robert Dewar  <dewar@adacore.com>\n\n\t* g-rannum.ads, g-rannum.adb (Random_Ordinary_Fixed): New generic\n\tfunction.\n\t(Random_Decimal_Fixed): New generic function.\n\t* s-rannum.ads: Minor comment clarifications.\n\nFrom-SVN: r207049", "tree": {"sha": "1b66626688e03bff17da5a6e506a763b0ef46bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b66626688e03bff17da5a6e506a763b0ef46bc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c51f5910f32421583d6b64d9681bba4c1b7d9a62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51f5910f32421583d6b64d9681bba4c1b7d9a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c51f5910f32421583d6b64d9681bba4c1b7d9a62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51f5910f32421583d6b64d9681bba4c1b7d9a62/comments", "author": null, "committer": null, "parents": [{"sha": "f9e2a506da8d61699611f756732f4c708f72976c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e2a506da8d61699611f756732f4c708f72976c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9e2a506da8d61699611f756732f4c708f72976c"}], "stats": {"total": 109, "additions": 94, "deletions": 15}, "files": [{"sha": "f0cb5ee91cac8eee356521ff2390ba9fd06c9965", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c51f5910f32421583d6b64d9681bba4c1b7d9a62", "patch": "@@ -1,3 +1,17 @@\n+2014-01-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* set_targ.adb: Set Short_Enums.\n+\t* gcc-interface/lang.opt (fshort-enums): New option.\n+\t* gcc-interface/misc.c (gnat_handle_option): Handle it.\n+\t(gnat_post_options): Do not modify the global settings.\n+\n+2014-01-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-rannum.ads, g-rannum.adb (Random_Ordinary_Fixed): New generic\n+\tfunction.\n+\t(Random_Decimal_Fixed): New generic function.\n+\t* s-rannum.ads: Minor comment clarifications.\n+\n 2014-01-24  Robert Dewar  <dewar@adacore.com>\n \n \t* back_end.adb: Remove Short_Enums handling (handled in"}, {"sha": "a868f08123e566a74792bb469269e4635d919214", "filename": "gcc/ada/g-rannum.adb", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fg-rannum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fg-rannum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-rannum.adb?ref=c51f5910f32421583d6b64d9681bba4c1b7d9a62", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---      Copyright (C) 2007-2009  Free Software Foundation, Inc.             --\n+--          Copyright (C) 2007-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,8 +30,9 @@\n ------------------------------------------------------------------------------\n \n with Ada.Numerics.Long_Elementary_Functions;\n-use Ada.Numerics.Long_Elementary_Functions;\n+use  Ada.Numerics.Long_Elementary_Functions;\n with Ada.Unchecked_Conversion;\n+\n with System.Random_Numbers; use System.Random_Numbers;\n \n package body GNAT.Random_Numbers is\n@@ -87,6 +88,40 @@ package body GNAT.Random_Numbers is\n       return F (Gen.Rep, Min, Max);\n    end Random_Discrete;\n \n+   --------------------------\n+   -- Random_Decimal_Fixed --\n+   --------------------------\n+\n+   function Random_Decimal_Fixed\n+     (Gen : Generator;\n+      Min : Result_Subtype := Default_Min;\n+      Max : Result_Subtype := Result_Subtype'Last) return Result_Subtype\n+   is\n+      subtype IntV is Integer_64 range\n+        Integer_64'Integer_Value (Min) ..\n+        Integer_64'Integer_Value (Max);\n+      function R is new Random_Discrete (Integer_64, IntV'First);\n+   begin\n+      return Result_Subtype'Fixed_Value (R (Gen, IntV'First, IntV'Last));\n+   end Random_Decimal_Fixed;\n+\n+   ---------------------------\n+   -- Random_Ordinary_Fixed --\n+   ---------------------------\n+\n+   function Random_Ordinary_Fixed\n+     (Gen : Generator;\n+      Min : Result_Subtype := Default_Min;\n+      Max : Result_Subtype := Result_Subtype'Last) return Result_Subtype\n+   is\n+      subtype IntV is Integer_64 range\n+        Integer_64'Integer_Value (Min) ..\n+        Integer_64'Integer_Value (Max);\n+      function R is new Random_Discrete (Integer_64, IntV'First);\n+   begin\n+      return Result_Subtype'Fixed_Value (R (Gen, IntV'First, IntV'Last));\n+   end Random_Ordinary_Fixed;\n+\n    ------------\n    -- Random --\n    ------------\n@@ -137,7 +172,7 @@ package body GNAT.Random_Numbers is\n    -- Random_Float --\n    ------------------\n \n-   function Random_Float (Gen   : Generator) return Result_Subtype is\n+   function Random_Float (Gen : Generator) return Result_Subtype is\n       function F is new System.Random_Numbers.Random_Float (Result_Subtype);\n    begin\n       return F (Gen.Rep);"}, {"sha": "010c21c6cde626e0bd8d5cc56b65f39f51eeece1", "filename": "gcc/ada/g-rannum.ads", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fg-rannum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fg-rannum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-rannum.ads?ref=c51f5910f32421583d6b64d9681bba4c1b7d9a62", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---      Copyright (C) 2007-2009  Free Software Foundation, Inc.             --\n+--          Copyright (C) 2007-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,10 +78,28 @@ package GNAT.Random_Numbers is\n       Max   : Result_Subtype := Result_Subtype'Last) return Result_Subtype;\n    --  Returns pseudo-random numbers uniformly distributed on Min .. Max\n \n+   generic\n+      type Result_Subtype is delta <>;\n+      Default_Min : Result_Subtype := 0.0;\n+   function Random_Ordinary_Fixed\n+     (Gen   : Generator;\n+      Min   : Result_Subtype := Default_Min;\n+      Max   : Result_Subtype := Result_Subtype'Last) return Result_Subtype;\n+   --  Returns pseudo-random numbers uniformly distributed on Min .. Max\n+\n+   generic\n+      type Result_Subtype is delta <> digits <>;\n+      Default_Min : Result_Subtype := 0.0;\n+   function Random_Decimal_Fixed\n+     (Gen   : Generator;\n+      Min   : Result_Subtype := Default_Min;\n+      Max   : Result_Subtype := Result_Subtype'Last) return Result_Subtype;\n+   --  Returns pseudo-random numbers uniformly distributed on Min .. Max\n+\n    generic\n       type Result_Subtype is digits <>;\n    function Random_Float (Gen   : Generator) return Result_Subtype;\n-   --  Returns pseudo-random numbers uniformly distributed on [0 .. 1)\n+   --  Returns pseudo-random numbers uniformly distributed on [0.0 .. 1.0)\n \n    function Random_Gaussian (Gen : Generator) return Long_Float;\n    function Random_Gaussian (Gen : Generator) return Float;"}, {"sha": "004388ba26a870699814ffdda93046836ef46a71", "filename": "gcc/ada/gcc-interface/lang.opt", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fgcc-interface%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fgcc-interface%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang.opt?ref=c51f5910f32421583d6b64d9681bba4c1b7d9a62", "patch": "@@ -1,6 +1,5 @@\n ; Options for the Ada front end.\n-; Copyright (C) 2003, 2007, 2008, 2010, 2011, 2012\n-; Free Software Foundation, Inc.\n+; Copyright (C) 2003-2013 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -18,7 +17,6 @@\n ; along with GCC; see the file COPYING3.  If not see\n ; <http://www.gnu.org/licenses/>.\n \n-\n ; See the GCC internals manual for a description of this file's format.\n \n ; Please try to keep this file in ASCII collating order.\n@@ -74,6 +72,10 @@ fRTS=\n Ada AdaWhy AdaSCIL Joined RejectNegative\n Select the runtime\n \n+fshort-enums\n+Ada AdaWhy AdaSCIL\n+Use the narrowest integer type possible for enumeration types\n+\n gant\n Ada AdaWhy AdaSCIL Joined Undocumented\n Catch typos"}, {"sha": "5f135a063b2001f758125e023bbe8a925fcb92bb", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=c51f5910f32421583d6b64d9681bba4c1b7d9a62", "patch": "@@ -151,6 +151,10 @@ gnat_handle_option (size_t scode, const char *arg ATTRIBUTE_UNUSED, int value,\n       /* These are handled by the front-end.  */\n       break;\n \n+    case OPT_fshort_enums:\n+      /* This is handled by the middle-end.  */\n+      break;\n+\n     default:\n       gcc_unreachable ();\n     }\n@@ -259,13 +263,14 @@ gnat_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n   optimize_size = global_options.x_optimize_size;\n   flag_compare_debug = global_options.x_flag_compare_debug;\n   flag_stack_check = global_options.x_flag_stack_check;\n-\n-  /* Unfortunately the post_options hook is called before setting the\n-     short_enums flag. Set it now.  */\n-  if (global_options.x_flag_short_enums == 2)\n-    global_options.x_flag_short_enums = targetm.default_short_enums ();\n   flag_short_enums = global_options.x_flag_short_enums;\n \n+  /* Unfortunately the post_options hook is called before the value of\n+     flag_short_enums is autodetected, if need be.  Mimic the process\n+     for our private flag_short_enums.  */\n+  if (flag_short_enums == 2)\n+    flag_short_enums = targetm.default_short_enums ();\n+\n   return false;\n }\n "}, {"sha": "a412b9c85c9aec9477d24015f0af2401382eae17", "filename": "gcc/ada/s-rannum.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fs-rannum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fs-rannum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rannum.ads?ref=c51f5910f32421583d6b64d9681bba4c1b7d9a62", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2007-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2007-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,12 +56,16 @@ with Interfaces;\n package System.Random_Numbers is\n \n    type Generator is limited private;\n+   --  Generator encodes the current state of a random number stream, it is\n+   --  provided as input to produce the next random number, and updated so\n+   --  that it is ready to produce the next one.\n+\n    type State is private;\n    --  A non-limited version of a Generator's internal state\n \n    function Random (Gen : Generator) return Float;\n    function Random (Gen : Generator) return Long_Float;\n-   --  Return pseudo-random numbers uniformly distributed on [0 .. 1)\n+   --  Return pseudo-random numbers uniformly distributed on [0.0 .. 1.0)\n \n    function Random (Gen : Generator) return Interfaces.Unsigned_32;\n    function Random (Gen : Generator) return Interfaces.Unsigned_64;"}, {"sha": "83ba3313483ba292e441c364a7d922559c142af4", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51f5910f32421583d6b64d9681bba4c1b7d9a62/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=c51f5910f32421583d6b64d9681bba4c1b7d9a62", "patch": "@@ -573,6 +573,7 @@ begin\n       Maximum_Alignment          := Get_Maximum_Alignment;\n       Max_Unaligned_Field        := Get_Max_Unaligned_Field;\n       Pointer_Size               := Get_Pointer_Size;\n+      Short_Enums                := Get_Short_Enums;\n       Short_Size                 := Get_Short_Size;\n       Strict_Alignment           := Get_Strict_Alignment;\n       System_Allocator_Alignment := Get_System_Allocator_Alignment;"}]}