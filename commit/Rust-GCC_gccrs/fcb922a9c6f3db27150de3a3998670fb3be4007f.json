{"sha": "fcb922a9c6f3db27150de3a3998670fb3be4007f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNiOTIyYTljNmYzZGIyNzE1MGRlM2EzOTk4NjcwZmIzYmU0MDA3Zg==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-05-24T00:32:37Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-05-24T00:32:37Z"}, "message": "provide default for HAVE_mem_thread_fence\n\ngcc/ChangeLog:\n\n2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* defaults.h (gen_mem_thread_fence): New function.\n\t(HAVE_mem_thread_fence): Add default definition.\n\t* optabs.c: Adjust.\n\nFrom-SVN: r223620", "tree": {"sha": "dd777bb33b79e58dc362ce2dbe460abb38dc93b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd777bb33b79e58dc362ce2dbe460abb38dc93b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcb922a9c6f3db27150de3a3998670fb3be4007f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb922a9c6f3db27150de3a3998670fb3be4007f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcb922a9c6f3db27150de3a3998670fb3be4007f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb922a9c6f3db27150de3a3998670fb3be4007f/comments", "author": null, "committer": null, "parents": [{"sha": "d0b2266a7747f97b6eebe8b9de064d735b568ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b2266a7747f97b6eebe8b9de064d735b568ef2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b2266a7747f97b6eebe8b9de064d735b568ef2"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "2f40e8dc70a3b83dec9aef2d31453d64934f7dd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb922a9c6f3db27150de3a3998670fb3be4007f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb922a9c6f3db27150de3a3998670fb3be4007f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcb922a9c6f3db27150de3a3998670fb3be4007f", "patch": "@@ -1,3 +1,9 @@\n+2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* defaults.h (gen_mem_thread_fence): New function.\n+\t(HAVE_mem_thread_fence): Add default definition.\n+\t* optabs.c: Adjust.\n+\n 2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* combine.c (find_split_point): Check the value of HAVE_lo_sum"}, {"sha": "72b290aaf652f8cf5ada570e8264fabf8eef4403", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb922a9c6f3db27150de3a3998670fb3be4007f/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb922a9c6f3db27150de3a3998670fb3be4007f/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=fcb922a9c6f3db27150de3a3998670fb3be4007f", "patch": "@@ -1444,6 +1444,16 @@ gen_epilogue ()\n }\n #endif\n \n+#ifndef HAVE_mem_thread_fence\n+#define HAVE_mem_thread_fence 0\n+static inline rtx\n+gen_mem_thread_fence (rtx)\n+{\n+  gcc_unreachable ();\n+  return NULL;\n+}\n+#endif\n+\n #endif /* GCC_INSN_FLAGS_H  */\n \n #endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "197e4aef5f41ce895d41a0e32402d52ff33b36a1", "filename": "gcc/optabs.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb922a9c6f3db27150de3a3998670fb3be4007f/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb922a9c6f3db27150de3a3998670fb3be4007f/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=fcb922a9c6f3db27150de3a3998670fb3be4007f", "patch": "@@ -7589,10 +7589,6 @@ expand_asm_memory_barrier (void)\n /* This routine will either emit the mem_thread_fence pattern or issue a \n    sync_synchronize to generate a fence for memory model MEMMODEL.  */\n \n-#ifndef HAVE_mem_thread_fence\n-# define HAVE_mem_thread_fence 0\n-# define gen_mem_thread_fence(x) (gcc_unreachable (), NULL_RTX)\n-#endif\n #ifndef HAVE_memory_barrier\n # define HAVE_memory_barrier 0\n # define gen_memory_barrier()  (gcc_unreachable (), NULL_RTX)"}]}