{"sha": "0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY4OGRhYzgyNjAyYzA3NjNlMDQ1OWYwN2IzY2I0Y2M4ZjNlY2JhNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-05-21T13:26:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-05-21T13:26:53Z"}, "message": "layout.adb: Minor reformatting.\n\n2014-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* layout.adb: Minor reformatting.\n\t* sem_prag.adb (Analyze_Pragma, case Inspection_Point): Call\n\tdummy procedure ip.\n\n2014-05-21  Robert Dewar  <dewar@adacore.com>\n\n\t* restrict.ads (Implementation_Restriction): Add entry for\n\tNo_Fixed_IO.\n\t* rtsfind.ads: Add entries for Fixed_IO and Decimal_IO in\n\tAda.[Wide_[Wide_]Text_IO.\n\t* s-rident.ads (Restriction_Id): Add entry for No_Fixed_IO.\n\t* sem_attr.adb (Analyze_Attribute): Disallow fixed point types\n\tfor Img, Image, Value, Wide_Image, Wide_Value, Wide_Wide_Image,\n\tWide_Wide_Value if restriction No_Fixed_IO is set.\n\t* sem_util.adb (Set_Entity_Checks): Check restriction No_Fixed_IO.\n\nFrom-SVN: r210710", "tree": {"sha": "1f2c8d0e503e716f8065664c74fc870db490da29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f2c8d0e503e716f8065664c74fc870db490da29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/comments", "author": null, "committer": null, "parents": [{"sha": "ee6208f2d5fb8527b4f2504103e7b884f28660dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee6208f2d5fb8527b4f2504103e7b884f28660dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee6208f2d5fb8527b4f2504103e7b884f28660dc"}], "stats": {"total": 239, "additions": 189, "deletions": 50}, "files": [{"sha": "547b327d1aa3132319c0fe836a442944aed8e7fd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "patch": "@@ -1,3 +1,21 @@\n+2014-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* layout.adb: Minor reformatting.\n+\t* sem_prag.adb (Analyze_Pragma, case Inspection_Point): Call\n+\tdummy procedure ip.\n+\n+2014-05-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* restrict.ads (Implementation_Restriction): Add entry for\n+\tNo_Fixed_IO.\n+\t* rtsfind.ads: Add entries for Fixed_IO and Decimal_IO in\n+\tAda.[Wide_[Wide_]Text_IO.\n+\t* s-rident.ads (Restriction_Id): Add entry for No_Fixed_IO.\n+\t* sem_attr.adb (Analyze_Attribute): Disallow fixed point types\n+\tfor Img, Image, Value, Wide_Image, Wide_Value, Wide_Wide_Image,\n+\tWide_Wide_Value if restriction No_Fixed_IO is set.\n+\t* sem_util.adb (Set_Entity_Checks): Check restriction No_Fixed_IO.\n+\n 2014-05-21  Robert Dewar  <dewar@adacore.com>\n \n \t* gnatcmd.adb: Minor error msg changes (no upper case letter"}, {"sha": "466d1ca292987c405793a4feb98549324ef7faaa", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 26, "deletions": 39, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "patch": "@@ -270,8 +270,7 @@ package body Layout is\n       --  the Integer base type, but it is safe to reduce it to 1 at this\n       --  stage, since we will only be loading a single storage unit.\n \n-      if Is_Discrete_Type (Etype (E))\n-        and then not Has_Alignment_Clause (E)\n+      if Is_Discrete_Type (Etype (E)) and then not Has_Alignment_Clause (E)\n       then\n          loop\n             Abits := Abits / 2;\n@@ -363,13 +362,13 @@ package body Layout is\n \n          --  (E - C1) + C2 = E - (C1 - C2)\n \n-         --  If the type is unsigned, then only do the optimization if\n-         --  C1 >= C2, to avoid creating a negative literal that can't be\n-         --  used with the unsigned type.\n+         --  If the type is unsigned then only do the optimization if C1 >= C2,\n+         --  to avoid creating a negative literal that can't be used with the\n+         --  unsigned type.\n \n          elsif Compile_Time_Known_Value (Sinfo.Right_Opnd (L))\n            and then (not Is_Unsigned_Type (Etype (Sinfo.Right_Opnd (L)))\n-                       or else Expr_Value (Sinfo.Right_Opnd (L)) >= R)\n+                      or else Expr_Value (Sinfo.Right_Opnd (L)) >= R)\n          then\n             Rewrite_Integer\n               (Sinfo.Right_Opnd (L),\n@@ -626,8 +625,8 @@ package body Layout is\n             --  parameter rather than passing \"V\" directly.\n \n             if Present (Comp)\n-               and then Base_Type (Etype (Comp))\n-                          = Base_Type (Etype (First_Formal (Ent)))\n+               and then Base_Type (Etype (Comp)) =\n+                        Base_Type (Etype (First_Formal (Ent)))\n             then\n                return\n                  Make_Function_Call (Loc,\n@@ -755,7 +754,8 @@ package body Layout is\n          --  Value of the current subscript range is statically known\n \n          if Compile_Time_Known_Value (Lo)\n-           and then Compile_Time_Known_Value (Hi)\n+              and then\n+            Compile_Time_Known_Value (Hi)\n          then\n             S := Expr_Value (Hi) - Expr_Value (Lo) + 1;\n \n@@ -1092,7 +1092,8 @@ package body Layout is\n          --  Value of the current subscript range is statically known\n \n          if Compile_Time_Known_Value (Lo)\n-           and then Compile_Time_Known_Value (Hi)\n+              and then\n+            Compile_Time_Known_Value (Hi)\n          then\n             S := Expr_Value (Hi) - Expr_Value (Lo) + 1;\n \n@@ -1388,9 +1389,7 @@ package body Layout is\n       --  not set by an explicit Object_Size attribute clause, then we reset\n       --  the Esize to unknown, since we really don't know it.\n \n-      if Unknown_Alignment (E)\n-        and then not Has_Size_Clause (E)\n-      then\n+      if Unknown_Alignment (E) and then not Has_Size_Clause (E) then\n          Set_Esize (E, Uint_0);\n       end if;\n    end Layout_Object;\n@@ -2512,12 +2511,12 @@ package body Layout is\n          elsif AAMP_On_Target\n            and then\n              ((Ekind (E) = E_Access_Subprogram_Type\n-                  and then Present (Enclosing_Subprogram (E)))\n-                or else\n-                  (Ekind (E) = E_Anonymous_Access_Subprogram_Type\n-                    and then\n-                      (not Is_Local_Anonymous_Access (E)\n-                        or else Present (Enclosing_Subprogram (E)))))\n+                and then Present (Enclosing_Subprogram (E)))\n+               or else\n+                 (Ekind (E) = E_Anonymous_Access_Subprogram_Type\n+                   and then\n+                     (not Is_Local_Anonymous_Access (E)\n+                       or else Present (Enclosing_Subprogram (E)))))\n          then\n             Init_Size (E, 2 * System_Address_Size);\n          else\n@@ -2541,7 +2540,7 @@ package body Layout is\n \n          if Opt.True_VMS_Target\n            and then (Convention (E) = Convention_C\n-                      or else\n+                       or else\n                      Convention (E) = Convention_CPP)\n            and then No (Get_Attribute_Definition_Clause (E, Attribute_Size))\n            and then Esize (E) = 64\n@@ -2653,14 +2652,12 @@ package body Layout is\n          --  component type is known and is a small power of 2 (8, 16, 32, 64),\n          --  since this is what will always be used.\n \n-         if Ekind (E) = E_Array_Type\n-           and then Unknown_Component_Size (E)\n-         then\n+         if Ekind (E) = E_Array_Type and then Unknown_Component_Size (E) then\n             declare\n                CT : constant Entity_Id := Component_Type (E);\n \n             begin\n-               --  For some reasons, access types can cause trouble, So let's\n+               --  For some reason, access types can cause trouble, So let's\n                --  just do this for scalar types ???\n \n                if Present (CT)\n@@ -2700,9 +2697,7 @@ package body Layout is\n             --  For these types, we set a corresponding alignment matching\n             --  the size if possible, or as large as possible if not.\n \n-            if Convention (E) = Convention_Ada\n-               and then not Debug_Flag_Q\n-            then\n+            if Convention (E) = Convention_Ada and then not Debug_Flag_Q then\n                Set_Composite_Alignment (E);\n             end if;\n \n@@ -2724,9 +2719,7 @@ package body Layout is\n             --  arrays when passed to subprogram parameters (see special test\n             --  in Exp_Ch6.Expand_Actuals).\n \n-            if not Is_Packed (E)\n-              and then Unknown_Alignment (E)\n-            then\n+            if not Is_Packed (E) and then Unknown_Alignment (E) then\n                if Known_Static_Component_Size (E)\n                  and then Component_Size (E) = 1\n                then\n@@ -2989,12 +2982,8 @@ package body Layout is\n \n          if Known_Static_Esize (E) then\n             Siz := Esize (E);\n-\n-         elsif Unknown_Esize (E)\n-           and then Known_Static_RM_Size (E)\n-         then\n+         elsif Unknown_Esize (E) and then Known_Static_RM_Size (E) then\n             Siz := RM_Size (E);\n-\n          else\n             return;\n          end if;\n@@ -3102,7 +3091,7 @@ package body Layout is\n                             (Unknown_Esize (Comp)\n                               or else (Known_Static_Esize (Comp)\n                                         and then\n-                                         Esize (Comp) =\n+                                          Esize (Comp) =\n                                               Calign * System_Storage_Unit))\n                         then\n                            Align := UI_To_Int (Calign);\n@@ -3194,9 +3183,7 @@ package body Layout is\n       --  For access types, do not set the alignment if the size is less than\n       --  the allowed minimum size. This avoids cascaded error messages.\n \n-      elsif Is_Access_Type (E)\n-        and then Esize (E) < System_Address_Size\n-      then\n+      elsif Is_Access_Type (E) and then Esize (E) < System_Address_Size then\n          return;\n       end if;\n "}, {"sha": "882cb84b44ed7fdeb679b24184a70560a65610d7", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -120,6 +120,7 @@ package Restrict is\n       No_Exception_Propagation           => True,\n       No_Exception_Registration          => True,\n       No_Finalization                    => True,\n+      No_Fixed_IO                        => True,\n       No_Implementation_Attributes       => True,\n       No_Implementation_Pragmas          => True,\n       No_Implicit_Conditionals           => True,"}, {"sha": "1f50db32dab5fee0e5fac02954e0a220d6ac1eef", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -108,8 +108,9 @@ package Rtsfind is\n    --  ambiguities).\n \n    type RTU_Id is (\n-      --  Runtime packages, for list of accessible entities in each\n-      --  package see declarations in the runtime entity table below.\n+\n+      --  Runtime packages, for list of accessible entities in each package,\n+      --  see declarations in the runtime entity table below.\n \n       RTU_Null,\n       --  Used as a null entry (will cause an error if referenced)\n@@ -132,6 +133,9 @@ package Rtsfind is\n       Ada_Tags,\n       Ada_Task_Identification,\n       Ada_Task_Termination,\n+      Ada_Text_IO,\n+      Ada_Wide_Text_IO,\n+      Ada_Wide_Wide_Text_IO,\n \n       --  Children of Ada.Calendar\n \n@@ -701,6 +705,15 @@ package Rtsfind is\n      RE_Current_Task,                    -- Ada.Task_Identification\n      RO_AT_Task_Id,                      -- Ada.Task_Identification\n \n+     RE_Decimal_IO,                      -- Ada.Text_IO\n+     RE_Fixed_IO,                        -- Ada.Text_IO\n+\n+     RO_WT_Decimal_IO,                   -- Ada.Wide_Text_IO\n+     RO_WT_Fixed_IO,                     -- Ada.Wide_Text_IO\n+\n+     RO_WW_Decimal_IO,                   -- Ada.Wide_Wide_Text_IO\n+     RO_WW_Fixed_IO,                     -- Ada.Wide_Wide_Text_IO\n+\n      RE_Integer_8,                       -- Interfaces\n      RE_Integer_16,                      -- Interfaces\n      RE_Integer_32,                      -- Interfaces\n@@ -1973,6 +1986,15 @@ package Rtsfind is\n      RE_Current_Task                     => Ada_Task_Identification,\n      RO_AT_Task_Id                       => Ada_Task_Identification,\n \n+     RE_Decimal_IO                       => Ada_Text_IO,\n+     RE_Fixed_IO                         => Ada_Text_IO,\n+\n+     RO_WT_Decimal_IO                    => Ada_Wide_Text_IO,\n+     RO_WT_Fixed_IO                      => Ada_Wide_Text_IO,\n+\n+     RO_WW_Decimal_IO                    => Ada_Wide_Wide_Text_IO,\n+     RO_WW_Fixed_IO                      => Ada_Wide_Wide_Text_IO,\n+\n      RE_Integer_8                        => Interfaces,\n      RE_Integer_16                       => Interfaces,\n      RE_Integer_32                       => Interfaces,"}, {"sha": "4f22a1943dda3681991a38fd6dc150f8e1645850", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,6 +112,7 @@ package System.Rident is\n       No_Exception_Registration,                 -- GNAT\n       No_Exceptions,                             -- (RM H.4(12))\n       No_Finalization,                           -- GNAT\n+      No_Fixed_IO,                               -- GNAT\n       No_Fixed_Point,                            -- (RM H.4(15))\n       No_Floating_Point,                         -- (RM H.4(14))\n       No_IO,                                     -- (RM H.4(20))"}, {"sha": "968ba008ec3290cd5d9fbc8ecfb9501e6883d8f9", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "patch": "@@ -3627,6 +3627,16 @@ package body Sem_Attr is\n          Resolve (E1, P_Base_Type);\n          Check_Enum_Image;\n          Validate_Non_Static_Attribute_Function_Call;\n+\n+         --  Check restriction No_Fixed_IO. Note the check of Comes_From_Source\n+         --  to avoid giving a duplicate message for Img expanded into Image.\n+\n+         if Restriction_Check_Required (No_Fixed_IO)\n+           and then Comes_From_Source (N)\n+           and then Is_Fixed_Point_Type (P_Type)\n+         then\n+            Check_Restriction (No_Fixed_IO, P);\n+         end if;\n       end Image;\n \n       ---------\n@@ -3646,6 +3656,14 @@ package body Sem_Attr is\n          end if;\n \n          Check_Enum_Image;\n+\n+         --  Check restriction No_Fixed_IO\n+\n+         if Restriction_Check_Required (No_Fixed_IO)\n+           and then Is_Fixed_Point_Type (P_Type)\n+         then\n+            Check_Restriction (No_Fixed_IO, P);\n+         end if;\n       end Img;\n \n       -----------\n@@ -6458,6 +6476,14 @@ package body Sem_Attr is\n \n          Set_Etype (N, P_Base_Type);\n          Validate_Non_Static_Attribute_Function_Call;\n+\n+         --  Check restriction No_Fixed_IO\n+\n+         if Restriction_Check_Required (No_Fixed_IO)\n+           and then Is_Fixed_Point_Type (P_Type)\n+         then\n+            Check_Restriction (No_Fixed_IO, P);\n+         end if;\n       end Value;\n \n       ----------------\n@@ -6498,6 +6524,14 @@ package body Sem_Attr is\n          Check_E1;\n          Resolve (E1, P_Base_Type);\n          Validate_Non_Static_Attribute_Function_Call;\n+\n+         --  Check restriction No_Fixed_IO\n+\n+         if Restriction_Check_Required (No_Fixed_IO)\n+           and then Is_Fixed_Point_Type (P_Type)\n+         then\n+            Check_Restriction (No_Fixed_IO, P);\n+         end if;\n       end Wide_Image;\n \n       ---------------------\n@@ -6511,6 +6545,14 @@ package body Sem_Attr is\n          Check_E1;\n          Resolve (E1, P_Base_Type);\n          Validate_Non_Static_Attribute_Function_Call;\n+\n+         --  Check restriction No_Fixed_IO\n+\n+         if Restriction_Check_Required (No_Fixed_IO)\n+           and then Is_Fixed_Point_Type (P_Type)\n+         then\n+            Check_Restriction (No_Fixed_IO, P);\n+         end if;\n       end Wide_Wide_Image;\n \n       ----------------\n@@ -6528,6 +6570,14 @@ package body Sem_Attr is\n \n          Set_Etype (N, P_Type);\n          Validate_Non_Static_Attribute_Function_Call;\n+\n+         --  Check restriction No_Fixed_IO\n+\n+         if Restriction_Check_Required (No_Fixed_IO)\n+           and then Is_Fixed_Point_Type (P_Type)\n+         then\n+            Check_Restriction (No_Fixed_IO, P);\n+         end if;\n       end Wide_Value;\n \n       ---------------------\n@@ -6544,6 +6594,14 @@ package body Sem_Attr is\n \n          Set_Etype (N, P_Type);\n          Validate_Non_Static_Attribute_Function_Call;\n+\n+         --  Check restriction No_Fixed_IO\n+\n+         if Restriction_Check_Required (No_Fixed_IO)\n+           and then Is_Fixed_Point_Type (P_Type)\n+         then\n+            Check_Restriction (No_Fixed_IO, P);\n+         end if;\n       end Wide_Wide_Value;\n \n       ---------------------"}, {"sha": "30607203141562fb75be07a429e8c22d86c4ee0a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "patch": "@@ -15327,7 +15327,26 @@ package body Sem_Prag is\n             Arg : Node_Id;\n             Exp : Node_Id;\n \n+            procedure ip;\n+            --  A dummy procedure called when pragma Inspection_Point is\n+            --  analyzed. This is just to help debugging the front end. If\n+            --  a pragma Inspection_Point is added to a source program, then\n+            --  breaking on ip will get you to that point in the program.\n+\n+            --------\n+            -- ip --\n+            --------\n+\n+            procedure ip is\n+            begin\n+               null;\n+            end ip;\n+\n+         --  Start of processing for Inspection_Point\n+\n          begin\n+            ip;\n+\n             if Arg_Count > 0 then\n                Arg := Arg1;\n                loop"}, {"sha": "afb62c13cce225683ff194dfb7766820cef63c52", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 39, "deletions": 6, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0688dac82602c0763e0459f07b3cb4cc8f3ecba4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0688dac82602c0763e0459f07b3cb4cc8f3ecba4", "patch": "@@ -15867,12 +15867,6 @@ package body Sem_Util is\n \n       Set_Entity (N, Val);\n \n-      --  Remaining checks are only done on source nodes\n-\n-      if not Comes_From_Source (N) then\n-         return;\n-      end if;\n-\n       --  The node to post on is the selector in the case of an expanded name,\n       --  and otherwise the node itself.\n \n@@ -15882,6 +15876,44 @@ package body Sem_Util is\n          Post_Node := N;\n       end if;\n \n+      --  Check for violation of No_Fixed_IO\n+\n+      if Restriction_Check_Required (No_Fixed_IO)\n+        and then\n+          ((RTU_Loaded (Ada_Text_IO)\n+             and then (Is_RTE (Val, RE_Decimal_IO)\n+                         or else\n+                       Is_RTE (Val, RE_Fixed_IO)))\n+\n+         or else\n+           (RTU_Loaded (Ada_Wide_Text_IO)\n+             and then (Is_RTE (Val, RO_WT_Decimal_IO)\n+                         or else\n+                       Is_RTE (Val, RO_WT_Fixed_IO)))\n+\n+         or else\n+           (RTU_Loaded (Ada_Wide_Wide_Text_IO)\n+             and then (Is_RTE (Val, RO_WW_Decimal_IO)\n+                         or else\n+                       Is_RTE (Val, RO_WW_Fixed_IO))))\n+\n+        --  A special extra check, don't complain about a reference from within\n+        --  the Ada.Interrupts package itself!\n+\n+        and then not In_Same_Extended_Unit (N, Val)\n+      then\n+         Check_Restriction (No_Fixed_IO, Post_Node);\n+      end if;\n+\n+      --  Remaining checks are only done on source nodes. Note that we test\n+      --  for violation of No_Fixed_IO even on non-source nodes, because the\n+      --  cases for checking violations of this restriction are instantiations\n+      --  where the refernece in the instance has Comes_From_Source False.\n+\n+      if not Comes_From_Source (N) then\n+         return;\n+      end if;\n+\n       --  Check for violation of No_Abort_Statements, which is triggered by\n       --  call to Ada.Task_Identification.Abort_Task.\n \n@@ -15907,6 +15939,7 @@ package body Sem_Util is\n                   Is_RTE (Val, RE_Exchange_Handler) or else\n                   Is_RTE (Val, RE_Detach_Handler)   or else\n                   Is_RTE (Val, RE_Reference))\n+\n         --  A special extra check, don't complain about a reference from within\n         --  the Ada.Interrupts package itself!\n "}]}