{"sha": "0468f67f27f49972dcd77758284a2709bd9249fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2OGY2N2YyN2Y0OTk3MmRjZDc3NzU4Mjg0YTI3MDliZDkyNDlmZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-14T03:53:21Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-14T03:53:21Z"}, "message": "compiler: avoid compiler crash on invalid program\n    \n    I encountered this crash while working on upgrading libgo to the 1.9\n    release.  I no longer have the cause of the crash, but it doesn't much\n    matter, as the policy for crash-on-invalid errors is to fix the crash\n    but not bother to commit the invalid test case.\n    \n    Reviewed-on: https://go-review.googlesource.com/62750\n\nFrom-SVN: r252748", "tree": {"sha": "95c48d0c855c385039578f7ad9713a075758de44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95c48d0c855c385039578f7ad9713a075758de44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0468f67f27f49972dcd77758284a2709bd9249fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0468f67f27f49972dcd77758284a2709bd9249fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0468f67f27f49972dcd77758284a2709bd9249fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0468f67f27f49972dcd77758284a2709bd9249fe/comments", "author": null, "committer": null, "parents": [{"sha": "03ff36aa01bd359f74cbd1f2afec569ce0b77a15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03ff36aa01bd359f74cbd1f2afec569ce0b77a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03ff36aa01bd359f74cbd1f2afec569ce0b77a15"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "7c78efc6f67035a51a357cb336c75c89d247c72f", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0468f67f27f49972dcd77758284a2709bd9249fe/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0468f67f27f49972dcd77758284a2709bd9249fe/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=0468f67f27f49972dcd77758284a2709bd9249fe", "patch": "@@ -1,4 +1,4 @@\n-89e46ae0cde7bebd8e97434355c5b7e57d902613\n+0176cbc6dbd2170bfe2eb8904b80ddfe4c946997\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "82de4d815ab43f19d19d905738135c95d35aa965", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0468f67f27f49972dcd77758284a2709bd9249fe/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0468f67f27f49972dcd77758284a2709bd9249fe/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=0468f67f27f49972dcd77758284a2709bd9249fe", "patch": "@@ -210,7 +210,11 @@ Expression::convert_type_to_interface(Type* lhs_type, Expression* rhs,\n     }\n \n   // This should have been checked already.\n-  go_assert(lhs_interface_type->implements_interface(rhs_type, NULL));\n+  if (!lhs_interface_type->implements_interface(rhs_type, NULL))\n+    {\n+      go_assert(saw_errors());\n+      return Expression::make_error(location);\n+    }\n \n   // An interface is a tuple.  If LHS_TYPE is an empty interface type,\n   // then the first field is the type descriptor for RHS_TYPE."}]}