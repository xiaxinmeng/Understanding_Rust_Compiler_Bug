{"sha": "6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhZjFjYzhmODdkMWM4YzFlYmZhOWM0OGUyN2I3NGI4MmVhYjRlNA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-09-20T10:00:03Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-09-20T10:00:03Z"}, "message": "Make it possible to prototype port-specific functions (and convert i386 to use this)\n\nFrom-SVN: r29514", "tree": {"sha": "e581f680f7e5ca0ee19344ed2e86e199d05a00f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e581f680f7e5ca0ee19344ed2e86e199d05a00f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/comments", "author": null, "committer": null, "parents": [{"sha": "34a24f18066d489449796be019d7b05798403f89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a24f18066d489449796be019d7b05798403f89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34a24f18066d489449796be019d7b05798403f89"}], "stats": {"total": 576, "additions": 350, "deletions": 226}, "files": [{"sha": "7b9833fa6ccbe361d12ad146184cf3ea8ff95b56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -1,3 +1,58 @@\n+Mon Sep 20 10:49:05 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* Makefile.in (distclean): Delete tm_p.h.\n+\t* configure.in: Create a new file, \"tm_p.h\", from a list in\n+\t\"tm_p_file\". For ix86 systems, set up \"tm_p_file\" to include\n+\t\"i386/i386-protos.h\".\n+\n+\t* alias.c: Include \"tm_p.h\".\n+\t* c-typeck.c: Likewise.\n+\t* calls.c: Likewise.\n+\t* cse.c: Likewise.\n+\t* emit-rtl.c: Likewise.\n+\t* explow.c: Likewise.\n+\t* expmed.c: Likewise.\n+\t* expr.c: Likewise.\n+\t* final.c: Likewise.\n+\t* flow.c: Likewise.\n+\t* fold-const.c: Likewise.\n+\t* function.c: Likewise.\n+\t* gcse.c: Likewise.\n+\t* global.c: Likewise.\n+\t* haifa-sched.c: Likewise.\n+\t* integrate.c: Likewise.\n+\t* jump.c: Likewise.\n+\t* local-alloc.c: Likewise.\n+\t* loop.c: Likewise.\n+\t* optabs.c: Likewise.\n+\t* recog.c: Likewise.\n+\t* reg-stack.c: Likewise.\n+\t* regclass.c: Likewise.\n+\t* regmove.c: Likewise.\n+\t* reload.c: Likewise.\n+\t* reload1.c: Likewise.\n+\t* reorg.c: Likewise.\n+\t* resource.c: Likewise.\n+\t* stmt.c: Likewise.\n+\t* stor-layout.c: Likewise.\n+\t* toplev.c: Likewise.\n+\t* tree.c: Likewise.\n+\t* unroll.c: Likewise.\n+\t* genattrtab.c (main): Make generated file include \"tm_p.h\".\n+\t* genemit.c (main): Likewise.\n+\t* genoutput.c (main): Likewise.\n+\t* genrecog.c (main): Likewise.\n+\n+\t* i386.h: Delete all prototypes.\n+\t* i386.c: Include \"tm_p.h\".\n+\t(ix86_attr_length_default): Call constant_call_address_operand\n+\twith correct number of arguments.\n+\t* i386-protos.h: New file.\n+\t* i386.md (unnamed patterns): Call constant_call_address_operand\n+\twith correct number of arguments.\n+\t(exception_receiver): Call load_pic_register with correct number\n+\tof arguments.\n+\n Sun Sep 19 14:18:39 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* c-pragma.c (mark_align_stack): Dereference the void* properly."}, {"sha": "fa25f05d175d76f32c6ff48b06543e2d9c3f0f3f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -2371,7 +2371,7 @@ clean: mostlyclean intl.clean lang.clean\n # while building and installing GCC.\n INTL_DISTCLEAN = intl.distclean\n distclean: clean $(INTL_DISTCLEAN) lang.distclean\n-\t-rm -f tm.h config.h auto-host.h auto-build.h tconfig.h hconfig.h\n+\t-rm -f tm.h tm_p.h config.h auto-host.h auto-build.h tconfig.h hconfig.h\n \t-rm -f md cstamp-h\n \t-rm -f config.status config.run config.cache config.bak\n \t-rm -f Make-lang Make-hooks Make-host Make-target"}, {"sha": "686ffb845dd66ee43db5036ef5cc28597006272f", "filename": "gcc/alias.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -23,6 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"function.h\"\n #include \"expr.h\"\n #include \"regs.h\""}, {"sha": "de982588d133231f77470e126969429119e91689", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -32,6 +32,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"rtl.h\""}, {"sha": "ddf1487adc1ce8ed9c7f1b5baec010544001da18", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -22,6 +22,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"expr.h\"\n #include \"function.h\""}, {"sha": "dafbcd15af99ff9eee7117aca8c302e5ebac36b8", "filename": "gcc/config/i386/i386-protos.h", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -0,0 +1,125 @@\n+/* Definitions of target machine for GNU compiler for IA-32.\n+   Copyright (C) 1988, 92, 94-98, 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA. */\n+\n+/* Functions in i386.c */\n+extern void override_options PROTO((void));\n+extern void order_regs_for_local_alloc PROTO((void));\n+extern void optimization_options PROTO((int, int));\n+\n+extern int ix86_can_use_return_insn_p PROTO((void));\n+\n+extern void asm_output_function_prefix PROTO((FILE *, char *));\n+extern void load_pic_register PROTO((void));\n+extern HOST_WIDE_INT ix86_compute_frame_size PROTO((HOST_WIDE_INT, int *));\n+extern void ix86_expand_prologue PROTO((void));\n+extern void ix86_expand_epilogue PROTO((void));\n+\n+extern void ix86_output_function_block_profiler PROTO((FILE *, int));\n+extern void ix86_output_block_profiler PROTO((FILE *, int));\n+\n+#ifdef RTX_CODE\n+extern int ix86_aligned_p PROTO((rtx));\n+\n+extern int standard_80387_constant_p PROTO((rtx));\n+extern int symbolic_reference_mentioned_p PROTO((rtx));\n+\n+extern int symbolic_operand PROTO((rtx, enum machine_mode));\n+extern int pic_symbolic_operand PROTO((rtx, enum machine_mode));\n+extern int call_insn_operand PROTO((rtx, enum machine_mode));\n+extern int expander_call_insn_operand PROTO((rtx, enum machine_mode));\n+extern int constant_call_address_operand PROTO((rtx, enum machine_mode));\n+extern int const0_operand PROTO((rtx, enum machine_mode));\n+extern int const1_operand PROTO((rtx, enum machine_mode));\n+extern int const248_operand PROTO((rtx, enum machine_mode));\n+extern int incdec_operand PROTO((rtx, enum machine_mode));\n+extern int reg_no_sp_operand PROTO((rtx, enum machine_mode));\n+extern int q_regs_operand PROTO((rtx, enum machine_mode));\n+extern int non_q_regs_operand PROTO((rtx, enum machine_mode));\n+extern int no_comparison_operator PROTO((rtx, enum machine_mode));\n+extern int fcmov_comparison_operator PROTO((rtx, enum machine_mode));\n+extern int cmp_fp_expander_operand PROTO((rtx, enum machine_mode));\n+extern int ext_register_operand PROTO((rtx, enum machine_mode));\n+extern int binary_fp_operator PROTO((rtx, enum machine_mode));\n+extern int mult_operator PROTO((rtx, enum machine_mode));\n+extern int div_operator PROTO((rtx, enum machine_mode));\n+extern int arith_or_logical_operator PROTO((rtx, enum machine_mode));\n+extern int memory_displacement_operand PROTO((rtx, enum machine_mode));\n+extern int cmpsi_operand PROTO((rtx, enum machine_mode));\n+\n+extern int legitimate_pic_address_disp_p PROTO((rtx));\n+extern int legitimate_address_p PROTO((enum machine_mode, rtx, int));\n+extern rtx legitimize_pic_address PROTO((rtx, rtx));\n+extern rtx legitimize_address PROTO((rtx, rtx, enum machine_mode));\n+\n+extern void print_reg PROTO((rtx, int, FILE*));\n+extern void print_operand PROTO((FILE*, rtx, int));\n+extern void print_operand_address PROTO((FILE*, rtx));\n+\n+extern void split_di PROTO((rtx[], int, rtx[], rtx[]));\n+\n+extern char *output_387_binary_op PROTO((rtx, rtx*));\n+extern char *output_fix_trunc PROTO((rtx, rtx*));\n+extern char *output_fp_compare PROTO((rtx, rtx*, int, int));\n+\n+extern void ix86_expand_move PROTO((enum machine_mode, rtx[]));\n+extern void ix86_expand_binary_operator PROTO((enum rtx_code,\n+\t\t\t\t\t       enum machine_mode, rtx[]));\n+extern int ix86_binary_operator_ok PROTO((enum rtx_code, enum machine_mode,\n+\t\t\t\t\t  rtx[]));\n+extern int ix86_expand_unary_operator PROTO((enum rtx_code, enum machine_mode,\n+\t\t\t\t\t     rtx[]));\n+extern int ix86_unary_operator_ok PROTO((enum rtx_code, enum machine_mode,\n+\t\t\t\t\t rtx[]));\n+extern void ix86_expand_branch PROTO((enum rtx_code, int, rtx));\n+extern int ix86_expand_setcc PROTO((enum rtx_code, int, rtx));\n+extern int ix86_expand_int_movcc PROTO((rtx[]));\n+extern int ix86_expand_fp_movcc PROTO((rtx[]));\n+extern int ix86_split_movdi PROTO((rtx[]));\n+extern void ix86_split_ashldi PROTO((rtx *, rtx));\n+extern void ix86_split_ashrdi PROTO((rtx *, rtx));\n+extern void ix86_split_lshrdi PROTO((rtx *, rtx));\n+extern void ix86_expand_strlensi_unroll_1 PROTO((rtx, rtx, rtx));\n+\n+extern rtx assign_386_stack_local PROTO((enum machine_mode, int));\n+extern int ix86_attr_length_default PROTO((rtx));\n+\n+extern int ix86_issue_rate PROTO((void));\n+extern int ix86_adjust_cost PROTO((rtx, rtx, rtx, int));\n+extern void ix86_sched_init PROTO((FILE *, int));\n+extern int ix86_sched_reorder PROTO((FILE *, int, rtx *, int, int));\n+extern int ix86_variable_issue PROTO((FILE *, int, rtx, int));\n+\n+#ifdef TREE_CODE\n+extern void init_cumulative_args PROTO((CUMULATIVE_ARGS *, tree, rtx));\n+extern rtx function_arg PROTO((CUMULATIVE_ARGS *, enum machine_mode, tree, int));\n+extern void function_arg_advance PROTO((CUMULATIVE_ARGS *, enum machine_mode,\n+\t\t\t\t\ttree, int));\n+#endif\n+\n+#endif\n+\n+#ifdef TREE_CODE\n+extern int ix86_valid_decl_attribute_p PROTO((tree, tree, tree, tree));\n+extern int ix86_valid_type_attribute_p PROTO((tree, tree, tree, tree));\n+extern int ix86_comp_type_attributes PROTO((tree, tree));\n+extern int ix86_return_pops_args PROTO((tree, tree, int));\n+#endif\n+\n+"}, {"sha": "635b53537c11291c4be9944102decce7eed767ac", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -22,6 +22,8 @@ Boston, MA 02111-1307, USA. */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"real.h\"\n@@ -30,7 +32,6 @@ Boston, MA 02111-1307, USA. */\n #include \"insn-flags.h\"\n #include \"output.h\"\n #include \"insn-attr.h\"\n-#include \"tree.h\"\n #include \"flags.h\"\n #include \"except.h\"\n #include \"function.h\"\n@@ -5110,12 +5111,14 @@ ix86_attr_length_default (insn)\n       break;\n \n     case TYPE_CALL:\n-      if (constant_call_address_operand (recog_data.operand[0]))\n+      if (constant_call_address_operand (recog_data.operand[0],\n+\t\t\t\t\t GET_MODE (recog_data.operand[0])))\n \treturn 5;\n       break;\n \n     case TYPE_CALLV:\n-      if (constant_call_address_operand (recog_data.operand[1]))\n+      if (constant_call_address_operand (recog_data.operand[1],\n+\t\t\t\t\t GET_MODE (recog_data.operand[1])))\n \treturn 5;\n       break;\n "}, {"sha": "3b302a254efcc03b2a7f57a4ea6bdfd5ae7fca86", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -2397,114 +2397,6 @@ do { long l;\t\t\t\t\t\t\\\n   {\"cmpsi_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\t\\\n \t\t     LABEL_REF, SUBREG, REG, MEM, AND}},\n \f\n-/* Functions in i386.c */\n-\n-#if 1\n-#define XPARAMS(x) ()\n-#else\n-#define XPARAMS(x) PROTO(x)\n-#endif\n-#define xrtx\tstruct rtx_def *\n-#define xtree\tstruct tree_def *\n-#define xmode\tenum machine_mode\n-#define xcode\tenum rtx_code\n-\n-extern void override_options XPARAMS((void));\n-extern void order_regs_for_local_alloc XPARAMS((void));\n-extern void optimization_options XPARAMS((int, int));\n-extern int ix86_aligned_p XPARAMS((xrtx));\n-extern int ix86_valid_decl_attribute_p XPARAMS((xtree, xtree, xtree, xtree));\n-extern int ix86_valid_type_attribute_p XPARAMS((xtree, xtree, xtree, xtree));\n-extern int ix86_comp_type_attributes XPARAMS((xtree, xtree));\n-extern int ix86_return_pops_args XPARAMS((xtree, xtree, int));\n-extern void init_cumulative_args XPARAMS((CUMULATIVE_ARGS*, xtree, xrtx));\n-extern void function_arg_advance XPARAMS((CUMULATIVE_ARGS*,xmode,xtree,int));\n-extern xrtx function_arg XPARAMS((CUMULATIVE_ARGS*, xmode, xtree, int));\n-\n-extern int symbolic_operand XPARAMS((xrtx, xmode));\n-extern int pic_symbolic_operand XPARAMS((xrtx, xmode));\n-extern int call_insn_operand XPARAMS((xrtx, xmode));\n-extern int expander_call_insn_operand XPARAMS((xrtx, xmode));\n-extern int constant_call_address_operand XPARAMS((xrtx, xmode));\n-extern int const0_operand XPARAMS((xrtx, xmode));\n-extern int const1_operand XPARAMS((xrtx, xmode));\n-extern int const248_operand XPARAMS((xrtx, xmode));\n-extern int incdec_operand XPARAMS((xrtx, xmode));\n-extern int reg_no_sp_operand XPARAMS((xrtx, xmode));\n-extern int q_regs_operand XPARAMS((xrtx, xmode));\n-extern int non_q_regs_operand XPARAMS((xrtx, xmode));\n-extern int no_comparison_operator XPARAMS((xrtx, xmode));\n-extern int fcmov_comparison_operator XPARAMS((xrtx, xmode));\n-extern int cmp_fp_expander_operand XPARAMS((xrtx, xmode));\n-extern int ext_register_operand XPARAMS((xrtx, xmode));\n-extern int binary_fp_operator XPARAMS((xrtx, xmode));\n-extern int mult_operator XPARAMS((xrtx, xmode));\n-extern int div_operator XPARAMS((xrtx, xmode));\n-extern int arith_or_logical_operator XPARAMS((xrtx, xmode));\n-extern int memory_displacement_operand XPARAMS((xrtx, xmode));\n-extern int cmpsi_operand XPARAMS((xrtx, xmode));\n-\n-extern int standard_80387_constant_p XPARAMS((xrtx));\n-extern int symbolic_reference_mentioned_p XPARAMS((xrtx));\n-extern int ix86_can_use_return_insn_p XPARAMS((void));\n-\n-extern void asm_output_function_prefix XPARAMS((FILE, char *));\n-extern void load_pic_register XPARAMS((void));\n-#if 0\n-/* HOST_WIDE_INT isn't defined yet.  */\n-extern HOST_WIDE_INT ix86_compute_frame_size XPARAMS ((HOST_WIDE_INT, int *));\n-#endif\n-extern void ix86_expand_prologue XPARAMS((void));\n-extern void ix86_expand_epilogue XPARAMS((void));\n-\n-extern int legitimate_pic_address_disp_p XPARAMS((xrtx));\n-extern int legitimate_address_p XPARAMS((xmode, xrtx, int));\n-extern xrtx legitimize_pic_address XPARAMS((xrtx, xrtx));\n-extern xrtx legitimize_address XPARAMS((xrtx, xrtx, xmode));\n-\n-extern void print_reg XPARAMS((xrtx, int, FILE*));\n-extern void print_operand XPARAMS((FILE*, xrtx, int));\n-extern void print_operand_address XPARAMS((FILE*, xrtx));\n-\n-extern void split_di XPARAMS((xrtx[], int, xrtx[], xrtx[]));\n-\n-extern char *output_387_binary_op XPARAMS((xrtx, xrtx*));\n-extern char *output_fix_trunc XPARAMS((xrtx, xrtx*));\n-extern char *output_fp_compare XPARAMS((xrtx, xrtx*, int, int));\n-extern void ix86_output_function_block_profiler XPARAMS((FILE*, int));\n-extern void ix86_output_block_profiler XPARAMS((FILE*, int));\n-\n-extern void ix86_expand_move XPARAMS((xmode, xrtx[]));\n-extern void ix86_expand_binary_operator XPARAMS((xcode, xmode, xrtx[]));\n-extern int ix86_binary_operator_ok XPARAMS((xcode, xmode, xrtx[]));\n-extern int ix86_expand_unary_operator XPARAMS((xcode, xmode, xrtx[]));\n-extern int ix86_unary_operator_ok XPARAMS((xcode, xmode, xrtx[]));\n-extern void ix86_expand_branch XPARAMS((xcode, int, xrtx));\n-extern int ix86_expand_setcc XPARAMS((xcode, int, xrtx));\n-extern int ix86_expand_int_movcc XPARAMS((xrtx[]));\n-extern int ix86_expand_fp_movcc XPARAMS((xrtx[]));\n-extern int ix86_split_movdi XPARAMS((xrtx[]));\n-extern void ix86_split_ashldi XPARAMS((xrtx *, xrtx));\n-extern void ix86_split_ashrdi XPARAMS((xrtx *, xrtx));\n-extern void ix86_split_lshrdi XPARAMS((xrtx *, xrtx));\n-extern void ix86_expand_strlensi_unroll_1 XPARAMS((xrtx, xrtx, xrtx));\n-\n-extern xrtx assign_386_stack_local XPARAMS((xmode, int));\n-extern int ix86_attr_length_default XPARAMS((xrtx));\n-\n-extern int ix86_issue_rate XPARAMS((void));\n-extern int ix86_adjust_cost XPARAMS((xrtx, xrtx, xrtx, int));\n-extern void ix86_sched_init XPARAMS((FILE *, int));\n-extern int ix86_sched_reorder XPARAMS((FILE *, int, xrtx *, int));\n-extern int ix86_variable_issue XPARAMS((FILE *, int, xrtx, int));\n-\n-\n-#undef XPARAMS\n-#undef xrtx\n-#undef xtree\n-#undef xmode\n-#undef xcode\n-\n /* Variables in i386.c */\n extern const char *ix86_cpu_string;\t\t/* for -mcpu=<xxx> */\n extern const char *ix86_arch_string;\t\t/* for -march=<xxx> */"}, {"sha": "53b23f87a8dc3d3f3fc2570188cd63e3bd5dd49e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -6455,7 +6455,7 @@\n   \"\"\n   \"*\n {\n-  if (constant_call_address_operand (operands[0]))\n+  if (constant_call_address_operand (operands[0], GET_MODE (operands[0])))\n     return \\\"call\\\\t%P0\\\";\n   \n   operands[0] = XEXP (operands[0], 0);\n@@ -6502,7 +6502,7 @@\n   \"\"\n   \"*\n {\n-  if (constant_call_address_operand (operands[0]))\n+  if (constant_call_address_operand (operands[0], GET_MODE (operands[0])))\n     return \\\"call\\\\t%P0\\\";\n   \n   operands[0] = XEXP (operands[0], 0);\n@@ -6561,7 +6561,7 @@\n   \"\"\n   \"*\n {\n-  if (constant_call_address_operand (operands[1]))\n+  if (constant_call_address_operand (operands[1], GET_MODE (operands[1])))\n     return \\\"call\\\\t%P1\\\";\n   \n   operands[1] = XEXP (operands[1], 0);\n@@ -6611,7 +6611,7 @@\n   \"\"\n   \"*\n {\n-  if (constant_call_address_operand (operands[1]))\n+  if (constant_call_address_operand (operands[1], GET_MODE (operands[1])))\n     return \\\"call\\\\t%P1\\\";\n   \n   operands[1] = XEXP (operands[1], 0);\n@@ -7754,7 +7754,7 @@\n   \"flag_pic\"\n   \"\n {\n-  load_pic_register (1);\n+  load_pic_register ();\n   DONE;\n }\")\n \f"}, {"sha": "3efcd2d7b63af219ba114f9aee3553e5d9c71e47", "filename": "gcc/configure", "status": "modified", "additions": 109, "deletions": 103, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -1334,7 +1334,7 @@ else\n fi\n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -3010,8 +3010,9 @@ for machine in $build $host $target; do\n \tgnu_ld=\"$gnu_ld_flag\"\n \tenable_threads=$enable_threads_flag\n \n-\t# Set default cpu_type, tm_file and xm_file so it can be updated in\n-\t# each machine entry.\n+\t# Set default cpu_type, tm_file, tm_p_file and xm_file so it can be\n+\t# updated in each machine entry.\n+\ttm_p_file=\n \tcpu_type=`echo $machine | sed 's/-.*$//'`\n \tcase $machine in\n \talpha*-*-*)\n@@ -3048,7 +3049,10 @@ for machine in $build $host $target; do\n \n \ttm_file=${cpu_type}/${cpu_type}.h\n \txm_file=${cpu_type}/xm-${cpu_type}.h\n-\t\n+\tif test -f ${srcdir}/config/${cpu_type}/${cpu_type}-protos.h;\n+\tthen\n+\t\ttm_p_file=${cpu_type}/${cpu_type}-protos.h;\n+\tfi\n \t# On a.out targets, we need to use collect2.\n \tcase $machine in\n \t*-*-*aout*)\n@@ -6261,9 +6265,9 @@ fi\n xm_file=\"gansidecl.h ${xm_file}\"\n tm_file=\"gansidecl.h ${tm_file}\"\n \n-vars=\"host_xm_file tm_file xm_file build_xm_file\"\n-links=\"config.h tm.h tconfig.h hconfig.h\"\n-defines=\"host_xm_defines null_defines xm_defines build_xm_defines\"\n+vars=\"host_xm_file tm_file tm_p_file xm_file build_xm_file\"\n+links=\"config.h tm.h tm_p.h tconfig.h hconfig.h\"\n+defines=\"host_xm_defines null_defines null_defines xm_defines build_xm_defines\"\n \n rm -f config.bak\n if test -f config.status; then mv -f config.status config.bak; fi\n@@ -6276,6 +6280,8 @@ do\n \tset $defines; define=$1; shift; defines=$*\n \n \trm -f $link\n+\t# Make sure the file is created, even if it is empty.\n+\techo >$link\n \n \t# Define TARGET_CPU_DEFAULT if the system wants one.\n \t# This substitutes for lots of *.h files.\n@@ -6350,15 +6356,15 @@ fi\n \n \n         echo $ac_n \"checking for strerror in -lcposix\"\"... $ac_c\" 1>&6\n-echo \"configure:6354: checking for strerror in -lcposix\" >&5\n+echo \"configure:6360: checking for strerror in -lcposix\" >&5\n ac_lib_var=`echo cposix'_'strerror | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lcposix  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6362 \"configure\"\n+#line 6368 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6369,7 +6375,7 @@ int main() {\n strerror()\n ; return 0; }\n EOF\n-if { (eval echo configure:6373: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6379: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6392,12 +6398,12 @@ fi\n   \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:6396: checking for working const\" >&5\n+echo \"configure:6402: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6401 \"configure\"\n+#line 6407 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -6446,7 +6452,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6450: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:6456: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -6467,21 +6473,21 @@ EOF\n fi\n \n echo $ac_n \"checking for inline\"\"... $ac_c\" 1>&6\n-echo \"configure:6471: checking for inline\" >&5\n+echo \"configure:6477: checking for inline\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_inline'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_cv_c_inline=no\n for ac_kw in inline __inline__ __inline; do\n   cat > conftest.$ac_ext <<EOF\n-#line 6478 \"configure\"\n+#line 6484 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n } $ac_kw foo() {\n ; return 0; }\n EOF\n-if { (eval echo configure:6485: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:6491: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_inline=$ac_kw; break\n else\n@@ -6507,12 +6513,12 @@ EOF\n esac\n \n echo $ac_n \"checking for off_t\"\"... $ac_c\" 1>&6\n-echo \"configure:6511: checking for off_t\" >&5\n+echo \"configure:6517: checking for off_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_off_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6516 \"configure\"\n+#line 6522 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -6540,12 +6546,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:6544: checking for size_t\" >&5\n+echo \"configure:6550: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6549 \"configure\"\n+#line 6555 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -6575,19 +6581,19 @@ fi\n # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:6579: checking for working alloca.h\" >&5\n+echo \"configure:6585: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6584 \"configure\"\n+#line 6590 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:6591: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6597: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -6608,12 +6614,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:6612: checking for alloca\" >&5\n+echo \"configure:6618: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6617 \"configure\"\n+#line 6623 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -6641,7 +6647,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:6645: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6651: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -6673,12 +6679,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:6677: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:6683: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6682 \"configure\"\n+#line 6688 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -6703,12 +6709,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:6707: checking for $ac_func\" >&5\n+echo \"configure:6713: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6712 \"configure\"\n+#line 6718 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -6731,7 +6737,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6735: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6741: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -6758,15 +6764,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:6762: checking stack direction for C alloca\" >&5\n+echo \"configure:6768: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6770 \"configure\"\n+#line 6776 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -6785,7 +6791,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:6789: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:6795: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -6810,17 +6816,17 @@ for ac_hdr in unistd.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:6814: checking for $ac_hdr\" >&5\n+echo \"configure:6820: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6819 \"configure\"\n+#line 6825 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:6824: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:6830: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -6849,12 +6855,12 @@ done\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:6853: checking for $ac_func\" >&5\n+echo \"configure:6859: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6858 \"configure\"\n+#line 6864 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -6877,7 +6883,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6881: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6887: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -6902,15 +6908,15 @@ fi\n done\n \n echo $ac_n \"checking for working mmap\"\"... $ac_c\" 1>&6\n-echo \"configure:6906: checking for working mmap\" >&5\n+echo \"configure:6912: checking for working mmap\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_fixed_mapped'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_fixed_mapped=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6914 \"configure\"\n+#line 6920 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Haertel and Jim Avera for this test.\n@@ -7050,7 +7056,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:7054: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:7060: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -7078,17 +7084,17 @@ unistd.h sys/param.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:7082: checking for $ac_hdr\" >&5\n+echo \"configure:7088: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7087 \"configure\"\n+#line 7093 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7092: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7098: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7118,12 +7124,12 @@ done\n strdup __argz_count __argz_stringify __argz_next\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:7122: checking for $ac_func\" >&5\n+echo \"configure:7128: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7127 \"configure\"\n+#line 7133 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -7146,7 +7152,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7150: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7156: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -7175,12 +7181,12 @@ done\n      for ac_func in stpcpy\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:7179: checking for $ac_func\" >&5\n+echo \"configure:7185: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7184 \"configure\"\n+#line 7190 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -7203,7 +7209,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7207: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7213: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -7237,19 +7243,19 @@ EOF\n \n    if test $ac_cv_header_locale_h = yes; then\n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:7241: checking for LC_MESSAGES\" >&5\n+echo \"configure:7247: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'am_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7246 \"configure\"\n+#line 7252 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:7253: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7259: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_val_LC_MESSAGES=yes\n else\n@@ -7270,7 +7276,7 @@ EOF\n     fi\n   fi\n    echo $ac_n \"checking whether NLS is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:7274: checking whether NLS is requested\" >&5\n+echo \"configure:7280: checking whether NLS is requested\" >&5\n         # Check whether --enable-nls or --disable-nls was given.\n if test \"${enable_nls+set}\" = set; then\n   enableval=\"$enable_nls\"\n@@ -7290,7 +7296,7 @@ fi\n EOF\n \n       echo $ac_n \"checking whether included gettext is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:7294: checking whether included gettext is requested\" >&5\n+echo \"configure:7300: checking whether included gettext is requested\" >&5\n       # Check whether --with-included-gettext or --without-included-gettext was given.\n if test \"${with_included_gettext+set}\" = set; then\n   withval=\"$with_included_gettext\"\n@@ -7309,17 +7315,17 @@ fi\n \n \tac_safe=`echo \"libintl.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for libintl.h\"\"... $ac_c\" 1>&6\n-echo \"configure:7313: checking for libintl.h\" >&5\n+echo \"configure:7319: checking for libintl.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7318 \"configure\"\n+#line 7324 \"configure\"\n #include \"confdefs.h\"\n #include <libintl.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:7323: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:7329: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -7336,19 +7342,19 @@ fi\n if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   echo $ac_n \"checking for gettext in libc\"\"... $ac_c\" 1>&6\n-echo \"configure:7340: checking for gettext in libc\" >&5\n+echo \"configure:7346: checking for gettext in libc\" >&5\n if eval \"test \\\"`echo '$''{'gt_cv_func_gettext_libc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7345 \"configure\"\n+#line 7351 \"configure\"\n #include \"confdefs.h\"\n #include <libintl.h>\n int main() {\n return (int) gettext (\"\")\n ; return 0; }\n EOF\n-if { (eval echo configure:7352: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7358: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   gt_cv_func_gettext_libc=yes\n else\n@@ -7364,15 +7370,15 @@ echo \"$ac_t\"\"$gt_cv_func_gettext_libc\" 1>&6\n \n \t   if test \"$gt_cv_func_gettext_libc\" != \"yes\"; then\n \t     echo $ac_n \"checking for bindtextdomain in -lintl\"\"... $ac_c\" 1>&6\n-echo \"configure:7368: checking for bindtextdomain in -lintl\" >&5\n+echo \"configure:7374: checking for bindtextdomain in -lintl\" >&5\n ac_lib_var=`echo intl'_'bindtextdomain | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lintl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 7376 \"configure\"\n+#line 7382 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -7383,7 +7389,7 @@ int main() {\n bindtextdomain()\n ; return 0; }\n EOF\n-if { (eval echo configure:7387: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7393: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -7399,20 +7405,20 @@ fi\n if eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   echo $ac_n \"checking for gettext in libintl\"\"... $ac_c\" 1>&6\n-echo \"configure:7403: checking for gettext in libintl\" >&5\n+echo \"configure:7409: checking for gettext in libintl\" >&5\n if eval \"test \\\"`echo '$''{'gt_cv_func_gettext_libintl'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   echo $ac_n \"checking for gettext in -lintl\"\"... $ac_c\" 1>&6\n-echo \"configure:7408: checking for gettext in -lintl\" >&5\n+echo \"configure:7414: checking for gettext in -lintl\" >&5\n ac_lib_var=`echo intl'_'gettext | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lintl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 7416 \"configure\"\n+#line 7422 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -7423,7 +7429,7 @@ int main() {\n gettext()\n ; return 0; }\n EOF\n-if { (eval echo configure:7427: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7433: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -7462,7 +7468,7 @@ EOF\n \t      # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7466: checking for $ac_word\" >&5\n+echo \"configure:7472: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_MSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7496,12 +7502,12 @@ fi\n \t\tfor ac_func in dcgettext\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:7500: checking for $ac_func\" >&5\n+echo \"configure:7506: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7505 \"configure\"\n+#line 7511 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -7524,7 +7530,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7528: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7534: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -7551,7 +7557,7 @@ done\n \t\t# Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7555: checking for $ac_word\" >&5\n+echo \"configure:7561: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7587,7 +7593,7 @@ fi\n \t\t# Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7591: checking for $ac_word\" >&5\n+echo \"configure:7597: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7619,15 +7625,15 @@ else\n fi\n \n \t\tcat > conftest.$ac_ext <<EOF\n-#line 7623 \"configure\"\n+#line 7629 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n extern int _nl_msg_cat_cntr;\n \t\t\t       return _nl_msg_cat_cntr\n ; return 0; }\n EOF\n-if { (eval echo configure:7631: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7637: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   CATOBJEXT=.gmo\n \t\t   DATADIRNAME=share\n@@ -7650,7 +7656,7 @@ fi\n \n         if test \"$CATOBJEXT\" = \"NONE\"; then\n \t  echo $ac_n \"checking whether catgets can be used\"\"... $ac_c\" 1>&6\n-echo \"configure:7654: checking whether catgets can be used\" >&5\n+echo \"configure:7660: checking whether catgets can be used\" >&5\n \t  # Check whether --with-catgets or --without-catgets was given.\n if test \"${with_catgets+set}\" = set; then\n   withval=\"$with_catgets\"\n@@ -7663,22 +7669,22 @@ fi\n \n \t  if test \"$nls_cv_use_catgets\" = \"yes\"; then\n \t    \t    echo $ac_n \"checking for main in -li\"\"... $ac_c\" 1>&6\n-echo \"configure:7667: checking for main in -li\" >&5\n+echo \"configure:7673: checking for main in -li\" >&5\n ac_lib_var=`echo i'_'main | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-li  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 7675 \"configure\"\n+#line 7681 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n main()\n ; return 0; }\n EOF\n-if { (eval echo configure:7682: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7688: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -7706,12 +7712,12 @@ else\n fi\n \n \t    echo $ac_n \"checking for catgets\"\"... $ac_c\" 1>&6\n-echo \"configure:7710: checking for catgets\" >&5\n+echo \"configure:7716: checking for catgets\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_catgets'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 7715 \"configure\"\n+#line 7721 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char catgets(); below.  */\n@@ -7734,7 +7740,7 @@ catgets();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:7738: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:7744: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_catgets=yes\"\n else\n@@ -7756,7 +7762,7 @@ EOF\n \t       # Extract the first word of \"gencat\", so it can be a program name with args.\n set dummy gencat; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7760: checking for $ac_word\" >&5\n+echo \"configure:7766: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GENCAT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7792,7 +7798,7 @@ fi\n \t\t # Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7796: checking for $ac_word\" >&5\n+echo \"configure:7802: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7829,7 +7835,7 @@ fi\n \t\t   # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7833: checking for $ac_word\" >&5\n+echo \"configure:7839: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7864,7 +7870,7 @@ fi\n \t\t # Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7868: checking for $ac_word\" >&5\n+echo \"configure:7874: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7922,7 +7928,7 @@ fi\n         # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7926: checking for $ac_word\" >&5\n+echo \"configure:7932: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_MSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7956,7 +7962,7 @@ fi\n         # Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7960: checking for $ac_word\" >&5\n+echo \"configure:7966: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7992,7 +7998,7 @@ fi\n         # Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:7996: checking for $ac_word\" >&5\n+echo \"configure:8002: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8085,7 +8091,7 @@ fi\n        LINGUAS=\n      else\n        echo $ac_n \"checking for catalogs to be installed\"\"... $ac_c\" 1>&6\n-echo \"configure:8089: checking for catalogs to be installed\" >&5\n+echo \"configure:8095: checking for catalogs to be installed\" >&5\n        NEW_LINGUAS=\n        for lang in ${LINGUAS=$ALL_LINGUAS}; do\n          case \"$ALL_LINGUAS\" in\n@@ -8113,17 +8119,17 @@ echo \"configure:8089: checking for catalogs to be installed\" >&5\n    if test \"$CATOBJEXT\" = \".cat\"; then\n      ac_safe=`echo \"linux/version.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for linux/version.h\"\"... $ac_c\" 1>&6\n-echo \"configure:8117: checking for linux/version.h\" >&5\n+echo \"configure:8123: checking for linux/version.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 8122 \"configure\"\n+#line 8128 \"configure\"\n #include \"confdefs.h\"\n #include <linux/version.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:8127: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:8133: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -8198,7 +8204,7 @@ fi\n \n \n echo $ac_n \"checking whether windows registry support is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:8202: checking whether windows registry support is requested\" >&5\n+echo \"configure:8208: checking whether windows registry support is requested\" >&5\n if test x$enable_win32_registry != xno; then\n   cat >> confdefs.h <<\\EOF\n #define ENABLE_WIN32_REGISTRY 1\n@@ -8227,7 +8233,7 @@ esac\n \n if test x$enable_win32_registry != xno; then\n   echo $ac_n \"checking registry key on windows hosts\"\"... $ac_c\" 1>&6\n-echo \"configure:8231: checking registry key on windows hosts\" >&5\n+echo \"configure:8237: checking registry key on windows hosts\" >&5\n   cat >> confdefs.h <<EOF\n #define WIN32_REGISTRY_KEY \"$gcc_cv_win32_registry_key\"\n EOF\n@@ -8403,7 +8409,7 @@ fi\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:8407: checking assembler alignment features\" >&5\n+echo \"configure:8413: checking assembler alignment features\" >&5\n gcc_cv_as=\n gcc_cv_as_alignment_features=\n gcc_cv_as_gas_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/gas\n@@ -8524,7 +8530,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:8528: checking assembler subsection support\" >&5\n+echo \"configure:8534: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=\n if test x$gcc_cv_as != x; then\n \t# Check if we have .subsection\n@@ -8566,7 +8572,7 @@ echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n case \"$target\" in \n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:8570: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:8576: checking assembler .register pseudo-op support\" >&5\n     gcc_cv_as_register_pseudo_op=\n     if test x$gcc_cv_as != x; then\n \t# Check if we have .register\n@@ -8583,7 +8589,7 @@ EOF\n     echo \"$ac_t\"\"$gcc_cv_as_register_pseudo_op\" 1>&6\n \n     echo $ac_n \"checking assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:8587: checking assembler offsetable %lo() support\" >&5\n+echo \"configure:8593: checking assembler offsetable %lo() support\" >&5\n     gcc_cv_as_offsetable_lo10=\n     if test x$gcc_cv_as != x; then\n \t# Check if assembler has offsetable %lo()\n@@ -8620,7 +8626,7 @@ EOF\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:8624: checking assembler instructions\" >&5\n+echo \"configure:8630: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_as != x; then\n \tset \"filds fists\" \"filds mem; fists mem\""}, {"sha": "2ce4ac7d8ab04fee7399c1e531832b17db3ddf56", "filename": "gcc/configure.in", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -475,8 +475,9 @@ for machine in $build $host $target; do\n \tgnu_ld=\"$gnu_ld_flag\"\n \tenable_threads=$enable_threads_flag\n \n-\t# Set default cpu_type, tm_file and xm_file so it can be updated in\n-\t# each machine entry.\n+\t# Set default cpu_type, tm_file, tm_p_file and xm_file so it can be\n+\t# updated in each machine entry.\n+\ttm_p_file=\n \tcpu_type=`echo $machine | sed 's/-.*$//'`\n \tcase $machine in\n \talpha*-*-*)\n@@ -515,7 +516,10 @@ changequote([,])dnl\n \n \ttm_file=${cpu_type}/${cpu_type}.h\n \txm_file=${cpu_type}/xm-${cpu_type}.h\n-\t\n+\tif test -f ${srcdir}/config/${cpu_type}/${cpu_type}-protos.h;\n+\tthen\n+\t\ttm_p_file=${cpu_type}/${cpu_type}-protos.h;\n+\tfi\n \t# On a.out targets, we need to use collect2.\n \tcase $machine in\n \t*-*-*aout*)\n@@ -3860,9 +3864,9 @@ fi\n xm_file=\"gansidecl.h ${xm_file}\"\n tm_file=\"gansidecl.h ${tm_file}\"\n \n-vars=\"host_xm_file tm_file xm_file build_xm_file\"\n-links=\"config.h tm.h tconfig.h hconfig.h\"\n-defines=\"host_xm_defines null_defines xm_defines build_xm_defines\"\n+vars=\"host_xm_file tm_file tm_p_file xm_file build_xm_file\"\n+links=\"config.h tm.h tm_p.h tconfig.h hconfig.h\"\n+defines=\"host_xm_defines null_defines null_defines xm_defines build_xm_defines\"\n \n rm -f config.bak\n if test -f config.status; then mv -f config.status config.bak; fi\n@@ -3875,6 +3879,8 @@ do\n \tset $defines; define=$1; shift; defines=$*\n \n \trm -f $link\n+\t# Make sure the file is created, even if it is empty.\n+\techo >$link\n \n \t# Define TARGET_CPU_DEFAULT if the system wants one.\n \t# This substitutes for lots of *.h files."}, {"sha": "8275974073d39e7c8e59cccfee2baed2202160ff", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -25,6 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #include <setjmp.h>\n \n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\""}, {"sha": "0e6dc1bea8e8bbd8847453110dbccf61a7afddc6", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -39,6 +39,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "28afe3cfb1f485e4e4b0c0f402680e2b446f3d05", "filename": "gcc/explow.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -24,6 +24,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "c0fa722e8c9a98f21c5282f80ea5d6fb173b0f65", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -25,6 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"insn-flags.h\"\n #include \"insn-codes.h\""}, {"sha": "39bfb4944edc6c60f668706e7d65efd8cfeabf15", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -24,6 +24,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"machmode.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"flags.h\"\n #include \"regs.h\""}, {"sha": "1a90979fc976167c43dc7aa3089bc1c78c8b1339", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -49,6 +49,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"tree.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"regs.h\"\n #include \"insn-config.h\"\n #include \"insn-flags.h\""}, {"sha": "c7f2d15f58f72fc875452a7d47a5d9f227e1ffdf", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -121,6 +121,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"insn-config.h\"\n #include \"regs.h\""}, {"sha": "7fe6f25fe2364baa12b0ff4389185b2db96d57f0", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -48,6 +48,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n "}, {"sha": "eec10118276648876f0935f543868489afd0501a", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -42,6 +42,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"except.h\"\n #include \"function.h\""}, {"sha": "6687d6b363d7b085c4013b73a3656f79dba279bd", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -144,6 +144,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n \n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\""}, {"sha": "19adfeae06b6eb7ef9199774a4979e9236877187", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -6073,6 +6073,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"config.h\\\"\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n+  printf (\"#include \\\"tm_p.h\\\"\\n\");\n   printf (\"#include \\\"insn-config.h\\\"\\n\");\n   printf (\"#include \\\"recog.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");"}, {"sha": "3608e52a57c1806195d936907aa8db4fbe8cee31", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -800,6 +800,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"config.h\\\"\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n+  printf (\"#include \\\"tm_p.h\\\"\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");\n   printf (\"#include \\\"expr.h\\\"\\n\");\n   printf (\"#include \\\"real.h\\\"\\n\");"}, {"sha": "89859a82dcedcf1ad9e683c38a6fe5f76eb9228c", "filename": "gcc/genoutput.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -227,6 +227,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n+  printf (\"#include \\\"tm_p.h\\\"\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n   printf (\"#include \\\"hard-reg-set.h\\\"\\n\");"}, {"sha": "4d3d74952dc381b6c18b14df20c938c3df733137", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -1903,6 +1903,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"config.h\\\"\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n+  printf (\"#include \\\"tm_p.h\\\"\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");\n   printf (\"#include \\\"insn-config.h\\\"\\n\");\n   printf (\"#include \\\"recog.h\\\"\\n\");"}, {"sha": "17bfaf4246dca1a989a9606bfd3a401dc120557d", "filename": "gcc/global.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -25,6 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"basic-block.h\"\n #include \"regs.h\""}, {"sha": "8641f11ff2c0a2512d549b0a123527b96d86d3b7", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -159,6 +159,7 @@\n #include \"system.h\"\n #include \"toplev.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"regs.h\"\n #include \"function.h\""}, {"sha": "0725a94cbca35ff8f584026c9d4e10fc3afbce26", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -25,6 +25,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n #include \"insn-config.h\""}, {"sha": "3d7a4b787f311b38796a3b74fbe2dd9601849029", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -54,6 +54,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\""}, {"sha": "4884a499c8f91c923f931cf37d88c7bc810dad27", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -62,6 +62,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"basic-block.h\"\n #include \"regs.h\""}, {"sha": "32ac1752cedf37dc67ed46a6ed5099ccde09cc06", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -37,6 +37,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "a683fef77b15d226db2ad4e1861708821f413db5", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -28,6 +28,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-config.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"insn-flags.h\"\n #include \"insn-codes.h\""}, {"sha": "6ecd15026e5e36d9f10cdc0b25a4c3c91351b7d0", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -22,6 +22,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n #include \"insn-flags.h\""}, {"sha": "04c2cd6001258a8d9ffe4a89a23873c103c7586f", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -154,6 +154,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"function.h\"\n #include \"insn-config.h\"\n #include \"regs.h\""}, {"sha": "d7f9b14c8579e00cd63d9769fb01ac1babc9e5e6", "filename": "gcc/regclass.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -26,6 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n #include \"basic-block.h\""}, {"sha": "38a694c7cbc4b985194544c3fb6ccb7828931ef8", "filename": "gcc/regmove.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -27,6 +27,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\" /* stdio.h must precede rtl.h for FFS.  */\n+#include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"output.h\""}, {"sha": "ef263599907dba9baf1378681b90a5603fb3e92c", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -90,6 +90,7 @@ a register with any other reload.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"insn-codes.h\"\n #include \"recog.h\""}, {"sha": "a634e8435da06af3727f7fb6abf3eaa7743c562f", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -25,6 +25,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"insn-config.h\"\n #include \"insn-flags.h\""}, {"sha": "c3ca654f672145bf2a903bf71d9b16ae7a7409c6", "filename": "gcc/reorg.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -123,6 +123,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"toplev.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"expr.h\"\n #include \"function.h\"\n #include \"insn-config.h\""}, {"sha": "3dce3b1df40b1744c1742570bf12a1f64f572bab", "filename": "gcc/resource.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -22,6 +22,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"toplev.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"function.h\""}, {"sha": "1100733374b3c8749544fa464573d5aeac1133fb", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -38,6 +38,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"except.h\"\n #include \"function.h\""}, {"sha": "dc4292639452b120f441eccc63ef88f679bdaa87", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -24,6 +24,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"tree.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "686f35b603a8a0c2ac85ef288d46c8a4af84a8ce", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -41,6 +41,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"input.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"flags.h\"\n #include \"insn-attr.h\"\n #include \"insn-codes.h\""}, {"sha": "752595c46c836ff91ed00cd66d02748779244c28", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -37,6 +37,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"system.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"tm_p.h\"\n #include \"function.h\"\n #include \"obstack.h\"\n #include \"toplev.h\""}, {"sha": "dce90b23fcf8e38aed12ea5acf087c61c592324b", "filename": "gcc/unroll.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=6baf1cc8f87d1c8c1ebfa9c48e27b74b82eab4e4", "patch": "@@ -149,6 +149,7 @@ enum unroll_types { UNROLL_COMPLETELY, UNROLL_MODULO, UNROLL_NAIVE };\n #include \"config.h\"\n #include \"system.h\"\n #include \"rtl.h\"\n+#include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"integrate.h\"\n #include \"regs.h\""}]}