{"sha": "07b8d0afe8c177d096bf77c97f03f41b34bb18cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiOGQwYWZlOGMxNzdkMDk2YmY3N2M5N2YwM2Y0MWIzNGJiMThjYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-10T07:43:11Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-10T07:43:11Z"}, "message": "IPA ICF: enhance dump about items in a non-singular class.\n\n2019-06-10  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-icf.c (sem_item_optimizer::parse_nonsingleton_classes):\n\tUpdate coding style.\n\t(sem_item_optimizer::dump_cong_classes):\n\tPrint how many items are in a non-singular class.  Improve\n\tcoding style.\n2019-06-10  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/ipa/pr68035.c: Update scanned pattern.\n\nFrom-SVN: r272111", "tree": {"sha": "bd0cbf038cc9d2732755913708fcd84e9f58dbc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd0cbf038cc9d2732755913708fcd84e9f58dbc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07b8d0afe8c177d096bf77c97f03f41b34bb18cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b8d0afe8c177d096bf77c97f03f41b34bb18cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b8d0afe8c177d096bf77c97f03f41b34bb18cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de1ee900b045061cdc590fbbf47b46b64d296f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1ee900b045061cdc590fbbf47b46b64d296f04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1ee900b045061cdc590fbbf47b46b64d296f04"}], "stats": {"total": 48, "additions": 30, "deletions": 18}, "files": [{"sha": "5c13d42b107b4bae99a25bdaee8932a3473f5af1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07b8d0afe8c177d096bf77c97f03f41b34bb18cb", "patch": "@@ -1,3 +1,11 @@\n+2019-06-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf.c (sem_item_optimizer::parse_nonsingleton_classes):\n+\tUpdate coding style.\n+\t(sem_item_optimizer::dump_cong_classes):\n+\tPrint how many items are in a non-singular class.  Improve\n+\tcoding style.\n+\n 2019-06-10  Martin Liska  <mliska@suse.cz>\n \n \t* value-prof.c (dump_histogram_value): Change dump format."}, {"sha": "7c486eda7583d564e01e2727348029c736d1fc65", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=07b8d0afe8c177d096bf77c97f03f41b34bb18cb", "patch": "@@ -2744,20 +2744,20 @@ sem_item_optimizer::build_graph (void)\n void\n sem_item_optimizer::parse_nonsingleton_classes (void)\n {\n-  unsigned int init_called_count = 0;\n+  unsigned int counter = 0;\n \n   for (unsigned i = 0; i < m_items.length (); i++)\n     if (m_items[i]->cls->members.length () > 1)\n       {\n \tm_items[i]->init ();\n-\tinit_called_count++;\n+\t++counter;\n       }\n \n   if (dump_file)\n-    fprintf (dump_file, \"Init called for %u items (%.2f%%).\\n\",\n-\t     init_called_count,\n-\t     m_items.length () ? 100.0f * init_called_count / m_items.length ()\n-\t\t\t       : 0.0f);\n+    {\n+      float f = m_items.length () ? 100.0f * counter / m_items.length () : 0.0f;\n+      fprintf (dump_file, \"Init called for %u items (%.2f%%).\\n\", counter, f);\n+    }\n }\n \n /* Equality function for semantic items is used to subdivide existing\n@@ -3274,13 +3274,9 @@ sem_item_optimizer::dump_cong_classes (void)\n   if (!dump_file)\n     return;\n \n-  fprintf (dump_file,\n-\t   \"Congruence classes: %u (unique hash values: %lu), with total: \"\n-\t   \"%u items\\n\", m_classes_count,\n-\t   (unsigned long) m_classes.elements (), m_items.length ());\n-\n   /* Histogram calculation.  */\n   unsigned int max_index = 0;\n+  unsigned int single_element_classes = 0;\n   unsigned int* histogram = XCNEWVEC (unsigned int, m_items.length () + 1);\n \n   for (hash_table<congruence_class_hash>::iterator it = m_classes.begin ();\n@@ -3292,21 +3288,25 @@ sem_item_optimizer::dump_cong_classes (void)\n \n \tif (c > max_index)\n \t  max_index = c;\n+\n+\tif (c == 1)\n+\t  ++single_element_classes;\n       }\n \n+  fprintf (dump_file,\n+\t   \"Congruence classes: %lu with total: %u items (in a non-singular \"\n+\t   \"class: %u)\\n\", (unsigned long) m_classes.elements (),\n+\t   m_items.length (), m_items.length () - single_element_classes);\n   fprintf (dump_file,\n \t   \"Class size histogram [num of members]: number of classe number \"\n \t   \"of classess\\n\");\n-\n   for (unsigned int i = 0; i <= max_index; i++)\n     if (histogram[i])\n-      fprintf (dump_file, \"[%u]: %u classes\\n\", i, histogram[i]);\n-\n-  fprintf (dump_file, \"\\n\\n\");\n+      fprintf (dump_file, \"%6u: %6u\\n\", i, histogram[i]);\n \n   if (dump_flags & TDF_DETAILS)\n-  for (hash_table<congruence_class_hash>::iterator it = m_classes.begin ();\n-       it != m_classes.end (); ++it)\n+    for (hash_table<congruence_class_hash>::iterator it = m_classes.begin ();\n+\t it != m_classes.end (); ++it)\n       {\n \tfprintf (dump_file, \"  group: with %u classes:\\n\",\n \t\t (*it)->classes.length ());"}, {"sha": "b1f8b3030843f6d880840fa31c0875f2bfc0f1ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07b8d0afe8c177d096bf77c97f03f41b34bb18cb", "patch": "@@ -1,3 +1,7 @@\n+2019-06-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/ipa/pr68035.c: Update scanned pattern.\n+\n 2019-06-10  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.dg/attr-copy-6.c: Require alias support."}, {"sha": "f6adad9f24dc25c0d5f8848cef09b2f12d8ce39b", "filename": "gcc/testsuite/gcc.dg/ipa/pr68035.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr68035.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b8d0afe8c177d096bf77c97f03f41b34bb18cb/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr68035.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr68035.c?ref=07b8d0afe8c177d096bf77c97f03f41b34bb18cb", "patch": "@@ -105,4 +105,4 @@ list_49,\n };\n \n \n-/* { dg-final { scan-ipa-dump \"unique hash values: 51\" \"icf\"  } } */\n+/* { dg-final { scan-ipa-dump \"Congruence classes: 51\" \"icf\"  } } */"}]}