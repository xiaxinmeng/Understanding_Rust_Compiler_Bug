{"sha": "89722cf73d9f52a127c111f7818d82c89de588a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3MjJjZjczZDlmNTJhMTI3YzExMWY3ODE4ZDgyYzg5ZGU1ODhhOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-07-27T12:54:17Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-07-27T12:54:17Z"}, "message": "Fix indirect call optimization done by autoFDO.\n\n2017-07-27  Martin Liska  <mliska@suse.cz>\n\n\t* auto-profile.c (autofdo_source_profile::update_inlined_ind_target):\n\tFix wrong condition.\n\nFrom-SVN: r250622", "tree": {"sha": "8bfda1e41f3776ad2cca89ad13ac8cbf12e94589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bfda1e41f3776ad2cca89ad13ac8cbf12e94589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89722cf73d9f52a127c111f7818d82c89de588a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89722cf73d9f52a127c111f7818d82c89de588a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89722cf73d9f52a127c111f7818d82c89de588a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89722cf73d9f52a127c111f7818d82c89de588a9/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8163af7d91c2f5a4158a5cb6e6555b375e61ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8163af7d91c2f5a4158a5cb6e6555b375e61ea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8163af7d91c2f5a4158a5cb6e6555b375e61ea4"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "ba2889543e1e969eb646576d52811f7ff4e13030", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89722cf73d9f52a127c111f7818d82c89de588a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89722cf73d9f52a127c111f7818d82c89de588a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89722cf73d9f52a127c111f7818d82c89de588a9", "patch": "@@ -1,3 +1,8 @@\n+2017-07-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* auto-profile.c (autofdo_source_profile::update_inlined_ind_target):\n+\tFix wrong condition.\n+\n 2017-07-27  Martin Liska  <mliska@suse.cz>\n \n \t* auto-profile.c (afdo_annotate_cfg): Assign zero counts to"}, {"sha": "9226e202d50374f0af49d6b583ca06cb52367338", "filename": "gcc/auto-profile.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89722cf73d9f52a127c111f7818d82c89de588a9/gcc%2Fauto-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89722cf73d9f52a127c111f7818d82c89de588a9/gcc%2Fauto-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-profile.c?ref=89722cf73d9f52a127c111f7818d82c89de588a9", "patch": "@@ -774,15 +774,15 @@ autofdo_source_profile::update_inlined_ind_target (gcall *stmt,\n      hot any more. Will avoid promote the original target.\n \n      To check if original promoted target is still hot, we check the total\n-     count of the unpromoted targets (stored in old_info). If it is no less\n-     than half of the callsite count (stored in INFO), the original promoted\n-     target is considered not hot any more.  */\n-  if (total >= info->count / 2)\n+     count of the unpromoted targets (stored in TOTAL). If a callsite count\n+     (stored in INFO) is smaller than half of the total count, the original\n+     promoted target is considered not hot any more.  */\n+  if (info->count < total / 2)\n     {\n       if (dump_file)\n-\tfprintf (dump_file, \" not hot anymore %ld >= %ld\",\n-\t\t (long)total,\n-\t\t (long)info->count /2);\n+\tfprintf (dump_file, \" not hot anymore %ld < %ld\",\n+\t\t (long)info->count,\n+\t\t (long)total /2);\n       return false;\n     }\n "}]}