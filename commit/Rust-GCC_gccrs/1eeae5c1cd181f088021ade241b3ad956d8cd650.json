{"sha": "1eeae5c1cd181f088021ade241b3ad956d8cd650", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVlYWU1YzFjZDE4MWYwODgwMjFhZGUyNDFiM2FkOTU2ZDhjZDY1MA==", "commit": {"author": {"name": "Dalibor Topic", "email": "robilad@kaffe.org", "date": "2003-09-18T19:51:39Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-09-18T19:51:39Z"}, "message": "NamingManager.java (getURLContext, [...]): Always use current thread's context class loader when calling Class.forName.\n\n2003-09-18  Dalibor Topic <robilad@kaffe.org>,\n\t    Helmer Kraemer <hkraemer@freenet.de>\n\n\t* javax/naming/spi/NamingManager.java (getURLContext,\n\tgetObjectInstance, getStateToBind): Always use current thread's\n\tcontext class loader when calling Class.forName.\n\nCo-Authored-By: Helmer Kraemer <hkraemer@freenet.de>\n\nFrom-SVN: r71534", "tree": {"sha": "1ffd7581309254d80ec2aff3141702e2af17acef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ffd7581309254d80ec2aff3141702e2af17acef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1eeae5c1cd181f088021ade241b3ad956d8cd650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eeae5c1cd181f088021ade241b3ad956d8cd650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eeae5c1cd181f088021ade241b3ad956d8cd650", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eeae5c1cd181f088021ade241b3ad956d8cd650/comments", "author": null, "committer": null, "parents": [{"sha": "8d8369f85bd2552ed29dbc083c9b5f9e9566008f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8369f85bd2552ed29dbc083c9b5f9e9566008f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d8369f85bd2552ed29dbc083c9b5f9e9566008f"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "08727716addc7a50466d2f9627a766bfb4fa531f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eeae5c1cd181f088021ade241b3ad956d8cd650/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eeae5c1cd181f088021ade241b3ad956d8cd650/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1eeae5c1cd181f088021ade241b3ad956d8cd650", "patch": "@@ -1,3 +1,10 @@\n+2003-09-18  Dalibor Topic <robilad@kaffe.org>,\n+\t    Helmer Kraemer <hkraemer@freenet.de>\n+\n+\t* javax/naming/spi/NamingManager.java (getURLContext,\n+\tgetObjectInstance, getStateToBind): Always use current thread's\n+\tcontext class loader when calling Class.forName.\n+\n 2003-09-18  Michael Koch  <konqueror@gmx.de>\n \n \t* java/util/Timer.java (finalize): Added \"throws Throwable\"."}, {"sha": "65ce2d23c23dff698e53c4d9db7221d94ee5dfdf", "filename": "libjava/javax/naming/spi/NamingManager.java", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1eeae5c1cd181f088021ade241b3ad956d8cd650/libjava%2Fjavax%2Fnaming%2Fspi%2FNamingManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1eeae5c1cd181f088021ade241b3ad956d8cd650/libjava%2Fjavax%2Fnaming%2Fspi%2FNamingManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2Fspi%2FNamingManager.java?ref=1eeae5c1cd181f088021ade241b3ad956d8cd650", "patch": "@@ -129,7 +129,9 @@ static Context getURLContext (Object refInfo,\n \tString aTry = tokens.nextToken ();\n \ttry\n \t  {\n-\t    Class factoryClass = Class.forName (aTry + \".\" + scheme);\n+\t    Class factoryClass = Class.forName (aTry + \".\" + scheme,\n+\t\t\t\t\t\ttrue,\n+\t\t\t\t\t\tThread.currentThread().getContextClassLoader());\n \t    ObjectFactory factory =\n \t      (ObjectFactory) factoryClass.newInstance ();\n \t    Object obj = factory.getObjectInstance (refInfo, name,\n@@ -231,7 +233,9 @@ public static Object getObjectInstance (Object refInfo,\n \t    if (fClass != null)\n \t      {\n \t\t// Exceptions here are passed to the caller.\n-\t\tClass k = Class.forName (fClass);\n+\t\tClass k = Class.forName (fClass,\n+\t\t\t\t\t true,\n+\t\t\t\t\t Thread.currentThread().getContextClassLoader());\n \t\tfactory = (ObjectFactory) k.newInstance ();\n \t      }\n \t    else\n@@ -275,7 +279,9 @@ public static Object getObjectInstance (Object refInfo,\n \t    while (tokens.hasMoreTokens ())\n \t      {\n \t\tString klassName = tokens.nextToken ();\n-\t\tClass k = Class.forName (klassName);\n+\t\tClass k = Class.forName (klassName,\n+\t\t\t\t\t true,\n+\t\t\t\t\t Thread.currentThread().getContextClassLoader());\n \t\tfactory = (ObjectFactory) k.newInstance ();\n \t\tObject obj = factory.getObjectInstance (refInfo, name,\n \t\t\t\t\t\t\tnameCtx, environment);\n@@ -341,7 +347,9 @@ public static Object getStateToBind (Object obj, Name name,\n \tString klassName = tokens.nextToken ();\n \ttry\n \t  {\n-\t    Class k = Class.forName (klassName);\n+\t    Class k = Class.forName (klassName,\n+\t\t\t\t     true,\n+\t\t\t\t     Thread.currentThread().getContextClassLoader());\n \t    StateFactory factory = (StateFactory) k.newInstance ();\n \t    Object o = factory.getStateToBind (obj, name, nameCtx,\n \t\t\t\t\t       environment);"}]}