{"sha": "9d465faf92900b572286d6e9701632c2b289b451", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ0NjVmYWY5MjkwMGI1NzIyODZkNmU5NzAxNjMyYzJiMjg5YjQ1MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-08T19:38:17Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-08T19:38:17Z"}, "message": "math: Compile with -mfancy-math-387 -funsafe-optimizations on x86.\n\nFrom-SVN: r184015", "tree": {"sha": "a1a0850efce956decdd30ccf8cc67d64ab875d26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1a0850efce956decdd30ccf8cc67d64ab875d26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d465faf92900b572286d6e9701632c2b289b451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d465faf92900b572286d6e9701632c2b289b451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d465faf92900b572286d6e9701632c2b289b451", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d465faf92900b572286d6e9701632c2b289b451/comments", "author": null, "committer": null, "parents": [{"sha": "82b37806c51b3fa8cffa4876c0609e6a6801e02d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b37806c51b3fa8cffa4876c0609e6a6801e02d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82b37806c51b3fa8cffa4876c0609e6a6801e02d"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "8357ad75e4e33e62971e5b6ad673b641842d12cb", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d465faf92900b572286d6e9701632c2b289b451/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d465faf92900b572286d6e9701632c2b289b451/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=9d465faf92900b572286d6e9701632c2b289b451", "patch": "@@ -10027,7 +10027,8 @@ Call_expression::do_get_tree(Translate_context* context)\n \n   // This is to support builtin math functions when using 80387 math.\n   tree excess_type = NULL_TREE;\n-  if (TREE_CODE(fndecl) == FUNCTION_DECL\n+  if (optimize\n+      && TREE_CODE(fndecl) == FUNCTION_DECL\n       && DECL_IS_BUILTIN(fndecl)\n       && DECL_BUILT_IN_CLASS(fndecl) == BUILT_IN_NORMAL\n       && nargs > 0"}, {"sha": "b94bc06ac3b815962dde7ab8c532aa6650102bcd", "filename": "libgo/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d465faf92900b572286d6e9701632c2b289b451/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d465faf92900b572286d6e9701632c2b289b451/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=9d465faf92900b572286d6e9701632c2b289b451", "patch": "@@ -1959,7 +1959,9 @@ log/check: $(CHECK_DEPS)\n math/math.lo.dep: $(go_math_files)\n \t$(BUILDDEPS)\n math/math.lo: $(go_math_files)\n-\t$(BUILDPACKAGE)\n+\t$(MKDIR_P) $(@D)\n+\tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g'`; \\\n+\t$(LTGOCOMPILE) $(MATH_FLAG) -I . -c -fgo-prefix=\"libgo_$(@D)\" -o $@ $$files\n math/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: math/check"}, {"sha": "556de688dc79486f5c55e6b8683dffdf2e5cccc4", "filename": "libgo/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d465faf92900b572286d6e9701632c2b289b451/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d465faf92900b572286d6e9701632c2b289b451/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=9d465faf92900b572286d6e9701632c2b289b451", "patch": "@@ -390,6 +390,7 @@ LN_S = @LN_S@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n+MATH_FLAG = @MATH_FLAG@\n MATH_LIBS = @MATH_LIBS@\n MKDIR_P = @MKDIR_P@\n NET_LIBS = @NET_LIBS@\n@@ -4512,7 +4513,9 @@ log/check: $(CHECK_DEPS)\n math/math.lo.dep: $(go_math_files)\n \t$(BUILDDEPS)\n math/math.lo: $(go_math_files)\n-\t$(BUILDPACKAGE)\n+\t$(MKDIR_P) $(@D)\n+\tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g'`; \\\n+\t$(LTGOCOMPILE) $(MATH_FLAG) -I . -c -fgo-prefix=\"libgo_$(@D)\" -o $@ $$files\n math/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: math/check"}, {"sha": "5821d32ab7161dbf8990d90b5a4adf97f86af8f6", "filename": "libgo/configure", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d465faf92900b572286d6e9701632c2b289b451/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d465faf92900b572286d6e9701632c2b289b451/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=9d465faf92900b572286d6e9701632c2b289b451", "patch": "@@ -604,6 +604,7 @@ LTLIBOBJS\n LIBOBJS\n STRUCT_EPOLL_EVENT_FD_OFFSET\n SIZEOF_STRUCT_EPOLL_EVENT\n+MATH_FLAG\n STRINGOPS_FLAG\n HAVE_WAIT4_FALSE\n HAVE_WAIT4_TRUE\n@@ -11101,7 +11102,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11104 \"configure\"\n+#line 11105 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11207,7 +11208,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11210 \"configure\"\n+#line 11211 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14707,6 +14708,33 @@ if test \"$libgo_cv_c_stringops\" = yes; then\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether compiler supports -mfancy-math-387\" >&5\n+$as_echo_n \"checking whether compiler supports -mfancy-math-387... \" >&6; }\n+if test \"${libgo_cv_c_fancymath+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  CFLAGS_hold=$CFLAGS\n+CFLAGS=\"$CFLAGS -mfancy-math-387\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int i;\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  libgo_cv_c_fancymath=yes\n+else\n+  libgo_cv_c_fancymath=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+CFLAGS=$CFLAGS_hold\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgo_cv_c_fancymath\" >&5\n+$as_echo \"$libgo_cv_c_fancymath\" >&6; }\n+MATH_FLAG=\n+if test \"$libgo_cv_c_fancymath\" = yes; then\n+  MATH_FLAG=\"-mfancy-math-387 -funsafe-math-optimizations\"\n+fi\n+\n+\n CFLAGS_hold=$CFLAGS\n CFLAGS=\"$CFLAGS -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE\"\n ac_fn_c_check_type \"$LINENO\" \"off64_t\" \"ac_cv_type_off64_t\" \"$ac_includes_default\""}, {"sha": "155a412ee6809925830b0a84402ed7310e0f5a7f", "filename": "libgo/configure.ac", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d465faf92900b572286d6e9701632c2b289b451/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d465faf92900b572286d6e9701632c2b289b451/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=9d465faf92900b572286d6e9701632c2b289b451", "patch": "@@ -522,6 +522,23 @@ if test \"$libgo_cv_c_stringops\" = yes; then\n fi\n AC_SUBST(STRINGOPS_FLAG)\n \n+dnl For x86 we want to compile the math library with -mfancy-math-387\n+dnl -funsafe-math-optimizations so that we can use the builtin\n+dnl instructions directly.\n+AC_CACHE_CHECK([whether compiler supports -mfancy-math-387],\n+[libgo_cv_c_fancymath],\n+[CFLAGS_hold=$CFLAGS\n+CFLAGS=\"$CFLAGS -mfancy-math-387\"\n+AC_COMPILE_IFELSE([int i;],\n+[libgo_cv_c_fancymath=yes],\n+[libgo_cv_c_fancymath=no])\n+CFLAGS=$CFLAGS_hold])\n+MATH_FLAG=\n+if test \"$libgo_cv_c_fancymath\" = yes; then\n+  MATH_FLAG=\"-mfancy-math-387 -funsafe-math-optimizations\"\n+fi\n+AC_SUBST(MATH_FLAG)\n+\n CFLAGS_hold=$CFLAGS\n CFLAGS=\"$CFLAGS -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE\"\n AC_CHECK_TYPES([off64_t])"}, {"sha": "e9269d9486365c3ef187b8d3a86533ad27c299c9", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d465faf92900b572286d6e9701632c2b289b451/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d465faf92900b572286d6e9701632c2b289b451/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=9d465faf92900b572286d6e9701632c2b289b451", "patch": "@@ -108,6 +108,7 @@ LN_S = @LN_S@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n+MATH_FLAG = @MATH_FLAG@\n MATH_LIBS = @MATH_LIBS@\n MKDIR_P = @MKDIR_P@\n NET_LIBS = @NET_LIBS@"}]}