{"sha": "266d11d862b0cba843cf3cfcac6dfeab46728bfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2ZDExZDg2MmIwY2JhODQzY2YzY2ZjYWM2ZGZlYWI0NjcyOGJmYw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2007-04-11T11:06:44Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2007-04-11T11:06:44Z"}, "message": "bfin-protos.h (bfin_expand_movmem): Renamed from bfin_expand_strmov.\n\n\t* config/bfin/bfin-protos.h (bfin_expand_movmem): Renamed from\n\tbfin_expand_strmov.\n\t* config/bfin/bfin.c (bfin_expand_prologue, bfin_delegitimize_address,\n\tbfin_function_ok_for_sibcall, split_load_immediate): Remove unused\n\tvariables.\n\t(initialize_trampoline): Don't use old-style function definition.\n\t(bfin_secondary_reload): Mark IN_P argument as unused.\n\nFrom-SVN: r123714", "tree": {"sha": "1592e46cfec1eabbac5b514f20dff2804fa527fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1592e46cfec1eabbac5b514f20dff2804fa527fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/266d11d862b0cba843cf3cfcac6dfeab46728bfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266d11d862b0cba843cf3cfcac6dfeab46728bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/266d11d862b0cba843cf3cfcac6dfeab46728bfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/266d11d862b0cba843cf3cfcac6dfeab46728bfc/comments", "author": null, "committer": null, "parents": [{"sha": "c74620b05b1dfc5d5d683899b84ccf7c86d78d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74620b05b1dfc5d5d683899b84ccf7c86d78d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74620b05b1dfc5d5d683899b84ccf7c86d78d78"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "31b0174c9b97ede7ba75db0ed20c7a42db2976c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266d11d862b0cba843cf3cfcac6dfeab46728bfc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266d11d862b0cba843cf3cfcac6dfeab46728bfc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=266d11d862b0cba843cf3cfcac6dfeab46728bfc", "patch": "@@ -1,3 +1,13 @@\n+2007-04-11  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* config/bfin/bfin-protos.h (bfin_expand_movmem): Renamed from\n+\tbfin_expand_strmov.\n+\t* config/bfin/bfin.c (bfin_expand_prologue, bfin_delegitimize_address,\n+\tbfin_function_ok_for_sibcall, split_load_immediate): Remove unused\n+\tvariables.\n+\t(initialize_trampoline): Don't use old-style function definition.\n+\t(bfin_secondary_reload): Mark IN_P argument as unused.\n+\n 2007-04-10  Sebastian Pop  <sebastian.pop@inria.fr>\n \n \tPR tree-optimization/31343"}, {"sha": "549d55a72b40d02bc63f830af4fe40e1ad2444d5", "filename": "gcc/config/bfin/bfin-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266d11d862b0cba843cf3cfcac6dfeab46728bfc/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266d11d862b0cba843cf3cfcac6dfeab46728bfc/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h?ref=266d11d862b0cba843cf3cfcac6dfeab46728bfc", "patch": "@@ -49,7 +49,7 @@ extern bool expand_move (rtx *, Mmode);\n extern void bfin_expand_call (rtx, rtx, rtx, rtx, int);\n extern bool bfin_longcall_p (rtx, int);\n extern bool bfin_dsp_memref_p (rtx);\n-extern bool bfin_expand_strmov (rtx, rtx, rtx, rtx);\n+extern bool bfin_expand_movmem (rtx, rtx, rtx, rtx);\n \n extern void conditional_register_usage (void);\n extern int bfin_register_move_cost (enum machine_mode, enum reg_class,"}, {"sha": "dbbeac0a417cdde1dbf9b324d3a6ca7aba60d9cc", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/266d11d862b0cba843cf3cfcac6dfeab46728bfc/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/266d11d862b0cba843cf3cfcac6dfeab46728bfc/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=266d11d862b0cba843cf3cfcac6dfeab46728bfc", "patch": "@@ -914,7 +914,6 @@ bfin_load_pic_reg (rtx dest)\n void\n bfin_expand_prologue (void)\n {\n-  rtx insn;\n   HOST_WIDE_INT frame_size = get_frame_size ();\n   rtx spreg = gen_rtx_REG (Pmode, REG_SP);\n   e_funkind fkind = funkind (TREE_TYPE (current_function_decl));\n@@ -937,7 +936,6 @@ bfin_expand_prologue (void)\n \n       if (!lim)\n \t{\n-\t  rtx p1reg = gen_rtx_REG (Pmode, REG_P1);\n \t  emit_move_insn (p2reg, gen_int_mode (0xFFB00000, SImode));\n \t  emit_move_insn (p2reg, gen_rtx_MEM (Pmode, p2reg));\n \t  lim = p2reg;\n@@ -1063,7 +1061,7 @@ legitimize_address (rtx x ATTRIBUTE_UNUSED, rtx oldx ATTRIBUTE_UNUSED,\n static rtx\n bfin_delegitimize_address (rtx orig_x)\n {\n-  rtx x = orig_x, y;\n+  rtx x = orig_x;\n \n   if (GET_CODE (x) != MEM)\n     return orig_x;\n@@ -1658,7 +1656,6 @@ bfin_function_ok_for_sibcall (tree decl ATTRIBUTE_UNUSED,\n \n   {\n     struct cgraph_local_info *this_func, *called_func;\n-    rtx addr, insn;\n  \n     this_func = cgraph_local_info (current_function_decl);\n     called_func = cgraph_local_info (decl);\n@@ -1671,8 +1668,7 @@ bfin_function_ok_for_sibcall (tree decl ATTRIBUTE_UNUSED,\n    code.  CXT is an RTX for the static chain value for the function.  */\n \n void\n-initialize_trampoline (tramp, fnaddr, cxt)\n-     rtx tramp, fnaddr, cxt;\n+initialize_trampoline (rtx tramp, rtx fnaddr, rtx cxt)\n {\n   rtx t1 = copy_to_reg (fnaddr);\n   rtx t2 = copy_to_reg (cxt);\n@@ -1971,7 +1967,7 @@ bfin_memory_move_cost (enum machine_mode mode ATTRIBUTE_UNUSED,\n    scratch register.  */\n \n static enum reg_class\n-bfin_secondary_reload (bool in_p, rtx x, enum reg_class class,\n+bfin_secondary_reload (bool in_p ATTRIBUTE_UNUSED, rtx x, enum reg_class class,\n \t\t     enum machine_mode mode, secondary_reload_info *sri)\n {\n   /* If we have HImode or QImode, we can only use DREGS as secondary registers;\n@@ -2293,7 +2289,6 @@ split_load_immediate (rtx operands[])\n   int num_zero = shiftr_zero (&shifted);\n   int num_compl_zero = shiftr_zero (&shifted_compl);\n   unsigned int regno = REGNO (operands[0]);\n-  enum reg_class class1 = REGNO_REG_CLASS (regno);\n \n   /* This case takes care of single-bit set/clear constants, which we could\n      also implement with BITSET/BITCLR.  */"}]}