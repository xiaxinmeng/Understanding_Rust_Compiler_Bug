{"sha": "d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJhZjZmY2I1N2Q5YmNhYzI1YWYzYzUzZmJmMGUzMzFjNDM3NTQyNg==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-07-26T15:22:43Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-07-26T15:22:43Z"}, "message": "Skip tests that make assumptions about struct layout that don't hold on epiphany.\n\n        Skip tests that make assumptions about struct layout that don't hold\n        on epiphany.  These tests could be fixed by adding padded attributes,\n        See:\n        http://gcc.gnu.org/ml/gcc-patches/2011-08/msg00006.html\n        http://gcc.gnu.org/ml/gcc-patches/2011-09/msg01513.html\n        http://gcc.gnu.org/ml/gcc-patches/2011-09/msg01504.html\n\n        * g++.dg/cpp0x/cast.C: Skip for epiphany-*-*.\n        * g++.dg/cpp0x/iop.C: Likewise.\n        * g++.dg/cpp0x/named_refs.C: Likewise.\n        * g++.dg/cpp0x/rv1p.C: Likewise.\n        * g++.dg/cpp0x/rv2p.C: Likewise.\n        * g++.dg/cpp0x/rv3p.C: Likewise.\n        * g++.dg/cpp0x/rv4p.C: Likewise.\n        * g++.dg/cpp0x/rv5p.C: Likewise.\n        * g++.dg/cpp0x/rv6p.C: Likewise.\n        * g++.dg/cpp0x/rv7p.C: Likewise.\n        * g++.dg/cpp0x/rv8p.C: Likewise.\n        * g++.dg/ext/strncpy-chk1.C: Likewise.\n        * gcc.dg/builtin-object-size-10.c: Likewise.\n        * gcc.dg/builtin-object-size-11.c: Likewise.\n        * gcc.dg/builtin-stringop-chk-1.c: Likewise.\n        * gcc.dg/pr25805.c: Likewise.\n        * gcc.c-torture/execute/builtins/memcpy-chk.x: New file.\n        * gcc.c-torture/execute/builtins/memmove-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/mempcpy-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/memset-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/snprintf-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/sprintf-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/stpcpy-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/strcat-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/strcpy-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/strncat-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/strncpy-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/vsnprintf-chk.x: Likewise.\n        * gcc.c-torture/execute/builtins/vsprintf-chk.x: Likewise.\n        * gcc.c-torture/execute/zerolen-2.x: Likewise.\n\nFrom-SVN: r201268", "tree": {"sha": "225d5ee26c2c150f4004e94689fa885522a06861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/225d5ee26c2c150f4004e94689fa885522a06861"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddb4e7f057acb52481e8fd346ba87b2589a94150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb4e7f057acb52481e8fd346ba87b2589a94150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb4e7f057acb52481e8fd346ba87b2589a94150"}], "stats": {"total": 149, "additions": 149, "deletions": 0}, "files": [{"sha": "fab69c88a6da7e58f55cece9ae7f1d8512366bd8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -1,3 +1,38 @@\n+2013-07-26  Joern Rennecke <joern.rennecke@embecosm.com>\n+\n+\tSkip tests that make assumptions about struct layout that don't hold\n+\ton epiphany:\n+\t* g++.dg/cpp0x/cast.C: Skip for epiphany-*-*.\n+\t* g++.dg/cpp0x/iop.C: Likewise.\n+\t* g++.dg/cpp0x/named_refs.C: Likewise.\n+\t* g++.dg/cpp0x/rv1p.C: Likewise.\n+\t* g++.dg/cpp0x/rv2p.C: Likewise.\n+\t* g++.dg/cpp0x/rv3p.C: Likewise.\n+\t* g++.dg/cpp0x/rv4p.C: Likewise.\n+\t* g++.dg/cpp0x/rv5p.C: Likewise.\n+\t* g++.dg/cpp0x/rv6p.C: Likewise.\n+\t* g++.dg/cpp0x/rv7p.C: Likewise.\n+\t* g++.dg/cpp0x/rv8p.C: Likewise.\n+\t* g++.dg/ext/strncpy-chk1.C: Likewise.\n+\t* gcc.dg/builtin-object-size-10.c: Likewise.\n+\t* gcc.dg/builtin-object-size-11.c: Likewise.\n+\t* gcc.dg/builtin-stringop-chk-1.c: Likewise.\n+\t* gcc.dg/pr25805.c: Likewise.\n+\t* gcc.c-torture/execute/builtins/memcpy-chk.x: New file.\n+\t* gcc.c-torture/execute/builtins/memmove-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/mempcpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/memset-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/snprintf-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/sprintf-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/stpcpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/strcat-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/strcpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/strncat-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/strncpy-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/vsnprintf-chk.x: Likewise.\n+\t* gcc.c-torture/execute/builtins/vsprintf-chk.x: Likewise.\n+\t* gcc.c-torture/execute/zerolen-2.x: Likewise.\n+\n 2013-07-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/minmax_minus.c: Scan for absence of mov."}, {"sha": "9cf97e688b04cd60e58486097059ff2fe20c93b7", "filename": "gcc/testsuite/g++.dg/cpp0x/cast.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fcast.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "2eb3a3ce3375315b9d3535d6727fb91c9339dc06", "filename": "gcc/testsuite/g++.dg/cpp0x/iop.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fiop.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fiop.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fiop.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -8,6 +8,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "0ccd42f4a0fe1396749ae0e3113e387fb8cf84c0", "filename": "gcc/testsuite/g++.dg/cpp0x/named_refs.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnamed_refs.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnamed_refs.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnamed_refs.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "99e39e6a4bcfd294c4dbab41a8ddea0eb6441d1d", "filename": "gcc/testsuite/g++.dg/cpp0x/rv1p.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one/three/five/seven\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "fca45c7352a5f15ebb652a0c916281214c82cc8a", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2p.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one/three/five/seven\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "804b2ffbdbe4537a143b54dd11e86d35c19f7450", "filename": "gcc/testsuite/g++.dg/cpp0x/rv3p.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one/three/five/seven\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "b2744e3cd9e131d585a885de425821b1c674a767", "filename": "gcc/testsuite/g++.dg/cpp0x/rv4p.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one/three/five/seven\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "9bb5e2bbb8920290fb8f170eecb50553f8035905", "filename": "gcc/testsuite/g++.dg/cpp0x/rv5p.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one/three/five/seven\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "b2a3bdedd1be69cfc4b1ef87374090c87e2428d7", "filename": "gcc/testsuite/g++.dg/cpp0x/rv6p.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one/three/five/seven\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "918dc14b98c7c434b0c0b7d0869e43c07b7ebf4a", "filename": "gcc/testsuite/g++.dg/cpp0x/rv7p.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one/three/five/seven\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "f6784dffc221961b8d443cb076a20f8141d842bd", "filename": "gcc/testsuite/g++.dg/cpp0x/rv8p.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -4,6 +4,7 @@\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n+// { dg-skip-if \"packed attribute missing for struct one/three/five/seven\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n template <bool> struct sa;\n template <> struct sa<true> {};"}, {"sha": "ebafc99887bd9cb7a6be6d2e09a8dc0804c281ec", "filename": "gcc/testsuite/g++.dg/ext/strncpy-chk1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstrncpy-chk1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstrncpy-chk1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fstrncpy-chk1.C?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -1,6 +1,7 @@\n // PR c++/40502\n // { dg-do compile }\n // { dg-options \"-O2\" }\n+// { dg-skip-if \"packed attribute missing for struct A\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n struct A { char x[12], y[35]; };\n struct B { char z[50]; };"}, {"sha": "e976a755ba00d15628e8f2ef5914e03a628837b8", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memcpy-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemcpy-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test4 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "acf2132367b13d757fb985bb4d59b9d68ee605e4", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memmove-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemmove-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test5 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "e976a755ba00d15628e8f2ef5914e03a628837b8", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/mempcpy-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmempcpy-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test4 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "9b8363459c28762f82b5665ca030c09c280838df", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memset-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemset-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test3 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "9b8363459c28762f82b5665ca030c09c280838df", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/snprintf-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsnprintf-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsnprintf-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsnprintf-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test3 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "9b8363459c28762f82b5665ca030c09c280838df", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/sprintf-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsprintf-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsprintf-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fsprintf-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test3 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "e976a755ba00d15628e8f2ef5914e03a628837b8", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/stpcpy-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpcpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpcpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstpcpy-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test4 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "9b8363459c28762f82b5665ca030c09c280838df", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strcat-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcat-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcat-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcat-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test3 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "e976a755ba00d15628e8f2ef5914e03a628837b8", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strcpy-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrcpy-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test4 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "9b8363459c28762f82b5665ca030c09c280838df", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strncat-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncat-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncat-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncat-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test3 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "e976a755ba00d15628e8f2ef5914e03a628837b8", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strncpy-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncpy-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncpy-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrncpy-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test4 struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "0d6e85c971122b5ba1591a13259a5c10f2ee1e12", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/vsnprintf-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsnprintf-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsnprintf-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsnprintf-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test3_sub struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "0d6e85c971122b5ba1591a13259a5c10f2ee1e12", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/vsprintf-chk.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsprintf-chk.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsprintf-chk.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fvsprintf-chk.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of struct padding.\n+    # to make this true for test3_sub struct A on epiphany would require\n+    # __attribute__((packed)) .\n+    return 1\n+}\n+return 0"}, {"sha": "cee203d27bb58796e15fdb252d92022690fd217e", "filename": "gcc/testsuite/gcc.c-torture/execute/zerolen-2.x", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fzerolen-2.x?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -0,0 +1,7 @@\n+if [istarget \"epiphany-*-*\"] {\n+    # This test assumes the absence of larger-than-word padding.\n+    # to make this true for struct foo on epiphany would require\n+    # __attribute__((packed,aligned(__alignof__(word)))) .\n+    return 1\n+}\n+return 0"}, {"sha": "956d4a860e3995a5ba95ad85a4d5e50a22177b95", "filename": "gcc/testsuite/gcc.dg/builtin-object-size-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-10.c?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-objsz1-details\" } */\n+// { dg-skip-if \"packed attribute missing for drone_source_packet\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n typedef struct {\n     char sentinel[4];"}, {"sha": "309a68416ae1392a1a0f1c4b0a21f020ec5c4977", "filename": "gcc/testsuite/gcc.dg/builtin-object-size-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-11.c?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -1,6 +1,7 @@\n /* PR48985 */\n /* { dg-do run } */\n /* { dg-options \"-std=gnu89\" } */\n+/* { dg-skip-if \"packed attribute missing for struct s\" { \"epiphany-*-*\" } { \"*\" } { \"\" } } */\n \n extern void abort (void);\n "}, {"sha": "bb727da28e4d9132d8d22839326f3f6ea0eb6048", "filename": "gcc/testsuite/gcc.dg/builtin-stringop-chk-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stringop-chk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stringop-chk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stringop-chk-1.c?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -std=gnu99 -ftrack-macro-expansion=0\" } */\n /* { dg-additional-options \"-mstructure-size-boundary=8\" { target arm*-*-* } } */\n+// { dg-skip-if \"packed attribute missing for t\" { \"epiphany-*-*\" } { \"*\" } { \"\" } }\n \n extern void abort (void);\n "}, {"sha": "94133ddd952eeea7d9722aea6805244c9a4036a7", "filename": "gcc/testsuite/gcc.dg/pr25805.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25805.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2af6fcb57d9bcac25af3c53fbf0e331c4375426/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25805.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25805.c?ref=d2af6fcb57d9bcac25af3c53fbf0e331c4375426", "patch": "@@ -2,6 +2,7 @@\n    storage for d1.a.  */\n /* { dg-do run } */\n /* { dg-options \"\" } */\n+/* { dg-skip-if \"packed attribute missing for d1\" { \"epiphany-*-*\" } { \"*\" } { \"\" } } */\n extern void abort (void);\n extern void exit (int);\n "}]}