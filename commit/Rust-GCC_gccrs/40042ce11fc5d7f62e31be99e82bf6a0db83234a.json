{"sha": "40042ce11fc5d7f62e31be99e82bf6a0db83234a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwNDJjZTExZmM1ZDdmNjJlMzFiZTk5ZTgyYmY2YTBkYjgzMjM0YQ==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-22T20:09:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-22T20:09:47Z"}, "message": "Merge #642\n\n642: Reject duplicate field names in structs and unions. r=philberty a=dkm\n\nFrom Mark Wielaard : https://gcc.gnu.org/pipermail/gcc-rust/2021-August/000150.html\r\n\r\n> Odd things happen if structs or unions have duplicate field names.\r\n> Emit an error when lowering an struct/union item or declaration\r\n> statement and a duplicate field name is detected.  A new testcase\r\n> 'dup_fields.rs' checks an error is actually produced.\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "65c19173e49e2e8f79a2a87bfb82e4c57b34de4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65c19173e49e2e8f79a2a87bfb82e4c57b34de4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40042ce11fc5d7f62e31be99e82bf6a0db83234a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhIq8LCRBK7hj4Ov3rIwAAqckIAHLH5/eQbW8EpnW+cZEfrR9D\nQWuUrVh69tYnQPLh5ZdHX1JFP0QEtLPsWjFFjfxGqzQY3THvabZkPiW10Waf63GE\nH6PqfNoGZAiAApLohk3UAZeBICAPFwPGIbejVLdhv8ybjPCT0fHMfhY8B884sqUb\nr7io7y8zjSwIAWyZTNGgnA89tVZjq+NwlLvzexoK0/bIqIX8OO2brm9uKWgWnO0T\nJi1XbVlrkW6v1clOvfd/jyAlwu4zuHfaXkcA0oX9+I43p4M5YfMbICR64ulbpxTJ\nHCk6zWdOucE5PxuYZ/SLcxFQXOO6wZUHelO2CvgCQQB9ZNZu271frFpm5xHGX34=\n=u9/L\n-----END PGP SIGNATURE-----\n", "payload": "tree 65c19173e49e2e8f79a2a87bfb82e4c57b34de4f\nparent b3bb2e194c814434e80b9b427df37fe24fc70e6c\nparent 5a731790054474a6361b88a7a123abc8013e4d4e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629662987 +0000\ncommitter GitHub <noreply@github.com> 1629662987 +0000\n\nMerge #642\n\n642: Reject duplicate field names in structs and unions. r=philberty a=dkm\n\nFrom Mark Wielaard : https://gcc.gnu.org/pipermail/gcc-rust/2021-August/000150.html\r\n\r\n> Odd things happen if structs or unions have duplicate field names.\r\n> Emit an error when lowering an struct/union item or declaration\r\n> statement and a duplicate field name is detected.  A new testcase\r\n> 'dup_fields.rs' checks an error is actually produced.\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40042ce11fc5d7f62e31be99e82bf6a0db83234a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40042ce11fc5d7f62e31be99e82bf6a0db83234a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40042ce11fc5d7f62e31be99e82bf6a0db83234a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3bb2e194c814434e80b9b427df37fe24fc70e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3bb2e194c814434e80b9b427df37fe24fc70e6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3bb2e194c814434e80b9b427df37fe24fc70e6c"}, {"sha": "5a731790054474a6361b88a7a123abc8013e4d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a731790054474a6361b88a7a123abc8013e4d4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a731790054474a6361b88a7a123abc8013e4d4e"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "c7f874d1dc9975f479930341fede1126ae706f54", "filename": "gcc/rust/hir/rust-ast-lower-item.h", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40042ce11fc5d7f62e31be99e82bf6a0db83234a/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40042ce11fc5d7f62e31be99e82bf6a0db83234a/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h?ref=40042ce11fc5d7f62e31be99e82bf6a0db83234a", "patch": "@@ -175,6 +175,25 @@ class ASTLoweringItem : public ASTLoweringBase\n \t\t\t       struct_decl.get_locus ());\n   }\n \n+  /* Checks whether the name of a field already exists.  Returns true\n+     and produces an error if so.  */\n+  static bool struct_field_name_exists (std::vector<HIR::StructField> &fields,\n+\t\t\t\t\tHIR::StructField &new_field)\n+  {\n+    for (auto &field : fields)\n+      {\n+\tif (field.get_field_name ().compare (new_field.get_field_name ()) == 0)\n+\t  {\n+\t    RichLocation r (new_field.get_locus ());\n+\t    r.add_range (field.get_locus ());\n+\t    rust_error_at (r, \"duplicate field name %qs\",\n+\t\t\t   field.get_field_name ().c_str ());\n+\t    return true;\n+\t  }\n+      }\n+    return false;\n+  }\n+\n   void visit (AST::StructStruct &struct_decl) override\n   {\n     std::vector<std::unique_ptr<HIR::GenericParam> > generic_params;\n@@ -205,6 +224,10 @@ class ASTLoweringItem : public ASTLoweringBase\n \t\t\t\t\t std::unique_ptr<HIR::Type> (type), vis,\n \t\t\t\t\t field.get_locus (),\n \t\t\t\t\t field.get_outer_attrs ());\n+\n+      if (struct_field_name_exists (fields, translated_field))\n+\treturn false;\n+\n       fields.push_back (std::move (translated_field));\n       return true;\n     });\n@@ -257,6 +280,10 @@ class ASTLoweringItem : public ASTLoweringBase\n \t\t\t\t\t   std::unique_ptr<HIR::Type> (type),\n \t\t\t\t\t   vis, variant.get_locus (),\n \t\t\t\t\t   variant.get_outer_attrs ());\n+\n+      if (struct_field_name_exists (variants, translated_variant))\n+\treturn false;\n+\n       variants.push_back (std::move (translated_variant));\n       return true;\n     });"}, {"sha": "1e72c8a2023d2bdb09ed4020356e0faa04e9a2ee", "filename": "gcc/rust/hir/rust-ast-lower-stmt.h", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40042ce11fc5d7f62e31be99e82bf6a0db83234a/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40042ce11fc5d7f62e31be99e82bf6a0db83234a/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h?ref=40042ce11fc5d7f62e31be99e82bf6a0db83234a", "patch": "@@ -161,6 +161,25 @@ class ASTLoweringStmt : public ASTLoweringBase\n \t\t\t       struct_decl.get_locus ());\n   }\n \n+  /* Checks whether the name of a field already exists.  Returns true\n+     and produces an error if so.  */\n+  static bool struct_field_name_exists (std::vector<HIR::StructField> &fields,\n+\t\t\t\t\tHIR::StructField &new_field)\n+  {\n+    for (auto &field : fields)\n+      {\n+\tif (field.get_field_name ().compare (new_field.get_field_name ()) == 0)\n+\t  {\n+\t    RichLocation r (new_field.get_locus ());\n+\t    r.add_range (field.get_locus ());\n+\t    rust_error_at (r, \"duplicate field name %qs\",\n+\t\t\t   field.get_field_name ().c_str ());\n+\t    return true;\n+\t  }\n+      }\n+    return false;\n+  }\n+\n   void visit (AST::StructStruct &struct_decl) override\n   {\n     std::vector<std::unique_ptr<HIR::GenericParam> > generic_params;\n@@ -191,6 +210,10 @@ class ASTLoweringStmt : public ASTLoweringBase\n \t\t\t\t\t std::unique_ptr<HIR::Type> (type), vis,\n \t\t\t\t\t field.get_locus (),\n \t\t\t\t\t field.get_outer_attrs ());\n+\n+      if (struct_field_name_exists (fields, translated_field))\n+\treturn false;\n+\n       fields.push_back (std::move (translated_field));\n       return true;\n     });\n@@ -242,6 +265,10 @@ class ASTLoweringStmt : public ASTLoweringBase\n \t\t\t\t\t   std::unique_ptr<HIR::Type> (type),\n \t\t\t\t\t   vis, variant.get_locus (),\n \t\t\t\t\t   variant.get_outer_attrs ());\n+\n+      if (struct_field_name_exists (variants, translated_variant))\n+\treturn false;\n+\n       variants.push_back (std::move (translated_variant));\n       return true;\n     });"}, {"sha": "ab39955eca05fd5b400f5505ead52f619b09f84e", "filename": "gcc/testsuite/rust/compile/dup_fields.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40042ce11fc5d7f62e31be99e82bf6a0db83234a/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdup_fields.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40042ce11fc5d7f62e31be99e82bf6a0db83234a/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdup_fields.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fdup_fields.rs?ref=40042ce11fc5d7f62e31be99e82bf6a0db83234a", "patch": "@@ -0,0 +1,23 @@\n+struct S { a: i32, b: i32, c: u8, a: i128 }\n+// { dg-error \"duplicate field\" \"\" { target *-*-* } .-1 }\n+\n+union U\n+  {\n+    a: i32,\n+    b: i32,\n+    c: u8,\n+    b: char // { dg-error \"duplicate field\" \"\" { target *-*-* } }\n+  }\n+\n+fn main ()\n+{\n+  struct SS { alpha: i32, beta: i32, gamma: u8, gamma: i128 }\n+  // { dg-error \"duplicate field\" \"\" { target *-*-* } .-1 }\n+\n+  union UU\n+    {\n+      alpha: i32, beta: i32,\n+      gamma: u8, beta: char\n+      // { dg-error \"duplicate field\" \"\" { target *-*-* } .-1 }\n+    }\n+}"}]}