{"sha": "76aac607c7eb53313cfd907a31cee6c5e4f550ae", "node_id": "C_kwDOANBUbNoAKDc2YWFjNjA3YzdlYjUzMzEzY2ZkOTA3YTMxY2VlNmM1ZTRmNTUwYWU", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-11-11T01:15:33Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-21T10:10:33Z"}, "message": "ada: Ada 2022 Image attribute bugs\n\nTwo issues. First, the two procedures\nAda.Strings.Text_Buffers.Output_Mapping.[Wide_]Wide_Put each correctly\ncall Encode, but that call was missing from the corresponding Put procedure.\nSecond, if a record type contains an array-valued Data component as well as\nboth a Max_Length and Current_Length component, then the slice\nData (Current_Length + 1 .. Max_Length) should usually be treated like\nuninitialized data. It should not participate in things like equality\ncomparisons. In particular, it should not participate in 'Image results.\nTo accomplish this, such a type usually ought to have a Put_Image aspect\nspecification. This Put_Image aspect specification was missing for the\nthree Super_String types declared in the\nAda.Strings.[Wide_[Wide_]]Superbounded packages.\n\ngcc/ada/\n\t* libgnat/a-sttebu.adb (Put): Add missing call to Encode.\n\t* libgnat/a-strsup.ads: Declare new Put_Image procedure and add\n\tPut_Image aspect specification for type Super_String.\n\t* libgnat/a-strsup.adb (Put_Image): New procedure.\n\t* libgnat/a-stwisu.ads: Declare new Put_Image procedure and add\n\tPut_Image aspect specification for type Super_String.\n\t* libgnat/a-stwisu.adb (Put_Image): New procedure.\n\t* libgnat/a-stzsup.ads: Declare new Put_Image procedure and add\n\tPut_Image aspect specification for type Super_String.\n\t* libgnat/a-stzsup.adb (Put_Image): New procedure.", "tree": {"sha": "bc38894e1583acfe4e6ebf0fb43f51bc164c430e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc38894e1583acfe4e6ebf0fb43f51bc164c430e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76aac607c7eb53313cfd907a31cee6c5e4f550ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76aac607c7eb53313cfd907a31cee6c5e4f550ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76aac607c7eb53313cfd907a31cee6c5e4f550ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76aac607c7eb53313cfd907a31cee6c5e4f550ae/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dcf757a5192d399295736b57d63a73136523bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcf757a5192d399295736b57d63a73136523bcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dcf757a5192d399295736b57d63a73136523bcb"}], "stats": {"total": 60, "additions": 56, "deletions": 4}, "files": [{"sha": "0210b45c4c7c7edc91586206fd8a752a70995362", "filename": "gcc/ada/libgnat/a-strsup.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-strsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-strsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strsup.adb?ref=76aac607c7eb53313cfd907a31cee6c5e4f550ae", "patch": "@@ -303,6 +303,17 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n       return Left <= Super_To_String (Right);\n    end Less_Or_Equal;\n \n+   ---------------\n+   -- Put_Image --\n+   ---------------\n+\n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String) is\n+   begin\n+      String'Put_Image (S, Super_To_String (Source));\n+   end Put_Image;\n+\n    ----------------------\n    -- Set_Super_String --\n    ----------------------"}, {"sha": "600f097c2bfe7e2060f55e78439ccd26184f7e14", "filename": "gcc/ada/libgnat/a-strsup.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-strsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-strsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strsup.ads?ref=76aac607c7eb53313cfd907a31cee6c5e4f550ae", "patch": "@@ -49,6 +49,7 @@ pragma Assertion_Policy (Pre            => Ignore,\n \n with Ada.Strings.Maps; use type Ada.Strings.Maps.Character_Mapping_Function;\n with Ada.Strings.Search;\n+with Ada.Strings.Text_Buffers;\n \n package Ada.Strings.Superbounded with SPARK_Mode is\n    pragma Preelaborate;\n@@ -69,7 +70,8 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n    with\n      Predicate =>\n        Current_Length <= Max_Length\n-         and then Data (1 .. Current_Length)'Initialized;\n+         and then Data (1 .. Current_Length)'Initialized,\n+     Put_Image => Put_Image;\n \n    --  The subprograms defined for Super_String are similar to those\n    --  defined for Bounded_String, except that they have different names, so\n@@ -2695,6 +2697,10 @@ package Ada.Strings.Superbounded with SPARK_Mode is\n                        - (Item.Max_Length - K) mod Super_Length (Item)))),\n      Global         => null;\n \n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String);\n+\n private\n       --  Pragma Inline declarations\n "}, {"sha": "acca2923443ac8e4b1895e0833fb84da48e07874", "filename": "gcc/ada/libgnat/a-sttebu.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-sttebu.adb?ref=76aac607c7eb53313cfd907a31cee6c5e4f550ae", "patch": "@@ -29,6 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Strings.UTF_Encoding.Strings;\n with Ada.Strings.UTF_Encoding.Wide_Strings;\n with Ada.Strings.UTF_Encoding.Wide_Wide_Strings;\n \n@@ -59,7 +60,7 @@ package body Ada.Strings.Text_Buffers is\n \n       procedure Put (Buffer : in out Buffer_Type; Item : String) is\n       begin\n-         Put_UTF_8 (Buffer, Item);\n+         Put_UTF_8 (Buffer, UTF_Encoding.Strings.Encode (Item));\n       end Put;\n \n       procedure Wide_Put (Buffer : in out Buffer_Type; Item : Wide_String) is"}, {"sha": "cf27ca9f190d1fd7d76029cf1f4389d735d5fb5e", "filename": "gcc/ada/libgnat/a-stwisu.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb?ref=76aac607c7eb53313cfd907a31cee6c5e4f550ae", "patch": "@@ -297,6 +297,17 @@ package body Ada.Strings.Wide_Superbounded is\n       return Left <= Right.Data (1 .. Right.Current_Length);\n    end Less_Or_Equal;\n \n+   ---------------\n+   -- Put_Image --\n+   ---------------\n+\n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String) is\n+   begin\n+      Wide_String'Put_Image (S, Super_To_String (Source));\n+   end Put_Image;\n+\n    ----------------------\n    -- Set_Super_String --\n    ----------------------"}, {"sha": "7437cbda22423860f7b56eeca094c22b8e4f5bb0", "filename": "gcc/ada/libgnat/a-stwisu.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-stwisu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-stwisu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwisu.ads?ref=76aac607c7eb53313cfd907a31cee6c5e4f550ae", "patch": "@@ -37,6 +37,7 @@\n --  Strings.Wide_Bounded.Generic_Bounded_Length use this type with\n --  an appropriate discriminant value set.\n \n+with Ada.Strings.Text_Buffers;\n with Ada.Strings.Wide_Maps;\n \n package Ada.Strings.Wide_Superbounded is\n@@ -54,7 +55,8 @@ package Ada.Strings.Wide_Superbounded is\n       --  no longer necessary, because we now special-case this type in the\n       --  compiler, so \"=\" composes properly for descendants of this type.\n       --  Leaving it out is more efficient.\n-   end record;\n+   end record\n+   with Put_Image => Put_Image;\n \n    --  The subprograms defined for Super_String are similar to those defined\n    --  for Bounded_Wide_String, except that they have different names, so that\n@@ -477,6 +479,10 @@ package Ada.Strings.Wide_Superbounded is\n       Item  : Super_String;\n       Drop  : Truncation := Error) return Super_String;\n \n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String);\n+\n private\n       --  Pragma Inline declarations\n "}, {"sha": "a4fa9968befe8d49502afb989cf7d18580a3863e", "filename": "gcc/ada/libgnat/a-stzsup.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb?ref=76aac607c7eb53313cfd907a31cee6c5e4f550ae", "patch": "@@ -297,6 +297,17 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n       return Left <= Right.Data (1 .. Right.Current_Length);\n    end Less_Or_Equal;\n \n+   ---------------\n+   -- Put_Image --\n+   ---------------\n+\n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String) is\n+   begin\n+      Wide_Wide_String'Put_Image (S, Super_To_String (Source));\n+   end Put_Image;\n+\n    ----------------------\n    -- Set_Super_String --\n    ----------------------"}, {"sha": "b50d21ad6ae8b54a8be642408a1831b3fcb3e7c2", "filename": "gcc/ada/libgnat/a-stzsup.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-stzsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aac607c7eb53313cfd907a31cee6c5e4f550ae/gcc%2Fada%2Flibgnat%2Fa-stzsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzsup.ads?ref=76aac607c7eb53313cfd907a31cee6c5e4f550ae", "patch": "@@ -37,6 +37,7 @@\n --  Strings.Wide_Wide_Bounded.Generic_Bounded_Length use this type with\n --  an appropriate discriminant value set.\n \n+with Ada.Strings.Text_Buffers;\n with Ada.Strings.Wide_Wide_Maps;\n \n package Ada.Strings.Wide_Wide_Superbounded is\n@@ -55,7 +56,8 @@ package Ada.Strings.Wide_Wide_Superbounded is\n       --  no longer necessary, because we now special-case this type in the\n       --  compiler, so \"=\" composes properly for descendants of this type.\n       --  Leaving it out is more efficient.\n-   end record;\n+   end record\n+   with Put_Image => Put_Image;\n \n    --  The subprograms defined for Super_String are similar to those defined\n    --  for Bounded_Wide_Wide_String, except that they have different names, so\n@@ -486,6 +488,10 @@ package Ada.Strings.Wide_Wide_Superbounded is\n       Item  : Super_String;\n       Drop  : Truncation := Error) return Super_String;\n \n+   procedure Put_Image\n+     (S      : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;\n+      Source : Super_String);\n+\n private\n       --  Pragma Inline declarations\n "}]}