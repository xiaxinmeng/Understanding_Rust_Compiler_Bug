{"sha": "bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0OThlYTNhNWMzNWM3M2YzY2EzYTg5NjQyNjM3ZWVjMWMyYzRhOA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-07-09T22:19:04Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-07-09T22:19:04Z"}, "message": "i386.c (ix86_function_arg_boundary): Remove abort.\n\n2003-07-09  Aldy Hernandez  <aldyh@redhat.com>\n\n\tPR/11144\n\t* config/i386/i386.c (ix86_function_arg_boundary): Remove abort.\n\nFrom-SVN: r69159", "tree": {"sha": "47969757feeb8de6c6bff44794462e30be7061a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47969757feeb8de6c6bff44794462e30be7061a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21f3dbfc1cfcffe5e1bf5fc7aa2a5b21a748ace4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f3dbfc1cfcffe5e1bf5fc7aa2a5b21a748ace4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21f3dbfc1cfcffe5e1bf5fc7aa2a5b21a748ace4"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "683a24e7767437b6e001e0b9b3224b71b14a24de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8", "patch": "@@ -1,3 +1,8 @@\n+2003-07-09  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR/11144\n+\t* config/i386/i386.c (ix86_function_arg_boundary): Remove abort.\n+\n 2003-07-09  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \tPR bootstrap/11043"}, {"sha": "e4a66228665420cd39f1b82086ad8d318b64c148", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bb498ea3a5c35c73f3ca3a89642637eec1c2c4a8", "patch": "@@ -2610,8 +2610,8 @@ contains_128bit_aligned_vector_p (tree type)\n   return false;\n }\n \n-/* Gives the alignment boundary, in bits, of an argument with the specified mode\n-   and type.   */\n+/* Gives the alignment boundary, in bits, of an argument with the\n+   specified mode and type.  */\n \n int\n ix86_function_arg_boundary (enum machine_mode mode, tree type)\n@@ -2642,8 +2642,6 @@ ix86_function_arg_boundary (enum machine_mode mode, tree type)\n \t  if (!contains_128bit_aligned_vector_p (type))\n \t    align = PARM_BOUNDARY;\n \t}\n-      if (align != PARM_BOUNDARY && !TARGET_SSE)\n-\tabort();\n     }\n   if (align > 128)\n     align = 128;"}]}