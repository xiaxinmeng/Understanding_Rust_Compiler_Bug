{"sha": "88efc60a699446d45ab56c4b80719c2e590db8c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlZmM2MGE2OTk0NDZkNDVhYjU2YzRiODA3MTljMmU1OTBkYjhjNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T19:23:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T19:23:14Z"}, "message": "If TREE_CODE undefined, make an incomplete union for tree.\n\n(STDIO_PROTO): Define here if not already defined.\n(read_rtx): Use STDIO_PROTO.\n(output_constant_def, immed_real_const): Use \"union tree_node *\".\n(immed_real_const_1): Move declaration to real.h.\n(rtx_to_tree_code): Supply prototype.\n\nFrom-SVN: r7106", "tree": {"sha": "dad682683699756c585a193cc79846e4bf59511f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dad682683699756c585a193cc79846e4bf59511f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88efc60a699446d45ab56c4b80719c2e590db8c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88efc60a699446d45ab56c4b80719c2e590db8c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88efc60a699446d45ab56c4b80719c2e590db8c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88efc60a699446d45ab56c4b80719c2e590db8c7/comments", "author": null, "committer": null, "parents": [{"sha": "92544bdfd59b9deb0ae56887f89f6719321bc20e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92544bdfd59b9deb0ae56887f89f6719321bc20e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92544bdfd59b9deb0ae56887f89f6719321bc20e"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "489f7d62e818ca035890bea4edbedd281677c405", "filename": "gcc/rtl.h", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88efc60a699446d45ab56c4b80719c2e590db8c7/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88efc60a699446d45ab56c4b80719c2e590db8c7/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=88efc60a699446d45ab56c4b80719c2e590db8c7", "patch": "@@ -1,5 +1,5 @@\n /* Register Transfer Language (RTL) definitions for GNU C-Compiler\n-   Copyright (C) 1987, 1991, 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1991, 1992, 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -25,6 +25,10 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef ABS /* Likewise.  */\n #undef PC /* Likewise.  */\n \n+#ifndef TREE_CODE\n+union tree_node;\n+#endif\n+\n /* Register Transfer Language EXPRESSIONS CODES */\n \n #define RTX_CODE\tenum rtx_code\n@@ -163,6 +167,14 @@ typedef struct rtx_def\n #endif\n #endif\n \n+#ifndef STDIO_PROTO\n+#ifdef BUFSIZ\n+#define STDIO_PROTO(ARGS) PROTO(ARGS)\n+#else\n+#define STDIO_PROTO(ARGS) ()\n+#endif\n+#endif\n+\n #define NULL_RTX (rtx) 0\n \n /* Define a generic NULL if one hasn't already been defined.  */\n@@ -661,11 +673,7 @@ extern rtx gen_rtx\t\t\tPVPROTO((enum rtx_code,\n \t\t\t\t\t\t enum machine_mode, ...));\n extern rtvec gen_rtvec\t\t\tPVPROTO((int, ...));\n \n-#ifdef BUFSIZ\t\t\t/* stdio.h has been included */\n-extern rtx read_rtx\t\t\tPROTO((FILE *));\n-#else\n-extern rtx read_rtx ();\n-#endif\n+extern rtx read_rtx\t\t\tSTDIO_PROTO((FILE *));\n \n #if 0\n /* At present, don't prototype xrealloc, since all of the callers don't\n@@ -898,20 +906,10 @@ extern rtx *find_single_use\t\tPROTO((rtx, rtx, rtx *));\n    expr.h to be included for the enumeration.  */\n \n extern rtx expand_expr ();\n-extern rtx immed_real_const_1();\n-\n-#ifdef TREE_CODE\n-/* rtl.h and tree.h were included.  */\n-extern rtx  output_constant_def PROTO((tree));\n-extern rtx  immed_real_const\tPROTO((tree));\n-extern rtx  immed_real_const_1\tPROTO((REAL_VALUE_TYPE, enum machine_mode));\n-extern tree make_tree\t\tPROTO((tree, rtx));\n \n-#else\n-extern rtx output_constant_def ();\n-extern rtx immed_real_const ();\n-extern rtx immed_real_const_1 ();\n-#endif\n+extern rtx output_constant_def\t\tPROTO((union tree_node *));\n+extern rtx immed_real_const\t\tPROTO((union tree_node *));\n+extern union tree_node *make_tree\tPROTO((union tree_node *, rtx));\n \n /* Define a default value for STORE_FLAG_VALUE.  */\n \n@@ -942,5 +940,7 @@ extern int cse_not_expected;\n extern rtx *regno_reg_rtx;\n \n /* Translates rtx code to tree code, for those codes needed by\n-   REAL_ARITHMETIC.  */\n-extern int rtx_to_tree_code ();\n+   REAL_ARITHMETIC.  The function returns an int because the caller may not\n+   know what `enum tree_code' means.  */\n+\n+extern int rtx_to_tree_code\tPROTO((enum rtx_code));"}]}