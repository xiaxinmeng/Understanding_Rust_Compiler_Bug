{"sha": "011ad0584495ebbf43243a811166df479bba578c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDExYWQwNTg0NDk1ZWJiZjQzMjQzYTgxMTE2NmRmNDc5YmJhNTc4Yw==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2005-03-05T21:47:10Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2005-03-05T21:47:10Z"}, "message": "gtk_jawt.c (classpath_jawt_get_drawable, [...]): New functions.\n\n2005-02-15  Anthony Green  <green@redhat.com>\n\n\t* jni/gtk-peer/gtk_jawt.c (classpath_jawt_get_drawable,\n\tclasspath_jawt_lock, classpath_jawt_unlock): New functions.\n\t* jawt.c (_Jv_JAWT_Lock, _Jv_JAWT_Unlock): New functions.\n\t(_Jv_GetDrawingSurface): Set visualID.\n\t(_Jv_FreeDrawingSurfaceInfo): Clear visualID.\n\t(JAWT_GetAWT): Set Lock and Unlock.\n\t* include/jawt_md.h (struct _JAWT_X11DrawingSurfaceInfo): Add visualID.\n\t* include/jawt.h (JAWT_VERSION_1_4, JAWT_LOCK_ERROR,\n\tJAWT_LOCK_CLIP_CHANGED, JAWT_LOCK_BOUNDS_CHANGED,\n\tJAWT_LOCK_SURFACE_CHANGED): New macros.\n\t(struct _JAWT): Add Lock and Unlock.\n\nFrom-SVN: r95943", "tree": {"sha": "c15a9469945dc66556efc2b98914d3904ca49180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c15a9469945dc66556efc2b98914d3904ca49180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/011ad0584495ebbf43243a811166df479bba578c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011ad0584495ebbf43243a811166df479bba578c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/011ad0584495ebbf43243a811166df479bba578c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011ad0584495ebbf43243a811166df479bba578c/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f724eb8a71c5aa02709ff34b93d272881bf69f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f724eb8a71c5aa02709ff34b93d272881bf69f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f724eb8a71c5aa02709ff34b93d272881bf69f8"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "fdff9356a11f2056b2d66eb591b25be7806c5a64", "filename": "libjava/include/jawt.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ad0584495ebbf43243a811166df479bba578c/libjava%2Finclude%2Fjawt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ad0584495ebbf43243a811166df479bba578c/libjava%2Finclude%2Fjawt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjawt.h?ref=011ad0584495ebbf43243a811166df479bba578c", "patch": "@@ -50,8 +50,12 @@ extern \"C\"\n #endif\n \n #define JAWT_VERSION_1_3 0x10003\n+#define JAWT_VERSION_1_4 0x10004\n \n #define JAWT_LOCK_ERROR 0x1\n+#define JAWT_LOCK_CLIP_CHANGED 0x2\n+#define JAWT_LOCK_BOUNDS_CHANGED 0x4\n+#define JAWT_LOCK_SURFACE_CHANGED 0x8\n \n struct _JAWT_DrawingSurfaceInfo\n {\n@@ -77,6 +81,8 @@ struct _JAWT\n   jint version;\n   struct _JAWT_DrawingSurface* (JNICALL* GetDrawingSurface) (JNIEnv*, jobject);\n   void (JNICALL* FreeDrawingSurface) (struct _JAWT_DrawingSurface*);\n+  void (JNICALL *Lock) (JNIEnv*);\n+  void (JNICALL *Unlock) (JNIEnv*);\n };\n \n typedef struct _JAWT_DrawingSurfaceInfo JAWT_DrawingSurfaceInfo;"}, {"sha": "9e74ec1cc7cc73c6d70959a0c61341710e7acb08", "filename": "libjava/include/jawt_md.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ad0584495ebbf43243a811166df479bba578c/libjava%2Finclude%2Fjawt_md.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ad0584495ebbf43243a811166df479bba578c/libjava%2Finclude%2Fjawt_md.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjawt_md.h?ref=011ad0584495ebbf43243a811166df479bba578c", "patch": "@@ -52,6 +52,7 @@ struct _JAWT_X11DrawingSurfaceInfo\n {\n   Display* display;\n   Drawable drawable;\n+  VisualID visualID;\n };\n \n typedef struct _JAWT_X11DrawingSurfaceInfo JAWT_X11DrawingSurfaceInfo;"}, {"sha": "20890da48a3f465316c61dd30edfdd73a8662798", "filename": "libjava/jawt.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ad0584495ebbf43243a811166df479bba578c/libjava%2Fjawt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ad0584495ebbf43243a811166df479bba578c/libjava%2Fjawt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjawt.c?ref=011ad0584495ebbf43243a811166df479bba578c", "patch": "@@ -50,6 +50,8 @@ static void (JNICALL _Jv_FreeDrawingSurfaceInfo)\n static JAWT_DrawingSurface* (JNICALL _Jv_GetDrawingSurface) (JNIEnv* env,\n \t\t\t\t\t\t\t     jobject canvas);\n static void (JNICALL _Jv_FreeDrawingSurface) (JAWT_DrawingSurface* surface);\n+static void (JNICALL _Jv_AWTLock) (JNIEnv*);\n+static void (JNICALL _Jv_AWTUnlock) (JNIEnv*);\n \n JNIEXPORT jboolean JNICALL\n JAWT_GetAWT (JNIEnv* env, JAWT* awt)\n@@ -63,6 +65,8 @@ JAWT_GetAWT (JNIEnv* env, JAWT* awt)\n \n   awt->GetDrawingSurface = _Jv_GetDrawingSurface;\n   awt->FreeDrawingSurface = _Jv_FreeDrawingSurface;\n+  awt->Lock = _Jv_AWTLock;\n+  awt->Unlock = _Jv_AWTUnlock;\n \n   return JNI_TRUE;\n }\n@@ -103,6 +107,7 @@ static void\n \n   surface_info_x11->display = NULL;\n   surface_info_x11->drawable = 0;\n+  surface_info_x11->visualID = 0;\n \n   free (surface_info);\n   surface_info = NULL;\n@@ -142,6 +147,7 @@ static JAWT_DrawingSurface*\n \n   surface_info_x11->display = classpath_jawt_get_default_display (env, canvas);\n   surface_info_x11->drawable = classpath_jawt_get_drawable (env, canvas);\n+  surface_info_x11->visualID = classpath_jawt_get_visualID (env, canvas);\n \n   /* FIXME: also include bounding rectangle of drawing surface */\n   /* FIXME: also include current clipping region */\n@@ -154,3 +160,16 @@ static void\n {\n   free (surface);\n }\n+\n+static void\n+(JNICALL _Jv_AWTLock) (JNIEnv* env)\n+{\n+  classpath_jawt_lock ();\n+}\n+\n+static void\n+(JNICALL _Jv_AWTUnlock) (JNIEnv* env)\n+{\n+  classpath_jawt_unlock ();\n+}\n+"}, {"sha": "1629505ac5cdb483e212d4bc049a8c2b81d2b3bd", "filename": "libjava/jni/classpath/classpath_jawt.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ad0584495ebbf43243a811166df479bba578c/libjava%2Fjni%2Fclasspath%2Fclasspath_jawt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ad0584495ebbf43243a811166df479bba578c/libjava%2Fjni%2Fclasspath%2Fclasspath_jawt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fclasspath%2Fclasspath_jawt.h?ref=011ad0584495ebbf43243a811166df479bba578c", "patch": "@@ -53,6 +53,7 @@\n jint     classpath_jawt_get_awt_version ();\n Display* classpath_jawt_get_default_display (JNIEnv* env, jobject canvas);\n Drawable classpath_jawt_get_drawable (JNIEnv* env, jobject canvas);\n+VisualID classpath_jawt_get_visualID (JNIEnv* env, jobject canvas);\n jint     classpath_jawt_lock ();\n void     classpath_jawt_unlock ();\n "}, {"sha": "cba3b1509ecce95235f58249bb29fb1c6d78bad5", "filename": "libjava/jni/gtk-peer/gtk_jawt.c", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/011ad0584495ebbf43243a811166df479bba578c/libjava%2Fjni%2Fgtk-peer%2Fgtk_jawt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/011ad0584495ebbf43243a811166df479bba578c/libjava%2Fjni%2Fgtk-peer%2Fgtk_jawt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtk_jawt.c?ref=011ad0584495ebbf43243a811166df479bba578c", "patch": "@@ -85,6 +85,40 @@ classpath_jawt_get_default_display (JNIEnv* env, jobject canvas)\n   return xdisplay;\n }\n \n+VisualID\n+classpath_jawt_get_visualID (JNIEnv* env, jobject canvas)\n+{\n+  GtkWidget *widget;\n+  Visual *visual;\n+  void *ptr;\n+  jobject peer;\n+  jclass class_id;\n+  jmethodID method_id;\n+\n+  class_id = (*env)->GetObjectClass (env, canvas);\n+\n+  method_id = (*env)->GetMethodID (env, class_id,\n+\t\t\t\t   \"getPeer\",\n+\t\t\t\t   \"()Ljava/awt/peer/ComponentPeer;\");\n+\n+  peer = (*env)->CallObjectMethod (env, canvas, method_id);\n+\n+  ptr = NSA_GET_PTR (env, peer);\n+\n+  gdk_threads_enter ();\n+\n+  widget = GTK_WIDGET (ptr);\n+\n+  g_assert (GTK_WIDGET_REALIZED (widget));\n+\n+  visual = gdk_x11_visual_get_xvisual (gtk_widget_get_visual (widget));\n+  g_assert (visual != NULL);\n+\n+  gdk_threads_leave ();\n+\n+  return visual->visualid;\n+}\n+\n Drawable\n classpath_jawt_get_drawable (JNIEnv* env, jobject canvas)\n {"}]}