{"sha": "33b92c9d47852cef1981cae8f28b29b7eac627d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNiOTJjOWQ0Nzg1MmNlZjE5ODFjYWU4ZjI4YjI5YjdlYWM2MjdkMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-05-21T18:59:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-05-21T18:59:11Z"}, "message": "cgraph.h (struct cgraph_node): Remove inline_decl member.\n\n2009-05-21  Richard Guenther  <rguenther@suse.de>\n\n\t* cgraph.h (struct cgraph_node): Remove inline_decl member.\n\t* ipa-inline.c (cgraph_mark_inline_edge): Do not check it.\n\t(cgraph_default_inline_p): Likewise.\n\t(cgraph_decide_inlining_incrementally): Likewise.\n\nFrom-SVN: r147776", "tree": {"sha": "62e2c3d89bdea5106831127b34a3952b40551f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62e2c3d89bdea5106831127b34a3952b40551f1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33b92c9d47852cef1981cae8f28b29b7eac627d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b92c9d47852cef1981cae8f28b29b7eac627d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33b92c9d47852cef1981cae8f28b29b7eac627d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b92c9d47852cef1981cae8f28b29b7eac627d3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "63487d11510ff85ef1750800b8b07bca3de63518", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63487d11510ff85ef1750800b8b07bca3de63518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63487d11510ff85ef1750800b8b07bca3de63518"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "a06f1181990c185c4a2adccbe191bb78b253faa6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b92c9d47852cef1981cae8f28b29b7eac627d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b92c9d47852cef1981cae8f28b29b7eac627d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33b92c9d47852cef1981cae8f28b29b7eac627d3", "patch": "@@ -1,3 +1,10 @@\n+2009-05-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* cgraph.h (struct cgraph_node): Remove inline_decl member.\n+\t* ipa-inline.c (cgraph_mark_inline_edge): Do not check it.\n+\t(cgraph_default_inline_p): Likewise.\n+\t(cgraph_decide_inlining_incrementally): Likewise.\n+\n 2009-05-21  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "d391202d2d0ffe365b4ea2214b53f83575adbf04", "filename": "gcc/cgraph.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b92c9d47852cef1981cae8f28b29b7eac627d3/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b92c9d47852cef1981cae8f28b29b7eac627d3/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=33b92c9d47852cef1981cae8f28b29b7eac627d3", "patch": "@@ -213,11 +213,6 @@ struct GTY((chain_next (\"%h.next\"), chain_prev (\"%h.previous\"))) cgraph_node {\n   unsigned alias : 1;\n   /* Set for nodes that was constructed and finalized by frontend.  */\n   unsigned finalized_by_frontend : 1;\n-\n-  /* In non-unit-at-a-time mode the function body of inline candidates is saved\n-     into clone before compiling so the function in original form can be\n-     inlined later.  This pointer points to the clone.  */\n-  tree inline_decl;\n };\n \n typedef struct cgraph_node *cgraph_node_ptr;"}, {"sha": "4f37ff3074978c41914e6688c5f94ffbb7f48e0d", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b92c9d47852cef1981cae8f28b29b7eac627d3/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b92c9d47852cef1981cae8f28b29b7eac627d3/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=33b92c9d47852cef1981cae8f28b29b7eac627d3", "patch": "@@ -258,9 +258,6 @@ cgraph_mark_inline_edge (struct cgraph_edge *e, bool update_original,\n   struct cgraph_node *to = NULL, *what;\n   struct cgraph_edge *curr = e;\n \n-  if (e->callee->inline_decl)\n-    cgraph_redirect_edge_callee (e, cgraph_node (e->callee->inline_decl));\n-\n   gcc_assert (e->inline_failed);\n   e->inline_failed = CIF_OK;\n \n@@ -425,8 +422,6 @@ cgraph_default_inline_p (struct cgraph_node *n, cgraph_inline_failed_t *reason)\n {\n   tree decl = n->decl;\n \n-  if (n->inline_decl)\n-    decl = n->inline_decl;\n   if (!flag_inline_small_functions && !DECL_DECLARED_INLINE_P (decl))\n     {\n       if (reason)\n@@ -1417,7 +1412,7 @@ cgraph_decide_inlining_incrementally (struct cgraph_node *node,\n \t      }\n \t    continue;\n \t  }\n-\tif (!e->callee->analyzed && !e->callee->inline_decl)\n+\tif (!e->callee->analyzed)\n \t  {\n \t    if (dump_file)\n \t      {\n@@ -1493,7 +1488,7 @@ cgraph_decide_inlining_incrementally (struct cgraph_node *node,\n \t      }\n \t    continue;\n \t  }\n-\tif (!e->callee->analyzed && !e->callee->inline_decl)\n+\tif (!e->callee->analyzed)\n \t  {\n \t    if (dump_file)\n \t      {"}]}