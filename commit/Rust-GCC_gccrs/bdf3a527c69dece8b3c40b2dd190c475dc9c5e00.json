{"sha": "bdf3a527c69dece8b3c40b2dd190c475dc9c5e00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmM2E1MjdjNjlkZWNlOGIzYzQwYjJkZDE5MGM0NzVkYzljNWUwMA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-05-19T15:40:35Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-05-19T15:40:35Z"}, "message": "vqmovun.c: New file.\n\n2015-05-19  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vqmovun.c: New file.\n\nFrom-SVN: r223373", "tree": {"sha": "1b590325ba8595318dc50a56c3a8c99f3ef09bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b590325ba8595318dc50a56c3a8c99f3ef09bb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdf3a527c69dece8b3c40b2dd190c475dc9c5e00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf3a527c69dece8b3c40b2dd190c475dc9c5e00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf3a527c69dece8b3c40b2dd190c475dc9c5e00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf3a527c69dece8b3c40b2dd190c475dc9c5e00/comments", "author": null, "committer": null, "parents": [{"sha": "f9eb770fa06769b1f349b68f6f2bf2d83106d5c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9eb770fa06769b1f349b68f6f2bf2d83106d5c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9eb770fa06769b1f349b68f6f2bf2d83106d5c6"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "717d18032062f05749f582e04334e9a9a6b8d074", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf3a527c69dece8b3c40b2dd190c475dc9c5e00/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf3a527c69dece8b3c40b2dd190c475dc9c5e00/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bdf3a527c69dece8b3c40b2dd190c475dc9c5e00", "patch": "@@ -1,3 +1,7 @@\n+2015-05-19  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqmovun.c: New file.\n+\n 2015-05-19  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vqmovn.c: New file."}, {"sha": "1eeb4c8488c71a3cc8430aebdd605048cd7b3bc3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vqmovun.c", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf3a527c69dece8b3c40b2dd190c475dc9c5e00/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqmovun.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf3a527c69dece8b3c40b2dd190c475dc9c5e00/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqmovun.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqmovun.c?ref=bdf3a527c69dece8b3c40b2dd190c475dc9c5e00", "patch": "@@ -0,0 +1,93 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected values of cumulative_saturation flag.  */\n+int VECT_VAR(expected_cumulative_sat,uint,8,8) = 0;\n+int VECT_VAR(expected_cumulative_sat,uint,16,4) = 0;\n+int VECT_VAR(expected_cumulative_sat,uint,32,2) = 0;\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x34, 0x34, 0x34, 0x34,\n+\t\t\t\t\t0x34, 0x34, 0x34, 0x34 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x5678, 0x5678, 0x5678, 0x5678 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x12345678, 0x12345678 };\n+\n+/* Expected values of cumulative_saturation flag with negative input.  */\n+int VECT_VAR(expected_cumulative_sat_neg,uint,8,8) = 1;\n+int VECT_VAR(expected_cumulative_sat_neg,uint,16,4) = 1;\n+int VECT_VAR(expected_cumulative_sat_neg,uint,32,2) = 1;\n+\n+/* Expected results with negative input.  */\n+VECT_VAR_DECL(expected_neg,uint,8,8) [] = { 0x0, 0x0, 0x0, 0x0,\n+\t\t\t\t\t    0x0, 0x0, 0x0, 0x0 };\n+VECT_VAR_DECL(expected_neg,uint,16,4) [] = { 0x0, 0x0, 0x0, 0x0 };\n+VECT_VAR_DECL(expected_neg,uint,32,2) [] = { 0x0, 0x0 };\n+\n+#define INSN_NAME vqmovun\n+#define TEST_MSG \"VQMOVUN\"\n+\n+#define FNNAME1(NAME) void exec_ ## NAME (void)\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+FNNAME (INSN_NAME)\n+{\n+  /* Basic test: y=OP(x), then store the result.  */\n+#define TEST_UNARY_OP1(INSN, T1, T2, W, W2, N, EXPECTED_CUMULATIVE_SAT, CMT) \\\n+  Set_Neon_Cumulative_Sat(0, VECT_VAR(vector_res, T1, W, N));\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =\t\t\t\t\t\\\n+    INSN##_s##W2(VECT_VAR(vector, int, W2, N));\t\t\t\t\\\n+  vst1##_##T2##W(VECT_VAR(result, T1, W, N),\t\t\t\t\\\n+\t\t VECT_VAR(vector_res, T1, W, N));\t\t\t\\\n+  CHECK_CUMULATIVE_SAT(TEST_MSG, T1, W, N, EXPECTED_CUMULATIVE_SAT, CMT)\n+\n+#define TEST_UNARY_OP(INSN, T1, T2, W, W2, N, EXPECTED_CUMULATIVE_SAT, CMT) \\\n+  TEST_UNARY_OP1(INSN, T1, T2, W, W2, N, EXPECTED_CUMULATIVE_SAT, CMT)\n+\n+  DECL_VARIABLE(vector, int, 16, 8);\n+  DECL_VARIABLE(vector, int, 32, 4);\n+  DECL_VARIABLE(vector, int, 64, 2);\n+\n+  DECL_VARIABLE(vector_res, uint, 8, 8);\n+  DECL_VARIABLE(vector_res, uint, 16, 4);\n+  DECL_VARIABLE(vector_res, uint, 32, 2);\n+\n+  clean_results ();\n+\n+  /* Fill input vector with arbitrary values.  */\n+  VDUP(vector, q, int, s, 16, 8, 0x34);\n+  VDUP(vector, q, int, s, 32, 4, 0x5678);\n+  VDUP(vector, q, int, s, 64, 2, 0x12345678);\n+\n+  /* Apply a unary operator named INSN_NAME.  */\n+#define CMT \"\"\n+  TEST_UNARY_OP(INSN_NAME, uint, u, 8, 16, 8, expected_cumulative_sat, CMT);\n+  TEST_UNARY_OP(INSN_NAME, uint, u, 16, 32, 4, expected_cumulative_sat, CMT);\n+  TEST_UNARY_OP(INSN_NAME, uint, u, 32, 64, 2, expected_cumulative_sat, CMT);\n+\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected, CMT);\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx16, expected, CMT);\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, CMT);\n+\n+  /* Fill input vector with negative values.  */\n+  VDUP(vector, q, int, s, 16, 8, 0x8234);\n+  VDUP(vector, q, int, s, 32, 4, 0x87654321);\n+  VDUP(vector, q, int, s, 64, 2, 0x8765432187654321LL);\n+\n+  /* Apply a unary operator named INSN_NAME.  */\n+#undef CMT\n+#define CMT \" (negative input)\"\n+  TEST_UNARY_OP(INSN_NAME, uint, u, 8, 16, 8, expected_cumulative_sat_neg, CMT);\n+  TEST_UNARY_OP(INSN_NAME, uint, u, 16, 32, 4, expected_cumulative_sat_neg, CMT);\n+  TEST_UNARY_OP(INSN_NAME, uint, u, 32, 64, 2, expected_cumulative_sat_neg, CMT);\n+\n+  CHECK(TEST_MSG, uint, 8, 8, PRIx8, expected_neg, CMT);\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx16, expected_neg, CMT);\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected_neg, CMT);\n+}\n+\n+int main (void)\n+{\n+  exec_vqmovun ();\n+  return 0;\n+}"}]}