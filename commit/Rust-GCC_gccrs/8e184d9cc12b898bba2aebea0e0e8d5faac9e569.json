{"sha": "8e184d9cc12b898bba2aebea0e0e8d5faac9e569", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUxODRkOWNjMTJiODk4YmJhMmFlYmVhMGUwZThkNWZhYWM5ZTU2OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-04-04T20:19:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-04-04T20:19:23Z"}, "message": "gcse.c (delete_null_pointer_checks_1): Add delete_list argument, push insns to delete to it instead of deleting them.\n\n\t* gcse.c (delete_null_pointer_checks_1): Add delete_list argument,\n\tpush insns to delete to it instead of deleting them.\n\t(delete_null_pointer_checks): Delete insns from delete_list after\n\tall delete_null_pointer_checks_1 passes are done.\n\nFrom-SVN: r41092", "tree": {"sha": "7aef91698117ee2beec54a5b9d64e2c363eded79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aef91698117ee2beec54a5b9d64e2c363eded79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e184d9cc12b898bba2aebea0e0e8d5faac9e569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e184d9cc12b898bba2aebea0e0e8d5faac9e569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e184d9cc12b898bba2aebea0e0e8d5faac9e569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e184d9cc12b898bba2aebea0e0e8d5faac9e569/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75da53c9eee2bab8452bfec70dc0cddc5e391b2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75da53c9eee2bab8452bfec70dc0cddc5e391b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75da53c9eee2bab8452bfec70dc0cddc5e391b2b"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "452d6f56578614c9abe9f8ecff9d0fff0b3b627d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e184d9cc12b898bba2aebea0e0e8d5faac9e569/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e184d9cc12b898bba2aebea0e0e8d5faac9e569/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e184d9cc12b898bba2aebea0e0e8d5faac9e569", "patch": "@@ -1,3 +1,10 @@\n+2001-04-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcse.c (delete_null_pointer_checks_1): Add delete_list argument,\n+\tpush insns to delete to it instead of deleting them.\n+\t(delete_null_pointer_checks): Delete insns from delete_list after\n+\tall delete_null_pointer_checks_1 passes are done.\n+\n 2001-04-04  Richard Henderson  <rth@redhat.com>\n \n \t* configure.in (gcc_cv_as_leb128): Tweek minor number extraction."}, {"sha": "f060a8e8875cb0b27fed35d4fca8eda115cb3072", "filename": "gcc/gcse.c", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e184d9cc12b898bba2aebea0e0e8d5faac9e569/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e184d9cc12b898bba2aebea0e0e8d5faac9e569/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=8e184d9cc12b898bba2aebea0e0e8d5faac9e569", "patch": "@@ -628,8 +628,8 @@ static int handle_avail_expr\tPARAMS ((rtx, struct expr *));\n static int classic_gcse\t\tPARAMS ((void));\n static int one_classic_gcse_pass PARAMS ((int));\n static void invalidate_nonnull_info PARAMS ((rtx, rtx, void *));\n-static void delete_null_pointer_checks_1 PARAMS ((unsigned int *, sbitmap *,\n-\t\t\t\t\t\t  sbitmap *,\n+static void delete_null_pointer_checks_1 PARAMS ((varray_type *, unsigned int *,\n+\t\t\t\t\t\t  sbitmap *, sbitmap *,\n \t\t\t\t\t\t  struct null_pointer_info *));\n static rtx process_insert_insn\tPARAMS ((struct expr *));\n static int pre_edge_insert\tPARAMS ((struct edge_list *, struct expr **));\n@@ -4972,7 +4972,9 @@ invalidate_nonnull_info (x, setter, data)\n    they are not our responsibility to free.  */\n \n static void\n-delete_null_pointer_checks_1 (block_reg, nonnull_avin, nonnull_avout, npi)\n+delete_null_pointer_checks_1 (delete_list, block_reg, nonnull_avin,\n+\t\t\t      nonnull_avout, npi)\n+     varray_type *delete_list;\n      unsigned int *block_reg;\n      sbitmap *nonnull_avin;\n      sbitmap *nonnull_avout;\n@@ -5102,9 +5104,12 @@ delete_null_pointer_checks_1 (block_reg, nonnull_avin, nonnull_avout, npi)\n \t  LABEL_NUSES (JUMP_LABEL (new_jump))++;\n \t  emit_barrier_after (new_jump);\n \t}\n-      delete_insn (last_insn);\n+      if (!*delete_list)\n+\tVARRAY_RTX_INIT (*delete_list, 10, \"delete_list\");\n+\n+      VARRAY_PUSH_RTX (*delete_list, last_insn);\n       if (compare_and_branch == 2)\n-\tdelete_insn (earliest);\n+\tVARRAY_PUSH_RTX (*delete_list, earliest);\n \n       /* Don't check this block again.  (Note that BLOCK_END is\n \t invalid here; we deleted the last instruction in the \n@@ -5143,10 +5148,12 @@ delete_null_pointer_checks (f)\n {\n   sbitmap *nonnull_avin, *nonnull_avout;\n   unsigned int *block_reg;\n+  varray_type delete_list = NULL;\n   int bb;\n   int reg;\n   int regs_per_pass;\n   int max_reg;\n+  unsigned int i;\n   struct null_pointer_info npi;\n \n   /* If we have only a single block, then there's nothing to do.  */\n@@ -5215,10 +5222,18 @@ delete_null_pointer_checks (f)\n     {\n       npi.min_reg = reg;\n       npi.max_reg = MIN (reg + regs_per_pass, max_reg);\n-      delete_null_pointer_checks_1 (block_reg, nonnull_avin,\n+      delete_null_pointer_checks_1 (&delete_list, block_reg, nonnull_avin,\n \t\t\t\t    nonnull_avout, &npi);\n     }\n \n+  /* Now delete the instructions all at once.  This breaks the CFG.  */\n+  if (delete_list)\n+    {\n+      for (i = 0; i < VARRAY_ACTIVE_SIZE (delete_list); i++)\n+\tdelete_insn (VARRAY_RTX (delete_list, i));\n+      VARRAY_FREE (delete_list);\n+    }\n+\n   /* Free the table of registers compared at the end of every block.  */\n   free (block_reg);\n "}]}