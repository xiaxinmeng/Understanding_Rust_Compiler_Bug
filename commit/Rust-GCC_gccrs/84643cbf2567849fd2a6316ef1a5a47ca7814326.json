{"sha": "84643cbf2567849fd2a6316ef1a5a47ca7814326", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ2NDNjYmYyNTY3ODQ5ZmQyYTYzMTZlZjFhNWE0N2NhNzgxNDMyNg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-04-30T04:49:45Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-04-30T04:49:45Z"}, "message": "sparc.h (BRANCH_COST, [...]): Tune for UltraSPARC-III.\n\n2002-04-29  David S. Miller  <davem@redhat.com>\n\n\t* config/sparc/sparc.h (BRANCH_COST, PREFETCH_BLOCK,\n\tSIMULTANEOUS_PREFETCHES): Tune for UltraSPARC-III.\n\t* config/sparc/sparc.md (call + jmp 32-bit peepholes): Likewise.\n\t* config/sparc/sparc.c (sparc_initialize_trampoline): Likewise.\n\nFrom-SVN: r52928", "tree": {"sha": "0b41dbdf5fc24acb0e5b5de716214d1ffc71f8db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b41dbdf5fc24acb0e5b5de716214d1ffc71f8db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84643cbf2567849fd2a6316ef1a5a47ca7814326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84643cbf2567849fd2a6316ef1a5a47ca7814326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84643cbf2567849fd2a6316ef1a5a47ca7814326", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84643cbf2567849fd2a6316ef1a5a47ca7814326/comments", "author": null, "committer": null, "parents": [{"sha": "9e7facd645ec49773d2b1168c6fe3a148e20796e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7facd645ec49773d2b1168c6fe3a148e20796e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e7facd645ec49773d2b1168c6fe3a148e20796e"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "9510bdf2514b1d6a86b4871e384dcdbbabc525ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84643cbf2567849fd2a6316ef1a5a47ca7814326/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84643cbf2567849fd2a6316ef1a5a47ca7814326/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84643cbf2567849fd2a6316ef1a5a47ca7814326", "patch": "@@ -1,3 +1,10 @@\n+2002-04-29  David S. Miller  <davem@redhat.com>\n+\n+\t* config/sparc/sparc.h (BRANCH_COST, PREFETCH_BLOCK,\n+\tSIMULTANEOUS_PREFETCHES): Tune for UltraSPARC-III.\n+\t* config/sparc/sparc.md (call + jmp 32-bit peepholes): Likewise.\n+\t* config/sparc/sparc.c (sparc_initialize_trampoline): Likewise.\n+\n 2002-04-29  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n \t* combine.c (find_split_point): Use gen_int_mode."}, {"sha": "e564e4649bd1e475a4e3d495e64323dbe55aa2e3", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84643cbf2567849fd2a6316ef1a5a47ca7814326/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84643cbf2567849fd2a6316ef1a5a47ca7814326/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=84643cbf2567849fd2a6316ef1a5a47ca7814326", "patch": "@@ -6439,7 +6439,8 @@ sparc_initialize_trampoline (tramp, fnaddr, cxt)\n   /* On UltraSPARC a flush flushes an entire cache line.  The trampoline is\n      aligned on a 16 byte boundary so one flush clears it all.  */\n   emit_insn (gen_flush (validize_mem (gen_rtx_MEM (SImode, tramp))));\n-  if (sparc_cpu != PROCESSOR_ULTRASPARC)\n+  if (sparc_cpu != PROCESSOR_ULTRASPARC\n+      && sparc_cpu != PROCESSOR_ULTRASPARC3)\n     emit_insn (gen_flush (validize_mem (gen_rtx_MEM (SImode,\n \t\t\t\t\t\t     plus_constant (tramp, 8)))));\n }"}, {"sha": "c86eb8ff21c95830bf4983d981adbec25f734ba9", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84643cbf2567849fd2a6316ef1a5a47ca7814326/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84643cbf2567849fd2a6316ef1a5a47ca7814326/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=84643cbf2567849fd2a6316ef1a5a47ca7814326", "patch": "@@ -2642,14 +2642,14 @@ do {                                                                    \\\n \n    On v9 and later, which have branch prediction facilities, we set\n    it to the depth of the pipeline as that is the cost of a\n-   mispredicted branch.\n-\n-   ??? Set to 9 when PROCESSOR_ULTRASPARC3 is added  */\n+   mispredicted branch.  */\n \n #define BRANCH_COST \\\n \t((sparc_cpu == PROCESSOR_V9 \\\n \t  || sparc_cpu == PROCESSOR_ULTRASPARC) \\\n-\t ? 7 : 3)\n+\t ? 7 \\\n+         : (sparc_cpu == PROCESSOR_ULTRASPARC3 \\\n+            ? 9 : 3))\n \n /* Provide the costs of a rtl expression.  This is in the body of a\n    switch on CODE.  The purpose for the cost of MULT is to encourage\n@@ -2684,11 +2684,15 @@ do {                                                                    \\\n     return 19;\n \n #define PREFETCH_BLOCK \\\n-\t((sparc_cpu == PROCESSOR_ULTRASPARC) ? 64 : 32)\n+\t((sparc_cpu == PROCESSOR_ULTRASPARC \\\n+          || sparc_cpu == PROCESSOR_ULTRASPARC3) \\\n+         ? 64 : 32)\n \n-/* ??? UltraSPARC-III note: Can set this to 8 for ultra3.  */\n #define SIMULTANEOUS_PREFETCHES \\\n-\t((sparc_cpu == PROCESSOR_ULTRASPARC) ? 2 : 3)\n+\t((sparc_cpu == PROCESSOR_ULTRASPARC) \\\n+         ? 2 \\\n+         : (sparc_cpu == PROCESSOR_ULTRASPARC3 \\\n+            ? 8 : 3))\n \f\n /* Control the assembler format that we output.  */\n "}, {"sha": "0932c84966aee7132a16b19ea15e78480eca16fc", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84643cbf2567849fd2a6316ef1a5a47ca7814326/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84643cbf2567849fd2a6316ef1a5a47ca7814326/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=84643cbf2567849fd2a6316ef1a5a47ca7814326", "patch": "@@ -9560,7 +9560,8 @@\n    (set (pc) (label_ref (match_operand 3 \"\" \"\")))]\n   \"short_branch (INSN_UID (insn), INSN_UID (operands[3]))\n    && (USING_SJLJ_EXCEPTIONS || ! can_throw_internal (ins1))\n-   && sparc_cpu != PROCESSOR_ULTRASPARC\"\n+   && sparc_cpu != PROCESSOR_ULTRASPARC\n+   && sparc_cpu != PROCESSOR_ULTRASPARC3\"\n   \"call\\\\t%a1, %2\\\\n\\\\tadd\\\\t%%o7, (%l3-.-4), %%o7\")\n \n (define_peephole\n@@ -9570,7 +9571,8 @@\n    (set (pc) (label_ref (match_operand 2 \"\" \"\")))]\n   \"short_branch (INSN_UID (insn), INSN_UID (operands[2]))\n    && (USING_SJLJ_EXCEPTIONS || ! can_throw_internal (ins1))\n-   && sparc_cpu != PROCESSOR_ULTRASPARC\"\n+   && sparc_cpu != PROCESSOR_ULTRASPARC\n+   && sparc_cpu != PROCESSOR_ULTRASPARC3\"\n   \"call\\\\t%a0, %1\\\\n\\\\tadd\\\\t%%o7, (%l2-.-4), %%o7\")\n \n ;; ??? UltraSPARC-III note: A memory operation loading into the floating point register"}]}