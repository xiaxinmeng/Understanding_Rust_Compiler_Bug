{"sha": "4d9478234b251be02d924902afad8883bb511538", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ5NDc4MjM0YjI1MWJlMDJkOTI0OTAyYWZhZDg4ODNiYjUxMTUzOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-11-04T13:29:43Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-11-04T13:29:43Z"}, "message": "driver-i386.c (enum vendor_signatures): New enum.\n\n\t* config/i386/driver-i386.c (enum vendor_signatures): New enum.\n\t(host_detect_local_cpu): Use it instead of casted strings to\n\tcompare vendor signatures.\n\nFrom-SVN: r141579", "tree": {"sha": "23fb5f516407910d922cc214fce68fd1337fb4ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23fb5f516407910d922cc214fce68fd1337fb4ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d9478234b251be02d924902afad8883bb511538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9478234b251be02d924902afad8883bb511538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d9478234b251be02d924902afad8883bb511538", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9478234b251be02d924902afad8883bb511538/comments", "author": null, "committer": null, "parents": [{"sha": "20358adc34ae3d064e5057e5e6ad4e34de868eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20358adc34ae3d064e5057e5e6ad4e34de868eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20358adc34ae3d064e5057e5e6ad4e34de868eb4"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "0a0d33c7213515c8e051cc8cc0bc1684523c8227", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d9478234b251be02d924902afad8883bb511538/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d9478234b251be02d924902afad8883bb511538/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d9478234b251be02d924902afad8883bb511538", "patch": "@@ -1,3 +1,9 @@\n+2008-11-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/driver-i386.c (enum vendor_signatures): New enum.\n+\t(host_detect_local_cpu): Use it instead of casted strings to\n+\tcompare vendor signatures.\n+\n 2008-11-03  Mikael Pettersson  <mikpe@it.uu.se>\n \n         PR target/37989\n@@ -609,8 +615,7 @@\n \t* tree-inline.c (tree_inlinable_function_p): Remove tuples\n \tdebugging hack.\n \n-\t* gimplify.c (gimplify_expr): Drop TREE_OVERFLOW from\n-\tINTEGER_CSTs.\n+\t* gimplify.c (gimplify_expr): Drop TREE_OVERFLOW from INTEGER_CSTs.\n \n \tPR debug/37020\n \t* c-decl.c (merge_decls): Don't call outlining_inline_function hook."}, {"sha": "69c6c0c7f3b5e66bf249299d40a9510f9e1551d1", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d9478234b251be02d924902afad8883bb511538/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d9478234b251be02d924902afad8883bb511538/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=4d9478234b251be02d924902afad8883bb511538", "patch": "@@ -333,6 +333,13 @@ detect_caches_intel (bool xeon_mp, unsigned max_level, unsigned max_ext_level)\n   return describe_cache (level1, level2);\n }\n \n+enum vendor_signatures\n+{\n+  SIG_INTEL =\t0x756e6547 /* Genu */,\n+  SIG_AMD =\t0x68747541 /* Auth */,\n+  SIG_GEODE =\t0x646f6547 /* Geod */\n+};\n+\n /* This will be called by the spec parser in gcc.c when it sees\n    a %:local_cpu_detect(args) construct.  Currently it will be called\n    with either \"arch\" or \"tune\" as argument depending on if -march=native\n@@ -415,16 +422,16 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \n   if (!arch)\n     {\n-      if (vendor == *(const unsigned int*) \"Auth\")\n+      if (vendor == SIG_AMD)\n \tcache = detect_caches_amd (ext_level);\n-      else if (vendor == *(const unsigned int*) \"Genu\")\n+      else if (vendor == SIG_INTEL)\n \t{\n \t  bool xeon_mp = (family == 15 && model == 6);\n \t  cache = detect_caches_intel (xeon_mp, max_level, ext_level);\n \t}\n     }\n \n-  if (vendor == *(const unsigned int*) \"Auth\")\n+  if (vendor == SIG_AMD)\n     {\n       processor = PROCESSOR_PENTIUM;\n \n@@ -437,7 +444,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       if (has_sse4a)\n \tprocessor = PROCESSOR_AMDFAM10;\n     }\n-  else if (vendor == *(const unsigned int*) \"Geod\")\n+  else if (vendor == SIG_GEODE)\n     processor = PROCESSOR_GEODE;\n   else\n     {"}]}