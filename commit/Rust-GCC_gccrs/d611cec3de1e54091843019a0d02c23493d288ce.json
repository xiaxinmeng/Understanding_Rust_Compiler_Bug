{"sha": "d611cec3de1e54091843019a0d02c23493d288ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYxMWNlYzNkZTFlNTQwOTE4NDMwMTlhMGQwMmMyMzQ5M2QyODhjZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-06-24T17:21:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-06-24T17:21:40Z"}, "message": "re PR target/90972 (ICE in fold_convert_loc, at fold-const.c:2429)\n\n2019-06-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/90972\n\t* tree-vect-stmts.c (vect_init_vector): Handle CONSTANT_CLASS_P\n\tin common code, dealing with STRING_CST properly.\n\n\t* gcc.dg/torture/pr90972.c: New testcase.\n\nFrom-SVN: r272623", "tree": {"sha": "c0b15c47569f9be00c072bf6bd8cf84491b489a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0b15c47569f9be00c072bf6bd8cf84491b489a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d611cec3de1e54091843019a0d02c23493d288ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d611cec3de1e54091843019a0d02c23493d288ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d611cec3de1e54091843019a0d02c23493d288ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d611cec3de1e54091843019a0d02c23493d288ce/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bab9de71b45df56e3ad90aa817d7e23ea79d726d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab9de71b45df56e3ad90aa817d7e23ea79d726d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bab9de71b45df56e3ad90aa817d7e23ea79d726d"}], "stats": {"total": 54, "additions": 44, "deletions": 10}, "files": [{"sha": "ad978fd8d79f3010efdb4e381f1a9483fdec0286", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d611cec3de1e54091843019a0d02c23493d288ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d611cec3de1e54091843019a0d02c23493d288ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d611cec3de1e54091843019a0d02c23493d288ce", "patch": "@@ -1,3 +1,9 @@\n+2019-06-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90972\n+\t* tree-vect-stmts.c (vect_init_vector): Handle CONSTANT_CLASS_P\n+\tin common code, dealing with STRING_CST properly.\n+\n 2019-06-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90930"}, {"sha": "8a58f4891762f46be8e812e3ce00dbaeac790cdd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d611cec3de1e54091843019a0d02c23493d288ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d611cec3de1e54091843019a0d02c23493d288ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d611cec3de1e54091843019a0d02c23493d288ce", "patch": "@@ -1,3 +1,8 @@\n+2019-06-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90972\n+\t* gcc.dg/torture/pr90972.c: New testcase.\n+\n 2019-06-24  Martin Sebor  <msebor@redhat.com>\n \n \t* gcc.dg/Wfloat-equal-1.c: Adjust text of expected diagnostic."}, {"sha": "24f99b0ebb7d2095df219882a6edd8d5493d3bbc", "filename": "gcc/testsuite/gcc.dg/torture/pr90972.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d611cec3de1e54091843019a0d02c23493d288ce/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90972.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d611cec3de1e54091843019a0d02c23493d288ce/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90972.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90972.c?ref=d611cec3de1e54091843019a0d02c23493d288ce", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-mcpu=power8\" { target powerpc*-*-* } } */\n+\n+long f;\n+void a();\n+void *g()\n+{\n+  char h[] = {}, j[] = {}, k[] = {}, l[] = {}, m[] = {}, n[] = {}, o[] = {},\n+       q[] = {}, r[] = {};\n+  static const char i[] = {6, 0};\n+  const char *nops[] = {h, i, j, k, l, m, n, o, q, r};\n+  long s = 2;\n+  void *fill = a;\n+  char *p = fill;\n+  while (f) {\n+      void *b = p;\n+      const void *c = nops[1];\n+      long d = s, e = __builtin_object_size(b, 0);\n+      __builtin___memcpy_chk(b, c, d, e);\n+      p += s;\n+      f -= s;\n+  }\n+  return fill;\n+}"}, {"sha": "47da2953dc79087c84c3fdbb1e67442bf1568b63", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d611cec3de1e54091843019a0d02c23493d288ce/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d611cec3de1e54091843019a0d02c23493d288ce/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=d611cec3de1e54091843019a0d02c23493d288ce", "patch": "@@ -1481,20 +1481,19 @@ vect_init_vector (stmt_vec_info stmt_info, tree val, tree type,\n \t\t  val = new_temp;\n \t\t}\n \t    }\n-\t  else if (CONSTANT_CLASS_P (val))\n-\t    val = fold_convert (TREE_TYPE (type), val);\n \t  else\n \t    {\n-\t      new_temp = make_ssa_name (TREE_TYPE (type));\n+\t      gimple_seq stmts = NULL;\n \t      if (! INTEGRAL_TYPE_P (TREE_TYPE (val)))\n-\t\tinit_stmt = gimple_build_assign (new_temp,\n-\t\t\t\t\t\t fold_build1 (VIEW_CONVERT_EXPR,\n-\t\t\t\t\t\t\t      TREE_TYPE (type),\n-\t\t\t\t\t\t\t      val));\n+\t\tval = gimple_build (&stmts, VIEW_CONVERT_EXPR,\n+\t\t\t\t    TREE_TYPE (type), val);\n \t      else\n-\t\tinit_stmt = gimple_build_assign (new_temp, NOP_EXPR, val);\n-\t      vect_init_vector_1 (stmt_info, init_stmt, gsi);\n-\t      val = new_temp;\n+\t\t/* ???  Condition vectorization expects us to do\n+\t\t   promotion of invariant/external defs.  */\n+\t\tval = gimple_convert (&stmts, TREE_TYPE (type), val);\n+\t      for (gimple_stmt_iterator gsi2 = gsi_start (stmts);\n+\t\t   !gsi_end_p (gsi2); gsi_next (&gsi2))\n+\t\tvect_init_vector_1 (stmt_info, gsi_stmt (gsi2), gsi);\n \t    }\n \t}\n       val = build_vector_from_val (type, val);"}]}