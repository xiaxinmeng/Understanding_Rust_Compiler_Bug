{"sha": "b10071c5cf133fdfbcf75a0a5d4a495ce718c269", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEwMDcxYzVjZjEzM2ZkZmJjZjc1YTBhNWQ0YTQ5NWNlNzE4YzI2OQ==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2009-10-15T14:36:40Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-10-15T14:36:40Z"}, "message": "lto-plugin.c (resolution_file): New.\n\n2009-10-15  Rafael Avila de Espindola  <espindola@google.com>\n\n\t* lto-plugin.c (resolution_file): New.\n\t(free_1): Update comment.\n\t(free_2): Free resolution_file.\n\t(write_resolution): Write resolution to specified file. Use the\n\tsyms array from the symbol table.\n\t(all_symbols_read_handler): Delay call to free_1 past call to\n\twrite_resolution.\n\t(process_option): Add a -resolution option.\n\nFrom-SVN: r152846", "tree": {"sha": "c58dd172d671e9b033f89a6f198b951bb014ba13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c58dd172d671e9b033f89a6f198b951bb014ba13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b10071c5cf133fdfbcf75a0a5d4a495ce718c269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b10071c5cf133fdfbcf75a0a5d4a495ce718c269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b10071c5cf133fdfbcf75a0a5d4a495ce718c269", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b10071c5cf133fdfbcf75a0a5d4a495ce718c269/comments", "author": null, "committer": null, "parents": [{"sha": "dda441650817aec18d07a390fec35ce24a516ee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda441650817aec18d07a390fec35ce24a516ee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dda441650817aec18d07a390fec35ce24a516ee4"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "c8616fa2938d00d33a1a4fa3ed1b05aa7e163566", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b10071c5cf133fdfbcf75a0a5d4a495ce718c269/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b10071c5cf133fdfbcf75a0a5d4a495ce718c269/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=b10071c5cf133fdfbcf75a0a5d4a495ce718c269", "patch": "@@ -1,3 +1,14 @@\n+2009-10-15  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* lto-plugin.c (resolution_file): New.\n+\t(free_1): Update comment.\n+\t(free_2): Free resolution_file.\n+\t(write_resolution): Write resolution to specified file. Use the\n+\tsyms array from the symbol table.\n+\t(all_symbols_read_handler): Delay call to free_1 past call to\n+\twrite_resolution.\n+\t(process_option): Add a -resolution option.\n+\n 2009-10-13  Richard Guenther  <rguenther@suse.de>\n \n \t* Makefile.am (liblto_plugin_la_LIBADD): Link against the"}, {"sha": "ae484a9efab2271267192677ce95cbbdd7bc653c", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b10071c5cf133fdfbcf75a0a5d4a495ce718c269/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b10071c5cf133fdfbcf75a0a5d4a495ce718c269/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=b10071c5cf133fdfbcf75a0a5d4a495ce718c269", "patch": "@@ -97,6 +97,7 @@ static unsigned int num_pass_through_items;\n \n static bool debug;\n static bool nop;\n+static char *resolution_file = NULL;\n \n /* Parse an entry of the IL symbol table. The data to be parsed is pointed\n    by P and the result is written in ENTRY. The slot number is stored in SLOT.\n@@ -228,7 +229,8 @@ translate (Elf_Data *symtab, struct plugin_symtab *out)\n   out->slots = slots;\n }\n \n-/* Free all memory that is no longer needed at the beginning of all_symbols_read. */\n+/* Free all memory that is no longer needed after writing the symbol\n+   resolution. */\n \n static void\n free_1 (void)\n@@ -275,6 +277,12 @@ free_2 (void)\n \n   free (temp_obj_dir_name);\n   temp_obj_dir_name = NULL;\n+\n+  if (resolution_file)\n+    {\n+      free (resolution_file);\n+      resolution_file = NULL;\n+    }\n }\n \n /*  Writes the relocations to disk. */\n@@ -284,21 +292,20 @@ write_resolution (void)\n {\n   unsigned int i;\n   FILE *f;\n-  /* FIXME: Disabled for now since we are not using the resolution file. */\n-  return;\n \n+  if (!resolution_file)\n+    return;\n \n-  /* FIXME: This should be a temporary file. */\n-  f = fopen (\"resolution\", \"w\");\n+  f = fopen (resolution_file, \"w\");\n+  assert (f);\n \n   fprintf (f, \"%d\\n\", num_claimed_files);\n \n   for (i = 0; i < num_claimed_files; i++)\n     {\n       struct plugin_file_info *info = &claimed_files[i];\n       struct plugin_symtab *symtab = &info->symtab;\n-      struct ld_plugin_symbol *syms = calloc (symtab->nsyms,\n-\t\t\t\t\t      sizeof (struct ld_plugin_symbol));\n+      struct ld_plugin_symbol *syms = symtab->syms;\n       unsigned j;\n \n       assert (syms);\n@@ -312,7 +319,6 @@ write_resolution (void)\n \t  unsigned int resolution = syms[j].resolution;\n \t  fprintf (f, \"%d %s\\n\", slot, lto_resolution_str[resolution]);\n \t}\n-      free (syms);\n     }\n   fclose (f);\n }\n@@ -434,8 +440,6 @@ all_symbols_read_handler (void)\n   if (num_claimed_files == 0)\n     return LDPS_OK;\n \n-  free_1 ();\n-\n   if (nop)\n     {\n       use_original_files ();\n@@ -448,6 +452,8 @@ all_symbols_read_handler (void)\n \n   write_resolution ();\n \n+  free_1 ();\n+\n   for (i = 0; i < lto_wrapper_num_args; i++)\n     *lto_arg_ptr++ = lto_wrapper_argv[i];\n \n@@ -608,6 +614,10 @@ process_option (const char *option)\n     debug = 1;\n   else if (strcmp (option, \"-nop\") == 0)\n     nop = 1;\n+  else if (!strncmp (option, \"-resolution=\", strlen(\"-resolution=\")))\n+    {\n+      resolution_file = strdup (option + strlen(\"-resolution=\"));\n+    }\n   else if (!strncmp (option, \"-pass-through=\", strlen(\"-pass-through=\")))\n     {\n       num_pass_through_items++;"}]}