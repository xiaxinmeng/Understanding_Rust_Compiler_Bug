{"sha": "c39603389e209f44cba9006f2546bb6e51ff2ec5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM5NjAzMzg5ZTIwOWY0NGNiYTkwMDZmMjU0NmJiNmU1MWZmMmVjNQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-07-22T18:03:47Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-07-22T18:03:47Z"}, "message": "URLEncoder.java (encode(String)): Use platform default encoding.\n\n\t* java/net/URLEncoder.java (encode(String)): Use platform default\n\tencoding.\n\t(encode(String,String)): Convert to 2-digit upper-case hex\n\tnumber.\n\t(hex): New field.\n\nFrom-SVN: r69678", "tree": {"sha": "7c8d07d8b9a81404f77eabdd2d2018b1c23f600e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c8d07d8b9a81404f77eabdd2d2018b1c23f600e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c39603389e209f44cba9006f2546bb6e51ff2ec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c39603389e209f44cba9006f2546bb6e51ff2ec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c39603389e209f44cba9006f2546bb6e51ff2ec5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c39603389e209f44cba9006f2546bb6e51ff2ec5/comments", "author": null, "committer": null, "parents": [{"sha": "3988d1795135a31523dbbd0605ceecae16f2b718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3988d1795135a31523dbbd0605ceecae16f2b718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3988d1795135a31523dbbd0605ceecae16f2b718"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "66e3f6662ed1e71623281f882b95000ebd7f7a12", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c39603389e209f44cba9006f2546bb6e51ff2ec5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c39603389e209f44cba9006f2546bb6e51ff2ec5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c39603389e209f44cba9006f2546bb6e51ff2ec5", "patch": "@@ -1,3 +1,11 @@\n+2003-07-22  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/net/URLEncoder.java (encode(String)): Use platform default\n+\tencoding.\n+\t(encode(String,String)): Convert to 2-digit upper-case hex\n+\tnumber.\n+\t(hex): New field.\n+\n 2003-07-21  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c"}, {"sha": "24d0d25b6d8a8e24ccc5b1500e2b01bdbd60f026", "filename": "libjava/java/net/URLEncoder.java", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c39603389e209f44cba9006f2546bb6e51ff2ec5/libjava%2Fjava%2Fnet%2FURLEncoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c39603389e209f44cba9006f2546bb6e51ff2ec5/libjava%2Fjava%2Fnet%2FURLEncoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLEncoder.java?ref=c39603389e209f44cba9006f2546bb6e51ff2ec5", "patch": "@@ -1,5 +1,5 @@\n /* URLEncoder.java -- Class to convert strings to a properly encoded URL\n-   Copyright (C) 1998, 1999, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -53,7 +53,8 @@\n   * US alphabet remain as is, the space character (' ') is replaced with\n   * '+' sign, and all other characters are converted to a \"%XX\" format\n   * where XX is the hexadecimal representation of that character in a\n-  * certain encoding (by default \"UTF-8\").\n+  * certain encoding (by default, the platform encoding, though the\n+  * standard is \"UTF-8\").\n   * <p>\n   * This method is very useful for encoding strings to be sent to CGI scripts\n   *\n@@ -65,8 +66,9 @@\n {\n   /**\n    * This method translates the passed in string into x-www-form-urlencoded\n-   * format using the standard \"UTF-8\" character encoding to hex-encode the\n-   * unsafe characters.\n+   * format using the default encoding.  The standard encoding is\n+   * \"UTF-8\", and the two-argument form of this method should be used\n+   * instead.\n    *\n    * @param s The String to convert\n    *\n@@ -78,11 +80,13 @@ public static String encode(String s)\n   {\n     try\n       {\n-        return encode(s, \"UTF-8\");\n+\t// We default to 8859_1 for compatibility with the same\n+\t// default elsewhere in the library.\n+        return encode(s, System.getProperty(\"file.encoding\", \"8859_1\"));\n       }\n     catch (UnsupportedEncodingException uee)\n       {\n-        // Should never happen since UTF-8 should always be supported\n+        // Should never happen since default should always be supported\n \treturn s;\n       }\n   }\n@@ -139,7 +143,9 @@ else if (s.charAt(i) == ' ')\n \t  for (int j = 0; j < bytes.length; j++)\n \t    {\n \t      result.append('%');\n-\t      result.append(Integer.toHexString(((int) bytes[j]) & 0xFF));\n+\t      int val = bytes[j];\n+\t      result.append(hex.charAt((val & 0xf0) >> 4));\n+\t      result.append(hex.charAt(val & 0x0f));\n \t    }\n \t}\n       start = i;\n@@ -166,4 +172,11 @@ private static boolean isSafe(char c)\n    */\n   private URLEncoder() { }\n \n+  /**\n+   * Used to convert to hex.  We don't use Integer.toHexString, since\n+   * it converts to lower case (and the Sun docs pretty clearly\n+   * specify upper case here), and because it doesn't provide a\n+   * leading 0.\n+   */\n+  private static final String hex = \"0123456789ABCDEF\";\n } // class URLEncoder"}]}