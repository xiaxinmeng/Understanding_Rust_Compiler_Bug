{"sha": "9809a3624d899076cd7b3f756941ffba81dee7d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgwOWEzNjI0ZDg5OTA3NmNkN2IzZjc1Njk0MWZmYmE4MWRlZTdkOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-02-21T22:14:23Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-02-21T22:14:23Z"}, "message": "cfgrtl.c (commit_edge_insertions): Call find_many_sub_basic_block only when some code has been emitted.\n\n\t* cfgrtl.c (commit_edge_insertions):  Call\n\tfind_many_sub_basic_block only when some code has been emitted.\n\t(commit_edge_insertions_watch_calls): Bring into sync with\n\tcommit_edge_insertions\n\nFrom-SVN: r63248", "tree": {"sha": "783112e221f5003735edc015c9910f43ecb7852d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783112e221f5003735edc015c9910f43ecb7852d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9809a3624d899076cd7b3f756941ffba81dee7d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9809a3624d899076cd7b3f756941ffba81dee7d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9809a3624d899076cd7b3f756941ffba81dee7d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9809a3624d899076cd7b3f756941ffba81dee7d8/comments", "author": null, "committer": null, "parents": [{"sha": "19df1edfbe0c64fb1664d65a418fb757de9fb53c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19df1edfbe0c64fb1664d65a418fb757de9fb53c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19df1edfbe0c64fb1664d65a418fb757de9fb53c"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "cc10d78b001b8f5a23f501327fb1f838a695a44b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9809a3624d899076cd7b3f756941ffba81dee7d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9809a3624d899076cd7b3f756941ffba81dee7d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9809a3624d899076cd7b3f756941ffba81dee7d8", "patch": "@@ -1,3 +1,10 @@\n+Fri Feb 21 23:10:13 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfgrtl.c (commit_edge_insertions):  Call\n+\tfind_many_sub_basic_block only when some code has been emitted.\n+\t(commit_edge_insertions_watch_calls): Bring into sync with\n+\tcommit_edge_insertions\n+\n Fri Feb 21 20:41:29 2003  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.h (OVERRIDE_OPTIONS): Fix code that clears 'e' register class."}, {"sha": "77290a9b80677577e84f4f8876bf0587ec9df78c", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9809a3624d899076cd7b3f756941ffba81dee7d8/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9809a3624d899076cd7b3f756941ffba81dee7d8/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=9809a3624d899076cd7b3f756941ffba81dee7d8", "patch": "@@ -1460,6 +1460,7 @@ commit_edge_insertions ()\n {\n   basic_block bb;\n   sbitmap blocks;\n+  bool changed = false;\n \n #ifdef ENABLE_CHECKING\n   verify_flow_info ();\n@@ -1473,10 +1474,16 @@ commit_edge_insertions ()\n \t{\n \t  next = e->succ_next;\n \t  if (e->insns)\n-\t    commit_one_edge_insertion (e, false);\n+\t    {\n+\t       changed = true;\n+\t       commit_one_edge_insertion (e, false);\n+\t    }\n \t}\n     }\n \n+  if (!changed)\n+    return;\n+\n   blocks = sbitmap_alloc (last_basic_block);\n   sbitmap_zero (blocks);\n   FOR_EACH_BB (bb)\n@@ -1500,6 +1507,8 @@ void\n commit_edge_insertions_watch_calls ()\n {\n   basic_block bb;\n+  sbitmap blocks;\n+  bool changed = false;\n \n #ifdef ENABLE_CHECKING\n   verify_flow_info ();\n@@ -1513,9 +1522,30 @@ commit_edge_insertions_watch_calls ()\n \t{\n \t  next = e->succ_next;\n \t  if (e->insns)\n-\t    commit_one_edge_insertion (e, true);\n+\t    {\n+\t      changed = true;\n+\t      commit_one_edge_insertion (e, true);\n+\t    }\n \t}\n     }\n+\n+  if (!changed)\n+    return;\n+\n+  blocks = sbitmap_alloc (last_basic_block);\n+  sbitmap_zero (blocks);\n+  FOR_EACH_BB (bb)\n+    if (bb->aux)\n+      {\n+        SET_BIT (blocks, bb->index);\n+\t/* Check for forgotten bb->aux values before commit_edge_insertions\n+\t   call.  */\n+\tif (bb->aux != &bb->aux)\n+\t  abort ();\n+\tbb->aux = NULL;\n+      }\n+  find_many_sub_basic_blocks (blocks);\n+  sbitmap_free (blocks);\n }\n \f\n /* Print out one basic block with live information at start and end.  */"}]}