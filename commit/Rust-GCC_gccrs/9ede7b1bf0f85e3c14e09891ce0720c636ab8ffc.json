{"sha": "9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVkZTdiMWJmMGY4NWUzYzE0ZTA5ODkxY2UwNzIwYzYzNmFiOGZmYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-01T08:11:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-01T08:11:56Z"}, "message": "re PR sanitizer/81275 (-fsanitize=thread produce incorrect -Wreturn-type warning)\n\n\tPR sanitizer/81275\n\t* tree-cfg.c (group_case_labels_stmt): Don't optimize away\n\tC++ FE implicitly added __builtin_unreachable () until -Wreturn-type\n\tis diagnosed.\n\n\t* c-c++-common/tsan/pr81275.c: Remove dg-skip-if.\n\nFrom-SVN: r255296", "tree": {"sha": "5a2552079fa390068f7264ee3b5120c89d9521de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a2552079fa390068f7264ee3b5120c89d9521de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "770cf505a1c1676f6d4c6968ddd05c5ea0f3af27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/770cf505a1c1676f6d4c6968ddd05c5ea0f3af27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/770cf505a1c1676f6d4c6968ddd05c5ea0f3af27"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "5ab9f6fab5f5176a6fb19952c2fe7bfd1ee06324", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc", "patch": "@@ -1,5 +1,10 @@\n 2017-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR sanitizer/81275\n+\t* tree-cfg.c (group_case_labels_stmt): Don't optimize away\n+\tC++ FE implicitly added __builtin_unreachable () until -Wreturn-type\n+\tis diagnosed.\n+\n \tPR sanitizer/83219\n \t* tree-cfg.c: Include asan.h.\n \t(gimple_seq_unreachable_p): Return false for -fsanitize=unreachable."}, {"sha": "e41a29ddb8fdfc145716fc5388223a45cec27171", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc", "patch": "@@ -1,3 +1,8 @@\n+2017-12-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/81275\n+\t* c-c++-common/tsan/pr81275.c: Remove dg-skip-if.\n+\n 2017-12-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/83224"}, {"sha": "024b0c72f2c21fd34d90aabbd3f9027ffe21397e", "filename": "gcc/testsuite/c-c++-common/tsan/pr81275.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fpr81275.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fpr81275.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fpr81275.c?ref=9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc", "patch": "@@ -1,7 +1,6 @@\n /* PR sanitizer/81275 */\n /* { dg-do compile } */\n /* { dg-options \"-Wreturn-type -fsanitize=thread\" } */\n-/* { dg-skip-if \"\" { c++ } { \"*\" } { \"-O0\" } } */\n \n int\n f1 (int a, int b)"}, {"sha": "4fb4a834b207f2ca49411d34267b95a735177268", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=9ede7b1bf0f85e3c14e09891ce0720c636ab8ffc", "patch": "@@ -1750,7 +1750,14 @@ group_case_labels_stmt (gswitch *stmt)\n \n       /* Discard cases that have an unreachable destination block.  */\n       if (EDGE_COUNT (base_bb->succs) == 0\n-\t  && gimple_seq_unreachable_p (bb_seq (base_bb)))\n+\t  && gimple_seq_unreachable_p (bb_seq (base_bb))\n+\t  /* Don't optimize this if __builtin_unreachable () is the\n+\t     implicitly added one by the C++ FE too early, before\n+\t     -Wreturn-type can be diagnosed.  We'll optimize it later\n+\t     during switchconv pass or any other cfg cleanup.  */\n+\t  && (gimple_in_ssa_p (cfun)\n+\t      || (LOCATION_LOCUS (gimple_location (last_stmt (base_bb)))\n+\t\t  != BUILTINS_LOCATION)))\n \t{\n \t  edge base_edge = find_edge (gimple_bb (stmt), base_bb);\n \t  if (base_edge != NULL)"}]}