{"sha": "c0ed6afef7897f32dc199da9a5430664fcbb61bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBlZDZhZmVmNzg5N2YzMmRjMTk5ZGE5YTU0MzA2NjRmY2JiNjFiYg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-09-28T20:59:15Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-09-28T23:52:14Z"}, "message": "analyzer: add some missing FINAL OVERRIDEs\n\nSpotted by cppcheck.\n\ngcc/analyzer/ChangeLog:\n\t* region-model.h (binop_svalue::dyn_cast_binop_svalue): Remove\n\tredundant \"virtual\".  Add FINAL OVERRIDE.\n\t(widening_svalue::dyn_cast_widening_svalue): Add FINAL OVERRIDE.\n\t(compound_svalue::dyn_cast_compound_svalue): Likewise.\n\t(conjured_svalue::dyn_cast_conjured_svalue): Likewise.", "tree": {"sha": "7bec42682978b44434d09cd3c011d421cead0ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bec42682978b44434d09cd3c011d421cead0ee0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0ed6afef7897f32dc199da9a5430664fcbb61bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ed6afef7897f32dc199da9a5430664fcbb61bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0ed6afef7897f32dc199da9a5430664fcbb61bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ed6afef7897f32dc199da9a5430664fcbb61bb/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20d16d61dd22a9bfb66d5c4a383d193037e8f16d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d16d61dd22a9bfb66d5c4a383d193037e8f16d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d16d61dd22a9bfb66d5c4a383d193037e8f16d"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "cfeac8d695163b9f73d794c7adf48bc175a1322a", "filename": "gcc/analyzer/region-model.h", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ed6afef7897f32dc199da9a5430664fcbb61bb/gcc%2Fanalyzer%2Fregion-model.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ed6afef7897f32dc199da9a5430664fcbb61bb/gcc%2Fanalyzer%2Fregion-model.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.h?ref=c0ed6afef7897f32dc199da9a5430664fcbb61bb", "patch": "@@ -806,7 +806,10 @@ class binop_svalue : public svalue\n   }\n \n   enum svalue_kind get_kind () const FINAL OVERRIDE { return SK_BINOP; }\n-  virtual const binop_svalue *dyn_cast_binop_svalue () const { return this; }\n+  const binop_svalue *dyn_cast_binop_svalue () const FINAL OVERRIDE\n+  {\n+    return this;\n+  }\n \n   void dump_to_pp (pretty_printer *pp, bool simple) const FINAL OVERRIDE;\n   void accept (visitor *v) const FINAL OVERRIDE;\n@@ -1067,7 +1070,10 @@ class widening_svalue : public svalue\n   }\n \n   enum svalue_kind get_kind () const FINAL OVERRIDE { return SK_WIDENING; }\n-  const widening_svalue *dyn_cast_widening_svalue () const { return this; }\n+  const widening_svalue *dyn_cast_widening_svalue () const FINAL OVERRIDE\n+  {\n+    return this;\n+  }\n \n   void dump_to_pp (pretty_printer *pp, bool simple) const FINAL OVERRIDE;\n   void accept (visitor *v) const FINAL OVERRIDE;\n@@ -1158,7 +1164,10 @@ class compound_svalue : public svalue\n   compound_svalue (tree type, const binding_map &map);\n \n   enum svalue_kind get_kind () const FINAL OVERRIDE { return SK_COMPOUND; }\n-  const compound_svalue *dyn_cast_compound_svalue () const { return this; }\n+  const compound_svalue *dyn_cast_compound_svalue () const FINAL OVERRIDE\n+  {\n+    return this;\n+  }\n \n   void dump_to_pp (pretty_printer *pp, bool simple) const FINAL OVERRIDE;\n   void accept (visitor *v) const FINAL OVERRIDE;\n@@ -1263,7 +1272,10 @@ class conjured_svalue : public svalue\n   }\n \n   enum svalue_kind get_kind () const FINAL OVERRIDE { return SK_CONJURED; }\n-  const conjured_svalue *dyn_cast_conjured_svalue () const { return this; }\n+  const conjured_svalue *dyn_cast_conjured_svalue () const FINAL OVERRIDE\n+  {\n+    return this;\n+  }\n \n   void dump_to_pp (pretty_printer *pp, bool simple) const FINAL OVERRIDE;\n   void accept (visitor *v) const FINAL OVERRIDE;"}]}