{"sha": "567b3b825767d85837c2f6e12bbe70d45a664635", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY3YjNiODI1NzY3ZDg1ODM3YzJmNmUxMmJiZTcwZDQ1YTY2NDYzNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-03-22T07:21:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-03-22T07:21:00Z"}, "message": "predicates.md (const_call_insn_operand): Allow direct calls to locally-defined functions if TARGET_ABSOLUTE_ABICALLS.\n\n\t* config/mips/predicates.md (const_call_insn_operand): Allow direct\n\tcalls to locally-defined functions if TARGET_ABSOLUTE_ABICALLS.\n\t* config/mips/mips.md (jal_macro): Test TARGET_ABSOLUTE_ABICALLS.\n\tUse TARGET_OLDABI instead of !TARGET_NEWABI.\n\t(loadgp): Use mips_current_loadgp_style.\n\t(loadgp_noshared): New pattern.\n\t(sibcall_internal): Use MIPS_CALL.\n\t(sibcall_value_internal): Likewise.\n\t(sibcall_value_multiple_internal): Likewise.\n\t(call_internal): Likewise.\n\t(call_value_internal): Likewise.\n\t(call_value_multiple_internal): Likewise.\n\t(call_split): Use MIPS_CALL and add an 'S' constraint.\n\t(call_value_split): Likewise.\n\t(call_value_multiple_split): Likewise.\n\t* config/mips/mips.opt (-mabicalls): Tweak docstring.\n\t(-mshared): New option.\n\t* config/mips/mips-protos.h (mips_loadgp_style): New enum.\n\t(mips_current_loadgp_style): Declare.\n\t* config/mips/mips.c (mips_classify_symbol): Avoid using\n\tSYMBOL_GOT_LOCAL if TARGET_ABSOLUTE_ABICALLS.  Use SYMBOL_GENERAL\n\trather than SYMBOL_GOT_GLOBAL for locally-binding symbols if\n\tTARGET_ABSOLUTE_ABICALLS.\n\t(override_options): Adjust comments.  Improve the warning that is\n\tissued when -mabicalls and -G are used together.\n\t(mips_file_start): Remove comment.\n\t(mips_current_loadgp_style): New function.\n\t(mips_gnu_local_gp): New variable.\n\t(mips_emit_loadgp): Use mips_current_loadgp_style.  Handle\n\tLOADGP_ABSOLUTE.\n\t(mips_output_function_prologue): Use mips_current_laodgp_style.\n\t(mips_expand_prologue): Call mips_emit_loadgp before emitting\n\tthe cprestore instruction.\n\t(mips_extra_live_on_entry): Fix reversed test.  Don't make $25\n\tlive for TARGET_ABSOLUTE_ABICALLS.\n\t* config/mips/mips.h (TARGET_ABSOLUTE_ABICALLS): New macro.\n\t(ASM_SPEC): Pass down -mshared and -mno-shared.\n\t(MIPS_CALL): New macro.\n\t* config/mips/netbsd.h (TARGET_OS_CPP_BUILTINS): Remove __ABICALLS__\n\tdefinition.\n\t* doc/invoke.texi (-mabicalls): Update documentation.\n\t(-mshared): Document.\n\nFrom-SVN: r112279", "tree": {"sha": "5f4e2cd734a0c944823b6faa4c2e928ce4a0a32f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f4e2cd734a0c944823b6faa4c2e928ce4a0a32f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/567b3b825767d85837c2f6e12bbe70d45a664635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567b3b825767d85837c2f6e12bbe70d45a664635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/567b3b825767d85837c2f6e12bbe70d45a664635", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567b3b825767d85837c2f6e12bbe70d45a664635/comments", "author": null, "committer": null, "parents": [{"sha": "0c5a42a660c636a39d6cfb73e0b2a1bc6552509b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5a42a660c636a39d6cfb73e0b2a1bc6552509b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c5a42a660c636a39d6cfb73e0b2a1bc6552509b"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "1a26929c21f91fd389b5d3529622b9c7b0977e29", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567b3b825767d85837c2f6e12bbe70d45a664635/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567b3b825767d85837c2f6e12bbe70d45a664635/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=567b3b825767d85837c2f6e12bbe70d45a664635", "patch": "@@ -596,9 +596,9 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-EL  -EB  -march=@var{arch}  -mtune=@var{arch} @gol\n -mips1  -mips2  -mips3  -mips4  -mips32  -mips32r2  -mips64 @gol\n -mips16  -mno-mips16  -mabi=@var{abi}  -mabicalls  -mno-abicalls @gol\n--mxgot  -mno-xgot  -mgp32  -mgp64  -mfp32  -mfp64 @gol\n--mhard-float  -msoft-float  -msingle-float  -mdouble-float @gol\n--mdsp  -mpaired-single  -mips3d @gol\n+-mshared  -mno-shared  -mxgot  -mno-xgot  -mgp32  -mgp64  @gol\n+-mfp32  -mfp64  -mhard-float  -msoft-float  @gol\n+-msingle-float  -mdouble-float  -mdsp  -mpaired-single  -mips3d @gol\n -mlong64  -mlong32  -msym32  -mno-sym32 @gol\n -G@var{num}  -membedded-data  -mno-embedded-data @gol\n -muninit-const-in-rodata  -mno-uninit-const-in-rodata @gol\n@@ -10464,8 +10464,29 @@ For information about the O64 ABI, see\n @itemx -mno-abicalls\n @opindex mabicalls\n @opindex mno-abicalls\n-Generate (do not generate) SVR4-style position-independent code.\n-@option{-mabicalls} is the default for SVR4-based systems.\n+Generate (do not generate) code that is suitable for SVR4-style\n+dynamic objects.  @option{-mabicalls} is the default for SVR4-based\n+systems.\n+\n+@item -mshared\n+@itemx -mno-shared\n+Generate (do not generate) code that is fully position-independent.\n+This option only affects @option{-mabicalls}.\n+\n+All @option{-mabicalls} code has traditionally been position-independent,\n+regardless of options like @option{-fPIC} and @option{-fpic}.  However,\n+as an extension, the GNU toolchain allows executables to use absolute\n+accesses for locally-binding symbols.  It can also use shorter GP\n+initialization sequences and generate direct calls to locally-defined\n+functions.  This mode is selected by @option{-mno-shared}.\n+\n+@option{-mno-shared} depends on binutils 2.16 or higher and generates\n+objects that can only be linked by the GNU linker.  However, the option\n+does not affect the ABI of the final executable; it only affects the ABI\n+of relocatable objects.  Using @option{-mno-shared} will generally make\n+executables both smaller and quicker.\n+\n+@option{-mshared} is the default.\n \n @item -mxgot\n @itemx -mno-xgot"}]}