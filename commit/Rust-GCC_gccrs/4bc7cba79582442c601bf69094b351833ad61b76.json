{"sha": "4bc7cba79582442c601bf69094b351833ad61b76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJjN2NiYTc5NTgyNDQyYzYwMWJmNjkwOTRiMzUxODMzYWQ2MWI3Ng==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-09-29T00:49:56Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-09-29T00:49:56Z"}, "message": "Index: ChangeLog\n2005-09-28  Geoffrey Keating  <geoffk@apple.com>\n\n\t* Makefile.tpl (BASE_TARGET_EXPORTS): Add LIPO, STRIP.\n\t(LIPO_FOR_TARGET): New.\n\t(CONFIGURED_LIPO_FOR_TARGET): New.\n\t(USUAL_LIPO_FOR_TARGET): New.\n\t(STRIP_FOR_TARGET): New.\n\t(CONFIGURED_STRIP_FOR_TARGET): New.\n\t(USUAL_STRIP_FOR_TARGET): New.\n\t* Makefile.def (flags_to_pass): Add LIPO_FOR_TARGET and\n\tSTRIP_FOR_TARGET.\n\t* configure.in: Set LIPO_FOR_TARGET, STRIP_FOR_TARGET,\n\tCONFIGURED_LIPO_FOR_TARGET, CONFIGURED_STRIP_FOR_TARGET.\n\t* Makefile.in: Regenerate.\n\t* configure.in: Regenerate.\n\nIndex: gcc/ChangeLog\n2005-09-28  Geoffrey Keating  <geoffk@apple.com>\n\n\t* Makefile.in: Export LIPO_FOR_TARGET, STRIP_FOR_TARGET.\n\t(stage1-start): Delete old libgcc and libunwind before moving\n\tanything into the stage directory.\n\t(stage2-start): Likewise.\n\t(stage3-start): Likewise.\n\t(stage4-start): Likewise.\n\t(stageprofile-start): Likewise.\n\t(stagefeedback-start): Likewise.\n\t* config.gcc (*-*-darwin*): Automatically use CPU-specific darwin.h\n\theader in tm_file and CPU-specific t-darwin in tmake_file.\n\t(i[34567]86-*-darwin*): Don't change tm_file.\n\t(powerpc-*-darwin*): Don't change tm_file or tmake_file.\n\t* config/darwin.h (REAL_LIBGCC_SPEC): Rewrite to use proper libgcc\n\tshared library stub for target OS version.\n\t* config/t-slibgcc-darwin (SHLIB_SOLINK): Delete.\n\t(SHLIB_LINK): Don't make SHLIB_SOLINK.\n\t(SHLIB_INSTALL): Don't install SHLIB_SOLINK.\n\t(libgcc_s.%.dylib): New.\n\t(LIBGCC): Define.\n\t(install-darwin-libgcc-stubs): New.\n\t(INSTALL_LIBGCC): New append.\n\t* config/i386/darwin-libgcc.10.4.ver: New.\n\t* config/i386/darwin-libgcc.10.5.ver: New.\n\t* config/i386/t-darwin: New.\n\t* config/rs6000/darwin-libgcc.10.4.ver: New.\n\t* config/rs6000/darwin-libgcc.10.5.ver: New.\n\t* config/rs6000/darwin.h (REAL_LIBGCC_SPEC): Delete.\n\t* config/rs6000/t-darwin (SHLIB_VERPFX): Define.\n\nFrom-SVN: r104756", "tree": {"sha": "b3ba2a3bf1936c03e1ad07b85e05b0725cba086c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3ba2a3bf1936c03e1ad07b85e05b0725cba086c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bc7cba79582442c601bf69094b351833ad61b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc7cba79582442c601bf69094b351833ad61b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bc7cba79582442c601bf69094b351833ad61b76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc7cba79582442c601bf69094b351833ad61b76/comments", "author": null, "committer": null, "parents": [{"sha": "23ed23848b20d7500265e1a7c960ad01553cbaaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ed23848b20d7500265e1a7c960ad01553cbaaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ed23848b20d7500265e1a7c960ad01553cbaaa"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "6650bb54b8985f010c3fcbbe8da5cb4eb71345d4", "filename": "gcc/config/t-slibgcc-darwin", "status": "modified", "additions": 39, "deletions": 12, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc7cba79582442c601bf69094b351833ad61b76/gcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc7cba79582442c601bf69094b351833ad61b76/gcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-darwin?ref=4bc7cba79582442c601bf69094b351833ad61b76", "patch": "@@ -3,42 +3,69 @@ SHLIB_SOVERSION = 1\n SHLIB_VERSTRING = -compatibility_version $(SHLIB_SOVERSION) -current_version $(SHLIB_SOVERSION).0\n SHLIB_EXT = .dylib\n SHLIB_SUFFIX = `if test @multilib_dir@ != . ; then echo _@multilib_dir@ ; fi`\n-SHLIB_SOLINK = @shlib_base_name@$(SHLIB_SUFFIX)$(SHLIB_EXT)\n SHLIB_SONAME = @shlib_base_name@$(SHLIB_SUFFIX).$(SHLIB_SOVERSION)$(SHLIB_EXT)\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n SHLIB_DIR = @multilib_dir@\n \n # Darwin only searches in /usr/lib for shared libraries, not in subdirectories,\n # so the libgcc variants have different names not different locations.\n-\n+# Note that this version is used for the loader, not the linker; the linker\n+# uses the stub versions named by $(LIBGCC).\n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -dynamiclib -nodefaultlibs \\\n \t-Wl,-install_name,$(slibdir)/$(SHLIB_SONAME) \\\n \t-Wl,-flat_namespace -o $(SHLIB_SONAME).tmp \\\n \t-Wl,-exported_symbols_list,$(SHLIB_MAP) \\\n \t$(SHLIB_VERSTRING) \\\n \t@multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\trm -f $(SHLIB_SOLINK) $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n \tif [ -f $(SHLIB_SONAME) ]; then \\\n \t  mv -f $(SHLIB_SONAME) $(SHLIB_SONAME).backup; \\\n \telse true; fi && \\\n-\tmv $(SHLIB_SONAME).tmp $(SHLIB_SONAME) && \\\n-\t$(LN_S) $(SHLIB_SONAME) $(SHLIB_SOLINK) && \\\n-\tif [ $(SHLIB_DIR) != . ] ; then \\\n-\t  $(LN_S) `pwd`/$(SHLIB_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK) ; \\\n-\telse true; fi\n+\tmv $(SHLIB_SONAME).tmp $(SHLIB_SONAME)\n+\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n SHLIB_INSTALL = \\\n \t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir); \\\n \t$(INSTALL_DATA) $(SHLIB_SONAME) \\\n-\t  $$(DESTDIR)$$(slibdir)/$(SHLIB_SONAME); \\\n-\trm -f $$(DESTDIR)$$(slibdir)/$(SHLIB_SOLINK); \\\n-\t$(LN_S) $(SHLIB_SONAME) \\\n-\t  $$(DESTDIR)$$(slibdir)/$(SHLIB_SOLINK)\n+\t  $$(DESTDIR)$$(slibdir)/$(SHLIB_SONAME)\n+\n SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n SHLIB_MKMAP_OPTS = -v leading_underscore=1\n SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver\n \n # Must use a different directive for hidden visibility in assembly sources.\n ASM_HIDDEN_OP = .private_extern\n+\n+# In order to support -mmacosx-version-min, you need to have multiple\n+# different libgcc_s libraries that actually get linked against, one for\n+# each system version supported.  They are 'stub' libraries that\n+# contain no code, just a list of exported symbols.\n+# The actual use of the libraries is controlled by REAL_LIBGCC_SPEC.\n+# \n+# This assumes only one level of multilibs.  It also assumes each multilib\n+# corresponds to a different architecture.\n+libgcc_s.%.dylib : $(SHLIB_VERPFX).%.ver libgcc.a\n+\tfor mlib in '' $(MULTILIB_DIRNAMES:%=_%) ; do \\\n+\t  $(STRIP_FOR_TARGET) -o $(@)_T$${mlib} \\\n+\t    -s $(SHLIB_VERPFX).$(*).ver -c -u \\\n+\t    libgcc_s$${mlib}.$(SHLIB_SOVERSION)$(SHLIB_EXT) || exit 1 ; \\\n+\tdone\n+\t$(LIPO_FOR_TARGET) -output $@ -create $(@)_T*\n+\t# When builting multilibbed target libraries, all the required\n+\t# libraries are expected to exist in the multilib directory.\n+\tfor mlib in $(MULTILIB_DIRNAMES) ; do \\\n+\t  ln -s ../$@ $${mlib}/$@ || exit 1 ; \\\n+\tdone\n+\trm $(@)_T*\n+\n+# From the point-of-view of the Makefiles, libgcc is built by the 'strip'\n+# and 'lipo' commands above.\n+LIBGCC=libgcc_s.10.4.dylib libgcc_s.10.5.dylib\n+\n+install-darwin-libgcc-stubs : $(LIBGCC) installdirs\n+\tfor d in $(LIBGCC) ; do \\\n+\t  $(INSTALL_DATA) $$d $(DESTDIR)$(slibdir)/$$d || exit 1 ; \\\n+\tdone\n+\n+INSTALL_LIBGCC += install-darwin-libgcc-stubs"}]}