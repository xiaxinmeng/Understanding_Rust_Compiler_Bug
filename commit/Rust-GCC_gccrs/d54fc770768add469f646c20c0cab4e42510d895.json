{"sha": "d54fc770768add469f646c20c0cab4e42510d895", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU0ZmM3NzA3NjhhZGQ0NjlmNjQ2YzIwYzBjYWI0ZTQyNTEwZDg5NQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-01-06T17:10:40Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2020-01-06T17:10:40Z"}, "message": "Fix amdgcn issue with '0' constraints\n\n2020-01-06  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/\n\t* config/gcn/gcn-valu.md (subv64di3): Use separate alternatives for\n\t'0' matching inputs.\n\t(subv64di3_exec): Likewise.\n\nFrom-SVN: r279906", "tree": {"sha": "8dd14ba4460d9410ead8f257806117cd4415b7a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dd14ba4460d9410ead8f257806117cd4415b7a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d54fc770768add469f646c20c0cab4e42510d895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54fc770768add469f646c20c0cab4e42510d895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d54fc770768add469f646c20c0cab4e42510d895", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54fc770768add469f646c20c0cab4e42510d895/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b4f0b8951cbe95e5315428e7c6687307f236e6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4f0b8951cbe95e5315428e7c6687307f236e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b4f0b8951cbe95e5315428e7c6687307f236e6b"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "4ed0cd96de2854daffc36543e2968d94107abb26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54fc770768add469f646c20c0cab4e42510d895/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54fc770768add469f646c20c0cab4e42510d895/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d54fc770768add469f646c20c0cab4e42510d895", "patch": "@@ -1,3 +1,9 @@\n+2020-01-06  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md (subv64di3): Use separate alternatives for\n+\t'0' matching inputs.\n+\t(subv64di3_exec): Likewise.\n+\n 2020-01-06  Bryan Stenson  <bryan@siliconvortex.com>\n \n \t* config/mips/mips.c (vr4130_align_insns): Fix typo."}, {"sha": "e301a4356ece375da9e555b7da7bbe69672056af", "filename": "gcc/config/gcn/gcn-valu.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54fc770768add469f646c20c0cab4e42510d895/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54fc770768add469f646c20c0cab4e42510d895/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md?ref=d54fc770768add469f646c20c0cab4e42510d895", "patch": "@@ -1292,10 +1292,10 @@\n    (set_attr \"length\" \"8\")])\n \n (define_insn_and_split \"subv64di3\"\n-  [(set (match_operand:V64DI 0 \"register_operand\"  \"=  &v,   &v\")\n-\t(minus:V64DI\n-\t  (match_operand:V64DI 1 \"gcn_alu_operand\" \"vSvB0,   v0\")\n-\t  (match_operand:V64DI 2 \"gcn_alu_operand\" \"   v0,vSvB0\")))\n+  [(set (match_operand:V64DI 0 \"register_operand\"  \"= &v,   &v,   &v,  &v\")\n+\t(minus:V64DI                                                 \n+\t  (match_operand:V64DI 1 \"gcn_alu_operand\" \"vSvB,vSvB0,    v,  v0\")\n+\t  (match_operand:V64DI 2 \"gcn_alu_operand\" \"  v0,    v,vSvB0,vSvB\")))\n    (clobber (reg:DI VCC_REG))]\n   \"\"\n   \"#\"\n@@ -1318,17 +1318,17 @@\n     DONE;\n   }\n   [(set_attr \"type\" \"vmult\")\n-   (set_attr \"length\" \"8,8\")])\n+   (set_attr \"length\" \"8\")])\n \n (define_insn_and_split \"subv64di3_exec\"\n-  [(set (match_operand:V64DI 0 \"register_operand\"\t       \"=  &v,   &v\")\n-\t(vec_merge:V64DI\n-\t  (minus:V64DI\n-\t    (match_operand:V64DI 1 \"gcn_alu_operand\"\t       \"vSvB0,   v0\")\n-\t    (match_operand:V64DI 2 \"gcn_alu_operand\"\t       \"   v0,vSvB0\"))\n+  [(set (match_operand:V64DI 0 \"register_operand\"    \"= &v,   &v,   &v,  &v\")\n+\t(vec_merge:V64DI                                                         \n+\t  (minus:V64DI                                                           \n+\t    (match_operand:V64DI 1 \"gcn_alu_operand\" \"vSvB,vSvB0,    v,  v0\")\n+\t    (match_operand:V64DI 2 \"gcn_alu_operand\" \"  v0,    v,vSvB0,vSvB\"))\n \t  (match_operand:V64DI 3 \"gcn_register_or_unspec_operand\"\n-\t\t\t\t\t\t\t       \"   U0,   U0\")\n-\t  (match_operand:DI 4 \"gcn_exec_reg_operand\"\t       \"    e,    e\")))\n+\t\t\t\t\t\t     \"  U0,   U0,   U0,  U0\")\n+\t  (match_operand:DI 4 \"gcn_exec_reg_operand\" \"   e,    e,    e,   e\")))\n    (clobber (reg:DI VCC_REG))]\n   \"register_operand (operands[1], VOIDmode)\n    || register_operand (operands[2], VOIDmode)\"\n@@ -1357,7 +1357,7 @@\n     DONE;\n   }\n   [(set_attr \"type\" \"vmult\")\n-   (set_attr \"length\" \"8,8\")])\n+   (set_attr \"length\" \"8\")])\n \n (define_insn_and_split \"addv64di3_dup\"\n   [(set (match_operand:V64DI 0 \"register_operand\"   \"= &v\")"}]}