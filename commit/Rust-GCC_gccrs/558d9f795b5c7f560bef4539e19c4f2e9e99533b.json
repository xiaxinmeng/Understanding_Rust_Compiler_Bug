{"sha": "558d9f795b5c7f560bef4539e19c4f2e9e99533b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU4ZDlmNzk1YjVjN2Y1NjBiZWY0NTM5ZTE5YzRmMmU5ZTk5NTMzYg==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-10-11T14:00:11Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-10-11T14:00:11Z"}, "message": "i386.c (ix86_rtx_costs): Enable fma for TARGET_AVX512F.\n\n        * config/i386/i386.c (ix86_rtx_costs): Enable fma for TARGET_AVX512F.\n        * config/i386/sse.md (FMAMODEM): Changed modes and conditions.\n        (FMAMODE): Ditto.\n        (fma<mode>4): Removed condition.\n        (fms<mode>4): Ditto.\n        (fnma<mode>4): Ditto.\n        (fnms<mode>4): Ditto.\n        (fma4i_fmadd_<mode>): Ditto.\n        (*fma_fmadd_<mode>): Ditto.\n        (*fma_fmsub_<mode>): Ditto.\n        (*fma_fnmadd_<mode>): Ditto.\n        (*fma_fnmsub_<mode>): Ditto.\n        (fmaddsub_<mode>): Allow for TARGET_AVX512F.\n        (*fma_fmaddsub_<mode>): Ditto.\n        (*fma_fmsubadd_<mode>): Ditto.\n        (*fmai_fmadd_<mode>): Ditto.\n        (*fmai_fmsub_<mode>): Ditto.\n        (*fmai_fnmadd_<mode>): Ditto.\n        (*fmai_fnmsub_<mode>): Ditto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\nCo-Authored-By: Sergey Lega <sergey.s.lega@intel.com>\n\nFrom-SVN: r203439", "tree": {"sha": "4d16e072920798617e00eae25a2088045f2e9a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d16e072920798617e00eae25a2088045f2e9a3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/558d9f795b5c7f560bef4539e19c4f2e9e99533b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558d9f795b5c7f560bef4539e19c4f2e9e99533b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/558d9f795b5c7f560bef4539e19c4f2e9e99533b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558d9f795b5c7f560bef4539e19c4f2e9e99533b/comments", "author": null, "committer": null, "parents": [{"sha": "e8d0820644097f0fc200364f799ff1c2766bd1ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d0820644097f0fc200364f799ff1c2766bd1ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d0820644097f0fc200364f799ff1c2766bd1ac"}], "stats": {"total": 96, "additions": 73, "deletions": 23}, "files": [{"sha": "0fb3d0b714792608e40a3f1a221559e4be566369", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558d9f795b5c7f560bef4539e19c4f2e9e99533b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558d9f795b5c7f560bef4539e19c4f2e9e99533b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=558d9f795b5c7f560bef4539e19c4f2e9e99533b", "patch": "@@ -1,3 +1,33 @@\n+2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Sergey Lega  <sergey.s.lega@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.c (ix86_rtx_costs): Enable fma for TARGET_AVX512F.\n+\t* config/i386/sse.md (FMAMODEM): Changed modes and conditions.\n+\t(FMAMODE): Ditto.\n+\t(fma<mode>4): Removed condition.\n+\t(fms<mode>4): Ditto.\n+\t(fnma<mode>4): Ditto.\n+\t(fnms<mode>4): Ditto.\n+\t(fma4i_fmadd_<mode>): Ditto.\n+\t(*fma_fmadd_<mode>): Ditto.\n+\t(*fma_fmsub_<mode>): Ditto.\n+\t(*fma_fnmadd_<mode>): Ditto.\n+\t(*fma_fnmsub_<mode>): Ditto.\n+\t(fmaddsub_<mode>): Allow for TARGET_AVX512F.\n+\t(*fma_fmaddsub_<mode>): Ditto.\n+\t(*fma_fmsubadd_<mode>): Ditto.\n+\t(*fmai_fmadd_<mode>): Ditto.\n+\t(*fmai_fmsub_<mode>): Ditto.\n+\t(*fmai_fnmadd_<mode>): Ditto.\n+\t(*fmai_fnmsub_<mode>): Ditto.\n+\n 2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Sergey Lega  <sergey.s.lega@intel.com>"}, {"sha": "37c1becbbd314d4113e3552cdd4ee87fcd556db8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558d9f795b5c7f560bef4539e19c4f2e9e99533b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558d9f795b5c7f560bef4539e19c4f2e9e99533b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=558d9f795b5c7f560bef4539e19c4f2e9e99533b", "patch": "@@ -34811,7 +34811,7 @@ ix86_rtx_costs (rtx x, int code_i, int outer_code_i, int opno, int *total,\n \trtx sub;\n \n         gcc_assert (FLOAT_MODE_P (mode));\n-        gcc_assert (TARGET_FMA || TARGET_FMA4);\n+        gcc_assert (TARGET_FMA || TARGET_FMA4 || TARGET_AVX512F);\n \n         /* ??? SSE scalar/vector cost should be used here.  */\n         /* ??? Bald assumption that fma has the same cost as fmul.  */"}, {"sha": "0b815217bed52019cb2de04a656a0f89a25f44ea", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 42, "deletions": 22, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558d9f795b5c7f560bef4539e19c4f2e9e99533b/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558d9f795b5c7f560bef4539e19c4f2e9e99533b/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=558d9f795b5c7f560bef4539e19c4f2e9e99533b", "patch": "@@ -2254,60 +2254,80 @@\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n ;; The standard names for scalar FMA are only available with SSE math enabled.\n-(define_mode_iterator FMAMODEM [(SF \"TARGET_SSE_MATH\")\n-\t\t\t\t(DF \"TARGET_SSE_MATH\")\n-\t\t\t\tV4SF V2DF V8SF V4DF])\n+;; CPUID bit AVX512F enables evex encoded scalar and 512-bit fma.  It doesn't\n+;; care about FMA bit, so we enable fma for TARGET_AVX512F even when TARGET_FMA\n+;; and TARGET_FMA4 are both false.\n+;; TODO: In theory AVX512F does not automatically imply FMA, and without FMA\n+;; one must force the EVEX encoding of the fma insns.  Ideally we'd improve\n+;; GAS to allow proper prefix selection.  However, for the moment all hardware\n+;; that supports AVX512F also supports FMA so we can ignore this for now.\n+(define_mode_iterator FMAMODEM\n+  [(SF \"TARGET_SSE_MATH && (TARGET_FMA || TARGET_FMA4 || TARGET_AVX512F)\")\n+   (DF \"TARGET_SSE_MATH && (TARGET_FMA || TARGET_FMA4 || TARGET_AVX512F)\")\n+   (V4SF \"TARGET_FMA || TARGET_FMA4\")\n+   (V2DF \"TARGET_FMA || TARGET_FMA4\")\n+   (V8SF \"TARGET_FMA || TARGET_FMA4\")\n+   (V4DF \"TARGET_FMA || TARGET_FMA4\")\n+   (V16SF \"TARGET_AVX512F\")\n+   (V8DF \"TARGET_AVX512F\")])\n \n (define_expand \"fma<mode>4\"\n   [(set (match_operand:FMAMODEM 0 \"register_operand\")\n \t(fma:FMAMODEM\n \t  (match_operand:FMAMODEM 1 \"nonimmediate_operand\")\n \t  (match_operand:FMAMODEM 2 \"nonimmediate_operand\")\n \t  (match_operand:FMAMODEM 3 \"nonimmediate_operand\")))]\n-  \"TARGET_FMA || TARGET_FMA4\")\n+  \"\")\n \n (define_expand \"fms<mode>4\"\n   [(set (match_operand:FMAMODEM 0 \"register_operand\")\n \t(fma:FMAMODEM\n \t  (match_operand:FMAMODEM 1 \"nonimmediate_operand\")\n \t  (match_operand:FMAMODEM 2 \"nonimmediate_operand\")\n \t  (neg:FMAMODEM (match_operand:FMAMODEM 3 \"nonimmediate_operand\"))))]\n-  \"TARGET_FMA || TARGET_FMA4\")\n+  \"\")\n \n (define_expand \"fnma<mode>4\"\n   [(set (match_operand:FMAMODEM 0 \"register_operand\")\n \t(fma:FMAMODEM\n \t  (neg:FMAMODEM (match_operand:FMAMODEM 1 \"nonimmediate_operand\"))\n \t  (match_operand:FMAMODEM 2 \"nonimmediate_operand\")\n \t  (match_operand:FMAMODEM 3 \"nonimmediate_operand\")))]\n-  \"TARGET_FMA || TARGET_FMA4\")\n+  \"\")\n \n (define_expand \"fnms<mode>4\"\n   [(set (match_operand:FMAMODEM 0 \"register_operand\")\n \t(fma:FMAMODEM\n \t  (neg:FMAMODEM (match_operand:FMAMODEM 1 \"nonimmediate_operand\"))\n \t  (match_operand:FMAMODEM 2 \"nonimmediate_operand\")\n \t  (neg:FMAMODEM (match_operand:FMAMODEM 3 \"nonimmediate_operand\"))))]\n-  \"TARGET_FMA || TARGET_FMA4\")\n+  \"\")\n \n ;; The builtins for intrinsics are not constrained by SSE math enabled.\n-(define_mode_iterator FMAMODE [SF DF V4SF V2DF V8SF V4DF])\n+(define_mode_iterator FMAMODE [(SF \"TARGET_FMA || TARGET_FMA4 || TARGET_AVX512F\")\n+\t\t\t       (DF \"TARGET_FMA || TARGET_FMA4 || TARGET_AVX512F\")\n+\t\t\t       (V4SF \"TARGET_FMA || TARGET_FMA4\")\n+\t\t\t       (V2DF \"TARGET_FMA || TARGET_FMA4\")\n+\t\t\t       (V8SF \"TARGET_FMA || TARGET_FMA4\")\n+\t\t\t       (V4DF \"TARGET_FMA || TARGET_FMA4\")\n+\t\t\t       (V16SF \"TARGET_AVX512F\")\n+\t\t\t       (V8DF \"TARGET_AVX512F\")])\n \n (define_expand \"fma4i_fmadd_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\")\n \t(fma:FMAMODE\n \t  (match_operand:FMAMODE 1 \"nonimmediate_operand\")\n \t  (match_operand:FMAMODE 2 \"nonimmediate_operand\")\n \t  (match_operand:FMAMODE 3 \"nonimmediate_operand\")))]\n-  \"TARGET_FMA || TARGET_FMA4\")\n+  \"\")\n \n (define_insn \"*fma_fmadd_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\" \"=v,v,v,x,x\")\n \t(fma:FMAMODE\n \t  (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%0, 0, v, x,x\")\n \t  (match_operand:FMAMODE 2 \"nonimmediate_operand\" \"vm, v,vm, x,m\")\n \t  (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" v,vm, 0,xm,x\")))]\n-  \"TARGET_FMA || TARGET_FMA4\"\n+  \"\"\n   \"@\n    vfmadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n    vfmadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n@@ -2318,14 +2338,14 @@\n    (set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*fma_fmsub_<mode>\"\n+(define_insn \"fma_fmsub_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\" \"=v,v,v,x,x\")\n \t(fma:FMAMODE\n \t  (match_operand:FMAMODE   1 \"nonimmediate_operand\" \"%0, 0, v, x,x\")\n \t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"vm, v,vm, x,m\")\n \t  (neg:FMAMODE\n \t    (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" v,vm, 0,xm,x\"))))]\n-  \"TARGET_FMA || TARGET_FMA4\"\n+  \"\"\n   \"@\n    vfmsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n    vfmsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n@@ -2336,14 +2356,14 @@\n    (set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*fma_fnmadd_<mode>\"\n+(define_insn \"fma_fnmadd_<mode>\"\n   [(set (match_operand:FMAMODE 0 \"register_operand\" \"=v,v,v,x,x\")\n \t(fma:FMAMODE\n \t  (neg:FMAMODE\n \t    (match_operand:FMAMODE 1 \"nonimmediate_operand\" \"%0, 0, v, x,x\"))\n \t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"vm, v,vm, x,m\")\n \t  (match_operand:FMAMODE   3 \"nonimmediate_operand\" \" v,vm, 0,xm,x\")))]\n-  \"TARGET_FMA || TARGET_FMA4\"\n+  \"\"\n   \"@\n    vfnmadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n    vfnmadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n@@ -2362,7 +2382,7 @@\n \t  (match_operand:FMAMODE   2 \"nonimmediate_operand\" \"vm, v,vm, x,m\")\n \t  (neg:FMAMODE\n \t    (match_operand:FMAMODE 3 \"nonimmediate_operand\" \" v,vm, 0,xm,x\"))))]\n-  \"TARGET_FMA || TARGET_FMA4\"\n+  \"\"\n   \"@\n    vfnmsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n    vfnmsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n@@ -2391,7 +2411,7 @@\n \t   (match_operand:VF 2 \"nonimmediate_operand\")\n \t   (match_operand:VF 3 \"nonimmediate_operand\")]\n \t  UNSPEC_FMADDSUB))]\n-  \"TARGET_FMA || TARGET_FMA4\")\n+  \"TARGET_FMA || TARGET_FMA4 || TARGET_AVX512F\")\n \n (define_insn \"*fma_fmaddsub_<mode>\"\n   [(set (match_operand:VF 0 \"register_operand\" \"=v,v,v,x,x\")\n@@ -2400,7 +2420,7 @@\n \t   (match_operand:VF 2 \"nonimmediate_operand\" \"vm, v,vm, x,m\")\n \t   (match_operand:VF 3 \"nonimmediate_operand\" \" v,vm, 0,xm,x\")]\n \t  UNSPEC_FMADDSUB))]\n-  \"TARGET_FMA || TARGET_FMA4\"\n+  \"(TARGET_FMA || TARGET_FMA4 || TARGET_AVX512F)\"\n   \"@\n    vfmaddsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n    vfmaddsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n@@ -2419,7 +2439,7 @@\n \t   (neg:VF\n \t     (match_operand:VF 3 \"nonimmediate_operand\" \" v,vm, 0,xm,x\"))]\n \t  UNSPEC_FMADDSUB))]\n-  \"TARGET_FMA || TARGET_FMA4\"\n+  \"(TARGET_FMA || TARGET_FMA4 || TARGET_AVX512F)\"\n   \"@\n    vfmsubadd132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n    vfmsubadd213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n@@ -2453,7 +2473,7 @@\n \t    (match_operand:VF_128 3 \"nonimmediate_operand\" \" v,vm\"))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n-  \"TARGET_FMA\"\n+  \"TARGET_FMA || TARGET_AVX512F\"\n   \"@\n    vfmadd132<ssescalarmodesuffix>\\t{%2, %3, %0|%0, %<iptr>3, %<iptr>2}\n    vfmadd213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %<iptr>2, %<iptr>3}\"\n@@ -2470,7 +2490,7 @@\n \t      (match_operand:VF_128 3 \"nonimmediate_operand\" \" v,vm\")))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n-  \"TARGET_FMA\"\n+  \"TARGET_FMA || TARGET_AVX512F\"\n   \"@\n    vfmsub132<ssescalarmodesuffix>\\t{%2, %3, %0|%0, %<iptr>3, %<iptr>2}\n    vfmsub213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %<iptr>2, %<iptr>3}\"\n@@ -2487,7 +2507,7 @@\n \t    (match_operand:VF_128   3 \"nonimmediate_operand\" \" v,vm\"))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n-  \"TARGET_FMA\"\n+  \"TARGET_FMA || TARGET_AVX512F\"\n   \"@\n    vfnmadd132<ssescalarmodesuffix>\\t{%2, %3, %0|%0, %<iptr>3, %<iptr>2}\n    vfnmadd213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %<iptr>2, %<iptr>3}\"\n@@ -2505,7 +2525,7 @@\n \t      (match_operand:VF_128 3 \"nonimmediate_operand\" \" v,vm\")))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n-  \"TARGET_FMA\"\n+  \"TARGET_FMA || TARGET_AVX512F\"\n   \"@\n    vfnmsub132<ssescalarmodesuffix>\\t{%2, %3, %0|%0, %<iptr>3, %<iptr>2}\n    vfnmsub213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %<iptr>2, %<iptr>3}\""}]}