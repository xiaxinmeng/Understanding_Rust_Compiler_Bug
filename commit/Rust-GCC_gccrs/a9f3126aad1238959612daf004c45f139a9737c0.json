{"sha": "a9f3126aad1238959612daf004c45f139a9737c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlmMzEyNmFhZDEyMzg5NTk2MTJkYWYwMDRjNDVmMTM5YTk3MzdjMA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2017-10-08T08:20:25Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2017-10-08T08:20:25Z"}, "message": "arm.c (arm_set_return_address): Use MEM_VOLATILE_P on the target mem instead of RTX_FRAME_RELATED_P on the insn...\n\n2017-10-08  Olivier Hainque  <hainque@adacore.com>\n\n        * config/arm/arm.c (arm_set_return_address): Use MEM_VOLATILE_P\n        on the target mem instead of RTX_FRAME_RELATED_P on the insn to\n        prevent DSE.\n        (thumb_set_return_address): Likewise.\n\nFrom-SVN: r253522", "tree": {"sha": "e8a4e61ea29b5b8197d0881261439174e6d54fb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8a4e61ea29b5b8197d0881261439174e6d54fb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9f3126aad1238959612daf004c45f139a9737c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f3126aad1238959612daf004c45f139a9737c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9f3126aad1238959612daf004c45f139a9737c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f3126aad1238959612daf004c45f139a9737c0/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "221ebb39af8e3c015a2aed2fa6e6001669cf9e29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/221ebb39af8e3c015a2aed2fa6e6001669cf9e29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/221ebb39af8e3c015a2aed2fa6e6001669cf9e29"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "c4a7c62b4770e38186b60244d6dd00f183727fc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f3126aad1238959612daf004c45f139a9737c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f3126aad1238959612daf004c45f139a9737c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9f3126aad1238959612daf004c45f139a9737c0", "patch": "@@ -1,3 +1,10 @@\n+2017-10-08  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/arm/arm.c (arm_set_return_address): Use MEM_VOLATILE_P\n+\ton the target mem instead of RTX_FRAME_RELATED_P on the insn to\n+\tprevent DSE.\n+\t(thumb_set_return_address): Likewise.\n+\n 2017-10-08  Olivier Hainque  <hainque@adacore.com>\n \n \t* common/config/arm/arm-common.c (arm_except_unwind_info):"}, {"sha": "622218c60eff2f1096787a1198281c38e91184c9", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9f3126aad1238959612daf004c45f139a9737c0/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9f3126aad1238959612daf004c45f139a9737c0/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=a9f3126aad1238959612daf004c45f139a9737c0", "patch": "@@ -26859,7 +26859,7 @@ arm_set_return_address (rtx source, rtx scratch)\n {\n   arm_stack_offsets *offsets;\n   HOST_WIDE_INT delta;\n-  rtx addr;\n+  rtx addr, mem;\n   unsigned long saved_regs;\n \n   offsets = arm_get_frame_offsets ();\n@@ -26889,11 +26889,12 @@ arm_set_return_address (rtx source, rtx scratch)\n \n \t  addr = plus_constant (Pmode, addr, delta);\n \t}\n-      /* The store needs to be marked as frame related in order to prevent\n-\t DSE from deleting it as dead if it is based on fp.  */\n-      rtx insn = emit_move_insn (gen_frame_mem (Pmode, addr), source);\n-      RTX_FRAME_RELATED_P (insn) = 1;\n-      add_reg_note (insn, REG_CFA_RESTORE, gen_rtx_REG (Pmode, LR_REGNUM));\n+\n+      /* The store needs to be marked to prevent DSE from deleting\n+\t it as dead if it is based on fp.  */\n+      mem = gen_frame_mem (Pmode, addr);\n+      MEM_VOLATILE_P (mem) = true;\n+      emit_move_insn (mem, source);\n     }\n }\n \n@@ -26905,7 +26906,7 @@ thumb_set_return_address (rtx source, rtx scratch)\n   HOST_WIDE_INT delta;\n   HOST_WIDE_INT limit;\n   int reg;\n-  rtx addr;\n+  rtx addr, mem;\n   unsigned long mask;\n \n   emit_use (source);\n@@ -26945,11 +26946,11 @@ thumb_set_return_address (rtx source, rtx scratch)\n       else\n \taddr = plus_constant (Pmode, addr, delta);\n \n-      /* The store needs to be marked as frame related in order to prevent\n-\t DSE from deleting it as dead if it is based on fp.  */\n-      rtx insn = emit_move_insn (gen_frame_mem (Pmode, addr), source);\n-      RTX_FRAME_RELATED_P (insn) = 1;\n-      add_reg_note (insn, REG_CFA_RESTORE, gen_rtx_REG (Pmode, LR_REGNUM));\n+      /* The store needs to be marked to prevent DSE from deleting\n+\t it as dead if it is based on fp.  */\n+      mem = gen_frame_mem (Pmode, addr);\n+      MEM_VOLATILE_P (mem) = true;\n+      emit_move_insn (mem, source);\n     }\n   else\n     emit_move_insn (gen_rtx_REG (Pmode, LR_REGNUM), source);"}]}