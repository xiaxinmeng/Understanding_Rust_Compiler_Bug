{"sha": "d6470dd07edf86bea7fa918f483004d0b3a0c7c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY0NzBkZDA3ZWRmODZiZWE3ZmE5MThmNDgzMDA0ZDBiM2EwYzdjOQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-04-10T14:20:44Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-04-10T14:20:44Z"}, "message": "Make this test less fragile\n\nFrom-SVN: r26337", "tree": {"sha": "48e1d0a1f8a23595bbb9f8cc2a95c6e1e476b225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48e1d0a1f8a23595bbb9f8cc2a95c6e1e476b225"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6470dd07edf86bea7fa918f483004d0b3a0c7c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6470dd07edf86bea7fa918f483004d0b3a0c7c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6470dd07edf86bea7fa918f483004d0b3a0c7c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6470dd07edf86bea7fa918f483004d0b3a0c7c9/comments", "author": null, "committer": null, "parents": [{"sha": "e9c6b69b61b17c1aff79fa933eeacae3c11e2eff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c6b69b61b17c1aff79fa933eeacae3c11e2eff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c6b69b61b17c1aff79fa933eeacae3c11e2eff"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "cda9dd87ad8d827d9fe10343bf07bdc7ffe23504", "filename": "gcc/testsuite/gcc.dg/990409-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6470dd07edf86bea7fa918f483004d0b3a0c7c9/gcc%2Ftestsuite%2Fgcc.dg%2F990409-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6470dd07edf86bea7fa918f483004d0b3a0c7c9/gcc%2Ftestsuite%2Fgcc.dg%2F990409-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F990409-1.c?ref=d6470dd07edf86bea7fa918f483004d0b3a0c7c9", "patch": "@@ -1,18 +1,18 @@\n /* Test that __LINE__ works when embedded in a macro. */\n /* { dg-do run } */\n \n-#define foo() bar(__LINE__)\n+#define XLINE __LINE__\n \n void\n-bar(int x)\n+bar(int x, int y)\n {\n-    if (x != 16)\n+    if (x != y)\n \tabort();\n }\n \n int\n main(void)\n {\n-    foo();    /* This is line 16 */\n+    bar(XLINE, __LINE__);\n     return 0;\n }"}]}