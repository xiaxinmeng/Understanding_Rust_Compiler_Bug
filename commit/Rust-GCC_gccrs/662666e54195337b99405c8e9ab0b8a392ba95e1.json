{"sha": "662666e54195337b99405c8e9ab0b8a392ba95e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyNjY2ZTU0MTk1MzM3Yjk5NDA1YzhlOWFiMGI4YTM5MmJhOTVlMQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2011-03-24T17:25:28Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2011-03-24T17:25:28Z"}, "message": "rx.h (LABEL_ALIGN_FOR_BARRIER): Define.\n\n\t* config/rx/rx.h (LABEL_ALIGN_FOR_BARRIER): Define.\n\t(ASM_OUTPUT_MAX_SKIP_ALIGN): Define.\n\t* config/rx/rx.c (rx_option_override): Set align_jumps,\n\talign_loops and align_labels if not set by the user.\n\t(rx_align_for_label): New function.\n\t(rx_max_skip_for_label): New function.\n\t(TARGET_ASM_JUMP_ALIGN_MAX_SKIP): Define.\n\t(TARGET_ASM_LOOP_ALIGN_MAX_SKIP): Define.\n\t(TARGET_ASM_LABEL_ALIGN_MAX_SKIP): Define.\n\t(TARGET_ASM_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP): Define.\n\t* config/rx/rx-protos.h (rx_align_for_label): Add prototype.\n\nFrom-SVN: r171420", "tree": {"sha": "3bb18fefa62c52ec1cc450c0d02be66ce2ddcfc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bb18fefa62c52ec1cc450c0d02be66ce2ddcfc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/662666e54195337b99405c8e9ab0b8a392ba95e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662666e54195337b99405c8e9ab0b8a392ba95e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662666e54195337b99405c8e9ab0b8a392ba95e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662666e54195337b99405c8e9ab0b8a392ba95e1/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3dc84509f003fcc9c43fc4a9c2dbea4ff311d614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dc84509f003fcc9c43fc4a9c2dbea4ff311d614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dc84509f003fcc9c43fc4a9c2dbea4ff311d614"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "046aea78990b5c57cd5446dacd8927a0274a9463", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662666e54195337b99405c8e9ab0b8a392ba95e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662666e54195337b99405c8e9ab0b8a392ba95e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=662666e54195337b99405c8e9ab0b8a392ba95e1", "patch": "@@ -1,3 +1,17 @@\n+2011-03-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rx/rx.h (LABEL_ALIGN_FOR_BARRIER): Define.\n+\t(ASM_OUTPUT_MAX_SKIP_ALIGN): Define.\n+\t* config/rx/rx.c (rx_option_override): Set align_jumps,\n+\talign_loops and align_labels if not set by the user.\n+\t(rx_align_for_label): New function.\n+\t(rx_max_skip_for_label): New function.\n+\t(TARGET_ASM_JUMP_ALIGN_MAX_SKIP): Define.\n+\t(TARGET_ASM_LOOP_ALIGN_MAX_SKIP): Define.\n+\t(TARGET_ASM_LABEL_ALIGN_MAX_SKIP): Define.\n+\t(TARGET_ASM_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP): Define.\n+\t* config/rx/rx-protos.h (rx_align_for_label): Add prototype.\n+\n 2011-03-24  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR rtl-optimization/48263"}, {"sha": "ab04fdd7ce0fde280ec62b984533ce47bd7bf332", "filename": "gcc/config/rx/rx-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662666e54195337b99405c8e9ab0b8a392ba95e1/gcc%2Fconfig%2Frx%2Frx-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662666e54195337b99405c8e9ab0b8a392ba95e1/gcc%2Fconfig%2Frx%2Frx-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx-protos.h?ref=662666e54195337b99405c8e9ab0b8a392ba95e1", "patch": "@@ -26,6 +26,7 @@\n #define Fargs\tCUMULATIVE_ARGS\n #define Rcode\tenum rtx_code\n \f\n+extern int\t\trx_align_for_label (void);\n extern void\t\trx_expand_prologue (void);\n extern int\t\trx_initial_elimination_offset (int, int);\n "}, {"sha": "a6a63ac01ab990d7d3ab37e669a467c23106f170", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662666e54195337b99405c8e9ab0b8a392ba95e1/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662666e54195337b99405c8e9ab0b8a392ba95e1/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=662666e54195337b99405c8e9ab0b8a392ba95e1", "patch": "@@ -2350,6 +2350,13 @@ rx_option_override (void)\n     flag_strict_volatile_bitfields = 1;\n \n   rx_override_options_after_change ();\n+\n+  if (align_jumps == 0 && ! optimize_size)\n+    align_jumps = 3;\n+  if (align_loops == 0 && ! optimize_size)\n+    align_loops = 3;\n+  if (align_labels == 0 && ! optimize_size)\n+    align_labels = 3;\n }\n \n /* Implement TARGET_OPTION_OPTIMIZATION_TABLE.  */\n@@ -2740,8 +2747,47 @@ rx_match_ccmode (rtx insn, enum machine_mode cc_mode)\n \n   return true;\n }\n+\f\n+int\n+rx_align_for_label (void)\n+{\n+  return optimize_size ? 1 : 3;\n+}\n+\n+static int\n+rx_max_skip_for_label (rtx lab)\n+{\n+  int opsize;\n+  rtx op;\n+\n+  if (lab == NULL_RTX)\n+    return 0;\n \n+  op = lab;\n+  do\n+    {\n+      op = next_nonnote_nondebug_insn (op);\n+    }\n+  while (op && (LABEL_P (op)\n+\t\t|| (INSN_P (op) && GET_CODE (PATTERN (op)) == USE)));\n+  if (!op)\n+    return 0;\n+\n+  opsize = get_attr_length (op);\n+  if (opsize >= 0 && opsize < 8)\n+    return opsize - 1;\n+  return 0;\n+}\n \f\n+#undef  TARGET_ASM_JUMP_ALIGN_MAX_SKIP\n+#define TARGET_ASM_JUMP_ALIGN_MAX_SKIP\t\t\trx_max_skip_for_label\n+#undef  TARGET_ASM_LOOP_ALIGN_MAX_SKIP\n+#define TARGET_ASM_LOOP_ALIGN_MAX_SKIP\t\t\trx_max_skip_for_label\n+#undef  TARGET_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP\n+#define TARGET_LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP\trx_max_skip_for_label\n+#undef  TARGET_ASM_LABEL_ALIGN_MAX_SKIP\n+#define TARGET_ASM_LABEL_ALIGN_MAX_SKIP\t\t\trx_max_skip_for_label\n+\n #undef  TARGET_FUNCTION_VALUE\n #define TARGET_FUNCTION_VALUE\t\trx_function_value\n "}, {"sha": "bd54a2b954f2a11e81e04232acf915c8750b48b2", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662666e54195337b99405c8e9ab0b8a392ba95e1/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662666e54195337b99405c8e9ab0b8a392ba95e1/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=662666e54195337b99405c8e9ab0b8a392ba95e1", "patch": "@@ -413,6 +413,25 @@ typedef unsigned int CUMULATIVE_ARGS;\n #undef  USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX\t\"_\"\n \n+#define LABEL_ALIGN_AFTER_BARRIER(x)\t\trx_align_for_label ()\n+\n+#define ASM_OUTPUT_MAX_SKIP_ALIGN(STREAM, LOG, MAX_SKIP)\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      if ((LOG) == 0 || (MAX_SKIP) == 0)\t\\\n+        break;\t\t\t\t\t\\\n+      if (TARGET_AS100_SYNTAX)\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  if ((LOG) >= 2)\t\t\t\\\n+\t    fprintf (STREAM, \"\\t.ALIGN 4\\t; %d alignment actually requested\\n\", 1 << (LOG)); \\\n+\t  else\t\t\t\t\t\\\n+\t    fprintf (STREAM, \"\\t.ALIGN 2\\n\");\t\\\n+\t}\t\t\t\t\t\\\n+      else\t\t\t\t\t\\\n+\tfprintf (STREAM, \"\\t.balign %d,3,%d\\n\", 1 << (LOG), (MAX_SKIP));\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n #define ASM_OUTPUT_ALIGN(STREAM, LOG)\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\"}]}