{"sha": "08223f7633e228cb4ab7a9125a50c4f8ce2e16bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgyMjNmNzYzM2UyMjhjYjRhYjdhOTEyNWE1MGM0ZjhjZTJlMTZiYg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-02-16T14:03:17Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-02-16T14:03:17Z"}, "message": "combine: Fix problem with RTL checking\n\nAs Jakub found, after my recent combine patch at least on x86 problems\nshow up with RTL checking enabled.  This is because the I2 generated\nby a successful instruction combination can write not only a register\nbut it can also write a paradoxical subreg of one.\n\nThis fixes it.\n\n\n\t* combine.c (try_combine): When adjusting LOG_LINKS for the destination\n\tthat moved to I2, also allow destinations that are a paradoxical\n\tsubreg (instead of a normal reg).\n\nFrom-SVN: r257736", "tree": {"sha": "470a980952821c1d316a6e38bde85d66252e859f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/470a980952821c1d316a6e38bde85d66252e859f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08223f7633e228cb4ab7a9125a50c4f8ce2e16bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08223f7633e228cb4ab7a9125a50c4f8ce2e16bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08223f7633e228cb4ab7a9125a50c4f8ce2e16bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08223f7633e228cb4ab7a9125a50c4f8ce2e16bb/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d960ab7b8daceba84413b25d91c2410eec1bbde2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d960ab7b8daceba84413b25d91c2410eec1bbde2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d960ab7b8daceba84413b25d91c2410eec1bbde2"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "332a38f69fc802abf6c9a46f6a3743b2a5223e00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08223f7633e228cb4ab7a9125a50c4f8ce2e16bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08223f7633e228cb4ab7a9125a50c4f8ce2e16bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08223f7633e228cb4ab7a9125a50c4f8ce2e16bb", "patch": "@@ -1,3 +1,9 @@\n+2018-02-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* combine.c (try_combine): When adjusting LOG_LINKS for the destination\n+\tthat moved to I2, also allow destinations that are a paradoxical\n+\tsubreg (instead of a normal reg).\n+\n 2018-02-16  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/83831"}, {"sha": "6b761c609ae9f0db0b7cb5a4a567372ea7332280", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08223f7633e228cb4ab7a9125a50c4f8ce2e16bb/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08223f7633e228cb4ab7a9125a50c4f8ce2e16bb/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=08223f7633e228cb4ab7a9125a50c4f8ce2e16bb", "patch": "@@ -4283,7 +4283,12 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n       if (GET_CODE (x) == PARALLEL)\n \tx = XVECEXP (newi2pat, 0, 0);\n \n-      unsigned int regno = REGNO (SET_DEST (x));\n+      /* It can only be a SET of a REG or of a paradoxical SUBREG of a REG.  */\n+      x = SET_DEST (x);\n+      if (paradoxical_subreg_p (x))\n+\tx = SUBREG_REG (x);\n+\n+      unsigned int regno = REGNO (x);\n \n       bool done = false;\n       for (rtx_insn *insn = NEXT_INSN (i3);"}]}