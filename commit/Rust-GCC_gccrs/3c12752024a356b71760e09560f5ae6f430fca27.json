{"sha": "3c12752024a356b71760e09560f5ae6f430fca27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxMjc1MjAyNGEzNTZiNzE3NjBlMDk1NjBmNWFlNmY0MzBmY2EyNw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-09-07T21:25:40Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-09-07T21:25:40Z"}, "message": "re PR libfortran/23262 ([mingw32] rewind truncates file)\n\n\tPR libfortran/23262\n\t* acinclude.m4 (LIBGFOR_CHECK_CRLF): New check.\n\t* configure.ac: Use new check.\n\t* configure.in: Regenerate.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* io/transfer.c (next_record_w): Add case for CRLF as line\n\tterminator.\n\t* io/unix.c (tempfile, regular_file): Open files with\n\tO_BINARY on systems with CRLF.\n\nFrom-SVN: r104009", "tree": {"sha": "077176970c902eb386a3e59797dc9538ca553d80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/077176970c902eb386a3e59797dc9538ca553d80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c12752024a356b71760e09560f5ae6f430fca27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c12752024a356b71760e09560f5ae6f430fca27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c12752024a356b71760e09560f5ae6f430fca27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c12752024a356b71760e09560f5ae6f430fca27/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a0abeaf5523ab73d62cd6d84d78e34a25117ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a0abeaf5523ab73d62cd6d84d78e34a25117ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a0abeaf5523ab73d62cd6d84d78e34a25117ecd"}], "stats": {"total": 178, "additions": 177, "deletions": 1}, "files": [{"sha": "d43be2e02c80b7d7d9f6f19bf429fbe01a1cc2ed", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=3c12752024a356b71760e09560f5ae6f430fca27", "patch": "@@ -1,3 +1,16 @@\n+2005-09-07  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/23262\n+\t* acinclude.m4 (LIBGFOR_CHECK_CRLF): New check.\n+\t* configure.ac: Use new check.\n+\t* configure.in: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* io/transfer.c (next_record_w): Add case for CRLF as line\n+\tterminator.\n+\t* io/unix.c (tempfile, regular_file): Open files with\n+\tO_BINARY on systems with CRLF.\n+\n 2005-09-07  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR libfortran/23419"}, {"sha": "f9fcca666598652be2df1647c89573b55ab65c02", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=3c12752024a356b71760e09560f5ae6f430fca27", "patch": "@@ -183,3 +183,50 @@ esac])])\n if test x\"$have_unlink_open_file\" = xyes; then\n   AC_DEFINE(HAVE_UNLINK_OPEN_FILE, 1, [Define if target can unlink open files.])\n fi])\n+\n+dnl Check whether CRLF is the line terminator\n+AC_DEFUN([LIBGFOR_CHECK_CRLF], [\n+  AC_CACHE_CHECK([whether the target has CRLF as line terminator],\n+                  have_crlf, [\n+  AC_TRY_RUN([\n+/* This test program should exit with status 0 if system uses a CRLF as\n+   line terminator, and status 1 otherwise.  \n+   Since it is used to check for mingw systems, and should return 0 in any\n+   other case, in case of a failure we will not use CRLF.  */\n+#include <sys/stat.h>\n+#include <stdlib.h>\n+#include <fcntl.h>\n+#include <stdio.h>\n+\n+int main ()\n+{\n+#ifndef O_BINARY\n+  exit(1);\n+#else\n+  int fd, bytes;\n+  char buff[5];\n+\n+  fd = open (\"foo\", O_WRONLY | O_CREAT | O_TRUNC, S_IRWXU);\n+  if (fd < 0)\n+    exit(1);\n+  if (write (fd, \"\\n\", 1) < 0)\n+    perror (\"write\");\n+  \n+  close (fd);\n+  \n+  if ((fd = open (\"foo\", O_RDONLY | O_BINARY, S_IRWXU)) < 0)\n+    exit(1);\n+  bytes = read (fd, buff, 5);\n+  if (bytes == 2 && buff[0] == '\\r' && buff[1] == '\\n')\n+    exit(0);\n+  else\n+    exit(1);\n+#endif\n+}], have_crlf=yes, have_crlf=no, [\n+case \"${target}\" in\n+  *mingw*) have_crlf=yes ;;\n+  *) have_crlf=no;;\n+esac])])\n+if test x\"$have_crlf\" = xyes; then\n+  AC_DEFINE(HAVE_CRLF, 1, [Define if CRLF is line terminator.])\n+fi])"}, {"sha": "923b2037ec254c1942212f9e1ab7dce8adc40dc0", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=3c12752024a356b71760e09560f5ae6f430fca27", "patch": "@@ -54,6 +54,9 @@\n /* libm includes coshf */\n #undef HAVE_COSHF\n \n+/* Define if CRLF is line terminator. */\n+#undef HAVE_CRLF\n+\n /* libm includes erf */\n #undef HAVE_ERF\n "}, {"sha": "74f922b95b365919e6131cfef7f71f5abaaba8c4", "filename": "libgfortran/configure", "status": "modified", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=3c12752024a356b71760e09560f5ae6f430fca27", "patch": "@@ -12300,6 +12300,96 @@ _ACEOF\n \n fi\n \n+# Check whether line terminator is LF or CRLF\n+\n+  echo \"$as_me:$LINENO: checking whether the target has CRLF as line terminator\" >&5\n+echo $ECHO_N \"checking whether the target has CRLF as line terminator... $ECHO_C\" >&6\n+if test \"${have_crlf+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+  if test \"$cross_compiling\" = yes; then\n+\n+case \"${target}\" in\n+  *mingw*) have_crlf=yes ;;\n+  *) have_crlf=no;;\n+esac\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+/* This test program should exit with status 0 if system uses a CRLF as\n+   line terminator, and status 1 otherwise.\n+   Since it is used to check for mingw systems, and should return 0 in any\n+   other case, in case of a failure we will not use CRLF.  */\n+#include <sys/stat.h>\n+#include <stdlib.h>\n+#include <fcntl.h>\n+#include <stdio.h>\n+\n+int main ()\n+{\n+#ifndef O_BINARY\n+  exit(1);\n+#else\n+  int fd, bytes;\n+  char buff[5];\n+\n+  fd = open (\"foo\", O_WRONLY | O_CREAT | O_TRUNC, S_IRWXU);\n+  if (fd < 0)\n+    exit(1);\n+  if (write (fd, \"\\n\", 1) < 0)\n+    perror (\"write\");\n+\n+  close (fd);\n+\n+  if ((fd = open (\"foo\", O_RDONLY | O_BINARY, S_IRWXU)) < 0)\n+    exit(1);\n+  bytes = read (fd, buff, 5);\n+  if (bytes == 2 && buff[0] == '\\r' && buff[1] == '\\n')\n+    exit(0);\n+  else\n+    exit(1);\n+#endif\n+}\n+_ACEOF\n+rm -f conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  have_crlf=yes\n+else\n+  echo \"$as_me: program exited with status $ac_status\" >&5\n+echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+( exit $ac_status )\n+have_crlf=no\n+fi\n+rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+fi\n+fi\n+echo \"$as_me:$LINENO: result: $have_crlf\" >&5\n+echo \"${ECHO_T}$have_crlf\" >&6\n+if test x\"$have_crlf\" = xyes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_CRLF 1\n+_ACEOF\n+\n+fi\n+\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"}, {"sha": "f9f2b4d46ed34209dfcc4d2b64042007c796341c", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=3c12752024a356b71760e09560f5ae6f430fca27", "patch": "@@ -261,6 +261,9 @@ LIBGFOR_CHECK_ATTRIBUTE_ALIAS\n # Various other checks on target\n LIBGFOR_CHECK_UNLINK_OPEN_FILE\n \n+# Check whether line terminator is LF or CRLF\n+LIBGFOR_CHECK_CRLF\n+\n AC_CACHE_SAVE\n \n if test ${multilib} = yes; then"}, {"sha": "9251cf8f24f3f69dd3d4c9beabbcbc3d9b25d065", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=3c12752024a356b71760e09560f5ae6f430fca27", "patch": "@@ -1422,13 +1422,24 @@ next_record_w (void)\n       break;\n \n     case FORMATTED_SEQUENTIAL:\n+#ifdef HAVE_CRLF\n+      length = 2;\n+#else\n       length = 1;\n+#endif\n       p = salloc_w (current_unit->s, &length);\n \n       if (!is_internal_unit())\n \t{\n \t  if (p)\n-\t    *p = '\\n'; /* No CR for internal writes.  */\n+\t    {  /* No new line for internal writes.  */\n+#ifdef HAVE_CRLF\n+\t      p[0] = '\\r';\n+\t      p[1] = '\\n';\n+#else\n+\t      *p = '\\n';\n+#endif\n+\t    }\n \t  else\n \t    goto io_error;\n \t}"}, {"sha": "87b839b6dd393ca6691b32b824bf271d3387d4bb", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c12752024a356b71760e09560f5ae6f430fca27/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=3c12752024a356b71760e09560f5ae6f430fca27", "patch": "@@ -1000,7 +1000,12 @@ tempfile (void)\n \n   if (mktemp (template))\n     do\n+#ifdef HAVE_CRLF\n+      fd = open (template, O_RDWR | O_CREAT | O_EXCL | O_BINARY,\n+                 S_IREAD | S_IWRITE);\n+#else\n       fd = open (template, O_RDWR | O_CREAT | O_EXCL, S_IREAD | S_IWRITE);\n+#endif\n     while (!(fd == -1 && errno == EEXIST) && mktemp (template));\n   else\n     fd = -1;\n@@ -1085,6 +1090,10 @@ regular_file (unit_flags *flags)\n \n   /* rwflag |= O_LARGEFILE; */\n \n+#ifdef HAVE_CRLF\n+  crflag |= O_BINARY;\n+#endif\n+\n   mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH;\n   fd = open (path, rwflag | crflag, mode);\n   if (flags->action != ACTION_UNSPECIFIED)"}]}