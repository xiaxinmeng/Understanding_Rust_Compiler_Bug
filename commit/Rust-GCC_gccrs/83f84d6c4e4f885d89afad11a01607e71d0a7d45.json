{"sha": "83f84d6c4e4f885d89afad11a01607e71d0a7d45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNmODRkNmM0ZTRmODg1ZDg5YWZhZDExYTAxNjA3ZTcxZDBhN2Q0NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2004-09-06T23:36:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2004-09-06T23:36:11Z"}, "message": "re PR other/16633 (C tests don't use the newly built libgcc.so.1)\n\n2004-09-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR c/16633:\n\t* lib/gcc-dg.exp: Set up LD_LIBRARY_PATH, SHLIB_PATH,\n\tLD_LIBRARYN32_PATH, LD_LIBRARY64_PATH and DYLD_LIBRARY_PATH.\n\nFrom-SVN: r87131", "tree": {"sha": "872a1d281d33ae65a47475652b561d97d959e847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/872a1d281d33ae65a47475652b561d97d959e847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83f84d6c4e4f885d89afad11a01607e71d0a7d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f84d6c4e4f885d89afad11a01607e71d0a7d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83f84d6c4e4f885d89afad11a01607e71d0a7d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f84d6c4e4f885d89afad11a01607e71d0a7d45/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6ffe1263db2f2ecc262300840f188d209562384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ffe1263db2f2ecc262300840f188d209562384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6ffe1263db2f2ecc262300840f188d209562384"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "46b655fb15ba7d9ced6424d18fe242e15525f947", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f84d6c4e4f885d89afad11a01607e71d0a7d45/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f84d6c4e4f885d89afad11a01607e71d0a7d45/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=83f84d6c4e4f885d89afad11a01607e71d0a7d45", "patch": "@@ -1,3 +1,9 @@\n+2004-09-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c/16633:\n+\t* lib/gcc-dg.exp: Set up LD_LIBRARY_PATH, SHLIB_PATH,\n+\tLD_LIBRARYN32_PATH, LD_LIBRARY64_PATH and DYLD_LIBRARY_PATH.\n+\n 2004-09-06  Devang Patel  <dpatel@apple.com>\n \t\n \t* gcc.dg/tree-ssa/ifc-20040816-1.c: Use -ftree-vectorize."}, {"sha": "ca2812d499c460b5e128ecc0831161810ed224cf", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83f84d6c4e4f885d89afad11a01607e71d0a7d45/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83f84d6c4e4f885d89afad11a01607e71d0a7d45/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=83f84d6c4e4f885d89afad11a01607e71d0a7d45", "patch": "@@ -20,6 +20,7 @@ load_lib target-supports.exp\n load_lib scanasm.exp\n load_lib scantree.exp\n load_lib prune.exp\n+load_lib libgloss.exp\n \n if ![info exists TORTURE_OPTIONS] {\n     # It is theoretically beneficial to group all of the O2/O3 options together,\n@@ -40,6 +41,62 @@ if ![info exists TORTURE_OPTIONS] {\n \t{ -Os } ]\n }\n \n+global GCC_UNDER_TEST\n+if ![info exists GCC_UNDER_TEST] {\n+    set GCC_UNDER_TEST \"[find_gcc]\"\n+}\n+\n+global rootme\n+set libgcc_s_path \"${rootme}\"\n+set compiler [lindex $GCC_UNDER_TEST 0]\n+if { [is_remote host] == 0 && [which $compiler] != 0 } {\n+    foreach i \"[exec $compiler --print-multi-lib]\" {\n+\tset mldir \"\"\n+\tregexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\tset mldir [string trimright $mldir \"\\;@\"]\n+\tif { \"$mldir\" == \".\" } {\n+\t    continue\n+\t}\n+\tif { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] == 1 } {\n+\t    append libgcc_s_path \":${rootme}/${mldir}\"\n+\t}\n+    }\n+}\n+\n+# On IRIX 6, we have to set variables akin to LD_LIBRARY_PATH, but\n+# called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n+# (for the 64-bit ABI).  The right way to do this would be to modify\n+# unix.exp -- but that's not an option since it's part of DejaGNU\n+# proper, so we do it here.  We really only need to do \n+# this on IRIX, but it shouldn't hurt to do it anywhere else.\n+# Doing this does cause trouble when testing cross-compilers.\n+if {![is_remote target]} {\n+    if [info exists env(LD_LIBRARY_PATH)] {\n+\tsetenv  LD_LIBRARY_PATH    \"$libgcc_s_path:$env(LD_LIBRARY_PATH)\"\n+    } else {\n+\tsetenv  LD_LIBRARY_PATH     $libgcc_s_path\n+    }\n+    if [info exists env(SHLIB_PATH)] {\n+\tsetenv  SHLIB_PATH          \"$libgcc_s_path:$env(SHLIB_PATH)\"\n+    } else {\n+\tsetenv  SHLIB_PATH          $libgcc_s_path\n+    }\n+    if [info exists env(LD_LIBRARYN32_PATH)] {\n+\tsetenv  LD_LIBRARYN32_PATH  \"$libgcc_s_path:$env(LD_LIBRARYN32_PATH)\"\n+    } else {\n+\tsetenv  LD_LIBRARYN32_PATH  $libgcc_s_path\n+    }\n+    if [info exists env(LD_LIBRARY64_PATH)] {\n+\tsetenv  LD_LIBRARY64_PATH  \"$libgcc_s_path:$env(LD_LIBRARY64_PATH)\"\n+    } else {\n+\tsetenv  LD_LIBRARY64_PATH   $libgcc_s_path\n+    }\n+    if [info exists env(DYLD_LIBRARY_PATH)] {\n+\tsetenv  DYLD_LIBRARY_PATH  \"$libgcc_s_path:$env(DYLD_LIBRARY_PATH)\"\n+    } else {\n+\tsetenv  DYLD_LIBRARY_PATH   $libgcc_s_path\n+    }\n+}\n \n # Split TORTURE_OPTIONS into two choices: one for testcases with loops and\n # one for testcases without loops."}]}