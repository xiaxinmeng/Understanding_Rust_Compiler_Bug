{"sha": "0259b07a28f451df6f509ac9d0be1cfef134487f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI1OWIwN2EyOGY0NTFkZjZmNTA5YWM5ZDBiZTFjZmVmMTM0NDg3Zg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2001-07-05T20:09:34Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-07-05T20:09:34Z"}, "message": "gcc.c (TARGET_OPTION_TRANSLATE_TABLE): New.\n\n* gcc.c (TARGET_OPTION_TRANSLATE_TABLE): New.\n(translate_options): If the above is defined, use it to map\ngiven options to new options.\n* doc/tm.texi: Document it.\n\nFrom-SVN: r43787", "tree": {"sha": "9448fd5a37ea4742eed3de53532273939ceb2e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9448fd5a37ea4742eed3de53532273939ceb2e89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0259b07a28f451df6f509ac9d0be1cfef134487f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0259b07a28f451df6f509ac9d0be1cfef134487f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0259b07a28f451df6f509ac9d0be1cfef134487f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0259b07a28f451df6f509ac9d0be1cfef134487f/comments", "author": null, "committer": null, "parents": [{"sha": "081ca317a420381a89a6d502990389df1c56cb16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081ca317a420381a89a6d502990389df1c56cb16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/081ca317a420381a89a6d502990389df1c56cb16"}], "stats": {"total": 92, "additions": 91, "deletions": 1}, "files": [{"sha": "9769799897ec520aa779ec3ccef256803950b311", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0259b07a28f451df6f509ac9d0be1cfef134487f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0259b07a28f451df6f509ac9d0be1cfef134487f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0259b07a28f451df6f509ac9d0be1cfef134487f", "patch": "@@ -1,3 +1,10 @@\n+2001-07-05  DJ Delorie  <dj@redhat.com>\n+\n+\t* gcc.c (TARGET_OPTION_TRANSLATE_TABLE): New.\n+\t(translate_options): If the above is defined, use it to map\n+\tgiven options to new options.\n+\t* doc/tm.texi: Document it.\n+\n 2001-07-05  Brad Lucier <lucier@math.purdue.edu>\n \t    Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n "}, {"sha": "ad9e29cf71c1d46efbdd520d05e9a264ae67f1f8", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0259b07a28f451df6f509ac9d0be1cfef134487f/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0259b07a28f451df6f509ac9d0be1cfef134487f/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=0259b07a28f451df6f509ac9d0be1cfef134487f", "patch": "@@ -140,6 +140,26 @@ the linker needs a space between the option and its argument.\n \n If this macro is not defined, the default value is @code{\"\"}.\n \n+@findex TARGET_OPTION_TRANSLATE_TABLE\n+@item TARGET_OPTION_TRANSLATE_TABLE\n+If defined, a list of pairs of strings, the first of which is a\n+potential command line target to the @file{gcc} driver program, and the\n+second of which is a space-separated (tabs and other whitespace are not\n+supported) list of options with which to replace the first option.  The\n+target defining this list is responsible for assuring that the results\n+are valid.  Replacement options may not be the @code{--opt} style, they\n+must be the @code{-opt} style.  It is the intention of this macro to\n+provide a mechanism for substitution that affects the multilibs chosen,\n+such as one option that enables many options, some of which select\n+multilibs.  Example nonsensical definition, where @code{-malt-abi},\n+@code{-EB}, and @code{-mspoo} cause different multilibs to be chosen:\n+\n+@example\n+#define TARGET_OPTION_TRANSLATE_TABLE \\\n+@{ \"-fast\",   \"-march=fast-foo -malt-abi -I/usr/fast-foo\" @}, \\\n+@{ \"-compat\", \"-EB -malign=4 -mspoo\" @}\n+@end example\n+\n @findex CPP_SPEC\n @item CPP_SPEC\n A C string constant that tells the GCC driver program options to"}, {"sha": "409ac2bbe9a3880ec508ddefe6c5145b6b91f896", "filename": "gcc/gcc.c", "status": "modified", "additions": 64, "deletions": 1, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0259b07a28f451df6f509ac9d0be1cfef134487f/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0259b07a28f451df6f509ac9d0be1cfef134487f/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=0259b07a28f451df6f509ac9d0be1cfef134487f", "patch": "@@ -952,6 +952,18 @@ struct option_map option_map[] =\n    {\"--\", \"-f\", \"*j\"}\n  };\n \f\n+\n+#ifdef TARGET_OPTION_TRANSLATE_TABLE\n+static struct {\n+  const char *option_found;\n+  const char *replacements;\n+} target_option_translations[] =\n+{\n+  TARGET_OPTION_TRANSLATE_TABLE,\n+  { 0, 0 }\n+};\n+#endif\n+\n /* Translate the options described by *ARGCP and *ARGVP.\n    Make a new vector and store it back in *ARGVP,\n    and store its length in *ARGVC.  */\n@@ -964,15 +976,66 @@ translate_options (argcp, argvp)\n   int i;\n   int argc = *argcp;\n   const char *const *argv = *argvp;\n+  int newvsize = (argc + 2) * 2 * sizeof (const char *);\n   const char **newv =\n-    (const char **) xmalloc ((argc + 2) * 2 * sizeof (const char *));\n+    (const char **) xmalloc (newvsize);\n   int newindex = 0;\n \n   i = 0;\n   newv[newindex++] = argv[i++];\n \n   while (i < argc)\n     {\n+#ifdef TARGET_OPTION_TRANSLATE_TABLE\n+      int tott_idx;\n+\n+      for (tott_idx = 0;\n+\t   target_option_translations[tott_idx].option_found;\n+\t   tott_idx++)\n+\t{\n+\t  if (strcmp (target_option_translations[tott_idx].option_found,\n+\t\t      argv[i]) == 0)\n+\t    {\n+\t      int spaces = 1;\n+\t      const char *sp;\n+\t      char *np;\n+\n+\t      for (sp = target_option_translations[tott_idx].replacements;\n+\t\t   *sp; sp++)\n+\t\t{\n+\t\t  if (*sp == ' ')\n+\t\t    spaces ++;\n+\t\t}\n+\n+\t      newvsize += spaces * sizeof (const char *);\n+\t      newv = (const char **) xrealloc (newv, newvsize);\n+\n+\t      sp = target_option_translations[tott_idx].replacements;\n+\t      np = (char *) xmalloc (strlen (sp) + 1);\n+\t      strcpy (np, sp);\n+\n+\t      while (1)\n+\t\t{\n+\t\t  while (*np == ' ')\n+\t\t    np++;\n+\t\t  if (*np == 0)\n+\t\t    break;\n+\t\t  newv[newindex++] = np;\n+\t\t  while (*np != ' ' && *np)\n+\t\t    np++;\n+\t\t  if (*np == 0)\n+\t\t    break;\n+\t\t  *np++ = 0;\n+\t\t}\n+\n+\t      i ++;\n+\t      break;\n+\t    }\n+\t}\n+      if (target_option_translations[tott_idx].option_found)\n+\tcontinue;\n+#endif\n+\n       /* Translate -- options.  */\n       if (argv[i][0] == '-' && argv[i][1] == '-')\n \t{"}]}