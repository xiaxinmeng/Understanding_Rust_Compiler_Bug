{"sha": "f9670bcecf5a8f8d26e2df989f51db158e0c790b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk2NzBiY2VjZjVhOGY4ZDI2ZTJkZjk4OWY1MWRiMTU4ZTBjNzkwYg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-01-17T20:27:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-17T20:27:40Z"}, "message": "* i386.md (integer conditional moves): Add missing earlyclobbers.\n\nFrom-SVN: r24720", "tree": {"sha": "4da025a298e988413fc17486f85293b1c8437224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4da025a298e988413fc17486f85293b1c8437224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9670bcecf5a8f8d26e2df989f51db158e0c790b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9670bcecf5a8f8d26e2df989f51db158e0c790b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9670bcecf5a8f8d26e2df989f51db158e0c790b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9670bcecf5a8f8d26e2df989f51db158e0c790b/comments", "author": null, "committer": null, "parents": [{"sha": "8e55d59ccb1e75b6576595494f4aa8076f1367c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e55d59ccb1e75b6576595494f4aa8076f1367c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e55d59ccb1e75b6576595494f4aa8076f1367c7"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "ff061e2b8ddec2ddb9b990d1b0a9e75e67457821", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9670bcecf5a8f8d26e2df989f51db158e0c790b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9670bcecf5a8f8d26e2df989f51db158e0c790b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9670bcecf5a8f8d26e2df989f51db158e0c790b", "patch": "@@ -1,5 +1,7 @@\n Sun Jan 17 19:23:20 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* i386.md (integer conditional moves): Add missing earlyclobbers.\n+\n         * regmove.c (optimize_reg_copy_1): Undo Aug 18 change.  Update\n         REG_N_CALLS_CROSSED and REG_LIVE_LENGH if and only if we change\n         where a register is live."}, {"sha": "b036b5d650b325f2fcdfceb8adca2229d84c11e8", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9670bcecf5a8f8d26e2df989f51db158e0c790b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9670bcecf5a8f8d26e2df989f51db158e0c790b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f9670bcecf5a8f8d26e2df989f51db158e0c790b", "patch": "@@ -7151,7 +7151,7 @@ byte_xor_operation:\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r,r,r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r,&r,&r\")\n \t(if_then_else:SI (match_operator 1 \"comparison_operator\" \n \t      [(match_operand:QI 2 \"nonimmediate_operand\" \"q,m,q,m,q,m\")\n \t\t(match_operand:QI 3 \"general_operand\" \"qmn,qn,qmn,qn,qmn,qn\")])\n@@ -7161,7 +7161,7 @@ byte_xor_operation:\n   \"#\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r,r,r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r,&r,&r\")\n \t(if_then_else:SI (match_operator 1 \"comparison_operator\" \n \t      [(match_operand 2 \"nonimmediate_operand\" \"r,m,r,m,r,m\")\n \t\t(match_operand 3 \"general_operand\" \"rmi,ri,rmi,ri,rmi,ri\")])\n@@ -7171,7 +7171,7 @@ byte_xor_operation:\n   \"#\")\n \n (define_split\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,&r\")\n \t(if_then_else:SI (match_operator 1 \"comparison_operator\" \n \t\t\t\t[(match_operand 2 \"nonimmediate_operand\" \"\")\n \t\t\t\t (const_int 0)])\n@@ -7186,7 +7186,7 @@ byte_xor_operation:\n   \"\")\n \n (define_split\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,&r\")\n \t(if_then_else:SI (match_operator 1 \"comparison_operator\" \n \t\t\t\t[(match_operand 2 \"nonimmediate_operand\" \"\")\n \t\t\t\t (match_operand 3 \"general_operand\" \"\")])\n@@ -7200,7 +7200,7 @@ byte_xor_operation:\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,&r\")\n \t(if_then_else:SI (match_operator 1 \"comparison_operator\" \n \t\t\t\t[(cc0) (const_int 0)])\n \t\t      (match_operand:SI 2 \"nonimmediate_operand\" \"rm,0,rm\")\n@@ -7225,7 +7225,7 @@ byte_xor_operation:\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,r,r\")\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,&r,&r\")\n \t(if_then_else:HI (match_operator 1 \"comparison_operator\" \n \t      [(match_operand:QI 2 \"nonimmediate_operand\" \"q,m,q,m,q,m\")\n \t\t(match_operand:QI 3 \"general_operand\" \"qmn,qn,qmn,qn,qmn,qn\")])\n@@ -7235,7 +7235,7 @@ byte_xor_operation:\n   \"#\")\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,r,r\")\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r,r,&r,&r\")\n \t(if_then_else:HI (match_operator 1 \"comparison_operator\" \n \t      [(match_operand 2 \"nonimmediate_operand\" \"r,m,r,m,r,m\")\n \t\t(match_operand 3 \"general_operand\" \"rmi,ri,rmi,ri,rmi,ri\")])\n@@ -7245,7 +7245,7 @@ byte_xor_operation:\n   \"#\")\n \n (define_split\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r\")\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,&r\")\n \t(if_then_else:HI (match_operator 1 \"comparison_operator\" \n \t\t\t\t[(match_operand 2 \"nonimmediate_operand\" \"\")\n \t\t\t\t (const_int 0)])\n@@ -7260,7 +7260,7 @@ byte_xor_operation:\n   \"\")\n \n (define_split\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r\")\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,&r\")\n \t(if_then_else:HI (match_operator 1 \"comparison_operator\" \n \t\t\t\t[(match_operand 2 \"nonimmediate_operand\" \"\")\n \t\t\t\t (match_operand 3 \"general_operand\" \"\")])\n@@ -7275,7 +7275,7 @@ byte_xor_operation:\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,r\")\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,r,&r\")\n \t(if_then_else:HI (match_operator 1 \"comparison_operator\" \n \t\t\t\t[(cc0) (const_int 0)])\n \t\t      (match_operand:HI 2 \"nonimmediate_operand\" \"rm,0,rm\")"}]}