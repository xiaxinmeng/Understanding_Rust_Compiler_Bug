{"sha": "2aec4543b1eb0e438db030cefcaeb6cd180ccc57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFlYzQ1NDNiMWViMGU0MzhkYjAzMGNlZmNhZWI2Y2QxODBjY2M1Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-03-21T14:26:52Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-03-21T14:26:52Z"}, "message": "Put @{xxx} in one line\n\n\t* gfortran.texi (_gfortran_caf_sync_memory): Put @{xxx} in one\n\tline.\n\nFrom-SVN: r221552", "tree": {"sha": "b5dc2c6689cb990638bc069dde76f2a4f143d4b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5dc2c6689cb990638bc069dde76f2a4f143d4b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aec4543b1eb0e438db030cefcaeb6cd180ccc57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aec4543b1eb0e438db030cefcaeb6cd180ccc57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aec4543b1eb0e438db030cefcaeb6cd180ccc57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aec4543b1eb0e438db030cefcaeb6cd180ccc57/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a79b7ec516a40f54db581dc4223ef4ebaa8e6884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79b7ec516a40f54db581dc4223ef4ebaa8e6884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a79b7ec516a40f54db581dc4223ef4ebaa8e6884"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "14abd8130e7a95d20b934b7109742c50b633a495", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aec4543b1eb0e438db030cefcaeb6cd180ccc57/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aec4543b1eb0e438db030cefcaeb6cd180ccc57/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2aec4543b1eb0e438db030cefcaeb6cd180ccc57", "patch": "@@ -1,3 +1,8 @@\n+2015-03-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gfortran.texi (_gfortran_caf_sync_memory): Put @{xxx} in one\n+\tline.\n+\n 2015-03-21  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.texi (_gfortran_caf_sync_all, _gfortran_caf_sync_images,"}, {"sha": "c980fe3d00890c43859dc919236e4152f73d4152", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aec4543b1eb0e438db030cefcaeb6cd180ccc57/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aec4543b1eb0e438db030cefcaeb6cd180ccc57/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=2aec4543b1eb0e438db030cefcaeb6cd180ccc57", "patch": "@@ -3847,8 +3847,8 @@ an error message; may be NULL\n @item @var{errmsg_len} @tab the buffer size of errmsg.\n @end multitable\n \n-@item @emph{NOTE} A simple implementation could be a simple @code{__asm__\n-__volatile__ (\"\":::\"memory)} to prevent code movements.\n+@item @emph{NOTE} A simple implementation could be a simple\n+@code{__asm__ __volatile__ (\"\":::\"memory)} to prevent code movements.\n @end table\n \n "}]}