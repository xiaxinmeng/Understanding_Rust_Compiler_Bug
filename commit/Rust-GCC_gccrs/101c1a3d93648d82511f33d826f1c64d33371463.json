{"sha": "101c1a3d93648d82511f33d826f1c64d33371463", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAxYzFhM2Q5MzY0OGQ4MjUxMWYzM2Q4MjZmMWM2NGQzMzM3MTQ2Mw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-02-19T18:18:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-02-19T18:18:06Z"}, "message": "combine.c (find_split_point): Don't turn a SIGN_EXTEND into a series of shifts if...\n\n        * combine.c (find_split_point): Don't turn a SIGN_EXTEND into\n        a series of shifts if either mode is a partial integer mode.\n\nFrom-SVN: r13665", "tree": {"sha": "4cefa5378d05a9ea979585cebd40edbc30313e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cefa5378d05a9ea979585cebd40edbc30313e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/101c1a3d93648d82511f33d826f1c64d33371463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101c1a3d93648d82511f33d826f1c64d33371463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/101c1a3d93648d82511f33d826f1c64d33371463", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101c1a3d93648d82511f33d826f1c64d33371463/comments", "author": null, "committer": null, "parents": [{"sha": "930aeef3f3963cd1660a217e8f43ce04efd5d678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930aeef3f3963cd1660a217e8f43ce04efd5d678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/930aeef3f3963cd1660a217e8f43ce04efd5d678"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "6a6ebb4dbfa2d78b2d6b0c9a472af98fc77f04b0", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101c1a3d93648d82511f33d826f1c64d33371463/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101c1a3d93648d82511f33d826f1c64d33371463/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=101c1a3d93648d82511f33d826f1c64d33371463", "patch": "@@ -2699,6 +2699,14 @@ find_split_point (loc, insn)\n \n \tcase SIGN_EXTEND:\n \t  inner = XEXP (SET_SRC (x), 0);\n+\n+\t  /* We can't optimize if either mode is a partial integer\n+\t     mode as we don't know how many bits are significant\n+\t     in those modes.  */\n+\t  if (GET_MODE_CLASS (GET_MODE (inner)) == MODE_PARTIAL_INT\n+\t      || GET_MODE_CLASS (GET_MODE (SET_SRC (x))) == MODE_PARTIAL_INT)\n+\t    break;\n+\n \t  pos = 0;\n \t  len = GET_MODE_BITSIZE (GET_MODE (inner));\n \t  unsignedp = 0;"}]}