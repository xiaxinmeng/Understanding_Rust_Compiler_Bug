{"sha": "70f8b89fd9ff69e2b399042d5b15cd367c970c67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBmOGI4OWZkOWZmNjllMmIzOTkwNDJkNWIxNWNkMzY3Yzk3MGM2Nw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-01-12T16:44:09Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-01-12T16:44:09Z"}, "message": "c-pch.c (asm_file_startpos): Change to `long'.\n\n\t* c-pch.c (asm_file_startpos): Change to `long'.\n\t(pch_init): Use ftell, not ftello.\n\t(c_common_write_pch): Use ftell/fseek, not ftello/fseeko.\n\tUse `long' instead of `off_t'.\n\t(c_common_read_pch): Likewise.\n\t* ggc-common.c (gt_pch_save): Use long/ftell instead of\n\toff_t/ftello.\n\nFrom-SVN: r61233", "tree": {"sha": "3fd25aabc71abf89cf5a256cba6ac1a97c8ccc06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fd25aabc71abf89cf5a256cba6ac1a97c8ccc06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70f8b89fd9ff69e2b399042d5b15cd367c970c67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f8b89fd9ff69e2b399042d5b15cd367c970c67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f8b89fd9ff69e2b399042d5b15cd367c970c67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f8b89fd9ff69e2b399042d5b15cd367c970c67/comments", "author": null, "committer": null, "parents": [{"sha": "ae6ccbe39130d9db4d9676d78ec65f01dd94fd52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae6ccbe39130d9db4d9676d78ec65f01dd94fd52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae6ccbe39130d9db4d9676d78ec65f01dd94fd52"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "7f04cf60572cf119fea7550abaf3f29e741fa491", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f8b89fd9ff69e2b399042d5b15cd367c970c67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f8b89fd9ff69e2b399042d5b15cd367c970c67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70f8b89fd9ff69e2b399042d5b15cd367c970c67", "patch": "@@ -1,3 +1,13 @@\n+2003-01-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* c-pch.c (asm_file_startpos): Change to `long'.\n+\t(pch_init): Use ftell, not ftello.\n+\t(c_common_write_pch): Use ftell/fseek, not ftello/fseeko.\n+\tUse `long' instead of `off_t'.\n+\t(c_common_read_pch): Likewise.\n+\t* ggc-common.c (gt_pch_save): Use long/ftell instead of\n+\toff_t/ftello.\n+\n 2003-01-12  Alan Modra  <amodra@bigpond.net.au>\n \n \t* expr.c (expand_expr <RDIV_EXPR>): Correct recursive call args."}, {"sha": "13dc7631798db247ab93a7824ac7808c541546d1", "filename": "gcc/c-pch.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f8b89fd9ff69e2b399042d5b15cd367c970c67/gcc%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f8b89fd9ff69e2b399042d5b15cd367c970c67/gcc%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pch.c?ref=70f8b89fd9ff69e2b399042d5b15cd367c970c67", "patch": "@@ -40,7 +40,7 @@ static const char pch_ident[8] = \"gpchC010\";\n static FILE *pch_outfile;\n \n extern char *asm_file_name;\n-static off_t asm_file_startpos;\n+static long asm_file_startpos;\n \n void\n pch_init ()\n@@ -67,7 +67,7 @@ pch_init ()\n \t  || strcmp (asm_file_name, \"-\") == 0)\n \tfatal_error (\"`%s' is not a valid output file\", asm_file_name);\n \n-      asm_file_startpos = ftello (asm_out_file);\n+      asm_file_startpos = ftell (asm_out_file);\n       \n       cpp_save_state (parse_in, f);\n     }\n@@ -77,13 +77,13 @@ void\n c_common_write_pch ()\n {\n   char *buf;\n-  off_t asm_file_end;\n-  off_t written;\n+  long asm_file_end;\n+  long written;\n   struct c_pch_header h;\n \n   cpp_write_pch_deps (parse_in, pch_outfile);\n \n-  asm_file_end = ftello (asm_out_file);\n+  asm_file_end = ftell (asm_out_file);\n   h.asm_size = asm_file_end - asm_file_startpos;\n   \n   if (fwrite (&h, sizeof (h), 1, pch_outfile) != 1)\n@@ -92,12 +92,12 @@ c_common_write_pch ()\n   buf = xmalloc (16384);\n   fflush (asm_out_file);\n \n-  if (fseeko (asm_out_file, asm_file_startpos, SEEK_SET) != 0)\n+  if (fseek (asm_out_file, asm_file_startpos, SEEK_SET) != 0)\n     fatal_io_error (\"can't seek in %s\", asm_file_name);\n \n   for (written = asm_file_startpos; written < asm_file_end; )\n     {\n-      off_t size = asm_file_end - written;\n+      long size = asm_file_end - written;\n       if (size > 16384)\n \tsize = 16384;\n       if (fread (buf, size, 1, asm_out_file) != 1)\n@@ -203,7 +203,7 @@ c_common_read_pch (pfile, name, fd, orig_name)\n   buf = xmalloc (16384);\n   for (written = 0; written < h.asm_size; )\n     {\n-      off_t size = h.asm_size - written;\n+      long size = h.asm_size - written;\n       if (size > 16384)\n \tsize = 16384;\n       if (fread (buf, size, 1, f) != 1"}, {"sha": "e9c2f020668e95a8f1d912aaebfbe4ecf8fbd8ec", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f8b89fd9ff69e2b399042d5b15cd367c970c67/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f8b89fd9ff69e2b399042d5b15cd367c970c67/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=70f8b89fd9ff69e2b399042d5b15cd367c970c67", "patch": "@@ -495,9 +495,9 @@ gt_pch_save (f)\n   \n   /* Pad the PCH file so that the mmaped area starts on a page boundary.  */\n   {\n-    off_t o;\n-    o = ftello (state.f) + sizeof (mmi);\n-    if (o == (off_t) -1)\n+    long o;\n+    o = ftell (state.f) + sizeof (mmi);\n+    if (o == -1)\n       fatal_io_error (\"can't get position in PCH file\");\n     mmi.offset = page_size - o % page_size;\n     if (mmi.offset == page_size)"}]}