{"sha": "32387f4bfa4eb39d3191d66a624160d447281a33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIzODdmNGJmYTRlYjM5ZDMxOTFkNjZhNjI0MTYwZDQ0NzI4MWEzMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-11-06T19:04:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-11-06T19:04:47Z"}, "message": "i386.c (ix86_init_machine_status): Do not explicitly clear tls_descriptor_call_expanded_p again.\n\n\t* config/i386/i386.c (ix86_init_machine_status): Do not\n\texplicitly clear tls_descriptor_call_expanded_p again.\n\nFrom-SVN: r193257", "tree": {"sha": "c35b79d67abf24ebbb5227093bca721bf501a681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c35b79d67abf24ebbb5227093bca721bf501a681"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32387f4bfa4eb39d3191d66a624160d447281a33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32387f4bfa4eb39d3191d66a624160d447281a33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32387f4bfa4eb39d3191d66a624160d447281a33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32387f4bfa4eb39d3191d66a624160d447281a33/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4ecb9228b6efa6dba32179361c1186bcaddee1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ecb9228b6efa6dba32179361c1186bcaddee1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ecb9228b6efa6dba32179361c1186bcaddee1d"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "316f55b7421ffe03aa064643e4ed31ed52ca2f47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32387f4bfa4eb39d3191d66a624160d447281a33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32387f4bfa4eb39d3191d66a624160d447281a33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32387f4bfa4eb39d3191d66a624160d447281a33", "patch": "@@ -1,3 +1,8 @@\n+2012-11-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_init_machine_status): Do not\n+\texplicitly clear tls_descriptor_call_expanded_p again.\n+\n 2012-11-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md"}, {"sha": "9e544b2be3b9a8947d590eb8cabf4a0fb9dc4d2b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32387f4bfa4eb39d3191d66a624160d447281a33/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32387f4bfa4eb39d3191d66a624160d447281a33/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=32387f4bfa4eb39d3191d66a624160d447281a33", "patch": "@@ -3649,8 +3649,10 @@ ix86_option_override_internal (bool main_args_p)\n \t  if ((x86_avx256_split_unaligned_store & ix86_tune_mask)\n \t      && !(target_flags_explicit & MASK_AVX256_SPLIT_UNALIGNED_STORE))\n \t    target_flags |= MASK_AVX256_SPLIT_UNALIGNED_STORE;\n-\t  /* Enable 128-bit AVX instruction generation for the auto-vectorizer.  */\n-\t  if (TARGET_AVX128_OPTIMAL && !(target_flags_explicit & MASK_PREFER_AVX128))\n+\t  /* Enable 128-bit AVX instruction generation\n+\t     for the auto-vectorizer.  */\n+\t  if (TARGET_AVX128_OPTIMAL\n+\t      && !(target_flags_explicit & MASK_PREFER_AVX128))\n \t    target_flags |= MASK_PREFER_AVX128;\n \t}\n     }\n@@ -23415,7 +23417,6 @@ ix86_init_machine_status (void)\n \n   f = ggc_alloc_cleared_machine_function ();\n   f->use_fast_prologue_epilogue_nregs = -1;\n-  f->tls_descriptor_call_expanded_p = 0;\n   f->call_abi = ix86_abi;\n   f->optimize_mode_switching[AVX_U128] = TARGET_VZEROUPPER;\n "}]}