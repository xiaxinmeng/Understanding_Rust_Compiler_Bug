{"sha": "34d054d126f0fa870e36e37709199db84a5e1bd8", "node_id": "C_kwDOANBUbNoAKDM0ZDA1NGQxMjZmMGZhODcwZTM2ZTM3NzA5MTk5ZGI4NGE1ZTFiZDg", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2022-07-13T22:06:47Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-02T07:34:07Z"}, "message": "[Ada] Error on return of object whose full view has undefaulted discriminants\n\nThe compiler wrongly reports an error about the expected type not\nmatching the same-named found type in a return statement for a function\nwhose result type has unknown discriminants when the full type is tagged\nand has an undefaulted discriminant, and the return expression is an object\ninitialized by a function call. The processing for return statements that\ncreates an actual subtype based on the return expression type's underlying\ntype when that type has discriminants, and converts the expression to\nthe actual subtype, should only be done when the underlying discriminated\ntype is mutable (i.e., has defaulted discriminants). Otherwise the\nunchecked conversion to the actual subtype (of the underlying full type)\ncan lead to a resolution problem later within Expand_Simple_Function_Return\nin the expansion of tag assignments (because the target type of the\nconversion is a full view and does not match the partial view of\nthe function's result type).\n\ngcc/ada/\n\n\t* exp_ch6.adb (Expand_Simple_Function_Return) Bypass creation of an actual\n\tsubtype and unchecked conversion to that subtype when the underlying type\n\tof the expression has discriminants without defaults.", "tree": {"sha": "ea09fdf3b5bf33309cb4ecb57d2eb186ca76bb88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea09fdf3b5bf33309cb4ecb57d2eb186ca76bb88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34d054d126f0fa870e36e37709199db84a5e1bd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34d054d126f0fa870e36e37709199db84a5e1bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34d054d126f0fa870e36e37709199db84a5e1bd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34d054d126f0fa870e36e37709199db84a5e1bd8/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f64e37c1f6d5c0e7db588171cfff194cd78d490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f64e37c1f6d5c0e7db588171cfff194cd78d490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f64e37c1f6d5c0e7db588171cfff194cd78d490"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fe3bb5be28d0461ae91f543a30ba5f846c21718a", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34d054d126f0fa870e36e37709199db84a5e1bd8/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34d054d126f0fa870e36e37709199db84a5e1bd8/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=34d054d126f0fa870e36e37709199db84a5e1bd8", "patch": "@@ -6632,7 +6632,7 @@ package body Exp_Ch6 is\n \n          begin\n             if not Exp_Is_Function_Call\n-              and then Has_Discriminants (Ubt)\n+              and then Has_Defaulted_Discriminants (Ubt)\n               and then not Is_Constrained (Ubt)\n               and then not Has_Unchecked_Union (Ubt)\n             then"}]}