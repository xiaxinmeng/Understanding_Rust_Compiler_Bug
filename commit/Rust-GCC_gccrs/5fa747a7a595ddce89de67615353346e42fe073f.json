{"sha": "5fa747a7a595ddce89de67615353346e42fe073f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZhNzQ3YTdhNTk1ZGRjZTg5ZGU2NzYxNTM1MzM0NmU0MmZlMDczZg==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim@kugelworks.com", "date": "2013-12-07T08:47:33Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2013-12-07T08:47:33Z"}, "message": "Cleanup libc selection and Android support.\n\n\t* config.gcc (*linux*): Split libc selection from Android support.\n\tAdd libc selection to all *linux* targets.  Add Android support to\n\tarchitectures that support it.\n\t(arm*-*-linux-*, i[34567]86-*-linux*, x86_64-*-linux*,)\n\t(mips*-*-linux*): Add Android support.\n\nFrom-SVN: r205781", "tree": {"sha": "92e5ddc5cb4a65444b20847c1575b064dce6194b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92e5ddc5cb4a65444b20847c1575b064dce6194b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fa747a7a595ddce89de67615353346e42fe073f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa747a7a595ddce89de67615353346e42fe073f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fa747a7a595ddce89de67615353346e42fe073f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa747a7a595ddce89de67615353346e42fe073f/comments", "author": null, "committer": null, "parents": [{"sha": "3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "3d4b3e765997b03616762c97f8d62584106aad37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa747a7a595ddce89de67615353346e42fe073f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa747a7a595ddce89de67615353346e42fe073f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fa747a7a595ddce89de67615353346e42fe073f", "patch": "@@ -1,3 +1,11 @@\n+2013-12-07  Maxim Kuvyrkov  <maxim@kugelworks.com>\n+\n+\t* config.gcc (*linux*): Split libc selection from Android support.\n+\tAdd libc selection to all *linux* targets.  Add Android support to\n+\tarchitectures that support it.\n+\t(arm*-*-linux-*, i[34567]86-*-linux*, x86_64-*-linux*,)\n+\t(mips*-*-linux*): Add Android support.\n+\n 2013-12-07  Maxim Kuvyrkov  <maxim@kugelworks.com>\n \n \t* config/bfin/uclinux.h, config/c6x/uclinux-elf.h,"}, {"sha": "93743d8c8657cf5efe8df0e17de80f98de1532e9", "filename": "gcc/config.gcc", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa747a7a595ddce89de67615353346e42fe073f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa747a7a595ddce89de67615353346e42fe073f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5fa747a7a595ddce89de67615353346e42fe073f", "patch": "@@ -676,11 +676,15 @@ case ${target} in\n       native_system_header_dir=/include\n       ;;\n   esac\n-  # glibc / uclibc / bionic switch.\n+  # Linux C libraries selection switch: glibc / uclibc / bionic.\n   # uclibc and bionic aren't usable for GNU/Hurd and neither for GNU/k*BSD.\n   case $target in\n     *linux*)\n-      extra_options=\"$extra_options linux.opt\";;\n+      tm_p_file=\"${tm_p_file} linux-protos.h\"\n+      tmake_file=\"${tmake_file} t-linux\"\n+      extra_objs=\"${extra_objs} linux.o\"\n+      extra_options=\"${extra_options} linux.opt\"\n+      ;;\n   esac\n   case $target in\n     *-*-*android*)\n@@ -698,16 +702,6 @@ case ${target} in\n   default_use_cxa_atexit=yes\n   use_gcc_tgmath=no\n   use_gcc_stdint=wrap\n-  # Add Android userspace support to Linux targets.\n-  case $target in\n-    *linux*)\n-      tm_p_file=\"${tm_p_file} linux-protos.h\"\n-      tmake_file=\"${tmake_file} t-linux\"\n-      extra_objs=\"$extra_objs linux.o\"\n-      tm_file=\"$tm_file linux-android.h\"\n-      extra_options=\"$extra_options linux-android.opt\"\n-      ;;\n-  esac\n   # Enable compilation for Android by default for *android* targets.\n   case $target in\n     *-*-*android*)\n@@ -993,14 +987,14 @@ arm*-*-netbsdelf*)\n \t;;\n arm*-*-linux-*)\t\t\t# ARM GNU/Linux with ELF\n \ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h arm/elf.h arm/linux-gas.h arm/linux-elf.h\"\n+\textra_options=\"${extra_options} linux-android.opt\"\n \tcase $target in\n \tarm*b-*-linux*)\n \t    tm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n \t    ;;\n \tesac\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi\"\n \ttm_file=\"$tm_file arm/bpabi.h arm/linux-eabi.h arm/aout.h arm/arm.h\"\n-\textra_objs=\"$extra_objs linux.o\"\n \t# Define multilib configuration for arm-linux-androideabi.\n \tcase ${target} in\n \t*-androideabi)\n@@ -1373,7 +1367,8 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h glibc-stdint.h\"\n \tcase ${target} in\n \ti[34567]86-*-linux*)\n-\t\ttm_file=\"${tm_file} linux.h\"\n+\t\ttm_file=\"${tm_file} linux.h linux-android.h\"\n+\t\textra_options=\"${extra_options} linux-android.opt\"\n \t\t# Assume modern glibc\n \t\tdefault_gnu_indirect_function=yes\n \t\tif test x$enable_targets = xall; then\n@@ -1434,7 +1429,8 @@ x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \t\t i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h\"\n \tcase ${target} in\n \tx86_64-*-linux*)\n-\t\ttm_file=\"${tm_file} linux.h i386/linux-common.h i386/linux64.h\"\n+\t\ttm_file=\"${tm_file} linux.h linux-android.h i386/linux-common.h i386/linux64.h\"\n+\t\textra_options=\"${extra_options} linux-android.opt\"\n \t\t# Assume modern glibc\n \t\tdefault_gnu_indirect_function=yes\n \t  \t;;\n@@ -1949,7 +1945,8 @@ mips64*-*-linux* | mipsisa64*-*-linux*)\n \tgas=yes\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n-        tm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h\"\n+\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h\"\n+\textra_options=\"${extra_options} linux-android.opt\"\n \tif test x$enable_targets = xall; then\n \t\ttm_file=\"${tm_file} mips/gnu-user64.h mips/linux64.h\"\n \t\ttmake_file=\"${tmake_file} mips/t-linux64\""}]}