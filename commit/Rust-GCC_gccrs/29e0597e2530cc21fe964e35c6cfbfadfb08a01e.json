{"sha": "29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllMDU5N2UyNTMwY2MyMWZlOTY0ZTM1YzZjZmJmYWRmYjA4YTAxZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-11-24T07:47:46Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-11-24T07:47:46Z"}, "message": "error.c (gfc_fatal_error_1): Remove.\n\n2014-11-24  Tobias Burnus  <burnus@net-b.de>\n\n        * error.c (gfc_fatal_error_1): Remove.\n        * gfortran.h (gfc_fatal_error_1): Remove.\n        * check.c (check_co_collective): Change gfc_fatal_error_1 to\n        gfc_fatal_error.\n        * match.c (gfc_match_name): Ditto.\n        * trans-array.c (gfc_conv_array_initializer): Ditto.\n        * trans-stmt.c (gfc_trans_sync): Ditto.\n\n2014-11-24  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/dollar_sym_3.f: Update dg-error.\n        * gfortran.dg/dollar_sym_3.f: Ditto.\n\nFrom-SVN: r217997", "tree": {"sha": "1aa34e1cd7e4302714c0158d4e9f35e09f80bc70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aa34e1cd7e4302714c0158d4e9f35e09f80bc70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6a4ed03be9089a1a242ddc8e812c5e8e504a391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a4ed03be9089a1a242ddc8e812c5e8e504a391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a4ed03be9089a1a242ddc8e812c5e8e504a391"}], "stats": {"total": 64, "additions": 30, "deletions": 34}, "files": [{"sha": "e797d44c8b70717438b4b116841e4e67f01fff83", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -1,3 +1,13 @@\n+2014-11-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* error.c (gfc_fatal_error_1): Remove.\n+\t* gfortran.h (gfc_fatal_error_1): Remove.\n+\t* check.c (check_co_collective): Change gfc_fatal_error_1 to\n+\tgfc_fatal_error.\n+\t* match.c (gfc_match_name): Ditto.\n+\t* trans-array.c (gfc_conv_array_initializer): Ditto.\n+\t* trans-stmt.c (gfc_trans_sync): Ditto.\n+\n 2014-11-23  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR fortran/44054"}, {"sha": "8da59d5888a571baea17f64ba66c5a6685d29240", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -1482,8 +1482,8 @@ check_co_collective (gfc_expr *a, gfc_expr *image_idx, gfc_expr *stat,\n \n   if (gfc_option.coarray == GFC_FCOARRAY_NONE)\n     {\n-      gfc_fatal_error_1 (\"Coarrays disabled at %L, use -fcoarray= to enable\",\n-\t\t\t &a->where);\n+      gfc_fatal_error (\"Coarrays disabled at %L, use %<-fcoarray=%> to enable\",\n+\t\t       &a->where);\n       return false;\n     }\n "}, {"sha": "202dd88fd4f351e98f67763fd5ab919c9584dc15", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -1148,7 +1148,6 @@ gfc_error_now_2 (const char *gmsgid, ...)\n \n \n /* Fatal error, never returns.  */\n-/* This function uses the common diagnostics, but does not support %L, yet.  */\n \n void\n gfc_fatal_error (const char *gmsgid, ...)\n@@ -1272,24 +1271,6 @@ gfc_error_now (const char *gmsgid, ...)\n }\n \n \n-/* Fatal error, never returns.  */\n-/* Use gfc_fatal_error instead, unless gmsgid contains a %L.  */\n-\n-void\n-gfc_fatal_error_1 (const char *gmsgid, ...)\n-{\n-  va_list argp;\n-\n-  buffer_flag = 0;\n-\n-  va_start (argp, gmsgid);\n-  error_print (_(\"Fatal Error:\"), _(gmsgid), argp);\n-  va_end (argp);\n-\n-  exit (FATAL_EXIT_CODE);\n-}\n-\n-\n /* This shouldn't happen... but sometimes does.  */\n \n void"}, {"sha": "1b2602806d8558591b856ffc14317ae763d6e24c", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -2705,7 +2705,6 @@ void gfc_warning_check (void);\n void gfc_error (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_error_now (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_error_now_2 (const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(1,2);\n-void gfc_fatal_error_1 (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);\n void gfc_fatal_error (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);\n void gfc_internal_error (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);\n void gfc_clear_error (void);"}, {"sha": "a157fe7515f098ccb15bd7aeee796218d4edee58", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -557,8 +557,8 @@ gfc_match_name (char *buffer)\n \n   if (c == '$' && !gfc_option.flag_dollar_ok)\n     {\n-      gfc_fatal_error_1 (\"Invalid character '$' at %L. Use -fdollar-ok to allow\"\n-\t\t\t \" it as an extension\", &old_loc);\n+      gfc_fatal_error (\"Invalid character %<$%> at %L. Use %<-fdollar-ok%> to \"\n+\t\t       \"allow it as an extension\", &old_loc);\n       return MATCH_ERROR;\n     }\n "}, {"sha": "218d27444f9c8a073002d3acc365578575437969", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -5425,11 +5425,12 @@ gfc_conv_array_initializer (tree type, gfc_expr * expr)\n             {\n               /* Problems occur when we get something like\n                  integer :: a(lots) = (/(i, i=1, lots)/)  */\n-              gfc_fatal_error_1 (\"The number of elements in the array \"\n-\t\t\t\t \"constructor at %L requires an increase of \"\n-\t\t\t\t \"the allowed %d upper limit. See \"\n-\t\t\t\t \"-fmax-array-constructor option\", &expr->where,\n-\t\t\t\t gfc_option.flag_max_array_constructor);\n+              gfc_fatal_error (\"The number of elements in the array \"\n+\t\t\t       \"constructor at %L requires an increase of \"\n+\t\t\t       \"the allowed %d upper limit. See \"\n+\t\t\t       \"%<-fmax-array-constructor%> option\",\n+\t\t\t       &expr->where,\n+\t\t\t       gfc_option.flag_max_array_constructor);\n \t      return NULL_TREE;\n \t    }\n           if (mpz_cmp_si (c->offset, 0) != 0)"}, {"sha": "d17b0758d2c21127e55c9c1c1d4e95f79a00838d", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -865,9 +865,9 @@ gfc_trans_sync (gfc_code *code, gfc_exec_op type)\n \t{\n \t  /* FIXME.  */\n \t  if (code->expr1->ts.kind != gfc_c_int_kind)\n-\t    gfc_fatal_error_1 (\"Sorry, only support for integer kind %d \"\n-\t\t\t       \"implemented for image-set at %L\",\n-\t\t\t       gfc_c_int_kind, &code->expr1->where);\n+\t    gfc_fatal_error (\"Sorry, only support for integer kind %d \"\n+\t\t\t     \"implemented for image-set at %L\",\n+\t\t\t     gfc_c_int_kind, &code->expr1->where);\n \n \t  gfc_conv_array_parameter (&se, code->expr1, true, NULL, NULL, &len);\n \t  images = se.expr;"}, {"sha": "084e45c24c9e1216378434a4188545b4c15bbb20", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -1,3 +1,8 @@\n+2014-11-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/dollar_sym_3.f: Update dg-error.\n+\t* gfortran.dg/dollar_sym_3.f: Ditto.\n+\n 2014-11-23  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/autopar/pr46799.c: XFAIL on AIX."}, {"sha": "bb4d2d3a307e3fd25aa9b9d24edc428ded3ca760", "filename": "gcc/testsuite/gfortran.dg/coarray_collectives_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_3.f90?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -6,5 +6,5 @@ program test\n   implicit none\n   intrinsic co_max\n   integer :: val\n-  call co_max(val) ! { dg-error \"Coarrays disabled at .1., use -fcoarray= to enable\" }\n+  call co_max(val) ! { dg-error \"Coarrays disabled at .1., use '-fcoarray=' to enable\" }\n end program test"}, {"sha": "8b2644540a91758c3fd538f6ca6d6cf9583db8dc", "filename": "gcc/testsuite/gfortran.dg/dollar_sym_3.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e0597e2530cc21fe964e35c6cfbfadfb08a01e/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdollar_sym_3.f?ref=29e0597e2530cc21fe964e35c6cfbfadfb08a01e", "patch": "@@ -5,6 +5,6 @@\n ! Contributed by Vittorio Zecca\n !\n c Segmentation fault in gfc_restore_last_undo_checkpoint\n-      COMMON RADE3155V62$JUTMU9L9E(3,3,3), LADE314JUTMP9         ! { dg-error \"Invalid character '\\\\$' at .1.. Use -fdollar-ok to allow it as an extension\" }\n+      COMMON RADE3155V62$JUTMU9L9E(3,3,3), LADE314JUTMP9         ! { dg-error \"Invalid character '\\\\$' at .1.. Use '-fdollar-ok' to allow it as an extension\" }\n      +LHEDDJNTMP9L(3,3,3)                                                       \n       end"}]}