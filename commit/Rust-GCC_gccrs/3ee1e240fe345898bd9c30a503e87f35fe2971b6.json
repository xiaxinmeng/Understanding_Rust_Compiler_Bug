{"sha": "3ee1e240fe345898bd9c30a503e87f35fe2971b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VlMWUyNDBmZTM0NTg5OGJkOWMzMGE1MDNlODdmMzVmZTI5NzFiNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-29T03:48:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-29T03:48:35Z"}, "message": "(process_init_constructor): Never set current_index\nitself--always store into current_index_node.\n\nFrom-SVN: r4591", "tree": {"sha": "ab8c1f51bca2e6cd839c757f9a6f1b1b409e9cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab8c1f51bca2e6cd839c757f9a6f1b1b409e9cc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ee1e240fe345898bd9c30a503e87f35fe2971b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ee1e240fe345898bd9c30a503e87f35fe2971b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ee1e240fe345898bd9c30a503e87f35fe2971b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ee1e240fe345898bd9c30a503e87f35fe2971b6/comments", "author": null, "committer": null, "parents": [{"sha": "e8b1e86872cd6e19c4c2976646f067c868b74db4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8b1e86872cd6e19c4c2976646f067c868b74db4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8b1e86872cd6e19c4c2976646f067c868b74db4"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "89a838fef8b0e1f45a1917461ed6c0ab16c605f2", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ee1e240fe345898bd9c30a503e87f35fe2971b6/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ee1e240fe345898bd9c30a503e87f35fe2971b6/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=3ee1e240fe345898bd9c30a503e87f35fe2971b6", "patch": "@@ -5254,12 +5254,18 @@ process_init_constructor (type, init, elts, constant_value, constant_element,\n \t\t\t element.  */\n \t\t      warning (\"empty array initializer range\");\n \t\t      tail = TREE_CHAIN (tail);\n-\t\t      current_index = end_index;\n+\t\t      TREE_INT_CST_LOW (current_index)\n+\t\t\t= TREE_INT_CST_LOW (end_index);\n+\t\t      TREE_INT_CST_HIGH (current_index)\n+\t\t\t= TREE_INT_CST_HIGH (end_index);\n \t\t      continue;\n \t\t    }\n \t\t  else\n \t\t    {\n-\t\t      current_index = start_index;\n+\t\t      TREE_INT_CST_LOW (current_index)\n+\t\t\t= TREE_INT_CST_LOW (start_index);\n+\t\t      TREE_INT_CST_HIGH (current_index)\n+\t\t\t= TREE_INT_CST_HIGH (start_index);\n \t\t      win = 1;\n \t\t      /* See if the first element is also the last.  */\n \t\t      if (!tree_int_cst_lt (current_index, end_index))\n@@ -5276,7 +5282,10 @@ process_init_constructor (type, init, elts, constant_value, constant_element,\n \t      else\n \t\t{\n \t\t  constant_expression_warning (index);\n-\t\t  current_index = index, win = 1;\n+\t\t  TREE_INT_CST_LOW (current_index) = TREE_INT_CST_LOW (index);\n+\t\t  TREE_INT_CST_HIGH (current_index)\n+\t\t    = TREE_INT_CST_HIGH (index);\n+\t\t  win = 1;\n \t\t}\n \n \t      if (!win)"}]}