{"sha": "2a293391eca5ddea7bc6debb411a605b7cc1ee52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEyOTMzOTFlY2E1ZGRlYTdiYzZkZWJiNDExYTYwNWI3Y2MxZWU1Mg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-05-17T12:47:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-05-17T12:47:45Z"}, "message": "tree-ssa-alias.c (stmt_kills_ref_p_1): Properly compare MEM_REF offsets.\n\n2013-05-17  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-alias.c (stmt_kills_ref_p_1): Properly compare\n\tMEM_REF offsets.\n\nFrom-SVN: r199014", "tree": {"sha": "42aa9a0ea601c283de3b834b54082065297be32e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42aa9a0ea601c283de3b834b54082065297be32e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a293391eca5ddea7bc6debb411a605b7cc1ee52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a293391eca5ddea7bc6debb411a605b7cc1ee52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a293391eca5ddea7bc6debb411a605b7cc1ee52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a293391eca5ddea7bc6debb411a605b7cc1ee52/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38050e90baff4f1974ff35d77f34a4ee0efb7478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38050e90baff4f1974ff35d77f34a4ee0efb7478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38050e90baff4f1974ff35d77f34a4ee0efb7478"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "4caa40276120fa16d5b96ab0b3504560f597e600", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a293391eca5ddea7bc6debb411a605b7cc1ee52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a293391eca5ddea7bc6debb411a605b7cc1ee52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a293391eca5ddea7bc6debb411a605b7cc1ee52", "patch": "@@ -1,3 +1,8 @@\n+2013-05-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.c (stmt_kills_ref_p_1): Properly compare\n+\tMEM_REF offsets.\n+\n 2013-05-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c (SANITIZER_SPEC): Reject -fsanitize=address -fsanitize=thread"}, {"sha": "2ecd13915bc87b3128a4320e0108981790a6537f", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a293391eca5ddea7bc6debb411a605b7cc1ee52/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a293391eca5ddea7bc6debb411a605b7cc1ee52/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=2a293391eca5ddea7bc6debb411a605b7cc1ee52", "patch": "@@ -2002,8 +2002,8 @@ stmt_kills_ref_p_1 (gimple stmt, ao_ref *ref)\n \t  if (TREE_CODE (base) == MEM_REF && TREE_CODE (ref->base) == MEM_REF\n \t      && TREE_OPERAND (base, 0) == TREE_OPERAND (ref->base, 0))\n \t    {\n-\t      if (!tree_int_cst_equal (TREE_OPERAND (base, 0),\n-\t\t\t\t       TREE_OPERAND (ref->base, 0)))\n+\t      if (!tree_int_cst_equal (TREE_OPERAND (base, 1),\n+\t\t\t\t       TREE_OPERAND (ref->base, 1)))\n \t\t{\n \t\t  double_int off1 = mem_ref_offset (base);\n \t\t  off1 = off1.lshift (BITS_PER_UNIT == 8"}]}