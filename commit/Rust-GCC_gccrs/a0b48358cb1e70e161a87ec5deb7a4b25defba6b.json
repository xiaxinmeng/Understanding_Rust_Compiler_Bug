{"sha": "a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBiNDgzNThjYjFlNzBlMTYxYTg3ZWM1ZGViN2E0YjI1ZGVmYmE2Yg==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2020-04-25T20:27:14Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2020-04-25T20:27:14Z"}, "message": "libffi/test: Fix compilation for build sysroot\n\nFix a problem with the libffi testsuite using a method to determine the\ncompiler to use resulting in the tool being different from one the\nlibrary has been built with, and causing a catastrophic failure from the\ninability to actually choose any compiler at all in a cross-compilation\nconfiguration.\n\nAddress this problem by providing a DejaGNU configuration file defining\nthe compiler to use, via the CC_FOR_TARGET TCL variable, set from $CC by\nautoconf, which will have all the required options set for the target\ncompiler to build executables in the environment configured, removing\nfailures like:\n\nFAIL: libffi.call/closure_fn0.c -W -Wall -Wno-psabi -O0 (test for excess errors)\nExcess errors:\ndefault_target_compile: No compiler to compile with\nUNRESOLVED: libffi.call/closure_fn0.c -W -Wall -Wno-psabi -O0 compilation failed to produce executable\n\nand bringing overall test results for the `riscv64-linux-gnu' target\n(here with the `x86_64-linux-gnu' host and RISC-V QEMU in the Linux user\nemulation mode as the target board) from:\n\n\t\t=== libffi Summary ===\n\n# of unexpected failures\t708\n# of unresolved testcases\t708\n# of unsupported tests\t\t30\n\nto:\n\n\t\t=== libffi Summary ===\n\n# of expected passes\t\t1934\n# of unsupported tests\t\t28\n\nThis is a combined backport of the relevant parts of upstream libffi\nchanges as follows:\n\n- commit 8308984e479e (\"[PATCH] Make sure we're running dejagnu tests\n  with the right compiler.\"),\n\n- commit 2d9b3939751b (\"[PATCH] Fix for closures with sunpro compiler\"),\n\n- commit 0c3824702d3d (\"[PATCH] Always set CC_FOR_TARGET for dejagnu, to\n  make the testsuite respect $CC\"),\n\n- commit 7d698125b1f0 (\"[PATCH] Use the proper C++ compiler to run C++\n  tests\"),\n\n- commit 6b6df1a7bb37 (\"[PATCH] Adds `local.exp` to CLEANFILES\"),\n\n- commit 6cf0dea78a5a (\"[PATCH] Change CLEANFILES to DISTCLEANFILES\")\n\n\tlibffi/\n\t* Makefile.am (DISTCLEANFILES): New variable.\n\t* configure.ac: Produce `local.exp'.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/Makefile.am (EXTRA_DEJAGNU_SITE_CONFIG): New\n\tvariable.\n\t* testsuite/Makefile.in: Regenerate.", "tree": {"sha": "882af17057eb6651175b2c2c2ff983600af5f3c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/882af17057eb6651175b2c2c2ff983600af5f3c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/comments", "author": null, "committer": null, "parents": [{"sha": "8fc8bf801e46d0d478c50bddecf5d8edf9511849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fc8bf801e46d0d478c50bddecf5d8edf9511849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fc8bf801e46d0d478c50bddecf5d8edf9511849"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "7ad4b70eb0069114c8a9f7a40d73bd10fd35ec04", "filename": "libffi/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "patch": "@@ -1,3 +1,13 @@\n+2020-04-25  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* Makefile.am (DISTCLEANFILES): New variable.\n+\t* configure.ac: Produce `local.exp'.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.am (EXTRA_DEJAGNU_SITE_CONFIG): New\n+\tvariable.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* configure.ac: Handle `--with-toolexeclibdir='."}, {"sha": "203b7d10a4224de044f69e3d4530a4888a51248c", "filename": "libffi/Makefile.am", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "patch": "@@ -15,6 +15,9 @@ EXTRA_DIST = LICENSE ChangeLog.v1 ChangeLog.libgcj\t\t\t\\\n \tlibffi.xcodeproj/project.pbxproj\t\t\t\t\\\n \tlibtool-ldflags\n \n+# local.exp is generated by configure\n+DISTCLEANFILES = local.exp\n+\n # Automake Documentation:\n # If your package has Texinfo files in many directories, you can use the\n # variable TEXINFO_TEX to tell Automake where to find the canonical"}, {"sha": "745bdd80777b4f6ca08c18ed698b6466200a4b08", "filename": "libffi/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "patch": "@@ -454,6 +454,9 @@ EXTRA_DIST = LICENSE ChangeLog.v1 ChangeLog.libgcj\t\t\t\\\n \tlibtool-ldflags\n \n \n+# local.exp is generated by configure\n+DISTCLEANFILES = local.exp\n+\n # Automake Documentation:\n # If your package has Texinfo files in many directories, you can use the\n # variable TEXINFO_TEX to tell Automake where to find the canonical\n@@ -1674,6 +1677,7 @@ distclean-generic:\n \t-rm -f src/x86/$(am__dirstamp)\n \t-rm -f src/xtensa/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f src/xtensa/$(am__dirstamp)\n+\t-test -z \"$(DISTCLEANFILES)\" || rm -f $(DISTCLEANFILES)\n \n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\""}, {"sha": "f0051505d104ac4993eca169f842dd8b92be742a", "filename": "libffi/configure", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "patch": "@@ -14961,6 +14961,11 @@ _ACEOF\n \n \n \n+cat > local.exp <<EOF\n+set CC_FOR_TARGET \"$CC\"\n+set CXX_FOR_TARGET \"$CXX\"\n+EOF\n+\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n $as_echo_n \"checking whether to enable maintainer-specific portions of Makefiles... \" >&6; }"}, {"sha": "0bf4af410d3eea0ca0bbf2e9c2785f1de0141a6a", "filename": "libffi/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "patch": "@@ -61,6 +61,11 @@ AC_PROG_LIBTOOL\n # Test for 64-bit build.\n AC_CHECK_SIZEOF([size_t])\n \n+cat > local.exp <<EOF\n+set CC_FOR_TARGET \"$CC\"\n+set CXX_FOR_TARGET \"$CXX\"\n+EOF\n+\n AM_MAINTAINER_MODE\n \n AC_CHECK_HEADERS(sys/mman.h)"}, {"sha": "88509fc35d6d1f7a494e270874dac48d42b5419c", "filename": "libffi/testsuite/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.am?ref=a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "patch": "@@ -13,6 +13,8 @@ RUNTEST = `if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \\\n \n AM_RUNTESTFLAGS =\n \n+EXTRA_DEJAGNU_SITE_CONFIG=../local.exp\n+\n CLEANFILES = *.exe core* *.log *.sum\n \n EXTRA_DIST = config/default.exp libffi.call/cls_19byte.c\t\t\\"}, {"sha": "8b574dad5d73025c6129f0d1391aa5d541a78397", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0b48358cb1e70e161a87ec5deb7a4b25defba6b/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=a0b48358cb1e70e161a87ec5deb7a4b25defba6b", "patch": "@@ -279,6 +279,7 @@ RUNTEST = `if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \\\n \t       echo $(top_srcdir)/../dejagnu/runtest ; \\\n \t    else echo runtest; fi`\n \n+EXTRA_DEJAGNU_SITE_CONFIG = ../local.exp\n CLEANFILES = *.exe core* *.log *.sum\n EXTRA_DIST = config/default.exp libffi.call/cls_19byte.c\t\t\\\n libffi.call/cls_align_longdouble_split.c\t\t\t\t\\"}]}