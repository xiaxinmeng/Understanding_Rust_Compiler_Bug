{"sha": "d603877768c5a4ed26481afc0aff99e87a0a8d62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwMzg3Nzc2OGM1YTRlZDI2NDgxYWZjMGFmZjk5ZTg3YTBhOGQ2Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-08-02T09:58:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-08-02T09:58:04Z"}, "message": "re PR target/91323 (LTGT rtx produces UCOMISS instead of COMISS)\n\n\tPR target/91323\n\t* config/i386/i386-expand.c (ix86_unordered_fp_compare) <case LTGT>:\n\tReturn false.\n\ntestsuite/ChangeLog:\n\n\tPR target/91323\n\t* gcc.dg/torture/pr91323.c: New test.\n\nFrom-SVN: r274005", "tree": {"sha": "bd01499eff60b1dd55a75667bb326fdc44fa486f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd01499eff60b1dd55a75667bb326fdc44fa486f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d603877768c5a4ed26481afc0aff99e87a0a8d62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d603877768c5a4ed26481afc0aff99e87a0a8d62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d603877768c5a4ed26481afc0aff99e87a0a8d62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d603877768c5a4ed26481afc0aff99e87a0a8d62/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c2289931106421819cb14ee25976ab8b1c06ff1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2289931106421819cb14ee25976ab8b1c06ff1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c2289931106421819cb14ee25976ab8b1c06ff1"}], "stats": {"total": 68, "additions": 65, "deletions": 3}, "files": [{"sha": "a523bf053a9317f95f4b0ef9d38476033488e7f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d603877768c5a4ed26481afc0aff99e87a0a8d62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d603877768c5a4ed26481afc0aff99e87a0a8d62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d603877768c5a4ed26481afc0aff99e87a0a8d62", "patch": "@@ -1,3 +1,9 @@\n+2019-08-02  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/91323\n+\t* config/i386/i386-expand.c (ix86_unordered_fp_compare) <case LTGT>:\n+\tReturn false.\n+\n 2019-08-02  Richard Biener  <rguenther@suse.de>\n \n \t* vec.h (vec::sort): Add gcc_qsort_r support."}, {"sha": "f6e6d68eed25c7c98391c0b7b0eb90bcfbfccaf7", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d603877768c5a4ed26481afc0aff99e87a0a8d62/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d603877768c5a4ed26481afc0aff99e87a0a8d62/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=d603877768c5a4ed26481afc0aff99e87a0a8d62", "patch": "@@ -2286,16 +2286,16 @@ ix86_unordered_fp_compare (enum rtx_code code)\n \n   switch (code)\n     {\n-    case GT:\n-    case GE:\n     case LT:\n     case LE:\n+    case GT:\n+    case GE:\n+    case LTGT:\n       return false;\n \n     case EQ:\n     case NE:\n \n-    case LTGT:\n     case UNORDERED:\n     case ORDERED:\n     case UNLT:"}, {"sha": "36dbcc86812b87d697acbcfee14c6b320dca1ffa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d603877768c5a4ed26481afc0aff99e87a0a8d62/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d603877768c5a4ed26481afc0aff99e87a0a8d62/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d603877768c5a4ed26481afc0aff99e87a0a8d62", "patch": "@@ -1,3 +1,8 @@\n+2019-08-02  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/91323\n+\t* gcc.dg/torture/pr91323.c: New test.\n+\n 2019-08-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp1z/nodiscard6.C: New."}, {"sha": "3da2dfbe2dbce32635795a0937bbee1cfd0c594f", "filename": "gcc/testsuite/gcc.dg/torture/pr91323.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d603877768c5a4ed26481afc0aff99e87a0a8d62/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91323.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d603877768c5a4ed26481afc0aff99e87a0a8d62/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91323.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91323.c?ref=d603877768c5a4ed26481afc0aff99e87a0a8d62", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-do run } */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+\n+int\n+__attribute__ ((noinline, noclone))\n+f1 (float a, float b)\n+{\n+  return __builtin_isless (a, b) || __builtin_isgreater (a, b);\n+}\n+\n+int\n+__attribute__ ((noinline, noclone))\n+f2 (float a, float b)\n+{\n+  return __builtin_islessgreater (a, b);\n+}\n+\n+int\n+__attribute__ ((noinline, noclone))\n+f3 (float a, float b)\n+{\n+  return a < b || a > b;\n+}\n+\n+int\n+main (void)\n+{\n+  volatile int r;\n+\n+  float nanf = __builtin_nanf (\"\");\n+  float argf = 1.0f;\n+\n+  feclearexcept (FE_INVALID);\n+\n+  r = f1 (nanf, argf);\n+  if (fetestexcept (FE_INVALID))\n+    __builtin_abort ();\n+\n+  r = f2 (nanf, argf);\n+  if (fetestexcept (FE_INVALID))\n+    __builtin_abort ();\n+\n+  r = f3 (nanf, argf);\n+  if (!fetestexcept (FE_INVALID))\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}