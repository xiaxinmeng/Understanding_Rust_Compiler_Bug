{"sha": "d97364aab1af361275b87713154c366ce2b9029a", "node_id": "C_kwDOANBUbNoAKGQ5NzM2NGFhYjFhZjM2MTI3NWI4NzcxMzE1NGMzNjZjZTJiOTAyOWE", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-01-05T18:52:25Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-01-13T12:09:36Z"}, "message": "Improve Intel MIC offloading XFAILing for 'omp_get_device_num'\n\nAfter recent commit be661959a6b6d8f9c3c8608a746789e7b2ec3ca4\n\"libgomp/testsuite: Improve omp_get_device_num() tests\", we're now iterating\nover all OpenMP target devices.  Intel MIC (emulated) offloading still doesn't\nproperly implement device-side 'omp_get_device_num', and we thus regress:\n\n    PASS: libgomp.c/../libgomp.c-c++-common/target-45.c (test for excess errors)\n    [-PASS:-]{+FAIL:+} libgomp.c/../libgomp.c-c++-common/target-45.c execution test\n\n    PASS: libgomp.c++/../libgomp.c-c++-common/target-45.c (test for excess errors)\n    [-PASS:-]{+FAIL:+} libgomp.c++/../libgomp.c-c++-common/target-45.c execution test\n\n    PASS: libgomp.fortran/target10.f90   -O0  (test for excess errors)\n    [-PASS:-]{+FAIL:+} libgomp.fortran/target10.f90   -O0  execution test\n    PASS: libgomp.fortran/target10.f90   -O1  (test for excess errors)\n    [-PASS:-]{+FAIL:+} libgomp.fortran/target10.f90   -O1  execution test\n    PASS: libgomp.fortran/target10.f90   -O2  (test for excess errors)\n    [-PASS:-]{+FAIL:+} libgomp.fortran/target10.f90   -O2  execution test\n    PASS: libgomp.fortran/target10.f90   -O3 -fomit-frame-pointer -funroll-loops -fpeel-loops -ftracer -finline-functions  (test for excess errors)\n    [-PASS:-]{+FAIL:+} libgomp.fortran/target10.f90   -O3 -fomit-frame-pointer -funroll-loops -fpeel-loops -ftracer -finline-functions  execution test\n    PASS: libgomp.fortran/target10.f90   -O3 -g  (test for excess errors)\n    [-PASS:-]{+FAIL:+} libgomp.fortran/target10.f90   -O3 -g  execution test\n    PASS: libgomp.fortran/target10.f90   -Os  (test for excess errors)\n    [-PASS:-]{+FAIL:+} libgomp.fortran/target10.f90   -Os  execution test\n\nImprove the XFAILing added in commit bb75b22aba254e8ff144db27b1c8b4804bad73bb\n\"Allow matching Intel MIC in OpenMP 'declare variant'\" for the case that *any*\nIntel MIC offload device is available.\n\n\tlibgomp/\n\t* testsuite/libgomp.c-c++-common/on_device_arch.h\n\t(any_device_arch, any_device_arch_intel_mic): New.\n\t* testsuite/lib/libgomp.exp\n\t(check_effective_target_offload_device_any_intel_mic): New.\n\t* testsuite/libgomp.c-c++-common/target-45.c: Use it.\n\t* testsuite/libgomp.fortran/target10.f90: Likewise.", "tree": {"sha": "f90fa5241a1d6960804699fd6b1aed19b278e42f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f90fa5241a1d6960804699fd6b1aed19b278e42f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d97364aab1af361275b87713154c366ce2b9029a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97364aab1af361275b87713154c366ce2b9029a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d97364aab1af361275b87713154c366ce2b9029a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97364aab1af361275b87713154c366ce2b9029a/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67fdcc8835665b5bc13652205e815e498d65c5a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67fdcc8835665b5bc13652205e815e498d65c5a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67fdcc8835665b5bc13652205e815e498d65c5a1"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "8c5ecfff0acd3977424efb565cf96e85d0b73c6f", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d97364aab1af361275b87713154c366ce2b9029a/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d97364aab1af361275b87713154c366ce2b9029a/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=d97364aab1af361275b87713154c366ce2b9029a", "patch": "@@ -451,7 +451,6 @@ proc check_effective_target_openacc_nvidia_accel_selected { } {\n # Return 1 if using Intel MIC offload device.\n proc check_effective_target_offload_device_intel_mic { } {\n     return [check_runtime_nocache offload_device_intel_mic {\n-      #include <omp.h>\n       #include \"testsuite/libgomp.c-c++-common/on_device_arch.h\"\n       int main ()\n \t{\n@@ -460,6 +459,17 @@ proc check_effective_target_offload_device_intel_mic { } {\n     } ]\n }\n \n+# Return 1 if any Intel MIC offload device is available.\n+proc check_effective_target_offload_device_any_intel_mic { } {\n+    return [check_runtime_nocache offload_device_any_intel_mic {\n+      #include \"testsuite/libgomp.c-c++-common/on_device_arch.h\"\n+      int main ()\n+\t{\n+\t  return !any_device_arch_intel_mic ();\n+\t}\n+    } ]\n+}\n+\n # Return 1 if the OpenACC 'host' device type is selected.\n \n proc check_effective_target_openacc_host_selected { } {"}, {"sha": "f92743b04d7c25e5a120d25658a2ea05cf09680b", "filename": "libgomp/testsuite/libgomp.c-c++-common/on_device_arch.h", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d97364aab1af361275b87713154c366ce2b9029a/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fon_device_arch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d97364aab1af361275b87713154c366ce2b9029a/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fon_device_arch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fon_device_arch.h?ref=d97364aab1af361275b87713154c366ce2b9029a", "patch": "@@ -1,3 +1,4 @@\n+#include <omp.h>\n #include <gomp-constants.h>\n \n /* static */ int\n@@ -41,3 +42,25 @@ on_device_arch_intel_mic ()\n {\n   return on_device_arch (GOMP_DEVICE_INTEL_MIC);\n }\n+\n+static int\n+any_device_arch (int d)\n+{\n+  int nd = omp_get_num_devices ();\n+  for (int i = 0; i < nd; ++i)\n+    {\n+      int d_cur;\n+      #pragma omp target device(i) map(from:d_cur)\n+      d_cur = device_arch ();\n+      if (d_cur == d)\n+\treturn 1;\n+    }\n+\n+  return 0;\n+}\n+\n+int\n+any_device_arch_intel_mic ()\n+{\n+  return any_device_arch (GOMP_DEVICE_INTEL_MIC);\n+}"}, {"sha": "27bbeddf7fd6ebc691b041fc9e3bc5a88d73b858", "filename": "libgomp/testsuite/libgomp.c-c++-common/target-45.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d97364aab1af361275b87713154c366ce2b9029a/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftarget-45.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d97364aab1af361275b87713154c366ce2b9029a/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftarget-45.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ftarget-45.c?ref=d97364aab1af361275b87713154c366ce2b9029a", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-xfail-run-if TODO { offload_device_intel_mic } } */\n+/* { dg-xfail-run-if TODO { offload_device_any_intel_mic } } */\n \n #include <omp.h>\n #include <stdlib.h>"}, {"sha": "31452554d6795b3cc3b22139b97bb6c46d8ff2ed", "filename": "libgomp/testsuite/libgomp.fortran/target10.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d97364aab1af361275b87713154c366ce2b9029a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d97364aab1af361275b87713154c366ce2b9029a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget10.f90?ref=d97364aab1af361275b87713154c366ce2b9029a", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do run }\n-! { dg-xfail-run-if TODO { offload_device_intel_mic } }\n+! { dg-xfail-run-if TODO { offload_device_any_intel_mic } }\n \n program main\n   use omp_lib"}]}