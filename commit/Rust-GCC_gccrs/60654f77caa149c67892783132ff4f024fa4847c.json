{"sha": "60654f77caa149c67892783132ff4f024fa4847c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA2NTRmNzdjYWExNDljNjc4OTI3ODMxMzJmZjRmMDI0ZmE0ODQ3Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-07-15T10:46:46Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-07-15T10:46:46Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1589", "tree": {"sha": "eb534144b646d494f5e16c8ee5219fe295f5083f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb534144b646d494f5e16c8ee5219fe295f5083f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60654f77caa149c67892783132ff4f024fa4847c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60654f77caa149c67892783132ff4f024fa4847c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60654f77caa149c67892783132ff4f024fa4847c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60654f77caa149c67892783132ff4f024fa4847c/comments", "author": null, "committer": null, "parents": [{"sha": "9b0995aace7783bb700349aaed1ca1baa17cdbee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0995aace7783bb700349aaed1ca1baa17cdbee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0995aace7783bb700349aaed1ca1baa17cdbee"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "ba100ad0e81b996810d3bd0be803614232815f8f", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60654f77caa149c67892783132ff4f024fa4847c/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60654f77caa149c67892783132ff4f024fa4847c/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=60654f77caa149c67892783132ff4f024fa4847c", "patch": "@@ -1488,6 +1488,7 @@ try_combine (i3, i2, i1)\n \t     we can change its mode.  */\n \t  if (GET_MODE (SET_DEST (newpat)) != GET_MODE (i2dest)\n \t      && GET_MODE (SET_DEST (newpat)) != VOIDmode\n+\t      && GET_CODE (i2dest) == REG\n \t      && (REGNO (i2dest) < FIRST_PSEUDO_REGISTER\n \t\t  || (reg_n_sets[REGNO (i2dest)] == 1 && ! added_sets_2\n \t\t      && ! REG_USERVAR_P (i2dest))))"}]}