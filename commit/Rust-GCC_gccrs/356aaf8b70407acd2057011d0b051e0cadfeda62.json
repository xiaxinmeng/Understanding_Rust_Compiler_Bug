{"sha": "356aaf8b70407acd2057011d0b051e0cadfeda62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU2YWFmOGI3MDQwN2FjZDIwNTcwMTFkMGIwNTFlMGNhZGZlZGE2Mg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2009-11-24T15:38:39Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2009-11-24T15:38:39Z"}, "message": "v850.c (function_arg): Fix handling of zero-length function arguments.\n\n        * config/v850/v850.c (function_arg): Fix handling of zero-length\n        function arguments.\n\nFrom-SVN: r154503", "tree": {"sha": "41956e65d426c50453f4e1653c924cd3d03f80c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41956e65d426c50453f4e1653c924cd3d03f80c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/356aaf8b70407acd2057011d0b051e0cadfeda62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356aaf8b70407acd2057011d0b051e0cadfeda62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/356aaf8b70407acd2057011d0b051e0cadfeda62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356aaf8b70407acd2057011d0b051e0cadfeda62/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5883ba0de68efad36db145e75c86394d8bd44ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5883ba0de68efad36db145e75c86394d8bd44ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5883ba0de68efad36db145e75c86394d8bd44ea"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "197ada720f4e6133da51c441ae57453150ca4772", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/356aaf8b70407acd2057011d0b051e0cadfeda62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/356aaf8b70407acd2057011d0b051e0cadfeda62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=356aaf8b70407acd2057011d0b051e0cadfeda62", "patch": "@@ -1,3 +1,8 @@\n+2009-11-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/v850/v850.c (function_arg): Fix handling of zero-length\n+\tfunction arguments.\n+\n 2009-11-24  Michael Matz  <matz@suse.de>\n \n \t* tree.h (union tree_ann_d): Don't declare."}, {"sha": "b7dd0921d4a876cc422eb5ed027b3e8d37d8c214", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/356aaf8b70407acd2057011d0b051e0cadfeda62/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/356aaf8b70407acd2057011d0b051e0cadfeda62/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=356aaf8b70407acd2057011d0b051e0cadfeda62", "patch": "@@ -264,16 +264,17 @@ v850_pass_by_reference (CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED,\n   return size > 8;\n }\n \n-/* Return an RTX to represent where a value with mode MODE will be returned\n-   from a function.  If the result is 0, the argument is pushed.  */\n+/* Return an RTX to represent where an argument with mode MODE\n+   and type TYPE will be passed to a function.  If the result\n+   is NULL_RTX, the argument will be pushed.  */\n \n rtx\n function_arg (CUMULATIVE_ARGS * cum,\n               enum machine_mode mode,\n               tree type,\n               int named)\n {\n-  rtx result = 0;\n+  rtx result = NULL_RTX;\n   int size, align;\n \n   if (TARGET_GHS && !named)\n@@ -285,7 +286,11 @@ function_arg (CUMULATIVE_ARGS * cum,\n     size = GET_MODE_SIZE (mode);\n \n   if (size < 1)\n-    return 0;\n+    {\n+      /* Once we have stopped using argument registers, do not start up again.  */\n+      cum->nbytes = 4 * UNITS_PER_WORD;\n+      return NULL_RTX;\n+    }\n \n   if (type)\n     align = TYPE_ALIGN (type) / BITS_PER_UNIT;\n@@ -295,11 +300,11 @@ function_arg (CUMULATIVE_ARGS * cum,\n   cum->nbytes = (cum->nbytes + align - 1) &~(align - 1);\n \n   if (cum->nbytes > 4 * UNITS_PER_WORD)\n-    return 0;\n+    return NULL_RTX;\n \n   if (type == NULL_TREE\n       && cum->nbytes + size > 4 * UNITS_PER_WORD)\n-    return 0;\n+    return NULL_RTX;\n \n   switch (cum->nbytes / UNITS_PER_WORD)\n     {\n@@ -316,7 +321,7 @@ function_arg (CUMULATIVE_ARGS * cum,\n       result = gen_rtx_REG (mode, 9);\n       break;\n     default:\n-      result = 0;\n+      result = NULL_RTX;\n     }\n \n   return result;\n@@ -340,12 +345,15 @@ v850_arg_partial_bytes (CUMULATIVE_ARGS * cum, enum machine_mode mode,\n   else\n     size = GET_MODE_SIZE (mode);\n \n+  if (size < 1)\n+    size = 1;\n+  \n   if (type)\n     align = TYPE_ALIGN (type) / BITS_PER_UNIT;\n   else\n     align = size;\n \n-  cum->nbytes = (cum->nbytes + align - 1) &~(align - 1);\n+  cum->nbytes = (cum->nbytes + align - 1) & ~ (align - 1);\n \n   if (cum->nbytes > 4 * UNITS_PER_WORD)\n     return 0;"}]}