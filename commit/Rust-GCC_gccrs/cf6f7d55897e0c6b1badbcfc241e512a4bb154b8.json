{"sha": "cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y2ZjdkNTU4OTdlMGM2YjFiYWRiY2ZjMjQxZTUxMmE0YmIxNTRiOA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-04-20T12:30:19Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-04-20T12:30:19Z"}, "message": "Byte.java, [...]: Fixed javadocs, coding style and argument names all over.\n\n2004-04-20  Michael Koch  <konqueror@gmx.de>\n\n\t* java/lang/Byte.java,\n\tjava/lang/CharSequence.java,\n\tjava/lang/ClassLoader.java,\n\tjava/lang/Compiler.java,\n\tjava/lang/Double.java,\n\tjava/lang/Float.java,\n\tjava/lang/Integer.java,\n\tjava/lang/Long.java,\n\tjava/lang/Math.java,\n\tjava/lang/Number.java,\n\tjava/lang/Package.java,\n\tjava/lang/Runtime.java,\n\tjava/lang/RuntimePermission.java,\n\tjava/lang/SecurityManager.java,\n\tjava/lang/Short.java,\n\tjava/lang/StringBuffer.java,\n\tjava/lang/System.java,\n\tjava/lang/ThreadGroup.java,\n\tjava/lang/Throwable.java,\n\tjava/lang/reflect/InvocationHandler.java,\n\tjava/lang/reflect/Proxy.java:\n\tFixed javadocs, coding style and argument names all over.\n\nFrom-SVN: r80899", "tree": {"sha": "d5b22b275323c4e4a0c6ebb05e86b4a087ef279d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5b22b275323c4e4a0c6ebb05e86b4a087ef279d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/comments", "author": null, "committer": null, "parents": [{"sha": "9f714d5eec05594569dd89920353272606622d8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f714d5eec05594569dd89920353272606622d8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f714d5eec05594569dd89920353272606622d8a"}], "stats": {"total": 365, "additions": 207, "deletions": 158}, "files": [{"sha": "78a4d99a942587f042b4f10dd86761c535edefb5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -1,3 +1,28 @@\n+2004-04-20  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/lang/Byte.java,\n+\tjava/lang/CharSequence.java,\n+\tjava/lang/ClassLoader.java,\n+\tjava/lang/Compiler.java,\n+\tjava/lang/Double.java,\n+\tjava/lang/Float.java,\n+\tjava/lang/Integer.java,\n+\tjava/lang/Long.java,\n+\tjava/lang/Math.java,\n+\tjava/lang/Number.java,\n+\tjava/lang/Package.java,\n+\tjava/lang/Runtime.java,\n+\tjava/lang/RuntimePermission.java,\n+\tjava/lang/SecurityManager.java,\n+\tjava/lang/Short.java,\n+\tjava/lang/StringBuffer.java,\n+\tjava/lang/System.java,\n+\tjava/lang/ThreadGroup.java,\n+\tjava/lang/Throwable.java,\n+\tjava/lang/reflect/InvocationHandler.java,\n+\tjava/lang/reflect/Proxy.java:\n+\tFixed javadocs, coding style and argument names all over.\n+\n 2004-04-20  Michael Koch  <konqueror@gmx.de>\n \n \t* java/io/BufferedWriter.java,"}, {"sha": "641c5cc8ee1a04542702d286ad89fe14bc46682b", "filename": "libjava/java/lang/Byte.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FByte.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FByte.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FByte.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -147,7 +147,7 @@ public static byte parseByte(String s)\n    *\n    * @param s the <code>String</code> to convert\n    * @param radix the radix (base) to use in the conversion\n-   * @return the <code>String</code> argument converted to </code>byte</code>\n+   * @return the <code>String</code> argument converted to <code>byte</code>\n    * @throws NumberFormatException if <code>s</code> cannot be parsed as a\n    *         <code>byte</code>\n    */"}, {"sha": "5f5147b0bdd361e5ab1253ca3fed1eaf08ceee2a", "filename": "libjava/java/lang/CharSequence.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FCharSequence.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FCharSequence.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FCharSequence.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -78,7 +78,7 @@\n   int length();\n \n   /**\n-   * Returns a new <code>CharSequence</char> of the indicated range.\n+   * Returns a new <code>CharSequence</code> of the indicated range.\n    *\n    * @param begin the start index (inclusive)\n    * @param end the end index (exclusive)"}, {"sha": "2b30b1b8a8b35a3412b1b545a927e2a2213eeb1e", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -249,7 +249,7 @@ protected ClassLoader(ClassLoader parent)\n    * it. Calls <code>loadClass(name, false)</code>.\n    *\n    * <p>Subclasses should not override this method but should override\n-   * <code>findClass()</code> which is called by this method.\n+   * <code>findClass()</code> which is called by this method.</p>\n    *\n    * @param name the name of the class relative to this ClassLoader\n    * @return the loaded class\n@@ -266,14 +266,14 @@ public Class loadClass(String name) throws ClassNotFoundException\n    * out if the class has already been loaded through this classloader by\n    * calling <code>findLoadedClass()</code>. Then it calls\n    * <code>loadClass()</code> on the parent classloader (or when there is\n-   * no parent it uses the VM bootclassloader)</code>). If the class is still\n+   * no parent it uses the VM bootclassloader). If the class is still\n    * not loaded it tries to create a new class by calling\n    * <code>findClass()</code>. Finally when <code>resolve</code> is\n    * <code>true</code> it also calls <code>resolveClass()</code> on the\n    * newly loaded class.\n    *\n    * <p>Subclasses should not override this method but should override\n-   * <code>findClass()</code> which is called by this method.\n+   * <code>findClass()</code> which is called by this method.</p>\n    *\n    * @param name the fully qualified name of the class to load\n    * @param resolve whether or not to resolve the class\n@@ -384,7 +384,7 @@ protected final Class defineClass(byte[] data, int offset, int len)\n    * <code>findClass()</code> implementation. The name should use '.'\n    * separators, and discard the trailing \".class\".  The default protection\n    * domain has the permissions of\n-   * <code>Policy.getPolicy().getPermissions(new CodeSource(null, null))<code>.\n+   * <code>Policy.getPolicy().getPermissions(new CodeSource(null, null))</code>.\n    *\n    * @param name the name to give the class, or null if unknown\n    * @param data the data representing the classfile, in classfile format\n@@ -407,7 +407,7 @@ protected final Class defineClass(String name, byte[] data, int offset,\n    * Helper to define a class using a string of bytes. Subclasses should call\n    * this method from their <code>findClass()</code> implementation. If the\n    * domain is null, the default of\n-   * <code>Policy.getPolicy().getPermissions(new CodeSource(null, null))<code>\n+   * <code>Policy.getPolicy().getPermissions(new CodeSource(null, null))</code>\n    * is used. Once a class has been defined in a package, all further classes\n    * in that package must have the same set of certificates or a\n    * SecurityException is thrown.\n@@ -475,6 +475,7 @@ protected final Class findSystemClass(String name)\n    * <code>null</code>. A security check may be performed on\n    * <code>RuntimePermission(\"getClassLoader\")</code>.\n    *\n+   * @return the parent <code>ClassLoader</code>\n    * @throws SecurityException if the security check fails\n    * @since 1.2\n    */\n@@ -554,13 +555,13 @@ public URL getResource(String name)\n    * multiple resources with the same name that come from multiple locations.\n    * It can also occur that a parent classloader offers a resource with a\n    * certain name and the child classloader also offers a resource with that\n-   * same name. <code>getResource() only offers the first resource (of the\n+   * same name. <code>getResource()</code> only offers the first resource (of the\n    * parent) with a given name. This method lists all resources with the\n    * same name. The name should use '/' as path separators.\n    *\n    * <p>The Enumeration is created by first calling <code>getResources()</code>\n    * on the parent classloader and then calling <code>findResources()</code>\n-   * on this classloader.\n+   * on this classloader.</p>\n    *\n    * @param name the resource name\n    * @return an enumaration of all resources found"}, {"sha": "f520a7e0dda2bc81b3b05aa0787cce9c586e1905", "filename": "libjava/java/lang/Compiler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FCompiler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FCompiler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FCompiler.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -81,7 +81,7 @@ public static boolean compileClass(Class oneClass)\n   }\n \n   /**\n-   * Compile the classes whose name matches <code>classNames/code>.\n+   * Compile the classes whose name matches <code>classNames</code>.\n    *\n    * @param classNames the name of classes to compile\n    * @return <code>false</code> if no compiler is available or"}, {"sha": "be393b6b4b91c0ddf909f2d36327a22bc619da32", "filename": "libjava/java/lang/Double.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FDouble.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FDouble.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FDouble.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -1,5 +1,6 @@\n /* Double.java -- object wrapper for double\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,7 +36,6 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-\n package java.lang;\n \n import gnu.classpath.Configuration;\n@@ -243,7 +243,7 @@ public static Double valueOf(String s)\n    * @see #NEGATIVE_INFINITY\n    * @since 1.2\n    */\n-  public static native double parseDouble(String s);\n+  public static native double parseDouble(String str);\n \n   /**\n    * Return <code>true</code> if the <code>double</code> has the same\n@@ -392,9 +392,9 @@ public int hashCode()\n    * <code>Double.NaN</code> as equal, but treats <code>0.0</code> and\n    * <code>-0.0</code> as unequal.\n    *\n-   * <p>Note that <code>d1.equals(d2)<code> is identical to\n+   * <p>Note that <code>d1.equals(d2)</code> is identical to\n    * <code>doubleToLongBits(d1.doubleValue()) ==\n-   *    doubleToLongBits(d2.doubleValue())<code>.\n+   *    doubleToLongBits(d2.doubleValue())</code>.\n    *\n    * @param obj the object to compare\n    * @return whether the objects are semantically equal"}, {"sha": "d59912168daf4d0d83c651da05a24d475b6d512c", "filename": "libjava/java/lang/Float.java", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FFloat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FFloat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FFloat.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -1,5 +1,6 @@\n /* Float.java -- object wrapper for float\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -239,11 +240,11 @@ public static Float valueOf(String s)\n    * @see #NEGATIVE_INFINITY\n    * @since 1.2\n    */\n-  public static float parseFloat(String s)\n+  public static float parseFloat(String str)\n   {\n     // XXX Rounding parseDouble() causes some errors greater than 1 ulp from\n     // the infinitely precise decimal.\n-    return (float) Double.parseDouble(s);\n+    return (float) Double.parseDouble(str);\n   }\n \n   /**\n@@ -390,9 +391,9 @@ public int hashCode()\n    * <code>Float.NaN</code> as equal, but treats <code>0.0</code> and\n    * <code>-0.0</code> as unequal.\n    *\n-   * <p>Note that <code>f1.equals(f2)<code> is identical to\n+   * <p>Note that <code>f1.equals(f2)</code> is identical to\n    * <code>floatToIntBits(f1.floatValue()) ==\n-   *    floatToIntBits(f2.floatValue())<code>.\n+   *    floatToIntBits(f2.floatValue())</code>.\n    *\n    * @param obj the object to compare\n    * @return whether the objects are semantically equal"}, {"sha": "9c8329dbd83f25a26113a9a4d5d0cc26187bdfe8", "filename": "libjava/java/lang/Integer.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FInteger.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -220,9 +220,9 @@ public static String toString(int i)\n    * within <code>MIN_VALUE</code> to <code>MAX_VALUE</code>, inclusive.\n    * Unlike Double.parseDouble, you may not have a leading '+'.\n    *\n-   * @param s the <code>String</code> to convert\n+   * @param str the <code>String</code> to convert\n    * @param radix the radix (base) to use in the conversion\n-   * @return the <code>String</code> argument converted to </code>int</code>\n+   * @return the <code>String</code> argument converted to <code>int</code>\n    * @throws NumberFormatException if <code>s</code> cannot be parsed as an\n    *         <code>int</code>\n    */\n@@ -414,7 +414,7 @@ public static Integer getInteger(String nm, int val)\n    * interpret the value of the property.\n    *\n    * @param nm the name of the system property\n-   * @param val the default value\n+   * @param def the default value\n    * @return the value of the system property, or the default\n    * @throws SecurityException if accessing the system property is forbidden\n    * @see System#getProperty(String)\n@@ -461,7 +461,7 @@ public static Integer getInteger(String nm, Integer def)\n    * Finally, the value must be in the range <code>MIN_VALUE</code> to\n    * <code>MAX_VALUE</code>, or an exception is thrown.\n    *\n-   * @param s the <code>String</code> to interpret\n+   * @param str the <code>String</code> to interpret\n    * @return the value of the String as an <code>Integer</code>\n    * @throws NumberFormatException if <code>s</code> cannot be parsed as a\n    *         <code>int</code>"}, {"sha": "012cc9c93e7fea4c99eac9384bf8133e2b99851c", "filename": "libjava/java/lang/Long.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FLong.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FLong.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FLong.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -223,9 +223,9 @@ public static String toString(long num)\n    * 'L' as the last character is only valid in radices 22 or greater, where\n    * it is a digit and not a type indicator.\n    *\n-   * @param s the <code>String</code> to convert\n+   * @param str the <code>String</code> to convert\n    * @param radix the radix (base) to use in the conversion\n-   * @return the <code>String</code> argument converted to </code>long</code>\n+   * @return the <code>String</code> argument converted to <code>long</code>\n    * @throws NumberFormatException if <code>s</code> cannot be parsed as a\n    *         <code>long</code>\n    */\n@@ -306,7 +306,7 @@ public static Long valueOf(String s)\n    * <code>MAX_VALUE</code>, or an exception is thrown. Note that you cannot\n    * use a trailing 'l' or 'L', unlike in Java source code.\n    *\n-   * @param s the <code>String</code> to interpret\n+   * @param str the <code>String</code> to interpret\n    * @return the value of the String as a <code>Long</code>\n    * @throws NumberFormatException if <code>s</code> cannot be parsed as a\n    *         <code>long</code>\n@@ -455,7 +455,7 @@ public static Long getLong(String nm, long val)\n    * interpret the value of the property.\n    *\n    * @param nm the name of the system property\n-   * @param val the default value\n+   * @param def the default value\n    * @return the value of the system property, or the default\n    * @throws SecurityException if accessing the system property is forbidden\n    * @see System#getProperty(String)"}, {"sha": "5c9a39bff0fc7a5808876042051113208117ac18", "filename": "libjava/java/lang/Math.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FMath.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FMath.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FMath.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -564,7 +564,7 @@ public static double max(double a, double b)\n \n   /**\n    * Take the nearest integer to the argument.  This is equivalent to\n-   * <code>(int) Math.floor(a + 0.5f). If the argument is NaN, the result\n+   * <code>(int) Math.floor(a + 0.5f)</code>. If the argument is NaN, the result\n    * is 0; otherwise if the argument is outside the range of int, the result\n    * will be Integer.MIN_VALUE or Integer.MAX_VALUE, as appropriate.\n    *"}, {"sha": "54bb1f763e583cbf986e4376dc6f985ff8c40133", "filename": "libjava/java/lang/Number.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FNumber.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FNumber.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FNumber.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -69,7 +69,7 @@ public abstract class Number implements Serializable\n     '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n     'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\n     'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n-    'u', 'v', 'w', 'x', 'y', 'z'\n+    'u', 'v', 'w', 'x', 'y', 'z',\n   };\n \n   /**"}, {"sha": "3ccdbb1e642e1f0412cc38ef98179b4b29b7acb3", "filename": "libjava/java/lang/Package.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FPackage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FPackage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FPackage.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -227,7 +227,10 @@ public boolean isSealed(URL url)\n    * <code>getSpecificationVersion</code>.\n    *\n    * @param version the (minimal) desired version of the specification\n-   * @throws NumberFormatException if either version string is invalid\n+   *\n+   * @return true if the version is compatible, false otherwise\n+   *\n+   * @Throws NumberFormatException if either version string is invalid\n    * @throws NullPointerException if either version string is null\n    */\n   public boolean isCompatibleWith(String version)"}, {"sha": "e14cd192f402dfee128cba722a922aaa40d561cf", "filename": "libjava/java/lang/Runtime.java", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FRuntime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FRuntime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FRuntime.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -95,8 +95,9 @@\n    *  System.loadLibrary calls Runtime.getRuntime, triggering initialization\n    *   Runtime.<clinit> calls Properties.<init>, triggering initialization\n    *    Dictionary, Hashtable, and Properties have no dependencies\n-   *   Runtime.<clinit> calls insertSystemProperties; the VM must make sure\n-   *      that there are not any harmful dependencies\n+   *   Runtime.<clinit> calls VMRuntime.insertSystemProperties, triggering\n+   *      initialization of VMRuntime; the VM must make sure that there are\n+   *      not any harmful dependencies\n    *   Runtime.<clinit> calls Runtime.<init>\n    *    Runtime.<init> calls StringTokenizer.<init>, triggering initialization\n    *     StringTokenizer has no dependencies\n@@ -170,13 +171,13 @@ public static Runtime getRuntime()\n    *\n    * <p>First, all shutdown hooks are run, in unspecified order, and\n    * concurrently. Next, if finalization on exit has been enabled, all pending\n-   * finalizers are run. Finally, the system calls <code>halt</code>.\n+   * finalizers are run. Finally, the system calls <code>halt</code>.</p>\n    *\n    * <p>If this is run a second time after shutdown has already started, there\n    * are two actions. If shutdown hooks are still executing, it blocks\n    * indefinitely. Otherwise, if the status is nonzero it halts immediately;\n    * if it is zero, it blocks indefinitely. This is typically called by\n-   * <code>System.exit</code>.\n+   * <code>System.exit</code>.</p>\n    *\n    * @param status the status to exit with\n    * @throws SecurityException if permission is denied\n@@ -285,23 +286,23 @@ public void exit(int status)\n    * <code>System.exit</code> was invoked), or when the user terminates\n    * the virtual machine (such as by typing ^C, or logging off). There is\n    * a security check to add hooks,\n-   * <code>RuntimePermission(\"shutdownHooks\")<code>.\n+   * <code>RuntimePermission(\"shutdownHooks\")</code>.\n    *\n    * <p>The hook must be an initialized, but unstarted Thread. The threads\n    * are run concurrently, and started in an arbitrary order; and user\n    * threads or daemons may still be running. Once shutdown hooks have\n    * started, they must all complete, or else you must use <code>halt</code>,\n    * to actually finish the shutdown sequence. Attempts to modify hooks\n-   * after shutdown has started result in IllegalStateExceptions.\n+   * after shutdown has started result in IllegalStateExceptions.</p>\n    *\n    * <p>It is imperative that you code shutdown hooks defensively, as you\n    * do not want to deadlock, and have no idea what other hooks will be\n    * running concurrently. It is also a good idea to finish quickly, as the\n-   * virtual machine really wants to shut down!\n+   * virtual machine really wants to shut down!</p>\n    *\n    * <p>There are no guarantees that such hooks will run, as there are ways\n    * to forcibly kill a process. But in such a drastic case, shutdown hooks\n-   * would do little for you in the first place.\n+   * would do little for you in the first place.</p>\n    *\n    * @param hook an initialized, unstarted Thread\n    * @throws IllegalArgumentException if the hook is already registered or run\n@@ -334,7 +335,7 @@ public void addShutdownHook(Thread hook)\n   /**\n    * De-register a shutdown hook. As when you registered it, there is a\n    * security check to remove hooks,\n-   * <code>RuntimePermission(\"shutdownHooks\")<code>.\n+   * <code>RuntimePermission(\"shutdownHooks\")</code>.\n    *\n    * @param hook the hook to remove\n    * @return true if the hook was successfully removed, false if it was not\n@@ -408,7 +409,7 @@ public static void runFinalizersOnExit(boolean finalizeOnExit)\n \n   /**\n    * Create a new subprocess with the specified command line. Calls\n-   * <code>exec(cmdline, null, null)<code>. A security check is performed,\n+   * <code>exec(cmdline, null, null)</code>. A security check is performed,\n    * <code>checkExec</code>.\n    *\n    * @param cmdline the command to call\n@@ -635,9 +636,11 @@ public void load(String filename)\n    * <code>System.mapLibraryName(libname)</code>. There may be a security\n    * check, of <code>checkLink</code>.\n    *\n-   * @param filename the file to load\n+   * @param libname the library to load\n+   *\n    * @throws SecurityException if permission is denied\n    * @throws UnsatisfiedLinkError if the library is not found\n+   *\n    * @see System#mapLibraryName(String)\n    * @see ClassLoader#findLibrary(String)\n    */"}, {"sha": "b6adf383804343f1824f26f83374f8828712f72a", "filename": "libjava/java/lang/RuntimePermission.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FRuntimePermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FRuntimePermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FRuntimePermission.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -118,7 +118,7 @@\n  *       access to in the system</td>\n  *   <td>rogue code can stop arbitrary threads</td></tr>\n  * <tr>\n- *   <td><code>modifyThreadGroup</td>\n+ *   <td><code>modifyThreadGroup</code></td>\n  *   <td>allows the application to modify thread groups using any of the\n  *       methods <code>destroy</code>, <code>resume</code>,\n  *       <code>setDaemon</code>, <code>setMaxPriority</code>,\n@@ -141,7 +141,7 @@\n  *   <td>rogue code can write files, including viruses, and can modify the\n  *       virtual machine binary; if not just fill up the disk</td></tr>\n  * <tr>\n- *   <td><code>loadLibrary.<code><em>library name</em></td>\n+ *   <td><code>loadLibrary.</code><em>library name</em></td>\n  *   <td>dynamic linking of the named library</td>\n  *   <td>native code can bypass many security checks of pure Java</td></tr>\n  * <tr>"}, {"sha": "2e82a475b5f968b677eb24d3944ac359e1266708", "filename": "libjava/java/lang/SecurityManager.java", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FSecurityManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FSecurityManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FSecurityManager.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -86,7 +86,7 @@\n  * // now, in worker thread\n  * if (sm != null)\n  *   sm.checkPermission(permission, context);\n- * <pre>\n+ * </pre>\n  *\n  * <p>Permissions fall into these categories: File, Socket, Net, Security,\n  * Runtime, Property, AWT, Reflect, and Serializable. Each of these\n@@ -174,13 +174,15 @@ protected Class[] getClassContext()\n    * Find the ClassLoader of the first non-system class on the execution\n    * stack. A non-system class is one whose ClassLoader is not equal to\n    * {@link ClassLoader#getSystemClassLoader()} or its ancestors. This\n-   * will return null in three cases:<br><nl>\n+   * will return null in three cases:\n+   *\n+   * <ul>\n    * <li>All methods on the stack are from system classes</li>\n    * <li>All methods on the stack up to the first \"privileged\" caller, as\n    *  created by {@link AccessController.doPrivileged(PrivilegedAction)},\n    *  are from system classes</li>\n    * <li>A check of <code>java.security.AllPermission</code> succeeds.</li>\n-   * </nl>\n+   * </ul>\n    * \n    * @return the most recent non-system ClassLoader on the execution stack\n    * @deprecated use {@link #checkPermission(Permission)} instead\n@@ -194,13 +196,15 @@ protected ClassLoader currentClassLoader()\n    * Find the first non-system class on the execution stack. A non-system\n    * class is one whose ClassLoader is not equal to\n    * {@link ClassLoader#getSystemClassLoader()} or its ancestors. This\n-   * will return null in three cases:<br><nl>\n+   * will return null in three cases:\n+   *\n+   * <ul>\n    * <li>All methods on the stack are from system classes</li>\n    * <li>All methods on the stack up to the first \"privileged\" caller, as\n    *  created by {@link AccessController.doPrivileged(PrivilegedAction)},\n    *  are from system classes</li>\n    * <li>A check of <code>java.security.AllPermission</code> succeeds.</li>\n-   * </nl>\n+   * </ul>\n    * \n    * @return the most recent non-system Class on the execution stack\n    * @deprecated use {@link #checkPermission(Permission)} instead\n@@ -231,13 +235,15 @@ protected int classDepth(String className)\n    * Get the depth on the execution stack of the most recent non-system class.\n    * A non-system class is one whose ClassLoader is not equal to\n    * {@link ClassLoader#getSystemClassLoader()} or its ancestors. This\n-   * will return -1 in three cases:<br><nl>\n+   * will return -1 in three cases:\n+   *\n+   * <ul>\n    * <li>All methods on the stack are from system classes</li>\n    * <li>All methods on the stack up to the first \"privileged\" caller, as\n    *  created by {@link AccessController.doPrivileged(PrivilegedAction)},\n    *  are from system classes</li>\n    * <li>A check of <code>java.security.AllPermission</code> succeeds.</li>\n-   * </nl>\n+   * </ul>\n    * \n    * @return the index of the most recent non-system Class on the stack\n    * @deprecated use {@link #checkPermission(Permission)} instead\n@@ -365,8 +371,8 @@ public void checkCreateClassLoader()\n    * Check if the current thread is allowed to modify another Thread. This is\n    * called by Thread.stop(), suspend(), resume(), interrupt(), destroy(),\n    * setPriority(), setName(), and setDaemon(). The default implementation\n-   * checks <code>RuntimePermission(\"modifyThread\") on system threads (ie.\n-   * threads in ThreadGroup with a null parent), and returns silently on\n+   * checks <code>RuntimePermission(\"modifyThread\")</code> on system threads\n+   * (ie. threads in ThreadGroup with a null parent), and returns silently on\n    * other threads.\n    *\n    * <p>If you override this, you must do two things. First, call\n@@ -375,19 +381,20 @@ public void checkCreateClassLoader()\n    * <code>RuntimePermission(\"modifyThread\")</code>, return silently, so that\n    * core classes (the Classpath library!) can modify any thread.\n    *\n-   * @param t the other Thread to check\n+   * @param thread the other Thread to check\n    * @throws SecurityException if permission is denied\n-   * @throws NullPointerException if t is null\n+   * @throws NullPointerException if thread is null\n    * @see Thread#stop()\n    * @see Thread#suspend()\n    * @see Thread#resume()\n    * @see Thread#setPriority(int)\n    * @see Thread#setName(String)\n    * @see Thread#setDaemon(boolean)\n    */\n-  public void checkAccess(Thread t)\n+  public void checkAccess(Thread thread)\n   {\n-    if (t.group != null && t.group.getParent() != null)\n+    if (thread.getThreadGroup() != null \n+\t&& thread.getThreadGroup().getParent() != null)\n       checkPermission(new RuntimePermission(\"modifyThread\"));\n   }\n \n@@ -397,8 +404,8 @@ public void checkAccess(Thread t)\n    * ThreadGroup.ThreadGroup() (to add this ThreadGroup to a parent),\n    * ThreadGroup.stop(), suspend(), resume(), interrupt(), destroy(),\n    * setDaemon(), and setMaxPriority(). The default implementation\n-   * checks <code>RuntimePermission(\"modifyThread\") on the system group (ie.\n-   * the one with a null parent), and returns silently on other groups.\n+   * checks <code>RuntimePermission(\"modifyThread\")</code> on the system group\n+   * (ie. the one with a null parent), and returns silently on other groups.\n    *\n    * <p>If you override this, you must do two things. First, call\n    * <code>super.checkAccess(t)</code>, to make sure you are not relaxing\n@@ -650,13 +657,15 @@ public void checkConnect(String host, int port)\n    * @param host the host to connect to\n    * @param port the port to connect on\n    * @param context the context to determine access for\n+   *\n    * @throws SecurityException if permission is denied, or if context is\n    *         not an AccessControlContext\n    * @throws NullPointerException if host is null\n+   *\n    * @see #getSecurityContext()\n    * @see AccessControlContext#checkPermission(Permission)\n    */\n-  public void checkConnect(String host, int port, Object securityContext)\n+  public void checkConnect(String host, int port, Object context)\n   {\n     // XXX Should be:\n     // if (! (context instanceof AccessControlContext))\n@@ -775,9 +784,12 @@ public void checkPropertiesAccess()\n    * you override this, call <code>super.checkPropertyAccess</code> rather\n    * than throwing an exception.\n    *\n+   * @param key the key of the property to check\n+   *\n    * @throws SecurityException if permission is denied\n    * @throws NullPointerException if key is null\n    * @throws IllegalArgumentException if key is \"\"\n+   *\n    * @see System#getProperty(String)\n    */\n   public void checkPropertyAccess(String key)"}, {"sha": "1a82e3edf36d439679106a81dc73fc8aab3cff0b", "filename": "libjava/java/lang/Short.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FShort.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FShort.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FShort.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -60,13 +60,13 @@ public final class Short extends Number implements Comparable\n \n   /**\n    * The minimum value a <code>short</code> can represent is -32768 (or\n-   * -2<sup>15</sup).\n+   * -2<sup>15</sup>).\n    */\n   public static final short MIN_VALUE = -32768;\n \n   /**\n    * The minimum value a <code>short</code> can represent is 32767 (or\n-   * 2<sup>15</sup).\n+   * 2<sup>15</sup>).\n    */\n   public static final short MAX_VALUE = 32767;\n \n@@ -144,7 +144,7 @@ public static short parseShort(String s)\n    *\n    * @param s the <code>String</code> to convert\n    * @param radix the radix (base) to use in the conversion\n-   * @return the <code>String</code> argument converted to </code>short</code>\n+   * @return the <code>String</code> argument converted to <code>short</code>\n    * @throws NumberFormatException if <code>s</code> cannot be parsed as a\n    *         <code>short</code>\n    */"}, {"sha": "d5bd45eaa5406f90db68fd2d314a51d9ec91a164", "filename": "libjava/java/lang/StringBuffer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FStringBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FStringBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FStringBuffer.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -396,7 +396,7 @@ public StringBuffer append(boolean bool)\n   /**\n    * Append the <code>char</code> to this <code>StringBuffer</code>.\n    *\n-   * @param c the <code>char</code> to append\n+   * @param ch the <code>char</code> to append\n    * @return this <code>StringBuffer</code>\n    */\n   public synchronized StringBuffer append(char ch)"}, {"sha": "7f636122a60c9b06a783f440908ac319b15a671f", "filename": "libjava/java/lang/System.java", "status": "modified", "additions": 42, "deletions": 40, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FSystem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FSystem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FSystem.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -310,51 +310,53 @@ public static native void arraycopy(Object src, int srcStart,\n    *\n    * <p>The required properties include:\n    * <dl>\n-   * <dt>java.version         <dd>Java version number\n-   * <dt>java.vendor          <dd>Java vendor specific string\n-   * <dt>java.vendor.url      <dd>Java vendor URL\n-   * <dt>java.home            <dd>Java installation directory\n-   * <dt>java.vm.specification.version <dd>VM Spec version\n-   * <dt>java.vm.specification.vendor  <dd>VM Spec vendor\n-   * <dt>java.vm.specification.name    <dd>VM Spec name\n-   * <dt>java.vm.version      <dd>VM implementation version\n-   * <dt>java.vm.vendor       <dd>VM implementation vendor\n-   * <dt>java.vm.name         <dd>VM implementation name\n-   * <dt>java.specification.version    <dd>Java Runtime Environment version\n-   * <dt>java.specification.vendor     <dd>Java Runtime Environment vendor\n-   * <dt>java.specification.name       <dd>Java Runtime Environment name\n-   * <dt>java.class.version   <dd>Java class version number\n-   * <dt>java.class.path      <dd>Java classpath\n-   * <dt>java.library.path    <dd>Path for finding Java libraries\n-   * <dt>java.io.tmpdir       <dd>Default temp file path\n-   * <dt>java.compiler        <dd>Name of JIT to use\n-   * <dt>java.ext.dirs        <dd>Java extension path\n-   * <dt>os.name              <dd>Operating System Name\n-   * <dt>os.arch              <dd>Operating System Architecture\n-   * <dt>os.version           <dd>Operating System Version\n-   * <dt>file.separator       <dd>File separator (\"/\" on Unix)\n-   * <dt>path.separator       <dd>Path separator (\":\" on Unix)\n-   * <dt>line.separator       <dd>Line separator (\"\\n\" on Unix)\n-   * <dt>user.name            <dd>User account name\n-   * <dt>user.home            <dd>User home directory\n-   * <dt>user.dir             <dd>User's current working directory\n+   * <dt>java.version</dt>         <dd>Java version number</dd>\n+   * <dt>java.vendor</dt>          <dd>Java vendor specific string</dd>\n+   * <dt>java.vendor.url</dt>      <dd>Java vendor URL</dd>\n+   * <dt>java.home</dt>            <dd>Java installation directory</dd>\n+   * <dt>java.vm.specification.version</dt> <dd>VM Spec version</dd>\n+   * <dt>java.vm.specification.vendor</dt>  <dd>VM Spec vendor</dd>\n+   * <dt>java.vm.specification.name</dt>    <dd>VM Spec name</dd>\n+   * <dt>java.vm.version</dt>      <dd>VM implementation version</dd>\n+   * <dt>java.vm.vendor</dt>       <dd>VM implementation vendor</dd>\n+   * <dt>java.vm.name</dt>         <dd>VM implementation name</dd>\n+   * <dt>java.specification.version</dt>    <dd>Java Runtime Environment version</dd>\n+   * <dt>java.specification.vendor</dt>     <dd>Java Runtime Environment vendor</dd>\n+   * <dt>java.specification.name</dt>       <dd>Java Runtime Environment name</dd>\n+   * <dt>java.class.version</dt>   <dd>Java class version number</dd>\n+   * <dt>java.class.path</dt>      <dd>Java classpath</dd>\n+   * <dt>java.library.path</dt>    <dd>Path for finding Java libraries</dd>\n+   * <dt>java.io.tmpdir</dt>       <dd>Default temp file path</dd>\n+   * <dt>java.compiler</dt>        <dd>Name of JIT to use</dd>\n+   * <dt>java.ext.dirs</dt>        <dd>Java extension path</dd>\n+   * <dt>os.name</dt>              <dd>Operating System Name</dd>\n+   * <dt>os.arch</dt>              <dd>Operating System Architecture</dd>\n+   * <dt>os.version</dt>           <dd>Operating System Version</dd>\n+   * <dt>file.separator</dt>       <dd>File separator (\"/\" on Unix)</dd>\n+   * <dt>path.separator</dt>       <dd>Path separator (\":\" on Unix)</dd>\n+   * <dt>line.separator</dt>       <dd>Line separator (\"\\n\" on Unix)</dd>\n+   * <dt>user.name</dt>            <dd>User account name</dd>\n+   * <dt>user.home</dt>            <dd>User home directory</dd>\n+   * <dt>user.dir</dt>             <dd>User's current working directory</dd>\n    * </dl>\n    *\n    * In addition, gnu defines several other properties, where ? stands for\n    * each character in '0' through '9':\n    * <dl>\n-   * <dl> gnu.classpath.vm.shortname <dd> Succinct version of the VM name;\n-   *      used for finding property files in file system\n-   * <dl> gnu.classpath.home.url <dd> Base URL; used for finding\n-   *      property files in file system\n-   * <dt> gnu.cpu.endian      <dd>big or little\n-   * <dt> gnu.java.io.encoding_scheme_alias.ISO-8859-?   <dd>8859_?\n-   * <dt> gnu.java.io.encoding_scheme_alias.iso-8859-?   <dd>8859_?\n-   * <dt> gnu.java.io.encoding_scheme_alias.iso8859_?    <dd>8859_?\n-   * <dt> gnu.java.io.encoding_scheme_alias.iso-latin-_? <dd>8859_?\n-   * <dt> gnu.java.io.encoding_scheme_alias.latin?       <dd>8859_?\n-   * <dt> gnu.java.io.encoding_scheme_alias.UTF-8        <dd>UTF8\n-   * <dt> gnu.java.io.encoding_scheme_alias.utf-8        <dd>UTF8\n+   * <dt>gnu.classpath.home</dt>         <dd>Path to the classpath libraries.</dd>\n+   * <dt>gnu.classpath.version</dt>      <dd>Version of the classpath libraries.</dd>\n+   * <dt>gnu.classpath.vm.shortname</dt> <dd>Succinct version of the VM name;\n+   *     used for finding property files in file system</dd>\n+   * <dt>gnu.classpath.home.url</dt>     <dd> Base URL; used for finding\n+   *     property files in file system</dd>\n+   * <dt>gnu.cpu.endian</dt>             <dd>big or little</dd>\n+   * <dt>gnu.java.io.encoding_scheme_alias.ISO-8859-?</dt>   <dd>8859_?</dd>\n+   * <dt>gnu.java.io.encoding_scheme_alias.iso-8859-?</dt>   <dd>8859_?</dd>\n+   * <dt>gnu.java.io.encoding_scheme_alias.iso8859_?</dt>    <dd>8859_?</dd>\n+   * <dt>gnu.java.io.encoding_scheme_alias.iso-latin-_?</dt> <dd>8859_?</dd>\n+   * <dt>gnu.java.io.encoding_scheme_alias.latin?</dt>       <dd>8859_?</dd>\n+   * <dt>gnu.java.io.encoding_scheme_alias.UTF-8</dt>        <dd>UTF8</dd>\n+   * <dt>gnu.java.io.encoding_scheme_alias.utf-8</dt>        <dd>UTF8</dd>\n    * </dl>\n    *\n    * @return the system properties, will never be null"}, {"sha": "89aff3f0249e46ec27f3c33e10c95ba9f84da76e", "filename": "libjava/java/lang/ThreadGroup.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FThreadGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FThreadGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FThreadGroup.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -238,16 +238,16 @@ public final synchronized void setMaxPriority(int maxpri)\n    * Check whether this ThreadGroup is an ancestor of the specified\n    * ThreadGroup, or if they are the same.\n    *\n-   * @param g the group to test on\n+   * @param group the group to test on\n    * @return whether this ThreadGroup is a parent of the specified group\n    */\n-  public final boolean parentOf(ThreadGroup tg)\n+  public final boolean parentOf(ThreadGroup group)\n   {\n-    while (tg != null)\n+    while (group != null)\n       {\n-        if (tg == this)\n+        if (group == this)\n           return true;\n-        tg = tg.parent;\n+        group = group.parent;\n       }\n     return false;\n   }\n@@ -535,7 +535,7 @@ public void list()\n    * manner.\n    *\n    * @param thread the thread that exited\n-   * @param exception the uncaught exception\n+   * @param t the uncaught throwable\n    * @throws NullPointerException if t is null\n    * @see ThreadDeath\n    * @see System#err"}, {"sha": "b3005afc6ba1f4a8e77e25454d2326ff3fd0cfe2", "filename": "libjava/java/lang/Throwable.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FThrowable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2FThrowable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FThrowable.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -392,7 +392,7 @@ public void printStackTrace(PrintStream s)\n    * then a line starting with three spaces and the string \"... X more\" is\n    * printed, where X is the number of remaining stackframes.\n    *\n-   * @param w the PrintWriter to write the trace to\n+   * @param pw the PrintWriter to write the trace to\n    * @since 1.1\n    */\n   public void printStackTrace (PrintWriter pw)"}, {"sha": "514d943f5ee8a6b71533b064628db4b9873a87b9", "filename": "libjava/java/lang/reflect/InvocationHandler.java", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2Freflect%2FInvocationHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2Freflect%2FInvocationHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FInvocationHandler.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -49,37 +49,38 @@\n  * interface.  But in order for the proxy instance to do any good, it\n  * needs to know what to do when interface methods are invoked!  So,\n  * this interface is basically a cool wrapper that provides runtime\n- * code generation needed by proxy instances.<p>\n+ * code generation needed by proxy instances.\n  *\n- * While this interface was designed for use by Proxy, it will also\n- * work on any object in general.<p>\n+ * <p>While this interface was designed for use by Proxy, it will also\n+ * work on any object in general.</p>\n  *\n- * Hints for implementing this class:<br>\n+ * <p>Hints for implementing this class:</p>\n+ * \n  * <ul>\n- *  <li>Don't forget that Object.equals, Object.hashCode, and\n- *      Object.toString will call this handler.  In particular,\n- *      a naive call to proxy.equals, proxy.hashCode, or proxy.toString\n- *      will put you in an infinite loop.  And remember that string\n- *      concatenation also invokes toString.</li>\n- *  <li>Obey the contract of the Method object you are handling, or\n- *      the proxy instance will be forced to throw a\n- *      {@link NullPointerException}, {@link ClassCastException},\n- *      or {@link UndeclaredThrowableException}.</li>\n- *  <li>Be prepared to wrap/unwrap primitives as necessary.</li>\n- *  <li>The Method object may be owned by a different interface than\n- *      what was actually used as the qualifying type of the method\n- *      invocation in the Java source code. This means that it might\n- *      not always be safe to throw an exception listed as belonging\n- *      to the method's throws clause.</li>\n+ * <li>Don't forget that Object.equals, Object.hashCode, and\n+ *     Object.toString will call this handler.  In particular,\n+ *     a naive call to proxy.equals, proxy.hashCode, or proxy.toString\n+ *     will put you in an infinite loop.  And remember that string\n+ *     concatenation also invokes toString.</li>\n+ * <li>Obey the contract of the Method object you are handling, or\n+ *     the proxy instance will be forced to throw a\n+ *     {@link NullPointerException}, {@link ClassCastException},\n+ *     or {@link UndeclaredThrowableException}.</li>\n+ * <li>Be prepared to wrap/unwrap primitives as necessary.</li>\n+ * <li>The Method object may be owned by a different interface than\n+ *     what was actually used as the qualifying type of the method\n+ *     invocation in the Java source code. This means that it might\n+ *     not always be safe to throw an exception listed as belonging\n+ *     to the method's throws clause.</li>\n  * </ul>\n  *\n  * <p><small>For a fun time, create an InvocationHandler that handles the\n- * methods of a proxy instance of the InvocationHandler interface!</small>\n+ * methods of a proxy instance of the InvocationHandler interface!</small></p>\n  *\n  * @see Proxy\n  * @see UndeclaredThrowableException\n  *\n- * @author Eric Blake <ebb9@email.byu.edu>\n+ * @author Eric Blake (ebb9@email.byu.edu)\n  * @since 1.3\n  * @status updated to 1.4\n  */"}, {"sha": "56d7aeb7ce91f472fc5044e71322f078914627b7", "filename": "libjava/java/lang/reflect/Proxy.java", "status": "modified", "additions": 27, "deletions": 26, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2Freflect%2FProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf6f7d55897e0c6b1badbcfc241e512a4bb154b8/libjava%2Fjava%2Flang%2Freflect%2FProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FProxy.java?ref=cf6f7d55897e0c6b1badbcfc241e512a4bb154b8", "patch": "@@ -211,35 +211,36 @@ protected Proxy(InvocationHandler handler)\n    * Returns the proxy {@link Class} for the given ClassLoader and array\n    * of interfaces, dynamically generating it if necessary.\n    *\n-   * There are several restrictions on this method, the violation of\n+   * <p>There are several restrictions on this method, the violation of\n    * which will result in an IllegalArgumentException or\n-   * NullPointerException:\n+   * NullPointerException:</p>\n+   * \n    * <ul>\n-   *  <li>All objects in `interfaces' must represent distinct interfaces.\n-   *      Classes, primitive types, null, and duplicates are forbidden.</li>\n-   *  <li>The interfaces must be visible in the specified ClassLoader.\n-   *      In other words, for each interface i:\n-   *      <code>Class.forName(i.getName(), false, loader) == i</code>\n-   *      must be true.</li>\n-   *  <li>All non-public interfaces (if any) must reside in the same\n-   *      package, or the proxy class would be non-instantiable.  If\n-   *      there are no non-public interfaces, the package of the proxy\n-   *      class is unspecified.</li>\n-   *  <li>All interfaces must be compatible - if two declare a method\n-   *      with the same name and parameters, the return type must be\n-   *      the same and the throws clause of the proxy class will be\n-   *      the maximal subset of subclasses of the throws clauses for\n-   *      each method that is overridden.</li>\n-   *  <li>VM constraints limit the number of interfaces a proxy class\n-   *      may directly implement (however, the indirect inheritance\n-   *      of {@link Serializable} does not count against this limit).\n-   *      Even though most VMs can theoretically have 65535\n-   *      superinterfaces for a class, the actual limit is smaller\n-   *      because a class's constant pool is limited to 65535 entries,\n-   *      and not all entries can be interfaces.</li>\n-   * </ul><p>\n+   * <li>All objects in `interfaces' must represent distinct interfaces.\n+   *     Classes, primitive types, null, and duplicates are forbidden.</li>\n+   * <li>The interfaces must be visible in the specified ClassLoader.\n+   *     In other words, for each interface i:\n+   *     <code>Class.forName(i.getName(), false, loader) == i</code>\n+   *     must be true.</li>\n+   * <li>All non-public interfaces (if any) must reside in the same\n+   *     package, or the proxy class would be non-instantiable.  If\n+   *     there are no non-public interfaces, the package of the proxy\n+   *     class is unspecified.</li>\n+   * <li>All interfaces must be compatible - if two declare a method\n+   *     with the same name and parameters, the return type must be\n+   *     the same and the throws clause of the proxy class will be\n+   *     the maximal subset of subclasses of the throws clauses for\n+   *     each method that is overridden.</li>\n+   * <li>VM constraints limit the number of interfaces a proxy class\n+   *     may directly implement (however, the indirect inheritance\n+   *     of {@link Serializable} does not count against this limit).\n+   *     Even though most VMs can theoretically have 65535\n+   *     superinterfaces for a class, the actual limit is smaller\n+   *     because a class's constant pool is limited to 65535 entries,\n+   *     and not all entries can be interfaces.</li>\n+   * </ul>\n    *\n-   * Note that different orders of interfaces produce distinct classes.\n+   * <p>Note that different orders of interfaces produce distinct classes.</p>\n    *\n    * @param loader the class loader to define the proxy class in; null\n    *        implies the bootstrap class loader"}]}