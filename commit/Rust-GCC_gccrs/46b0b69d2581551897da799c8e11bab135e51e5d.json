{"sha": "46b0b69d2581551897da799c8e11bab135e51e5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZiMGI2OWQyNTgxNTUxODk3ZGE3OTljOGUxMWJhYjEzNWU1MWU1ZA==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2008-11-12T10:36:03Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2008-11-12T10:36:03Z"}, "message": "re PR tree-optimization/38079 (gcc segfaults when using -ftree-vectorizer-verbose=9)\n\n\tPR tree-optimization/38079\n\t* tree-vect-analyze.c (vect_analyze_data_refs): Replace dump_file\n\twith vect_dump.\n\nFrom-SVN: r141785", "tree": {"sha": "99627ada9abca04ea71c2ff2c25d5c58f9b46f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99627ada9abca04ea71c2ff2c25d5c58f9b46f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46b0b69d2581551897da799c8e11bab135e51e5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b0b69d2581551897da799c8e11bab135e51e5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b0b69d2581551897da799c8e11bab135e51e5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b0b69d2581551897da799c8e11bab135e51e5d/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "085b55410d90cdfcd0733a16884aabb693a1f050", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085b55410d90cdfcd0733a16884aabb693a1f050", "html_url": "https://github.com/Rust-GCC/gccrs/commit/085b55410d90cdfcd0733a16884aabb693a1f050"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "5e45a04b6f54fb335c8220b9eeadeb80c727b228", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b0b69d2581551897da799c8e11bab135e51e5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b0b69d2581551897da799c8e11bab135e51e5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46b0b69d2581551897da799c8e11bab135e51e5d", "patch": "@@ -1,3 +1,9 @@\n+2008-11-12  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/38079\n+\t* tree-vect-analyze.c (vect_analyze_data_refs): Replace dump_file\n+\twith vect_dump.\n+\n 2008-11-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/35334"}, {"sha": "a4460b4916842ff3c01ea81211394df45bd2b95f", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b0b69d2581551897da799c8e11bab135e51e5d/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b0b69d2581551897da799c8e11bab135e51e5d/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=46b0b69d2581551897da799c8e11bab135e51e5d", "patch": "@@ -3606,8 +3606,8 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo)\n \n \t  if (vect_print_dump_info (REPORT_DETAILS))\n \t    {\n-\t      fprintf (dump_file, \"analyze in outer-loop: \");\n-\t      print_generic_expr (dump_file, inner_base, TDF_SLIM);\n+\t      fprintf (vect_dump, \"analyze in outer-loop: \");\n+\t      print_generic_expr (vect_dump, inner_base, TDF_SLIM);\n \t    }\n \n \t  outer_base = get_inner_reference (inner_base, &pbitsize, &pbitpos, \n@@ -3617,15 +3617,15 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo)\n \t  if (pbitpos % BITS_PER_UNIT != 0)\n \t    {\n \t      if (vect_print_dump_info (REPORT_DETAILS))\n-\t\tfprintf (dump_file, \"failed: bit offset alignment.\\n\");\n+\t\tfprintf (vect_dump, \"failed: bit offset alignment.\\n\");\n \t      return false;\n \t    }\n \n \t  outer_base = build_fold_addr_expr (outer_base);\n \t  if (!simple_iv (loop, stmt, outer_base, &base_iv, false))\n \t    {\n \t      if (vect_print_dump_info (REPORT_DETAILS))\n-\t\tfprintf (dump_file, \"failed: evolution of base is not affine.\\n\");\n+\t\tfprintf (vect_dump, \"failed: evolution of base is not affine.\\n\");\n \t      return false;\n \t    }\n \n@@ -3645,7 +3645,7 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo)\n \t  else if (!simple_iv (loop, stmt, poffset, &offset_iv, false))\n \t    {\n \t      if (vect_print_dump_info (REPORT_DETAILS))\n-\t        fprintf (dump_file, \"evolution of offset is not affine.\\n\");\n+\t        fprintf (vect_dump, \"evolution of offset is not affine.\\n\");\n \t      return false;\n \t    }\n \n@@ -3668,18 +3668,18 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo)\n \t  STMT_VINFO_DR_ALIGNED_TO (stmt_info) = \n \t\t\t\tsize_int (highest_pow2_factor (offset_iv.base));\n \n-\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t  if (vect_print_dump_info (REPORT_DETAILS))\n \t    {\n-\t      fprintf (dump_file, \"\\touter base_address: \");\n-\t      print_generic_expr (dump_file, STMT_VINFO_DR_BASE_ADDRESS (stmt_info), TDF_SLIM);\n-\t      fprintf (dump_file, \"\\n\\touter offset from base address: \");\n-\t      print_generic_expr (dump_file, STMT_VINFO_DR_OFFSET (stmt_info), TDF_SLIM);\n-\t      fprintf (dump_file, \"\\n\\touter constant offset from base address: \");\n-\t      print_generic_expr (dump_file, STMT_VINFO_DR_INIT (stmt_info), TDF_SLIM);\n-\t      fprintf (dump_file, \"\\n\\touter step: \");\n-\t      print_generic_expr (dump_file, STMT_VINFO_DR_STEP (stmt_info), TDF_SLIM);\n-\t      fprintf (dump_file, \"\\n\\touter aligned to: \");\n-\t      print_generic_expr (dump_file, STMT_VINFO_DR_ALIGNED_TO (stmt_info), TDF_SLIM);\n+\t      fprintf (vect_dump, \"\\touter base_address: \");\n+\t      print_generic_expr (vect_dump, STMT_VINFO_DR_BASE_ADDRESS (stmt_info), TDF_SLIM);\n+\t      fprintf (vect_dump, \"\\n\\touter offset from base address: \");\n+\t      print_generic_expr (vect_dump, STMT_VINFO_DR_OFFSET (stmt_info), TDF_SLIM);\n+\t      fprintf (vect_dump, \"\\n\\touter constant offset from base address: \");\n+\t      print_generic_expr (vect_dump, STMT_VINFO_DR_INIT (stmt_info), TDF_SLIM);\n+\t      fprintf (vect_dump, \"\\n\\touter step: \");\n+\t      print_generic_expr (vect_dump, STMT_VINFO_DR_STEP (stmt_info), TDF_SLIM);\n+\t      fprintf (vect_dump, \"\\n\\touter aligned to: \");\n+\t      print_generic_expr (vect_dump, STMT_VINFO_DR_ALIGNED_TO (stmt_info), TDF_SLIM);\n \t    }\n \t}\n "}]}