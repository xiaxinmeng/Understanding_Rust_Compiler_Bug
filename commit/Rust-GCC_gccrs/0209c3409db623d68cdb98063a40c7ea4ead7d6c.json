{"sha": "0209c3409db623d68cdb98063a40c7ea4ead7d6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIwOWMzNDA5ZGI2MjNkNjhjZGI5ODA2M2E0MGM3ZWE0ZWFkN2Q2Yw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-02-28T21:09:54Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-02-28T21:09:54Z"}, "message": "tm.texi: Document new target switch, NO_BUILTIN_WCHAR_TYPE.\n\n\t* tm.texi: Document new target switch, NO_BUILTIN_WCHAR_TYPE.\n\t* cppinit.c (builtin_array): Define __WCHAR_TYPE__ only if\n\tNO_BUILTIN_WCHAR_TYPE is not defined.\n\t(CPP_WCHAR_TYPE): Delete.\n\t* cccp.c (main): Don't change wchar_type if cplusplus.\n\t(special_symbol, initialize_builtins): Honor NO_BUILTIN_WCHAR_TYPE.\n\nFrom-SVN: r32241", "tree": {"sha": "f8b9f5609e8a8c18e6cf005e58e55445f517f8c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8b9f5609e8a8c18e6cf005e58e55445f517f8c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0209c3409db623d68cdb98063a40c7ea4ead7d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0209c3409db623d68cdb98063a40c7ea4ead7d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0209c3409db623d68cdb98063a40c7ea4ead7d6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0209c3409db623d68cdb98063a40c7ea4ead7d6c/comments", "author": null, "committer": null, "parents": [{"sha": "7cb4ce1205d29a7d8c18046f9683f08ffe539378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cb4ce1205d29a7d8c18046f9683f08ffe539378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cb4ce1205d29a7d8c18046f9683f08ffe539378"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "d3070518819e40ae79dfd32d7b730ed6360f0a65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0209c3409db623d68cdb98063a40c7ea4ead7d6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0209c3409db623d68cdb98063a40c7ea4ead7d6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0209c3409db623d68cdb98063a40c7ea4ead7d6c", "patch": "@@ -1,3 +1,12 @@\n+2000-02-28  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* tm.texi: Document new target switch, NO_BUILTIN_WCHAR_TYPE.\n+\t* cppinit.c (builtin_array): Define __WCHAR_TYPE__ only if\n+\tNO_BUILTIN_WCHAR_TYPE is not defined.\n+\t(CPP_WCHAR_TYPE): Delete.\n+\t* cccp.c (main): Don't change wchar_type if cplusplus.\n+\t(special_symbol, initialize_builtins): Honor NO_BUILTIN_WCHAR_TYPE.\n+\n 2000-02-28  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/arm-wince-pe.h (SIZE_TYPE): Define to \"unsigned long\"."}, {"sha": "901474bbdea66204f40f3fe4eed873694686d7cb", "filename": "gcc/cccp.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0209c3409db623d68cdb98063a40c7ea4ead7d6c/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0209c3409db623d68cdb98063a40c7ea4ead7d6c/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=0209c3409db623d68cdb98063a40c7ea4ead7d6c", "patch": "@@ -1786,11 +1786,6 @@ main (argc, argv)\n   fp->nominal_fname_len = strlen (in_fname);\n   fp->lineno = 0;\n \n-  /* In C++, wchar_t is a distinct basic type, and we can expect\n-     __wchar_t to be defined by cc1plus.  */\n-  if (cplusplus)\n-    wchar_type = \"__wchar_t\";\n-\n   /* Install __LINE__, etc.  Must follow initialize_char_syntax\n      and option processing.  */\n   initialize_builtins (fp, &outbuf);\n@@ -4273,9 +4268,11 @@ special_symbol (hp, op)\n     break;\n #endif\n \n+#ifndef NO_BUILTIN_WCHAR_TYPE\n   case T_WCHAR_TYPE:\n     buf = wchar_type;\n     break;\n+#endif\n \n   case T_USER_LABEL_PREFIX_TYPE:\n     buf = user_label_prefix;\n@@ -10298,7 +10295,9 @@ initialize_builtins (inp, outp)\n #ifndef NO_BUILTIN_PTRDIFF_TYPE\n   install ((const U_CHAR *) \"__PTRDIFF_TYPE__ \", -1, T_PTRDIFF_TYPE, NULL_PTR, -1);\n #endif\n+#ifndef NO_BUILTIN_WCHAR_TYPE\n   install ((const U_CHAR *) \"__WCHAR_TYPE__\", -1, T_WCHAR_TYPE, NULL_PTR, -1);\n+#endif\n   install ((const U_CHAR *) \"__USER_LABEL_PREFIX__\", -1, T_USER_LABEL_PREFIX_TYPE,\n \t   NULL_PTR, -1);\n   install ((const U_CHAR *) \"__REGISTER_PREFIX__\", -1, T_REGISTER_PREFIX_TYPE,\n@@ -10347,10 +10346,12 @@ initialize_builtins (inp, outp)\n \t\t\t   outp, dp);\n #endif\n \n+#ifndef NO_BUILTIN_WCHAR_TYPE\n       sprintf (directive, \" __WCHAR_TYPE__ %s\\n\", wchar_type);\n       output_line_directive (inp, outp, 0, same_file);\n       pass_thru_directive (udirective, &udirective[strlen (directive)],\n \t\t\t   outp, dp);\n+#endif\n \n       sprintf (directive, \" __DATE__ \\\"%s %2d %4d\\\"\\n\",\n \t       monthnames[timebuf->tm_mon],"}, {"sha": "eb2124ed1d2296afc6f9925285cb36ab1001aea3", "filename": "gcc/cppinit.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0209c3409db623d68cdb98063a40c7ea4ead7d6c/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0209c3409db623d68cdb98063a40c7ea4ead7d6c/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=0209c3409db623d68cdb98063a40c7ea4ead7d6c", "patch": "@@ -63,8 +63,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #ifndef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n #endif\n-#define CPP_WCHAR_TYPE(PFILE) \\\n-\t(CPP_OPTIONS (PFILE)->cplusplus ? \"__wchar_t\" : WCHAR_TYPE)\n \n /* The string value for __USER_LABEL_PREFIX__ */\n \n@@ -530,7 +528,9 @@ static const struct builtin builtin_array[] =\n #ifndef NO_BUILTIN_PTRDIFF_TYPE\n   { \"__PTRDIFF_TYPE__\",\t\tPTRDIFF_TYPE,\t T_CONST, DUMP },\n #endif\n+#ifndef NO_BUILTIN_WCHAR_TYPE\n   { \"__WCHAR_TYPE__\",\t\tWCHAR_TYPE,\t T_CONST, DUMP },\n+#endif\n   { 0, 0, 0, 0 }\n };\n "}, {"sha": "3aa7646d6e32a9f3554b668f95be4b0b8490dc08", "filename": "gcc/tm.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0209c3409db623d68cdb98063a40c7ea4ead7d6c/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0209c3409db623d68cdb98063a40c7ea4ead7d6c/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=0209c3409db623d68cdb98063a40c7ea4ead7d6c", "patch": "@@ -128,6 +128,16 @@ This should be defined if @code{PTRDIFF_TYPE} depends on target dependent flags\n which are not accessible to the preprocessor.  Otherwise, it should not\n be defined.\n \n+@findex NO_BUILTIN_WCHAR_TYPE\n+@item NO_BUILTIN_WCHAR_TYPE\n+If this macro is defined, the preprocessor will not define the builtin macro\n+@code{__WCHAR_TYPE__}.  The macro @code{__WCHAR_TYPE__} must then be\n+defined by @code{CPP_SPEC} instead.\n+\n+This should be defined if @code{WCHAR_TYPE} depends on target dependent flags\n+which are not accessible to the preprocessor.  Otherwise, it should not\n+be defined.\n+\n @findex SIGNED_CHAR_SPEC\n @item SIGNED_CHAR_SPEC\n A C string constant that tells the GCC driver program options to"}]}