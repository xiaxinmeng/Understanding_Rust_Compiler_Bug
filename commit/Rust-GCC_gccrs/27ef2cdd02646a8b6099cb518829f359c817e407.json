{"sha": "27ef2cdd02646a8b6099cb518829f359c817e407", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlZjJjZGQwMjY0NmE4YjYwOTljYjUxODgyOWYzNTljODE3ZTQwNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-09-10T11:26:25Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-09-10T11:26:25Z"}, "message": "extend.texi, [...]: Fix typos.\n\n\t* doc/extend.texi, doc/invoke.texi, doc/passes.texi: Fix\n\ttypos.  Follow spelling conventions.\n\nFrom-SVN: r87293", "tree": {"sha": "937ba86685c00d48164704c544aefa69476c21d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/937ba86685c00d48164704c544aefa69476c21d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27ef2cdd02646a8b6099cb518829f359c817e407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ef2cdd02646a8b6099cb518829f359c817e407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27ef2cdd02646a8b6099cb518829f359c817e407", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ef2cdd02646a8b6099cb518829f359c817e407/comments", "author": null, "committer": null, "parents": [{"sha": "77880ae492b7b33e709c40806d03ea4b363be957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77880ae492b7b33e709c40806d03ea4b363be957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77880ae492b7b33e709c40806d03ea4b363be957"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "d3b8fc078fa70c9b237db48b637943f3b068d6b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27ef2cdd02646a8b6099cb518829f359c817e407", "patch": "@@ -1,3 +1,8 @@\n+2004-09-10  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* doc/extend.texi, doc/invoke.texi, doc/passes.texi: Fix\n+\ttypos.  Follow spelling conventions.\n+\n 2004-09-10  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* toplev.c (warn_deprecated_use): Correct logic for saying \"type\""}, {"sha": "ccab95a19af38483a0f98ca4b96b4fc85f4970ba", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=27ef2cdd02646a8b6099cb518829f359c817e407", "patch": "@@ -5538,7 +5538,7 @@ Semiconductor}.  The two exceptions are @code{__MDUNPACKH} and\n pointer rather than by value.\n \n Most of the functions are named after specific FR-V instructions.\n-Such functions are said to be ``directly mapped'' and are summarised\n+Such functions are said to be ``directly mapped'' and are summarized\n here in tabular form.\n \n @menu\n@@ -8904,7 +8904,7 @@ translation unit.\n @emph{Note:} As of GCC 2.7.2, these @code{#pragma}s are not useful in\n most cases, because of COMDAT support and the ``key method'' heuristic\n mentioned in @ref{Vague Linkage}.  Using them can actually cause your\n-program to grow due to unnecesary out-of-line copies of inline\n+program to grow due to unnecessary out-of-line copies of inline\n functions.  Currently (3.4) the only benefit of these\n @code{#pragma}s is reduced duplication of debugging information, and\n that should be addressed soon on DWARF 2 targets with the use of"}, {"sha": "49747b0e51757bd4a0618e955e9929af4658aaf0", "filename": "gcc/doc/include/texinfo.tex", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2Fdoc%2Finclude%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2Fdoc%2Finclude%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finclude%2Ftexinfo.tex?ref=27ef2cdd02646a8b6099cb518829f359c817e407", "patch": "@@ -403,7 +403,7 @@\n \\def\\argremovecomment#1\\comment#2\\ArgTerm{\\argremovec #1\\c\\ArgTerm}\n \\def\\argremovec#1\\c#2\\ArgTerm{\\argcheckspaces#1\\^^M\\ArgTerm}\n \n-% Each occurence of `\\^^M' or `<space>\\^^M' is replaced by a single space.\n+% Each occurrence of `\\^^M' or `<space>\\^^M' is replaced by a single space.\n %\n % \\argremovec might leave us with trailing space, e.g.,\n %    @end itemize  @c foo"}, {"sha": "94b475750cda1702350f6c59cfbe3ca2be88e685", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=27ef2cdd02646a8b6099cb518829f359c817e407", "patch": "@@ -5527,7 +5527,7 @@ variable will then be made to alias every call-clobbered variable.\n \n @item max-aliased-vops\n \n-Maxiumum number of virtual operands allowed to represent aliases\n+Maximum number of virtual operands allowed to represent aliases\n before triggering the alias grouping heuristic.  Alias grouping\n reduces compile times and memory consumption needed for aliasing at\n the expense of precision loss in alias information.\n@@ -12109,9 +12109,9 @@ The default without @option{-fpic} is @code{initial-exec}; with\n @item -fvisibility=@var{default|internal|hidden|protected}\n @opindex fvisibility\n Set the default ELF image symbol visibility to the specified option - all\n-symbols will be marked with this unless overrided within the code.\n+symbols will be marked with this unless overridden within the code.\n Using this feature can very substantially improve linking and\n-load times of shared object libraries, produce more optimised\n+load times of shared object libraries, produce more optimized\n code, provide near-perfect API export and prevent symbol clashes.\n It is @strong{strongly} recommended that you use this in any shared objects\n you distribute."}, {"sha": "f7f38738c9347596045a85404769986b51c2fc25", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ef2cdd02646a8b6099cb518829f359c817e407/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=27ef2cdd02646a8b6099cb518829f359c817e407", "patch": "@@ -79,7 +79,7 @@ usually most convenient to do this as each top level declaration or\n definition is seen.  There is also a distinction to be made between\n generating functional code and generating complete debug information.\n The only thing that is absolutely required for functional code is that\n-function and data @emph{defintions} be passed to the middle-end.  For\n+function and data @emph{definitions} be passed to the middle-end.  For\n complete debug information, function, data and type declarations \n should all be passed as well.\n \n@@ -244,7 +244,7 @@ and is described by @code{pass_referenced_vars}.\n \n This pass rewrites the function such that it is in SSA form.  After\n this pass, all @code{is_gimple_reg} variables will be referenced by\n-@code{SSA_NAME}, and all occurences of other variables will be \n+@code{SSA_NAME}, and all occurrences of other variables will be \n annotated with @code{VDEFS} and @code{VUSES}; phi nodes will have \n been inserted as necessary for each basic block.  This pass is\n located in @file{tree-ssa.c} and is described by @code{pass_build_ssa}."}]}