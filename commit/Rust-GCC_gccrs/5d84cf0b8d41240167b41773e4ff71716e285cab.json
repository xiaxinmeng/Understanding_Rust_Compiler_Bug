{"sha": "5d84cf0b8d41240167b41773e4ff71716e285cab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ4NGNmMGI4ZDQxMjQwMTY3YjQxNzczZTRmZjcxNzE2ZTI4NWNhYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-04-28T19:57:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-04-28T19:57:42Z"}, "message": "configure.in (HAVE_AS_SPARC_UA_PCREL): Check for working %r_disp32().\n\n\t* configure.in (HAVE_AS_SPARC_UA_PCREL): Check for working\n\t%r_disp32().\n\t* src/sparc/v8.S: Use it.\n\t* src/sparc/v9.S: Likewise.\n\t* fficonfig.h.in: Rebuilt.\n\t* configure: Rebuilt.\n\nFrom-SVN: r52858", "tree": {"sha": "8f8fb5903fbe17a1cd591f2bd8975d96fdb09d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f8fb5903fbe17a1cd591f2bd8975d96fdb09d5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d84cf0b8d41240167b41773e4ff71716e285cab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d84cf0b8d41240167b41773e4ff71716e285cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d84cf0b8d41240167b41773e4ff71716e285cab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d84cf0b8d41240167b41773e4ff71716e285cab/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "069909862b409fc025762213f2dc9979a27ee822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/069909862b409fc025762213f2dc9979a27ee822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/069909862b409fc025762213f2dc9979a27ee822"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "cd5a456e2bca2be01b6590db38c05789ae4f110c", "filename": "libffi/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=5d84cf0b8d41240167b41773e4ff71716e285cab", "patch": "@@ -1,3 +1,12 @@\n+2002-04-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.in (HAVE_AS_SPARC_UA_PCREL): Check for working\n+\t%r_disp32().\n+\t* src/sparc/v8.S: Use it.\n+\t* src/sparc/v9.S: Likewise.\n+\t* fficonfig.h.in: Rebuilt.\n+\t* configure: Rebuilt.\n+\n 2002-04-08  Hans Boehm  <Hans_Boehm@hp.com>\n \n \t* src/java_raw_api.c (ffi_java_raw_size): Handle FFI_TYPE_DOUBLE"}, {"sha": "9649abaf3a450558688fe23805e5432603555de0", "filename": "libffi/configure", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=5d84cf0b8d41240167b41773e4ff71716e285cab", "patch": "@@ -3421,6 +3421,48 @@ if test $ac_cv_c_bigendian = unknown; then\n fi\n \n \n+if test x$TARGET == xSPARC; then\n+    echo $ac_n \"checking assembler and linker support unaligned pc related relocs\"\"... $ac_c\" 1>&6\n+echo \"configure:3426: checking assembler and linker support unaligned pc related relocs\" >&5\n+if eval \"test \\\"`echo '$''{'libffi_cv_as_sparc_ua_pcrel'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  \n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tsave_LDFLAGS=\"$LDFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fpic\"\n+\tLDFLAGS=\"$LDFLAGS -shared\"\n+\tcat > conftest.$ac_ext <<EOF\n+#line 3436 \"configure\"\n+#include \"confdefs.h\"\n+asm (\".text; foo: nop; .data; .align 4; .byte 0; .uaword %r_disp32(foo); .text\");\n+int main() {\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:3442: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+  rm -rf conftest*\n+  libffi_cv_as_sparc_ua_pcrel=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  libffi_cv_as_sparc_ua_pcrel=no\n+fi\n+rm -f conftest*\n+\tCFLAGS=\"$save_CFLAGS\"\n+\tLDFLAGS=\"$save_LDFLAGS\"\n+fi\n+\n+echo \"$ac_t\"\"$libffi_cv_as_sparc_ua_pcrel\" 1>&6\n+    if test \"x$libffi_cv_as_sparc_ua_pcrel\" = xyes; then\n+\tcat >> confdefs.h <<\\EOF\n+#define HAVE_AS_SPARC_UA_PCREL 1\n+EOF\n+\n+    fi\n+fi\n+\n \n \n "}, {"sha": "9e9ab1c142512214d79102bcc51ac51b63557ae0", "filename": "libffi/configure.in", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.in?ref=5d84cf0b8d41240167b41773e4ff71716e285cab", "patch": "@@ -96,6 +96,24 @@ AC_COMPILE_CHECK_SIZEOF(long double)\n AC_COMPILE_CHECK_SIZEOF(void *)\n AC_C_BIGENDIAN_CROSS\n \n+if test x$TARGET == xSPARC; then\n+    AC_CACHE_CHECK([assembler and linker support unaligned pc related relocs],\n+\tlibffi_cv_as_sparc_ua_pcrel, [\n+\tsave_CFLAGS=\"$CFLAGS\"\n+\tsave_LDFLAGS=\"$LDFLAGS\"\n+\tCFLAGS=\"$CFLAGS -fpic\"\n+\tLDFLAGS=\"$LDFLAGS -shared\"\n+\tAC_TRY_LINK([asm (\".text; foo: nop; .data; .align 4; .byte 0; .uaword %r_disp32(foo); .text\");],,\n+\t\t    [libffi_cv_as_sparc_ua_pcrel=yes],\n+\t\t    [libffi_cv_as_sparc_ua_pcrel=no])\n+\tCFLAGS=\"$save_CFLAGS\"\n+\tLDFLAGS=\"$save_LDFLAGS\"])\n+    if test \"x$libffi_cv_as_sparc_ua_pcrel\" = xyes; then\n+\tAC_DEFINE(HAVE_AS_SPARC_UA_PCREL, 1,\n+\t\t  [Define if your assembler and linker support unaligned PC relative relocs.])\n+    fi\n+fi\n+\n AC_SUBST(TARGET)\n AC_SUBST(TARGETDIR)\n "}, {"sha": "ac15aeddbd7c726fc778a969814cb6f41fd9aca1", "filename": "libffi/fficonfig.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Ffficonfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Ffficonfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ffficonfig.h.in?ref=5d84cf0b8d41240167b41773e4ff71716e285cab", "patch": "@@ -68,3 +68,6 @@\n \n /* Define if you have the memcpy function.  */\n #undef HAVE_MEMCPY\n+\n+/* Define if your assembler and linker support unaligned PC relative relocs.  */\n+#undef HAVE_AS_SPARC_UA_PCREL"}, {"sha": "d94fe03d2aa9080bfc9abf4c802a656f90c8893c", "filename": "libffi/src/sparc/v8.S", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Fsrc%2Fsparc%2Fv8.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Fsrc%2Fsparc%2Fv8.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv8.S?ref=5d84cf0b8d41240167b41773e4ff71716e285cab", "patch": "@@ -115,7 +115,11 @@ longlong:\n \t.byte\t0x80-WS\t! sleb128 -WS; CIE Data Alignment Factor\n \t.byte\t0xf\t! CIE RA Column\n \t.byte\t0x1\t! uleb128 0x1; Augmentation size\n+#ifdef HAVE_AS_SPARC_UA_PCREL\n+\t.byte\t0x1b\t! FDE Encoding (pcrel sdata4)\n+#else\n \t.byte\t0x50\t! FDE Encoding (aligned absolute)\n+#endif\n \t.byte\t0xc\t! DW_CFA_def_cfa\n \t.byte\t0xe\t! uleb128 0xe\n \t.byte\t0x0\t! uleb128 0x0\n@@ -125,9 +129,14 @@ longlong:\n \t.uaword\t.LLEFDE1-.LLASFDE1\t! FDE Length\n .LLASFDE1:\n \t.uaword\t.LLASFDE1-.LLframe1\t! FDE CIE offset\n+#ifdef HAVE_AS_SPARC_UA_PCREL\n+\t.uaword\t%r_disp32(.LLFB1)\n+\t.uaword\t.LLFE1-.LLFB1\t! FDE address range\n+#else\n \t.align\tWS\n \t.nword\t.LLFB1\n \t.uanword .LLFE1-.LLFB1\t! FDE address range\n+#endif\n \t.byte\t0x0\t! uleb128 0x0; Augmentation size\n \t.byte\t0x4\t! DW_CFA_advance_loc4\n \t.uaword\t.LLCFI0-.LLFB1"}, {"sha": "bd358c0d84d379d254fdaab4b24ba5d3bc8bf274", "filename": "libffi/src/sparc/v9.S", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Fsrc%2Fsparc%2Fv9.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d84cf0b8d41240167b41773e4ff71716e285cab/libffi%2Fsrc%2Fsparc%2Fv9.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv9.S?ref=5d84cf0b8d41240167b41773e4ff71716e285cab", "patch": "@@ -136,7 +136,11 @@ dostruct:\n \t.byte\t0x78\t! sleb128 -8; CIE Data Alignment Factor\n \t.byte\t0xf\t! CIE RA Column\n \t.byte\t0x1\t! uleb128 0x1; Augmentation size\n+#ifdef HAVE_AS_SPARC_UA_PCREL\n+\t.byte\t0x1b\t! FDE Encoding (pcrel sdata4)\n+#else\n \t.byte\t0x50\t! FDE Encoding (aligned absolute)\n+#endif\n \t.byte\t0xc\t! DW_CFA_def_cfa\n \t.byte\t0xe\t! uleb128 0xe\n \t.byte\t0xff,0xf\t! uleb128 0x7ff\n@@ -146,9 +150,14 @@ dostruct:\n \t.uaword\t.LLEFDE1-.LLASFDE1\t! FDE Length\n .LLASFDE1:\n \t.uaword\t.LLASFDE1-.LLframe1\t! FDE CIE offset\n+#ifdef HAVE_AS_SPARC_UA_PCREL\n+\t.uaword\t%r_disp32(.LLFB1)\n+\t.uaword\t.LLFE1-.LLFB1\t\t! FDE address range\n+#else\n \t.align 8\n \t.xword\t.LLFB1\n \t.uaxword\t.LLFE1-.LLFB1\t! FDE address range\n+#endif\n \t.byte\t0x0\t! uleb128 0x0; Augmentation size\n \t.byte\t0x4\t! DW_CFA_advance_loc4\n \t.uaword\t.LLCFI0-.LLFB1"}]}