{"sha": "be565ad7dfb253836b579f666b230fd261a19913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU1NjVhZDdkZmIyNTM4MzZiNTc5ZjY2NmIyMzBmZDI2MWExOTkxMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2003-03-26T16:00:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-03-26T16:00:52Z"}, "message": "ia64.c (ia64_expand_op_and_fetch): Fix comment.\n\n\t* config/ia64/ia64.c (ia64_expand_op_and_fetch): Fix comment.\n\t(ia64_expand_compare_and_swap): Use always DImode ar.ccv,\n\tzero extend old to it.\n\t* config/ia64/ia64.md (cmpxchg_acq_si): Remove mode from ccv\n\toperand.\n\n\t* gcc.dg/ia64-sync-3.c: New test.\n\nFrom-SVN: r64895", "tree": {"sha": "bcd718c3205afeb4ccd10f2f2f95cbb6a43944ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcd718c3205afeb4ccd10f2f2f95cbb6a43944ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be565ad7dfb253836b579f666b230fd261a19913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be565ad7dfb253836b579f666b230fd261a19913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be565ad7dfb253836b579f666b230fd261a19913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be565ad7dfb253836b579f666b230fd261a19913/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f729e5592fe97fd4497578845d04a4025f180d66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f729e5592fe97fd4497578845d04a4025f180d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f729e5592fe97fd4497578845d04a4025f180d66"}], "stats": {"total": 101, "additions": 97, "deletions": 4}, "files": [{"sha": "06993a1fddc2cdf3ff705f3053fcd4fdcb5e806c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be565ad7dfb253836b579f666b230fd261a19913/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be565ad7dfb253836b579f666b230fd261a19913/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be565ad7dfb253836b579f666b230fd261a19913", "patch": "@@ -1,3 +1,11 @@\n+2003-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/ia64/ia64.c (ia64_expand_op_and_fetch): Fix comment.\n+\t(ia64_expand_compare_and_swap): Use always DImode ar.ccv,\n+\tzero extend old to it.\n+\t* config/ia64/ia64.md (cmpxchg_acq_si): Remove mode from ccv\n+\toperand.\n+\n 2003-03-26  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR target/7784"}, {"sha": "b74dd593cb290e018e84bf101747ff1389a84fb2", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be565ad7dfb253836b579f666b230fd261a19913/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be565ad7dfb253836b579f666b230fd261a19913/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=be565ad7dfb253836b579f666b230fd261a19913", "patch": "@@ -8047,7 +8047,7 @@ ia64_expand_fetch_and_op (binoptab, mode, arglist, target)\n      do {\n        old = tmp;\n        ar.ccv = tmp;\n-       ret = tmp + value;\n+       ret = tmp <op> value;\n        cmpxchgsz.acq tmp = [ptr], ret\n      } while (tmp != old)\n */\n@@ -8150,8 +8150,15 @@ ia64_expand_compare_and_swap (mode, boolp, arglist, target)\n   else\n     tmp = gen_reg_rtx (mode);\n \n-  ccv = gen_rtx_REG (mode, AR_CCV_REGNUM);\n-  emit_move_insn (ccv, old);\n+  ccv = gen_rtx_REG (DImode, AR_CCV_REGNUM);\n+  if (mode == DImode)\n+    emit_move_insn (ccv, old);\n+  else\n+    {\n+      rtx ccvtmp = gen_reg_rtx (DImode);\n+      emit_insn (gen_zero_extendsidi2 (ccvtmp, old));\n+      emit_move_insn (ccv, ccvtmp);\n+    }\n   emit_insn (gen_mf ());\n   if (mode == SImode)\n     insn = gen_cmpxchg_acq_si (tmp, mem, new, ccv);"}, {"sha": "f1e4f87e2372cd67a24fedaea3bd24a4d71ff5b4", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be565ad7dfb253836b579f666b230fd261a19913/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be565ad7dfb253836b579f666b230fd261a19913/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=be565ad7dfb253836b579f666b230fd261a19913", "patch": "@@ -5428,7 +5428,7 @@\n    (set (match_operand:SI 1 \"not_postinc_memory_operand\" \"+S\")\n         (unspec:SI [(match_dup 1)\n                     (match_operand:SI 2 \"gr_register_operand\" \"r\")\n-\t\t    (match_operand:SI 3 \"ar_ccv_reg_operand\" \"\")]\n+\t\t    (match_operand 3 \"ar_ccv_reg_operand\" \"\")]\n \t\t   UNSPEC_CMPXCHG_ACQ))]\n   \"\"\n   \"cmpxchg4.acq %0 = %1, %2, %3\""}, {"sha": "3dd2328c55332629246d56db5f59c1d81079e3d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be565ad7dfb253836b579f666b230fd261a19913/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be565ad7dfb253836b579f666b230fd261a19913/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be565ad7dfb253836b579f666b230fd261a19913", "patch": "@@ -1,3 +1,7 @@\n+2003-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/ia64-sync-3.c: New test.\n+\n 2003-03-26  Alan Modra  <amodra@bigpond.net.au>\n \n \t* gcc.dg/loop-2.c: Replace \"inline\" with \"__inline__\"."}, {"sha": "e718c1115e2928d341ab66d6a32397df943141cd", "filename": "gcc/testsuite/gcc.dg/ia64-sync-3.c", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be565ad7dfb253836b579f666b230fd261a19913/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be565ad7dfb253836b579f666b230fd261a19913/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c?ref=be565ad7dfb253836b579f666b230fd261a19913", "patch": "@@ -0,0 +1,74 @@\n+/* { dg-do run { target ia64-*-* } } */\n+/* { dg-options } */\n+\n+/* Test basic functionality of the intrinsics.  */\n+\n+#include <ia64intrin.h>\n+\n+static int AI[4];\n+static int init_si[4] = { -30,-30,-50,-50 };\n+static int test_si[4] = { -115,-115,25,25 };\n+\n+static void\n+do_si (void)\n+{\n+  if (__sync_val_compare_and_swap(AI+0, -30, -115) != -30)\n+    abort ();\n+  if (__sync_val_compare_and_swap(AI+0, -30, -115) != -115)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AI+1, -30, -115) != 1)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AI+1, -30, -115) != 0)\n+    abort ();\n+\n+  if (__sync_val_compare_and_swap(AI+2, AI[2], 25) != -50)\n+    abort ();\n+  if (__sync_val_compare_and_swap(AI+2, AI[2], 25) != 25)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AI+3, AI[3], 25) != 1)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AI+3, AI[3], 25) != 1)\n+    abort ();\n+}\n+\n+static long AL[4];\n+static long init_di[4] = { -30,-30,-50,-50 };\n+static long test_di[4] = { -115,-115,25,25 };\n+\n+static void\n+do_di (void)\n+{\n+  if (__sync_val_compare_and_swap(AL+0, -30, -115) != -30)\n+    abort ();\n+  if (__sync_val_compare_and_swap(AL+0, -30, -115) != -115)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AL+1, -30, -115) != 1)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AL+1, -30, -115) != 0)\n+    abort ();\n+\n+  if (__sync_val_compare_and_swap(AL+2, AL[2], 25) != -50)\n+    abort ();\n+  if (__sync_val_compare_and_swap(AL+2, AL[2], 25) != 25)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AL+3, AL[3], 25) != 1)\n+    abort ();\n+  if (__sync_bool_compare_and_swap(AL+3, AL[3], 25) != 1)\n+    abort ();\n+}\n+\n+int main()\n+{\n+  memcpy(AI, init_si, sizeof(init_si));\n+  memcpy(AL, init_di, sizeof(init_di));\n+\n+  do_si ();\n+  do_di ();\n+\n+  if (memcmp (AI, test_si, sizeof(test_si)))\n+    abort ();\n+  if (memcmp (AL, test_di, sizeof(test_di)))\n+    abort ();\n+\n+  return 0;\n+}"}]}