{"sha": "2b77e908124cefa480e1e3143c57b4fc3e353da0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI3N2U5MDgxMjRjZWZhNDgwZTFlMzE0M2M1N2I0ZmMzZTM1M2RhMA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-11-17T17:49:45Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-11-17T17:49:45Z"}, "message": "re PR fortran/25252 (ICE on invalid code)\n\n\tPR fortran/25252\n\n\t* interface.c (gfc_current_interface_head,\n\tgfc_set_current_interface_head): New functions.\n\t* decl.c (gfc_match_modproc): Move check for syntax error earlier.\n\tOn syntax error, restore previous state of the interface.\n\t* gfortran.h (gfc_current_interface_head,\n\tgfc_set_current_interface_head): New prototypes.\n\n\t* gfortran.dg/interface_22.f90: New test.\n\nFrom-SVN: r130259", "tree": {"sha": "267c805c4f889eb005138028072b31606dfc71d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/267c805c4f889eb005138028072b31606dfc71d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b77e908124cefa480e1e3143c57b4fc3e353da0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b77e908124cefa480e1e3143c57b4fc3e353da0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b77e908124cefa480e1e3143c57b4fc3e353da0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b77e908124cefa480e1e3143c57b4fc3e353da0/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0857153ddb27ba0f64a16c934734421fd2fccfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0857153ddb27ba0f64a16c934734421fd2fccfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0857153ddb27ba0f64a16c934734421fd2fccfc"}], "stats": {"total": 126, "additions": 123, "deletions": 3}, "files": [{"sha": "4ed0421e4dcf33aa9a14d502fcd4e19da1a20ebc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2b77e908124cefa480e1e3143c57b4fc3e353da0", "patch": "@@ -1,3 +1,13 @@\n+2007-11-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/25252\n+\t* interface.c (gfc_current_interface_head,\n+\tgfc_set_current_interface_head): New functions.\n+\t* decl.c (gfc_match_modproc): Move check for syntax error earlier.\n+\tOn syntax error, restore previous state of the interface.\n+\t* gfortran.h (gfc_current_interface_head,\n+\tgfc_set_current_interface_head): New prototypes.\n+\n 2007-11-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/30285"}, {"sha": "325d012e476f15474629f9fa0197b4cb2f201831", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=2b77e908124cefa480e1e3143c57b4fc3e353da0", "patch": "@@ -5837,6 +5837,7 @@ gfc_match_modproc (void)\n   gfc_symbol *sym;\n   match m;\n   gfc_namespace *module_ns;\n+  gfc_interface *old_interface_head, *interface;\n \n   if (gfc_state_stack->state != COMP_INTERFACE\n       || gfc_state_stack->previous == NULL\n@@ -5856,14 +5857,29 @@ gfc_match_modproc (void)\n   if (module_ns == NULL)\n     return MATCH_ERROR;\n \n+  /* Store the current state of the interface. We will need it if we\n+     end up with a syntax error and need to recover.  */\n+  old_interface_head = gfc_current_interface_head ();\n+\n   for (;;)\n     {\n+      bool last = false;\n+\n       m = gfc_match_name (name);\n       if (m == MATCH_NO)\n \tgoto syntax;\n       if (m != MATCH_YES)\n \treturn MATCH_ERROR;\n \n+      /* Check for syntax error before starting to add symbols to the\n+\t current namespace.  */\n+      if (gfc_match_eos () == MATCH_YES)\n+\tlast = true;\n+      if (!last && gfc_match_char (',') != MATCH_YES)\n+\tgoto syntax;\n+\n+      /* Now we're sure the syntax is valid, we process this item\n+\t further.  */\n       if (gfc_get_symbol (name, module_ns, &sym))\n \treturn MATCH_ERROR;\n \n@@ -5877,15 +5893,26 @@ gfc_match_modproc (void)\n \n       sym->attr.mod_proc = 1;\n \n-      if (gfc_match_eos () == MATCH_YES)\n+      if (last)\n \tbreak;\n-      if (gfc_match_char (',') != MATCH_YES)\n-\tgoto syntax;\n     }\n \n   return MATCH_YES;\n \n syntax:\n+  /* Restore the previous state of the interface.  */\n+  interface = gfc_current_interface_head ();\n+  gfc_set_current_interface_head (old_interface_head);\n+\n+  /* Free the new interfaces.  */\n+  while (interface != old_interface_head)\n+  {\n+    gfc_interface *i = interface->next;\n+    gfc_free (interface);\n+    interface = i;\n+  }\n+\n+  /* And issue a syntax error.  */\n   gfc_syntax_error (ST_MODULE_PROC);\n   return MATCH_ERROR;\n }"}, {"sha": "cc6ad98c0d6dc5c25cfb71114eccbc06210d5491", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=2b77e908124cefa480e1e3143c57b4fc3e353da0", "patch": "@@ -2308,6 +2308,8 @@ try gfc_extend_expr (gfc_expr *);\n void gfc_free_formal_arglist (gfc_formal_arglist *);\n try gfc_extend_assign (gfc_code *, gfc_namespace *);\n try gfc_add_interface (gfc_symbol *);\n+gfc_interface *gfc_current_interface_head (void);\n+void gfc_set_current_interface_head (gfc_interface *);\n \n /* io.c */\n extern gfc_st_label format_asterisk;"}, {"sha": "67a60f604b76cf7241bbb775599bf3fd8938bb2f", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=2b77e908124cefa480e1e3143c57b4fc3e353da0", "patch": "@@ -2707,6 +2707,52 @@ gfc_add_interface (gfc_symbol *new)\n }\n \n \n+gfc_interface *\n+gfc_current_interface_head (void)\n+{\n+  switch (current_interface.type)\n+    {\n+      case INTERFACE_INTRINSIC_OP:\n+\treturn current_interface.ns->operator[current_interface.op];\n+\tbreak;\n+\n+      case INTERFACE_GENERIC:\n+\treturn current_interface.sym->generic;\n+\tbreak;\n+\n+      case INTERFACE_USER_OP:\n+\treturn current_interface.uop->operator;\n+\tbreak;\n+\n+      default:\n+\tgcc_unreachable ();\n+    }\n+}\n+\n+\n+void\n+gfc_set_current_interface_head (gfc_interface *i)\n+{\n+  switch (current_interface.type)\n+    {\n+      case INTERFACE_INTRINSIC_OP:\n+\tcurrent_interface.ns->operator[current_interface.op] = i;\n+\tbreak;\n+\n+      case INTERFACE_GENERIC:\n+\tcurrent_interface.sym->generic = i;\n+\tbreak;\n+\n+      case INTERFACE_USER_OP:\n+\tcurrent_interface.uop->operator = i;\n+\tbreak;\n+\n+      default:\n+\tgcc_unreachable ();\n+    }\n+}\n+\n+\n /* Gets rid of a formal argument list.  We do not free symbols.\n    Symbols are freed when a namespace is freed.  */\n "}, {"sha": "8fce1223608fbc573c7147d46d15820c1eeae1e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b77e908124cefa480e1e3143c57b4fc3e353da0", "patch": "@@ -1,3 +1,13 @@\n+2007-11-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/25252\n+\t* interface.c (gfc_current_interface_head,\n+\tgfc_set_current_interface_head): New functions.\n+\t* decl.c (gfc_match_modproc): Move check for syntax error earlier.\n+\tOn syntax error, restore previous state of the interface.\n+\t* gfortran.h (gfc_current_interface_head,\n+\tgfc_set_current_interface_head): New prototypes.\n+\n 2007-11-17  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/34130"}, {"sha": "6228fc9f1336e81e923ce56a3306b8aebf02dcee", "filename": "gcc/testsuite/gfortran.dg/interface_22.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b77e908124cefa480e1e3143c57b4fc3e353da0/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_22.f90?ref=2b77e908124cefa480e1e3143c57b4fc3e353da0", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+!\n+! This is a check for error recovery: we used to ICE in various places, or\n+! emit bogus error messages (PR 25252)\n+!\n+module foo\n+  interface bar\n+    module procedure X, Y, ! { dg-error \"Syntax error in MODULE PROCEDURE statement\" }\n+  end interface bar\n+end module\n+\n+module g\n+  interface i\n+    module procedure sint => sreal ! { dg-error \"Syntax error in MODULE PROCEDURE statement\" }\n+  end interface i\n+end module g\n+\n+module gswap\n+  type points\n+    real :: x, y\n+  end type points\n+  interface swap\n+    module procedure sreal, schar, sint => sreal ! { dg-error \"Syntax error in MODULE PROCEDURE statement\" }\n+  end interface swap\n+end module gswap"}]}