{"sha": "baba70d019dcf4ce9cbd6544465b25154eaed5e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiYTcwZDAxOWRjZjRjZTljYmQ2NTQ0NDY1YjI1MTU0ZWFlZDVlMA==", "commit": {"author": {"name": "Fernando Nasser", "email": "fnasser@redhat.com", "date": "2003-12-23T19:24:00Z"}, "committer": {"name": "Fernando Nasser", "email": "fnasser@gcc.gnu.org", "date": "2003-12-23T19:24:00Z"}, "message": "GtkChoicePeer.java (postItemEvent): Rename to...\n\n2003-12-22  Fernando Nasser  <fnasser@redhat.com>\n\n        * gnu/java/awt/peer/gtk/GtkChoicePeer.java (postItemEvent): Rename to...        (choicePostItemEvent): Change signature to more specific String object.\n        * java/awt/Choice.java (add): Generate ItemEvent for the first item\n        added.\n        (insert): Generate ItemEvent if insertion caused\n        selection to change.\n        (remove): Generate ItemEvent if removal cause selection to change.\n        (removeAll): Change algorithm to prevent generation of ItemEvents.\n        * jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n        (connect_choice_item_selectable_hook): Change argument type.\n        Fix argument value.\n        Make sure resources are feed by registering callback.\n        (Java_gnu_java_awt_peer_gtk_GtkChoicePeer_append): Adjust call to the\n        above function.\n        (Java_gnu_java_awt_peer_gtk_GtkChoicePeer_add): Ditto.\n        (item_activate): Ditto.\n        (Java_gnu_java_awt_peer_gtk_GtkChoicePeer_remove): Destroy removed\n        menuitem.\n        (item_removed): New function.  Free resources.\n        * jni/gtk-peer/gtkpeer.h (item_event_hook_info): Change member type and\n        name.\n        * jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n        (Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit): Obtain MethodID for\n        choicePostItemEvent.\n\nFrom-SVN: r74979", "tree": {"sha": "29c9440c1526ef9518e40450118087067dad5e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29c9440c1526ef9518e40450118087067dad5e4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baba70d019dcf4ce9cbd6544465b25154eaed5e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baba70d019dcf4ce9cbd6544465b25154eaed5e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baba70d019dcf4ce9cbd6544465b25154eaed5e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baba70d019dcf4ce9cbd6544465b25154eaed5e0/comments", "author": {"login": "fnasser", "id": 326533, "node_id": "MDQ6VXNlcjMyNjUzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/326533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fnasser", "html_url": "https://github.com/fnasser", "followers_url": "https://api.github.com/users/fnasser/followers", "following_url": "https://api.github.com/users/fnasser/following{/other_user}", "gists_url": "https://api.github.com/users/fnasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/fnasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fnasser/subscriptions", "organizations_url": "https://api.github.com/users/fnasser/orgs", "repos_url": "https://api.github.com/users/fnasser/repos", "events_url": "https://api.github.com/users/fnasser/events{/privacy}", "received_events_url": "https://api.github.com/users/fnasser/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "459ac19fa525d64829e364d549814deb09854c2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459ac19fa525d64829e364d549814deb09854c2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/459ac19fa525d64829e364d549814deb09854c2a"}], "stats": {"total": 149, "additions": 120, "deletions": 29}, "files": [{"sha": "9b2294e4299bde96a58f9cfa6795abb5f270f556", "filename": "libjava/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=baba70d019dcf4ce9cbd6544465b25154eaed5e0", "patch": "@@ -1,3 +1,30 @@\n+2003-12-22  Fernando Nasser  <fnasser@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkChoicePeer.java (postItemEvent): Rename to...\n+\t(choicePostItemEvent): Change signature to more specific String object.\n+\t* java/awt/Choice.java (add): Generate ItemEvent for the first item\n+\tadded.\n+\t(insert): Generate ItemEvent if insertion caused\n+\tselection to change.\n+\t(remove): Generate ItemEvent if removal cause selection to change.\n+\t(removeAll): Change algorithm to prevent generation of ItemEvents.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c\n+\t(connect_choice_item_selectable_hook): Change argument type.\n+\tFix argument value.\n+\tMake sure resources are feed by registering callback.\n+\t(Java_gnu_java_awt_peer_gtk_GtkChoicePeer_append): Adjust call to the\n+\tabove function.\n+\t(Java_gnu_java_awt_peer_gtk_GtkChoicePeer_add): Ditto.\n+\t(item_activate): Ditto.\n+\t(Java_gnu_java_awt_peer_gtk_GtkChoicePeer_remove): Destroy removed\n+\tmenuitem.\n+\t(item_removed): New function.  Free resources.\n+\t* jni/gtk-peer/gtkpeer.h (item_event_hook_info): Change member type and\n+\tname.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c\n+\t(Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit): Obtain MethodID for\n+\tchoicePostItemEvent.\n+\n 2003-12-23  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/print/attribute/standard/Copies.java,"}, {"sha": "7e5579b3bc71c48c641df25114113ad1c2a6cb63", "filename": "libjava/gnu/java/awt/peer/gtk/GtkChoicePeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java?ref=baba70d019dcf4ce9cbd6544465b25154eaed5e0", "patch": "@@ -84,10 +84,10 @@ public void handleEvent (AWTEvent event)\n   }\n   */\n \n-  protected void postItemEvent (Object item, int stateChange)\n+  protected void choicePostItemEvent (String label, int stateChange)\n   {\n     if (stateChange == ItemEvent.SELECTED)\n-      ((Choice) awtComponent).select ((String) item);\n-    super.postItemEvent (item, stateChange);\n+      ((Choice) awtComponent).select (label);\n+    super.postItemEvent (label, stateChange);\n   }\n }"}, {"sha": "863888c5b37c6f5fbffe38956344335192539f65", "filename": "libjava/java/awt/Choice.java", "status": "modified", "additions": 45, "deletions": 5, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fjava%2Fawt%2FChoice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fjava%2Fawt%2FChoice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FChoice.java?ref=baba70d019dcf4ce9cbd6544465b25154eaed5e0", "patch": "@@ -171,7 +171,15 @@ public Choice()\n     }\n \n   if (i == 0)\n-    select (0);\n+  {\n+    selectedIndex = 0;\n+    // We must generate an ItemEvent here\n+    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent (\n+      new ItemEvent ((ItemSelectable)this, \n+                     ItemEvent.ITEM_STATE_CHANGED,\n+                     getItem(0),\n+                     ItemEvent.SELECTED));\n+  }\n }\n \n /*************************************************************************/\n@@ -223,7 +231,15 @@ public Choice()\n     }\n \n   if (getItemCount () == 1 || selectedIndex >= index)\n+  {\n     select (0);\n+    // We must generate an ItemEvent here\n+    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent (\n+      new ItemEvent ((ItemSelectable)this, \n+                     ItemEvent.ITEM_STATE_CHANGED,\n+                     getItem(0),\n+                     ItemEvent.SELECTED));\n+  }\n }\n \n /*************************************************************************/\n@@ -265,8 +281,16 @@ public Choice()\n       cp.remove (index);\n     }\n \n-  if (index == selectedIndex)\n+  if ((index == selectedIndex) && (getItemCount() > 0))\n+  {\n     select (0);\n+    // We must generate an ItemEvent here\n+    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent (\n+      new ItemEvent ((ItemSelectable)this, \n+                     ItemEvent.ITEM_STATE_CHANGED,\n+                     getItem(0),\n+                     ItemEvent.SELECTED));\n+  }\n   else if (selectedIndex > index)\n     --selectedIndex;\n }\n@@ -281,11 +305,27 @@ else if (selectedIndex > index)\n {\n   int count = getItemCount();\n \n-  for (int i = 0; i < count; i++)\n+  if (count <= 0)\n+    return;\n+  \n+  ChoicePeer cp = (ChoicePeer) peer;\n+\n+  // Select the first item to prevent an spurious ItemEvent to be generated\n+  if (cp != null)\n+    {\n+      cp.select (0);\n+      selectedIndex = 0; // Just to keep consistent\n+    }\n+\n+  for (int i = (count - 1); i >= 0; i--)\n     {\n-      // Always remove 0.\n-      remove(0);\n+      // Always remove the last to avoid generation of ItemEvents.\n+      pItems.removeElementAt(i);\n+      if (cp != null)\n+        cp.remove (i);\n     }\n+\n+  selectedIndex = -1;\n }\n \n /*************************************************************************/"}, {"sha": "068cf1e42549fce9a9c893a50d66c66fcc90f935", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.c", "status": "modified", "additions": 36, "deletions": 19, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.c?ref=baba70d019dcf4ce9cbd6544465b25154eaed5e0", "patch": "@@ -41,8 +41,9 @@ exception statement from your version. */\n \n static void connect_choice_item_selectable_hook (JNIEnv *env, \n \t\t\t\t\t\t jobject peer_obj, \n-\t\t\t\t\t\t GtkItem *item, \n-\t\t\t\t\t\t jobject item_obj);\n+\t\t\t\t\t\t GtkItem *menuitem, \n+\t\t\t\t\t\t const char *label);\n+\n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkChoicePeer_create \n   (JNIEnv *env, jobject obj)\n@@ -101,14 +102,13 @@ Java_gnu_java_awt_peer_gtk_GtkChoicePeer_append\n       label = (*env)->GetStringUTFChars (env, item, NULL);\n \n       menuitem = gtk_menu_item_new_with_label (label);\n-\n-      (*env)->ReleaseStringUTFChars (env, item, label);\n-\n       gtk_menu_append (menu, menuitem);\n       gtk_widget_show (menuitem);\n \n       connect_choice_item_selectable_hook (env, obj, \n-\t\t\t\t\t   GTK_ITEM (menuitem), item);\n+\t\t\t\t\t   GTK_ITEM (menuitem), label);\n+\n+      (*env)->ReleaseStringUTFChars (env, item, label);\n     }\n   \n   if (need_set_history)\n@@ -139,7 +139,8 @@ Java_gnu_java_awt_peer_gtk_GtkChoicePeer_add\n   menuitem = gtk_menu_item_new_with_label (label);\n   gtk_menu_insert (GTK_MENU (menu), menuitem, index);\n   gtk_widget_show (menuitem);\n-  connect_choice_item_selectable_hook (env, obj, GTK_ITEM (menuitem), item);\n+\n+  connect_choice_item_selectable_hook (env, obj, GTK_ITEM (menuitem), label);\n \n   if (need_set_history)\n     gtk_option_menu_set_history (GTK_OPTION_MENU (ptr), 0);\n@@ -155,14 +156,19 @@ Java_gnu_java_awt_peer_gtk_GtkChoicePeer_remove\n {\n   void *ptr;\n   GtkContainer *menu;\n+  GtkWidget *menuitem;\n   GList *children;\n \n   ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n+\n   menu = GTK_CONTAINER (gtk_option_menu_get_menu (GTK_OPTION_MENU (ptr)));\n   children = gtk_container_children (menu);\n-  gtk_container_remove (menu, GTK_WIDGET (g_list_nth (children, index)->data));\n+  menuitem = GTK_WIDGET (g_list_nth (children, index)->data);\n+  gtk_container_remove (menu, menuitem);\n+  gtk_widget_destroy (menuitem);\n+\n   gdk_threads_leave ();\n }\n \n@@ -179,38 +185,49 @@ Java_gnu_java_awt_peer_gtk_GtkChoicePeer_select\n   gdk_threads_leave ();\n }\n \n-\n static void\n item_activate (GtkItem *item __attribute__((unused)),\n \t       struct item_event_hook_info *ie)\n {\n   gdk_threads_leave ();\n+\n+  jstring label = (*gdk_env)->NewStringUTF (gdk_env, ie->label);\n   (*gdk_env)->CallVoidMethod (gdk_env, ie->peer_obj,\n-\t\t\t      postItemEventID,\n-\t\t\t      ie->item_obj,\n+\t\t\t      choicePostItemEventID,\n+\t\t\t      label,\n \t\t\t      (jint) AWT_ITEM_SELECTED);\n   gdk_threads_enter ();\n }\n \n static void\n-connect_choice_item_selectable_hook (JNIEnv *env, jobject peer_obj, \n-\t\t\t\t     GtkItem *item, jobject item_obj)\n+item_removed (gpointer data, \n+\t      GClosure gc __attribute__((unused)))\n+{\n+  struct item_event_hook_info *ie = data;\n+\n+  free (ie->label);\n+  free (ie);\n+}\n+\n+static void\n+connect_choice_item_selectable_hook (JNIEnv *env, \n+\t\t\t\t     jobject peer_obj, \n+\t\t\t\t     GtkItem *menuitem, \n+\t\t\t\t     const char *label)\n {\n   struct item_event_hook_info *ie;\n   jobject *peer_objGlobPtr;\n-  jobject *item_objGlobPtr;\n \n   ie = (struct item_event_hook_info *) \n     malloc (sizeof (struct item_event_hook_info));\n \n   peer_objGlobPtr = NSA_GET_GLOBAL_REF (env, peer_obj);\n   g_assert (peer_objGlobPtr);\n-  item_objGlobPtr = NSA_GET_GLOBAL_REF (env, item_obj);\n-  g_assert (item_objGlobPtr);\n \n   ie->peer_obj = *peer_objGlobPtr;\n-  ie->item_obj = *item_objGlobPtr;\n+  ie->label = strdup (label);\n \n-  g_signal_connect (G_OBJECT (item), \"activate\", \n-\t\t      GTK_SIGNAL_FUNC (item_activate), ie);\n+  g_signal_connect_data (G_OBJECT (menuitem), \"activate\", \n+\t\t      GTK_SIGNAL_FUNC (item_activate), ie,\n+\t\t      (GClosureNotify) item_removed, 0);\n }"}, {"sha": "bad4a5168844cb8727f5adc7bc9c228f9cd2806a", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=baba70d019dcf4ce9cbd6544465b25154eaed5e0", "patch": "@@ -56,6 +56,7 @@ jmethodID postKeyEventID;\n jmethodID postFocusEventID;\n jmethodID postAdjustmentEventID;\n jmethodID postItemEventID;\n+jmethodID choicePostItemEventID;\n jmethodID postListItemEventID;\n jmethodID postTextEventID;\n jmethodID postWindowEventID;\n@@ -80,7 +81,7 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n   char **argv;\n   char *homedir, *rcpath = NULL;\n /*    jclass gtkgenericpeer; */\n-  jclass gtkcomponentpeer, gtkwindowpeer, gtkscrollbarpeer, gtklistpeer,\n+  jclass gtkcomponentpeer, gtkchoicepeer, gtkwindowpeer, gtkscrollbarpeer, gtklistpeer,\n     gtkmenuitempeer, gtktextcomponentpeer, window;\n \n   NSA_INIT (env, clazz);\n@@ -139,6 +140,8 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n \n   gtkcomponentpeer = (*env)->FindClass (env,\n \t\t\t\t     \"gnu/java/awt/peer/gtk/GtkComponentPeer\");\n+  gtkchoicepeer = (*env)->FindClass (env,\n+\t\t\t\t     \"gnu/java/awt/peer/gtk/GtkChoicePeer\");\n   gtkwindowpeer = (*env)->FindClass (env,\n \t\t\t\t     \"gnu/java/awt/peer/gtk/GtkWindowPeer\");\n   gtkscrollbarpeer = (*env)->FindClass (env, \n@@ -181,6 +184,9 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n   postItemEventID = (*env)->GetMethodID (env, gtkcomponentpeer,\n \t\t\t\t\t \"postItemEvent\", \n \t\t\t\t\t \"(Ljava/lang/Object;I)V\");\n+  choicePostItemEventID = (*env)->GetMethodID (env, gtkchoicepeer,\n+\t\t\t\t\t \"choicePostItemEvent\", \n+\t\t\t\t\t \"(Ljava/lang/String;I)V\");\n   postListItemEventID = (*env)->GetMethodID (env, gtklistpeer,\n \t\t\t\t\t     \"postItemEvent\",\n \t\t\t\t\t     \"(II)V\");"}, {"sha": "d552e687c9b1efc765bf87e48bb4a2b8a609dfa5", "filename": "libjava/jni/gtk-peer/gtkpeer.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baba70d019dcf4ce9cbd6544465b25154eaed5e0/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h?ref=baba70d019dcf4ce9cbd6544465b25154eaed5e0", "patch": "@@ -395,6 +395,7 @@ extern jmethodID postExposeEventID;\n extern jmethodID postKeyEventID;\n extern jmethodID postFocusEventID;\n extern jmethodID postAdjustmentEventID;\n+extern jmethodID choicePostItemEventID;\n extern jmethodID postItemEventID;\n extern jmethodID postListItemEventID;\n extern jmethodID postTextEventID;\n@@ -424,7 +425,7 @@ jint keyevent_state_to_awt_mods (GdkEvent *event);\n struct item_event_hook_info\n {\n   jobject peer_obj;\n-  jobject item_obj;\n+  const char *label;\n };\n \n #endif /* __GTKPEER_H */"}]}