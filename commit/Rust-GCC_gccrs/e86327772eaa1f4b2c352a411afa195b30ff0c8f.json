{"sha": "e86327772eaa1f4b2c352a411afa195b30ff0c8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg2MzI3NzcyZWFhMWY0YjJjMzUyYTQxMWFmYTE5NWIzMGZmMGM4Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-04-01T23:14:55Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-04-01T23:14:55Z"}, "message": "re PR c++/14803 (Spurious warnings on conversion of pointers to member functions)\n\n\tPR c++/14803\n\t* typeck.c (get_delta_difference): Call fold before returning the\n\tvalue.\n\n\tPR c++/14803\n\t* g++.dg/inherit/ptrmem1.C: New test.\n\nFrom-SVN: r80331", "tree": {"sha": "791f1d30b9cc0f6bac96afe52db612b56b08118a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/791f1d30b9cc0f6bac96afe52db612b56b08118a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e86327772eaa1f4b2c352a411afa195b30ff0c8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e86327772eaa1f4b2c352a411afa195b30ff0c8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e86327772eaa1f4b2c352a411afa195b30ff0c8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e86327772eaa1f4b2c352a411afa195b30ff0c8f/comments", "author": null, "committer": null, "parents": [{"sha": "717415adaf2c79665b540000ca3203abaddc7629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717415adaf2c79665b540000ca3203abaddc7629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717415adaf2c79665b540000ca3203abaddc7629"}], "stats": {"total": 100, "additions": 67, "deletions": 33}, "files": [{"sha": "ef950ff5425facecc22ea86668ce383e73f8c7f4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e86327772eaa1f4b2c352a411afa195b30ff0c8f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e86327772eaa1f4b2c352a411afa195b30ff0c8f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e86327772eaa1f4b2c352a411afa195b30ff0c8f", "patch": "@@ -1,3 +1,9 @@\n+2004-04-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14803\n+\t* typeck.c (get_delta_difference): Call fold before returning the\n+\tvalue.\n+\n 2004-04-01  Richard Henderson  <rth@redhat.com>\n \n \tPR c++/14804"}, {"sha": "5544f2259d6b2f0d00375cc40dc5aede36a5e5e5", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 35, "deletions": 33, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e86327772eaa1f4b2c352a411afa195b30ff0c8f/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e86327772eaa1f4b2c352a411afa195b30ff0c8f/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e86327772eaa1f4b2c352a411afa195b30ff0c8f", "patch": "@@ -5273,51 +5273,53 @@ get_delta_difference (tree from, tree to, int force)\n   tree binfo;\n   tree virt_binfo;\n   base_kind kind;\n-  \n+  tree result;\n+\n+  /* Assume no conversion is required.  */\n+  result = integer_zero_node;\n   binfo = lookup_base (to, from, ba_check, &kind);\n   if (kind == bk_inaccessible || kind == bk_ambig)\n-    {\n-      error (\"   in pointer to member function conversion\");\n-      goto error;\n-    }\n-  if (!binfo)\n+    error (\"   in pointer to member function conversion\");\n+  else if (!binfo)\n     {\n       if (!force)\n \t{\n \t  error_not_base_type (from, to);\n \t  error (\"   in pointer to member conversion\");\n-\t  goto error;\n \t}\n-      binfo = lookup_base (from, to, ba_check, &kind);\n-      if (!binfo)\n-\tgoto error;\n+      else\n+\t{\n+\t  binfo = lookup_base (from, to, ba_check, &kind);\n+\t  if (binfo)\n+\t    {\n+\t      virt_binfo = binfo_from_vbase (binfo);\n+\t      if (virt_binfo)\n+\t\t/* This is a reinterpret cast, we choose to do nothing.  */\n+\t\twarning (\"pointer to member cast via virtual base `%T'\",\n+\t\t\t BINFO_TYPE (virt_binfo));\n+\t      else\n+\t\tresult = size_diffop (size_zero_node, BINFO_OFFSET (binfo));\n+\t    }\n+\t}\n+    }\n+  else\n+    {\n       virt_binfo = binfo_from_vbase (binfo);\n-      if (virt_binfo)\n-        {\n-          /* This is a reinterpret cast, we choose to do nothing.  */\n-          warning (\"pointer to member cast via virtual base `%T'\",\n+      if (!virt_binfo)\n+\tresult = BINFO_OFFSET (binfo);\n+      else\n+\t{\n+\t  /* This is a reinterpret cast, we choose to do nothing.  */\n+\t  if (force)\n+\t    warning (\"pointer to member cast via virtual base `%T'\",\n+\t\t     BINFO_TYPE (virt_binfo));\n+\t  else\n+\t    error (\"pointer to member conversion via virtual base `%T'\",\n \t\t   BINFO_TYPE (virt_binfo));\n-\t  goto error;\n-        }\n-      return convert_to_integer (ptrdiff_type_node, \n-\t\t\t\t size_diffop (size_zero_node,\n-\t\t\t\t\t      BINFO_OFFSET (binfo)));\n+\t}\n     }\n \n-  virt_binfo = binfo_from_vbase (binfo);\n-  if (!virt_binfo)\n-    return convert_to_integer (ptrdiff_type_node, BINFO_OFFSET (binfo));\n-\n-  /* This is a reinterpret cast, we choose to do nothing.  */\n-  if (force)\n-    warning (\"pointer to member cast via virtual base `%T'\",\n-\t     BINFO_TYPE (virt_binfo));\n-  else\n-    error (\"pointer to member conversion via virtual base `%T'\",\n-\t   BINFO_TYPE (virt_binfo));\n-\n- error:\n-  return convert_to_integer(ptrdiff_type_node, integer_zero_node);\n+  return fold (convert_to_integer (ptrdiff_type_node, result));\n }\n \n /* Return a constructor for the pointer-to-member-function TYPE using"}, {"sha": "41d311a386062001d550b672f79ad44c0c6c476e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e86327772eaa1f4b2c352a411afa195b30ff0c8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e86327772eaa1f4b2c352a411afa195b30ff0c8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e86327772eaa1f4b2c352a411afa195b30ff0c8f", "patch": "@@ -1,3 +1,8 @@\n+2004-04-01  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14803\n+\t* g++.dg/inherit/ptrmem1.C: New test.\n+\n 2004-04-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/14755"}, {"sha": "375efc811f6745b5fac5a3697f86cd436c156095", "filename": "gcc/testsuite/g++.dg/inherit/ptrmem1.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e86327772eaa1f4b2c352a411afa195b30ff0c8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fptrmem1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e86327772eaa1f4b2c352a411afa195b30ff0c8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fptrmem1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fptrmem1.C?ref=e86327772eaa1f4b2c352a411afa195b30ff0c8f", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/14803\n+// { dg-options \"-Werror\" }\n+\n+struct sc_module { int member; };\n+\n+struct sc_signal_in_if { bool state; };\n+\n+typedef void (sc_module::*SC_ENTRY_FUNC)();\n+\n+class sc_clock : public sc_signal_in_if, public sc_module\n+{\n+public:\n+  sc_clock();\n+  void posedge_action();\n+  SC_ENTRY_FUNC fptr;\n+};\n+\n+sc_clock::sc_clock()\n+{\n+  fptr = static_cast<SC_ENTRY_FUNC>(&sc_clock::posedge_action);\n+}"}]}