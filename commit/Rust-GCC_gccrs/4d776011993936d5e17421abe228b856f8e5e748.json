{"sha": "4d776011993936d5e17421abe228b856f8e5e748", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ3NzYwMTE5OTM5MzZkNWUxNzQyMWFiZTIyOGI4NTZmOGU1ZTc0OA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2015-11-23T14:23:59Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2015-11-23T14:23:59Z"}, "message": "Correct graphite*.c ISL header file inclusion order.\n\n* system.h: Don't poison calloc and strdup if USES_ISL is defined.\n* graphite-dependences.c: Define USES_ISL.  Include ISL header files\nafter GCC header files and before graphite header files.\n* graphite-dependences.c: Same.\n* graphite-isl-ast-to-gimple.c: Same.\n* graphite-optimize-isl.c: Same.\n* graphite-poly.c: Same.\n* graphite-scop-detection.c: Same.\n* graphite-sese-to-poly.c: Same.\n* graphite.c: Same.\n\nFrom-SVN: r230759", "tree": {"sha": "8b552b61a1b1ac6b4ce298f12409fda5177e3c16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b552b61a1b1ac6b4ce298f12409fda5177e3c16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d776011993936d5e17421abe228b856f8e5e748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d776011993936d5e17421abe228b856f8e5e748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d776011993936d5e17421abe228b856f8e5e748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d776011993936d5e17421abe228b856f8e5e748/comments", "author": null, "committer": null, "parents": [{"sha": "546e500c8f90f9adf4187d07f8e6d33d82194f3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/546e500c8f90f9adf4187d07f8e6d33d82194f3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/546e500c8f90f9adf4187d07f8e6d33d82194f3c"}], "stats": {"total": 208, "additions": 107, "deletions": 101}, "files": [{"sha": "3f4e5ea8fe6f37a9507ebb193abc722c073fd4fa", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=4d776011993936d5e17421abe228b856f8e5e748", "patch": "@@ -19,18 +19,11 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#define USES_ISL\n+\n #include \"config.h\"\n \n #ifdef HAVE_isl\n-/* Workaround for GMP 5.1.3 bug, see PR56019.  */\n-#include <stddef.h>\n-\n-#include <isl/constraint.h>\n-#include <isl/set.h>\n-#include <isl/map.h>\n-#include <isl/union_map.h>\n-#include <isl/flow.h>\n-#include <isl/constraint.h>\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -44,6 +37,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n+\n+#include <isl/constraint.h>\n+#include <isl/set.h>\n+#include <isl/map.h>\n+#include <isl/union_map.h>\n+#include <isl/flow.h>\n+#include <isl/constraint.h>\n+\n #include \"graphite-poly.h\"\n \n "}, {"sha": "b13aa128a1eef7afa77d725bbda15b64a717b5ce", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=4d776011993936d5e17421abe228b856f8e5e748", "patch": "@@ -18,27 +18,11 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#define USES_ISL\n+\n #include \"config.h\"\n \n #ifdef HAVE_isl\n-/* Workaround for GMP 5.1.3 bug, see PR56019.  */\n-#include <stddef.h>\n-\n-#include <isl/constraint.h>\n-#include <isl/set.h>\n-#include <isl/union_set.h>\n-#include <isl/map.h>\n-#include <isl/union_map.h>\n-#include <isl/ast_build.h>\n-\n-/* Since ISL-0.13, the extern is in val_gmp.h.  */\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-extern \"C\" {\n-#endif\n-#include <isl/val_gmp.h>\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-}\n-#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -59,19 +43,36 @@ extern \"C\" {\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n-#include \"graphite-poly.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"gimple-ssa.h\"\n #include \"tree-phinodes.h\"\n #include \"tree-into-ssa.h\"\n #include \"ssa-iterators.h\"\n-#include \"graphite-isl-ast-to-gimple.h\"\n #include \"tree-cfg.h\"\n #include \"gimple-pretty-print.h\"\n #include \"cfganal.h\"\n #include \"value-prof.h\"\n \n+#include <isl/constraint.h>\n+#include <isl/set.h>\n+#include <isl/union_set.h>\n+#include <isl/map.h>\n+#include <isl/union_map.h>\n+#include <isl/ast_build.h>\n+\n+/* Since ISL-0.13, the extern is in val_gmp.h.  */\n+#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n+extern \"C\" {\n+#endif\n+#include <isl/val_gmp.h>\n+#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n+}\n+#endif\n+\n+#include \"graphite-poly.h\"\n+#include \"graphite-isl-ast-to-gimple.h\"\n+\n #include <map>\n \n /* We always try to use signed 128 bit types, but fall back to smaller types"}, {"sha": "6ae224fd53a835c47e26f80fa76c21472183ded5", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=4d776011993936d5e17421abe228b856f8e5e748", "patch": "@@ -18,11 +18,25 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#define USES_ISL\n+\n #include \"config.h\"\n \n #ifdef HAVE_isl\n-/* Workaround for GMP 5.1.3 bug, see PR56019.  */\n-#include <stddef.h>\n+\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"backend.h\"\n+#include \"cfghooks.h\"\n+#include \"tree.h\"\n+#include \"gimple.h\"\n+#include \"fold-const.h\"\n+#include \"gimple-iterator.h\"\n+#include \"tree-ssa-loop.h\"\n+#include \"cfgloop.h\"\n+#include \"tree-data-ref.h\"\n+#include \"params.h\"\n+#include \"dumpfile.h\"\n \n #include <isl/constraint.h>\n #include <isl/set.h>\n@@ -38,20 +52,7 @@ along with GCC; see the file COPYING3.  If not see\n #include <isl/schedule_node.h>\n #endif\n \n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"backend.h\"\n-#include \"cfghooks.h\"\n-#include \"tree.h\"\n-#include \"gimple.h\"\n-#include \"fold-const.h\"\n-#include \"gimple-iterator.h\"\n-#include \"tree-ssa-loop.h\"\n-#include \"cfgloop.h\"\n-#include \"tree-data-ref.h\"\n #include \"graphite-poly.h\"\n-#include \"params.h\"\n-#include \"dumpfile.h\"\n \n #ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n "}, {"sha": "9137cc43b34caa03998229e01af4de967af7d30d", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=4d776011993936d5e17421abe228b856f8e5e748", "patch": "@@ -19,11 +19,25 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#define USES_ISL\n+\n #include \"config.h\"\n \n #ifdef HAVE_isl\n-/* Workaround for GMP 5.1.3 bug, see PR56019.  */\n-#include <stddef.h>\n+\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"backend.h\"\n+#include \"tree.h\"\n+#include \"gimple.h\"\n+#include \"cfghooks.h\"\n+#include \"gimple-pretty-print.h\"\n+#include \"diagnostic-core.h\"\n+#include \"fold-const.h\"\n+#include \"gimple-iterator.h\"\n+#include \"tree-ssa-loop.h\"\n+#include \"cfgloop.h\"\n+#include \"tree-data-ref.h\"\n \n #include <isl/constraint.h>\n #include <isl/set.h>\n@@ -43,19 +57,6 @@ extern \"C\" {\n }\n #endif\n \n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"backend.h\"\n-#include \"tree.h\"\n-#include \"gimple.h\"\n-#include \"cfghooks.h\"\n-#include \"gimple-pretty-print.h\"\n-#include \"diagnostic-core.h\"\n-#include \"fold-const.h\"\n-#include \"gimple-iterator.h\"\n-#include \"tree-ssa-loop.h\"\n-#include \"cfgloop.h\"\n-#include \"tree-data-ref.h\"\n #include \"graphite-poly.h\"\n \n #define OPENSCOP_MAX_STRING 256"}, {"sha": "60bb0499f081dfebb84a2cc61b2555f292b304ad", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=4d776011993936d5e17421abe228b856f8e5e748", "patch": "@@ -19,16 +19,11 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#define USES_ISL\n+\n #include \"config.h\"\n \n #ifdef HAVE_isl\n-/* Workaround for GMP 5.1.3 bug, see PR56019.  */\n-#include <stddef.h>\n-\n-#include <isl/constraint.h>\n-#include <isl/set.h>\n-#include <isl/map.h>\n-#include <isl/union_map.h>\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -51,11 +46,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-pass.h\"\n-#include \"graphite-poly.h\"\n #include \"tree-ssa-propagate.h\"\n-#include \"graphite-scop-detection.h\"\n #include \"gimple-pretty-print.h\"\n \n+#include <isl/constraint.h>\n+#include <isl/set.h>\n+#include <isl/map.h>\n+#include <isl/union_map.h>\n+\n+#include \"graphite-poly.h\"\n+#include \"graphite-scop-detection.h\"\n+\n class debug_printer\n {\n private:"}, {"sha": "34aa4763c41a3fad2c46fc566e11a41d7811f037", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=4d776011993936d5e17421abe228b856f8e5e748", "patch": "@@ -18,28 +18,11 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+#define USES_ISL\n+\n #include \"config.h\"\n \n #ifdef HAVE_isl\n-/* Workaround for GMP 5.1.3 bug, see PR56019.  */\n-#include <stddef.h>\n-\n-#include <isl/constraint.h>\n-#include <isl/set.h>\n-#include <isl/map.h>\n-#include <isl/union_map.h>\n-#include <isl/constraint.h>\n-#include <isl/aff.h>\n-#include <isl/val.h>\n-\n-/* Since ISL-0.13, the extern is in val_gmp.h.  */\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-extern \"C\" {\n-#endif\n-#include <isl/val_gmp.h>\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-}\n-#endif\n \n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -63,8 +46,26 @@ extern \"C\" {\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"domwalk.h\"\n-#include \"graphite-poly.h\"\n #include \"tree-ssa-propagate.h\"\n+\n+#include <isl/constraint.h>\n+#include <isl/set.h>\n+#include <isl/map.h>\n+#include <isl/union_map.h>\n+#include <isl/constraint.h>\n+#include <isl/aff.h>\n+#include <isl/val.h>\n+\n+/* Since ISL-0.13, the extern is in val_gmp.h.  */\n+#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n+extern \"C\" {\n+#endif\n+#include <isl/val_gmp.h>\n+#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n+}\n+#endif\n+\n+#include \"graphite-poly.h\"\n #include \"graphite-sese-to-poly.h\"\n \n /* Assigns to RES the value of the INTEGER_CST T.  */"}, {"sha": "c2efdc959257fd925eb214df9b4d07d3a7238aa4", "filename": "gcc/graphite.c", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=4d776011993936d5e17421abe228b856f8e5e748", "patch": "@@ -27,19 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n    The wiki page http://gcc.gnu.org/wiki/Graphite contains pointers to\n    the related work.  */\n \n-#include \"config.h\"\n-\n-#ifdef HAVE_isl\n-/* Workaround for GMP 5.1.3 bug, see PR56019.  */\n-#include <stddef.h>\n-\n-#include <isl/constraint.h>\n-#include <isl/set.h>\n-#include <isl/map.h>\n-#include <isl/options.h>\n-#include <isl/union_map.h>\n-#endif\n+#define USES_ISL\n \n+#include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"backend.h\"\n@@ -59,10 +49,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"graphite-poly.h\"\n #include \"dbgcnt.h\"\n #include \"tree-parloops.h\"\n #include \"tree-cfgcleanup.h\"\n+\n+#include <isl/constraint.h>\n+#include <isl/set.h>\n+#include <isl/map.h>\n+#include <isl/options.h>\n+#include <isl/union_map.h>\n+\n+#include \"graphite-poly.h\"\n #include \"graphite-scop-detection.h\"\n #include \"graphite-isl-ast-to-gimple.h\"\n #include \"graphite-sese-to-poly.h\""}, {"sha": "498596f7fefbd9ae1639ac1697ebbe881174a89b", "filename": "gcc/system.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d776011993936d5e17421abe228b856f8e5e748/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=4d776011993936d5e17421abe228b856f8e5e748", "patch": "@@ -798,9 +798,12 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n    compiling gcc, so that the autoconf declaration tests for malloc\n    etc don't spuriously fail.  */\n #ifdef IN_GCC\n+\n+#ifndef USES_ISL\n #undef calloc\n #undef strdup\n  #pragma GCC poison calloc strdup\n+#endif\n \n #if !defined(FLEX_SCANNER) && !defined(YYBISON)\n #undef malloc"}]}