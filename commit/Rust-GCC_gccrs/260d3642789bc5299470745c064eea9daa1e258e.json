{"sha": "260d3642789bc5299470745c064eea9daa1e258e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYwZDM2NDI3ODliYzUyOTk0NzA3NDVjMDY0ZWVhOWRhYTFlMjU4ZQ==", "commit": {"author": {"name": "Ilya Tocar", "email": "ilya.tocar@intel.com", "date": "2014-02-26T09:08:45Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-02-26T09:08:45Z"}, "message": "gcc/\n\t* config/i386/avx512fintrin.h (_mm512_testn_epi32_mask),\n\t(_mm512_mask_testn_epi32_mask), (_mm512_testn_epi64_mask),\n\t(_mm512_mask_testn_epi64_mask): Move to ...\n\t* config/i386/avx512cdintrin.h: Here.\n\t* config/i386/i386.c (bdesc_args): Change MASK_ISA for testnm.\n\t* config/i386/sse.md (avx512f_vmscalef<mode><round_name>): Remove %.\n\t(avx512f_scalef<mode><mask_name><round_name>): Ditto.\n\t(avx512f_testnm<mode>3<mask_scalar_merge_name>): Change conditon to\n\tTARGET_AVX512F from TARGET_AVX512CD.\n\ngcc/testsuite/\n\t* gcc.target/i386/avx512cd-vptestnmd-1.c: Change into ...\n\t* gcc.target/i386/avx512f-vptestnmd-1.c: This.\n\t* gcc.target/i386/avx512cd-vptestnmq-1.c: Change into ...\n\t* gcc.target/i386/avx512f-vptestnmq-1.c: This.\n\t* gcc.target/i386/avx512cd-vptestnmd-2.c: Change into ...\n\t* gcc.target/i386/avx512f-vptestnmd-2.c: This.\n\t* gcc.target/i386/avx512cd-vptestnmq-2.c: Change into ...\n\t* gcc.target/i386/avx512f-vptestnmq-2.c: This.\n\nFrom-SVN: r208168", "tree": {"sha": "b6810a2e9d8d1c1a3027cbc1e1fa4e34e9a457ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6810a2e9d8d1c1a3027cbc1e1fa4e34e9a457ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/260d3642789bc5299470745c064eea9daa1e258e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260d3642789bc5299470745c064eea9daa1e258e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/260d3642789bc5299470745c064eea9daa1e258e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/260d3642789bc5299470745c064eea9daa1e258e/comments", "author": {"login": "TocarIP", "id": 16836375, "node_id": "MDQ6VXNlcjE2ODM2Mzc1", "avatar_url": "https://avatars.githubusercontent.com/u/16836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TocarIP", "html_url": "https://github.com/TocarIP", "followers_url": "https://api.github.com/users/TocarIP/followers", "following_url": "https://api.github.com/users/TocarIP/following{/other_user}", "gists_url": "https://api.github.com/users/TocarIP/gists{/gist_id}", "starred_url": "https://api.github.com/users/TocarIP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TocarIP/subscriptions", "organizations_url": "https://api.github.com/users/TocarIP/orgs", "repos_url": "https://api.github.com/users/TocarIP/repos", "events_url": "https://api.github.com/users/TocarIP/events{/privacy}", "received_events_url": "https://api.github.com/users/TocarIP/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "477145c84a2732e69c2acc140e5c626f467b63a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/477145c84a2732e69c2acc140e5c626f467b63a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/477145c84a2732e69c2acc140e5c626f467b63a5"}], "stats": {"total": 123, "additions": 73, "deletions": 50}, "files": [{"sha": "3974f9c2d29e41de726e3143a8e47c8ec7fb61af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -1,3 +1,15 @@\n+2014-02-26  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* config/i386/avx512fintrin.h (_mm512_testn_epi32_mask),\n+\t(_mm512_mask_testn_epi32_mask), (_mm512_testn_epi64_mask),\n+\t(_mm512_mask_testn_epi64_mask): Move to ...\n+\t* config/i386/avx512cdintrin.h: Here.\n+\t* config/i386/i386.c (bdesc_args): Change MASK_ISA for testnm.\n+\t* config/i386/sse.md (avx512f_vmscalef<mode><round_name>): Remove %.\n+\t(avx512f_scalef<mode><mask_name><round_name>): Ditto.\n+\t(avx512f_testnm<mode>3<mask_scalar_merge_name>): Change conditon to\n+\tTARGET_AVX512F from TARGET_AVX512CD.\n+\n 2014-02-26  Richard Biener  <rguenther@suse.de>\n \n \tPR ipa/60327"}, {"sha": "a4939f7acfab46c9163dd8b2bf0842e4b804b1bb", "filename": "gcc/config/i386/avx512cdintrin.h", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Fconfig%2Fi386%2Favx512cdintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Fconfig%2Fi386%2Favx512cdintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512cdintrin.h?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -176,40 +176,6 @@ _mm512_broadcastmw_epi32 (__mmask16 __A)\n   return (__m512i) __builtin_ia32_broadcastmw512 (__A);\n }\n \n-extern __inline __mmask16\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_testn_epi32_mask (__m512i __A, __m512i __B)\n-{\n-  return (__mmask16) __builtin_ia32_ptestnmd512 ((__v16si) __A,\n-\t\t\t\t\t\t (__v16si) __B,\n-\t\t\t\t\t\t (__mmask16) -1);\n-}\n-\n-extern __inline __mmask16\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_mask_testn_epi32_mask (__mmask16 __U, __m512i __A, __m512i __B)\n-{\n-  return (__mmask16) __builtin_ia32_ptestnmd512 ((__v16si) __A,\n-\t\t\t\t\t\t (__v16si) __B, __U);\n-}\n-\n-extern __inline __mmask8\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_testn_epi64_mask (__m512i __A, __m512i __B)\n-{\n-  return (__mmask8) __builtin_ia32_ptestnmq512 ((__v8di) __A,\n-\t\t\t\t\t\t(__v8di) __B,\n-\t\t\t\t\t\t(__mmask8) -1);\n-}\n-\n-extern __inline __mmask8\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm512_mask_testn_epi64_mask (__mmask8 __U, __m512i __A, __m512i __B)\n-{\n-  return (__mmask8) __builtin_ia32_ptestnmq512 ((__v8di) __A,\n-\t\t\t\t\t\t(__v8di) __B, __U);\n-}\n-\n #ifdef __DISABLE_AVX512CD__\n #undef __DISABLE_AVX512CD__\n #pragma GCC pop_options"}, {"sha": "422e83b46f9b0689675c0a0f50a5aa55c3997f97", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -7149,6 +7149,40 @@ _mm512_mask_test_epi64_mask (__mmask8 __U, __m512i __A, __m512i __B)\n   return (__mmask8) __builtin_ia32_ptestmq512 ((__v8di) __A, (__v8di) __B, __U);\n }\n \n+extern __inline __mmask16\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_testn_epi32_mask (__m512i __A, __m512i __B)\n+{\n+  return (__mmask16) __builtin_ia32_ptestnmd512 ((__v16si) __A,\n+\t\t\t\t\t\t (__v16si) __B,\n+\t\t\t\t\t\t (__mmask16) -1);\n+}\n+\n+extern __inline __mmask16\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_mask_testn_epi32_mask (__mmask16 __U, __m512i __A, __m512i __B)\n+{\n+  return (__mmask16) __builtin_ia32_ptestnmd512 ((__v16si) __A,\n+\t\t\t\t\t\t (__v16si) __B, __U);\n+}\n+\n+extern __inline __mmask8\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_testn_epi64_mask (__m512i __A, __m512i __B)\n+{\n+  return (__mmask8) __builtin_ia32_ptestnmq512 ((__v8di) __A,\n+\t\t\t\t\t\t(__v8di) __B,\n+\t\t\t\t\t\t(__mmask8) -1);\n+}\n+\n+extern __inline __mmask8\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_mask_testn_epi64_mask (__mmask8 __U, __m512i __A, __m512i __B)\n+{\n+  return (__mmask8) __builtin_ia32_ptestnmq512 ((__v8di) __A,\n+\t\t\t\t\t\t(__v8di) __B, __U);\n+}\n+\n extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_unpackhi_epi32 (__m512i __A, __m512i __B)"}, {"sha": "4e6761b27689b07a57bca367a04dd80afa513f02", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -30065,8 +30065,8 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_subv8di3_mask, \"__builtin_ia32_psubq512_mask\", IX86_BUILTIN_PSUBQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_QI },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_testmv16si3_mask, \"__builtin_ia32_ptestmd512\", IX86_BUILTIN_PTESTMD512, UNKNOWN, (int) HI_FTYPE_V16SI_V16SI_HI },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_testmv8di3_mask, \"__builtin_ia32_ptestmq512\", IX86_BUILTIN_PTESTMQ512, UNKNOWN, (int) QI_FTYPE_V8DI_V8DI_QI },\n-  { OPTION_MASK_ISA_AVX512CD, CODE_FOR_avx512f_testnmv16si3_mask, \"__builtin_ia32_ptestnmd512\", IX86_BUILTIN_PTESTNMD512, UNKNOWN, (int) HI_FTYPE_V16SI_V16SI_HI },\n-  { OPTION_MASK_ISA_AVX512CD, CODE_FOR_avx512f_testnmv8di3_mask, \"__builtin_ia32_ptestnmq512\", IX86_BUILTIN_PTESTNMQ512, UNKNOWN, (int) QI_FTYPE_V8DI_V8DI_QI },\n+  { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_testnmv16si3_mask, \"__builtin_ia32_ptestnmd512\", IX86_BUILTIN_PTESTNMD512, UNKNOWN, (int) HI_FTYPE_V16SI_V16SI_HI },\n+  { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_testnmv8di3_mask, \"__builtin_ia32_ptestnmq512\", IX86_BUILTIN_PTESTNMQ512, UNKNOWN, (int) QI_FTYPE_V8DI_V8DI_QI },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_interleave_highv16si_mask, \"__builtin_ia32_punpckhdq512_mask\", IX86_BUILTIN_PUNPCKHDQ512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_HI },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_interleave_highv8di_mask, \"__builtin_ia32_punpckhqdq512_mask\", IX86_BUILTIN_PUNPCKHQDQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_QI },\n   { OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_interleave_lowv16si_mask, \"__builtin_ia32_punpckldq512_mask\", IX86_BUILTIN_PUNPCKLDQ512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_HI },"}, {"sha": "f6de5d5de52032702e621fd70127c52e3ec8c384", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -6566,7 +6566,7 @@\n \t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_AVX512F\"\n-  \"%vscalef<ssescalarmodesuffix>\\t{<round_op3>%2, %1, %0|%0, %1, %2<round_op3>}\"\n+  \"vscalef<ssescalarmodesuffix>\\t{<round_op3>%2, %1, %0|%0, %1, %2<round_op3>}\"\n   [(set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\"  \"<ssescalarmode>\")])\n \n@@ -6577,7 +6577,7 @@\n \t   (match_operand:VF_512 2 \"<round_nimm_predicate>\" \"<round_constraint>\")]\n \t  UNSPEC_SCALEF))]\n   \"TARGET_AVX512F\"\n-  \"%vscalef<ssemodesuffix>\\t{<round_mask_op3>%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2<round_mask_op3>}\"\n+  \"vscalef<ssemodesuffix>\\t{<round_mask_op3>%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2<round_mask_op3>}\"\n   [(set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\"  \"<MODE>\")])\n \n@@ -9071,8 +9071,8 @@\n \t [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n \t  (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")]\n \t UNSPEC_TESTNM))]\n-  \"TARGET_AVX512CD\"\n-  \"%vptestnm<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n+  \"TARGET_AVX512F\"\n+  \"vptestnm<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n   [(set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\"  \"<sseinsnmode>\")])\n "}, {"sha": "124f5c716a0c9533824a5b5c2038addfac1d3ef0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -1,3 +1,14 @@\n+2014-02-26  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* gcc.target/i386/avx512cd-vptestnmd-1.c: Change into ...\n+\t* gcc.target/i386/avx512f-vptestnmd-1.c: This.\n+\t* gcc.target/i386/avx512cd-vptestnmq-1.c: Change into ...\n+\t* gcc.target/i386/avx512f-vptestnmq-1.c: This.\n+\t* gcc.target/i386/avx512cd-vptestnmd-2.c: Change into ...\n+\t* gcc.target/i386/avx512f-vptestnmd-2.c: This.\n+\t* gcc.target/i386/avx512cd-vptestnmq-2.c: Change into ...\n+\t* gcc.target/i386/avx512f-vptestnmq-2.c: This.\n+\n 2014-02-26  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR target/60280"}, {"sha": "1094ee5b0eece642337576d8a74eb4f0fb4f8b01", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vptestnmd-1.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-1.c?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mavx512cd -O2\" } */\n+/* { dg-options \"-mavx512f -O2\" } */\n /* { dg-final { scan-assembler-times \"vptestnmd\\[ \\\\t\\]+\\[^\\n\\]*%zmm\\[0-7\\]\\[^\\n^k\\]*k\\[1-7\\]\\[^\\{\\]\" 1 } } */\n /* { dg-final { scan-assembler-times \"vptestnmd\\[ \\\\t\\]+\\[^\\n\\]*%zmm\\[0-7\\]\\[^\\n^k\\]*k\\[1-7\\]\\{\" 1 } } */\n \n@@ -9,7 +9,7 @@ volatile __m512i x;\n volatile __mmask16 m16;\n \n void extern\n-avx512cd_test (void)\n+avx512f_test (void)\n {\n   m16 = _mm512_testn_epi32_mask (x, x);\n   m16 = _mm512_mask_testn_epi32_mask (3, x, x);", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512cd-vptestnmd-1.c"}, {"sha": "b2b4d0e1e6740d678f02bc70c4203b4aba2e2476", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vptestnmd-2.c", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmd-2.c?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mavx512cd\" } */\n-/* { dg-require-effective-target avx512cd } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+/* { dg-require-effective-target avx512f } */\n \n-#define AVX512CD\n+#define AVX512F\n \n #include \"avx512f-helper.h\"\n ", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512cd-vptestnmd-2.c"}, {"sha": "081a25e1738ddb4dbfc79f4a24091e6b0a99e9a8", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vptestnmq-1.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-1.c?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mavx512cd -O2\" } */\n+/* { dg-options \"-mavx512f -O2\" } */\n /* { dg-final { scan-assembler-times \"vptestnmq\\[ \\\\t\\]+\\[^\\n\\]*%zmm\\[0-7\\]\\[^\\n^k\\]*k\\[1-7\\]\\[^\\{\\]\" 1 } } */\n /* { dg-final { scan-assembler-times \"vptestnmq\\[ \\\\t\\]+\\[^\\n\\]*%zmm\\[0-7\\]\\[^\\n^k\\]*k\\[1-7\\]\\{\" 1 } } */\n \n@@ -9,7 +9,7 @@ volatile __m512i x;\n volatile __mmask8 m8;\n \n void extern\n-avx512cd_test (void)\n+avx512f_test (void)\n {\n   m8 = _mm512_testn_epi64_mask (x, x);\n   m8 = _mm512_mask_testn_epi64_mask (3, x, x);", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512cd-vptestnmq-1.c"}, {"sha": "b6330d21342a4b41975d7ceff7a7ea9628ba51f3", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vptestnmq-2.c", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/260d3642789bc5299470745c064eea9daa1e258e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vptestnmq-2.c?ref=260d3642789bc5299470745c064eea9daa1e258e", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mavx512cd\" } */\n-/* { dg-require-effective-target avx512cd } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+/* { dg-require-effective-target avx512f } */\n \n-#define AVX512CD\n+#define AVX512F\n \n #include \"avx512f-helper.h\"\n ", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512cd-vptestnmq-2.c"}]}