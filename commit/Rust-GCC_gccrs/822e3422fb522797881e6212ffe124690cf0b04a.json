{"sha": "822e3422fb522797881e6212ffe124690cf0b04a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIyZTM0MjJmYjUyMjc5Nzg4MWU2MjEyZmZlMTI0NjkwY2YwYjA0YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-15T17:52:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-15T17:52:45Z"}, "message": "(expand_call): Call preserve_temp_slots on temps made for BLKmode args\nreturned in registers.\n\nFrom-SVN: r9390", "tree": {"sha": "91fc4b832a2e1f198b6895ce7702b472ef9e1ec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91fc4b832a2e1f198b6895ce7702b472ef9e1ec0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/822e3422fb522797881e6212ffe124690cf0b04a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822e3422fb522797881e6212ffe124690cf0b04a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822e3422fb522797881e6212ffe124690cf0b04a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822e3422fb522797881e6212ffe124690cf0b04a/comments", "author": null, "committer": null, "parents": [{"sha": "fd84ddafb074116ba7b0b428cfd38c839c64bf1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd84ddafb074116ba7b0b428cfd38c839c64bf1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd84ddafb074116ba7b0b428cfd38c839c64bf1c"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "a8b6d3e47eca3a214cecec7e424b62451f5ad8fc", "filename": "gcc/calls.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822e3422fb522797881e6212ffe124690cf0b04a/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822e3422fb522797881e6212ffe124690cf0b04a/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=822e3422fb522797881e6212ffe124690cf0b04a", "patch": "@@ -2037,8 +2037,11 @@ expand_call (exp, target, ignore)\n       enum machine_mode tmpmode;\n       \n       if (target == 0)\n-\ttarget = assign_stack_temp (BLKmode, bytes, 0);\n-      MEM_IN_STRUCT_P (target) = AGGREGATE_TYPE_P (TREE_TYPE (exp));\n+\t{\n+\t  target = assign_stack_temp (BLKmode, bytes, 0);\n+\t  MEM_IN_STRUCT_P (target) = AGGREGATE_TYPE_P (TREE_TYPE (exp));\n+\t  preserve_temp_slots (target);\n+\t}\n \n       /* We could probably emit more efficient code for machines\n \t which do not use strict alignment, but it doesn't seem"}]}