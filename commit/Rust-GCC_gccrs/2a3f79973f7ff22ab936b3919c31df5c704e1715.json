{"sha": "2a3f79973f7ff22ab936b3919c31df5c704e1715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEzZjc5OTczZjdmZjIyYWI5MzZiMzkxOWMzMWRmNWM3MDRlMTcxNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-05-06T07:44:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-05-06T07:44:13Z"}, "message": "PR 75964: Invalid integer ABS handling in simplify-rtx.c\n\nRTL has no distinction between signed and unsigned values, so it\ndoesn't make sense to test for signed overflow.\n\n2017-05-06  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\tPR rtl-optimization/75964\n\t* simplify-rtx.c (simplify_const_relational_operation): Remove\n\tinvalid handling of comparisons of integer ABS.\n\ngcc/testsuite/\n\tPR rtl-optimization/75964\n\t* gcc.dg/torture/pr75964.c: New test.\n\nFrom-SVN: r247719", "tree": {"sha": "de837dd67bb2740f66f8671c13d345e57e9d5e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de837dd67bb2740f66f8671c13d345e57e9d5e7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a3f79973f7ff22ab936b3919c31df5c704e1715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3f79973f7ff22ab936b3919c31df5c704e1715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3f79973f7ff22ab936b3919c31df5c704e1715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3f79973f7ff22ab936b3919c31df5c704e1715/comments", "author": null, "committer": null, "parents": [{"sha": "d554bf236e760dec9f9ecf280a8f5523e3ff3aa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d554bf236e760dec9f9ecf280a8f5523e3ff3aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d554bf236e760dec9f9ecf280a8f5523e3ff3aa1"}], "stats": {"total": 67, "additions": 43, "deletions": 24}, "files": [{"sha": "58f09a19f6d5c724e673b964c7c4bb027e50af9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3f79973f7ff22ab936b3919c31df5c704e1715/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3f79973f7ff22ab936b3919c31df5c704e1715/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a3f79973f7ff22ab936b3919c31df5c704e1715", "patch": "@@ -1,3 +1,9 @@\n+2017-05-06  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR rtl-optimization/75964\n+\t* simplify-rtx.c (simplify_const_relational_operation): Remove\n+\tinvalid handling of comparisons of integer ABS.\n+\n 2017-05-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ext_80387_constant_init): Do not explicitly"}, {"sha": "7cab26a0e34889df6de3268606a9506013765a86", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3f79973f7ff22ab936b3919c31df5c704e1715/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3f79973f7ff22ab936b3919c31df5c704e1715/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=2a3f79973f7ff22ab936b3919c31df5c704e1715", "patch": "@@ -5316,34 +5316,14 @@ simplify_const_relational_operation (enum rtx_code code,\n \t{\n \tcase LT:\n \t  /* Optimize abs(x) < 0.0.  */\n-\t  if (!HONOR_SNANS (mode)\n-\t      && (!INTEGRAL_MODE_P (mode)\n-\t\t  || (!flag_wrapv && !flag_trapv)))\n-\t    {\n-\t      if (INTEGRAL_MODE_P (mode)\n-\t\t  && (issue_strict_overflow_warning\n-\t\t      (WARN_STRICT_OVERFLOW_CONDITIONAL)))\n-\t\twarning (OPT_Wstrict_overflow,\n-\t\t\t (\"assuming signed overflow does not occur when \"\n-\t\t\t  \"assuming abs (x) < 0 is false\"));\n-\t       return const0_rtx;\n-\t    }\n+\t  if (!INTEGRAL_MODE_P (mode) && !HONOR_SNANS (mode))\n+\t    return const0_rtx;\n \t  break;\n \n \tcase GE:\n \t  /* Optimize abs(x) >= 0.0.  */\n-\t  if (!HONOR_NANS (mode)\n-\t      && (!INTEGRAL_MODE_P (mode)\n-\t\t  || (!flag_wrapv && !flag_trapv)))\n-\t    {\n-\t      if (INTEGRAL_MODE_P (mode)\n-\t          && (issue_strict_overflow_warning\n-\t    \t  (WARN_STRICT_OVERFLOW_CONDITIONAL)))\n-\t        warning (OPT_Wstrict_overflow,\n-\t\t\t (\"assuming signed overflow does not occur when \"\n-\t\t\t  \"assuming abs (x) >= 0 is true\"));\n-\t      return const_true_rtx;\n-\t    }\n+\t  if (!INTEGRAL_MODE_P (mode) && !HONOR_NANS (mode))\n+\t    return const_true_rtx;\n \t  break;\n \n \tcase UNGE:"}, {"sha": "587e4821b658e8881b322bbc8278423caa9988b3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3f79973f7ff22ab936b3919c31df5c704e1715/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3f79973f7ff22ab936b3919c31df5c704e1715/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a3f79973f7ff22ab936b3919c31df5c704e1715", "patch": "@@ -1,3 +1,8 @@\n+2017-05-06  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR rtl-optimization/75964\n+\t* gcc.dg/torture/pr75964.c: New test.\n+\n 2017-05-06  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/80606"}, {"sha": "3b895ba7085c18652d60b4093850ce40b4a7dfdb", "filename": "gcc/testsuite/gcc.dg/torture/pr75964.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3f79973f7ff22ab936b3919c31df5c704e1715/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr75964.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3f79973f7ff22ab936b3919c31df5c704e1715/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr75964.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr75964.c?ref=2a3f79973f7ff22ab936b3919c31df5c704e1715", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+\n+typedef __UINT8_TYPE__ uint8_t;\n+\n+uint8_t __attribute__ ((noinline, noclone))\n+abs8 (uint8_t x)\n+{\n+  if (x & 0x80)\n+    x = -x;\n+\n+  if (x & 0x80)\n+    x = 0x7f;\n+\n+  return x;\n+}\n+\n+int\n+main (void)\n+{\n+  if (abs8 (0) != 0\n+      || abs8 (1) != 1\n+      || abs8 (127) != 127\n+      || abs8 (128) != 127\n+      || abs8 (129) != 127\n+      || abs8 (255) != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}