{"sha": "5d7d28c26575f668be3e1646f87dfd0bf24b886f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ3ZDI4YzI2NTc1ZjY2OGJlM2UxNjQ2Zjg3ZGZkMGJmMjRiODg2Zg==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-05-31T14:26:57Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-31T14:26:57Z"}, "message": "rework \"make check\" for fixinc\n\nFrom-SVN: r34298", "tree": {"sha": "81a8d3f3c8ce89d52bcc2882645c3fbb740b30f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81a8d3f3c8ce89d52bcc2882645c3fbb740b30f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d7d28c26575f668be3e1646f87dfd0bf24b886f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7d28c26575f668be3e1646f87dfd0bf24b886f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7d28c26575f668be3e1646f87dfd0bf24b886f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7d28c26575f668be3e1646f87dfd0bf24b886f/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "231a2828e175844076109342b8dbe8bcb842a51f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231a2828e175844076109342b8dbe8bcb842a51f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/231a2828e175844076109342b8dbe8bcb842a51f"}], "stats": {"total": 525, "additions": 359, "deletions": 166}, "files": [{"sha": "21593bab4486c1d23cc378f1a450363b51ff16d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d7d28c26575f668be3e1646f87dfd0bf24b886f", "patch": "@@ -1,3 +1,11 @@\n+2000-05-31  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* check.tpl: rework to use test result tree\n+\t* fixincl.x: regenerate\n+\t* inclhack.def:  add new tests\n+\t* tests/base/arch/i960/archI960.h:  New test result\n+\t* tests/base/curses.h: modified test result\n+\n Wed May 31 13:17:20 2000  Philippe De Muyter  <phdm@macqel.be>\n \n \t* except.c (clear_function_eh_region): Do not free NULL."}, {"sha": "a4be5ed0711c64cd1460f02047b9581feb23dc09", "filename": "gcc/fixinc/check.tpl", "status": "modified", "additions": 90, "deletions": 32, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Fcheck.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Fcheck.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.tpl?ref=5d7d28c26575f668be3e1646f87dfd0bf24b886f", "patch": "@@ -6,9 +6,12 @@\n =]#!/bin/sh\n \n set -e\n-[ -d testdir ] && rm -rf testdir\n-mkdir testdir\n-cd testdir\n+TESTDIR=tests\n+TESTBASE=`cd $1;pwd`\n+\n+[ -d ${TESTDIR} ] || mkdir ${TESTDIR}\n+cd ${TESTDIR}\n+TESTDIR=`pwd`\n \n TARGET_MACHINE='*'\n DESTDIR=`pwd`/res\n@@ -18,6 +21,7 @@ VERBOSE=1\n \n export TARGET_MACHINE DESTDIR SRCDIR FIND_BASE VERBOSE\n \n+rm -rf ${DESTDIR} ${SRCDIR}\n mkdir ${DESTDIR} ${SRCDIR}\n \n ( cd ${SRCDIR}\n@@ -37,8 +41,39 @@ mkdir ${DESTDIR} ${SRCDIR}\n     mkdir $f || mkdir -p $f\n   done ) > /dev/null 2>&1\n \n+cd inc\n [=\n \n+_FOR fix =][=\n+\n+  _IF test_text _count 1 > =]\n+#\n+#  [=hackname=] has [=_EVAL test_text _count=] tests\n+#\n+sfile=[=\n+    _IF files _exist =][=\n+      files[0] =][=\n+    _ELSE =]testing.h[=\n+    _ENDIF =]\n+dfile=`dirname $sfile`/[=hackname \"_A-Z\" \"-a-z\" _tr=]-[=_EVAL _index=].h\n+fixnum=[=_EVAL _index=][=\n+    _FOR test_text FROM 1 =]\n+cat >> $sfile <<_HACK_EOF_\n+\n+\n+#if defined( [=hackname _up=]_CHECK_[=_EVAL _index=] )\n+[=test_text=]\n+#endif  /* [=hackname _up=]_CHECK_[=_EVAL _index=] */\n+_HACK_EOF_\n+echo $sfile | ../../fixincl\n+[ -f ${DESTDIR}/$sfile ] && mv ${DESTDIR}/$sfile ${DESTDIR}/$dfile[=\n+    /test_text =][=\n+  _ENDIF =][=\n+\n+/fix\n+\n+=][=\n+\n _FOR fix =][=\n \n   _IF test_text _exist ! =][=\n@@ -50,57 +85,80 @@ echo No test for [=hackname=] in inc/[=\n       _ENDIF =][=\n     _ENDIF =][=\n   _ELSE =]\n-cat >> inc/[=\n+cat >> [=\n     _IF files _exist =][=\n       files[0] =][=\n     _ELSE =]testing.h[=\n-    _ENDIF =] <<- _HACK_EOF_\n+    _ENDIF =] <<_HACK_EOF_\n \n \n-\t#if defined( [=hackname _up=]_CHECK )\n-[=test_text \"\\t\" _prefix=]\n-\t#endif  /* [=hackname _up=]_CHECK */\n+#if defined( [=hackname _up=]_CHECK )\n+[=test_text=]\n+#endif  /* [=hackname _up=]_CHECK */\n _HACK_EOF_\n [=_ENDIF =][=\n \n /fix\n \n =]\n \n-cd inc\n-find . -type f | sed 's;\\./;;' | sort > ../LIST\n-../../fixincl < ../LIST\n-cd ..\n+find . -type f | sed 's;\\./;;' | sort | ../../fixincl\n+cd ${DESTDIR}\n+\n+exitok=true\n \n+find * -type f -print > ${TESTDIR}/LIST\n+\n+exitok=`\n+exec < ${TESTDIR}/LIST\n while read f\n do\n-  if [ ! -f res/$f ]\n+  if [ ! -f ${TESTBASE}/$f ]\n+  then\n+    echo \"Newly fixed header:  $f\" >&2\n+    exitok=false\n+\n+  elif cmp $f ${TESTBASE}/$f >&2\n   then\n-    echo \"Only in inc:  inc/$f\"\n+    :\n+\n   else\n-    diff -c inc/$f res/$f | \\\n-      sed -e '1,2s;\t.*;;' -e '/MACH_DIFF:/,/no uniform test,/d'\n+    diff -c $f ${TESTBASE}/$f >&2\n+    exitok=false\n   fi\n-done > NEWDIFF < LIST\n+done\n+echo $exitok`\n \n-echo\n-echo Test output check:\n-[=\n+cd $TESTBASE\n \n-_FOR fix =][=\n+find * -type f -print | \\\n+fgrep -v 'CVS/' > ${TESTDIR}/LIST\n \n-  _IF test_text _exist =]\n-fgrep [=hackname _up=]_CHECK NEWDIFF > /dev/null 2>&1 || \\\n-  echo \"[=_eval hackname _get \"#%32s test failed.  See testdir/inc/\"\n-          _printf =][=\n-    _IF files _exist =][=\n-      files[0] =][=\n-    _ELSE =]testing.h[=\n-    _ENDIF =]\"[=\n-  _ENDIF =][=\n+exitok=`\n+exec < ${TESTDIR}/LIST\n+while read f\n+do\n+  if [ -s $f ] && [ ! -f ${DESTDIR}/$f ]\n+  then\n+    echo \"Missing header fix:  $f\" >&2\n+    exitok=false\n+  fi\n+done\n+echo $exitok`\n \n-/fix\n+echo\n+if $exitok\n+then\n+  cd ${TESTDIR}\n+  rm -rf inc res LIST\n+  cd ..\n+  rmdir ${TESTDIR} > /dev/null 2>&1 || :\n+  echo All fixinclude tests pass >&2\n+else\n+  echo There were fixinclude test FAILURES  >&2\n+fi\n+$exitok[=\n \n-=][=\n _eval _outfile \"chmod +x %s\" _printf _shell\n+\n =]"}, {"sha": "de240964e7ff4fa150bf1f3e4c7264828749895d", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 128, "deletions": 74, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=5d7d28c26575f668be3e1646f87dfd0bf24b886f", "patch": "@@ -5,7 +5,7 @@\n  * files which are fixed to work correctly with ANSI C and placed in a\n  * directory that GNU C will search.\n  *\n- * This file contains 122 fixup descriptions.\n+ * This file contains 123 fixup descriptions.\n  *\n  * See README-fixinc for more information.\n  *\n@@ -4253,8 +4253,9 @@ tTestDesc aTinfo_CplusplusTests[] = {\n /*\n  *  Fix Command Arguments for Tinfo_Cplusplus\n  */\n-const char* apzTinfo_CplusplusPatch[] = { \"sed\",\n-    \"-e\", \"s/[ \\t]_cplusplus/ __cplusplus/\",\n+const char* apzTinfo_CplusplusPatch[] = {\n+    \"format\",\n+    \" __cplusplus\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -4309,29 +4310,68 @@ tSCC zUltrix_ConstList[] =\n  *  Machine/OS name selection pattern\n  */\n #define apzUltrix_ConstMachs (const char**)NULL\n-#define ULTRIX_CONST_TEST_CT  0\n-#define aUltrix_ConstTests   (tTestDesc*)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_ConstSelect0[] =\n+       \"perror\\\\( char \\\\*\";\n+\n+#define    ULTRIX_CONST_TEST_CT  1\n+tTestDesc aUltrix_ConstTests[] = {\n+  { TT_EGREP,    zUltrix_ConstSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Const\n  */\n-const char* apzUltrix_ConstPatch[] = { \"sed\",\n-    \"-e\", \"s@perror( char \\\\*__s );@perror( const char *__s );@\",\n-    \"-e\", \"s@fputs( char \\\\*__s,@fputs( const char *__s,@\",\n-    \"-e\", \"s@fopen( char \\\\*__filename, char \\\\*__type );@fopen( const char *__filename, const char *__type );@\",\n-    \"-e\", \"s@fwrite( void \\\\*__ptr,@fwrite( const void *__ptr,@\",\n-    \"-e\", \"s@fscanf( FILE \\\\*__stream, char \\\\*__format,@fscanf( FILE *__stream, const char *__format,@\",\n-    \"-e\", \"s@scanf( char \\\\*__format,@scanf( const char *__format,@\",\n-    \"-e\", \"s@sscanf( char \\\\*__s, char \\\\*__format,@sscanf( const char *__s, const char *__format,@\",\n-    \"-e\", \"s@popen(char \\\\*, char \\\\*);@popen(const char *, const char *);@\",\n-    \"-e\", \"s@tempnam(char\\\\*,char\\\\*);@tempnam(const char*,const char*);@\",\n+const char* apzUltrix_ConstPatch[] = {\n+    \"format\",\n+    \"%1 const %3 *__\",\n+    \"([ \\t*](perror|fputs|fwrite|scanf|fscanf)\\\\(.*)[ \\t]+(char|void) \\\\*__\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Ultrix_Const2 fix\n+ */\n+#define ULTRIX_CONST2_FIXIDX             107\n+tSCC zUltrix_Const2Name[] =\n+     \"ultrix_const2\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zUltrix_Const2List[] =\n+  \"|stdio.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzUltrix_Const2Machs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zUltrix_Const2Select0[] =\n+       \"\\\\*fopen\\\\( char \\\\*\";\n+\n+#define    ULTRIX_CONST2_TEST_CT  1\n+tTestDesc aUltrix_Const2Tests[] = {\n+  { TT_EGREP,    zUltrix_Const2Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Ultrix_Const2\n+ */\n+const char* apzUltrix_Const2Patch[] = {\n+    \"format\",\n+    \"%1( const char *%3, const char *\",\n+    \"([ \\t*](fopen|sscanf|popen|tempnam))\\\\([ \\t]*char[ \\t]*\\\\*([^,]*),[ \\t]*char[ \\t]*\\\\*[ \\t]*\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ultrix_Fix_Fixproto fix\n  */\n-#define ULTRIX_FIX_FIXPROTO_FIXIDX       107\n+#define ULTRIX_FIX_FIXPROTO_FIXIDX       108\n tSCC zUltrix_Fix_FixprotoName[] =\n      \"ultrix_fix_fixproto\";\n \n@@ -4367,7 +4407,7 @@ struct utsname;\\n\",\n  *\n  *  Description of Ultrix_Ifdef fix\n  */\n-#define ULTRIX_IFDEF_FIXIDX              108\n+#define ULTRIX_IFDEF_FIXIDX              109\n tSCC zUltrix_IfdefName[] =\n      \"ultrix_ifdef\";\n \n@@ -4385,7 +4425,7 @@ tSCC zUltrix_IfdefList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zUltrix_IfdefSelect0[] =\n-       \"#ifdef KERNEL[ \\t]*[^ \\t]\";\n+       \"#ifdef KERNEL[ \\t]+[^ \\t]\";\n \n #define    ULTRIX_IFDEF_TEST_CT  1\n tTestDesc aUltrix_IfdefTests[] = {\n@@ -4402,7 +4442,7 @@ const char* apzUltrix_IfdefPatch[] = { \"sed\",\n  *\n  *  Description of Ultrix_Static fix\n  */\n-#define ULTRIX_STATIC_FIXIDX             109\n+#define ULTRIX_STATIC_FIXIDX             110\n tSCC zUltrix_StaticName[] =\n      \"ultrix_static\";\n \n@@ -4439,7 +4479,7 @@ const char* apzUltrix_StaticPatch[] = { \"sed\",\n  *\n  *  Description of Undefine_Null fix\n  */\n-#define UNDEFINE_NULL_FIXIDX             110\n+#define UNDEFINE_NULL_FIXIDX             111\n tSCC zUndefine_NullName[] =\n      \"undefine_null\";\n \n@@ -4485,7 +4525,7 @@ const char* apzUndefine_NullPatch[] = {\n  *\n  *  Description of Unixware7_Byteorder_Fix fix\n  */\n-#define UNIXWARE7_BYTEORDER_FIX_FIXIDX   111\n+#define UNIXWARE7_BYTEORDER_FIX_FIXIDX   112\n tSCC zUnixware7_Byteorder_FixName[] =\n      \"unixware7_byteorder_fix\";\n \n@@ -4528,7 +4568,7 @@ const char* apzUnixware7_Byteorder_FixPatch[] = { \"sed\",\n  *\n  *  Description of Va_I960_Macro fix\n  */\n-#define VA_I960_MACRO_FIXIDX             112\n+#define VA_I960_MACRO_FIXIDX             113\n tSCC zVa_I960_MacroName[] =\n      \"va_i960_macro\";\n \n@@ -4555,18 +4595,16 @@ tTestDesc aVa_I960_MacroTests[] = {\n /*\n  *  Fix Command Arguments for Va_I960_Macro\n  */\n-const char* apzVa_I960_MacroPatch[] = { \"sed\",\n-    \"-e\", \"s/__vsiz/__vxvsiz/\",\n-    \"-e\", \"s/__vali/__vxvali/\",\n-    \"-e\", \"s/__vpad/__vxvpad/\",\n-    \"-e\", \"s/__alignof__/__vxalignof__/\",\n+const char* apzVa_I960_MacroPatch[] = {\n+    \"format\",\n+    \"__vx%1\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Void_Null fix\n  */\n-#define VOID_NULL_FIXIDX                 113\n+#define VOID_NULL_FIXIDX                 114\n tSCC zVoid_NullName[] =\n      \"void_null\";\n \n@@ -4584,7 +4622,7 @@ tSCC zVoid_NullList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zVoid_NullSelect0[] =\n-       \"#[ \\t]*define[ \\t][ \\t]*NULL[ \\t].*void\";\n+       \"^#[ \\t]*define[ \\t]+NULL[ \\t]+\\\\(\\\\(void[ \\t]*\\\\*\\\\)0\\\\)\";\n \n #define    VOID_NULL_TEST_CT  1\n tTestDesc aVoid_NullTests[] = {\n@@ -4593,15 +4631,16 @@ tTestDesc aVoid_NullTests[] = {\n /*\n  *  Fix Command Arguments for Void_Null\n  */\n-const char* apzVoid_NullPatch[] = { \"sed\",\n-    \"-e\", \"s/^#[ \\t]*define[ \\t]*NULL[ \\t]*((void[ \\t]*\\\\*)0)/#define NULL 0/\",\n+const char* apzVoid_NullPatch[] = {\n+    \"format\",\n+    \"#define NULL 0\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Vxworks_Gcc_Problem fix\n  */\n-#define VXWORKS_GCC_PROBLEM_FIXIDX       114\n+#define VXWORKS_GCC_PROBLEM_FIXIDX       115\n tSCC zVxworks_Gcc_ProblemName[] =\n      \"vxworks_gcc_problem\";\n \n@@ -4651,7 +4690,7 @@ const char* apzVxworks_Gcc_ProblemPatch[] = { \"sed\",\n  *\n  *  Description of Vxworks_Needs_Vxtypes fix\n  */\n-#define VXWORKS_NEEDS_VXTYPES_FIXIDX     115\n+#define VXWORKS_NEEDS_VXTYPES_FIXIDX     116\n tSCC zVxworks_Needs_VxtypesName[] =\n      \"vxworks_needs_vxtypes\";\n \n@@ -4669,7 +4708,7 @@ tSCC zVxworks_Needs_VxtypesList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zVxworks_Needs_VxtypesSelect0[] =\n-       \"uint_t[ \\t][ \\t]*_clocks_per_sec\";\n+       \"uint_t([ \\t]+_clocks_per_sec)\";\n \n #define    VXWORKS_NEEDS_VXTYPES_TEST_CT  1\n tTestDesc aVxworks_Needs_VxtypesTests[] = {\n@@ -4678,15 +4717,16 @@ tTestDesc aVxworks_Needs_VxtypesTests[] = {\n /*\n  *  Fix Command Arguments for Vxworks_Needs_Vxtypes\n  */\n-const char* apzVxworks_Needs_VxtypesPatch[] = { \"sed\",\n-    \"-e\", \"s/uint_t/unsigned int/\",\n+const char* apzVxworks_Needs_VxtypesPatch[] = {\n+    \"format\",\n+    \"unsigned int%1\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Vxworks_Needs_Vxworks fix\n  */\n-#define VXWORKS_NEEDS_VXWORKS_FIXIDX     116\n+#define VXWORKS_NEEDS_VXWORKS_FIXIDX     117\n tSCC zVxworks_Needs_VxworksName[] =\n      \"vxworks_needs_vxworks\";\n \n@@ -4704,7 +4744,7 @@ tSCC zVxworks_Needs_VxworksList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zVxworks_Needs_VxworksSelect0[] =\n-       \"#[ \\t]define[ \\t][ \\t]*__INCstath\";\n+       \"#[ \\t]define[ \\t]+__INCstath\";\n \n /*\n  *  perform the 'test' shell command - do fix on success\n@@ -4735,7 +4775,7 @@ const char* apzVxworks_Needs_VxworksPatch[] = { \"sed\",\n  *\n  *  Description of Vxworks_Time fix\n  */\n-#define VXWORKS_TIME_FIXIDX              117\n+#define VXWORKS_TIME_FIXIDX              118\n tSCC zVxworks_TimeName[] =\n      \"vxworks_time\";\n \n@@ -4753,7 +4793,7 @@ tSCC zVxworks_TimeList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zVxworks_TimeSelect0[] =\n-       \"VOIDFUNCPTR\";\n+       \"#[ \\t]*define[ \\t]+VOIDFUNCPTR[ \\t].*\";\n \n /*\n  *  perform the 'test' shell command - do fix on success\n@@ -4769,24 +4809,24 @@ tTestDesc aVxworks_TimeTests[] = {\n /*\n  *  Fix Command Arguments for Vxworks_Time\n  */\n-const char* apzVxworks_TimePatch[] = { \"sed\",\n-    \"-e\", \"/VOIDFUNCPTR/i\\\\\\n\\\n-#ifndef __gcc_VOIDFUNCPTR_defined\\\\\\n\\\n-#ifdef __cplusplus\\\\\\n\\\n-typedef void (*__gcc_VOIDFUNCPTR) (...);\\\\\\n\\\n-#else\\\\\\n\\\n-typedef void (*__gcc_VOIDFUNCPTR) ();\\\\\\n\\\n-#endif\\\\\\n\\\n-#define __gcc_VOIDFUNCPTR_defined\\\\\\n\\\n-#endif\\n\",\n-    \"-e\", \"s/VOIDFUNCPTR/__gcc_VOIDFUNCPTR/g\",\n+const char* apzVxworks_TimePatch[] = {\n+    \"format\",\n+    \"#ifndef __gcc_VOIDFUNCPTR_defined\\n\\\n+#ifdef __cplusplus\\n\\\n+typedef void (*__gcc_VOIDFUNCPTR) (...);\\n\\\n+#else\\n\\\n+typedef void (*__gcc_VOIDFUNCPTR) ();\\n\\\n+#endif\\n\\\n+#define __gcc_VOIDFUNCPTR_defined\\n\\\n+#endif\\n\\\n+#define VOIDFUNCPTR __gcc_VOIDFUNCPTR\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of X11_Class fix\n  */\n-#define X11_CLASS_FIXIDX                 118\n+#define X11_CLASS_FIXIDX                 119\n tSCC zX11_ClassName[] =\n      \"x11_class\";\n \n@@ -4826,7 +4866,7 @@ const char* apzX11_ClassPatch[] = { \"sed\",\n  *\n  *  Description of X11_Class_Usage fix\n  */\n-#define X11_CLASS_USAGE_FIXIDX           119\n+#define X11_CLASS_USAGE_FIXIDX           120\n tSCC zX11_Class_UsageName[] =\n      \"x11_class_usage\";\n \n@@ -4840,28 +4880,36 @@ tSCC zX11_Class_UsageList[] =\n  */\n #define apzX11_Class_UsageMachs (const char**)NULL\n \n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zX11_Class_UsageSelect0[] =\n+       \" class\\\\)\";\n+\n /*\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zX11_Class_UsageBypass0[] =\n        \"__cplusplus\";\n \n-#define    X11_CLASS_USAGE_TEST_CT  1\n+#define    X11_CLASS_USAGE_TEST_CT  2\n tTestDesc aX11_Class_UsageTests[] = {\n-  { TT_NEGREP,   zX11_Class_UsageBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP,   zX11_Class_UsageBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zX11_Class_UsageSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_Class_Usage\n  */\n-const char* apzX11_Class_UsagePatch[] = { \"sed\",\n-    \"-e\", \"s/ class[)]/ c_class)/g\",\n+const char* apzX11_Class_UsagePatch[] = {\n+    \"format\",\n+    \" c_class)\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of X11_New fix\n  */\n-#define X11_NEW_FIXIDX                   120\n+#define X11_NEW_FIXIDX                   121\n tSCC zX11_NewName[] =\n      \"x11_new\";\n \n@@ -4902,7 +4950,7 @@ const char* apzX11_NewPatch[] = { \"sed\",\n  *\n  *  Description of X11_Sprintf fix\n  */\n-#define X11_SPRINTF_FIXIDX               121\n+#define X11_SPRINTF_FIXIDX               122\n tSCC zX11_SprintfName[] =\n      \"x11_sprintf\";\n \n@@ -4920,7 +4968,7 @@ tSCC zX11_SprintfList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zX11_SprintfSelect0[] =\n-       \"sprintf\\\\(\\\\)\";\n+       \"^extern char \\\\*\\tsprintf\\\\(\\\\);$\";\n \n #define    X11_SPRINTF_TEST_CT  1\n tTestDesc aX11_SprintfTests[] = {\n@@ -4929,20 +4977,21 @@ tTestDesc aX11_SprintfTests[] = {\n /*\n  *  Fix Command Arguments for X11_Sprintf\n  */\n-const char* apzX11_SprintfPatch[] = { \"sed\",\n-    \"-e\", \"s,^extern char \\\\*\\tsprintf();$,#ifndef __STDC__\\\\\\n\\\n-extern char *\\tsprintf();\\\\\\n\\\n-#endif /* !defined __STDC__ */,\",\n+const char* apzX11_SprintfPatch[] = {\n+    \"format\",\n+    \"#ifndef __STDC__\\n\\\n+%0\\n\\\n+#endif /* !defined __STDC__ */\",\n     (char*)NULL };\n \n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          121\n+#define REGEX_COUNT          124\n #define MACH_LIST_SIZE_LIMIT 279\n-#define FIX_COUNT            122\n+#define FIX_COUNT            123\n \n tFixDesc fixDescList[ FIX_COUNT ] = {\n   {  zAaa_Ki_IfaceName,    zAaa_Ki_IfaceList,\n@@ -5467,7 +5516,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zTinfo_CplusplusName,    zTinfo_CplusplusList,\n      apzTinfo_CplusplusMachs,\n-     TINFO_CPLUSPLUS_TEST_CT, FD_MACH_ONLY,\n+     TINFO_CPLUSPLUS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aTinfo_CplusplusTests,   apzTinfo_CplusplusPatch },\n \n   {  zUltrix_Atof_ParamName,    zUltrix_Atof_ParamList,\n@@ -5477,9 +5526,14 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zUltrix_ConstName,    zUltrix_ConstList,\n      apzUltrix_ConstMachs,\n-     ULTRIX_CONST_TEST_CT, FD_MACH_ONLY,\n+     ULTRIX_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aUltrix_ConstTests,   apzUltrix_ConstPatch },\n \n+  {  zUltrix_Const2Name,    zUltrix_Const2List,\n+     apzUltrix_Const2Machs,\n+     ULTRIX_CONST2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aUltrix_Const2Tests,   apzUltrix_Const2Patch },\n+\n   {  zUltrix_Fix_FixprotoName,    zUltrix_Fix_FixprotoList,\n      apzUltrix_Fix_FixprotoMachs,\n      ULTRIX_FIX_FIXPROTO_TEST_CT, FD_MACH_ONLY,\n@@ -5507,12 +5561,12 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zVa_I960_MacroName,    zVa_I960_MacroList,\n      apzVa_I960_MacroMachs,\n-     VA_I960_MACRO_TEST_CT, FD_MACH_ONLY,\n+     VA_I960_MACRO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVa_I960_MacroTests,   apzVa_I960_MacroPatch },\n \n   {  zVoid_NullName,    zVoid_NullList,\n      apzVoid_NullMachs,\n-     VOID_NULL_TEST_CT, FD_MACH_ONLY,\n+     VOID_NULL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVoid_NullTests,   apzVoid_NullPatch },\n \n   {  zVxworks_Gcc_ProblemName,    zVxworks_Gcc_ProblemList,\n@@ -5522,7 +5576,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zVxworks_Needs_VxtypesName,    zVxworks_Needs_VxtypesList,\n      apzVxworks_Needs_VxtypesMachs,\n-     VXWORKS_NEEDS_VXTYPES_TEST_CT, FD_MACH_ONLY,\n+     VXWORKS_NEEDS_VXTYPES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVxworks_Needs_VxtypesTests,   apzVxworks_Needs_VxtypesPatch },\n \n   {  zVxworks_Needs_VxworksName,    zVxworks_Needs_VxworksList,\n@@ -5532,7 +5586,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zVxworks_TimeName,    zVxworks_TimeList,\n      apzVxworks_TimeMachs,\n-     VXWORKS_TIME_TEST_CT, FD_MACH_ONLY,\n+     VXWORKS_TIME_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVxworks_TimeTests,   apzVxworks_TimePatch },\n \n   {  zX11_ClassName,    zX11_ClassList,\n@@ -5542,7 +5596,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zX11_Class_UsageName,    zX11_Class_UsageList,\n      apzX11_Class_UsageMachs,\n-     X11_CLASS_USAGE_TEST_CT, FD_MACH_ONLY,\n+     X11_CLASS_USAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aX11_Class_UsageTests,   apzX11_Class_UsagePatch },\n \n   {  zX11_NewName,    zX11_NewList,\n@@ -5552,6 +5606,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zX11_SprintfName,    zX11_SprintfList,\n      apzX11_SprintfMachs,\n-     X11_SPRINTF_TEST_CT, FD_MACH_ONLY,\n+     X11_SPRINTF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aX11_SprintfTests,   apzX11_SprintfPatch }\n };"}, {"sha": "6fea1f738499355252eb0e089b54b9c31cece378", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 118, "deletions": 60, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=5d7d28c26575f668be3e1646f87dfd0bf24b886f", "patch": "@@ -1612,7 +1612,7 @@ fix = {\n     c_fix_arg = \"__%0\";\n     c_fix_arg = \"reg(ex|off|match)_t[^;]\";\n \n-    test_text = \"`touch inc/sys/lc_core.h`\"\n+    test_text = \"`touch sys/lc_core.h`\"\n     \"typedef struct {\\n  int stuff, mo_suff;\\n} regex_t;\\n\"\n     \"extern regex_t    re;\\n\"\n     \"extern regoff_t   ro;\\n\"\n@@ -2601,7 +2601,10 @@ fix = {\n     hackname = tinfo_cplusplus;\n     files    = tinfo.h;\n     select   = \"[ \\t]_cplusplus\";\n-    sed      = \"s/[ \\t]_cplusplus/ __cplusplus/\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \" __cplusplus\";\n+    test_text = \"#ifdef _cplusplus\\nint bogus;\\n#endif\";\n };\n \n \n@@ -2621,21 +2624,43 @@ fix = {\n  *  parameters not const on DECstation Ultrix V4.0 and OSF/1.\n  */\n fix = {\n-    hackname = ultrix_const;\n-    files    = stdio.h;\n+    hackname  = ultrix_const;\n+    files     = stdio.h;\n+    select    = 'perror\\( char \\*';\n+\n+    c_fix     = format;\n+    c_fix_arg = \"%1 const %3 *__\";\n+    c_fix_arg = \"([ \\t*](perror|fputs|fwrite|scanf|fscanf)\\\\(.*)\"\n+                \"[ \\t]+(char|void) \\\\*__\";\n+\n+    test_text =\n+    \"extern void perror( char *__s );\\n\"\n+    \"extern int fputs( char *__s, FILE *);\\n\"\n+    \"extern size_t fwrite( void *__ptr, size_t, size_t, FILE *);\\n\"\n+    \"extern int fscanf( FILE *__stream, char *__format, ...);\\n\"\n+    \"extern int scanf( char *__format, ...);\\n\";\n+};\n+\n+\n+/*\n+ *  parameters not const on DECstation Ultrix V4.0 and OSF/1.\n+ */\n+fix = {\n+    hackname  = ultrix_const2;\n+    files     = stdio.h;\n+\n+    select    = '\\*fopen\\( char \\*';\n+    c_fix     = format;\n+    c_fix_arg = \"%1( const char *%3, const char *\";\n+    c_fix_arg = \"([ \\t*](fopen|sscanf|popen|tempnam))\\\\(\"\n+               \"[ \\t]*char[ \\t]*\\\\*([^,]*),\"\n+               \"[ \\t]*char[ \\t]*\\\\*[ \\t]*\";\n \n-    sed   = 's@perror( char \\*__s );@perror( const char *__s );@';\n-    sed   = 's@fputs( char \\*__s,@fputs( const char *__s,@';\n-    sed   = 's@fopen( char \\*__filename, char \\*__type );@'\n-              'fopen( const char *__filename, const char *__type );@';\n-    sed   = 's@fwrite( void \\*__ptr,@fwrite( const void *__ptr,@';\n-    sed   = 's@fscanf( FILE \\*__stream, char \\*__format,@'\n-              'fscanf( FILE *__stream, const char *__format,@';\n-    sed   = 's@scanf( char \\*__format,@scanf( const char *__format,@';\n-    sed   = 's@sscanf( char \\*__s, char \\*__format,@'\n-              'sscanf( const char *__s, const char *__format,@';\n-    sed   = 's@popen(char \\*, char \\*);@popen(const char *, const char *);@';\n-    sed   = 's@tempnam(char\\*,char\\*);@tempnam(const char*,const char*);@';\n+    test_text =\n+    \"extern FILE *fopen( char *__filename, char *__type );\\n\"\n+    \"extern int sscanf( char *__s, char *__format, ...);\\n\"\n+    \"extern FILE *popen(char *, char *);\\n\"\n+    \"extern char *tempnam(char*,char*);\\n\";\n };\n \n \n@@ -2649,6 +2674,9 @@ fix = {\n     select   = ULTRIX;\n     sed      = \"/^[ \\t]*extern[ \\t]*int[ \\t]*uname();$/i\\\\\\n\"\n                \"struct utsname;\\n\";\n+\n+    test_text =\n+    \"/* ULTRIX's uname */\\nextern\\tint\\tuname();\";\n };\n \n \n@@ -2657,9 +2685,12 @@ fix = {\n  */\n fix = {\n     hackname = ultrix_ifdef;\n-    select   = \"#ifdef KERNEL[ \\t]*[^ \\t]\";\n+    select   = \"#ifdef KERNEL[ \\t]+[^ \\t]\";\n     files    = sys/file.h;\n     sed      = \"s/#ifdef KERNEL/#if defined(KERNEL)/\";\n+\n+    test_text =\n+    \"#ifdef KERNEL\\t&& defined( mumbojumbo )\\nint oops;\\n#endif\";\n };\n \n \n@@ -2721,13 +2752,18 @@ fix = {\n  *  Fix definitions of macros used by va-i960.h in VxWorks header file.\n  */\n fix = {\n-    hackname = va_i960_macro;\n-    files    = arch/i960/archI960.h;\n-    select   = \"__(vsiz|vali|vpad|alignof__)\";\n-    sed = \"s/__vsiz/__vxvsiz/\";\n-    sed = \"s/__vali/__vxvali/\";\n-    sed = \"s/__vpad/__vxvpad/\";\n-    sed = \"s/__alignof__/__vxalignof__/\";\n+    hackname  = va_i960_macro;\n+    files     = arch/i960/archI960.h;\n+    select    = \"__(vsiz|vali|vpad|alignof__)\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \"__vx%1\";\n+\n+    test_text =\n+    \"extern int __vsiz vsiz;\\n\"\n+    \"extern int __vali vali;\\n\"\n+    \"extern int __vpad vpad;\\n\"\n+    \"#define __alignof__(x) ...\";\n };\n \n \n@@ -2736,21 +2772,22 @@ fix = {\n  *  which is illegal in ANSI C++.\n  */\n fix = {\n-    hackname = void_null;\n-    files    = curses.h;\n-    files    = dbm.h;\n-    files    = locale.h;\n-    files    = stdio.h;\n-    files    = stdlib.h;\n-    files    = string.h;\n-    files    = time.h;\n-    files    = unistd.h;\n-    files    = sys/dir.h;\n-    files    = sys/param.h;\n-    files    = sys/types.h;\n-    select   = \"#[ \\t]*define[ \\t][ \\t]*NULL[ \\t].*void\";\n-    sed      = \"s/^#[ \\t]*define[ \\t]*NULL[ \\t]*((void[ \\t]*\\\\*)0)\"\n-                \"/#define NULL 0/\";\n+    hackname  = void_null;\n+    files     = curses.h;\n+    files     = dbm.h;\n+    files     = locale.h;\n+    files     = stdio.h;\n+    files     = stdlib.h;\n+    files     = string.h;\n+    files     = time.h;\n+    files     = unistd.h;\n+    files     = sys/dir.h;\n+    files     = sys/param.h;\n+    files     = sys/types.h;\n+    select    = \"^#[ \\t]*define[ \\t]+NULL[ \\t]+\\\\(\\\\(void[ \\t]*\\\\*\\\\)0\\\\)\";\n+    c_fix     = format;\n+    c_fix_arg = \"#define NULL 0\";\n+    test_text = \"# define\\tNULL \\t((void *)0)  /* typed NULL */\";\n };\n \n \n@@ -2785,17 +2822,25 @@ fix = {\n \n     sed = \"/[ \\t]wchar_t/a\\\\\\n\"\n         \"#endif\\n\";\n+\n+    test_text =\n+    \"#ifdef __GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__\\n\"\n+    \"typedef unsigned int size_t;\\n\"\n+    \"typedef long ptrdiff_t;\\n\"\n+    \"typedef unsigned short wchar_t;\\n\"\n+    \"#endif /* __GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__ */\\n\";\n };\n \n \n /*\n  *  Fix VxWorks <time.h> to not require including <vxTypes.h>.\n  */\n fix = {\n-    hackname = vxworks_needs_vxtypes;\n-    files    = time.h;\n-    select   = \"uint_t[ \\t][ \\t]*_clocks_per_sec\";\n-    sed      = \"s/uint_t/unsigned int/\";\n+    hackname  = vxworks_needs_vxtypes;\n+    files     = time.h;\n+    select    = \"uint_t([ \\t]+_clocks_per_sec)\";\n+    c_fix     = format;\n+    c_fix_arg = \"unsigned int%1\";\n     test_text = \"uint_t\\t_clocks_per_sec;\";\n };\n \n@@ -2809,10 +2854,14 @@ fix = {\n     test     = \" -r types/vxTypesOld.h\";\n     test     = \" -n \\\"`egrep '#include' $file`\\\"\";\n     test     = \" -n \\\"`egrep ULONG $file`\\\"\";\n-    select   = \"#[ \\t]define[ \\t][ \\t]*__INCstath\";\n+    select   = \"#[ \\t]define[ \\t]+__INCstath\";\n \n     sed = \"/#[ \\t]define[ \\t][ \\t]*__INCstath/a\\\\\\n\"\n           \"#include <types/vxTypesOld.h>\\n\";\n+\n+    test_text = \"`touch types/vxTypesOld.h`\"\n+    \"#include </dev/null> /* ULONG */\\n\"\n+    \"# define\\t__INCstath <sys/stat.h>\";\n };\n \n \n@@ -2822,19 +2871,24 @@ fix = {\n fix = {\n     hackname = vxworks_time;\n     files    = time.h;\n-    select   = \"VOIDFUNCPTR\";\n     test     = \" -r vxWorks.h\";\n-    sed      = \"/VOIDFUNCPTR/i\\\\\\n\"\n-               \"#ifndef __gcc_VOIDFUNCPTR_defined\\\\\\n\"\n-               \"#ifdef __cplusplus\\\\\\n\"\n-               \"typedef void (*__gcc_VOIDFUNCPTR) (...);\\\\\\n\"\n-               \"#else\\\\\\n\"\n-               \"typedef void (*__gcc_VOIDFUNCPTR) ();\\\\\\n\"\n-               \"#endif\\\\\\n\"\n-               \"#define __gcc_VOIDFUNCPTR_defined\\\\\\n\"\n-               \"#endif\\n\";\n \n-    sed      = \"s/VOIDFUNCPTR/__gcc_VOIDFUNCPTR/g\";\n+    select    = \"#[ \\t]*define[ \\t]+VOIDFUNCPTR[ \\t].*\";\n+    c_fix     = format;\n+\n+    c_fix_arg =\n+    \"#ifndef __gcc_VOIDFUNCPTR_defined\\n\"\n+    \"#ifdef __cplusplus\\n\"\n+    \"typedef void (*__gcc_VOIDFUNCPTR) (...);\\n\"\n+    \"#else\\n\"\n+    \"typedef void (*__gcc_VOIDFUNCPTR) ();\\n\"\n+    \"#endif\\n\"\n+    \"#define __gcc_VOIDFUNCPTR_defined\\n\"\n+    \"#endif\\n\"\n+    \"#define VOIDFUNCPTR __gcc_VOIDFUNCPTR\";\n+\n+    test_text = \"`touch vxWorks.h`\"\n+                \"#define VOIDFUNCPTR (void(*)())\";\n };\n \n \n@@ -2867,7 +2921,11 @@ fix = {\n     hackname = x11_class_usage;\n     files    = Xm/BaseClassI.h;\n     bypass   = \"__cplusplus\";\n-    sed      = \"s/ class[)]/ c_class)/g\";\n+\n+    select    = \" class\\\\)\";\n+    c_fix     = format;\n+    c_fix_arg = \" c_class)\";\n+\n     test_text = \"extern mumble (int  class);\\n\";\n };\n \n@@ -2903,11 +2961,11 @@ fix = {\n     hackname = x11_sprintf;\n     files    = X11/Xmu.h;\n     files    = X11/Xmu/Xmu.h;\n-    select   = 'sprintf\\(\\)';\n+    select   = \"^extern char \\\\*\\tsprintf\\\\(\\\\);$\";\n+\n+    c_fix     = format;\n+    c_fix_arg = \"#ifndef __STDC__\\n%0\\n#endif /* !defined __STDC__ */\";\n \n-    sed      = \"s,^extern char \\\\*\\tsprintf();$,#ifndef __STDC__\\\\\\n\"\n-               \"extern char *\\tsprintf();\\\\\\n\"\n-               \"#endif /* !defined __STDC__ */,\";\n     test_text = \"extern char *\\tsprintf();\";\n };\n "}, {"sha": "fb436a7443a510b9062a50e4039f764dc3496035", "filename": "gcc/fixinc/tests/base/arch/i960/archI960.h", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Ftests%2Fbase%2Farch%2Fi960%2FarchI960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Ftests%2Fbase%2Farch%2Fi960%2FarchI960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Farch%2Fi960%2FarchI960.h?ref=5d7d28c26575f668be3e1646f87dfd0bf24b886f", "patch": "@@ -0,0 +1,8 @@\n+\n+\n+#if defined( VA_I960_MACRO_CHECK )\n+extern int __vxvsiz vsiz;\n+extern int __vxvali vali;\n+extern int __vxvpad vpad;\n+#define __vxalignof__(x) ...\n+#endif  /* VA_I960_MACRO_CHECK */"}, {"sha": "5b3367c7688b6b877fa0ee0673241bb574658596", "filename": "gcc/fixinc/tests/base/curses.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Ftests%2Fbase%2Fcurses.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d7d28c26575f668be3e1646f87dfd0bf24b886f/gcc%2Ffixinc%2Ftests%2Fbase%2Fcurses.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fcurses.h?ref=5d7d28c26575f668be3e1646f87dfd0bf24b886f", "patch": "@@ -23,3 +23,10 @@ struct term;\n #if defined( LYNX_VOID_INT_CHECK )\n /* curses foiled again */\n #endif  /* LYNX_VOID_INT_CHECK */\n+\n+\n+#if defined( VOID_NULL_CHECK )\n+#ifndef NULL\n+#define NULL 0  /* typed NULL */\n+#endif\n+#endif  /* VOID_NULL_CHECK */"}]}