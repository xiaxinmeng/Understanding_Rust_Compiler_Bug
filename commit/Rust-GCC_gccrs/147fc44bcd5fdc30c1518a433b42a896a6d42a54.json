{"sha": "147fc44bcd5fdc30c1518a433b42a896a6d42a54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ3ZmM0NGJjZDVmZGMzMGMxNTE4YTQzM2I0MmE4OTZhNmQ0MmE1NA==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-06-15T12:24:36Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-06-15T12:24:36Z"}, "message": "Makefile.am: Remove trailing white space, fix typo.\n\nlibstdc++-v3/\n\n\t* include/Makefile.am: Remove trailing white space, fix typo.\n\t(parallel_headers): Remove duplicate file, sort entries.\n\t* include/Makefile.in: Regenerate.\n\nFrom-SVN: r136810", "tree": {"sha": "cd3579ba06c3f1f7737a92f21f166464a0256106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd3579ba06c3f1f7737a92f21f166464a0256106"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/147fc44bcd5fdc30c1518a433b42a896a6d42a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147fc44bcd5fdc30c1518a433b42a896a6d42a54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/147fc44bcd5fdc30c1518a433b42a896a6d42a54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147fc44bcd5fdc30c1518a433b42a896a6d42a54/comments", "author": null, "committer": null, "parents": [{"sha": "f13df8faa96cbc476a99a2acd41e2d00bab9d6ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f13df8faa96cbc476a99a2acd41e2d00bab9d6ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f13df8faa96cbc476a99a2acd41e2d00bab9d6ce"}], "stats": {"total": 82, "additions": 43, "deletions": 39}, "files": [{"sha": "9380784bdf2cbde41d158e0532cba0455e7e64de", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147fc44bcd5fdc30c1518a433b42a896a6d42a54/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147fc44bcd5fdc30c1518a433b42a896a6d42a54/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=147fc44bcd5fdc30c1518a433b42a896a6d42a54", "patch": "@@ -1,3 +1,9 @@\n+2008-06-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* include/Makefile.am: Remove trailing white space, fix typo.\n+\t(parallel_headers): Remove duplicate file, sort entries.\n+\t* include/Makefile.in: Regenerate.\n+\n 2008-06-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* src/condition_variable.cc (~condition_variable): Drop unused"}, {"sha": "7a8579dd67910a2a0a5602ed7ae87879a10d3000", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147fc44bcd5fdc30c1518a433b42a896a6d42a54/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147fc44bcd5fdc30c1518a433b42a896a6d42a54/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=147fc44bcd5fdc30c1518a433b42a896a6d42a54", "patch": "@@ -155,7 +155,7 @@ backward_headers = \\\n \t${backward_srcdir}/hash_set \\\n \t${backward_srcdir}/hash_fun.h \\\n \t${backward_srcdir}/hashtable.h \\\n-\t${backward_srcdir}/strstream \n+\t${backward_srcdir}/strstream\n \n pb_srcdir = ${glibcxx_srcdir}/include/ext/pb_ds\n pb_builddir = ./ext/pb_ds\n@@ -187,7 +187,7 @@ pb_subdirs = \\\n \t${pb_builddir}/detail/list_update_policy\n \n # The ability for make and the underlying host to deal with this\n-# unweildy list as one entire entity is not a sure thing, and may\n+# unwieldy list as one entire entity is not a sure thing, and may\n # cause build errors. Thus, split one list into many smaller\n # mini-lists, with the maximum size per mini-list of no more than 42.\n \n@@ -232,7 +232,7 @@ pb_headers1 = \\\n \t${pb_srcdir}/detail/binomial_heap_/debug_fn_imps.hpp \\\n \t${pb_srcdir}/detail/bin_search_tree_/bin_search_tree_.hpp \\\n \t${pb_srcdir}/detail/bin_search_tree_/cond_dtor_entry_dealtor.hpp \\\n-\t${pb_srcdir}/detail/bin_search_tree_/cond_key_dtor_entry_dealtor.hpp \n+\t${pb_srcdir}/detail/bin_search_tree_/cond_key_dtor_entry_dealtor.hpp\n \n pb_headers2 = \\\n \t${pb_srcdir}/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp \\\n@@ -274,7 +274,7 @@ pb_headers2 = \\\n \t${pb_srcdir}/detail/cc_hash_table_map_/resize_no_store_hash_fn_imps.hpp \\\n \t${pb_srcdir}/detail/cc_hash_table_map_/resize_store_hash_fn_imps.hpp \\\n \t${pb_srcdir}/detail/cc_hash_table_map_/size_fn_imps.hpp \\\n-\t${pb_srcdir}/detail/cc_hash_table_map_/standard_policies.hpp \n+\t${pb_srcdir}/detail/cc_hash_table_map_/standard_policies.hpp\n \n pb_headers3 = \\\n \t${pb_srcdir}/detail/cc_hash_table_map_/trace_fn_imps.hpp \\\n@@ -315,7 +315,7 @@ pb_headers3 = \\\n \t${pb_srcdir}/detail/hash_fn/probe_fn_base.hpp \\\n \t${pb_srcdir}/detail/hash_fn/quadratic_probe_fn_imp.hpp \\\n \t${pb_srcdir}/detail/hash_fn/ranged_hash_fn.hpp \\\n-\t${pb_srcdir}/detail/hash_fn/ranged_probe_fn.hpp \n+\t${pb_srcdir}/detail/hash_fn/ranged_probe_fn.hpp\n \n pb_headers4 = \\\n \t${pb_srcdir}/detail/hash_fn/sample_probe_fn.hpp \\\n@@ -358,7 +358,7 @@ pb_headers4 = \\\n \t${pb_srcdir}/detail/ov_tree_map_/insert_fn_imps.hpp \\\n \t${pb_srcdir}/detail/ov_tree_map_/iterators_fn_imps.hpp \\\n \t${pb_srcdir}/detail/ov_tree_map_/node_iterators.hpp \\\n-\t${pb_srcdir}/detail/ov_tree_map_/ov_tree_map_.hpp \n+\t${pb_srcdir}/detail/ov_tree_map_/ov_tree_map_.hpp\n \n pb_headers5 = \\\n \t${pb_srcdir}/detail/ov_tree_map_/policy_access_fn_imps.hpp \\\n@@ -400,7 +400,7 @@ pb_headers5 = \\\n \t${pb_srcdir}/detail/pat_trie_/update_fn_imps.hpp \\\n \t${pb_srcdir}/detail/priority_queue_base_dispatch.hpp \\\n \t${pb_srcdir}/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp \\\n-\t${pb_srcdir}/detail/rb_tree_map_/debug_fn_imps.hpp \n+\t${pb_srcdir}/detail/rb_tree_map_/debug_fn_imps.hpp\n \n pb_headers6 = \\\n \t${pb_srcdir}/detail/rb_tree_map_/erase_fn_imps.hpp \\\n@@ -442,7 +442,7 @@ pb_headers6 = \\\n \t${pb_srcdir}/detail/standard_policies.hpp \\\n \t${pb_srcdir}/detail/thin_heap_/constructors_destructor_fn_imps.hpp \\\n \t${pb_srcdir}/detail/thin_heap_/debug_fn_imps.hpp \\\n-\t${pb_srcdir}/detail/thin_heap_/erase_fn_imps.hpp \n+\t${pb_srcdir}/detail/thin_heap_/erase_fn_imps.hpp\n \n pb_headers7 = \\\n \t${pb_srcdir}/detail/thin_heap_/find_fn_imps.hpp \\\n@@ -468,11 +468,11 @@ pb_headers7 = \\\n \t${pb_srcdir}/detail/unordered_iterator/const_iterator.hpp \\\n \t${pb_srcdir}/detail/unordered_iterator/const_point_iterator.hpp \\\n \t${pb_srcdir}/detail/unordered_iterator/iterator.hpp \\\n-\t${pb_srcdir}/detail/unordered_iterator/point_iterator.hpp \n+\t${pb_srcdir}/detail/unordered_iterator/point_iterator.hpp\n \n \n ext_srcdir = ${glibcxx_srcdir}/include/ext\n-ext_builddir = ./ext \n+ext_builddir = ./ext\n ext_headers = \\\n \t${ext_srcdir}/algorithm \\\n \t${ext_srcdir}/atomicity.h \\\n@@ -639,15 +639,15 @@ c_compatibility_srcdir = ${glibcxx_srcdir}/include/c_compatibility\n c_compatibility_builddir = .\n \n if GLIBCXX_C_HEADERS_C_STD\n-c_compatibility_headers = \n+c_compatibility_headers =\n endif\n \n if GLIBCXX_C_HEADERS_C_GLOBAL\n c_compatibility_headers = \\\n \t${c_compatibility_srcdir}/complex.h \\\n \t${c_compatibility_srcdir}/fenv.h \\\n \t${c_compatibility_srcdir}/tgmath.h \\\n-\t${c_compatibility_srcdir}/stdatomic.h \n+\t${c_compatibility_srcdir}/stdatomic.h\n endif\n \n if GLIBCXX_C_HEADERS_C\n@@ -710,9 +710,8 @@ parallel_srcdir = ${glibcxx_srcdir}/include/parallel\n parallel_builddir = ./parallel\n if ENABLE_PARALLEL\n parallel_headers = \\\n-        ${parallel_srcdir}/algorithm \\\n-        ${parallel_srcdir}/algobase.h \\\n         ${parallel_srcdir}/algo.h \\\n+        ${parallel_srcdir}/algobase.h \\\n         ${parallel_srcdir}/algorithm \\\n         ${parallel_srcdir}/algorithmfwd.h \\\n         ${parallel_srcdir}/balanced_quicksort.h \\\n@@ -738,8 +737,8 @@ parallel_headers = \\\n         ${parallel_srcdir}/numericfwd.h \\\n         ${parallel_srcdir}/omp_loop.h \\\n         ${parallel_srcdir}/omp_loop_static.h \\\n-        ${parallel_srcdir}/parallel.h \\\n         ${parallel_srcdir}/par_loop.h \\\n+        ${parallel_srcdir}/parallel.h \\\n         ${parallel_srcdir}/partial_sum.h \\\n         ${parallel_srcdir}/partition.h \\\n         ${parallel_srcdir}/queue.h \\\n@@ -753,7 +752,7 @@ parallel_headers = \\\n         ${parallel_srcdir}/tags.h \\\n         ${parallel_srcdir}/types.h \\\n         ${parallel_srcdir}/unique_copy.h \\\n-        ${parallel_srcdir}/workstealing.h \n+        ${parallel_srcdir}/workstealing.h\n else\n parallel_headers =\n endif\n@@ -788,7 +787,7 @@ host_headers = \\\n \t${glibcxx_srcdir}/$(ERROR_CONSTANTS_SRCDIR)/error_constants.h \\\n \t${glibcxx_srcdir}/include/precompiled/stdc++.h \\\n \t${glibcxx_srcdir}/include/precompiled/stdtr1c++.h \\\n-\t${glibcxx_srcdir}/include/precompiled/extc++.h \n+\t${glibcxx_srcdir}/include/precompiled/extc++.h\n \n # Non-installed host_header files.\n COMPATIBILITY_H = config/abi/compatibility.h\n@@ -804,7 +803,7 @@ host_headers_extra = \\\n \t${host_builddir}/c++io.h \\\n \t${host_builddir}/c++locale.h \\\n \t${host_builddir}/messages_members.h \\\n-\t${host_builddir}/time_members.h \n+\t${host_builddir}/time_members.h\n \n thread_host_headers = \\\n \t${host_builddir}/gthr.h \\\n@@ -911,7 +910,7 @@ stamp-ext: ${ext_headers}\n stamp-pb:\n \t@if [ ! -d \"${pb_builddir}\" ]; then \\\n \t    mkdir -p ${pb_subdirs} ;\\\n-\tfi \n+\tfi\n \t@if [ ! -f stamp-pb ]; then \\\n \t    cd ${pb_builddir} && for h in ${pb_headers1}; do \\\n \t\tbuild_name=`echo $$h | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n@@ -1113,7 +1112,7 @@ ${pch3_output}: ${pch3_source} ${pch2_output}\n # the rest are taken from the original source tree.\n \n if GLIBCXX_HOSTED\n-install-data-local: install-headers \n+install-data-local: install-headers\n else\n install-data-local: install-freestanding-headers\n endif"}, {"sha": "366b7c97f5cd14a248434bd16739bc01dafe1372", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/147fc44bcd5fdc30c1518a433b42a896a6d42a54/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/147fc44bcd5fdc30c1518a433b42a896a6d42a54/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=147fc44bcd5fdc30c1518a433b42a896a6d42a54", "patch": "@@ -408,7 +408,7 @@ backward_headers = \\\n \t${backward_srcdir}/hash_set \\\n \t${backward_srcdir}/hash_fun.h \\\n \t${backward_srcdir}/hashtable.h \\\n-\t${backward_srcdir}/strstream \n+\t${backward_srcdir}/strstream\n \n pb_srcdir = ${glibcxx_srcdir}/include/ext/pb_ds\n pb_builddir = ./ext/pb_ds\n@@ -440,7 +440,7 @@ pb_subdirs = \\\n \n \n # The ability for make and the underlying host to deal with this\n-# unweildy list as one entire entity is not a sure thing, and may\n+# unwieldy list as one entire entity is not a sure thing, and may\n # cause build errors. Thus, split one list into many smaller\n # mini-lists, with the maximum size per mini-list of no more than 42.\n pb_headers1 = \\\n@@ -484,7 +484,7 @@ pb_headers1 = \\\n \t${pb_srcdir}/detail/binomial_heap_/debug_fn_imps.hpp \\\n \t${pb_srcdir}/detail/bin_search_tree_/bin_search_tree_.hpp \\\n \t${pb_srcdir}/detail/bin_search_tree_/cond_dtor_entry_dealtor.hpp \\\n-\t${pb_srcdir}/detail/bin_search_tree_/cond_key_dtor_entry_dealtor.hpp \n+\t${pb_srcdir}/detail/bin_search_tree_/cond_key_dtor_entry_dealtor.hpp\n \n pb_headers2 = \\\n \t${pb_srcdir}/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp \\\n@@ -526,7 +526,7 @@ pb_headers2 = \\\n \t${pb_srcdir}/detail/cc_hash_table_map_/resize_no_store_hash_fn_imps.hpp \\\n \t${pb_srcdir}/detail/cc_hash_table_map_/resize_store_hash_fn_imps.hpp \\\n \t${pb_srcdir}/detail/cc_hash_table_map_/size_fn_imps.hpp \\\n-\t${pb_srcdir}/detail/cc_hash_table_map_/standard_policies.hpp \n+\t${pb_srcdir}/detail/cc_hash_table_map_/standard_policies.hpp\n \n pb_headers3 = \\\n \t${pb_srcdir}/detail/cc_hash_table_map_/trace_fn_imps.hpp \\\n@@ -567,7 +567,7 @@ pb_headers3 = \\\n \t${pb_srcdir}/detail/hash_fn/probe_fn_base.hpp \\\n \t${pb_srcdir}/detail/hash_fn/quadratic_probe_fn_imp.hpp \\\n \t${pb_srcdir}/detail/hash_fn/ranged_hash_fn.hpp \\\n-\t${pb_srcdir}/detail/hash_fn/ranged_probe_fn.hpp \n+\t${pb_srcdir}/detail/hash_fn/ranged_probe_fn.hpp\n \n pb_headers4 = \\\n \t${pb_srcdir}/detail/hash_fn/sample_probe_fn.hpp \\\n@@ -610,7 +610,7 @@ pb_headers4 = \\\n \t${pb_srcdir}/detail/ov_tree_map_/insert_fn_imps.hpp \\\n \t${pb_srcdir}/detail/ov_tree_map_/iterators_fn_imps.hpp \\\n \t${pb_srcdir}/detail/ov_tree_map_/node_iterators.hpp \\\n-\t${pb_srcdir}/detail/ov_tree_map_/ov_tree_map_.hpp \n+\t${pb_srcdir}/detail/ov_tree_map_/ov_tree_map_.hpp\n \n pb_headers5 = \\\n \t${pb_srcdir}/detail/ov_tree_map_/policy_access_fn_imps.hpp \\\n@@ -652,7 +652,7 @@ pb_headers5 = \\\n \t${pb_srcdir}/detail/pat_trie_/update_fn_imps.hpp \\\n \t${pb_srcdir}/detail/priority_queue_base_dispatch.hpp \\\n \t${pb_srcdir}/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp \\\n-\t${pb_srcdir}/detail/rb_tree_map_/debug_fn_imps.hpp \n+\t${pb_srcdir}/detail/rb_tree_map_/debug_fn_imps.hpp\n \n pb_headers6 = \\\n \t${pb_srcdir}/detail/rb_tree_map_/erase_fn_imps.hpp \\\n@@ -694,7 +694,7 @@ pb_headers6 = \\\n \t${pb_srcdir}/detail/standard_policies.hpp \\\n \t${pb_srcdir}/detail/thin_heap_/constructors_destructor_fn_imps.hpp \\\n \t${pb_srcdir}/detail/thin_heap_/debug_fn_imps.hpp \\\n-\t${pb_srcdir}/detail/thin_heap_/erase_fn_imps.hpp \n+\t${pb_srcdir}/detail/thin_heap_/erase_fn_imps.hpp\n \n pb_headers7 = \\\n \t${pb_srcdir}/detail/thin_heap_/find_fn_imps.hpp \\\n@@ -720,10 +720,10 @@ pb_headers7 = \\\n \t${pb_srcdir}/detail/unordered_iterator/const_iterator.hpp \\\n \t${pb_srcdir}/detail/unordered_iterator/const_point_iterator.hpp \\\n \t${pb_srcdir}/detail/unordered_iterator/iterator.hpp \\\n-\t${pb_srcdir}/detail/unordered_iterator/point_iterator.hpp \n+\t${pb_srcdir}/detail/unordered_iterator/point_iterator.hpp\n \n ext_srcdir = ${glibcxx_srcdir}/include/ext\n-ext_builddir = ./ext \n+ext_builddir = ./ext\n ext_headers = \\\n \t${ext_srcdir}/algorithm \\\n \t${ext_srcdir}/atomicity.h \\\n@@ -892,7 +892,7 @@ c_compatibility_builddir = .\n @GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/complex.h \\\n @GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/fenv.h \\\n @GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/tgmath.h \\\n-@GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/stdatomic.h \n+@GLIBCXX_C_HEADERS_C_GLOBAL_TRUE@\t${c_compatibility_srcdir}/stdatomic.h\n \n @GLIBCXX_C_HEADERS_C_STD_TRUE@c_compatibility_headers = \n @GLIBCXX_C_HEADERS_C_TRUE@c_compatibility_headers = \\\n@@ -955,9 +955,8 @@ parallel_srcdir = ${glibcxx_srcdir}/include/parallel\n parallel_builddir = ./parallel\n @ENABLE_PARALLEL_FALSE@parallel_headers = \n @ENABLE_PARALLEL_TRUE@parallel_headers = \\\n-@ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/algorithm \\\n-@ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/algobase.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/algo.h \\\n+@ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/algobase.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/algorithm \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/algorithmfwd.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/balanced_quicksort.h \\\n@@ -983,8 +982,8 @@ parallel_builddir = ./parallel\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/numericfwd.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/omp_loop.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/omp_loop_static.h \\\n-@ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/parallel.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/par_loop.h \\\n+@ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/parallel.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/partial_sum.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/partition.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/queue.h \\\n@@ -998,7 +997,7 @@ parallel_builddir = ./parallel\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/tags.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/types.h \\\n @ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/unique_copy.h \\\n-@ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/workstealing.h \n+@ENABLE_PARALLEL_TRUE@        ${parallel_srcdir}/workstealing.h\n \n @GLIBCXX_C_HEADERS_EXTRA_FALSE@c_base_headers_extra = \n \n@@ -1022,7 +1021,7 @@ host_headers = \\\n \t${glibcxx_srcdir}/$(ERROR_CONSTANTS_SRCDIR)/error_constants.h \\\n \t${glibcxx_srcdir}/include/precompiled/stdc++.h \\\n \t${glibcxx_srcdir}/include/precompiled/stdtr1c++.h \\\n-\t${glibcxx_srcdir}/include/precompiled/extc++.h \n+\t${glibcxx_srcdir}/include/precompiled/extc++.h\n \n \n # Non-installed host_header files.\n@@ -1040,7 +1039,7 @@ host_headers_extra = \\\n \t${host_builddir}/c++io.h \\\n \t${host_builddir}/c++locale.h \\\n \t${host_builddir}/messages_members.h \\\n-\t${host_builddir}/time_members.h \n+\t${host_builddir}/time_members.h\n \n thread_host_headers = \\\n \t${host_builddir}/gthr.h \\\n@@ -1311,7 +1310,7 @@ stamp-ext: ${ext_headers}\n stamp-pb:\n \t@if [ ! -d \"${pb_builddir}\" ]; then \\\n \t    mkdir -p ${pb_subdirs} ;\\\n-\tfi \n+\tfi\n \t@if [ ! -f stamp-pb ]; then \\\n \t    cd ${pb_builddir} && for h in ${pb_headers1}; do \\\n \t\tbuild_name=`echo $$h | sed -e \"s|${pb_srcdir}|.|g\"` ;\\\n@@ -1503,7 +1502,7 @@ ${pch3_output}: ${pch3_source} ${pch2_output}\n # host_headers_extra are taken out of the build tree staging area;\n # the rest are taken from the original source tree.\n \n-@GLIBCXX_HOSTED_TRUE@install-data-local: install-headers \n+@GLIBCXX_HOSTED_TRUE@install-data-local: install-headers\n @GLIBCXX_HOSTED_FALSE@install-data-local: install-freestanding-headers\n \n # This is a subset of the full install-headers rule.  We only need <cstddef>,"}]}