{"sha": "07aff4e355ed0d2c6a360a4d587855f4cec530de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdhZmY0ZTM1NWVkMGQyYzZhMzYwYTRkNTg3ODU1ZjRjZWM1MzBkZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T11:38:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T11:38:17Z"}, "message": "[multiple changes]\n\n2015-02-20  Yannick Moy  <moy@adacore.com>\n\n\t* sem_prag.ads: Minor typo in comment.\n\n2015-02-20  Pascal Obry  <obry@adacore.com>\n\n\t* s-osprim-mingw.adb: Fix Get_Base_Time parameter mode.\n\n2015-02-20  Vincent Celier  <celier@adacore.com>\n\n\t* makeutl.adb (Get_Directories.Add_Dir): Add a directory only\n\tif it exists.\n\n2015-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_eval.ads: Minor reformatting.\n\n2015-02-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* freeze.adb (Size_Known): Do not set the packed size for\n\tindependent type or component.\n\t(Freeze_Array_Type): Check for Independent[_Components] with packing\n\tor explicit component size clause.\n\t* gnat1drv.adb (Post_Compilation_Validation_Checks): Do the validation\n\tof independence pragmas only for non-GCC back-ends.\n\t* sem_ch13.adb (Initialize): Likewise for the initialization.\n\t* sem_prag.adb (Record_Independence_Check): New procedure to record an\n\tindependence check in the table.\n\t(Analyze_Pragma): Use it throughout instead of doing it manually.\n\t* gcc-interface/decl.c (gnat_to_gnu_field): Add support for\n\tindependent type or component.\n\n2015-02-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* adaint.c (__gnat_readdir): For Solaris, use 64 bit variants of\n\tstruct direct and readdir. This is required for NFS filesystems\n\tmounted from servers that use 64-bit cookies.\n\n2015-02-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Subprogram_Instantiaion): New subprogram\n\tBuild_Subprogram_Renaming, to create renaming of subprogram\n\tinstance in the the declaration of the wrapper package rather\n\tthan in its body, so that it is available for analysis of aspects\n\tpropagated from generic to instantiation.\n\t(Check_Mismatch): An actual for a formal package that is an\n\tincomplete type matches a formal type that is incomplete.\n\t(Instantiate_Package_Body): Move code that builds subprogram\n\trenaming to Analyze_Subprogram_Instantiation.\n\t(Instantiate_Type): The generated subtype is a limited view if\n\tthe actual is a limited view.\n\t(Load_Parent_Of_Generic): Retrieve instance declaration from\n\tits new position within wrapper package.\n\n2015-02-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-parame-vxworks.adb, s-os_lib.ads: Update comments.\n\n2015-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* s-osinte-vxworks.ads (To_Timespec): Add comment about the\n\tissue of negative arguments.\n\nFrom-SVN: r220850", "tree": {"sha": "f949f270940fedf57d0de3d633bad5211ddc494e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f949f270940fedf57d0de3d633bad5211ddc494e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07aff4e355ed0d2c6a360a4d587855f4cec530de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07aff4e355ed0d2c6a360a4d587855f4cec530de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07aff4e355ed0d2c6a360a4d587855f4cec530de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07aff4e355ed0d2c6a360a4d587855f4cec530de/comments", "author": null, "committer": null, "parents": [{"sha": "6b9861b12d076b262b86c69b1b5c30d779554384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b9861b12d076b262b86c69b1b5c30d779554384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b9861b12d076b262b86c69b1b5c30d779554384"}], "stats": {"total": 401, "additions": 314, "deletions": 87}, "files": [{"sha": "c06fb21dadd3429cb6b035455019b7c3f99c6e89", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -1,3 +1,66 @@\n+2015-02-20  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.ads: Minor typo in comment.\n+\n+2015-02-20  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-osprim-mingw.adb: Fix Get_Base_Time parameter mode.\n+\n+2015-02-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeutl.adb (Get_Directories.Add_Dir): Add a directory only\n+\tif it exists.\n+\n+2015-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_eval.ads: Minor reformatting.\n+\n+2015-02-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* freeze.adb (Size_Known): Do not set the packed size for\n+\tindependent type or component.\n+\t(Freeze_Array_Type): Check for Independent[_Components] with packing\n+\tor explicit component size clause.\n+\t* gnat1drv.adb (Post_Compilation_Validation_Checks): Do the validation\n+\tof independence pragmas only for non-GCC back-ends.\n+\t* sem_ch13.adb (Initialize): Likewise for the initialization.\n+\t* sem_prag.adb (Record_Independence_Check): New procedure to record an\n+\tindependence check in the table.\n+\t(Analyze_Pragma): Use it throughout instead of doing it manually.\n+\t* gcc-interface/decl.c (gnat_to_gnu_field): Add support for\n+\tindependent type or component.\n+\n+2015-02-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* adaint.c (__gnat_readdir): For Solaris, use 64 bit variants of\n+\tstruct direct and readdir. This is required for NFS filesystems\n+\tmounted from servers that use 64-bit cookies.\n+\n+2015-02-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Subprogram_Instantiaion): New subprogram\n+\tBuild_Subprogram_Renaming, to create renaming of subprogram\n+\tinstance in the the declaration of the wrapper package rather\n+\tthan in its body, so that it is available for analysis of aspects\n+\tpropagated from generic to instantiation.\n+\t(Check_Mismatch): An actual for a formal package that is an\n+\tincomplete type matches a formal type that is incomplete.\n+\t(Instantiate_Package_Body): Move code that builds subprogram\n+\trenaming to Analyze_Subprogram_Instantiation.\n+\t(Instantiate_Type): The generated subtype is a limited view if\n+\tthe actual is a limited view.\n+\t(Load_Parent_Of_Generic): Retrieve instance declaration from\n+\tits new position within wrapper package.\n+\n+2015-02-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-parame-vxworks.adb, s-os_lib.ads: Update comments.\n+\n+2015-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-osinte-vxworks.ads (To_Timespec): Add comment about the\n+\tissue of negative arguments.\n+\n 2015-02-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat1drv.adb: Minor consistency fix."}, {"sha": "d9bccfe2fc1902ad159d2955e6b02db07df5c720", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2014, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2015, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -297,7 +297,8 @@ int max_path_len = GNAT_MAX_PATH_LEN;\n int __gnat_use_acl = 1;\n \n /* The following macro HAVE_READDIR_R should be defined if the\n-   system provides the routine readdir_r.  */\n+   system provides the routine readdir_r.\n+   ... but we never define it anywhere???  */\n #undef HAVE_READDIR_R\n \f\n #define MAYBE_TO_PTR32(argv) argv\n@@ -1223,6 +1224,13 @@ DIR* __gnat_opendir (char *name)\n /* Read the next entry in a directory.  The returned string points somewhere\n    in the buffer.  */\n \n+#if defined (sun) && defined (__SVR4)\n+/* For Solaris, be sure to use the 64-bit version, otherwise NFS reads may\n+   fail with EOVERFLOW if the server uses 64-bit cookies.  */\n+#define dirent dirent64\n+#define readdir readdir64\n+#endif\n+\n char *\n __gnat_readdir (DIR *dirp, char *buffer, int *len)\n {"}, {"sha": "aa3c52bc99f6ddfbe821b0cc507166331b9d5f67", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 64, "deletions": 3, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -944,12 +944,15 @@ package body Freeze is\n                      Packed_Size_Known := False;\n                   end if;\n \n-                  --  We do not know the packed size if we have a by reference\n-                  --  type, or an atomic type or an atomic component, or an\n-                  --  aliased component (because packing does not touch these).\n+                  --  We do not know the packed size if we have an atomic type\n+                  --  or component, or an independent type or component, or a\n+                  --  by reference type or aliased component (because packing\n+                  --  does not touch these).\n \n                   if Is_Atomic (Ctyp)\n                     or else Is_Atomic (Comp)\n+                    or else Is_Independent (Ctyp)\n+                    or else Is_Independent (Comp)\n                     or else Is_By_Reference_Type (Ctyp)\n                     or else Is_Aliased (Comp)\n                   then\n@@ -2500,6 +2503,64 @@ package body Freeze is\n                end Alias_Atomic_Check;\n             end if;\n \n+            --  Check for Independent_Components/Independent with unsuitable\n+            --  packing or explicit component size clause given.\n+\n+            if (Has_Independent_Components (Arr) or else Is_Independent (Ctyp))\n+              and then\n+                (Has_Component_Size_Clause (Arr) or else Is_Packed (Arr))\n+            then\n+               begin\n+                  --  If object size of component type isn't known, we cannot\n+                  --  be sure so we defer to the back end.\n+\n+                  if not Known_Static_Esize (Ctyp) then\n+                     null;\n+\n+                  --  Case where component size has no effect. First check for\n+                  --  object size of component type multiple of the storage\n+                  --  unit size.\n+\n+                  elsif Esize (Ctyp) mod System_Storage_Unit = 0\n+\n+                    --  OK in both packing case and component size case if RM\n+                    --  size is known and multiple of the storage unit size.\n+\n+                    and then\n+                      ((Known_Static_RM_Size (Ctyp)\n+                         and then RM_Size (Ctyp) mod System_Storage_Unit = 0)\n+\n+                        --  Or if we have an explicit component size clause and\n+                        --  the component size is larger than the object size.\n+\n+                        or else\n+                          (Has_Component_Size_Clause (Arr)\n+                            and then Component_Size (Arr) >= Esize (Ctyp)))\n+                  then\n+                     null;\n+\n+                  else\n+                     if Has_Component_Size_Clause (Arr) then\n+                        Clause :=\n+                          Get_Attribute_Definition_Clause\n+                            (FS, Attribute_Component_Size);\n+\n+                        Error_Msg_N\n+                          (\"incorrect component size for \"\n+                           & \"independent components\", Clause);\n+                        Error_Msg_Uint_1 := Esize (Ctyp);\n+                        Error_Msg_N\n+                          (\"\\minimum allowed is^\", Clause);\n+\n+                     else\n+                        Error_Msg_N\n+                          (\"cannot pack independent components\",\n+                           Get_Rep_Pragma (FS, Name_Pack));\n+                     end if;\n+                  end if;\n+               end;\n+            end if;\n+\n             --  Warn for case of atomic type\n \n             Clause := Get_Rep_Pragma (FS, Name_Atomic);"}, {"sha": "c0ca2f3201394032bcb264f2826dd02f8354dfe5", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -6427,17 +6427,22 @@ gnat_to_gnu_field (Entity_Id gnat_field, tree gnu_record_type, int packed,\n \t\t   bool definition, bool debug_info_p)\n {\n   const Entity_Id gnat_field_type = Etype (gnat_field);\n-  tree gnu_field_type = gnat_to_gnu_type (gnat_field_type);\n-  tree gnu_field_id = get_entity_name (gnat_field);\n-  tree gnu_field, gnu_size, gnu_pos;\n-  bool is_aliased\n+  const bool is_aliased\n     = Is_Aliased (gnat_field);\n-  bool is_atomic\n+  const bool is_atomic\n     = (Is_Atomic (gnat_field) || Is_Atomic (gnat_field_type));\n-  bool is_volatile\n+  const bool is_independent\n+    = (Is_Independent (gnat_field) || Is_Independent (gnat_field_type));\n+  const bool is_volatile\n     = (Treat_As_Volatile (gnat_field) || Treat_As_Volatile (gnat_field_type));\n-  bool needs_strict_alignment\n-    = (is_aliased || is_volatile || Strict_Alignment (gnat_field_type));\n+  const bool needs_strict_alignment\n+    = (is_aliased\n+       || is_independent\n+       || is_volatile\n+       || Strict_Alignment (gnat_field_type));\n+  tree gnu_field_type = gnat_to_gnu_type (gnat_field_type);\n+  tree gnu_field_id = get_entity_name (gnat_field);\n+  tree gnu_field, gnu_size, gnu_pos;\n \n   /* If this field requires strict alignment, we cannot pack it because\n      it would very likely be under-aligned in the record.  */\n@@ -6555,6 +6560,8 @@ gnat_to_gnu_field (Entity_Id gnat_field, tree gnu_record_type, int packed,\n \t\ts = \"position of atomic field& must be multiple of ^ bits\";\n \t      else if (is_aliased)\n \t\ts = \"position of aliased field& must be multiple of ^ bits\";\n+\t      else if (is_independent)\n+\t\ts = \"position of independent field& must be multiple of ^ bits\";\n \t      else if (is_volatile)\n \t\ts = \"position of volatile field& must be multiple of ^ bits\";\n \t      else if (Strict_Alignment (gnat_field_type))\n@@ -6583,6 +6590,8 @@ gnat_to_gnu_field (Entity_Id gnat_field, tree gnu_record_type, int packed,\n \t\t    s = \"size of atomic field& must be ^ bits\";\n \t\t  else if (is_aliased)\n \t\t    s = \"size of aliased field& must be ^ bits\";\n+\t\t  else if (is_independent)\n+\t\t    s = \"size of independent field& must be at least ^ bits\";\n \t\t  else if (is_volatile)\n \t\t    s = \"size of volatile field& must be at least ^ bits\";\n \t\t  else if (Strict_Alignment (gnat_field_type))\n@@ -6602,7 +6611,10 @@ gnat_to_gnu_field (Entity_Id gnat_field, tree gnu_record_type, int packed,\n \t\t{\n \t\t  const char *s;\n \n-\t\t  if (is_volatile)\n+\t\t  if (is_independent)\n+\t\t    s = \"size of independent field& must be multiple of\"\n+\t\t\t\" Storage_Unit\";\n+\t\t  else if (is_volatile)\n \t\t    s = \"size of volatile field& must be multiple of\"\n \t\t\t\" Storage_Unit\";\n \t\t  else if (Strict_Alignment (gnat_field_type))"}, {"sha": "f210fcbb289ae215b1718d66122fde457b229593", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -833,10 +833,14 @@ procedure Gnat1drv is\n \n       Sem_Ch13.Validate_Address_Clauses;\n \n-      --  Validate independence pragmas (again using values annotated by\n-      --  the back end for component layout etc.)\n+      --  Validate independence pragmas (again using values annotated by the\n+      --  back end for component layout where possible) but only for non-GCC\n+      --  back ends, as this is done a priori for GCC back ends.\n+\n+      if VM_Target /= No_VM or else AAMP_On_Target then\n+         Sem_Ch13.Validate_Independence;\n+      end if;\n \n-      Sem_Ch13.Validate_Independence;\n    end Post_Compilation_Validation_Checks;\n \n --  Start of processing for Gnat1drv"}, {"sha": "997cbf003ac268968489f181a78e5590a19b8117", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -897,7 +897,9 @@ package body Makeutl is\n          Add_It : Boolean := True;\n \n       begin\n-         if Value /= No_Path then\n+         if Value /= No_Path\n+           and then Is_Directory (Get_Name_String (Value))\n+         then\n             for Index in 1 .. Directories.Last loop\n                if Directories.Table (Index) = Value then\n                   Add_It := False;"}, {"sha": "abffa531aa845ce1342598d1c2fa682f7481a167", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -910,7 +910,7 @@ package System.OS_Lib is\n    --     On other Unix-like systems: fork, followed in the child\n    --     process by execv.\n \n-   --     On vxworks, nucleus, and RTX, spawning of processes is not supported\n+   --     On vxworks, spawning of processes is not supported\n \n    --  For details, look at the functions __gnat_portable_spawn and\n    --  __gnat_portable_no_block_spawn in adaint.c."}, {"sha": "e398084eac9a25452994e34b2f1314d22b2086ce", "filename": "gcc/ada/s-osinte-vxworks.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fs-osinte-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fs-osinte-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.ads?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -7,7 +7,7 @@\n --                                   S p e c                                --\n --                                                                          --\n --            Copyright (C) 1991-1994, Florida State University             --\n---          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -252,6 +252,12 @@ package System.OS_Interface is\n \n    function To_Timespec (D : Duration) return timespec;\n    pragma Inline (To_Timespec);\n+   --  Convert a Duration value to a timespec value. Note that in VxWorks,\n+   --  timespec is always non-negative (since time_t is defined above as\n+   --  unsigned long). This means that there is a potential problem if a\n+   --  negative argument is passed for D. However, in actual usage, the\n+   --  value of the input argument D is always non-negative, so no problem\n+   --  arises in practice.\n \n    function To_Clock_Ticks (D : Duration) return int;\n    --  Convert a duration value (in seconds) into clock ticks"}, {"sha": "13c5354b0d72b1f3bc282c38775cb83e7ccb9d0c", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -90,7 +90,7 @@ package body System.OS_Primitives is\n    Signature : Signature_Type := 0;\n    pragma Atomic (Signature);\n \n-   procedure Get_Base_Time (Data : out Clock_Data);\n+   procedure Get_Base_Time (Data : in out Clock_Data);\n    --  Retrieve the base time and base ticks. These values will be used by\n    --  clock to compute the current time by adding to it a fraction of the\n    --  performance counter. This is for the implementation of a high-resolution\n@@ -166,7 +166,7 @@ package body System.OS_Primitives is\n    -- Get_Base_Time --\n    -------------------\n \n-   procedure Get_Base_Time (Data : out Clock_Data) is\n+   procedure Get_Base_Time (Data : in out Clock_Data) is\n \n       --  The resolution for GetSystemTime is 1 millisecond\n "}, {"sha": "1fe2288da5b7a6d6b6da9823f667882ead0b6aca", "filename": "gcc/ada/s-parame-vxworks.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fs-parame-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fs-parame-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.adb?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1995-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Version used on all VxWorks, Nucleus, and RTX RTSS targets\n+--  Version used on all VxWorks targets\n \n package body System.Parameters is\n "}, {"sha": "20b10c9db015947d5027c4cdcd0537df5ac36477", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 101, "deletions": 52, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -4603,7 +4603,13 @@ package body Sem_Ch12 is\n       Gen_Decl         : Node_Id;\n       Pack_Id          : Entity_Id;\n       Parent_Installed : Boolean := False;\n-      Renaming_List    : List_Id;\n+\n+      Renaming_List : List_Id;\n+      --  The list of declarations that link formals and actuals of the\n+      --  instance. These are subtype declarations for formal types, and\n+      --  renaming declarations for other formals. The subprogram declaration\n+      --  for the instance is then appended to the list, and the last item on\n+      --  the list is the renaming declaration for the instance.\n \n       procedure Analyze_Instance_And_Renamings;\n       --  The instance must be analyzed in a context that includes the mappings\n@@ -4612,6 +4618,14 @@ package body Sem_Ch12 is\n       --  package. The subprogram instance is simply an alias for the internal\n       --  subprogram, declared in the current scope.\n \n+      procedure Build_Subprogram_Renaming;\n+      --  If the subprogram is recursive, there are occurrences of the name of\n+      --  the generic within the body, which must resolve to the current\n+      --  instance. We add a renaming declaration after the declaration, which\n+      --  is available in the instance body, as well as in the analysis of\n+      --  aspects that appear in the generic. This renaming declaration is\n+      --  inserted after the instance declaration which it renames.\n+\n       ------------------------------------\n       -- Analyze_Instance_And_Renamings --\n       ------------------------------------\n@@ -4766,6 +4780,52 @@ package body Sem_Ch12 is\n          end if;\n       end Analyze_Instance_And_Renamings;\n \n+      -------------------------------\n+      -- Build_Subprogram_Renaming --\n+      -------------------------------\n+\n+      procedure Build_Subprogram_Renaming is\n+         Renaming_Decl : Node_Id;\n+         Unit_Renaming : Node_Id;\n+\n+      begin\n+         Unit_Renaming :=\n+           Make_Subprogram_Renaming_Declaration (Loc,\n+             Specification =>\n+               Copy_Generic_Node\n+                 (Specification (Original_Node (Gen_Decl)),\n+                  Empty,\n+                  Instantiating => True),\n+             Name          => New_Occurrence_Of (Anon_Id, Loc));\n+\n+         --  The generic may be a a child unit. The renaming needs an\n+         --  identifier with the proper name.\n+\n+         Set_Defining_Unit_Name (Specification (Unit_Renaming),\n+            Make_Defining_Identifier (Loc, Chars (Gen_Unit)));\n+\n+         --  If there is a formal subprogram with the same name as the unit\n+         --  itself, do not add this renaming declaration, to prevent\n+         --  ambiguities when there is a call with that name in the body.\n+         --  This is a partial and ugly fix for one ACATS test. ???\n+\n+         Renaming_Decl := First (Renaming_List);\n+         while Present (Renaming_Decl) loop\n+            if Nkind (Renaming_Decl) = N_Subprogram_Renaming_Declaration\n+              and then\n+                Chars (Defining_Entity (Renaming_Decl)) = Chars (Gen_Unit)\n+            then\n+               exit;\n+            end if;\n+\n+            Next (Renaming_Decl);\n+         end loop;\n+\n+         if No (Renaming_Decl) then\n+            Append  (Unit_Renaming, Renaming_List);\n+         end if;\n+      end Build_Subprogram_Renaming;\n+\n       --  Local variables\n \n       Save_IPSM : constant Boolean := Ignore_Pragma_SPARK_Mode;\n@@ -4931,6 +4991,7 @@ package body Sem_Ch12 is\n          end if;\n \n          Append (Act_Decl, Renaming_List);\n+         Build_Subprogram_Renaming;\n          Analyze_Instance_And_Renamings;\n \n          --  If the generic is marked Import (Intrinsic), then so is the\n@@ -5515,6 +5576,12 @@ package body Sem_Ch12 is\n          then\n             null;\n \n+         --  Ada 2012: If both formal and actual are incomplete types they\n+         --  are conformant.\n+\n+         elsif Is_Incomplete_Type (E1) and then Is_Incomplete_Type (E2) then\n+            null;\n+\n          elsif B then\n             Error_Msg_NE\n               (\"actual for & in actual instance does not match formal\",\n@@ -10686,14 +10753,11 @@ package body Sem_Ch12 is\n                         Defining_Unit_Name (Specification (Act_Decl));\n       Pack_Id       : constant Entity_Id  :=\n                         Defining_Unit_Name (Parent (Act_Decl));\n-      Decls         : List_Id;\n       Gen_Body      : Node_Id;\n       Gen_Body_Id   : Node_Id;\n       Act_Body      : Node_Id;\n       Pack_Body     : Node_Id;\n-      Prev_Formal   : Entity_Id;\n       Ret_Expr      : Node_Id;\n-      Unit_Renaming : Node_Id;\n \n       Parent_Installed : Boolean := False;\n \n@@ -10823,47 +10887,14 @@ package body Sem_Ch12 is\n             Parent_Installed := True;\n          end if;\n \n-         --  Inside its body, a reference to the generic unit is a reference\n-         --  to the instance. The corresponding renaming is the first\n-         --  declaration in the body.\n-\n-         Unit_Renaming :=\n-           Make_Subprogram_Renaming_Declaration (Loc,\n-             Specification =>\n-               Copy_Generic_Node (\n-                 Specification (Original_Node (Gen_Body)),\n-                 Empty,\n-                 Instantiating => True),\n-             Name => New_Occurrence_Of (Anon_Id, Loc));\n-\n-         --  If there is a formal subprogram with the same name as the unit\n-         --  itself, do not add this renaming declaration. This is a temporary\n-         --  fix for one ACATS test. ???\n-\n-         Prev_Formal := First_Entity (Pack_Id);\n-         while Present (Prev_Formal) loop\n-            if Chars (Prev_Formal) = Chars (Gen_Unit)\n-              and then Is_Overloadable (Prev_Formal)\n-            then\n-               exit;\n-            end if;\n-\n-            Next_Entity (Prev_Formal);\n-         end loop;\n-\n-         if Present (Prev_Formal) then\n-            Decls :=  New_List (Act_Body);\n-         else\n-            Decls :=  New_List (Unit_Renaming, Act_Body);\n-         end if;\n-\n-         --  The subprogram body is placed in the body of a dummy package body,\n-         --  whose spec contains the subprogram declaration as well as the\n-         --  renaming declarations for the generic parameters.\n+         --  Subprogram body is placed in the body of wrapper package,\n+         --  whose spec contains the subprogram declaration as well as\n+         --  the renaming declarations for the generic parameters.\n \n-         Pack_Body := Make_Package_Body (Loc,\n-           Defining_Unit_Name => New_Copy (Pack_Id),\n-           Declarations       => Decls);\n+         Pack_Body :=\n+           Make_Package_Body (Loc,\n+             Defining_Unit_Name => New_Copy (Pack_Id),\n+             Declarations       => New_List (Act_Body));\n \n          Set_Corresponding_Spec (Pack_Body, Pack_Id);\n \n@@ -12297,6 +12328,14 @@ package body Sem_Ch12 is\n          Set_Has_Private_View (Subtype_Indication (Decl_Node));\n       end if;\n \n+      --  In Ada 2012 the actual may be a limited view. Indicate that\n+      --  the local subtype must be treated as such.\n+\n+      if From_Limited_With (Act_T) then\n+         Set_Ekind (Subt, E_Incomplete_Subtype);\n+         Set_From_Limited_With (Subt);\n+      end if;\n+\n       Decl_Nodes := New_List (Decl_Node);\n \n       --  Flag actual derived types so their elaboration produces the\n@@ -12666,14 +12705,24 @@ package body Sem_Ch12 is\n                            --  Subprogram instance\n \n                            else\n-                              --  The instance_spec is the wrapper package,\n-                              --  and the subprogram declaration is the last\n-                              --  declaration in the wrapper.\n-\n-                              Info.Act_Decl :=\n-                                Last\n-                                  (Visible_Declarations\n-                                    (Specification (Info.Act_Decl)));\n+                              --  The instance_spec is in the wrapper package,\n+                              --  usually followed by its local renaming\n+                              --  declaration. See Build_Subprogram_Renaming\n+                              --  for details.\n+\n+                              declare\n+                                 Decl : Node_Id :=\n+                                          (Last (Visible_Declarations\n+                                            (Specification (Info.Act_Decl))));\n+                              begin\n+                                 if Nkind (Decl) =\n+                                      N_Subprogram_Renaming_Declaration\n+                                 then\n+                                    Decl := Prev (Decl);\n+                                 end if;\n+\n+                                 Info.Act_Decl := Decl;\n+                              end;\n \n                               Instantiate_Subprogram_Body\n                                 (Info, Body_Optional => True);"}, {"sha": "f717523cdf2a72d151a3ea4cd444132f6196b23d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -11048,8 +11048,11 @@ package body Sem_Ch13 is\n    procedure Initialize is\n    begin\n       Address_Clause_Checks.Init;\n-      Independence_Checks.Init;\n       Unchecked_Conversions.Init;\n+\n+      if VM_Target /= No_VM or else AAMP_On_Target then\n+         Independence_Checks.Init;\n+      end if;\n    end Initialize;\n \n    ---------------------------"}, {"sha": "7f206e71d0c40c8c7ff76e39671b36b2ff39d158", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -248,7 +248,7 @@ package Sem_Eval is\n    --  Determines whether a subtype fits the definition of an Ada static\n    --  subtype as given in (RM 4.9(26)) with the additional check that neither\n    --  bound raises constraint error (meaning that Expr_Value[_R|S] can be used\n-   --  on these bounds. Important note: This check does not include the Ada\n+   --  on these bounds). Important note: This check does not include the Ada\n    --  2012 case of a non-static predicate which results in an otherwise static\n    --  subtype being non-static. Such a subtype will return True for this test,\n    --  so if the distinction is important, the caller must deal with this."}, {"sha": "98b825ab0e39ae484ec471bc56a08ff9f827e7ba", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -3216,6 +3216,10 @@ package body Sem_Prag is\n       --  Suppress_Case is True for the Suppress case, and False for the\n       --  Unsuppress case.\n \n+      procedure Record_Independence_Check (N : Node_Id; E : Entity_Id);\n+      --  Subsidiary to the analysis of pragmas Independent[_Components].\n+      --  Record such a pragma N applied to entity E for future checks.\n+\n       procedure Set_Exported (E : Entity_Id; Arg : Node_Id);\n       --  This procedure sets the Is_Exported flag for the given entity,\n       --  checking that the entity was not previously imported. Arg is\n@@ -6232,7 +6236,7 @@ package body Sem_Prag is\n                Set_Is_Independent (Base_Type (E));\n \n                if Prag_Id = Pragma_Independent then\n-                  Independence_Checks.Append ((N, Base_Type (E)));\n+                  Record_Independence_Check (N, Base_Type (E));\n                end if;\n             end if;\n \n@@ -6307,7 +6311,7 @@ package body Sem_Prag is\n                Set_Is_Independent (E);\n \n                if Prag_Id = Pragma_Independent then\n-                  Independence_Checks.Append ((N, E));\n+                  Record_Independence_Check (N, E);\n                end if;\n             end if;\n \n@@ -9194,6 +9198,21 @@ package body Sem_Prag is\n          end if;\n       end Process_Suppress_Unsuppress;\n \n+      -------------------------------\n+      -- Record_Independence_Check --\n+      -------------------------------\n+\n+      procedure Record_Independence_Check (N : Node_Id; E : Entity_Id) is\n+      begin\n+         --  For GCC back ends the validation is done a priori\n+\n+         if VM_Target = No_VM and then not AAMP_On_Target then\n+            return;\n+         end if;\n+\n+         Independence_Checks.Append ((N, E));\n+      end Record_Independence_Check;\n+\n       ------------------\n       -- Set_Exported --\n       ------------------\n@@ -14995,7 +15014,7 @@ package body Sem_Prag is\n               and then (Is_Array_Type (E) or else Is_Record_Type (E))\n             then\n                Set_Has_Independent_Components (Base_Type (E));\n-               Independence_Checks.Append ((N, Base_Type (E)));\n+               Record_Independence_Check (N, Base_Type (E));\n \n                --  For record type, set all components independent\n \n@@ -15013,7 +15032,7 @@ package body Sem_Prag is\n                                            N_Constrained_Array_Definition\n             then\n                Set_Has_Independent_Components (E);\n-               Independence_Checks.Append ((N, E));\n+               Record_Independence_Check (N, E);\n \n             else\n                Error_Pragma_Arg (\"inappropriate entity for pragma%\", Arg1);"}, {"sha": "e5790985aeb58008336b75c4bf55e86833bba2ba", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07aff4e355ed0d2c6a360a4d587855f4cec530de/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=07aff4e355ed0d2c6a360a4d587855f4cec530de", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -244,7 +244,7 @@ package Sem_Prag is\n    --  Returns True if Nam is one of the names recognized as a valid assertion\n    --  kind by the Assertion_Policy pragma. Note that the 'Class cases are\n    --  represented by the corresponding special names Name_uPre, Name_uPost,\n-   --  Name_uInviarnat, and Name_uType_Invariant (_Pre, _Post, _Invariant,\n+   --  Name_uInvariant, and Name_uType_Invariant (_Pre, _Post, _Invariant,\n    --  and _Type_Invariant).\n \n    procedure Make_Aspect_For_PPC_In_Gen_Sub_Decl (Decl : Node_Id);"}]}