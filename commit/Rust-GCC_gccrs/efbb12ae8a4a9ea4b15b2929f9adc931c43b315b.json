{"sha": "efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZiYjEyYWU4YTRhOWVhNGIxNWIyOTI5ZjlhZGM5MzFjNDNiMzE1Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-28T18:35:53Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-28T18:35:53Z"}, "message": "re PR go/48312 (http, rpc, websocket tests hang on Solaris 2/x86)\n\n\tPR go/48312\nFix fd_select.go for changes in FD handling.\n\nWe have to wake up the goroutine waiting in select each time\nwe change the set of descriptors we are waiting for, unlike\nepoll.\n\nFrom-SVN: r171623", "tree": {"sha": "43c082d15a2d77ef81b25c289de580e1ec27ab56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43c082d15a2d77ef81b25c289de580e1ec27ab56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/comments", "author": null, "committer": null, "parents": [{"sha": "520af9ec9a673351b046e06e91d8f66fa70341d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520af9ec9a673351b046e06e91d8f66fa70341d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/520af9ec9a673351b046e06e91d8f66fa70341d2"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "c8440ae484a9c5e5fcdb9b4ced35464d7f8c5283", "filename": "libgo/go/net/fd.go", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Ffd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Ffd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffd.go?ref=efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "patch": "@@ -122,9 +122,13 @@ func (s *pollServer) AddFD(fd *netFD, mode int) {\n \t\tdoWakeup = true\n \t}\n \n-\tif err := s.poll.AddFD(intfd, mode, false); err != nil {\n+\twake, err := s.poll.AddFD(intfd, mode, false)\n+\tif err != nil {\n \t\tpanic(\"pollServer AddFD \" + err.String())\n \t}\n+\tif wake {\n+\t\tdoWakeup = true\n+\t}\n \n \ts.Unlock()\n "}, {"sha": "dcf65c014d58009feed566d1e9a3c1597165ca54", "filename": "libgo/go/net/fd_linux.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Ffd_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Ffd_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffd_linux.go?ref=efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "patch": "@@ -47,7 +47,7 @@ func newpollster() (p *pollster, err os.Error) {\n \treturn p, nil\n }\n \n-func (p *pollster) AddFD(fd int, mode int, repeat bool) os.Error {\n+func (p *pollster) AddFD(fd int, mode int, repeat bool) (bool, os.Error) {\n \t// pollServer is locked.\n \n \tvar already bool\n@@ -69,10 +69,10 @@ func (p *pollster) AddFD(fd int, mode int, repeat bool) os.Error {\n \t\top = syscall.EPOLL_CTL_ADD\n \t}\n \tif e := syscall.EpollCtl(p.epfd, op, fd, &p.ctlEvent); e != 0 {\n-\t\treturn os.NewSyscallError(\"epoll_ctl\", e)\n+\t\treturn false, os.NewSyscallError(\"epoll_ctl\", e)\n \t}\n \tp.events[fd] = p.ctlEvent.Events\n-\treturn nil\n+\treturn false, nil\n }\n \n func (p *pollster) StopWaiting(fd int, bits uint) {"}, {"sha": "e9c68ab2cccf30fc026ba2b33ea27d0e7b9ded6b", "filename": "libgo/go/net/fd_select.go", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Ffd_select.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Ffd_select.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffd_select.go?ref=efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "patch": "@@ -32,7 +32,9 @@ func newpollster() (p *pollster, err os.Error) {\n \treturn p, nil\n }\n \n-func (p *pollster) AddFD(fd int, mode int, repeat bool) os.Error {\n+func (p *pollster) AddFD(fd int, mode int, repeat bool) (bool, os.Error) {\n+\t// pollServer is locked.\n+\n \tif mode == 'r' {\n \t\tsyscall.FDSet(fd, p.readFds)\n \t} else {\n@@ -47,10 +49,12 @@ func (p *pollster) AddFD(fd int, mode int, repeat bool) os.Error {\n \t\tp.maxFd = fd\n \t}\n \n-\treturn nil\n+\treturn true, nil\n }\n \n func (p *pollster) DelFD(fd int, mode int) {\n+\t// pollServer is locked.\n+\n \tif mode == 'r' {\n \t\tif !syscall.FDIsSet(fd, p.readFds) {\n \t\t\tprint(\"Select unexpected fd=\", fd, \" for read\\n\")\n@@ -71,7 +75,7 @@ func (p *pollster) DelFD(fd int, mode int) {\n \t// We don't worry about maxFd here.\n }\n \n-func (p *pollster) WaitFD(nsec int64) (fd int, mode int, err os.Error) {\n+func (p *pollster) WaitFD(s *pollServer, nsec int64) (fd int, mode int, err os.Error) {\n \tif p.nReady == 0 {\n \t\tvar timeout *syscall.Timeval\n \t\tvar tv syscall.Timeval\n@@ -89,7 +93,10 @@ func (p *pollster) WaitFD(nsec int64) (fd int, mode int, err os.Error) {\n \t\t\ttmpReadFds = *p.readFds\n \t\t\ttmpWriteFds = *p.writeFds\n \n+\t\t\ts.Unlock()\n \t\t\tn, e = syscall.Select(p.maxFd + 1, &tmpReadFds, &tmpWriteFds, nil, timeout)\n+\t\t\ts.Lock()\n+\n \t\t\tif e != syscall.EINTR {\n \t\t\t\tbreak\n \t\t\t}"}, {"sha": "fff54dba71f45938e6b31d306b93de8c209db8f8", "filename": "libgo/go/net/newpollserver.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Fnewpollserver.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Fnewpollserver.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fnewpollserver.go?ref=efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "patch": "@@ -31,7 +31,7 @@ func newPollServer() (s *pollServer, err os.Error) {\n \tif s.poll, err = newpollster(); err != nil {\n \t\tgoto Error\n \t}\n-\tif err = s.poll.AddFD(s.pr.Fd(), 'r', true); err != nil {\n+\tif _, err = s.poll.AddFD(s.pr.Fd(), 'r', true); err != nil {\n \t\ts.poll.Close()\n \t\tgoto Error\n \t}"}, {"sha": "7933f09f19488f424b7674f1dc6a5c8f000ab88a", "filename": "libgo/go/net/newpollserver_rtems.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Fnewpollserver_rtems.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efbb12ae8a4a9ea4b15b2929f9adc931c43b315b/libgo%2Fgo%2Fnet%2Fnewpollserver_rtems.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fnewpollserver_rtems.go?ref=efbb12ae8a4a9ea4b15b2929f9adc931c43b315b", "patch": "@@ -68,7 +68,7 @@ func newPollServer() (s *pollServer, err os.Error) {\n \tif s.poll, err = newpollster(); err != nil {\n \t\tgoto Error\n \t}\n-\tif err = s.poll.AddFD(s.pr.Fd(), 'r', true); err != nil {\n+\tif _, err = s.poll.AddFD(s.pr.Fd(), 'r', true); err != nil {\n \t\ts.poll.Close()\n \t\tgoto Error\n \t}"}]}