{"sha": "ccfbd8805b8207ae6377e362f59e774144c8f367", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NmYmQ4ODA1YjgyMDdhZTYzNzdlMzYyZjU5ZTc3NDE0NGM4ZjM2Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-02-24T14:50:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-02-24T14:50:30Z"}, "message": "re PR c++/39242 (Inconsistent reject / accept of code)\n\n2009-02-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR c++/39242\n\t* pt.c (instantiate_decl): Do not instantiate extern, non-inline\n\tdeclared functions.\n\n\t* g++.dg/template/instantiate10.C: New testcase.\n\nFrom-SVN: r144408", "tree": {"sha": "7e1b1c01b30c4eed53ee4993e2a3550c5494a08b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e1b1c01b30c4eed53ee4993e2a3550c5494a08b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccfbd8805b8207ae6377e362f59e774144c8f367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccfbd8805b8207ae6377e362f59e774144c8f367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccfbd8805b8207ae6377e362f59e774144c8f367", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccfbd8805b8207ae6377e362f59e774144c8f367/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "844216f3811e342886523f1ee4a3068afb4dc726", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844216f3811e342886523f1ee4a3068afb4dc726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844216f3811e342886523f1ee4a3068afb4dc726"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "139abc656e0e6a58f8c375431a26f59a9f536843", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfbd8805b8207ae6377e362f59e774144c8f367/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfbd8805b8207ae6377e362f59e774144c8f367/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ccfbd8805b8207ae6377e362f59e774144c8f367", "patch": "@@ -1,3 +1,9 @@\n+2009-02-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/39242\n+\t* pt.c (instantiate_decl): Do not instantiate extern, non-inline\n+\tdeclared functions.\n+\n 2009-02-23  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c++/36411"}, {"sha": "dacc8689f38a8cdf7e2f509f0b6b1505932b4e3d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfbd8805b8207ae6377e362f59e774144c8f367/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfbd8805b8207ae6377e362f59e774144c8f367/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ccfbd8805b8207ae6377e362f59e774144c8f367", "patch": "@@ -15295,9 +15295,14 @@ instantiate_decl (tree d, int defer_ok,\n   /* In general, we do not instantiate such templates...  */\n   if (external_p\n       /* ... but we instantiate inline functions so that we can inline\n-\t them and ... */\n+\t them.  An explicit instantiation declaration prohibits implicit\n+\t instantiation of non-inline functions.  With high levels of\n+\t optimization, we would normally inline non-inline functions\n+\t -- but we're not allowed to do that for \"extern template\" functions.\n+\t Therefore, we check DECL_DECLARED_INLINE_P, rather than\n+\t possibly_inlined_p.  And ...  */\n       && ! (TREE_CODE (d) == FUNCTION_DECL\n-\t    && possibly_inlined_p (d))\n+\t    && DECL_DECLARED_INLINE_P (d))\n       /* ... we instantiate static data members whose values are\n \t needed in integral constant expressions.  */\n       && ! (TREE_CODE (d) == VAR_DECL"}, {"sha": "00a2ce9acaa0f18396419162e6862abfe4a24817", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfbd8805b8207ae6377e362f59e774144c8f367/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfbd8805b8207ae6377e362f59e774144c8f367/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ccfbd8805b8207ae6377e362f59e774144c8f367", "patch": "@@ -1,3 +1,8 @@\n+2009-02-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/39242\n+\t* g++.dg/template/instantiate10.C: New testcase.\n+\n 2009-02-24  Richard Guenther  <rguenther@suse.de>\n \tZdenek Dvorak  <ook@ucw.cz>\n "}, {"sha": "678e0194ae80df5a0839897998522466856606d6", "filename": "gcc/testsuite/g++.dg/template/instantiate10.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfbd8805b8207ae6377e362f59e774144c8f367/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfbd8805b8207ae6377e362f59e774144c8f367/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate10.C?ref=ccfbd8805b8207ae6377e362f59e774144c8f367", "patch": "@@ -0,0 +1,37 @@\n+/* PR c++/39242, xplicit instantiation declaration prohibits implicit\n+   instantiation of non-inline functions.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+class Rep {\n+public:\n+    void unref() const { }\n+    static void unref (const Rep * obj_r) { obj_r->unref(); }\n+};\n+template<typename _Tp, typename _Bt = _Tp>\n+class RepPtrStore {\n+    _Tp * _obj;\n+    void _assign( _Tp * new_r );\n+public:\n+    ~RepPtrStore() { _assign( 0 ); }\n+};\n+template<typename _Tp,typename _Bt>\n+void RepPtrStore<_Tp,_Bt>::_assign( _Tp * new_r )\n+{\n+  Rep::unref( _obj );\n+}\n+class RepPtrBase { };\n+template<typename _Bt> class PtrBase : public RepPtrBase { };\n+template<typename _Tp, typename _Bt = _Tp>\n+class Ptr : public PtrBase<_Bt> {\n+    RepPtrStore<_Tp,_Bt> _ptr;\n+};\n+class YCode;\n+class YStatement;\n+typedef Ptr<YStatement,YCode> YStatementPtr;\n+extern template class RepPtrStore<YStatement,YCode>;\n+class ExecutionEnvironment {\n+    YStatementPtr m_statement;\n+    ~ExecutionEnvironment() { };\n+};\n+"}]}