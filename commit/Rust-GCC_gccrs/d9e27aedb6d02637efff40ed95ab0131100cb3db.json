{"sha": "d9e27aedb6d02637efff40ed95ab0131100cb3db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDllMjdhZWRiNmQwMjYzN2VmZmY0MGVkOTVhYjAxMzExMDBjYjNkYg==", "commit": {"author": {"name": "Ingo Proetel", "email": "proetel@aicas.com", "date": "2003-08-31T16:52:16Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-08-31T16:52:16Z"}, "message": "Logger.java: provide class and method information\n\n2003-08-31  Ingo Proetel  <proetel@aicas.com>\n\n\t* java/util/logging/Logger.java: provide class and method information\n\t* java/util/logging/LogManager.java: create handlers\n\t* java/util/logging/SimpleFormatter.java: print souceClassName and\n\tsourceMethodName\n\nFrom-SVN: r70960", "tree": {"sha": "4cef7ba67443936ec02bcbb5538c6a5f2826c8ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cef7ba67443936ec02bcbb5538c6a5f2826c8ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9e27aedb6d02637efff40ed95ab0131100cb3db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9e27aedb6d02637efff40ed95ab0131100cb3db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9e27aedb6d02637efff40ed95ab0131100cb3db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9e27aedb6d02637efff40ed95ab0131100cb3db/comments", "author": {"login": "iproetel", "id": 895564, "node_id": "MDQ6VXNlcjg5NTU2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/895564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iproetel", "html_url": "https://github.com/iproetel", "followers_url": "https://api.github.com/users/iproetel/followers", "following_url": "https://api.github.com/users/iproetel/following{/other_user}", "gists_url": "https://api.github.com/users/iproetel/gists{/gist_id}", "starred_url": "https://api.github.com/users/iproetel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iproetel/subscriptions", "organizations_url": "https://api.github.com/users/iproetel/orgs", "repos_url": "https://api.github.com/users/iproetel/repos", "events_url": "https://api.github.com/users/iproetel/events{/privacy}", "received_events_url": "https://api.github.com/users/iproetel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e4b13a79edbe22a7a4d20f0d4aefe59b9b2380b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4b13a79edbe22a7a4d20f0d4aefe59b9b2380b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4b13a79edbe22a7a4d20f0d4aefe59b9b2380b"}], "stats": {"total": 79, "additions": 68, "deletions": 11}, "files": [{"sha": "bed343678433cea389db4af3635ef956e5b72abe", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9e27aedb6d02637efff40ed95ab0131100cb3db/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9e27aedb6d02637efff40ed95ab0131100cb3db/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d9e27aedb6d02637efff40ed95ab0131100cb3db", "patch": "@@ -1,3 +1,9 @@\n+2003-08-31  Ingo Proetel  <proetel@aicas.com>\n+\n+\t* java/util/logging/Logger.java: provide class and method information\n+\t* java/util/logging/LogManager.java: create handlers\n+\t* java/util/logging/SimpleFormatter.java: print souceClassName and\n+\tsourceMethodName\n 2003-08-28  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* win32.cc: fixed tab, indentation and whitespace"}, {"sha": "83379bb4942786f6727b8a6c319d5e7bcd73d88f", "filename": "libjava/java/util/logging/LogManager.java", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9e27aedb6d02637efff40ed95ab0131100cb3db/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9e27aedb6d02637efff40ed95ab0131100cb3db/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java?ref=d9e27aedb6d02637efff40ed95ab0131100cb3db", "patch": "@@ -52,6 +52,7 @@\n import java.util.Enumeration;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.StringTokenizer;\n import java.lang.ref.WeakReference;\n \n /**\n@@ -167,6 +168,7 @@ protected LogManager()\n      * the order in which classes are initialized.\n      */\n     Logger.getLogger(\"global\").setParent(rootLogger);\n+    Logger.getLogger(\"global\").setUseParentHandlers(true);\n   }\n \n \n@@ -520,7 +522,7 @@ public synchronized void readConfiguration()\n \n   public synchronized void readConfiguration(InputStream inputStream)\n     throws IOException, SecurityException\n-  {\n+  {\t\n     Properties   newProperties;\n     Enumeration  keys;\n \n@@ -532,12 +534,36 @@ public synchronized void readConfiguration(InputStream inputStream)\n \n     while (keys.hasMoreElements())\n     {\n-      String key = (String) keys.nextElement();\n+      String key = ((String) keys.nextElement()).trim();\n       String value = newProperties.getProperty(key);\n-\n+  \n       if (value == null)\n \tcontinue;\n-\n+\t\n+\t  value = value.trim();\n+\t\n+\t  if(\"handlers\".equals(key))\n+        {\n+          StringTokenizer tokenizer = new StringTokenizer(value);\n+          while(tokenizer.hasMoreTokens())\n+            {\n+              String handlerName = tokenizer.nextToken();\t\n+              try\n+                {\n+              \t  Class handlerClass = Class.forName(handlerName);\n+              \t  getLogger(\"\").addHandler((Handler)handlerClass.newInstance()); \n+                }\n+              catch (ClassCastException ex)\n+                {\n+                  System.err.println(\"[LogManager] class \" + handlerName + \" is not subclass of java.util.logging.Handler\");\n+                }\n+              catch (Exception ex)\n+                {\n+                  //System.out.println(\"[LogManager.readConfiguration]\"+ex);\n+                }\n+            }\n+        }\n+\t  \n       if (key.endsWith(\".level\"))\n       {\n \tString loggerName = key.substring(0, key.length() - 6);\n@@ -550,6 +576,7 @@ public synchronized void readConfiguration(InputStream inputStream)\n \t  }\n \t  catch (Exception _)\n \t  {\n+        //System.out.println(\"[LogManager.readConfiguration] \"+_);\n \t  }\n \t  continue;\n \t}"}, {"sha": "3c194785c5fdb9f55ea58084dc5133302ef5dba0", "filename": "libjava/java/util/logging/Logger.java", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9e27aedb6d02637efff40ed95ab0131100cb3db/libjava%2Fjava%2Futil%2Flogging%2FLogger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9e27aedb6d02637efff40ed95ab0131100cb3db/libjava%2Fjava%2Futil%2Flogging%2FLogger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FLogger.java?ref=d9e27aedb6d02637efff40ed95ab0131100cb3db", "patch": "@@ -589,9 +589,10 @@ public synchronized void log(Level level,\n \t\t\t       String message,\n \t\t\t       Object param)\n   {\n+  \tStackTraceElement caller = getCallerStackFrame();\n     logp(level,\n-\t /* sourceClass*/ null,\n-\t /* sourceMethod */ null,\n+\t caller.getClassName(),\n+\t caller.getMethodName(),\n \t message,\n \t param);\n   }\n@@ -601,9 +602,10 @@ public synchronized void log(Level level,\n \t\t\t       String message,\n \t\t\t       Object[] params)\n   {\n+    StackTraceElement caller = getCallerStackFrame();\n     logp(level,\n-\t /* sourceClass*/ null,\n-\t /* sourceMethod */ null,\n+\t caller.getClassName(),\n+\t caller.getMethodName(),\n \t message,\n \t params);\n   }\n@@ -613,9 +615,10 @@ public synchronized void log(Level level,\n \t\t\t       String message,\n \t\t\t       Throwable thrown)\n   {\n+\tStackTraceElement caller = getCallerStackFrame();    \n     logp(level,\n-\t /* sourceClass*/ null,\n-\t /* sourceMethod */ null,\n+\t caller.getClassName(),\n+\t caller.getMethodName(),\n \t message,\n \t thrown);\n   }\n@@ -1164,4 +1167,23 @@ public synchronized void setParent(Logger parent)\n \n     this.parent = parent;\n   }\n+  \n+  /**\n+   * Gets the StackTraceElement of the first class that is not this class.\n+   * That should be the initial caller of a logging method.\n+   * @return caller of the initial looging method\n+   */\n+  private StackTraceElement getCallerStackFrame()\n+  {\n+    Throwable t = new Throwable();\n+    StackTraceElement[] stackTrace = t.getStackTrace();\n+    int index = 0;\n+    // skip to stackentries until this class\n+    while(!stackTrace[index].getClassName().equals(getClass().getName())){index++;}\n+    // skip the stackentries of this class\n+    while(stackTrace[index].getClassName().equals(getClass().getName())){index++;}\n+\n+    return stackTrace[index];\n+  }\n+  \n }"}, {"sha": "aece9d40596cb57a9fa7a2030081fb102ee0808f", "filename": "libjava/java/util/logging/SimpleFormatter.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9e27aedb6d02637efff40ed95ab0131100cb3db/libjava%2Fjava%2Futil%2Flogging%2FSimpleFormatter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9e27aedb6d02637efff40ed95ab0131100cb3db/libjava%2Fjava%2Futil%2Flogging%2FSimpleFormatter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FSimpleFormatter.java?ref=d9e27aedb6d02637efff40ed95ab0131100cb3db", "patch": "@@ -106,7 +106,9 @@ public String format(LogRecord record)\n \n     buf.append(dateFormat.format(new Date(record.getMillis())));\n     buf.append(' ');\n-    buf.append(record.getLoggerName());\n+    buf.append(record.getSourceClassName());\n+    buf.append(' ');\n+    buf.append(record.getSourceMethodName());\n     buf.append(lineSep);\n \n     buf.append(record.getLevel());"}]}