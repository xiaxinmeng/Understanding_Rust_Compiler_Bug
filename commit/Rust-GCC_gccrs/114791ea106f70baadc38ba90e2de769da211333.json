{"sha": "114791ea106f70baadc38ba90e2de769da211333", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE0NzkxZWExMDZmNzBiYWFkYzM4YmE5MGUyZGU3NjlkYTIxMTMzMw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-09-06T05:56:20Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-09-06T05:56:20Z"}, "message": "Makefile.in (toplev.o): Depend on $(EXPR_H).\n\n        * Makefile.in (toplev.o): Depend on $(EXPR_H).\n        (insn-extract.o, insn-attrtab.o): Depend on toplev.h.\n        * gansidecl.h: Define ATTRIBUTE_NORETURN.\n        * genattrtab.c: Have insn-attrtab.c include toplev.h.\n        * genextract.c: Have insn-extract.c include toplev.h.\n        * rtl.h: Don't prototype `fatal_insn_not_found' and `fatal_insn'.\n        * toplev.c: Include expr.h.\n        (really_sorry, fancy_abort): Remove prototypes.\n        (set_target_switch): Add argument in prototype.\n        (vfatal): Mark prototype with ATTRIBUTE_NORETURN.\n        (v_really_sorry): Likewise.\n        (print_version, print_single_switch, print_switch_values): Make\n        static and add prototype arguments.\n        (decl_printable_name): Add prototype arguments.\n        (lang_expand_expr_t): New typedef.\n        (lang_expand_expr): Declare as a lang_expand_expr_t.\n        (incomplete_decl_finalize_hook): Add prototype argument.\n        (decl_name): Mark variable `verbosity' with ATTRIBUTE_UNUSED.\n        (botch): Likewise for variable `s'.\n        (rest_of_type_compilation): Mark variables `type' and `toplev'\n        with ATTRIBUTE_UNUSED if none of DBX_DEBUGGING_INFO,\n        XCOFF_DEBUGGING_INFO or SDB_DEBUGGING_INFO are defined.\n        (display_help): Make variable `i' an `unsigned long'.\n        (main): Remove unused parameter `envp'.\n        Cast assignment to `lang_expand_expr' to a `lang_expand_expr_t'.\n        Cast -1 when comparing it with a `size_t'.\n        * toplev.h (fatal, fatal_io_error, pfatal_with_name): Mark\n        prototype with ATTRIBUTE_NORETURN.\n        (fatal_insn_not_found, fatal_insn, really_sorry,\n        push_float_handler, pop_float_handler): Add prototypes.\n        (fancy_abort): Mark prototype with ATTRIBUTE_NORETURN.\n        (do_abort, botch): Add prototypes.\n\nFrom-SVN: r22293", "tree": {"sha": "56a1b6f86c53492b61290c511a46e98e66967820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56a1b6f86c53492b61290c511a46e98e66967820"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/114791ea106f70baadc38ba90e2de769da211333", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114791ea106f70baadc38ba90e2de769da211333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/114791ea106f70baadc38ba90e2de769da211333", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/114791ea106f70baadc38ba90e2de769da211333/comments", "author": null, "committer": null, "parents": [{"sha": "a269a03c80a4920f09cf0c065a636f6cedf92490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a269a03c80a4920f09cf0c065a636f6cedf92490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a269a03c80a4920f09cf0c065a636f6cedf92490"}], "stats": {"total": 130, "additions": 96, "deletions": 34}, "files": [{"sha": "ca394665fa8c193a61309e046846e00d900dcada", "filename": "gcc/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114791ea106f70baadc38ba90e2de769da211333/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114791ea106f70baadc38ba90e2de769da211333/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=114791ea106f70baadc38ba90e2de769da211333", "patch": "@@ -1,3 +1,44 @@\n+Sun Sep  6 08:54:14 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (toplev.o): Depend on $(EXPR_H).\n+\t(insn-extract.o, insn-attrtab.o): Depend on toplev.h.\n+\n+\t* gansidecl.h: Define ATTRIBUTE_NORETURN.\n+\n+\t* genattrtab.c: Have insn-attrtab.c include toplev.h.\n+\n+\t* genextract.c: Have insn-extract.c include toplev.h.\n+\n+\t* rtl.h: Don't prototype `fatal_insn_not_found' and `fatal_insn'.\n+\n+\t* toplev.c: Include expr.h.\n+  \t(really_sorry, fancy_abort): Remove prototypes.\n+\t(set_target_switch): Add argument in prototype.\n+\t(vfatal): Mark prototype with ATTRIBUTE_NORETURN.\n+\t(v_really_sorry): Likewise.\n+\t(print_version, print_single_switch, print_switch_values): Make\n+\tstatic and add prototype arguments.\n+\t(decl_printable_name): Add prototype arguments.\n+\t(lang_expand_expr_t): New typedef.\n+\t(lang_expand_expr): Declare as a lang_expand_expr_t.\n+\t(incomplete_decl_finalize_hook): Add prototype argument.\n+\t(decl_name): Mark variable `verbosity' with ATTRIBUTE_UNUSED.\n+\t(botch): Likewise for variable `s'.\n+\t(rest_of_type_compilation): Mark variables `type' and `toplev'\n+\twith ATTRIBUTE_UNUSED if none of DBX_DEBUGGING_INFO,\n+\tXCOFF_DEBUGGING_INFO or SDB_DEBUGGING_INFO are defined.\n+\t(display_help): Make variable `i' an `unsigned long'.\n+\t(main): Remove unused parameter `envp'.\n+\tCast assignment to `lang_expand_expr' to a `lang_expand_expr_t'.\n+\tCast -1 when comparing it with a `size_t'.\n+\n+\t* toplev.h (fatal, fatal_io_error, pfatal_with_name): Mark\n+\tprototype with ATTRIBUTE_NORETURN.\n+\t(fatal_insn_not_found, fatal_insn, really_sorry,\n+\tpush_float_handler, pop_float_handler): Add prototypes.\n+\t(fancy_abort): Mark prototype with ATTRIBUTE_NORETURN.\n+\t(do_abort, botch): Add prototypes.\n+\t\n Sat Sep  6 12:05:18 1998  John Carr  <jfc@mit.edu>\n \n \t* final.c (final): If a label is reached only from a single jump,"}, {"sha": "50a959e8efd29a6cf30a724da6b8fca1e3435890", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114791ea106f70baadc38ba90e2de769da211333/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114791ea106f70baadc38ba90e2de769da211333/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=114791ea106f70baadc38ba90e2de769da211333", "patch": "@@ -1400,7 +1400,7 @@ fold-const.o : fold-const.c $(CONFIG_H) system.h $(TREE_H) flags.h toplev.h \\\n toplev.o : toplev.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) \\\n    flags.h input.h insn-attr.h xcoffout.h defaults.h output.h \\\n    insn-codes.h insn-config.h $(RECOG_H) Makefile toplev.h dwarfout.h \\\n-   dwarf2out.h sdbout.h dbxout.h \\\n+   dwarf2out.h sdbout.h dbxout.h $(EXPR_H) \\\n    $(lang_options_files)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(MAYBE_USE_COLLECT2) \\\n \t  -DTARGET_NAME=\\\"$(target_alias)\\\" \\\n@@ -1626,7 +1626,7 @@ s-opinit : $(md_file) genopinit $(srcdir)/move-if-change\n \t$(srcdir)/move-if-change tmp-opinit.c insn-opinit.c\n \ttouch s-opinit\n \n-insn-extract.o : insn-extract.c $(CONFIG_H) $(RTL_H) system.h\n+insn-extract.o : insn-extract.c $(CONFIG_H) $(RTL_H) system.h toplev.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-extract.c\n \n insn-extract.c: s-extract ; @true\n@@ -1644,8 +1644,8 @@ s-peep : $(md_file) genpeep $(srcdir)/move-if-change\n \t$(srcdir)/move-if-change tmp-peep.c insn-peep.c\n \ttouch s-peep\n \n-insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) $(REGS_H) real.h output.h \\\n-     insn-attr.h insn-config.h system.h\n+insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) $(REGS_H) real.h \\\n+    output.h insn-attr.h insn-config.h system.h toplev.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c\n \n insn-attr.h: s-attr ; @true"}, {"sha": "f93264037740cf5981a70413814391bcc71d28a0", "filename": "gcc/gansidecl.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114791ea106f70baadc38ba90e2de769da211333/gcc%2Fgansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114791ea106f70baadc38ba90e2de769da211333/gcc%2Fgansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgansidecl.h?ref=114791ea106f70baadc38ba90e2de769da211333", "patch": "@@ -54,6 +54,10 @@ Boston, MA 02111-1307, USA.  */\n #define ATTRIBUTE_UNUSED __attribute__ ((__unused__))\n #endif /* ATTRIBUTE_UNUSED */\n \n+#ifndef ATTRIBUTE_NORETURN\n+#define ATTRIBUTE_NORETURN __attribute__ ((__noreturn__))\n+#endif /* ATTRIBUTE_NORETURN */\n+\n #ifndef ATTRIBUTE_PRINTF\n #define ATTRIBUTE_PRINTF(m, n) __attribute__ ((format (__printf__, m, n)))\n #define ATTRIBUTE_PRINTF_1 ATTRIBUTE_PRINTF(1, 2)"}, {"sha": "cb75eaa1e62e974d376d32fea4a34501579b718c", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114791ea106f70baadc38ba90e2de769da211333/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114791ea106f70baadc38ba90e2de769da211333/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=114791ea106f70baadc38ba90e2de769da211333", "patch": "@@ -6000,6 +6000,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"real.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n   printf (\"#include \\\"insn-attr.h\\\"\\n\");\n+  printf (\"#include \\\"toplev.h\\\"\\n\");\n   printf (\"\\n\");  \n   printf (\"#define operands recog_operand\\n\\n\");\n "}, {"sha": "6b64077c026be0159690df63b6c5aef24102eef2", "filename": "gcc/genextract.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114791ea106f70baadc38ba90e2de769da211333/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114791ea106f70baadc38ba90e2de769da211333/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=114791ea106f70baadc38ba90e2de769da211333", "patch": "@@ -458,7 +458,8 @@ from the machine description file `md'.  */\\n\\n\");\n \n   printf (\"#include \\\"config.h\\\"\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n-  printf (\"#include \\\"rtl.h\\\"\\n\\n\");\n+  printf (\"#include \\\"rtl.h\\\"\\n\");\n+  printf (\"#include \\\"toplev.h\\\"\\n\\n\");\n \n   /* This variable exists only so it can be the \"location\"\n      of any missing operand whose numbers are skipped by a given pattern.  */"}, {"sha": "eac66714e45c6cbc8b918aeb5468cb9f8a699f5f", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114791ea106f70baadc38ba90e2de769da211333/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114791ea106f70baadc38ba90e2de769da211333/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=114791ea106f70baadc38ba90e2de769da211333", "patch": "@@ -1168,10 +1168,6 @@ extern rtx output_constant_def\t\tPROTO((union tree_node *));\n extern rtx immed_real_const\t\tPROTO((union tree_node *));\n extern union tree_node *make_tree\tPROTO((union tree_node *, rtx));\n \n-/* Abort routines */\n-extern void fatal_insn_not_found\tPROTO((rtx));\n-extern void fatal_insn\t\t\tPROTO((char *, rtx));\n-\n /* Define a default value for STORE_FLAG_VALUE.  */\n \n #ifndef STORE_FLAG_VALUE"}, {"sha": "f850cab9941cd5ec2bcac79a093d0c1d5153a31e", "filename": "gcc/toplev.c", "status": "modified", "additions": 30, "deletions": 21, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114791ea106f70baadc38ba90e2de769da211333/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114791ea106f70baadc38ba90e2de769da211333/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=114791ea106f70baadc38ba90e2de769da211333", "patch": "@@ -51,6 +51,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"output.h\"\n #include \"except.h\"\n #include \"toplev.h\"\n+#include \"expr.h\"\n \n #ifdef DWARF_DEBUGGING_INFO\n #include \"dwarfout.h\"\n@@ -173,9 +174,7 @@ void pedwarn PVPROTO((char *s, ...));\n void pedwarn_with_decl PVPROTO((tree decl, char *s, ...));\n void pedwarn_with_file_and_line PVPROTO((char *file, int line, char *s, ...));\n void sorry PVPROTO((char *s, ...));\n-void really_sorry PVPROTO((char *s, ...));\n-void fancy_abort ();\n-void set_target_switch ();\n+static void set_target_switch PROTO((char *));\n static char *decl_name PROTO((tree, int));\n static void vmessage PROTO((char *, char *, va_list));\n static void v_message_with_file_and_line PROTO((char *, int, char *,\n@@ -186,7 +185,7 @@ static void v_error_with_file_and_line PROTO((char *, int, char *, va_list));\n static void v_error_with_decl PROTO((tree, char *, va_list));\n static void v_error_for_asm PROTO((rtx, char *, va_list));\n static void verror PROTO((char *, va_list));\n-static void vfatal PROTO((char *, va_list));\n+static void vfatal PROTO((char *, va_list)) ATTRIBUTE_NORETURN;\n static void v_warning_with_file_and_line PROTO ((char *, int, char *, va_list));\n static void v_warning_with_decl PROTO((tree, char *, va_list));\n static void v_warning_for_asm PROTO((rtx, char *, va_list));\n@@ -195,7 +194,7 @@ static void vpedwarn PROTO((char *, va_list));\n static void v_pedwarn_with_decl PROTO((tree, char *, va_list));\n static void v_pedwarn_with_file_and_line PROTO((char *, int, char *, va_list));\n static void vsorry PROTO((char *, va_list));\n-static void v_really_sorry PROTO((char *, va_list));\n+static void v_really_sorry PROTO((char *, va_list)) ATTRIBUTE_NORETURN;\n static void float_signal PROTO((int));\n static void pipe_closed PROTO((int));\n static void output_lang_identify PROTO((FILE *));\n@@ -206,9 +205,11 @@ static void clean_dump_file PROTO((char *));\n static void compile_file PROTO((char *));\n static void display_help PROTO ((void));\n \n-void print_version ();\n-int print_single_switch ();\n-void print_switch_values ();\n+static void print_version PROTO((FILE *, char *));\n+static int print_single_switch PROTO((FILE *, int, int, char *, char *, char *,\n+\t\t\t\t      char *, char *));\n+static void print_switch_values PROTO((FILE *, int, int, char *, char *,\n+\t\t\t\t       char *));\n /* Length of line when printing switch values.  */\n #define MAX_LINE 75\n \n@@ -339,16 +340,20 @@ int sorrycount = 0;\n      2: and any other information that might be interesting, such as function\n         parameter types in C++.  */\n \n-char *(*decl_printable_name) (/* tree decl, int verbosity */);\n+char *(*decl_printable_name)\t\tPROTO ((tree, int));\n \n /* Pointer to function to compute rtl for a language-specific tree code.  */\n \n-struct rtx_def *(*lang_expand_expr) ();\n+typedef rtx (*lang_expand_expr_t)\n+  PROTO ((union tree_node *, rtx, enum machine_mode,\n+\t  enum expand_modifier modifier));\n+\n+lang_expand_expr_t lang_expand_expr = 0;\n \n /* Pointer to function to finish handling an incomplete decl at the\n    end of compilation.  */\n \n-void (*incomplete_decl_finalize_hook) () = 0;\n+void (*incomplete_decl_finalize_hook) PROTO((tree)) = 0;\n \n /* Highest label number used at the end of reload.  */\n \n@@ -1379,7 +1384,7 @@ fatal_insn_not_found (insn)\n static char *\n decl_name (decl, verbosity)\n      tree decl;\n-     int verbosity;\n+     int verbosity ATTRIBUTE_UNUSED;\n {\n   return IDENTIFIER_POINTER (DECL_NAME (decl));\n }\n@@ -2128,7 +2133,7 @@ do_abort ()\n \n void\n botch (s)\n-  char * s;\n+  char * s ATTRIBUTE_UNUSED;\n {\n   abort ();\n }\n@@ -3168,8 +3173,13 @@ rest_of_decl_compilation (decl, asmspec, top_level, at_end)\n \n void\n rest_of_type_compilation (type, toplev)\n+#if defined(DBX_DEBUGGING_INFO) || defined(XCOFF_DEBUGGING_INFO) || defined (SDB_DEBUGGING_INFO)\n      tree type;\n      int toplev;\n+#else\n+     tree type ATTRIBUTE_UNUSED;\n+     int toplev ATTRIBUTE_UNUSED;\n+#endif\n {\n #if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)\n   if (write_symbols == DBX_DEBUG || write_symbols == XCOFF_DEBUG)\n@@ -3938,7 +3948,7 @@ static void\n display_help ()\n {\n   int    undoc;\n-  long\t i;\n+  unsigned long\t i;\n   char * lang;\n   \n #ifndef USE_CPPLIB  \n@@ -4167,10 +4177,9 @@ check_lang_option (option, lang_option)\n    33 if had nonfatal errors, else success.  */\n \n int\n-main (argc, argv, envp)\n+main (argc, argv)\n      int argc;\n      char **argv;\n-     char **envp;\n {\n   register int i;\n   char *filename = 0;\n@@ -4210,7 +4219,7 @@ main (argc, argv, envp)\n #endif\n \n   decl_printable_name = decl_name;\n-  lang_expand_expr = (struct rtx_def *(*)()) do_abort;\n+  lang_expand_expr = (lang_expand_expr_t) do_abort;\n \n   /* Initialize whether `char' is signed.  */\n   flag_signed_char = DEFAULT_SIGNED_CHAR;\n@@ -4314,7 +4323,7 @@ main (argc, argv, envp)\n \tif (check_lang_option (argv[i], documented_lang_options[j].option))\n \t  break;\n       \n-      if (j != -1)\n+      if (j != (size_t)-1)\n \t{\n \t  /* If the option is valid for *some* language,\n \t     treat it as valid even if this language doesn't understand it.  */\n@@ -4862,7 +4871,7 @@ main (argc, argv, envp)\n /* Decode -m switches.  */\n /* Decode the switch -mNAME.  */\n \n-void\n+static void\n set_target_switch (name)\n      char *name;\n {\n@@ -4900,7 +4909,7 @@ set_target_switch (name)\n    Each line begins with INDENT (for the case where FILE is the\n    assembler output file).  */\n \n-void\n+static void\n print_version (file, indent)\n      FILE *file;\n      char *indent;\n@@ -4922,7 +4931,7 @@ print_version (file, indent)\n    ??? We don't handle error returns from fprintf (disk full); presumably\n    other code will catch a disk full though.  */\n \n-int\n+static int\n print_single_switch (file, pos, max, indent, sep, term, type, name)\n      FILE *file;\n      int pos, max;"}, {"sha": "740dda12c31b624b0bb90021437b1a77ad33c1bd", "filename": "gcc/toplev.h", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/114791ea106f70baadc38ba90e2de769da211333/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/114791ea106f70baadc38ba90e2de769da211333/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=114791ea106f70baadc38ba90e2de769da211333", "patch": "@@ -19,9 +19,13 @@ extern void debug_end_source_file\tPROTO ((unsigned));\n extern void debug_define\t\tPROTO ((unsigned, char *));\n extern void debug_undef\t\t\tPROTO ((unsigned, char *));\n extern void fatal\t\t\tPVPROTO ((char *, ...))\n-\t\t\t\t\t\tATTRIBUTE_PRINTF_1;\n-extern void fatal_io_error\t\tPROTO ((char *));\n-extern void pfatal_with_name\t\tPROTO ((char *));\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+extern void fatal_io_error\t\tPROTO ((char *)) ATTRIBUTE_NORETURN;\n+extern void pfatal_with_name\t\tPROTO ((char *)) ATTRIBUTE_NORETURN;\n+extern void fatal_insn_not_found\tPROTO ((struct rtx_def *))\n+  ATTRIBUTE_NORETURN;\n+extern void fatal_insn\t\t\tPROTO ((char *, struct rtx_def *))\n+  ATTRIBUTE_NORETURN;\n extern void warning\t\t\tPVPROTO ((char *, ...))\n \t\t\t\t\t\tATTRIBUTE_PRINTF_1;\n extern void error\t\t\tPVPROTO ((char *, ...))\n@@ -36,6 +40,8 @@ extern void error_with_file_and_line\tPVPROTO ((char *, int, char *, ...))\n \t\t\t\t\t\tATTRIBUTE_PRINTF_3;\n extern void sorry\t\t\tPVPROTO ((char *s, ...))\n \t\t\t\t\t\tATTRIBUTE_PRINTF_1;\n+extern void really_sorry\t\tPVPROTO((char *s, ...))\n+  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n extern void default_print_error_function PROTO ((char *));\n extern void report_error_function\tPROTO ((char *));\n \n@@ -53,13 +59,17 @@ extern void warning_for_asm\t\tPVPROTO((struct rtx_def *, char *, ...))\n \t\t\t\t\t\tATTRIBUTE_PRINTF_2;\n #ifdef _JBLEN\n extern void set_float_handler PROTO((jmp_buf));\n+extern int push_float_handler PROTO((jmp_buf, jmp_buf));\n+extern void pop_float_handler PROTO((int, jmp_buf));\n #endif\n \n #ifdef BUFSIZ\n extern void output_quoted_string\tPROTO ((FILE *, char *));\n extern void output_file_directive\tPROTO ((FILE *, char *));\n #endif\n \n-extern void fancy_abort\t\t\tPROTO ((void));\n+extern void fancy_abort\t\t\tPROTO ((void)) ATTRIBUTE_NORETURN;\n+extern void do_abort\t\t\tPROTO ((void)) ATTRIBUTE_NORETURN;\n+extern void botch\t\t\tPROTO ((char *)) ATTRIBUTE_NORETURN;\n \n #endif /* __GCC_TOPLEV_H */"}]}