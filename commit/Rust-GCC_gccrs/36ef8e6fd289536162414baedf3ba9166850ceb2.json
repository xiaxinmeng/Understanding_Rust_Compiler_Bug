{"sha": "36ef8e6fd289536162414baedf3ba9166850ceb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZlZjhlNmZkMjg5NTM2MTYyNDE0YmFlZGYzYmE5MTY2ODUwY2ViMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-08-30T09:29:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-08-30T09:29:05Z"}, "message": "dwarf2out.c (add_dwarf_attr): Check we don't add duplicate attributes.\n\n2017-08-30  Richard Biener  <rguenther@suse.de>\n\n\t* dwarf2out.c (add_dwarf_attr): Check we don't add duplicate\n\tattributes.\n\t(gen_subprogram_die): Add DW_AT_object_pointer only early.\n\t(dwarf2out_early_global_decl): Only generate a DIE for the\n\tabstract origin if it doesn't already exist or is a declaration DIE.\n\t(resolve_addr): Do not add the linkage name twice when\n\tgenerating a stub DIE for the DW_TAG_GNU_call_site target.\n\n\t* g++.dg/pr78112-2.C: Do not expect duplicate DW_AT_object_pointer.\n\nFrom-SVN: r251448", "tree": {"sha": "d5566a3098b133053be99a7f8a79c893ec483780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5566a3098b133053be99a7f8a79c893ec483780"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36ef8e6fd289536162414baedf3ba9166850ceb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ef8e6fd289536162414baedf3ba9166850ceb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36ef8e6fd289536162414baedf3ba9166850ceb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ef8e6fd289536162414baedf3ba9166850ceb2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68905c2883c62197cde61b38ec51ef16a0b1f0af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68905c2883c62197cde61b38ec51ef16a0b1f0af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68905c2883c62197cde61b38ec51ef16a0b1f0af"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "1879507fd7df1f81145cff834f3b5263f6f82d92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef8e6fd289536162414baedf3ba9166850ceb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef8e6fd289536162414baedf3ba9166850ceb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36ef8e6fd289536162414baedf3ba9166850ceb2", "patch": "@@ -1,3 +1,13 @@\n+2017-08-30  Richard Biener  <rguenther@suse.de>\n+\n+\t* dwarf2out.c (add_dwarf_attr): Check we don't add duplicate\n+\tattributes.\n+\t(gen_subprogram_die): Add DW_AT_object_pointer only early.\n+\t(dwarf2out_early_global_decl): Only generate a DIE for the\n+\tabstract origin if it doesn't already exist or is a declaration DIE.\n+\t(resolve_addr): Do not add the linkage name twice when\n+\tgenerating a stub DIE for the DW_TAG_GNU_call_site target.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):"}, {"sha": "d76fef866fef55d462fa8497ea71dee3872cad2d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef8e6fd289536162414baedf3ba9166850ceb2/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef8e6fd289536162414baedf3ba9166850ceb2/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=36ef8e6fd289536162414baedf3ba9166850ceb2", "patch": "@@ -4129,7 +4129,7 @@ add_dwarf_attr (dw_die_ref die, dw_attr_node *attr)\n       dw_attr_node *a;\n       unsigned ix;\n       FOR_EACH_VEC_SAFE_ELT (die->die_attr, ix, a)\n-\tgcc_assert (a->dw_attr != attr->dw_attr || a->dw_attr != DW_AT_inline);\n+\tgcc_assert (a->dw_attr != attr->dw_attr);\n     }\n \n   vec_safe_reserve (die->die_attr, 1);\n@@ -22334,7 +22334,8 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t    {\n \t      dw_die_ref parm_die = gen_decl_die (parm, NULL, NULL, subr_die);\n \n-\t      if (parm == DECL_ARGUMENTS (decl)\n+\t      if (early_dwarf\n+\t\t  && parm == DECL_ARGUMENTS (decl)\n \t\t  && TREE_CODE (TREE_TYPE (decl)) == METHOD_TYPE\n \t\t  && parm_die\n \t\t  && (dwarf_version >= 3 || !dwarf_strict))\n@@ -25479,10 +25480,16 @@ dwarf2out_early_global_decl (tree decl)\n \t     with C++ constructor clones for example and makes\n \t     dwarf2out_abstract_function happy which requires the early\n \t     DIE of the abstract instance to be present.  */\n-\t  if (DECL_ABSTRACT_ORIGIN (decl))\n+\t  tree origin = DECL_ABSTRACT_ORIGIN (decl);\n+\t  dw_die_ref origin_die;\n+\t  if (origin != NULL\n+\t      /* Do not emit the DIE multiple times but make sure to\n+\t         process it fully here in case we just saw a declaration.  */\n+\t      && ((origin_die = lookup_decl_die (origin)) == NULL\n+\t\t  || is_declaration_die (origin_die)))\n \t    {\n-\t      current_function_decl = DECL_ABSTRACT_ORIGIN (decl);\n-\t      dwarf2out_decl (DECL_ABSTRACT_ORIGIN (decl));\n+\t      current_function_decl = origin;\n+\t      dwarf2out_decl (origin);\n \t    }\n \n \t  current_function_decl = decl;\n@@ -29047,7 +29054,7 @@ resolve_addr (dw_die_ref die)\n \t\t    add_AT_flag (tdie, DW_AT_external, 1);\n \t\t    add_AT_flag (tdie, DW_AT_declaration, 1);\n \t\t    add_linkage_attr (tdie, tdecl);\n-\t\t    add_name_and_src_coords_attributes (tdie, tdecl);\n+\t\t    add_name_and_src_coords_attributes (tdie, tdecl, true);\n \t\t    equate_decl_number_to_die (tdecl, tdie);\n \t\t  }\n \t      }"}, {"sha": "24125f1886d687a64781e2443cb7da321d38d96c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef8e6fd289536162414baedf3ba9166850ceb2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef8e6fd289536162414baedf3ba9166850ceb2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36ef8e6fd289536162414baedf3ba9166850ceb2", "patch": "@@ -1,3 +1,7 @@\n+2017-08-30  Richard Biener  <rguenther@suse.de>\n+\n+\t* g++.dg/pr78112-2.C: Do not expect duplicate DW_AT_object_pointer.\n+\n 2017-08-29  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/82015"}, {"sha": "9870cccc22782561265f3eb4d6773072340720ab", "filename": "gcc/testsuite/g++.dg/pr78112-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36ef8e6fd289536162414baedf3ba9166850ceb2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36ef8e6fd289536162414baedf3ba9166850ceb2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr78112-2.C?ref=36ef8e6fd289536162414baedf3ba9166850ceb2", "patch": "@@ -2,7 +2,7 @@\n /* { dg-skip-if \"No dwarf debug support\" { hppa*-*-hpux* } } */\n /* { dg-options \"-g -dA -gdwarf-4 -std=gnu++11\" } */\n /* { dg-options \"-g -dA -std=gnu++11 -gdwarf-4\" } */\n-/* { dg-final { scan-assembler-times DW_AT_object_pointer 18 } } */\n+/* { dg-final { scan-assembler-times DW_AT_object_pointer 12 } } */\n \n void run (int *int_p, void(*func)(int *)) { func (int_p); }\n namespace foo {"}]}