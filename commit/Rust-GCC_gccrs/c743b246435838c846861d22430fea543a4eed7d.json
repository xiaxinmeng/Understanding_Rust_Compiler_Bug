{"sha": "c743b246435838c846861d22430fea543a4eed7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc0M2IyNDY0MzU4MzhjODQ2ODYxZDIyNDMwZmVhNTQzYTRlZWQ3ZA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-08-01T15:00:41Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-08-01T15:00:41Z"}, "message": "arm.md (peepholes for eq (reg1) (reg2/imm)): Generate canonical plus rtx with negated immediate instead of minus where...\n\n[gcc]\n2013-08-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.md (peepholes for eq (reg1) (reg2/imm)):\n\tGenerate canonical plus rtx with negated immediate instead of minus\n\twhere appropriate.\n\t* config/arm/arm.c (thumb2_reorg): Handle ADCS <Rd>, <Rn> case.\n\n[gcc/testsuite]\n\n\t* gcc.target/arm/pr46972-2.c: New test.\n\nFrom-SVN: r201411", "tree": {"sha": "f4d8e4dc4834802f692844486af961571394666a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4d8e4dc4834802f692844486af961571394666a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c743b246435838c846861d22430fea543a4eed7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c743b246435838c846861d22430fea543a4eed7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c743b246435838c846861d22430fea543a4eed7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c743b246435838c846861d22430fea543a4eed7d/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0c123ef5222b0e12a5984640f0dd4db4ada569c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c123ef5222b0e12a5984640f0dd4db4ada569c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0c123ef5222b0e12a5984640f0dd4db4ada569c"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "5480545f9330a187de971c350e80067f150cd4ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c743b246435838c846861d22430fea543a4eed7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c743b246435838c846861d22430fea543a4eed7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c743b246435838c846861d22430fea543a4eed7d", "patch": "@@ -1,3 +1,10 @@\n+2013-08-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (peepholes for eq (reg1) (reg2/imm)):\n+\tGenerate canonical plus rtx with negated immediate instead of minus\n+\twhere appropriate.\n+\t* config/arm/arm.c (thumb2_reorg): Handle ADCS <Rd>, <Rn> case.\n+\n 2013-08-01  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_release_function_body): Use used_as_abstract_origin."}, {"sha": "8c1dce9478d9f371260d4fd7df71174cfb67836e", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c743b246435838c846861d22430fea543a4eed7d/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c743b246435838c846861d22430fea543a4eed7d/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=c743b246435838c846861d22430fea543a4eed7d", "patch": "@@ -14360,6 +14360,16 @@ thumb2_reorg (void)\n \t\t\t\t   && IN_RANGE (INTVAL (op1), -7, 7))\n \t\t\t    action = CONV;\n \t\t\t}\n+\t\t      /* ADCS <Rd>, <Rn>  */\n+\t\t      else if (GET_CODE (XEXP (src, 0)) == PLUS\n+\t\t\t      && rtx_equal_p (XEXP (XEXP (src, 0), 0), dst)\n+\t\t\t      && low_register_operand (XEXP (XEXP (src, 0), 1),\n+\t\t\t\t\t\t       SImode)\n+\t\t\t      && COMPARISON_P (op1)\n+\t\t\t      && cc_register (XEXP (op1, 0), VOIDmode)\n+\t\t\t      && maybe_get_arm_condition_code (op1) == ARM_CS\n+\t\t\t      && XEXP (op1, 1) == const0_rtx)\n+\t\t        action = CONV;\n \t\t      break;\n \n \t\t    case MINUS:"}, {"sha": "322aa2040546960fc8388b1c376b6d482a11f820", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c743b246435838c846861d22430fea543a4eed7d/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c743b246435838c846861d22430fea543a4eed7d/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=c743b246435838c846861d22430fea543a4eed7d", "patch": "@@ -10094,7 +10094,7 @@\n \t\t (geu:SI (reg:CC CC_REGNUM) (const_int 0))))]\n )\n \n-;; Rd = (eq (reg1) (reg2/imm))\t// ARMv5\n+;; Rd = (eq (reg1) (reg2/imm))\t// ARMv5 and optimising for speed.\n ;;\tsub  Rd, Reg1, reg2\n ;;\tclz  Rd, Rd\n ;;\tlsr  Rd, Rd, #5\n@@ -10106,14 +10106,15 @@\n \t      (set (match_operand:SI 0 \"register_operand\" \"\") (const_int 0)))\n    (cond_exec (eq (reg:CC CC_REGNUM) (const_int 0))\n \t      (set (match_dup 0) (const_int 1)))]\n-  \"arm_arch5 && TARGET_32BIT && peep2_regno_dead_p (3, CC_REGNUM)\"\n+  \"arm_arch5 && TARGET_32BIT && peep2_regno_dead_p (3, CC_REGNUM)\n+  && !(TARGET_THUMB2 && optimize_insn_for_size_p ())\"\n   [(set (match_dup 0) (minus:SI (match_dup 1) (match_dup 2)))\n    (set (match_dup 0) (clz:SI (match_dup 0)))\n    (set (match_dup 0) (lshiftrt:SI (match_dup 0) (const_int 5)))]\n )\n \n \n-;; Rd = (eq (reg1) (reg2/imm))\t// ! ARMv5\n+;; Rd = (eq (reg1) (reg2))\t// ! ARMv5 or optimising for size.\n ;;\tsub  T1, Reg1, reg2\n ;;\tnegs Rd, T1\n ;;\tadc  Rd, Rd, T1\n@@ -10127,15 +10128,20 @@\n \t      (set (match_dup 0) (const_int 1)))\n    (match_scratch:SI 3 \"r\")]\n   \"TARGET_32BIT && peep2_regno_dead_p (3, CC_REGNUM)\"\n-  [(set (match_dup 3) (minus:SI (match_dup 1) (match_dup 2)))\n+  [(set (match_dup 3) (match_dup 4))\n    (parallel\n     [(set (reg:CC CC_REGNUM)\n \t  (compare:CC (const_int 0) (match_dup 3)))\n      (set (match_dup 0) (minus:SI (const_int 0) (match_dup 3)))])\n    (set (match_dup 0)\n \t(plus:SI (plus:SI (match_dup 0) (match_dup 3))\n \t\t (geu:SI (reg:CC CC_REGNUM) (const_int 0))))]\n-)\n+  \"\n+  if (CONST_INT_P (operands[2]))\n+    operands[4] = plus_constant (SImode, operands[1], -INTVAL (operands[2]));\n+  else\n+    operands[4] = gen_rtx_MINUS (SImode, operands[1], operands[2]);\n+  \")\n \n (define_insn \"*cond_move\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r\")"}, {"sha": "61b8ee6efb863808f04779520e49ef42ecba2fda", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c743b246435838c846861d22430fea543a4eed7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c743b246435838c846861d22430fea543a4eed7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c743b246435838c846861d22430fea543a4eed7d", "patch": "@@ -1,3 +1,7 @@\n+2013-08-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/pr46972-2.c: New test.\n+\n 2013-08-01  Vidya Praveen  <vidyapraveen@arm.com>\n \n \t* gcc.dg/vect/vect-iv-5.c: Make xfail conditional with !arm_neon_ok."}, {"sha": "f4017e3f78dfa1ea837e0a4edf934c1b39c79dec", "filename": "gcc/testsuite/gcc.target/arm/pr46975-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c743b246435838c846861d22430fea543a4eed7d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr46975-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c743b246435838c846861d22430fea543a4eed7d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr46975-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr46975-2.c?ref=c743b246435838c846861d22430fea543a4eed7d", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-options \"-mthumb -O2\" } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-final { scan-assembler \"sub\" } } */\n+/* { dg-final { scan-assembler \"clz\" } } */\n+/* { dg-final { scan-assembler \"lsr.*#5\" } } */\n+\n+int foo (int s)\n+{\n+      return s == 1;\n+}"}]}