{"sha": "bb01279084cc4ed7c7894d16be6af502fb5ad914", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwMTI3OTA4NGNjNGVkN2M3ODk0ZDE2YmU2YWY1MDJmYjVhZDkxNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:47:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:47:15Z"}, "message": "[multiple changes]\n\n2014-07-17  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document new restriction No_Long_Long_Integers.\n\t* exp_ch4.adb (Make_Array_Comparison_Op): Add note that we\n\tcould do this by actually expanding a real generic.\n\t* a-tags.ads: Add comments about performance.\n\t* sprint.adb (Sprint_Node_Actual, case N_Object_Declaration):\n\tPrint Etype of defining identifier, rather than the object\n\tdefinition. More information.\n\n2014-07-17  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb: Minor documentation clarification.\n\n2014-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Is_Aliased): Revert previous change.\n\n2014-07-17  Vincent Celier  <celier@adacore.com>\n\n\t* g-comlin.adb (Try_Help): New procedure.\n\t(Getopt): Use new procedure Try_Help.\n\t* g-comlin.ads (Try_Help): New procedure.\n\n2014-07-17  Bob Duff  <duff@adacore.com>\n\n\t* gnat_ugn.texi: Minor update.\n\nFrom-SVN: r212728", "tree": {"sha": "4d92ba93eaafdfb64c5c62d90193677f7811f7c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d92ba93eaafdfb64c5c62d90193677f7811f7c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb01279084cc4ed7c7894d16be6af502fb5ad914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb01279084cc4ed7c7894d16be6af502fb5ad914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb01279084cc4ed7c7894d16be6af502fb5ad914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb01279084cc4ed7c7894d16be6af502fb5ad914/comments", "author": null, "committer": null, "parents": [{"sha": "ee10c0ec8875d997a4892fbbdf5f49c2d6d824b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee10c0ec8875d997a4892fbbdf5f49c2d6d824b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee10c0ec8875d997a4892fbbdf5f49c2d6d824b9"}], "stats": {"total": 312, "additions": 227, "deletions": 85}, "files": [{"sha": "2105a7ea78f72061d3ab29387aa4f0be44be6a11", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -1,3 +1,31 @@\n+2014-07-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document new restriction No_Long_Long_Integers.\n+\t* exp_ch4.adb (Make_Array_Comparison_Op): Add note that we\n+\tcould do this by actually expanding a real generic.\n+\t* a-tags.ads: Add comments about performance.\n+\t* sprint.adb (Sprint_Node_Actual, case N_Object_Declaration):\n+\tPrint Etype of defining identifier, rather than the object\n+\tdefinition. More information.\n+\n+2014-07-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb: Minor documentation clarification.\n+\n+2014-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Is_Aliased): Revert previous change.\n+\n+2014-07-17  Vincent Celier  <celier@adacore.com>\n+\n+\t* g-comlin.adb (Try_Help): New procedure.\n+\t(Getopt): Use new procedure Try_Help.\n+\t* g-comlin.ads (Try_Help): New procedure.\n+\n+2014-07-17  Bob Duff  <duff@adacore.com>\n+\n+\t* gnat_ugn.texi: Minor update.\n+\n 2014-07-17  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Improve documentation of Unrestricted_Access."}, {"sha": "9239c9985854b03e2af57174eaaf9b12595f3d33", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -33,7 +33,28 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with System;\n+--  The operations in this package provide the guarantee that all dispatching\n+--  calls on primitive operations of tagged types and interfaces take constant\n+--  time (in terms of source lines executed), that is to say, the cost of these\n+--  calls is independent of the number of primitives of the type or interface,\n+--  and independent of the number of ancestors or interface progenitors that a\n+--  tagged type may have.\n+\n+--  The following subprograms of the public part of this package take constant\n+--  time (in terms of source lines executed):\n+\n+--    Expanded_Name, Wide_Expanded_Name, Wide_Wide_Expanded_Name, External_Tag,\n+--    Is_Descendant_At_Same_Level, Parent_Tag\n+--    Descendant_Tag (when used with a library-level tagged type),\n+--    Internal_Tag (when used with a library-level tagged type).\n+\n+--  The following subprograms of the public part of this package take non\n+--  constant time (in terms of sources line executed):\n+\n+--    Descendant_Tag (when used with a locally defined tagged type)\n+--    Internal_Tag (when used with a locally defined tagged type)\n+--    Interface_Ancestor_Tagswith System\n+\n with System.Storage_Elements;\n \n package Ada.Tags is"}, {"sha": "0a7108d74a3afa10c6b4cb0c2280301153f2a1bb", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -47,6 +47,7 @@ with Types;    use Types;\n \n with Ada.Command_Line;          use Ada.Command_Line;\n \n+with GNAT.Command_Line;         use GNAT.Command_Line;\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.IO;                   use GNAT.IO;\n with GNAT.OS_Lib;               use GNAT.OS_Lib;\n@@ -1467,7 +1468,7 @@ package body Clean is\n          if Argument_Count = 0 then\n             Usage;\n          else\n-            Put_Line (\"type \"\"gnatclean --help\"\" for help\");\n+            Try_Help;\n          end if;\n \n          return;"}, {"sha": "3aec3b15e0e3461a08d0626e2b94f63df1aff66e", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -11805,6 +11805,9 @@ package body Exp_Ch4 is\n    --  do not need to generate an actual or formal generic part, just the\n    --  instantiated function itself.\n \n+   --  Perhaps we could have the actual generic available in the run-time,\n+   --  obtained by rtsfind, and actually expand a real instantiation ???\n+\n    function Make_Array_Comparison_Op\n      (Typ : Entity_Id;\n       Nod : Node_Id) return Node_Id"}, {"sha": "ae8a3900aecd005cb41eaba1f7b29a4826388f39", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -2036,7 +2036,10 @@ package body Exp_Dist is\n          Append_To (Decls, RPC_Receiver_Decl);\n \n       else\n-         --  Comments required here???\n+         --  Case of RACW implementing a RAS with the GARLIC PCS: there is\n+         --  no RPC receiver in that case, this is just an indication of\n+         --  where to insert code in the tree (see comment in declaration of\n+         --  type Stub_Structure).\n \n          RPC_Receiver_Decl := Last (Decls);\n       end if;"}, {"sha": "acd10734d8bcab0ba0932ca4426d4c749440bbde", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 54, "deletions": 29, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -4238,9 +4238,9 @@ package body Exp_Util is\n          --  When a function call appears in Object.Operation format, the\n          --  original representation has two possible forms depending on the\n          --  availability of actual parameters:\n-         --\n-         --    Obj.Func_Call          --  N_Selected_Component\n-         --    Obj.Func_Call (Param)  --  N_Indexed_Component\n+\n+         --    Obj.Func_Call           N_Selected_Component\n+         --    Obj.Func_Call (Param)   N_Indexed_Component\n \n          else\n             if Nkind (Expr) = N_Indexed_Component then\n@@ -4557,15 +4557,6 @@ package body Exp_Util is\n       --  Start of processing for Is_Aliased\n \n       begin\n-         --  Aliasing in expression with actions does not matter because the\n-         --  scope of the transient object is always limited by the scope of\n-         --  the EWA. Such objects are always hooked and always finalized at\n-         --  the end of the EWA's scope.\n-\n-         if Nkind (Rel_Node) = N_Expression_With_Actions then\n-            return False;\n-         end if;\n-\n          Stmt := First_Stmt;\n          while Present (Stmt) loop\n             if Nkind (Stmt) = N_Object_Declaration then\n@@ -5295,18 +5286,34 @@ package body Exp_Util is\n \n    function Is_Volatile_Reference (N : Node_Id) return Boolean is\n    begin\n-      if Nkind (N) in N_Has_Etype\n-        and then Present (Etype (N))\n-        and then Treat_As_Volatile (Etype (N))\n-      then\n+      --  Only source references are to be treated as volatile, internally\n+      --  generated stuff cannot have volatile external effects.\n+\n+      if not Comes_From_Source (N) then\n+         return False;\n+\n+      --  Never true for reference to a type\n+\n+      elsif Is_Entity_Name (N) and then Is_Type (Entity (N)) then\n+         return False;\n+\n+      --  True if object reference with volatile type\n+\n+      elsif Is_Volatile_Object (N) then\n          return True;\n \n+      --  True if reference to volatile entity\n+\n       elsif Is_Entity_Name (N) then\n          return Treat_As_Volatile (Entity (N));\n \n+      --  True for slice of volatile array\n+\n       elsif Nkind (N) = N_Slice then\n          return Is_Volatile_Reference (Prefix (N));\n \n+      --  True if volatile component\n+\n       elsif Nkind_In (N, N_Indexed_Component, N_Selected_Component) then\n          if (Is_Entity_Name (Prefix (N))\n               and then Has_Volatile_Components (Entity (Prefix (N))))\n@@ -5318,6 +5325,8 @@ package body Exp_Util is\n             return Is_Volatile_Reference (Prefix (N));\n          end if;\n \n+      --  Otherwise false\n+\n       else\n          return False;\n       end if;\n@@ -6844,9 +6853,7 @@ package body Exp_Util is\n       --  (this happens because routines Duplicate_Subexpr_XX implicitly invoke\n       --  Remove_Side_Effects).\n \n-      if No (Exp_Type)\n-        or else Ekind (Exp_Type) = E_Access_Attribute_Type\n-      then\n+      if No (Exp_Type) or else Ekind (Exp_Type) = E_Access_Attribute_Type then\n          return;\n \n       --  No action needed for side-effect free expressions\n@@ -6913,9 +6920,12 @@ package body Exp_Util is\n          Insert_Action (Exp, E);\n \n       --  If the expression has the form v.all then we can just capture the\n-      --  pointer, and then do an explicit dereference on the result.\n+      --  pointer, and then do an explicit dereference on the result, but\n+      --  this is not right if this is a volatile reference.\n \n-      elsif Nkind (Exp) = N_Explicit_Dereference then\n+      elsif Nkind (Exp) = N_Explicit_Dereference\n+        and then not Is_Volatile_Reference (Exp)\n+      then\n          Def_Id := Make_Temporary (Loc, 'R', Exp);\n          Res :=\n            Make_Explicit_Dereference (Loc, New_Occurrence_Of (Def_Id, Loc));\n@@ -6987,17 +6997,21 @@ package body Exp_Util is\n       --  This is needed for correctness in the case of a volatile object of\n       --  a non-volatile type because the Make_Reference call of the \"default\"\n       --  approach would generate an illegal access value (an access value\n-      --  cannot designate such an object - see Analyze_Reference). We skip\n-      --  using this scheme if we have an object of a volatile type and we do\n-      --  not have Name_Req set true (see comments for Side_Effect_Free).\n-\n-      --  In Ada 2012 a qualified expression is an object, but for purposes of\n-      --  removing side effects it still need to be transformed into a separate\n-      --  declaration, particularly if the expression is an aggregate.\n+      --  cannot designate such an object - see Analyze_Reference).\n \n       elsif Is_Object_Reference (Exp)\n         and then Nkind (Exp) /= N_Function_Call\n+\n+        --  In Ada 2012 a qualified expression is an object, but for purposes\n+        --  of removing side effects it still need to be transformed into a\n+        --  separate declaration, particularly in the case of an aggregate.\n+\n         and then Nkind (Exp) /= N_Qualified_Expression\n+\n+        --  We skip using this scheme if we have an object of a volatile\n+        --  type and we do not have Name_Req set true (see comments for\n+        --  Side_Effect_Free).\n+\n         and then (Name_Req or else not Treat_As_Volatile (Exp_Type))\n       then\n          Def_Id := Make_Temporary (Loc, 'R', Exp);\n@@ -8030,6 +8044,12 @@ package body Exp_Util is\n    --  Start of processing for Side_Effect_Free\n \n    begin\n+      --  If volatile reference, always consider it to have side effects\n+\n+      if Is_Volatile_Reference (N) then\n+         return False;\n+      end if;\n+\n       --  Note on checks that could raise Constraint_Error. Strictly, if we\n       --  take advantage of 11.6, these checks do not count as side effects.\n       --  However, we would prefer to consider that they are side effects,\n@@ -8043,12 +8063,17 @@ package body Exp_Util is\n \n       if Is_Entity_Name (N) then\n \n+         --  A type reference is always side effect free\n+\n+         if Is_Type (Entity (N)) then\n+            return True;\n+\n          --  Variables are considered to be a side effect if Variable_Ref\n          --  is set or if we have a volatile reference and Name_Req is off.\n          --  If Name_Req is True then we can't help returning a name which\n          --  effectively allows multiple references in any case.\n \n-         if Is_Variable (N, Use_Original_Node => False) then\n+         elsif Is_Variable (N, Use_Original_Node => False) then\n             return not Variable_Ref\n               and then (not Is_Volatile_Reference (N) or else Name_Req);\n "}, {"sha": "d472ee52958f22359442067c3fa8730e3b11f5d0", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -3534,10 +3534,7 @@ package body GNAT.Command_Line is\n                    & \": unrecognized option '\"\n                    & Full_Switch (Parser)\n                    & \"'\");\n-         Put_Line (Standard_Error,\n-                   \"Try `\"\n-                   & Base_Name (Ada.Command_Line.Command_Name)\n-                   & \" --help` for more information.\");\n+         Try_Help;\n \n          raise;\n \n@@ -3588,4 +3585,20 @@ package body GNAT.Command_Line is\n       end loop;\n    end Build;\n \n+   --------------\n+   -- Try_Help --\n+   --------------\n+\n+   --  Note: Any change to the message displayed should also be done in\n+   --  gnatbind.adb that does not use this interface.\n+\n+   procedure Try_Help is\n+   begin\n+      Put_Line\n+        (Standard_Error,\n+         \"try `\" &\n+         Base_Name (Ada.Command_Line.Command_Name) &\n+         \" --help` for more information.\");\n+   end Try_Help;\n+\n end GNAT.Command_Line;"}, {"sha": "109e83638b8202a2ae308e404c34e433a81c2140", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2013, AdaCore                     --\n+--                     Copyright (C) 1999-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1000,6 +1000,13 @@ package GNAT.Command_Line is\n    --\n    --  Expanded has the same meaning as in Start.\n \n+   procedure Try_Help;\n+   --  Output a message on standard error to indicate how to get the usage for\n+   --  the executable. This procedure should only be called when the executable\n+   --  accepts switch --help. When this procedure is called by executable xxx,\n+   --  the following message is displayed on standard error:\n+   --      try `xxx --help` for more information.\n+\n private\n \n    Max_Depth : constant := 100;"}, {"sha": "48d7ea41d2a662d18d06ffb3e977c051234da61c", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -444,6 +444,7 @@ Partition-Wide Restrictions\n * No_Local_Allocators::\n * No_Local_Protected_Objects::\n * No_Local_Timing_Events::\n+* No_Long_Long_Integers::\n * No_Nested_Finalization::\n * No_Protected_Type_Allocators::\n * No_Protected_Types::\n@@ -9918,6 +9919,7 @@ then all compilation units in the partition must obey the restriction).\n * No_Local_Allocators::\n * No_Local_Protected_Objects::\n * No_Local_Timing_Events::\n+* No_Long_Long_Integers::\n * No_Nested_Finalization::\n * No_Protected_Type_Allocators::\n * No_Protected_Types::\n@@ -10367,6 +10369,14 @@ only declared at the library level.\n [RM D.7] All objects of type Ada.Timing_Events.Timing_Event are\n declared at the library level.\n \n+@node No_Long_Long_Integers\n+@unnumberedsubsec No_Long_Long_Integers\n+@findex No_Long_Long_Integers\n+[GNAT] This partition-wide restriction forbids any explicit reference to\n+type Standard.Long_Long_Integer, and also forbids declaring range types whose\n+implicit base type is Long_Long_Integer, and modular types whose size exceeds\n+Long_Integer'Size.\n+\n @node No_Nested_Finalization\n @unnumberedsubsec No_Nested_Finalization\n @findex No_Nested_Finalization"}, {"sha": "5d0c8e4d468afe62a75e3cdf58ab5afb4d78738b", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 38, "deletions": 18, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -14620,6 +14620,13 @@ as output file.\n The output may be redirected by the following switches:\n \n @table @option\n+@item ^--output-dir=@var{dir}^/OUTPUT_DIR=@var{dir}^\n+@cindex @option{^--output-dir^/OUTPUT_DIR^} (@command{gnatpp})\n+Generate output file in directory @file{dir} with the same name as the input\n+file. If @file{dir} is the same as the directory containing the input file,\n+the input file is not processed; use @option{^-rnb^/REPLACE_NO_BACKUP^}\n+if you want to update the input file in place.\n+\n @item ^-pipe^/STANDARD_OUTPUT^\n @cindex @option{^-pipe^/STANDARD_OUTPUT^} (@command{gnatpp})\n Send the output to @code{Standard_Output}\n@@ -14745,6 +14752,13 @@ Indicates that external variable @var{name} in the argument project\n has the value @var{value}. Has no effect if no project is specified as\n tool argument.\n \n+@item --incremental\n+@cindex @option{--incremental} @command{gnatpp}\n+Incremental processing on a per-file basis. Source files are only\n+processed if they have been modified, or if files they depend on have\n+been modified. This is similar to the way gnatmake/gprbuild only\n+compiles files that need to be recompiled.\n+\n @item --pp-off=@var{xxx}\n @cindex @option{--pp-off} @command{gnatpp}\n Use @code{--xxx} as the command to turn off pretty printing, instead\n@@ -14769,14 +14783,21 @@ files.\n \n @item ^-j^/PROCESSES=^@var{n}\n @cindex @option{^-j^/PROCESSES^} (@command{gnatpp})\n-Use @var{n} processes to carry out the tree creations (internal representations\n-of the argument sources). On a multiprocessor machine this speeds up processing\n-of big sets of argument sources. If @var{n} is 0, then the maximum number of\n-parallel tree creations is the number of core processors on the platform.\n-This option cannot be used together with @option{^-r^/REPLACE^},\n+Without @option{--incremental}, use @var{n} processes to carry out the\n+tree creations (internal representations of the argument sources). On\n+a multiprocessor machine this speeds up processing of big sets of\n+argument sources. If @var{n} is 0, then the maximum number of parallel\n+tree creations is the number of core processors on the platform. This\n+option cannot be used together with @option{^-r^/REPLACE^},\n @option{^-rf^/OVERRIDING_REPLACE^} or\n @option{^-rnb^/REPLACE_NO_BACKUP^} option.\n \n+With @option{--incremental}, use @var{n} @command{gnatpp} processes to\n+perform pretty-printing in parallel. @var{n} = 0 means the same as\n+above. In this case, @option{^-r^/REPLACE^},\n+@option{^-rf^/OVERRIDING_REPLACE^} or\n+@option{^-rnb^/REPLACE_NO_BACKUP^} options are allowed.\n+\n @cindex @option{^-t^/TIME^} (@command{gnatpp})\n @item ^-t^/TIME^\n Print out execution time.\n@@ -15155,16 +15176,15 @@ that conforms to the schema.\n Usage:\n \n @smallexample\n-gnat2xml [options] files\n+gnat2xml [options] filenames [-files filename] [-cargs gcc_switches]\n @end smallexample\n \n-``files'' are the Ada source file names.\n-\n @noindent\n-Options:\n+options:\n @smallexample\n -h\n --help -- generate usage information and quit, ignoring all other options\n+--version -- print version and quit, ignoring all other options\n \n -P @file{file} -- indicates the name of the project file that describes\n       the set of sources to be processed. The exact set of argument\n@@ -15186,25 +15206,25 @@ Options:\n --incremental -- incremental processing on a per-file basis. Source files are\n       only processed if they have been modified, or if files they depend\n       on have been modified. This is similar to the way gnatmake/gprbuild\n-      only compiles files that need to be recompiled. You need to use a project\n-      file for this to work.\n+      only compiles files that need to be recompiled.\n \n --output-dir=@var{dir} -- generate one .xml file for each Ada source file, in\n       directory @file{dir}. (Default is to generate the XML to standard\n       output.)\n \n+-I <include-dir>\n+    directories to search for dependencies\n+    You can also set the ADA_INCLUDE_PATH environment variable for this.\n+\n --compact -- debugging version, with interspersed source, and a more\n       compact representation of \"sloc\". This version does not conform\n       to any schema.\n \n--I <include-dir>\n-    directories to search for dependencies\n-    You can also set the ADA_INCLUDE_PATH environment variable for this.\n+-files=filename - the name of a text file containing a list\n+                  of Ada source files to process\n \n -q -- quiet\n-\n--v -- verbose (print out the command line options, and the names of\n-      output files as they are generated).\n+-v -- verbose\n \n -cargs ... -- options to pass to gcc\n @end smallexample\n@@ -15217,7 +15237,7 @@ sources is all the immediate units of the argument project.\n Example:\n \n @smallexample\n-gnat2xml -v -mxml-files *.ad[sb] -cargs -gnat2012\n+gnat2xml -v -output-dir=xml-files *.ad[sb]\n @end smallexample\n \n @noindent"}, {"sha": "82da0655c4c0a8a8674afec4bd2e7d34efb3bd38", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -672,7 +672,7 @@ begin\n       if Argument_Count = 0 then\n          Bindusg.Display;\n       else\n-         Write_Line (\"type \"\"gnatbind --help\"\" for help\");\n+         Write_Line (\"try `gnatbind --help` for more information.\");\n       end if;\n \n       Exit_Program (E_Fatal);"}, {"sha": "3d953a2ec3db00dbacc7539cfef2e4600c646bbf", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -1251,7 +1251,7 @@ procedure Gnatchop is\n          if Argument_Count = 0 then\n             Usage;\n          else\n-            Put_Line (\"type \"\"gnatchop --help\"\" for help\");\n+            Try_Help;\n          end if;\n \n          return False;"}, {"sha": "adde08407fb4584243af801a2f2034b78b5f3a8a", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -228,7 +228,7 @@ procedure Gnatfind is\n                end if;\n \n             when others =>\n-               Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+               Try_Help;\n                raise Usage_Error;\n          end case;\n       end loop;\n@@ -268,18 +268,18 @@ procedure Gnatfind is\n       when GNAT.Command_Line.Invalid_Switch =>\n          Ada.Text_IO.Put_Line (\"Invalid switch : \"\n                                & GNAT.Command_Line.Full_Switch);\n-         Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+         Try_Help;\n          raise Usage_Error;\n \n       when GNAT.Command_Line.Invalid_Parameter =>\n          Ada.Text_IO.Put_Line (\"Parameter missing for : \"\n                                & GNAT.Command_Line.Full_Switch);\n-         Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+         Try_Help;\n          raise Usage_Error;\n \n       when Xref_Lib.Invalid_Argument =>\n          Ada.Text_IO.Put_Line (\"Invalid line or column in the pattern\");\n-         Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+         Try_Help;\n          raise Usage_Error;\n    end Parse_Cmd_Line;\n \n@@ -352,7 +352,7 @@ begin\n       if Argument_Count = 0 then\n          Write_Usage;\n       else\n-         Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+         Try_Help;\n          raise Usage_Error;\n       end if;\n    end if;\n@@ -382,7 +382,7 @@ begin\n       Ada.Text_IO.Put_Line (\"Error: for type hierarchy output you must \"\n                             & \"specify only one file.\");\n       Ada.Text_IO.New_Line;\n-      Put_Line (\"type \"\"gnatfind --help\"\" for help\");\n+      Try_Help;\n       raise Usage_Error;\n    end if;\n "}, {"sha": "4a7c2176a62dc0caa8ded3ada1b06f6632260f67", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -47,7 +47,8 @@ with Types;       use Types;\n \n with Ada.Command_Line; use Ada.Command_Line;\n \n-with GNAT.Case_Util; use GNAT.Case_Util;\n+with GNAT.Command_Line; use GNAT.Command_Line;\n+with GNAT.Case_Util;    use GNAT.Case_Util;\n \n procedure Gnatls is\n    pragma Ident (Gnat_Static_Version_String);\n@@ -1601,7 +1602,7 @@ begin\n       Set_Standard_Error;\n       Write_Str (\"Can't use -l with another switch\");\n       Write_Eol;\n-      Write_Line (\"type \"\"gnatls --help\"\" for help\");\n+      Try_Help;\n       Exit_Program (E_Fatal);\n    end if;\n \n@@ -1753,7 +1754,7 @@ begin\n          if Argument_Count = 0 then\n             Usage;\n          else\n-            Write_Line (\"type \"\"gnatls --help\"\" for help\");\n+            Try_Help;\n          end if;\n       end if;\n "}, {"sha": "47ed2e5dad580cd44298ec7116ddc853ff6bcb1c", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -26,6 +26,7 @@\n with Ada.Command_Line;  use Ada.Command_Line;\n with Ada.Text_IO;       use Ada.Text_IO;\n \n+with GNAT.Command_Line; use GNAT.Command_Line;\n with GNAT.Dynamic_Tables;\n with GNAT.OS_Lib;       use GNAT.OS_Lib;\n \n@@ -289,7 +290,7 @@ procedure Gnatname is\n                       Patterns.Last\n                         (Arguments.Table (Arguments.Last).Foreign_Patterns) = 0\n                   then\n-                     Put_Line (\"type \"\"gnatname --help\"\" for help\");\n+                     Try_Help;\n                      return;\n                   end if;\n \n@@ -621,8 +622,8 @@ begin\n    then\n       if Argument_Count = 0 then\n          Usage;\n-      else\n-         Put_Line (\"type \"\"gnatname --help\"\" for help\");\n+      elsif not Usage_Output then\n+         Try_Help;\n       end if;\n \n       return;"}, {"sha": "1611ed9b30e9d05b1d8b5232ad751288440c746a", "filename": "gcc/ada/gnatxref.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatxref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgnatxref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatxref.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -210,7 +210,7 @@ procedure Gnatxref is\n                end if;\n \n             when others =>\n-               Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+               Try_Help;\n                raise Usage_Error;\n          end case;\n       end loop;\n@@ -227,7 +227,7 @@ procedure Gnatxref is\n             if Ada.Strings.Fixed.Index (S, \":\") /= 0 then\n                Ada.Text_IO.Put_Line\n                  (\"Only file names are allowed on the command line\");\n-               Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+               Try_Help;\n                raise Usage_Error;\n             end if;\n \n@@ -240,13 +240,13 @@ procedure Gnatxref is\n       when GNAT.Command_Line.Invalid_Switch =>\n          Ada.Text_IO.Put_Line (\"Invalid switch : \"\n                                & GNAT.Command_Line.Full_Switch);\n-         Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+         Try_Help;\n          raise Usage_Error;\n \n       when GNAT.Command_Line.Invalid_Parameter =>\n          Ada.Text_IO.Put_Line (\"Parameter missing for : \"\n                                & GNAT.Command_Line.Full_Switch);\n-         Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+         Try_Help;\n          raise Usage_Error;\n    end Parse_Cmd_Line;\n \n@@ -304,7 +304,7 @@ begin\n       if Argument_Count = 0 then\n          Write_Usage;\n       else\n-         Put_Line (\"type \"\"gnatxref --help\"\" for help\");\n+         Try_Help;\n          raise Usage_Error;\n       end if;\n    end if;"}, {"sha": "c4bf8e91a522f7842cbcec9cc0519ca4affccaa8", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -209,7 +209,7 @@ package body GPrep is\n          if Argument_Count = 0 then\n             Usage;\n          else\n-            Put_Line (\"type \"\"gnatprep --help\"\" for help\");\n+            GNAT.Command_Line.Try_Help;\n          end if;\n \n          return;\n@@ -218,7 +218,7 @@ package body GPrep is\n \n          --  No output file specified, exit\n \n-         Put_Line (\"type \"\"gnatprep --help\"\" for help\");\n+         GNAT.Command_Line.Try_Help;\n          return;\n       end if;\n \n@@ -773,7 +773,7 @@ package body GPrep is\n             when GNAT.Command_Line.Invalid_Switch =>\n                Write_Str (\"Invalid Switch: -\");\n                Write_Line (GNAT.Command_Line.Full_Switch);\n-               Put_Line (\"type \"\"gnatprep --help\"\" for help\");\n+               GNAT.Command_Line.Try_Help;\n                OS_Exit (1);\n          end;\n       end loop;"}, {"sha": "a426df6c63aff5eee1013cd6767d18010a90ba52", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -73,6 +73,7 @@ with Ada.Directories;\n with Ada.Exceptions;            use Ada.Exceptions;\n \n with GNAT.Case_Util;            use GNAT.Case_Util;\n+with GNAT.Command_Line;         use GNAT.Command_Line;\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.Dynamic_HTables;      use GNAT.Dynamic_HTables;\n with GNAT.OS_Lib;               use GNAT.OS_Lib;\n@@ -5861,7 +5862,7 @@ package body Make is\n             if Argument_Count = 0 then\n                Usage;\n             else\n-               Write_Line (\"type \"\"gnatmake --help\"\" for help\");\n+               Try_Help;\n             end if;\n \n             Finish_Program (Project_Tree, E_Success);"}, {"sha": "c71eb2b1caac855a5cddd11d749a5374e863f57e", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -129,7 +129,7 @@ package Restrict is\n       No_Implicit_Loops                  => True,\n       No_Initialize_Scalars              => True,\n       No_Local_Protected_Objects         => True,\n-      No_Long_Long_Integer               => True,\n+      No_Long_Long_Integers              => True,\n       No_Protected_Type_Allocators       => True,\n       No_Relative_Delay                  => True,\n       No_Requeue_Statements              => True,"}, {"sha": "3e6e25ca77b133fa7057457249901012a40f20b4", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -124,7 +124,7 @@ package System.Rident is\n       No_Local_Allocators,                       -- (RM H.4(8))\n       No_Local_Timing_Events,                    -- (RM D.7(10.2/2))\n       No_Local_Protected_Objects,                -- Ada 2012 (D.7(10/1.3))\n-      No_Long_Long_Integer,                      -- GNAT\n+      No_Long_Long_Integers,                     -- GNAT\n       No_Nested_Finalization,                    -- (RM D.7(4))\n       No_Protected_Type_Allocators,              -- Ada 2012 (D.7 (10.3/2))\n       No_Protected_Types,                        -- (RM H.4(5))"}, {"sha": "1a02abf2ffcb037c5d36ad75b45fc875585f163a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -17446,7 +17446,7 @@ package body Sem_Ch3 is\n       end if;\n \n       if M_Val > 2 ** Standard_Long_Integer_Size then\n-         Check_Restriction (No_Long_Long_Integer, Mod_Expr);\n+         Check_Restriction (No_Long_Long_Integers, Mod_Expr);\n       end if;\n \n       Set_Modulus (T, M_Val);\n@@ -20626,7 +20626,7 @@ package body Sem_Ch3 is\n             Base_Typ := Base_Type (Standard_Long_Integer);\n \n          elsif Can_Derive_From (Standard_Long_Long_Integer) then\n-            Check_Restriction (No_Long_Long_Integer, Def);\n+            Check_Restriction (No_Long_Long_Integers, Def);\n             Base_Typ := Base_Type (Standard_Long_Long_Integer);\n \n          else"}, {"sha": "7ac496c202ddc941d5e6fbd9081a1ec26ddb408e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -15981,7 +15981,7 @@ package body Sem_Util is\n       end if;\n \n       if Val = Standard_Long_Long_Integer then\n-         Check_Restriction (No_Long_Long_Integer, Post_Node);\n+         Check_Restriction (No_Long_Long_Integers, Post_Node);\n       end if;\n \n       --  Check for violation of No_Dynamic_Attachment"}, {"sha": "623e99228d833980a7751547ce4ef0fa473be3ae", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -1796,7 +1796,7 @@ package Sem_Util is\n    --    If restriction No_Dynamic_Attachment is set, then it checks that the\n    --    entity is not one of the restricted names for this restriction.\n    --\n-   --    If restriction No_Long_Long_Integer is set, then it checks that the\n+   --    If restriction No_Long_Long_Integers is set, then it checks that the\n    --    entity is not Standard.Long_Long_Integer.\n    --\n    --    If restriction No_Implementation_Identifiers is set, then it checks"}, {"sha": "f2ad1ec6f451d7fb1921b89bc0b237b456584855", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb01279084cc4ed7c7894d16be6af502fb5ad914/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=bb01279084cc4ed7c7894d16be6af502fb5ad914", "patch": "@@ -2247,7 +2247,15 @@ package body Sprint is\n                      Write_Str_With_Col_Check (\"not null \");\n                   end if;\n \n-                  Sprint_Node (Object_Definition (Node));\n+                  --  Print type, we used to print the Object_Definition from\n+                  --  the node, but it is much more useful to print the Etype\n+                  --  of the defining identifier. For example, this will be a\n+                  --  clear reference to the Itype with the bounds in the case\n+                  --  of an unconstrained array type like String. The object\n+                  --  after all is constrained, even if its nominal subtype is\n+                  --  unconstrained.\n+\n+                  Sprint_Node (Etype (Def_Id));\n \n                   if Present (Expression (Node)) then\n                      Write_Str (\" := \");"}]}