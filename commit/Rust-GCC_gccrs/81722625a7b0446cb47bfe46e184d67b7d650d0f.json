{"sha": "81722625a7b0446cb47bfe46e184d67b7d650d0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE3MjI2MjVhN2IwNDQ2Y2I0N2JmZTQ2ZTE4NGQ2N2I3ZDY1MGQwZg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-15T18:36:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-15T18:36:21Z"}, "message": "pa.md (sh[123]add patterns): Use register_operand, not shadd_operand.\n\n\t* pa.md (sh[123]add patterns): Use register_operand, not\n\tshadd_operand.\n\t(sh[123]add patterns for reload): Special patterns to avoid\n\tlossage due to reload problems.\n\nFrom-SVN: r3737", "tree": {"sha": "719083e61fc161b752c8e7b05ef5e8356706ae77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/719083e61fc161b752c8e7b05ef5e8356706ae77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81722625a7b0446cb47bfe46e184d67b7d650d0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81722625a7b0446cb47bfe46e184d67b7d650d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81722625a7b0446cb47bfe46e184d67b7d650d0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81722625a7b0446cb47bfe46e184d67b7d650d0f/comments", "author": null, "committer": null, "parents": [{"sha": "5fcd63d09c9d0b4ac22bc2f95e10ce2dc4705a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fcd63d09c9d0b4ac22bc2f95e10ce2dc4705a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fcd63d09c9d0b4ac22bc2f95e10ce2dc4705a78"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "0f220c8e08b1805ea3ed72d4a0825c5ab7cd2cf2", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81722625a7b0446cb47bfe46e184d67b7d650d0f/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81722625a7b0446cb47bfe46e184d67b7d650d0f/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=81722625a7b0446cb47bfe46e184d67b7d650d0f", "patch": "@@ -2250,32 +2250,67 @@\n   [(set_attr \"type\" \"load\")\n    (set_attr \"length\" \"1\")])\n \n-;; Using shadd_operand works around a bug in reload.  For 2.4 fix\n-;; reload and use register_operand instead.\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t  (const_int 2))\n-\t\t (match_operand:SI 1 \"shadd_operand\" \"r\")))]\n+\t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"sh1add %2,%1,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t  (const_int 4))\n-\t\t (match_operand:SI 1 \"shadd_operand\" \"r\")))]\n+\t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"sh2add %2,%1,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t  (const_int 8))\n-\t\t (match_operand:SI 1 \"shadd_operand\" \"r\")))]\n+\t\t (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n   \"sh3add %2,%1,%0\")\n \n+;; These variants of the above insns can occur if the first operand\n+;; is the frame pointer.  This is a kludge, but there doesn't\n+;; seem to be a way around it.  Only recognize them while reloading.\n+\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n+\t(plus:SI (plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n+\t\t\t\t   (const_int 2))\n+\t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t (match_operand:SI 3 \"const_int_operand\" \"rJ\")))]\n+  \"reload_in_progress\"\n+  \"sh1add  %2,%1,%0\\\\n\\\\tadd%I3 %3,%0,%0\"\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"length\" \"2\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n+\t(plus:SI (plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n+\t\t\t\t   (const_int 4))\n+\t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t (match_operand:SI 3 \"const_int_operand\" \"rJ\")))]\n+  \"reload_in_progress\"\n+  \"sh2add  %2,%1,%0\\\\n\\\\tadd%I3 %3,%0,%0\"\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"length\" \"2\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n+\t(plus:SI (plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n+\t\t\t\t   (const_int 8))\n+\t\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t (match_operand:SI 3 \"const_int_operand\" \"rJ\")))]\n+  \"reload_in_progress\"\n+  \"sh3add  %2,%1,%0\\\\n\\\\tadd%I3 %3,%0,%0\"\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"length\" \"2\")])\n+\n (define_expand \"ashlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ashift:SI (match_operand:SI 1 \"lhs_lshift_operand\" \"\")"}]}