{"sha": "f2db46026408095de13e9b74659fd06d9c02f7f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJkYjQ2MDI2NDA4MDk1ZGUxM2U5Yjc0NjU5ZmQwNmQ5YzAyZjdmMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-10-03T08:30:10Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-10-03T08:30:10Z"}, "message": "Properly mark lambdas in GCOV (PR gcov-profile/86109).\n\n2018-10-03  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/86109\n\t* coverage.c (coverage_begin_function): Do not\n\tmark lambdas as artificial.\n\t* tree-core.h (struct GTY): Remove tm_clone_flag\n\tand introduce new lambda_function.\n\t* tree.h (DECL_LAMBDA_FUNCTION): New macro.\n2018-10-03  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/86109\n\t* parser.c (cp_parser_lambda_declarator_opt):\n\tSet DECL_LAMBDA_FUNCTION for lambdas.\n2018-10-03  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/86109\n\t* g++.dg/gcov/pr86109.C: New test.\n\nFrom-SVN: r264806", "tree": {"sha": "8fa1a89d2850e78140a6a1c0472e9dd5b6b6d777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fa1a89d2850e78140a6a1c0472e9dd5b6b6d777"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2db46026408095de13e9b74659fd06d9c02f7f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2db46026408095de13e9b74659fd06d9c02f7f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2db46026408095de13e9b74659fd06d9c02f7f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2db46026408095de13e9b74659fd06d9c02f7f3/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "784779d47117cf90c1facb844d4845ba7c97bd34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/784779d47117cf90c1facb844d4845ba7c97bd34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/784779d47117cf90c1facb844d4845ba7c97bd34"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "a6e1a8ebdf0d74463db36ade34925bc46bf12654", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2db46026408095de13e9b74659fd06d9c02f7f3", "patch": "@@ -1,3 +1,12 @@\n+2018-10-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/86109\n+\t* coverage.c (coverage_begin_function): Do not\n+\tmark lambdas as artificial.\n+\t* tree-core.h (struct GTY): Remove tm_clone_flag\n+\tand introduce new lambda_function.\n+\t* tree.h (DECL_LAMBDA_FUNCTION): New macro.\n+\n 2018-10-02  Aaron Sawdey  <acsawdey@linux.ibm.com>\n \n \tPR target/87474"}, {"sha": "599a3bb9aeb60c440775cd601bf40265a9a508ec", "filename": "gcc/coverage.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=f2db46026408095de13e9b74659fd06d9c02f7f3", "patch": "@@ -630,7 +630,8 @@ coverage_begin_function (unsigned lineno_checksum, unsigned cfg_checksum)\n   gcov_write_string (IDENTIFIER_POINTER\n \t\t     (DECL_ASSEMBLER_NAME (current_function_decl)));\n   gcov_write_unsigned (DECL_ARTIFICIAL (current_function_decl)\n-\t\t       && !DECL_FUNCTION_VERSIONED (current_function_decl));\n+\t\t       && !DECL_FUNCTION_VERSIONED (current_function_decl)\n+\t\t       && !DECL_LAMBDA_FUNCTION (current_function_decl));\n   gcov_write_filename (xloc.file);\n   gcov_write_unsigned (xloc.line);\n   gcov_write_unsigned (xloc.column);"}, {"sha": "53ff0eb0a27d5e13e2bf8b015bf52f0ad3620fc0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f2db46026408095de13e9b74659fd06d9c02f7f3", "patch": "@@ -1,3 +1,9 @@\n+2018-10-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/86109\n+\t* parser.c (cp_parser_lambda_declarator_opt):\n+\tSet DECL_LAMBDA_FUNCTION for lambdas.\n+\n 2018-10-02  Richard Biener  <rguenther@suse.de>\n \n \t* name-lookup.c (check_local_shadow): Do not test DECL_FROM_INLINE."}, {"sha": "a17cc3f23f2ece1dd51a4afd47291b9f680a0175", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f2db46026408095de13e9b74659fd06d9c02f7f3", "patch": "@@ -10641,6 +10641,7 @@ cp_parser_lambda_declarator_opt (cp_parser* parser, tree lambda_expr)\n \tDECL_ARTIFICIAL (fco) = 1;\n \t/* Give the object parameter a different name.  */\n \tDECL_NAME (DECL_ARGUMENTS (fco)) = closure_identifier;\n+\tDECL_LAMBDA_FUNCTION (fco) = 1;\n       }\n     if (template_param_list)\n       {"}, {"sha": "a888b8ffa4d89e6ca234af8a414e8245c1e5fc3b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2db46026408095de13e9b74659fd06d9c02f7f3", "patch": "@@ -1,3 +1,8 @@\n+2018-10-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/86109\n+\t* g++.dg/gcov/pr86109.C: New test.\n+\n 2018-10-02  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.dg/tree-ssa/muldiv-1.c: New file."}, {"sha": "9052d2e5a042d1026b688c7a808975663e7f05ab", "filename": "gcc/testsuite/g++.dg/gcov/pr86109.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr86109.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr86109.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr86109.C?ref=f2db46026408095de13e9b74659fd06d9c02f7f3", "patch": "@@ -0,0 +1,16 @@\n+\n+/* { dg-options \"-fprofile-arcs -ftest-coverage -std=c++11\" } */\n+/* { dg-do run { target native } } */\n+\n+int main()\n+{\n+    auto partially_uncovered_lambda = [](int i) { /* count(1) */\n+        if (i > 10) /* count(1) */\n+            return 0; /* count(1) */\n+        return 1; /* count(#####) */\n+    };\n+\n+    return partially_uncovered_lambda(20); /* count(1) */\n+}\n+\n+/* { dg-final { run-gcov pr86109.C } } */"}, {"sha": "cd3a2bad08ce5109db3134ce1faad3220fd704ef", "filename": "gcc/tree-core.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=f2db46026408095de13e9b74659fd06d9c02f7f3", "patch": "@@ -1789,8 +1789,8 @@ struct GTY(()) tree_function_decl {\n   unsigned pure_flag : 1;\n   unsigned looping_const_or_pure_flag : 1;\n   unsigned has_debug_args_flag : 1;\n-  unsigned tm_clone_flag : 1;\n   unsigned versioned_function : 1;\n+  unsigned lambda_function: 1;\n   /* No bits left.  */\n };\n "}, {"sha": "a0f24b61ef187d21aacd0c62dfd544a299885c02", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2db46026408095de13e9b74659fd06d9c02f7f3/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=f2db46026408095de13e9b74659fd06d9c02f7f3", "patch": "@@ -3041,6 +3041,10 @@ extern vec<tree, va_gc> **decl_debug_args_insert (tree);\n #define DECL_CXX_DESTRUCTOR_P(NODE)\\\n    (FUNCTION_DECL_CHECK (NODE)->decl_with_vis.cxx_destructor)\n \n+/* In FUNCTION_DECL, this is set if this function is a lambda function.  */\n+#define DECL_LAMBDA_FUNCTION(NODE) \\\n+  (FUNCTION_DECL_CHECK (NODE)->function_decl.lambda_function)\n+\n /* In FUNCTION_DECL that represent an virtual method this is set when\n    the method is final.  */\n #define DECL_FINAL_P(NODE)\\"}]}