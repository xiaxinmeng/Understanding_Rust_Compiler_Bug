{"sha": "791929c91a53a168bb46e3cd08612eb69d5a6785", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkxOTI5YzkxYTUzYTE2OGJiNDZlM2NkMDg2MTJlYjY5ZDVhNjc4NQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2017-10-30T15:07:20Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2017-10-30T15:07:20Z"}, "message": "[hsa] Add missing guard in OMP gridification\n\n2017-10-30  Martin Jambor  <mjambor@suse.cz>\n\n\t* omp-grid.c (grid_attempt_target_gridification): Also insert a\n\tcondition whether loop should be executed at all.\n\nFrom-SVN: r254225", "tree": {"sha": "61cd99f7f20374930f9d8c0eda7c72268f2e331f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61cd99f7f20374930f9d8c0eda7c72268f2e331f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/791929c91a53a168bb46e3cd08612eb69d5a6785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791929c91a53a168bb46e3cd08612eb69d5a6785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/791929c91a53a168bb46e3cd08612eb69d5a6785", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791929c91a53a168bb46e3cd08612eb69d5a6785/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "932bfa9bc738058463c5430efab4aabefcfe4951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932bfa9bc738058463c5430efab4aabefcfe4951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/932bfa9bc738058463c5430efab4aabefcfe4951"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "8710e29f51aab3281edf66f1339ce3ccdf9a3d26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791929c91a53a168bb46e3cd08612eb69d5a6785/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791929c91a53a168bb46e3cd08612eb69d5a6785/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=791929c91a53a168bb46e3cd08612eb69d5a6785", "patch": "@@ -1,3 +1,8 @@\n+2017-10-30  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* omp-grid.c (grid_attempt_target_gridification): Also insert a\n+\tcondition whether loop should be executed at all.\n+\n 2017-10-30  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_gimple_fold_builtin): Add support for"}, {"sha": "121c96ebe396b1ffe416181e5a05929bfe1d9646", "filename": "gcc/omp-grid.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/791929c91a53a168bb46e3cd08612eb69d5a6785/gcc%2Fomp-grid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/791929c91a53a168bb46e3cd08612eb69d5a6785/gcc%2Fomp-grid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-grid.c?ref=791929c91a53a168bb46e3cd08612eb69d5a6785", "patch": "@@ -1315,6 +1315,7 @@ grid_attempt_target_gridification (gomp_target *target,\n       n1 = fold_convert (itype, n1);\n       n2 = fold_convert (itype, n2);\n \n+      tree cond = fold_build2 (cond_code, boolean_type_node, n1, n2);\n       tree step\n \t= omp_get_for_step_from_incr (loc, gimple_omp_for_incr (inner_loop, i));\n \n@@ -1328,6 +1329,7 @@ grid_attempt_target_gridification (gomp_target *target,\n \t\t\t fold_build1 (NEGATE_EXPR, itype, step));\n       else\n \tt = fold_build2 (TRUNC_DIV_EXPR, itype, t, step);\n+      t = fold_build3 (COND_EXPR, itype, cond, t, build_zero_cst (itype));\n       if (grid.tiling)\n \t{\n \t  if (cond_code == GT_EXPR)"}]}