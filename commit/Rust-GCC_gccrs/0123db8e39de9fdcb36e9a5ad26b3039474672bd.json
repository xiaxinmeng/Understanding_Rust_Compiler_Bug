{"sha": "0123db8e39de9fdcb36e9a5ad26b3039474672bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEyM2RiOGUzOWRlOWZkY2IzNmU5YTVhZDI2YjMwMzk0NzQ2NzJiZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-08T11:55:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-08T11:55:23Z"}, "message": "arc.c (arc_attribute_table): Add exclusions to the comment.\n\n\t* config/arc/arc.c (arc_attribute_table): Add exclusions to\n\tthe comment.\n\t* config/avr/avr.c (avr_attribute_table): Likewise.\n\t* config/msp430/msp430.c (msp430_attribute_table): Likewise.\n\t* config/rl78/rl78.c (rl78_attribute_table): Likewise.\n\t* config/nds32/nds32.c (nds32_attribute_table): Likewise.\n\t* config/darwin.h (SUBTARGET_ATTRIBUTE_TABLE): Initialize new member\n\tof struct attribute_spec.\n\t* config/i386/cygming.h (SUBTARGET_ATTRIBUTE_TABLE): Likewise.\nada/\n\t* gcc-interface/utils.c (gnat_internal_attribute_table): Add\n\texclusions to the comment.\nbrig/\n\t* brig-lang.c (brig_attribute_table): Fix up comment.\n\nFrom-SVN: r255509", "tree": {"sha": "755a7f1b426a31326626f964778bceb9c20e31d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/755a7f1b426a31326626f964778bceb9c20e31d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0123db8e39de9fdcb36e9a5ad26b3039474672bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0123db8e39de9fdcb36e9a5ad26b3039474672bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0123db8e39de9fdcb36e9a5ad26b3039474672bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0123db8e39de9fdcb36e9a5ad26b3039474672bd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "deb8237f2800156b6dd9c5a38dc4098714eaac8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb8237f2800156b6dd9c5a38dc4098714eaac8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deb8237f2800156b6dd9c5a38dc4098714eaac8a"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "0bc97035a8ee744ad7daf1e9f7aef3daadc3b147", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -1,3 +1,15 @@\n+2017-12-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/arc/arc.c (arc_attribute_table): Add exclusions to\n+\tthe comment.\n+\t* config/avr/avr.c (avr_attribute_table): Likewise.\n+\t* config/msp430/msp430.c (msp430_attribute_table): Likewise.\n+\t* config/rl78/rl78.c (rl78_attribute_table): Likewise.\n+\t* config/nds32/nds32.c (nds32_attribute_table): Likewise.\n+\t* config/darwin.h (SUBTARGET_ATTRIBUTE_TABLE): Initialize new member\n+\tof struct attribute_spec.\n+\t* config/i386/cygming.h (SUBTARGET_ATTRIBUTE_TABLE): Likewise.\n+\n 2017-12-08  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \tPR target/82960"}, {"sha": "c676e7b877f9dbab0d457d0166fe3e2b73395a19", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -1,3 +1,8 @@\n+2017-12-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-interface/utils.c (gnat_internal_attribute_table): Add\n+\texclusions to the comment.\n+\n 2017-12-07  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/81544"}, {"sha": "d1f803585021e2feab28d7ce9a3f08c85b2c40b0", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -108,7 +108,7 @@ static tree fake_attribute_handler (tree *, tree, tree, int, bool *);\n const struct attribute_spec gnat_internal_attribute_table[] =\n {\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,\n-       affects_type_identity } */\n+       affects_type_identity, exclusions } */\n   { \"const\",        0, 0,  true,  false, false, handle_const_attribute,\n     false, NULL },\n   { \"nothrow\",      0, 0,  true,  false, false, handle_nothrow_attribute,"}, {"sha": "86c70d86f28795f8bba7ffda5d1293925574c853", "filename": "gcc/brig/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fbrig%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fbrig%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2FChangeLog?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -1,3 +1,7 @@\n+2017-12-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* brig-lang.c (brig_attribute_table): Fix up comment.\n+\n 2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* brigfrontend/brig-branch-inst-handler.cc"}, {"sha": "eea36a3c453e9887fbcc248fcee242695932edcf", "filename": "gcc/brig/brig-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fbrig%2Fbrig-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fbrig%2Fbrig-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrig-lang.c?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -448,7 +448,7 @@ brig_localize_identifier (const char *ident)\n const struct attribute_spec brig_attribute_table[] =\n {\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,\n-       do_diagnostic } */\n+       affects_type_identity, exclusions } */\n   { \"leaf\",\t\t      0, 0, true,  false, false,\n \t\t\t      handle_leaf_attribute, false, NULL },\n   { \"const\",                  0, 0, true,  false, false,"}, {"sha": "b8eec10086dd17a6c5b9ad272cdaa72b7f345b15", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -218,7 +218,7 @@ static tree arc_handle_fndecl_attribute (tree *, tree, tree, int, bool *);\n const struct attribute_spec arc_attribute_table[] =\n {\n  /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,\n-      affects_type_identity } */\n+      affects_type_identity, exclusions } */\n   { \"interrupt\", 1, 1, true, false, false, arc_handle_interrupt_attribute,\n       true, NULL },\n   /* Function calls made to this symbol must be done indirectly, because"}, {"sha": "fdae1469d414014909936fa6d06aa8beb14eb8b7", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -9875,7 +9875,7 @@ static const struct attribute_spec\n avr_attribute_table[] =\n {\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,\n-       affects_type_identity } */\n+       affects_type_identity, exclusions } */\n   { \"progmem\",   0, 0, false, false, false,  avr_handle_progmem_attribute,\n     false, NULL },\n   { \"signal\",    0, 0, true,  false, false,  avr_handle_fndecl_attribute,"}, {"sha": "d20c86441c14eada8e634ceba0faa9bacf4a2260", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -741,11 +741,11 @@ extern GTY(()) section * darwin_sections[NUM_DARWIN_SECTIONS];\n /* Extra attributes for Darwin.  */\n #define SUBTARGET_ATTRIBUTE_TABLE\t\t\t\t\t     \\\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,     \\\n-       affects_type_identity } */\t\t\t\t\t\t     \\\n+       affects_type_identity, exclusions } */\t\t\t\t     \\\n   { \"apple_kext_compatibility\", 0, 0, false, true, false,\t\t     \\\n-    darwin_handle_kext_attribute, false },\t\t\t\t     \\\n+    darwin_handle_kext_attribute, false, NULL },\t\t\t     \\\n   { \"weak_import\", 0, 0, true, false, false,\t\t\t\t     \\\n-    darwin_handle_weak_import_attribute, false }\n+    darwin_handle_weak_import_attribute, false, NULL }\n \n /* Make local constant labels linker-visible, so that if one follows a\n    weak_global constant, ld64 will be able to separate the atoms.  */"}, {"sha": "abc2f61854468a6aa27deaba0d12098dd1679ddd", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -448,9 +448,9 @@ do {\t\t\t\t\t\t\\\n \n #define SUBTARGET_ATTRIBUTE_TABLE \\\n   { \"selectany\", 0, 0, true, false, false, ix86_handle_selectany_attribute, \\\n-    false }\n+    false, NULL }\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,\n-       affects_type_identity } */\n+       affects_type_identity, exclusions } */\n \n /*  mcount() does not need a counter variable.  */\n #undef NO_PROFILE_COUNTERS"}, {"sha": "038a01acb00977eb5e44459c612391dba95f90f1", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -2050,7 +2050,7 @@ msp430_data_attr (tree * node,\n const struct attribute_spec msp430_attribute_table[] =\n {\n   /* Name        min_num_args     type_req,             affects_type_identity\n-                      max_num_args,     fn_type_req\n+\t\t      max_num_args,     fn_type_req\t\texclusions\n                           decl_req               handler.  */\n   { ATTR_INTR,        0, 1, true,  false, false, msp430_attr, false, NULL },\n   { ATTR_NAKED,       0, 0, true,  false, false, msp430_attr, false, NULL },"}, {"sha": "ba03c7a9961b04dfe49cd6ca86f94e096077d155", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -83,7 +83,8 @@ static const char * const nds32_intrinsic_register_names[] =\n static const struct attribute_spec nds32_attribute_table[] =\n {\n   /* Syntax: { name, min_len, max_len, decl_required, type_required,\n-\t       function_type_required, handler, affects_type_identity } */\n+\t       function_type_required, handler, affects_type_identity,\n+\t       exclusions } */\n \n   /* The interrupt vid: [0-63]+ (actual vector number starts from 9 to 72).  */\n   { \"interrupt\",    1, 64, false, false, false, NULL, false, NULL },"}, {"sha": "b9f6dcc9ded5ed24c2bfb84af8fe3de2f63c23ac", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0123db8e39de9fdcb36e9a5ad26b3039474672bd/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=0123db8e39de9fdcb36e9a5ad26b3039474672bd", "patch": "@@ -858,7 +858,7 @@ rl78_handle_saddr_attribute (tree * node,\n const struct attribute_spec rl78_attribute_table[] =\n {\n   /* Name, min_len, max_len, decl_req, type_req, fn_type_req, handler,\n-     affects_type_identity.  */\n+     affects_type_identity, exclusions.  */\n   { \"interrupt\",      0, 0, true, false, false, rl78_handle_func_attribute,\n     false, NULL },\n   { \"brk_interrupt\",  0, 0, true, false, false, rl78_handle_func_attribute,"}]}