{"sha": "1552f8745719c1b62efc50579e200c7e851924c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1MmY4NzQ1NzE5YzFiNjJlZmM1MDU3OWUyMDBjN2U4NTE5MjRjNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-06-11T13:26:19Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-06-11T13:26:19Z"}, "message": "re PR c/3116 (Bug with using oldstyle prototype declarations)\n\n\t* c-decl.c (store_parm_decls): When comparing types in an\n\told-style function declaration with those from a previous\n\tprototype, compare the unqualified versions of parameter types.\n\tFixes PR c/3116.\n\ntestsuite:\n\t* gcc.c-torture/compile/20010611-1.c: New test.\n\nFrom-SVN: r43186", "tree": {"sha": "28ef0c84630cc4987e22cb7097cb3d5b25adff66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28ef0c84630cc4987e22cb7097cb3d5b25adff66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1552f8745719c1b62efc50579e200c7e851924c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1552f8745719c1b62efc50579e200c7e851924c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1552f8745719c1b62efc50579e200c7e851924c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1552f8745719c1b62efc50579e200c7e851924c5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cff75d2efee00dc45d4b9856c7b94c6660bd6e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff75d2efee00dc45d4b9856c7b94c6660bd6e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff75d2efee00dc45d4b9856c7b94c6660bd6e90"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "c39562b2ca44b593ed8824b849c031b3e9a9363f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1552f8745719c1b62efc50579e200c7e851924c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1552f8745719c1b62efc50579e200c7e851924c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1552f8745719c1b62efc50579e200c7e851924c5", "patch": "@@ -1,3 +1,10 @@\n+2001-06-11  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-decl.c (store_parm_decls): When comparing types in an\n+\told-style function declaration with those from a previous\n+\tprototype, compare the unqualified versions of parameter types.\n+\tFixes PR c/3116.\n+\n 2001-06-11  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* doc/objc.texi: Use more logical markup.  Use TeX dashes."}, {"sha": "5d50394d551e0202554c9616fb72b4a0ebf22cb6", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1552f8745719c1b62efc50579e200c7e851924c5/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1552f8745719c1b62efc50579e200c7e851924c5/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=1552f8745719c1b62efc50579e200c7e851924c5", "patch": "@@ -6436,9 +6436,11 @@ store_parm_decls ()\n \t\t\t\t\t    \"prototype declaration\");\n \t\t  break;\n \t\t}\n-\t      /* Type for passing arg must be consistent\n-\t\t with that declared for the arg.  */\n-\t      if (! comptypes (DECL_ARG_TYPE (parm), TREE_VALUE (type)))\n+\t      /* Type for passing arg must be consistent with that\n+\t\t declared for the arg.  ISO C says we take the unqualified\n+\t\t type for parameters declared with qualified type.  */\n+\t      if (! comptypes (TYPE_MAIN_VARIANT (DECL_ARG_TYPE (parm)),\n+\t\t\t       TYPE_MAIN_VARIANT (TREE_VALUE (type))))\n \t\t{\n \t\t  if (TYPE_MAIN_VARIANT (TREE_TYPE (parm))\n \t\t      == TYPE_MAIN_VARIANT (TREE_VALUE (type)))"}, {"sha": "fd0720c740be63462418e3ac7160e054f6c3bb32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1552f8745719c1b62efc50579e200c7e851924c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1552f8745719c1b62efc50579e200c7e851924c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1552f8745719c1b62efc50579e200c7e851924c5", "patch": "@@ -1,3 +1,7 @@\n+2001-06-11  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.c-torture/compile/20010611-1.c: New test.\n+\n 2001-06-11  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.dg/c99-tag-1.c: Add more tests."}, {"sha": "87723bd497aac648438ed879cb6a88712685a128", "filename": "gcc/testsuite/gcc.c-torture/compile/20010611-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1552f8745719c1b62efc50579e200c7e851924c5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010611-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1552f8745719c1b62efc50579e200c7e851924c5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010611-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010611-1.c?ref=1552f8745719c1b62efc50579e200c7e851924c5", "patch": "@@ -0,0 +1,24 @@\n+/* Origin: PR c/3116 from Andreas Jaeger <aj@suse.de>.  */\n+/* When determining type compatibility of function types, we must remove\n+   qualifiers from argument types.  We used to fail to do this properly\n+   in store_parm_decls when comparing prototype and non-prototype\n+   declarations.  */\n+struct _IO_FILE {\n+  int _flags;\n+};\n+\n+typedef struct _IO_FILE __FILE;\n+typedef struct _IO_FILE _IO_FILE;\n+typedef long int wchar_t;\n+\n+extern wchar_t *fgetws (wchar_t *__restrict __ws, int __n,\n+                        __FILE *__restrict __stream);\n+\n+wchar_t *\n+fgetws (buf, n, fp)\n+     wchar_t *buf;\n+     int n;\n+     _IO_FILE *fp;\n+{\n+  return (wchar_t *)0;\n+}"}]}