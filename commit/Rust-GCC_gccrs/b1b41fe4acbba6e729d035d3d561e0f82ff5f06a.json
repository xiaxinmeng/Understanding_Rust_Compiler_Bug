{"sha": "b1b41fe4acbba6e729d035d3d561e0f82ff5f06a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiNDFmZTRhY2JiYTZlNzI5ZDAzNWQzZDU2MWUwZjgyZmY1ZjA2YQ==", "commit": {"author": {"name": "Clinton Popetz", "email": "cpopetz@cygnus.com", "date": "2000-03-06T21:17:44Z"}, "committer": {"name": "Clinton Popetz", "email": "cpopetz@gcc.gnu.org", "date": "2000-03-06T21:17:44Z"}, "message": "sh.c: (barrier_align): Handle a delay slot that is filled with an insn from the jump...\n\n\t* config/sh/sh.c: (barrier_align): Handle a delay slot that is\n\tfilled with an insn from the jump target.\n\nFrom-SVN: r32371", "tree": {"sha": "85c46414bfb11dcd32ce6e4dfb1d45a66a43d8be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85c46414bfb11dcd32ce6e4dfb1d45a66a43d8be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b41fe4acbba6e729d035d3d561e0f82ff5f06a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b41fe4acbba6e729d035d3d561e0f82ff5f06a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b41fe4acbba6e729d035d3d561e0f82ff5f06a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b41fe4acbba6e729d035d3d561e0f82ff5f06a/comments", "author": null, "committer": null, "parents": [{"sha": "162193477282b2ffe340203613cae8db64a500a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162193477282b2ffe340203613cae8db64a500a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/162193477282b2ffe340203613cae8db64a500a6"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "3c8feb5053bca625d120e612ff25a207dc307d52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b41fe4acbba6e729d035d3d561e0f82ff5f06a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b41fe4acbba6e729d035d3d561e0f82ff5f06a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1b41fe4acbba6e729d035d3d561e0f82ff5f06a", "patch": "@@ -1,3 +1,8 @@\n+2000-03-06  Clinton Popetz  <cpopetz@cygnus.com>\n+\n+\t* config/sh/sh.c: (barrier_align): Handle a delay slot that is\n+\tfilled with an insn from the jump target.\n+\n 2000-03-07  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x-protos.h (c4x_global_name): Constify char *."}, {"sha": "28d199cebfc264ec171a9b3cf6127c9c575ff696", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b41fe4acbba6e729d035d3d561e0f82ff5f06a/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b41fe4acbba6e729d035d3d561e0f82ff5f06a/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=b1b41fe4acbba6e729d035d3d561e0f82ff5f06a", "patch": "@@ -2711,7 +2711,7 @@ barrier_align (barrier_or_label)\n      rtx barrier_or_label;\n {\n   rtx next = next_real_insn (barrier_or_label), pat, prev;\n-  int slot, credit;\n+  int slot, credit, jump_to_next;\n  \n   if (! next)\n     return 0;\n@@ -2754,6 +2754,13 @@ barrier_align (barrier_or_label)\n \t an alignment, against that of fetching unneeded insn in front of the\n \t branch target when there is no alignment.  */\n \n+      /* There are two delay_slot cases to consider.  One is the simple case \n+\t where the preceding branch is to the insn beyond the barrier (simple \n+\t delay slot filling), and the other is where the preceding branch has \n+\t a delay slot that is a duplicate of the insn after the barrier \n+\t (fill_eager_delay_slots) and the branch is to the insn after the insn \n+\t after the barrier.  */\n+\n       /* PREV is presumed to be the JUMP_INSN for the barrier under\n \t investigation.  Skip to the insn before it.  */\n       prev = prev_real_insn (prev);\n@@ -2762,11 +2769,21 @@ barrier_align (barrier_or_label)\n \t   credit >= 0 && prev && GET_CODE (prev) == INSN;\n \t   prev = prev_real_insn (prev))\n \t{\n+\t  jump_to_next = 0;\n \t  if (GET_CODE (PATTERN (prev)) == USE\n \t      || GET_CODE (PATTERN (prev)) == CLOBBER)\n \t    continue;\n \t  if (GET_CODE (PATTERN (prev)) == SEQUENCE)\n-\t    prev = XVECEXP (PATTERN (prev), 0, 1);\n+\t    {\n+\t      prev = XVECEXP (PATTERN (prev), 0, 1);\n+\t      if (INSN_UID (prev) == INSN_UID (next)) \n+\t\t{\n+\t  \t  /* Delay slot was filled with insn at jump target.  */\n+\t\t  jump_to_next = 1;\n+\t\t  continue;\n+  \t\t}\n+\t    }\n+\n \t  if (slot &&\n \t      get_attr_in_delay_slot (prev) == IN_DELAY_SLOT_YES)\n \t    slot = 0;\n@@ -2775,7 +2792,7 @@ barrier_align (barrier_or_label)\n       if (prev\n \t  && GET_CODE (prev) == JUMP_INSN\n \t  && JUMP_LABEL (prev)\n-\t  && next_real_insn (JUMP_LABEL (prev)) == next_real_insn (barrier_or_label))\n+\t  && (jump_to_next || next_real_insn (JUMP_LABEL (prev)) == next))\n \t{\n \t  rtx pat = PATTERN (prev);\n \t  if (GET_CODE (pat) == PARALLEL)"}]}