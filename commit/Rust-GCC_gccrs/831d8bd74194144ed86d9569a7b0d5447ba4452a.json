{"sha": "831d8bd74194144ed86d9569a7b0d5447ba4452a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMxZDhiZDc0MTk0MTQ0ZWQ4NmQ5NTY5YTdiMGQ1NDQ3YmE0NDUyYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2005-11-08T08:32:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2005-11-08T08:32:26Z"}, "message": "re PR c++/21123 (ICE in cp_expr_size, at cp/cp-objcp-common.c:101)\n\n        PR c++/21123\n        * cp/method.c (use_thunk): Use build_cplus_new instead of\n        force_target_expr.\n\n        * tree.h (CALL_FROM_THUNK_P): Add CALL_EXPR_CHECK.\n\nFrom-SVN: r106634", "tree": {"sha": "808a0ca6b00e83bccc17095bf03842c6f8042886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/808a0ca6b00e83bccc17095bf03842c6f8042886"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/831d8bd74194144ed86d9569a7b0d5447ba4452a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831d8bd74194144ed86d9569a7b0d5447ba4452a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831d8bd74194144ed86d9569a7b0d5447ba4452a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831d8bd74194144ed86d9569a7b0d5447ba4452a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dfea1f6121293f7ddccc8a599ee4a70cf7a06ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfea1f6121293f7ddccc8a599ee4a70cf7a06ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfea1f6121293f7ddccc8a599ee4a70cf7a06ab7"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "bd9a3e0450441f3f2de2b53a0625d64933ae2b5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=831d8bd74194144ed86d9569a7b0d5447ba4452a", "patch": "@@ -1,3 +1,7 @@\n+2005-11-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.h (CALL_FROM_THUNK_P): Add CALL_EXPR_CHECK.\n+\n 2005-11-08  Uros Bizjak  <uros@kss-loka.si>\n \n \tPR target/19340"}, {"sha": "1b2d16661aba8ac8f9906bffdfec309b9e7b37ea", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=831d8bd74194144ed86d9569a7b0d5447ba4452a", "patch": "@@ -1,3 +1,9 @@\n+2005-11-08  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/21123\n+\t* method.c (use_thunk): Use build_cplus_new instead of \n+\tforce_target_expr.\n+\n 2005-11-06  Jason Merrill  <jason@redhat.com>\n \t    James A. Morrison <phython@gcc.gnu.org>\n "}, {"sha": "67e42ea1e0ea9139b76c467a17d8d0cb88508c68", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=831d8bd74194144ed86d9569a7b0d5447ba4452a", "patch": "@@ -502,7 +502,8 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n \t\tt = build3 (COND_EXPR, TREE_TYPE (t), cond, t,\n \t\t\t    cp_convert (TREE_TYPE (t), integer_zero_node));\n \t    }\n-\t  t = force_target_expr (TREE_TYPE (t), t);\n+\t  if (IS_AGGR_TYPE (TREE_TYPE (t)))\n+\t    t = build_cplus_new (TREE_TYPE (t), t);\n \t  finish_return_stmt (t);\n \t}\n "}, {"sha": "a6e913e59e3454b5993c33501b30f6e3e2aa6451", "filename": "gcc/testsuite/g++.dg/inherit/thunk4.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk4.C?ref=831d8bd74194144ed86d9569a7b0d5447ba4452a", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/21123\n+\n+struct A\n+{\n+  A( const A &a);\n+  const A& operator=( const A& a);\n+};\n+\n+struct B\n+{\n+  virtual A f();\n+};\n+\n+struct C : virtual B\n+{\n+  virtual A f();\n+  A a;\n+};\n+\n+A C::f() \n+{\n+  return a;\n+}"}, {"sha": "7b1796c0800fe8bb8bfa946cf13fe799472e779e", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831d8bd74194144ed86d9569a7b0d5447ba4452a/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=831d8bd74194144ed86d9569a7b0d5447ba4452a", "patch": "@@ -1023,7 +1023,7 @@ extern void tree_operand_check_failed (int, enum tree_code,\n \n /* In a CALL_EXPR, means that the call is the jump from a thunk to the\n    thunked-to function.  */\n-#define CALL_FROM_THUNK_P(NODE) ((NODE)->common.protected_flag)\n+#define CALL_FROM_THUNK_P(NODE) (CALL_EXPR_CHECK (NODE)->common.protected_flag)\n \n /* In a type, nonzero means that all objects of the type are guaranteed by the\n    language or front-end to be properly aligned, so we can indicate that a MEM"}]}